<Type Name="HealthVaultRestContentMessage&lt;TResponse&gt;" FullName="Microsoft.HealthVault.Rest.HealthVaultRestContentMessage&lt;TResponse&gt;">
  <TypeSignature Language="C#" Value="public class HealthVaultRestContentMessage&lt;TResponse&gt; : Microsoft.HealthVault.Rest.HealthVaultRestMessage&lt;TResponse&gt;, Microsoft.HealthVault.Rest.IHealthVaultRestMessageContent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HealthVaultRestContentMessage`1&lt;TResponse&gt; extends Microsoft.HealthVault.Rest.HealthVaultRestMessage`1&lt;!TResponse&gt; implements class Microsoft.HealthVault.Rest.IHealthVaultRestMessageContent" />
  <TypeSignature Language="DocId" Value="T:Microsoft.HealthVault.Rest.HealthVaultRestContentMessage`1" />
  <TypeSignature Language="VB.NET" Value="Public Class HealthVaultRestContentMessage(Of TResponse)&#xA;Inherits HealthVaultRestMessage(Of TResponse)&#xA;Implements IHealthVaultRestMessageContent" />
  <TypeSignature Language="F#" Value="type HealthVaultRestContentMessage&lt;'Response&gt; = class&#xA;    inherit HealthVaultRestMessage&lt;'Response&gt;&#xA;    interface IHealthVaultRestMessageContent" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.HealthVault</AssemblyName>
    <AssemblyVersion>1.65.0.0</AssemblyVersion>
    <AssemblyVersion>1.66.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TResponse" />
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.HealthVault.Rest.HealthVaultRestMessage&lt;TResponse&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TResponse">TResponse</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.HealthVault.Rest.IHealthVaultRestMessageContent</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TResponse">The type of the response.</typeparam>
    <summary>
            Defines a message that will be sent to the HealthVault endpoint with the specified payload that is serialized into JSON.
            </summary>
    <remarks>To be added.</remarks>
    <altmember cref="T:Microsoft.HealthVault.Rest.HealthVaultRestMessage`1" />
    <altmember cref="T:Microsoft.HealthVault.Rest.IHealthVaultRestMessageContent" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HealthVaultRestContentMessage (Uri path, Guid recordId, System.Net.Http.HttpMethod httpMethod, object content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri path, valuetype System.Guid recordId, class System.Net.Http.HttpMethod httpMethod, object content) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.Rest.HealthVaultRestContentMessage`1.#ctor(System.Uri,System.Guid,System.Net.Http.HttpMethod,System.Object)" />
      <MemberSignature Language="F#" Value="new Microsoft.HealthVault.Rest.HealthVaultRestContentMessage&lt;'Response&gt; : Uri * Guid * System.Net.Http.HttpMethod * obj -&gt; Microsoft.HealthVault.Rest.HealthVaultRestContentMessage&lt;'Response&gt;" Usage="new Microsoft.HealthVault.Rest.HealthVaultRestContentMessage&lt;'Response&gt; (path, recordId, httpMethod, content)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.Uri" />
        <Parameter Name="recordId" Type="System.Guid" />
        <Parameter Name="httpMethod" Type="System.Net.Http.HttpMethod" />
        <Parameter Name="content" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="path">The path of the REST API.</param>
        <param name="recordId">The record identifier.</param>
        <param name="httpMethod">The HTTP method to be used.</param>
        <param name="content">The content what will be serialized into JSON.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HealthVault.Rest.HealthVaultRestContentMessage`1" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public object Content { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Content" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.Rest.HealthVaultRestContentMessage`1.Content" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Content As Object" />
      <MemberSignature Language="F#" Value="member this.Content : obj" Usage="Microsoft.HealthVault.Rest.HealthVaultRestContentMessage&lt;'Response&gt;.Content" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.HealthVault.Rest.IHealthVaultRestMessageContent.Content</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>