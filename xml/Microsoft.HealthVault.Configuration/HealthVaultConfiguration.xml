<Type Name="HealthVaultConfiguration" FullName="Microsoft.HealthVault.Configuration.HealthVaultConfiguration">
  <TypeSignature Language="C#" Value="public class HealthVaultConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HealthVaultConfiguration extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.HealthVault.Configuration.HealthVaultConfiguration" />
  <TypeSignature Language="VB.NET" Value="Public Class HealthVaultConfiguration" />
  <TypeSignature Language="F#" Value="type HealthVaultConfiguration = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.HealthVault</AssemblyName>
    <AssemblyVersion>1.65.0.0</AssemblyVersion>
    <AssemblyVersion>1.66.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Gives access to the configuration file for the application and
            exposes some of the settings directly.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HealthVaultConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.Configuration.HealthVaultConfiguration.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Create instance of HealthVaultConfiguration with default values as defined at <see cref="T:Microsoft.HealthVault.Configuration.HealthVaultConfigurationDefaults" /></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultHealthVaultShellUrl">
      <MemberSignature Language="C#" Value="public Uri DefaultHealthVaultShellUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri DefaultHealthVaultShellUrl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.Configuration.HealthVaultConfiguration.DefaultHealthVaultShellUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultHealthVaultShellUrl As Uri" />
      <MemberSignature Language="F#" Value="member this.DefaultHealthVaultShellUrl : Uri with get, set" Usage="Microsoft.HealthVault.Configuration.HealthVaultConfiguration.DefaultHealthVaultShellUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the HealthVault Shell URL for
            the configured default instance of the HealthVault web-service.
            ( ex: https://account.healthvault.com )
            </summary>
        <value>To be added.</value>
        <remarks>
            This may be overwritten if an environment instance bounce happens.
            This property corresponds to the "HV_ShellUrl" configuration value when reading from web.config.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultHealthVaultUrl">
      <MemberSignature Language="C#" Value="public Uri DefaultHealthVaultUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri DefaultHealthVaultUrl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.Configuration.HealthVaultConfiguration.DefaultHealthVaultUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultHealthVaultUrl As Uri" />
      <MemberSignature Language="F#" Value="member this.DefaultHealthVaultUrl : Uri with get, set" Usage="Microsoft.HealthVault.Configuration.HealthVaultConfiguration.DefaultHealthVaultUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the root URL for the default instance of the
            HealthVault web-service. ( ex: https://platform.healthvault.com/platform/ )
            </summary>
        <value>To be added.</value>
        <remarks>
            This may be overwritten if an environment instance bounce happens.
            This property corresponds to the "HV_HealthServiceUrl" configuration value when reading from web.config.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="InlineBlobHashBlockSize">
      <MemberSignature Language="C#" Value="public int InlineBlobHashBlockSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InlineBlobHashBlockSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.Configuration.HealthVaultConfiguration.InlineBlobHashBlockSize" />
      <MemberSignature Language="VB.NET" Value="Public Property InlineBlobHashBlockSize As Integer" />
      <MemberSignature Language="F#" Value="member this.InlineBlobHashBlockSize : int with get, set" Usage="Microsoft.HealthVault.Configuration.HealthVaultConfiguration.InlineBlobHashBlockSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the size in bytes of the block used to hash inlined BLOB data.
            </summary>
        <value>To be added.</value>
        <remarks>
            This property corresponds to the "HV_DefaultInlineBlobHashBlockSize" configuration value when reading from web.config.
            The value defaults to 2MB.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMultiRecordApp">
      <MemberSignature Language="C#" Value="public bool IsMultiRecordApp { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMultiRecordApp" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.Configuration.HealthVaultConfiguration.IsMultiRecordApp" />
      <MemberSignature Language="VB.NET" Value="Public Property IsMultiRecordApp As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsMultiRecordApp : bool with get, set" Usage="Microsoft.HealthVault.Configuration.HealthVaultConfiguration.IsMultiRecordApp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the value which indicates whether the application marked as multi record
            </summary>
        <value>To be added.</value>
        <remarks>
            This property corresponds to the "HV_IsMRA" configuration value when reading from web.config.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MasterApplicationId">
      <MemberSignature Language="C#" Value="public Guid MasterApplicationId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid MasterApplicationId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.Configuration.HealthVaultConfiguration.MasterApplicationId" />
      <MemberSignature Language="VB.NET" Value="Public Property MasterApplicationId As Guid" />
      <MemberSignature Language="F#" Value="member this.MasterApplicationId : Guid with get, set" Usage="Microsoft.HealthVault.Configuration.HealthVaultConfiguration.MasterApplicationId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the application's unique identifier.
            </summary>
        <value>To be added.</value>
        <remarks>
            This property corresponds to the "HV_ApplicationId" configuration value when reading from web.config.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiInstanceAware">
      <MemberSignature Language="C#" Value="public bool MultiInstanceAware { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MultiInstanceAware" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.Configuration.HealthVaultConfiguration.MultiInstanceAware" />
      <MemberSignature Language="VB.NET" Value="Public Property MultiInstanceAware As Boolean" />
      <MemberSignature Language="F#" Value="member this.MultiInstanceAware : bool with get, set" Usage="Microsoft.HealthVault.Configuration.HealthVaultConfiguration.MultiInstanceAware" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets the value which indicates whether the application is able to handle connecting to multiple
             instances of the HealthVault web-service.
             </summary>
        <value>To be added.</value>
        <remarks>
             This property corresponds to the "HV_MultiInstanceAware" configuration value when reading from web.config.
             This property defaults to true
             <p>
             Applications in HealthVault can be configured to support more than one instance of the HealthVault web-service.
             In such a case, and when the MultiInstanceAware configuration is set to <b>true</b>, all redirects generated
             through the HealthVault .NET API will have a flag set indicating that the application is able to deal with
             HealthVault accounts that may reside in other HealthVault instances.  In such a case, HealthVault Shell can
             redirect back with an account associated with any one of the instances of the HealthVault web-service which
             the application has chosen to support.  The application may then need to be able to handle connecting to the
             appropriate instance of the HealthVault web-service for each account.
             </p><p>
             For more information see the <a href="http://go.microsoft.com/?linkid=9830913">Global HealthVault Architecture</a> article.
             </p></remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestTimeoutDuration">
      <MemberSignature Language="C#" Value="public TimeSpan RequestTimeoutDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan RequestTimeoutDuration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.Configuration.HealthVaultConfiguration.RequestTimeoutDuration" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestTimeoutDuration As TimeSpan" />
      <MemberSignature Language="F#" Value="member this.RequestTimeoutDuration : TimeSpan with get, set" Usage="Microsoft.HealthVault.Configuration.HealthVaultConfiguration.RequestTimeoutDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the request timeout
            </summary>
        <value>To be added.</value>
        <remarks>
            This value is used to set the <see cref="T:System.Threading.Timeout" /> property
            when making the request to HealthVault. The timeout is the number of seconds that a
            request will wait for a response from HealtVault. If the method response is not
            returned within the time-out period the request will throw a <see cref="T:Microsoft.HealthVault.Exceptions.HealthHttpException" />
            with the <see cref="P:Microsoft.HealthVault.Exceptions.HealthHttpException.StatusCode">Status</see> property set to
            <see cref="T:System.Threading.Timeout" />.
            This property corresponds to the "HV_DefaultRequestTimeoutSeconds" configuration value when reading from web.config.
            The value defaults to 30 seconds.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestTimeToLiveDuration">
      <MemberSignature Language="C#" Value="public TimeSpan RequestTimeToLiveDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan RequestTimeToLiveDuration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.Configuration.HealthVaultConfiguration.RequestTimeToLiveDuration" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestTimeToLiveDuration As TimeSpan" />
      <MemberSignature Language="F#" Value="member this.RequestTimeToLiveDuration : TimeSpan with get, set" Usage="Microsoft.HealthVault.Configuration.HealthVaultConfiguration.RequestTimeToLiveDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the request time to live.
            </summary>
        <value>To be added.</value>
        <remarks>
            This property defines the "msg-ttl" in the HealthVault request header XML. It determines
            how long the same XML can be used before HealthVault determines the request invalid.
            This property corresponds to the "HV_DefaultRequestTimeToLiveSeconds" configuration value when reading from web.config.
            The value defaults to 1800 seconds.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="RestHealthVaultUrl">
      <MemberSignature Language="C#" Value="public Uri RestHealthVaultUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri RestHealthVaultUrl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.Configuration.HealthVaultConfiguration.RestHealthVaultUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property RestHealthVaultUrl As Uri" />
      <MemberSignature Language="F#" Value="member this.RestHealthVaultUrl : Uri with get, set" Usage="Microsoft.HealthVault.Configuration.HealthVaultConfiguration.RestHealthVaultUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets the root URL for a default instance of the
             Rest HealthVault service
             </summary>
        <value>To be added.</value>
        <remarks>
             This property corresponds to the "HV_RestHealthServiceUrl" configuration value when reading from web.config.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="RetryOnInternal500Count">
      <MemberSignature Language="C#" Value="public int RetryOnInternal500Count { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RetryOnInternal500Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.Configuration.HealthVaultConfiguration.RetryOnInternal500Count" />
      <MemberSignature Language="VB.NET" Value="Public Property RetryOnInternal500Count As Integer" />
      <MemberSignature Language="F#" Value="member this.RetryOnInternal500Count : int with get, set" Usage="Microsoft.HealthVault.Configuration.HealthVaultConfiguration.RetryOnInternal500Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the number of retries the .NET APIs will make when getting an internal
            error response (error 500) from HealthVault.
            </summary>
        <value>To be added.</value>
        <remarks>
            This property corresponds to the "HV_RequestRetryOnInternal500Count" configuration value when reading from web.config.
            The value defaults to 2.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="RetryOnInternal500SleepDuration">
      <MemberSignature Language="C#" Value="public TimeSpan RetryOnInternal500SleepDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan RetryOnInternal500SleepDuration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.Configuration.HealthVaultConfiguration.RetryOnInternal500SleepDuration" />
      <MemberSignature Language="VB.NET" Value="Public Property RetryOnInternal500SleepDuration As TimeSpan" />
      <MemberSignature Language="F#" Value="member this.RetryOnInternal500SleepDuration : TimeSpan with get, set" Usage="Microsoft.HealthVault.Configuration.HealthVaultConfiguration.RetryOnInternal500SleepDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the sleep duration between retries due to HealthVault returning
            an internal error (error 500).
            </summary>
        <value>To be added.</value>
        <remarks>
            This property corresponds to the "HV_RequestRetryOnInternal500SleepSeconds" configuration value when reading from web.config.
            The value defaults to 1 second.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportedTypeVersions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Guid&gt; SupportedTypeVersions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype System.Guid&gt; SupportedTypeVersions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.Configuration.HealthVaultConfiguration.SupportedTypeVersions" />
      <MemberSignature Language="VB.NET" Value="Public Property SupportedTypeVersions As IList(Of Guid)" />
      <MemberSignature Language="F#" Value="member this.SupportedTypeVersions : System.Collections.Generic.IList&lt;Guid&gt; with get, set" Usage="Microsoft.HealthVault.Configuration.HealthVaultConfiguration.SupportedTypeVersions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Guid&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the type version identifiers of types supported by this application.
            </summary>
        <value>To be added.</value>
        <remarks>
            Although most applications don't need this configuration setting, if an application
            calls <see cref="!:HealthRecordAccessor.GetItemAsync(System.Guid,ThingSections)" /> or makes any query to HealthVault
            that doesn't specify the type identifier in the filter, this configuration setting
            will tell HealthVault the format of the type to reply with. For example, if a web
            application has two servers and makes a call to GetItemAsync for EncounterV1 and the
            application authorization is set to the EncounterV1 format then the application will
            get EncounterV1 instances back even if the record contains Encounter v2 instances. Now
            the application wants to upgrade to Encounter v2 without having application down-time.
            In order to do this, one of the application servers must be updated to Encounter v2 while
            the other still works with EncounterV1. If we were to rely solely on application
            authorization one of the servers would be broken during the upgrade. However, by using
            this configuration value to specify what type version the server supports (rather than
            the application), then both servers can continue to work while the application is
            upgraded.
            This property corresponds to the "HV_SupportedTypeVersions" configuration value when reading from web.config.
            </remarks>
        <exception cref="T:Microsoft.HealthVault.Exceptions.InvalidConfigurationException">
            If the configuration contains the name of a type that is not registered as a type handler
            in <see cref="T:Microsoft.HealthVault.Thing.ItemTypeManager" />.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="UseLegacyTypeVersionSupport">
      <MemberSignature Language="C#" Value="public bool UseLegacyTypeVersionSupport { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseLegacyTypeVersionSupport" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.Configuration.HealthVaultConfiguration.UseLegacyTypeVersionSupport" />
      <MemberSignature Language="VB.NET" Value="Public Property UseLegacyTypeVersionSupport As Boolean" />
      <MemberSignature Language="F#" Value="member this.UseLegacyTypeVersionSupport : bool with get, set" Usage="Microsoft.HealthVault.Configuration.HealthVaultConfiguration.UseLegacyTypeVersionSupport" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets a value indicating whether or not legacy type versioning support should be used.
             </summary>
        <value>To be added.</value>
        <remarks>
             Type versions support was initially determined by an applications base authorizations
             and/or the <see cref="P:Microsoft.HealthVault.Thing.HealthRecordView.TypeVersionFormat" />. Some of these behaviors
             were unexpected which led to changes to automatically put the <see cref="P:Microsoft.HealthVault.Thing.ThingQuery.TypeIds" />
             and <see cref="P:Microsoft.HealthVault.Configuration.HealthVaultConfiguration.SupportedTypeVersions" /> into the
             <see cref="P:Microsoft.HealthVault.Thing.HealthRecordView.TypeVersionFormat" /> automatically for developers. This
             exhibits the expected behavior for most applications. However, in some rare cases
             applications may need to revert back to the original behavior. When this property
             returns true the original behavior will be observed. If false, the new behavior will
             be observed.
             This property corresponds to the "HV_SupportedTypeVersions" configuration value when reading from web.config.
             This property defaults to false
             </remarks>
      </Docs>
    </Member>
  </Members>
</Type>