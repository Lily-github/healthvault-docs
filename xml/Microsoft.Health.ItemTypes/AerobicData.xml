<Type Name="AerobicData" FullName="Microsoft.Health.ItemTypes.AerobicData">
  <TypeSignature Language="C#" Value="public class AerobicData : Microsoft.Health.ItemTypes.HealthRecordItemData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AerobicData extends Microsoft.Health.ItemTypes.HealthRecordItemData" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Health.ItemTypes.AerobicData" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
    <AssemblyVersion>2.64.0.0</AssemblyVersion>
    <AssemblyVersion>2.68.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Health.ItemTypes.HealthRecordItemData</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents data about an aerobic session.
            </summary>
    <remarks>
            Aerobic data can represent the data for an entire session, the data
            for a single lap, or the desired aerobic session for an aerobic goal.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AerobicData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.AerobicData.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.AerobicData" /> class with 
            default values.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AerobicStepMinutes">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; AerobicStepMinutes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;float64&gt; AerobicStepMinutes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.AerobicData.AerobicStepMinutes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the number of aerobic minutes during the session.
            </summary>
        <value>To be added.</value>
        <remarks>
            Set the value to <b>null</b> if there are no readings indicating the number of 
            aerobic minutes.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="AverageAltitude">
      <MemberSignature Language="C#" Value="public Microsoft.Health.ItemTypes.AltitudeMeasurement AverageAltitude { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Health.ItemTypes.AltitudeMeasurement AverageAltitude" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.AerobicData.AverageAltitude" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ItemTypes.AltitudeMeasurement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the average altitude, in meters above sea level, 
            during the session.
            </summary>
        <value>To be added.</value>
        <remarks>
            Negative values indicate the meters below sea level.
            Set the value to <b>null</b> if there is no altitude reading.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="AverageCadence">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; AverageCadence { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;float64&gt; AverageCadence" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.AerobicData.AverageCadence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the average cadence, in revolutions per minute (rpm), 
            during the session.
            </summary>
        <value>To be added.</value>
        <remarks>
            Set the value to <b>null</b> if there is no cadence reading.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value" /> parameter is negative or zero when set.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AverageHeartRate">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; AverageHeartRate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; AverageHeartRate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.AerobicData.AverageHeartRate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the average heart rate for the session.
            </summary>
        <value>To be added.</value>
        <remarks>
            If there is no heart rate data for the session, the value should
            be set to <b>null</b>.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value" /> parameter is less than or equal to zero on set.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AveragePace">
      <MemberSignature Language="C#" Value="public Microsoft.Health.ItemTypes.PaceMeasurement AveragePace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Health.ItemTypes.PaceMeasurement AveragePace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.AerobicData.AveragePace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ItemTypes.PaceMeasurement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the average pace, in seconds per 100 meters, during the session.
            </summary>
        <value>To be added.</value>
        <remarks>
            Set the value to <b>null</b> if there is no pace reading.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="AveragePower">
      <MemberSignature Language="C#" Value="public Microsoft.Health.ItemTypes.PowerMeasurement AveragePower { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Health.ItemTypes.PowerMeasurement AveragePower" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.AerobicData.AveragePower" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ItemTypes.PowerMeasurement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the average power, in watts, during the session.
            </summary>
        <value>To be added.</value>
        <remarks>
            Set the value to <b>null</b> if there is no power reading.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="AverageSpeed">
      <MemberSignature Language="C#" Value="public Microsoft.Health.ItemTypes.SpeedMeasurement AverageSpeed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Health.ItemTypes.SpeedMeasurement AverageSpeed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.AerobicData.AverageSpeed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ItemTypes.SpeedMeasurement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the average speed, in meters per second, during the 
            session.
            </summary>
        <value>To be added.</value>
        <remarks>
            Set the value to <b>null</b> if there is no speed reading.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="AverageTemperature">
      <MemberSignature Language="C#" Value="public Microsoft.Health.ItemTypes.TemperatureMeasurement AverageTemperature { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Health.ItemTypes.TemperatureMeasurement AverageTemperature" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.AerobicData.AverageTemperature" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ItemTypes.TemperatureMeasurement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the average temperature, in degrees Celsius (C), 
            during the session.
            </summary>
        <value>To be added.</value>
        <remarks>
            Set the value to <b>null</b> if there is no temperature reading.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="AverageTorque">
      <MemberSignature Language="C#" Value="public Microsoft.Health.ItemTypes.TorqueMeasurement AverageTorque { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Health.ItemTypes.TorqueMeasurement AverageTorque" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.AerobicData.AverageTorque" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ItemTypes.TorqueMeasurement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the average torque, in newton meters, during the session.
            </summary>
        <value>To be added.</value>
        <remarks>
            Set the value to <b>null</b> if there is no torque reading.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Distance">
      <MemberSignature Language="C#" Value="public Microsoft.Health.ItemTypes.Length Distance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Health.ItemTypes.Length Distance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.AerobicData.Distance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ItemTypes.Length</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the length traversed by this aerobic session.
            </summary>
        <value>
            A <see cref="T:Microsoft.Health.ItemTypes.Length" /> value representing the distance.
            </value>
        <remarks>
            Set the value to <b>null</b> if there is no distance.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; Duration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;float64&gt; Duration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.AerobicData.Duration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the duration of the session in minutes.
            </summary>
        <value>To be added.</value>
        <remarks>
            Set the value to <b>null</b> if there is no duration.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value" /> parameter is negative or zero when set.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="DurationAsTimeSpan">
      <MemberSignature Language="C#" Value="public TimeSpan DurationAsTimeSpan { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DurationAsTimeSpan" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.AerobicData.DurationAsTimeSpan" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the duration of the aerobic session as a 
            <see cref="T:System.TimeSpan" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ElevationGain">
      <MemberSignature Language="C#" Value="public Microsoft.Health.ItemTypes.Length ElevationGain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Health.ItemTypes.Length ElevationGain" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.AerobicData.ElevationGain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ItemTypes.Length</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the elevation gained, in meters, during the session.
            </summary>
        <value>To be added.</value>
        <remarks>
            Set the value to <b>null</b> if there is no elevation gain reading.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElevationLoss">
      <MemberSignature Language="C#" Value="public Microsoft.Health.ItemTypes.Length ElevationLoss { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Health.ItemTypes.Length ElevationLoss" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.AerobicData.ElevationLoss" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ItemTypes.Length</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the elevation lossed, in meters, during the session.
            </summary>
        <value>To be added.</value>
        <remarks>
            Set the value to <b>null</b> if there is no elevation loss reading.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Energy">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; Energy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;float64&gt; Energy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.AerobicData.Energy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the food energy consumed during the session.
            </summary>
        <value>To be added.</value>
        <remarks>
            The energy consumed is measured in kilojoules.
            Set the value to <b>null</b> if there is no energy reading.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value" /> parameter is negative or zero when set.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="EnergyFromFat">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; EnergyFromFat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;float64&gt; EnergyFromFat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.AerobicData.EnergyFromFat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the energy from fat consumed during the session.
            </summary>
        <value>To be added.</value>
        <remarks>
            The energy consumed is measured in kilojoules.
            Set the value to <b>null</b> if there is no energy from fat reading.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value" /> parameter is negative or zero when set.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Intensity">
      <MemberSignature Language="C#" Value="public Microsoft.Health.ItemTypes.RelativeRating Intensity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Health.ItemTypes.RelativeRating Intensity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.AerobicData.Intensity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ItemTypes.RelativeRating</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the relative intensity of the session.
            </summary>
        <value>To be added.</value>
        <remarks>
            Set the value to <see cref="F:Microsoft.Health.ItemTypes.RelativeRating.None" /> if there is 
            no intensity.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="LeftRightBalance">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; LeftRightBalance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;float64&gt; LeftRightBalance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.AerobicData.LeftRightBalance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the balance between left and right strokes.
            </summary>
        <value>To be added.</value>
        <remarks>
            The value is a percentage where the indicated value is the 
            percentage of the left stroke. The remaining percentage is
            the right stroke.
            Set the value to <b>null</b> if there is no balance reading.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value" /> parameter is negative or greater than one when set.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="MinAltitude">
      <MemberSignature Language="C#" Value="public Microsoft.Health.ItemTypes.AltitudeMeasurement MinAltitude { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Health.ItemTypes.AltitudeMeasurement MinAltitude" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.AerobicData.MinAltitude" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ItemTypes.AltitudeMeasurement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the minimum altitude, in meters above sea level, 
            during the session.
            </summary>
        <value>To be added.</value>
        <remarks>
            Negative values indicate the meters below sea level.
            Set the value to <b>null</b> if there is no altitude reading.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinCadence">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; MinCadence { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;float64&gt; MinCadence" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.AerobicData.MinCadence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the minimum cadence, in revolutions per minute (rpm), 
            during the session.
            </summary>
        <value>To be added.</value>
        <remarks>
            Set the value to <b>null</b> if there is no cadence reading.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value" /> parameter is negative or zero when set.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="MinHeartRate">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; MinHeartRate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; MinHeartRate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.AerobicData.MinHeartRate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the minimum heart rate for the session.
            </summary>
        <value>To be added.</value>
        <remarks>
            If there is no heart rate data for the session, the value should
            be set to <b>null</b>.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value" /> parameter is less than or equal to 
            zero when set.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="MinPace">
      <MemberSignature Language="C#" Value="public Microsoft.Health.ItemTypes.PaceMeasurement MinPace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Health.ItemTypes.PaceMeasurement MinPace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.AerobicData.MinPace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ItemTypes.PaceMeasurement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the minimum pace, in seconds per 100 meters, during the session.
            </summary>
        <value>To be added.</value>
        <remarks>
            Set the value to <b>null</b> if there is no pace reading.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinPower">
      <MemberSignature Language="C#" Value="public Microsoft.Health.ItemTypes.PowerMeasurement MinPower { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Health.ItemTypes.PowerMeasurement MinPower" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.AerobicData.MinPower" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ItemTypes.PowerMeasurement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the minimum power, in watts, during the session.
            </summary>
        <value>To be added.</value>
        <remarks>
            Set the value to <b>null</b> if there is no power reading.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinSpeed">
      <MemberSignature Language="C#" Value="public Microsoft.Health.ItemTypes.SpeedMeasurement MinSpeed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Health.ItemTypes.SpeedMeasurement MinSpeed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.AerobicData.MinSpeed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ItemTypes.SpeedMeasurement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the minimum speed, in meters per second, during the 
            session.
            </summary>
        <value>To be added.</value>
        <remarks>
            Set the value to <b>null</b> if there is no speed reading.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinTemperature">
      <MemberSignature Language="C#" Value="public Microsoft.Health.ItemTypes.TemperatureMeasurement MinTemperature { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Health.ItemTypes.TemperatureMeasurement MinTemperature" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.AerobicData.MinTemperature" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ItemTypes.TemperatureMeasurement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the minimum temperature, in degrees Celsius (C), 
            during the session.
            </summary>
        <value>To be added.</value>
        <remarks>
            Set the value to <b>null</b> if there is no temperature reading.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinTorque">
      <MemberSignature Language="C#" Value="public Microsoft.Health.ItemTypes.TorqueMeasurement MinTorque { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Health.ItemTypes.TorqueMeasurement MinTorque" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.AerobicData.MinTorque" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ItemTypes.TorqueMeasurement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the minimum torque, in newton meters, during the session.
            </summary>
        <value>To be added.</value>
        <remarks>
            Set the value to <b>null</b> if there is no torque reading.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public Microsoft.Health.ItemTypes.CodableValue Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Health.ItemTypes.CodableValue Mode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.AerobicData.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ItemTypes.CodableValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the mode by which the aerobic session occurred.
            </summary>
        <value>To be added.</value>
        <remarks>
            The mode of the aerobic session include actions such as bike, run, or
            swim and are defined by the HealthVault dictionary.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfAerobicSteps">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; NumberOfAerobicSteps { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; NumberOfAerobicSteps" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.AerobicData.NumberOfAerobicSteps" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the number of aerobic steps taken during the session.
            </summary>
        <value>To be added.</value>
        <remarks>
            Set the value to <b>null</b> if there is no aerobic step readings.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfSteps">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; NumberOfSteps { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; NumberOfSteps" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.AerobicData.NumberOfSteps" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the number of steps taken during the session.
            </summary>
        <value>To be added.</value>
        <remarks>
            Set the value to <b>null</b> if there is no step readings.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseXml">
      <MemberSignature Language="C#" Value="public override void ParseXml (System.Xml.XPath.XPathNavigator navigator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ParseXml(class System.Xml.XPath.XPathNavigator navigator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.AerobicData.ParseXml(System.Xml.XPath.XPathNavigator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="navigator"> 
            The XML node representing the length.
            </param>
        <summary> 
            Populates the data for the length from the XML.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            The <paramref name="navigator" /> parameter is <b>null</b>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="PeakAltitude">
      <MemberSignature Language="C#" Value="public Microsoft.Health.ItemTypes.AltitudeMeasurement PeakAltitude { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Health.ItemTypes.AltitudeMeasurement PeakAltitude" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.AerobicData.PeakAltitude" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ItemTypes.AltitudeMeasurement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the peak altitude, in meters above sea level, during 
            the session.
            </summary>
        <value>To be added.</value>
        <remarks>
            Negative values indicate the meters below sea level.
            Set the value to <b>null</b> if there is no altitude reading.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="PeakCadence">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; PeakCadence { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;float64&gt; PeakCadence" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.AerobicData.PeakCadence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the peak cadence, in revolutions per minute (rpm), 
            during the session.
            </summary>
        <value>To be added.</value>
        <remarks>
            Set the value to <b>null</b> if there is no cadence reading.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value" /> parameter is negative or zero when set.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="PeakHeartRate">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; PeakHeartRate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; PeakHeartRate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.AerobicData.PeakHeartRate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the peak heart rate for the session.
            </summary>
        <value>To be added.</value>
        <remarks>
            If there is no heart rate data for the session, the value should
            be set to <b>null</b>.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value" /> parameter is less than or equal to zero on set.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="PeakPace">
      <MemberSignature Language="C#" Value="public Microsoft.Health.ItemTypes.PaceMeasurement PeakPace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Health.ItemTypes.PaceMeasurement PeakPace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.AerobicData.PeakPace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ItemTypes.PaceMeasurement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the peak pace, in seconds per 100 meters, during the session.
            </summary>
        <value>To be added.</value>
        <remarks>
            Set the value to <b>null</b> if there is no pace reading.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="PeakPower">
      <MemberSignature Language="C#" Value="public Microsoft.Health.ItemTypes.PowerMeasurement PeakPower { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Health.ItemTypes.PowerMeasurement PeakPower" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.AerobicData.PeakPower" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ItemTypes.PowerMeasurement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the peak power, in watts, during the session.
            </summary>
        <value>To be added.</value>
        <remarks>
            Set the value to <b>null</b> if there is no power reading.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="PeakSpeed">
      <MemberSignature Language="C#" Value="public Microsoft.Health.ItemTypes.SpeedMeasurement PeakSpeed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Health.ItemTypes.SpeedMeasurement PeakSpeed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.AerobicData.PeakSpeed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ItemTypes.SpeedMeasurement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the peak speed, in meters per second, during the 
            session.
            </summary>
        <value>To be added.</value>
        <remarks>
            Set the value to <b>null</b> if there is no speed reading.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="PeakTemperature">
      <MemberSignature Language="C#" Value="public Microsoft.Health.ItemTypes.TemperatureMeasurement PeakTemperature { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Health.ItemTypes.TemperatureMeasurement PeakTemperature" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.AerobicData.PeakTemperature" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ItemTypes.TemperatureMeasurement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the peak temperature, in degrees Celsius (C), during 
            the session.
            </summary>
        <value>To be added.</value>
        <remarks>
            Set the value to <b>null</b> if there is no temperature reading.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="PeakTorque">
      <MemberSignature Language="C#" Value="public Microsoft.Health.ItemTypes.TorqueMeasurement PeakTorque { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Health.ItemTypes.TorqueMeasurement PeakTorque" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.AerobicData.PeakTorque" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ItemTypes.TorqueMeasurement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the peak torque, in newton meters, during the session.
            </summary>
        <value>To be added.</value>
        <remarks>
            Set the value to <b>null</b> if there is no torque reading.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.AerobicData.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets a summary of the aerobic data.
            </summary>
        <returns>
            A string summary of the aerobic data.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public override void WriteXml (string nodeName, System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteXml(string nodeName, class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.AerobicData.WriteXml(System.String,System.Xml.XmlWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeName" Type="System.String" />
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="nodeName">
            The name of the outer element for the aerobic data.
            </param>
        <param name="writer"> 
            The XmlWriter to write the aerobic data to.
            </param>
        <summary> 
            Writes the aerobic data to the specified XML writer.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
            The <paramref name="nodeName" /> parameter is <b>null</b> or empty.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer" /> parameter is <b>null</b>.
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>