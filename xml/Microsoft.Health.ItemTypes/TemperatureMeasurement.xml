<Type Name="TemperatureMeasurement" FullName="Microsoft.Health.ItemTypes.TemperatureMeasurement">
  <TypeSignature Language="C#" Value="public class TemperatureMeasurement : Microsoft.Health.ItemTypes.Measurement&lt;double&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TemperatureMeasurement extends Microsoft.Health.ItemTypes.Measurement`1&lt;float64&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Health.ItemTypes.TemperatureMeasurement" />
  <TypeSignature Language="VB.NET" Value="Public Class TemperatureMeasurement&#xA;Inherits Measurement(Of Double)" />
  <TypeSignature Language="F#" Value="type TemperatureMeasurement = class&#xA;    inherit Measurement&lt;double&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
    <AssemblyVersion>2.64.0.0</AssemblyVersion>
    <AssemblyVersion>2.68.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Health.ItemTypes.Measurement&lt;System.Double&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="MeasurementType">System.Double</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents a temperature measurement and display.
            </summary>
    <remarks>
            In HealthVault, temperature measurements have values and display values. 
            All values are stored in a base unit of degrees Celsius (C). 
            An application can take a pace value using any scale the application 
            chooses and can store the user-entered value as the display value, 
            but the temperature value must be converted to degrees Celsius to be stored in 
            HealthVault.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TemperatureMeasurement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.TemperatureMeasurement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.TemperatureMeasurement" /> 
            class with empty values.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TemperatureMeasurement (double celsius);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 celsius) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.TemperatureMeasurement.#ctor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (celsius As Double)" />
      <MemberSignature Language="F#" Value="new Microsoft.Health.ItemTypes.TemperatureMeasurement : double -&gt; Microsoft.Health.ItemTypes.TemperatureMeasurement" Usage="new Microsoft.Health.ItemTypes.TemperatureMeasurement celsius" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="celsius" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="celsius">
            The temperature in degrees Celsius.
            </param>
        <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.TemperatureMeasurement" /> 
            class with the specified value in degrees Celsius.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TemperatureMeasurement (double celsius, Microsoft.Health.ItemTypes.DisplayValue displayValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 celsius, class Microsoft.Health.ItemTypes.DisplayValue displayValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.TemperatureMeasurement.#ctor(System.Double,Microsoft.Health.ItemTypes.DisplayValue)" />
      <MemberSignature Language="F#" Value="new Microsoft.Health.ItemTypes.TemperatureMeasurement : double * Microsoft.Health.ItemTypes.DisplayValue -&gt; Microsoft.Health.ItemTypes.TemperatureMeasurement" Usage="new Microsoft.Health.ItemTypes.TemperatureMeasurement (celsius, displayValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="celsius" Type="System.Double" />
        <Parameter Name="displayValue" Type="Microsoft.Health.ItemTypes.DisplayValue" />
      </Parameters>
      <Docs>
        <param name="celsius">
            The temperature in degrees Celsius.
            </param>
        <param name="displayValue">
            The display value of the temperature. This should contain the
            exact temperature as entered by the user even if it uses some
            other unit of measure besides degrees Celsius. The display value
            <see cref="P:Microsoft.Health.ItemTypes.DisplayValue.Units" /> and 
            <see cref="P:Microsoft.Health.ItemTypes.DisplayValue.UnitsCode" /> 
            represents the unit of measure for the user-entered value.
            </param>
        <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.TemperatureMeasurement" /> 
            class with the specified value in degrees Celsius and optional display value.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssertMeasurementValue">
      <MemberSignature Language="C#" Value="protected override void AssertMeasurementValue (double value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AssertMeasurementValue(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.TemperatureMeasurement.AssertMeasurementValue(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AssertMeasurementValue (value As Double)" />
      <MemberSignature Language="F#" Value="override this.AssertMeasurementValue : double -&gt; unit" Usage="temperatureMeasurement.AssertMeasurementValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
            The temperature measurement.
            </param>
        <summary>
            Verifies that the value is a legal temperature value.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value" /> parameter is less than or equal to zero.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetValueString">
      <MemberSignature Language="C#" Value="protected override string GetValueString (double value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetValueString(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.TemperatureMeasurement.GetValueString(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetValueString (value As Double) As String" />
      <MemberSignature Language="F#" Value="override this.GetValueString : double -&gt; string" Usage="temperatureMeasurement.GetValueString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
            Gets a string representation of the temperature in the base units.
            </summary>
        <returns>
            The temperature as a string in the base units.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseValueXml">
      <MemberSignature Language="C#" Value="protected override void ParseValueXml (System.Xml.XPath.XPathNavigator navigator);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ParseValueXml(class System.Xml.XPath.XPathNavigator navigator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.TemperatureMeasurement.ParseValueXml(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ParseValueXml (navigator As XPathNavigator)" />
      <MemberSignature Language="F#" Value="override this.ParseValueXml : System.Xml.XPath.XPathNavigator -&gt; unit" Usage="temperatureMeasurement.ParseValueXml navigator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="navigator"> 
            The XML node representing the temperature.
            </param>
        <summary> 
            Populates the data for the temperature from the XML.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteValueXml">
      <MemberSignature Language="C#" Value="protected override void WriteValueXml (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WriteValueXml(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.TemperatureMeasurement.WriteValueXml(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WriteValueXml (writer As XmlWriter)" />
      <MemberSignature Language="F#" Value="override this.WriteValueXml : System.Xml.XmlWriter -&gt; unit" Usage="temperatureMeasurement.WriteValueXml writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer"> 
            The XmlWriter to write the temperature to.
            </param>
        <summary> 
            Writes the temperature to the specified XML writer.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>