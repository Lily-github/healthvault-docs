<Type Name="Message" FullName="Microsoft.Health.ItemTypes.Message">
  <TypeSignature Language="C#" Value="public class Message : Microsoft.Health.HealthRecordItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Message extends Microsoft.Health.HealthRecordItem" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Health.ItemTypes.Message" />
  <TypeSignature Language="VB.NET" Value="Public Class Message&#xA;Inherits HealthRecordItem" />
  <TypeSignature Language="F#" Value="type Message = class&#xA;    inherit HealthRecordItem" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
    <AssemblyVersion>2.64.0.0</AssemblyVersion>
    <AssemblyVersion>2.68.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Health.HealthRecordItem</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
             The Message type is used to store a multipart mail message, including message text and attachments.
             </summary>
    <remarks>
             The message is stored in two forms. The "FullMessage" blob contains the message in the native format. 
             The text of the message is available in the blobs denoted by the 'html-blob-name" and "text-blob-name" 
             element. Any attachments to the message are described in the "attachments" element.
             
             The data stored is intended to be compatible with the SendMail Multipart MIME format. 
             </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Message ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.Message.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
             Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Message" /> class with default values.
             </summary>
        <remarks>
             This item is not added to the health record until the
             <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)" /> method
             is called.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Message (Microsoft.Health.ItemTypes.HealthServiceDateTime when, long size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Health.ItemTypes.HealthServiceDateTime when, int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.Message.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (when As HealthServiceDateTime, size As Long)" />
      <MemberSignature Language="F#" Value="new Microsoft.Health.ItemTypes.Message : Microsoft.Health.ItemTypes.HealthServiceDateTime * int64 -&gt; Microsoft.Health.ItemTypes.Message" Usage="new Microsoft.Health.ItemTypes.Message (when, size)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="when" Type="Microsoft.Health.ItemTypes.HealthServiceDateTime" />
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="when">
             The date and time of the message.
             </param>
        <param name="size">
             The size of the message in bytes.
             </param>
        <summary>
             Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Message" /> class
             specifying mandatory values.
             </summary>
        <remarks>
             This item is not added to the health record until the
             <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)" /> method
             is called.
             </remarks>
        <exception cref="T:System.ArgumentNullException">
             If <paramref name="when" /> is <b>null</b>.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="Attachments">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;Microsoft.Health.ItemTypes.MessageAttachment&gt; Attachments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class Microsoft.Health.ItemTypes.MessageAttachment&gt; Attachments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.Message.Attachments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attachments As Collection(Of MessageAttachment)" />
      <MemberSignature Language="F#" Value="member this.Attachments : System.Collections.ObjectModel.Collection&lt;Microsoft.Health.ItemTypes.MessageAttachment&gt;" Usage="Microsoft.Health.ItemTypes.Message.Attachments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;Microsoft.Health.ItemTypes.MessageAttachment&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets the collection of attachments to the message.
             </summary>
        <value>To be added.</value>
        <remarks>
             If there are no attachments the collection will be empty.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="From">
      <MemberSignature Language="C#" Value="public string From { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string From" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.Message.From" />
      <MemberSignature Language="VB.NET" Value="Public Property From As String" />
      <MemberSignature Language="F#" Value="member this.From : string with get, set" Usage="Microsoft.Health.ItemTypes.Message.From" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the origin of the message.
            </summary>
        <value>To be added.</value>
        <remarks>
            The From property is equivalent to Headers["From"].
            
            The value of the property is null if there is no from in the
            header collection.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;string,System.Collections.ObjectModel.Collection&lt;string&gt;&gt; Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.ObjectModel.Collection`1&lt;string&gt;&gt; Headers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.Message.Headers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Headers As Dictionary(Of String, Collection(Of String))" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Collections.Generic.Dictionary&lt;string, System.Collections.ObjectModel.Collection&lt;string&gt;&gt;" Usage="Microsoft.Health.ItemTypes.Message.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.Collections.ObjectModel.Collection&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets the header information associated with this message.
             </summary>
        <value>To be added.</value>
        <remarks>
             The header information is stored in a dictionary of collections. For example, 
             Headers["To"] returns the collection of all the "To" headers in the message, or null
             if there were not such headers associated with the message. 
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlBlobName">
      <MemberSignature Language="C#" Value="public string HtmlBlobName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HtmlBlobName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.Message.HtmlBlobName" />
      <MemberSignature Language="VB.NET" Value="Public Property HtmlBlobName As String" />
      <MemberSignature Language="F#" Value="member this.HtmlBlobName : string with get, set" Usage="Microsoft.Health.ItemTypes.Message.HtmlBlobName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the name of the blob that stores the message in HTML format.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
            The <paramref name="value" /> contains only whitespace.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="ParseXml">
      <MemberSignature Language="C#" Value="protected override void ParseXml (System.Xml.XPath.IXPathNavigable typeSpecificXml);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ParseXml(class System.Xml.XPath.IXPathNavigable typeSpecificXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.Message.ParseXml(System.Xml.XPath.IXPathNavigable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ParseXml (typeSpecificXml As IXPathNavigable)" />
      <MemberSignature Language="F#" Value="override this.ParseXml : System.Xml.XPath.IXPathNavigable -&gt; unit" Usage="message.ParseXml typeSpecificXml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeSpecificXml" Type="System.Xml.XPath.IXPathNavigable" />
      </Parameters>
      <Docs>
        <param name="typeSpecificXml">
             The XML to get the Message data from.
             </param>
        <summary>
             Populates the <see cref="T:Microsoft.Health.ItemTypes.Message" /> instance from the data in the specified XML.
             </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
             If <paramref name="typeSpecificXml" /> parameter is <b>null</b>.
             </exception>
        <exception cref="T:System.InvalidOperationException">
             If the first node in <paramref name="typeSpecificXml" /> is not
             a Message node.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public long Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Size" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.Message.Size" />
      <MemberSignature Language="VB.NET" Value="Public Property Size As Long" />
      <MemberSignature Language="F#" Value="member this.Size : int64 with get, set" Usage="Microsoft.Health.ItemTypes.Message.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the size of the message in bytes.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subject">
      <MemberSignature Language="C#" Value="public string Subject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Subject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.Message.Subject" />
      <MemberSignature Language="VB.NET" Value="Public Property Subject As String" />
      <MemberSignature Language="F#" Value="member this.Subject : string with get, set" Usage="Microsoft.Health.ItemTypes.Message.Subject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the subject of the message.
            </summary>
        <value>To be added.</value>
        <remarks>
            The Subject property is equivalent to Headers["Subject"].
            
            The value of the property is null if there is no subject in the
            header collection.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Summary">
      <MemberSignature Language="C#" Value="public string Summary { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Summary" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.Message.Summary" />
      <MemberSignature Language="VB.NET" Value="Public Property Summary As String" />
      <MemberSignature Language="F#" Value="member this.Summary : string with get, set" Usage="Microsoft.Health.ItemTypes.Message.Summary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets a summary of the message.
             </summary>
        <value>To be added.</value>
        <remarks>
             The summary contains the first 512 characters of the message in text format. This information
             is used to display the start of the message without having to fetch the blobs that store the
             whole message. 
             </remarks>
        <exception cref="T:System.ArgumentException">
             The <paramref name="value" /> contains only whitespace.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="TextBlobName">
      <MemberSignature Language="C#" Value="public string TextBlobName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TextBlobName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.Message.TextBlobName" />
      <MemberSignature Language="VB.NET" Value="Public Property TextBlobName As String" />
      <MemberSignature Language="F#" Value="member this.TextBlobName : string with get, set" Usage="Microsoft.Health.ItemTypes.Message.TextBlobName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the name of the blob that stores the message in text format.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
            The <paramref name="value" /> contains only whitespace.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.Message.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="message.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
             Gets a string representation of the Message.
             </summary>
        <returns>
             A string representation of the Message.
             </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeId">
      <MemberSignature Language="C#" Value="public static readonly Guid TypeId;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Guid TypeId" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Health.ItemTypes.Message.TypeId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TypeId As Guid " />
      <MemberSignature Language="F#" Value=" staticval mutable TypeId : Guid" Usage="Microsoft.Health.ItemTypes.Message.TypeId" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Retrieves the unique identifier for this type.
             </summary>
        <returns>
             A GUID.
             </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="When">
      <MemberSignature Language="C#" Value="public Microsoft.Health.ItemTypes.HealthServiceDateTime When { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Health.ItemTypes.HealthServiceDateTime When" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.Message.When" />
      <MemberSignature Language="VB.NET" Value="Public Property When As HealthServiceDateTime" />
      <MemberSignature Language="F#" Value="member this.When : Microsoft.Health.ItemTypes.HealthServiceDateTime with get, set" Usage="Microsoft.Health.ItemTypes.Message.When" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ItemTypes.HealthServiceDateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the date and time of the message.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            The <paramref name="value" /> parameter is <b>null</b>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public override void WriteXml (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteXml(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.Message.WriteXml(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteXml (writer As XmlWriter)" />
      <MemberSignature Language="F#" Value="override this.WriteXml : System.Xml.XmlWriter -&gt; unit" Usage="message.WriteXml writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
             The XML writer into which the Message should be
             written.
             </param>
        <summary>
             Writes the XML representation of the Message into
             the specified XML writer.
             </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
             If <paramref name="writer" /> parameter is <b>null</b>.
             </exception>
        <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
             If <see cref="P:Microsoft.Health.ItemTypes.Message.When" /> is <b>null</b>.
             </exception>
      </Docs>
    </Member>
  </Members>
</Type>