<Type Name="PowerMeasurement" FullName="Microsoft.Health.ItemTypes.PowerMeasurement">
  <TypeSignature Language="C#" Value="public class PowerMeasurement : Microsoft.Health.ItemTypes.Measurement&lt;double&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PowerMeasurement extends Microsoft.Health.ItemTypes.Measurement`1&lt;float64&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Health.ItemTypes.PowerMeasurement" />
  <TypeSignature Language="VB.NET" Value="Public Class PowerMeasurement&#xA;Inherits Measurement(Of Double)" />
  <TypeSignature Language="F#" Value="type PowerMeasurement = class&#xA;    inherit Measurement&lt;double&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
    <AssemblyVersion>2.64.0.0</AssemblyVersion>
    <AssemblyVersion>2.68.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Health.ItemTypes.Measurement&lt;System.Double&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="MeasurementType">System.Double</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents a power measurement and display.
            </summary>
    <remarks>
            In HealthVault, power measurements have values and display values. 
            All values are stored in a base unit of watts. 
            An application can take a pace value using any scale the application 
            chooses and can store the user-entered value as the display value, 
            but the power value must be 
            converted to watts to be stored in HealthVault.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PowerMeasurement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.PowerMeasurement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.PowerMeasurement" /> 
            class with empty values.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PowerMeasurement (double watts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 watts) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.PowerMeasurement.#ctor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (watts As Double)" />
      <MemberSignature Language="F#" Value="new Microsoft.Health.ItemTypes.PowerMeasurement : double -&gt; Microsoft.Health.ItemTypes.PowerMeasurement" Usage="new Microsoft.Health.ItemTypes.PowerMeasurement watts" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="watts" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="watts">
            The power in watts.
            </param>
        <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.PowerMeasurement" /> 
            class with the specified value in watts.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PowerMeasurement (double watts, Microsoft.Health.ItemTypes.DisplayValue displayValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 watts, class Microsoft.Health.ItemTypes.DisplayValue displayValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.PowerMeasurement.#ctor(System.Double,Microsoft.Health.ItemTypes.DisplayValue)" />
      <MemberSignature Language="F#" Value="new Microsoft.Health.ItemTypes.PowerMeasurement : double * Microsoft.Health.ItemTypes.DisplayValue -&gt; Microsoft.Health.ItemTypes.PowerMeasurement" Usage="new Microsoft.Health.ItemTypes.PowerMeasurement (watts, displayValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="watts" Type="System.Double" />
        <Parameter Name="displayValue" Type="Microsoft.Health.ItemTypes.DisplayValue" />
      </Parameters>
      <Docs>
        <param name="watts">
            The power in watts.
            </param>
        <param name="displayValue">
            The display value of the power. This should contain the
            exact power as entered by the user even if it uses some
            other unit of measure besides watts. The display value
            <see cref="P:Microsoft.Health.ItemTypes.DisplayValue.Units" /> and 
            <see cref="P:Microsoft.Health.ItemTypes.DisplayValue.UnitsCode" /> 
            represents the unit of measure for the user-entered value.
            </param>
        <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.PowerMeasurement" /> 
            class with the specified value in watts and optional display value.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssertMeasurementValue">
      <MemberSignature Language="C#" Value="protected override void AssertMeasurementValue (double value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AssertMeasurementValue(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.PowerMeasurement.AssertMeasurementValue(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AssertMeasurementValue (value As Double)" />
      <MemberSignature Language="F#" Value="override this.AssertMeasurementValue : double -&gt; unit" Usage="powerMeasurement.AssertMeasurementValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
            The power measurement.
            </param>
        <summary>
            Verifies that the value is a legal power value.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value" /> parameter is less than or equal to zero.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetValueString">
      <MemberSignature Language="C#" Value="protected override string GetValueString (double value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetValueString(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.PowerMeasurement.GetValueString(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetValueString (value As Double) As String" />
      <MemberSignature Language="F#" Value="override this.GetValueString : double -&gt; string" Usage="powerMeasurement.GetValueString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
            Gets a string representation of the power in the base units.
            </summary>
        <returns>
            The power as a string in the base units.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseValueXml">
      <MemberSignature Language="C#" Value="protected override void ParseValueXml (System.Xml.XPath.XPathNavigator navigator);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ParseValueXml(class System.Xml.XPath.XPathNavigator navigator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.PowerMeasurement.ParseValueXml(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ParseValueXml (navigator As XPathNavigator)" />
      <MemberSignature Language="F#" Value="override this.ParseValueXml : System.Xml.XPath.XPathNavigator -&gt; unit" Usage="powerMeasurement.ParseValueXml navigator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="navigator"> 
            The XML node representing the power.
            </param>
        <summary> 
            Populates the data for the power from the XML.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteValueXml">
      <MemberSignature Language="C#" Value="protected override void WriteValueXml (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WriteValueXml(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.PowerMeasurement.WriteValueXml(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WriteValueXml (writer As XmlWriter)" />
      <MemberSignature Language="F#" Value="override this.WriteValueXml : System.Xml.XmlWriter -&gt; unit" Usage="powerMeasurement.WriteValueXml writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer"> 
            The XmlWriter to write the power to.
            </param>
        <summary> 
            Writes the power to the specified XML writer.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>