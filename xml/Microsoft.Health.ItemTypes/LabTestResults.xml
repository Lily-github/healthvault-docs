<Type Name="LabTestResults" FullName="Microsoft.Health.ItemTypes.LabTestResults">
  <TypeSignature Language="C#" Value="public class LabTestResults : Microsoft.Health.HealthRecordItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LabTestResults extends Microsoft.Health.HealthRecordItem" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Health.ItemTypes.LabTestResults" />
  <TypeSignature Language="VB.NET" Value="Public Class LabTestResults&#xA;Inherits HealthRecordItem" />
  <TypeSignature Language="F#" Value="type LabTestResults = class&#xA;    inherit HealthRecordItem" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
    <AssemblyVersion>2.64.0.0</AssemblyVersion>
    <AssemblyVersion>2.68.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Health.HealthRecordItem</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A series of lab test results.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LabTestResults ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.LabTestResults.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.LabTestResults" /> 
            class with default values.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LabTestResults (System.Collections.Generic.IEnumerable&lt;Microsoft.Health.ItemTypes.LabTestResultGroup&gt; labGroups);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Health.ItemTypes.LabTestResultGroup&gt; labGroups) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.LabTestResults.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Health.ItemTypes.LabTestResultGroup})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (labGroups As IEnumerable(Of LabTestResultGroup))" />
      <MemberSignature Language="F#" Value="new Microsoft.Health.ItemTypes.LabTestResults : seq&lt;Microsoft.Health.ItemTypes.LabTestResultGroup&gt; -&gt; Microsoft.Health.ItemTypes.LabTestResults" Usage="new Microsoft.Health.ItemTypes.LabTestResults labGroups" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="labGroups" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Health.ItemTypes.LabTestResultGroup&gt;" />
      </Parameters>
      <Docs>
        <param name="labGroups">Lab groups is a set of lab results.</param>
        <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.LabTestResults" /> 
            class with mandatory parameters.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            If <paramref name="labGroups" /> parameter is <b> null </b>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Groups">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;Microsoft.Health.ItemTypes.LabTestResultGroup&gt; Groups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class Microsoft.Health.ItemTypes.LabTestResultGroup&gt; Groups" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.LabTestResults.Groups" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Groups As Collection(Of LabTestResultGroup)" />
      <MemberSignature Language="F#" Value="member this.Groups : System.Collections.ObjectModel.Collection&lt;Microsoft.Health.ItemTypes.LabTestResultGroup&gt;" Usage="Microsoft.Health.ItemTypes.LabTestResults.Groups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;Microsoft.Health.ItemTypes.LabTestResultGroup&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a set of lab results.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderedBy">
      <MemberSignature Language="C#" Value="public Microsoft.Health.ItemTypes.Organization OrderedBy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Health.ItemTypes.Organization OrderedBy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.LabTestResults.OrderedBy" />
      <MemberSignature Language="VB.NET" Value="Public Property OrderedBy As Organization" />
      <MemberSignature Language="F#" Value="member this.OrderedBy : Microsoft.Health.ItemTypes.Organization with get, set" Usage="Microsoft.Health.ItemTypes.LabTestResults.OrderedBy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ItemTypes.Organization</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the information about the organization which
            ordered the lab tests.
            </summary>
        <value>To be added.</value>
        <remarks>
            It should be set to <b> null</b> if it is unknown. 
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseXml">
      <MemberSignature Language="C#" Value="protected override void ParseXml (System.Xml.XPath.IXPathNavigable typeSpecificXml);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ParseXml(class System.Xml.XPath.IXPathNavigable typeSpecificXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.LabTestResults.ParseXml(System.Xml.XPath.IXPathNavigable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ParseXml (typeSpecificXml As IXPathNavigable)" />
      <MemberSignature Language="F#" Value="override this.ParseXml : System.Xml.XPath.IXPathNavigable -&gt; unit" Usage="labTestResults.ParseXml typeSpecificXml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeSpecificXml" Type="System.Xml.XPath.IXPathNavigable" />
      </Parameters>
      <Docs>
        <param name="typeSpecificXml">
            The XML to get the lab test results data from.
            </param>
        <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.LabTestResults" /> instance from the data in the XML. 
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
            If the first node in <paramref name="typeSpecificXml" /> is not
            a lab test results node.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.LabTestResults.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="labTestResults.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
             Gets a string representation of the lab test results item.
             </summary>
        <returns>
             A string representation of the lab test results item.
             </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeId">
      <MemberSignature Language="C#" Value="public static readonly Guid TypeId;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Guid TypeId" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Health.ItemTypes.LabTestResults.TypeId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TypeId As Guid " />
      <MemberSignature Language="F#" Value=" staticval mutable TypeId : Guid" Usage="Microsoft.Health.ItemTypes.LabTestResults.TypeId" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Retrieves the unique identifier for the item type.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="When">
      <MemberSignature Language="C#" Value="public Microsoft.Health.ItemTypes.ApproximateDateTime When { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Health.ItemTypes.ApproximateDateTime When" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.LabTestResults.When" />
      <MemberSignature Language="VB.NET" Value="Public Property When As ApproximateDateTime" />
      <MemberSignature Language="F#" Value="member this.When : Microsoft.Health.ItemTypes.ApproximateDateTime with get, set" Usage="Microsoft.Health.ItemTypes.LabTestResults.When" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ItemTypes.ApproximateDateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the date and time of the lab tests results.  
            </summary>
        <value>To be added.</value>
        <remarks>
            The date and time should be set to <b> null </b> if they are 
            unknown. 
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public override void WriteXml (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteXml(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.LabTestResults.WriteXml(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteXml (writer As XmlWriter)" />
      <MemberSignature Language="F#" Value="override this.WriteXml : System.Xml.XmlWriter -&gt; unit" Usage="labTestResults.WriteXml writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
            The XmlWriter to write the lab test results data to.
            </param>
        <summary>
            Writes the lab test results data to the specified XmlWriter.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer" /> parameter is <b>null</b>.
            </exception>
        <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.LabTestResults.Groups" /> is <b>null</b> or empty.
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>