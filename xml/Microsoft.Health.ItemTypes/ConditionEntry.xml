<Type Name="ConditionEntry" FullName="Microsoft.Health.ItemTypes.ConditionEntry">
  <TypeSignature Language="C#" Value="public class ConditionEntry : Microsoft.Health.ItemTypes.HealthRecordItemData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConditionEntry extends Microsoft.Health.ItemTypes.HealthRecordItemData" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Health.ItemTypes.ConditionEntry" />
  <TypeSignature Language="VB.NET" Value="Public Class ConditionEntry&#xA;Inherits HealthRecordItemData" />
  <TypeSignature Language="F#" Value="type ConditionEntry = class&#xA;    inherit HealthRecordItemData" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
    <AssemblyVersion>2.64.0.0</AssemblyVersion>
    <AssemblyVersion>2.68.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Health.ItemTypes.HealthRecordItemData</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Defines a single health or medical issue/problem.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConditionEntry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.ConditionEntry.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.ConditionEntry" /> class 
            with default values.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConditionEntry (Microsoft.Health.ItemTypes.CodableValue name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Health.ItemTypes.CodableValue name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.ConditionEntry.#ctor(Microsoft.Health.ItemTypes.CodableValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As CodableValue)" />
      <MemberSignature Language="F#" Value="new Microsoft.Health.ItemTypes.ConditionEntry : Microsoft.Health.ItemTypes.CodableValue -&gt; Microsoft.Health.ItemTypes.ConditionEntry" Usage="new Microsoft.Health.ItemTypes.ConditionEntry name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="Microsoft.Health.ItemTypes.CodableValue" />
      </Parameters>
      <Docs>
        <param name="name">
            The name or description of a condition.
            </param>
        <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.ConditionEntry" /> class 
            with name.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            If <paramref name="name" /> is <b> null </b>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public Microsoft.Health.ItemTypes.CodableValue Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Health.ItemTypes.CodableValue Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.ConditionEntry.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As CodableValue" />
      <MemberSignature Language="F#" Value="member this.Name : Microsoft.Health.ItemTypes.CodableValue with get, set" Usage="Microsoft.Health.ItemTypes.ConditionEntry.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ItemTypes.CodableValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the name or description of a medical condition entry.  
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            If <paramref name="Name" /> is <b>null</b>. 
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Occurrence">
      <MemberSignature Language="C#" Value="public Microsoft.Health.ItemTypes.CodableValue Occurrence { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Health.ItemTypes.CodableValue Occurrence" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.ConditionEntry.Occurrence" />
      <MemberSignature Language="VB.NET" Value="Public Property Occurrence As CodableValue" />
      <MemberSignature Language="F#" Value="member this.Occurrence : Microsoft.Health.ItemTypes.CodableValue with get, set" Usage="Microsoft.Health.ItemTypes.ConditionEntry.Occurrence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ItemTypes.CodableValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the description of how often the condition occurs.
            </summary>
        <value>To be added.</value>
        <remarks>
            Examples of occurrence include acute, chronic. The occurrence of condition
            should be set to <b>null</b> if it is unknown.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnsetDate">
      <MemberSignature Language="C#" Value="public Microsoft.Health.ItemTypes.ApproximateDate OnsetDate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Health.ItemTypes.ApproximateDate OnsetDate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.ConditionEntry.OnsetDate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnsetDate As ApproximateDate" />
      <MemberSignature Language="F#" Value="member this.OnsetDate : Microsoft.Health.ItemTypes.ApproximateDate with get, set" Usage="Microsoft.Health.ItemTypes.ConditionEntry.OnsetDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ItemTypes.ApproximateDate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the date of onset or the first diagnosis.  
            </summary>
        <value>To be added.</value>
        <remarks>
            The onset date should be set to <b>null</b> if it is unknown. 
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseXml">
      <MemberSignature Language="C#" Value="public override void ParseXml (System.Xml.XPath.XPathNavigator navigator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ParseXml(class System.Xml.XPath.XPathNavigator navigator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.ConditionEntry.ParseXml(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ParseXml (navigator As XPathNavigator)" />
      <MemberSignature Language="F#" Value="override this.ParseXml : System.Xml.XPath.XPathNavigator -&gt; unit" Usage="conditionEntry.ParseXml navigator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="navigator">
             The XML to get the condition data from.
             </param>
        <summary>
             Populates this <see cref="T:Microsoft.Health.ItemTypes.Condition" /> instance from the data in the XML. 
             </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
             If <paramref name="navigator" /> is <b> null </b>.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="Resolution">
      <MemberSignature Language="C#" Value="public string Resolution { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Resolution" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.ConditionEntry.Resolution" />
      <MemberSignature Language="VB.NET" Value="Public Property Resolution As String" />
      <MemberSignature Language="F#" Value="member this.Resolution : string with get, set" Usage="Microsoft.Health.ItemTypes.ConditionEntry.Resolution" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the resolution which is a statement of how the condition 
            was resolved.  
            </summary>
        <value>To be added.</value>
        <remarks>
            The resolution of a condition should be set to <b>null</b> if it is unknown.
            </remarks>
        <exception cref="T:System.ArgumentException">
            If <paramref name="value" /> contains only whitespace.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="ResolutionDate">
      <MemberSignature Language="C#" Value="public Microsoft.Health.ItemTypes.ApproximateDate ResolutionDate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Health.ItemTypes.ApproximateDate ResolutionDate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.ConditionEntry.ResolutionDate" />
      <MemberSignature Language="VB.NET" Value="Public Property ResolutionDate As ApproximateDate" />
      <MemberSignature Language="F#" Value="member this.ResolutionDate : Microsoft.Health.ItemTypes.ApproximateDate with get, set" Usage="Microsoft.Health.ItemTypes.ConditionEntry.ResolutionDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ItemTypes.ApproximateDate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the date the condition resolved (or for multiple acute
            episodes, the last date the condition resolved).
            </summary>
        <value>To be added.</value>
        <remarks>
            The resolution date should be set to <b>null</b> if it is unknown. 
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Severity">
      <MemberSignature Language="C#" Value="public Microsoft.Health.ItemTypes.CodableValue Severity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Health.ItemTypes.CodableValue Severity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.ConditionEntry.Severity" />
      <MemberSignature Language="VB.NET" Value="Public Property Severity As CodableValue" />
      <MemberSignature Language="F#" Value="member this.Severity : Microsoft.Health.ItemTypes.CodableValue with get, set" Usage="Microsoft.Health.ItemTypes.ConditionEntry.Severity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ItemTypes.CodableValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the severity of a condition.  
             </summary>
        <value>To be added.</value>
        <remarks>
             The severity should be set to <b>null</b> if it is unknown.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.ConditionEntry.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="conditionEntry.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets a string of the name or description of the condition item.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public override void WriteXml (string nodeName, System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteXml(string nodeName, class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.ConditionEntry.WriteXml(System.String,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteXml (nodeName As String, writer As XmlWriter)" />
      <MemberSignature Language="F#" Value="override this.WriteXml : string * System.Xml.XmlWriter -&gt; unit" Usage="conditionEntry.WriteXml (nodeName, writer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeName" Type="System.String" />
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="nodeName">
            The name of the outer node for the condition item.
            </param>
        <param name="writer">
            The XmlWriter to write the condition data to.
            </param>
        <summary>
            Writes the condition data to the specified XmlWriter.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
            If <paramref name="nodeName" /> is <b> null </b> or empty.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer" /> is <b> null </b>.
            </exception>
        <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.ConditionEntry.Name" /> is <b> null </b>.
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>