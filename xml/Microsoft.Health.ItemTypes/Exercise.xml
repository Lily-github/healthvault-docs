<Type Name="Exercise" FullName="Microsoft.Health.ItemTypes.Exercise">
  <TypeSignature Language="C#" Value="public class Exercise : Microsoft.Health.HealthRecordItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Exercise extends Microsoft.Health.HealthRecordItem" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Health.ItemTypes.Exercise" />
  <TypeSignature Language="VB.NET" Value="Public Class Exercise&#xA;Inherits HealthRecordItem" />
  <TypeSignature Language="F#" Value="type Exercise = class&#xA;    inherit HealthRecordItem" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
    <AssemblyVersion>2.64.0.0</AssemblyVersion>
    <AssemblyVersion>2.68.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Health.HealthRecordItem</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents a health record item type that encapsulates an aerobic session.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Exercise ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.Exercise.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Constructs a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Exercise" /> class 
            with default values.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Exercise (Microsoft.Health.ItemTypes.ApproximateDateTime when, Microsoft.Health.ItemTypes.CodableValue activity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Health.ItemTypes.ApproximateDateTime when, class Microsoft.Health.ItemTypes.CodableValue activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.Exercise.#ctor(Microsoft.Health.ItemTypes.ApproximateDateTime,Microsoft.Health.ItemTypes.CodableValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (when As ApproximateDateTime, activity As CodableValue)" />
      <MemberSignature Language="F#" Value="new Microsoft.Health.ItemTypes.Exercise : Microsoft.Health.ItemTypes.ApproximateDateTime * Microsoft.Health.ItemTypes.CodableValue -&gt; Microsoft.Health.ItemTypes.Exercise" Usage="new Microsoft.Health.ItemTypes.Exercise (when, activity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="when" Type="Microsoft.Health.ItemTypes.ApproximateDateTime" />
        <Parameter Name="activity" Type="Microsoft.Health.ItemTypes.CodableValue" />
      </Parameters>
      <Docs>
        <param name="when">
            The date/time when the exercise occurred.
            </param>
        <param name="activity">
            The type of activity.
            </param>
        <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Exercise" /> class with 
            the specified date/time and activity.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            The <paramref name="activity" /> parameter is <b>null</b>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Activity">
      <MemberSignature Language="C#" Value="public Microsoft.Health.ItemTypes.CodableValue Activity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Health.ItemTypes.CodableValue Activity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.Exercise.Activity" />
      <MemberSignature Language="VB.NET" Value="Public Property Activity As CodableValue" />
      <MemberSignature Language="F#" Value="member this.Activity : Microsoft.Health.ItemTypes.CodableValue with get, set" Usage="Microsoft.Health.ItemTypes.Exercise.Activity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ItemTypes.CodableValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the type of activity.
            </summary>
        <value>To be added.</value>
        <remarks>
            Stores the overall activity for the exercise period.
            
            Examples: Running, hiking, walking, golfing, dancing.
            The preferred vocabulary for route is "exercise-activities".
            </remarks>
        <exception cref="T:System.ArgumentNullException">
            If <paramref name="Activity" /> is <b>null</b>. 
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Details">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Health.ItemTypes.ExerciseDetail&gt; Details { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Health.ItemTypes.ExerciseDetail&gt; Details" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.Exercise.Details" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Details As IDictionary(Of String, ExerciseDetail)" />
      <MemberSignature Language="F#" Value="member this.Details : System.Collections.Generic.IDictionary&lt;string, Microsoft.Health.ItemTypes.ExerciseDetail&gt;" Usage="Microsoft.Health.ItemTypes.Exercise.Details" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Health.ItemTypes.ExerciseDetail&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets additional information about the exercise.
            </summary>
        <value>
            A dictionary of <see cref="T:Microsoft.Health.ItemTypes.ExerciseDetail" /> items.
            </value>
        <remarks>
            Details is a dictionary of the items, where the key is the 
            string name of the item.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Distance">
      <MemberSignature Language="C#" Value="public Microsoft.Health.ItemTypes.Length Distance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Health.ItemTypes.Length Distance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.Exercise.Distance" />
      <MemberSignature Language="VB.NET" Value="Public Property Distance As Length" />
      <MemberSignature Language="F#" Value="member this.Distance : Microsoft.Health.ItemTypes.Length with get, set" Usage="Microsoft.Health.ItemTypes.Exercise.Distance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ItemTypes.Length</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the distance covered in the exercise.
            </summary>
        <value>
            A <see cref="T:Microsoft.Health.ItemTypes.Length" /> value representing the distance.
            </value>
        <remarks>
            Distances are stored in meters. The application 
            must convert the distance entered by the user
            into meters and should also store the distance
            and units entered by the user in the display-value
            so that it can be displayed to the user in their
            preferred unit of measure when viewing the data.
            
            Set the value to <b>null</b> if there is no distance.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; Duration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;float64&gt; Duration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.Exercise.Duration" />
      <MemberSignature Language="VB.NET" Value="Public Property Duration As Nullable(Of Double)" />
      <MemberSignature Language="F#" Value="member this.Duration : Nullable&lt;double&gt; with get, set" Usage="Microsoft.Health.ItemTypes.Exercise.Duration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the duration of the exercise in minutes.
            </summary>
        <value>To be added.</value>
        <remarks>
            Set the value to <b>null</b> if there is no duration.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value" /> parameter is negative or zero when set.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="ParseXml">
      <MemberSignature Language="C#" Value="protected override void ParseXml (System.Xml.XPath.IXPathNavigable typeSpecificXml);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ParseXml(class System.Xml.XPath.IXPathNavigable typeSpecificXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.Exercise.ParseXml(System.Xml.XPath.IXPathNavigable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ParseXml (typeSpecificXml As IXPathNavigable)" />
      <MemberSignature Language="F#" Value="override this.ParseXml : System.Xml.XPath.IXPathNavigable -&gt; unit" Usage="exercise.ParseXml typeSpecificXml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeSpecificXml" Type="System.Xml.XPath.IXPathNavigable" />
      </Parameters>
      <Docs>
        <param name="typeSpecificXml">
            The XML to get the exercise data from.
            </param>
        <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.Exercise" /> instance from the data in the XML.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
            If the first node in <paramref name="typeSpecificXml" /> is not
            an "exercise" node.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Segments">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;Microsoft.Health.ItemTypes.ExerciseSegment&gt; Segments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class Microsoft.Health.ItemTypes.ExerciseSegment&gt; Segments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.Exercise.Segments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Segments As Collection(Of ExerciseSegment)" />
      <MemberSignature Language="F#" Value="member this.Segments : System.Collections.ObjectModel.Collection&lt;Microsoft.Health.ItemTypes.ExerciseSegment&gt;" Usage="Microsoft.Health.ItemTypes.Exercise.Segments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;Microsoft.Health.ItemTypes.ExerciseSegment&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets information pertaining to a portion of the overall exercise.
            </summary>
        <value>
            A collection of <see cref="T:Microsoft.Health.ItemTypes.ExerciseSegment" /> items.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.Exercise.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="Microsoft.Health.ItemTypes.Exercise.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a descriptive title for this activity.
            </summary>
        <value>
            String. 
            </value>
        <remarks>
            Examples: Hiking up Mt. Baker, 3-day walk, Memorial day triathlon.
            </remarks>
        <exception cref="T:System.ArgumentException">
            If <paramref name="value" /> contains only whitespace.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.Exercise.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="exercise.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
             Gets a string representation of the Exercise item.
             </summary>
        <returns>
             A string representation of the Exercise item.
             </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeId">
      <MemberSignature Language="C#" Value="public static readonly Guid TypeId;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Guid TypeId" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Health.ItemTypes.Exercise.TypeId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TypeId As Guid " />
      <MemberSignature Language="F#" Value=" staticval mutable TypeId : Guid" Usage="Microsoft.Health.ItemTypes.Exercise.TypeId" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The unique identifier for the Exercise item type.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="When">
      <MemberSignature Language="C#" Value="public Microsoft.Health.ItemTypes.ApproximateDateTime When { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Health.ItemTypes.ApproximateDateTime When" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.Exercise.When" />
      <MemberSignature Language="VB.NET" Value="Public Property When As ApproximateDateTime" />
      <MemberSignature Language="F#" Value="member this.When : Microsoft.Health.ItemTypes.ApproximateDateTime with get, set" Usage="Microsoft.Health.ItemTypes.Exercise.When" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ItemTypes.ApproximateDateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the date/time when the exercise occurred.
            </summary>
        <value>
            A <see cref="T:Microsoft.Health.ItemTypes.ApproximateDateTime" /> instance. 
            The value defaults to the current year, month, and day.
            </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            The <paramref name="value" /> parameter is <b>null</b>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public override void WriteXml (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteXml(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.Exercise.WriteXml(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteXml (writer As XmlWriter)" />
      <MemberSignature Language="F#" Value="override this.WriteXml : System.Xml.XmlWriter -&gt; unit" Usage="exercise.WriteXml writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
            The XmlWriter to write the exericse data to. 
            </param>
        <summary>
            Writes the exercise data to the specified XmlWriter.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer" /> is <b>null</b>.
            </exception>
        <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.Exercise.When" /> is <b>null</b>.
            If <see cref="P:Microsoft.Health.ItemTypes.Exercise.Activity" /> is <b>null</b>.
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>