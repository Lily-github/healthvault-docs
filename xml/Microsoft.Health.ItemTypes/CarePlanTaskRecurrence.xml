<Type Name="CarePlanTaskRecurrence" FullName="Microsoft.Health.ItemTypes.CarePlanTaskRecurrence">
  <TypeSignature Language="C#" Value="public class CarePlanTaskRecurrence : Microsoft.Health.ItemTypes.HealthRecordItemData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CarePlanTaskRecurrence extends Microsoft.Health.ItemTypes.HealthRecordItemData" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Health.ItemTypes.CarePlanTaskRecurrence" />
  <TypeSignature Language="VB.NET" Value="Public Class CarePlanTaskRecurrence&#xA;Inherits HealthRecordItemData" />
  <TypeSignature Language="F#" Value="type CarePlanTaskRecurrence = class&#xA;    inherit HealthRecordItemData" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
    <AssemblyVersion>2.64.0.0</AssemblyVersion>
    <AssemblyVersion>2.68.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Health.ItemTypes.HealthRecordItemData</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
             Care plan task recurrence representation.
             </summary>
    <remarks>
             For recurrence rules that cannot be expressed using iCalendar recurrence format, use interval and times-in-interval fields. Ex: Two times in a week.
             </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CarePlanTaskRecurrence ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
             Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.CarePlanTaskRecurrence" /> class with default values.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IcalRecurrence">
      <MemberSignature Language="C#" Value="public string IcalRecurrence { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IcalRecurrence" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.IcalRecurrence" />
      <MemberSignature Language="VB.NET" Value="Public Property IcalRecurrence As String" />
      <MemberSignature Language="F#" Value="member this.IcalRecurrence : string with get, set" Usage="Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.IcalRecurrence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the ical-recurrence
            </summary>
        <value>To be added.</value>
        <remarks>
             Uses the iCalendar format for recurrence specification as per RFC 2445, Section 4.3.10.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interval">
      <MemberSignature Language="C#" Value="public Microsoft.Health.ItemTypes.CodableValue Interval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Health.ItemTypes.CodableValue Interval" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.Interval" />
      <MemberSignature Language="VB.NET" Value="Public Property Interval As CodableValue" />
      <MemberSignature Language="F#" Value="member this.Interval : Microsoft.Health.ItemTypes.CodableValue with get, set" Usage="Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.Interval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ItemTypes.CodableValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the recurrence interval.
            </summary>
        <value>To be added.</value>
        <remarks>
            For example: day, month, year.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseXml">
      <MemberSignature Language="C#" Value="public override void ParseXml (System.Xml.XPath.XPathNavigator navigator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ParseXml(class System.Xml.XPath.XPathNavigator navigator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.ParseXml(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ParseXml (navigator As XPathNavigator)" />
      <MemberSignature Language="F#" Value="override this.ParseXml : System.Xml.XPath.XPathNavigator -&gt; unit" Usage="carePlanTaskRecurrence.ParseXml navigator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="navigator">
             The XML to get the CarePlanTaskRecurrence data from.
             </param>
        <summary>
             Populates this <see cref="T:Microsoft.Health.ItemTypes.CarePlanTaskRecurrence" /> instance from the data in the specified XML.
             </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
             If <paramref name="navigator" /> parameter is <b>null</b>.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="TimesInInterval">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; TimesInInterval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; TimesInInterval" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.TimesInInterval" />
      <MemberSignature Language="VB.NET" Value="Public Property TimesInInterval As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.TimesInInterval : Nullable&lt;int&gt; with get, set" Usage="Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.TimesInInterval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the number of times in the interval.
            </summary>
        <value>To be added.</value>
        <remarks>
            Example: Two times in a week would be stored as interval = week, times-in-interval = 2.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="carePlanTaskRecurrence.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
             Gets a string representation of the CarePlanTaskRecurrence.
             </summary>
        <returns>
             A string representation of the CarePlanTaskRecurrence.
             </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public override void WriteXml (string nodeName, System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteXml(string nodeName, class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.WriteXml(System.String,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteXml (nodeName As String, writer As XmlWriter)" />
      <MemberSignature Language="F#" Value="override this.WriteXml : string * System.Xml.XmlWriter -&gt; unit" Usage="carePlanTaskRecurrence.WriteXml (nodeName, writer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeName" Type="System.String" />
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="nodeName">
             The name of the outer node for the medical image study series.
             </param>
        <param name="writer">
             The XML writer into which the CarePlanTaskRecurrence should be
             written.
             </param>
        <summary>
             Writes the XML representation of the CarePlanTaskRecurrence into
             the specified XML writer.
             </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
             If <paramref name="nodeName" /> parameter is <b>null</b> or empty.
             </exception>
        <exception cref="T:System.ArgumentNullException">
             If <paramref name="writer" /> parameter is <b>null</b>.
             </exception>
      </Docs>
    </Member>
  </Members>
</Type>