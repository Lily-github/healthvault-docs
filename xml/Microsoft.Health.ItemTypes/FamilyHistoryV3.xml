<Type Name="FamilyHistoryV3" FullName="Microsoft.Health.ItemTypes.FamilyHistoryV3">
  <TypeSignature Language="C#" Value="public class FamilyHistoryV3 : Microsoft.Health.HealthRecordItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FamilyHistoryV3 extends Microsoft.Health.HealthRecordItem" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Health.ItemTypes.FamilyHistoryV3" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
    <AssemblyVersion>2.64.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Health.HealthRecordItem</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
             The condition of a relative.
             </summary>
    <remarks>
             The family history condition item stores a condition 
             that a relative of the record-owner has.
             
             To create a family tree, use the relationship-types vocabulary
             to code both directions of the parent/child relationship between
             one family member and another. These codes are stored as
             related items for both parent and child data instances.
            
             The flexibity of having both condition and relative be optional
             allows applications to give the users the ability to just put in
             the details they know at the time they want to create the tree.
             If they just know the name of the relative, or a particular condition
             that's all it takes to get a new instance started.
             </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FamilyHistoryV3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.FamilyHistoryV3.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.FamilyHistoryV3" /> 
            class with default values.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Conditions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;Microsoft.Health.ItemTypes.ConditionEntry&gt; Conditions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class Microsoft.Health.ItemTypes.ConditionEntry&gt; Conditions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.FamilyHistoryV3.Conditions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;Microsoft.Health.ItemTypes.ConditionEntry&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a collection of a conditions.
            </summary>
        <value>To be added.</value>
        <remarks>
            If there is no information about the condition of the relative the collection should be empty.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseXml">
      <MemberSignature Language="C#" Value="protected override void ParseXml (System.Xml.XPath.IXPathNavigable typeSpecificXml);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ParseXml(class System.Xml.XPath.IXPathNavigable typeSpecificXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.FamilyHistoryV3.ParseXml(System.Xml.XPath.IXPathNavigable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeSpecificXml" Type="System.Xml.XPath.IXPathNavigable" />
      </Parameters>
      <Docs>
        <param name="typeSpecificXml">
             The XML to get the family history data from.
             </param>
        <summary>
             Populates this <see cref="T:Microsoft.Health.ItemTypes.FamilyHistoryV3" /> instance from the data in the XML. 
             </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
             If the first node in <paramref name="typeSpecificXml" /> is not
             a family history node.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="Relative">
      <MemberSignature Language="C#" Value="public Microsoft.Health.ItemTypes.FamilyHistoryRelativeV3 Relative { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Health.ItemTypes.FamilyHistoryRelativeV3 Relative" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.FamilyHistoryV3.Relative" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ItemTypes.FamilyHistoryRelativeV3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets information about the relative with this condition.
            </summary>
        <value>To be added.</value>
        <remarks>
            The relative should be set to <b>null</b> if it is unknown. 
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.FamilyHistoryV3.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
             Gets a string representation of the family history item.
             </summary>
        <returns>
             A string representation of the family history item.
             </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeId">
      <MemberSignature Language="C#" Value="public static readonly Guid TypeId;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Guid TypeId" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Health.ItemTypes.FamilyHistoryV3.TypeId" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Retrieves the unique identifier for the item type.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public override void WriteXml (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteXml(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.FamilyHistoryV3.WriteXml(System.Xml.XmlWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
            The XmlWriter to write the family history data to.
            </param>
        <summary>
            Writes the family history data to the specified XmlWriter.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer" /> parameter is <b>null</b>.
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>
