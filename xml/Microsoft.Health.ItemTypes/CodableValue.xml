<Type Name="CodableValue" FullName="Microsoft.Health.ItemTypes.CodableValue">
  <TypeSignature Language="C#" Value="public class CodableValue : Microsoft.Health.ItemTypes.HealthRecordItemData, System.Collections.Generic.ICollection&lt;Microsoft.Health.ItemTypes.CodedValue&gt;, System.Collections.Generic.IEnumerable&lt;Microsoft.Health.ItemTypes.CodedValue&gt;, System.Collections.Generic.IList&lt;Microsoft.Health.ItemTypes.CodedValue&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CodableValue extends Microsoft.Health.ItemTypes.HealthRecordItemData implements class System.Collections.Generic.ICollection`1&lt;class Microsoft.Health.ItemTypes.CodedValue&gt;, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Health.ItemTypes.CodedValue&gt;, class System.Collections.Generic.IList`1&lt;class Microsoft.Health.ItemTypes.CodedValue&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Health.ItemTypes.CodableValue" />
  <TypeSignature Language="VB.NET" Value="Public Class CodableValue&#xA;Inherits HealthRecordItemData&#xA;Implements ICollection(Of CodedValue), IEnumerable(Of CodedValue), IList(Of CodedValue)" />
  <TypeSignature Language="F#" Value="type CodableValue = class&#xA;    inherit HealthRecordItemData&#xA;    interface IList&lt;CodedValue&gt;&#xA;    interface ICollection&lt;CodedValue&gt;&#xA;    interface seq&lt;CodedValue&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
    <AssemblyVersion>2.64.0.0</AssemblyVersion>
    <AssemblyVersion>2.68.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Health.ItemTypes.HealthRecordItemData</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;Microsoft.Health.ItemTypes.CodedValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;Microsoft.Health.ItemTypes.CodedValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IList&lt;Microsoft.Health.ItemTypes.CodedValue&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Represents the value and code of an entry in the HealthVault vocabulary
            store.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodableValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.CodableValue.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Constructs a CodableValue with empty values.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodableValue (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.CodableValue.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.Health.ItemTypes.CodableValue : string -&gt; Microsoft.Health.ItemTypes.CodableValue" Usage="new Microsoft.Health.ItemTypes.CodableValue text" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
            The text value of the codable value.
            </param>
        <summary>
            Constructs a CodableValue with an initial value for the Text.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
            The <paramref name="text" /> parameter is <b>null</b> or empty.
            </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodableValue (string text, Microsoft.Health.ItemTypes.CodedValue code);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, class Microsoft.Health.ItemTypes.CodedValue code) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.CodableValue.#ctor(System.String,Microsoft.Health.ItemTypes.CodedValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, code As CodedValue)" />
      <MemberSignature Language="F#" Value="new Microsoft.Health.ItemTypes.CodableValue : string * Microsoft.Health.ItemTypes.CodedValue -&gt; Microsoft.Health.ItemTypes.CodableValue" Usage="new Microsoft.Health.ItemTypes.CodableValue (text, code)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="code" Type="Microsoft.Health.ItemTypes.CodedValue" />
      </Parameters>
      <Docs>
        <param name="text">
            The text value of the codable value.
            </param>
        <param name="code">
            The code representation of the text value.
            </param>
        <summary>
            Constructs a CodableValue with an initial value for the Text
            and the specified code.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            The <paramref name="text" /> parameter is <b>null</b>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodableValue (string text, Microsoft.Health.VocabularyItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, class Microsoft.Health.VocabularyItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.CodableValue.#ctor(System.String,Microsoft.Health.VocabularyItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, item As VocabularyItem)" />
      <MemberSignature Language="F#" Value="new Microsoft.Health.ItemTypes.CodableValue : string * Microsoft.Health.VocabularyItem -&gt; Microsoft.Health.ItemTypes.CodableValue" Usage="new Microsoft.Health.ItemTypes.CodableValue (text, item)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="item" Type="Microsoft.Health.VocabularyItem" />
      </Parameters>
      <Docs>
        <param name="text">
            The text value of the codable value.
            </param>
        <param name="item">
            The <see cref="T:Microsoft.Health.VocabularyItem" />. 
            </param>
        <summary>
            Constructs a CodableValue based on display value and
            a <see cref="T:Microsoft.Health.VocabularyItem" />. 
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            The <paramref name="text" /> parameter is <b>null</b>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodableValue (string text, string code, Microsoft.Health.VocabularyKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, string code, class Microsoft.Health.VocabularyKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.CodableValue.#ctor(System.String,System.String,Microsoft.Health.VocabularyKey)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, code As String, key As VocabularyKey)" />
      <MemberSignature Language="F#" Value="new Microsoft.Health.ItemTypes.CodableValue : string * string * Microsoft.Health.VocabularyKey -&gt; Microsoft.Health.ItemTypes.CodableValue" Usage="new Microsoft.Health.ItemTypes.CodableValue (text, code, key)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="code" Type="System.String" />
        <Parameter Name="key" Type="Microsoft.Health.VocabularyKey" />
      </Parameters>
      <Docs>
        <param name="text">
            The text value of the codable value.
            </param>
        <param name="code">
            The code representation of the text value.
            </param>
        <param name="key">
            key for identifying a Vocabulary in the HealthLexicon.
            </param>
        <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.CodableValue" /> class 
            with the specified text, code value, and vocabulary key.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
            The <paramref name="text" /> or <paramref name="code" /> or <paramref name="key" />
            parameter is <b>null</b>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodableValue (string text, string code, string vocabularyName, string family, string version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, string code, string vocabularyName, string family, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.CodableValue.#ctor(System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, code As String, vocabularyName As String, family As String, version As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.Health.ItemTypes.CodableValue : string * string * string * string * string -&gt; Microsoft.Health.ItemTypes.CodableValue" Usage="new Microsoft.Health.ItemTypes.CodableValue (text, code, vocabularyName, family, version)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="code" Type="System.String" />
        <Parameter Name="vocabularyName" Type="System.String" />
        <Parameter Name="family" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
            The text value of the codable value.
            </param>
        <param name="code">
            The code representation of the text value.
            </param>
        <param name="vocabularyName">
            The name of the vocabulary the code belongs to.
            </param>
        <param name="family">
            The family of vocabulary terms that the code belongs to.
            </param>
        <param name="version">
            The version of the vocabulary the code belongs to.
            </param>
        <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.CodableValue" /> class 
            with the specified text, code value, vocabulary name, family, and version.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
            The <paramref name="text" /> or <paramref name="code" /> or 
            <paramref name="vocabularyName" /> parameter is <b>null</b> or empty.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.Health.ItemTypes.CodedValue item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class Microsoft.Health.ItemTypes.CodedValue item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.CodableValue.Add(Microsoft.Health.ItemTypes.CodedValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As CodedValue)" />
      <MemberSignature Language="F#" Value="abstract member Add : Microsoft.Health.ItemTypes.CodedValue -&gt; unit&#xA;override this.Add : Microsoft.Health.ItemTypes.CodedValue -&gt; unit" Usage="codableValue.Add item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Health.ItemTypes.CodedValue" />
      </Parameters>
      <Docs>
        <param name="item">
            The code item to add.
            </param>
        <summary>
            Adds an item to the code list. 
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.Health.VocabularyItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.Health.VocabularyItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.CodableValue.Add(Microsoft.Health.VocabularyItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As VocabularyItem)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.Health.VocabularyItem -&gt; unit" Usage="codableValue.Add item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Health.VocabularyItem" />
      </Parameters>
      <Docs>
        <param name="item">
            The <see cref="T:Microsoft.Health.VocabularyItem" /> to use. 
            </param>
        <summary>
            Encodes a <see cref="T:Microsoft.Health.VocabularyItem" /> as a CodedValue and
            adds it to the list of coded values.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.CodableValue.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="codableValue.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Removes all items from the code item list
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (Microsoft.Health.ItemTypes.CodedValue item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class Microsoft.Health.ItemTypes.CodedValue item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.CodableValue.Contains(Microsoft.Health.ItemTypes.CodedValue)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As CodedValue) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Contains : Microsoft.Health.ItemTypes.CodedValue -&gt; bool&#xA;override this.Contains : Microsoft.Health.ItemTypes.CodedValue -&gt; bool" Usage="codableValue.Contains item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Health.ItemTypes.CodedValue" />
      </Parameters>
      <Docs>
        <param name="item">
            The code item to search for in the list.
            </param>
        <summary>
            Gets a value indicating whether the code item list contains a 
            specific code.
            </summary>
        <returns>
          <b>true</b> if the item is in the collection; otherwise, <b>false</b>.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Microsoft.Health.ItemTypes.CodedValue[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class Microsoft.Health.ItemTypes.CodedValue[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.CodableValue.CopyTo(Microsoft.Health.ItemTypes.CodedValue[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As CodedValue(), arrayIndex As Integer)" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Microsoft.Health.ItemTypes.CodedValue[] * int -&gt; unit&#xA;override this.CopyTo : Microsoft.Health.ItemTypes.CodedValue[] * int -&gt; unit" Usage="codableValue.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="Microsoft.Health.ItemTypes.CodedValue[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
            The array to copy the elements to.
            </param>
        <param name="arrayIndex">
            The array location at which to begin copying.
            </param>
        <summary>
            Copies the elements of the code item list to an array, starting at 
            a particular array index.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="arrayIndex" /> parameter is less than 0.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            The <paramref name="array" /> parameter is <b>null</b>.
            </exception>
        <exception cref="T:System.ArgumentException">
            The <paramref name="array" /> parameter is multidimensional, 
            or the <paramref name="arrayIndex" /> value is equal to or greater 
            than the length of the array, or the number of elements in the 
            source collection is greater than the available space from <paramref name="arrayIndex" /> 
            to the end of the destination array, or a type cannot be cast 
            automatically to the type of the destination array.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.CodableValue.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="Microsoft.Health.ItemTypes.CodableValue.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the number of code items
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;Microsoft.Health.ItemTypes.CodedValue&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class Microsoft.Health.ItemTypes.CodedValue&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.CodableValue.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of CodedValue)" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;Microsoft.Health.ItemTypes.CodedValue&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;Microsoft.Health.ItemTypes.CodedValue&gt;" Usage="codableValue.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;Microsoft.Health.ItemTypes.CodedValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
        <returns>
            An enumerator.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (Microsoft.Health.ItemTypes.CodedValue item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(class Microsoft.Health.ItemTypes.CodedValue item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.CodableValue.IndexOf(Microsoft.Health.ItemTypes.CodedValue)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As CodedValue) As Integer" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : Microsoft.Health.ItemTypes.CodedValue -&gt; int&#xA;override this.IndexOf : Microsoft.Health.ItemTypes.CodedValue -&gt; int" Usage="codableValue.IndexOf item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Health.ItemTypes.CodedValue" />
      </Parameters>
      <Docs>
        <param name="item">
            The <see cref="T:Microsoft.Health.ItemTypes.CodedValue" /> to find the index of.
            </param>
        <summary>
            Determines the index of a specific item
            </summary>
        <returns>
            The index of item if found in the list; otherwise, -1.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, Microsoft.Health.ItemTypes.CodedValue item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, class Microsoft.Health.ItemTypes.CodedValue item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.CodableValue.Insert(System.Int32,Microsoft.Health.ItemTypes.CodedValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As CodedValue)" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * Microsoft.Health.ItemTypes.CodedValue -&gt; unit&#xA;override this.Insert : int * Microsoft.Health.ItemTypes.CodedValue -&gt; unit" Usage="codableValue.Insert (index, item)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="Microsoft.Health.ItemTypes.CodedValue" />
      </Parameters>
      <Docs>
        <param name="index">
            The zero-based index at which item should be inserted.
            </param>
        <param name="item">
            The object to insert.
            </param>
        <summary>
            Inserts an code item at the specified index.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="index" /> parameter is out of range.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.CodableValue.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="Microsoft.Health.ItemTypes.CodableValue.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating whether the code item list is read-only.
            </summary>
        <value>
          <b>true</b> if the list is read-only; otherwise, <b>false</b>.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Health.ItemTypes.CodedValue this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Health.ItemTypes.CodedValue Item(int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.CodableValue.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As CodedValue" />
      <MemberSignature Language="F#" Value="member this.Item(int) : Microsoft.Health.ItemTypes.CodedValue with get, set" Usage="Microsoft.Health.ItemTypes.CodableValue.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ItemTypes.CodedValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
            The zero-based index of the element to get or set
            </param>
        <summary>
            Gets or sets the element at the specified index.
            </summary>
        <value>
            The code item at the specified index.
            </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="index" /> parameter is out of range.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="ParseXml">
      <MemberSignature Language="C#" Value="public override void ParseXml (System.Xml.XPath.XPathNavigator navigator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ParseXml(class System.Xml.XPath.XPathNavigator navigator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.CodableValue.ParseXml(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ParseXml (navigator As XPathNavigator)" />
      <MemberSignature Language="F#" Value="override this.ParseXml : System.Xml.XPath.XPathNavigator -&gt; unit" Usage="codableValue.ParseXml navigator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="navigator"> 
            The XML node representing the vocabulary entry.
            </param>
        <summary> 
            Populates the data for the vocabulary entry from the XML.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            The <paramref name="navigator" /> parameter is <b>null</b>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (Microsoft.Health.ItemTypes.CodedValue item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(class Microsoft.Health.ItemTypes.CodedValue item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.CodableValue.Remove(Microsoft.Health.ItemTypes.CodedValue)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As CodedValue) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Remove : Microsoft.Health.ItemTypes.CodedValue -&gt; bool&#xA;override this.Remove : Microsoft.Health.ItemTypes.CodedValue -&gt; bool" Usage="codableValue.Remove item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Health.ItemTypes.CodedValue" />
      </Parameters>
      <Docs>
        <param name="item">
            The <see cref="T:Microsoft.Health.ItemTypes.CodedValue" /> object to remove.
            </param>
        <summary>
            Removes the first occurrence of this code item from the code item
            list.
            </summary>
        <returns>
          <b>true</b> if removal succeeded; otherwise, <b>false</b>.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.CodableValue.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="codableValue.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
            The zero-based index of the item to remove.
            </param>
        <summary>
            Removes a code item at the specified index.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="index" /> parameter is out of range.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.CodableValue.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns an enumerator that iterates through the code list.
            </summary>
        <returns>
            An enumerator.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.CodableValue.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="Microsoft.Health.ItemTypes.CodableValue.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the value of the codable value.
            </summary>
        <value>
            A string representing the value.
            </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
            The <paramref name="value" /> parameter is <b>null</b>, empty, or contains only
            whitespace when setting.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.CodableValue.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="codableValue.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets the string representation of a codable value.
            </summary>
        <returns>
            A string representing the value.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public override void WriteXml (string nodeName, System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteXml(string nodeName, class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.CodableValue.WriteXml(System.String,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteXml (nodeName As String, writer As XmlWriter)" />
      <MemberSignature Language="F#" Value="override this.WriteXml : string * System.Xml.XmlWriter -&gt; unit" Usage="codableValue.WriteXml (nodeName, writer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeName" Type="System.String" />
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="nodeName">
            The name of the outer element for the vocabulary entry.
            </param>
        <param name="writer"> 
            The XmlWriter to write the vocabulary entry to.
            </param>
        <summary> 
            Writes the vocabulary entry to the specified XML writer.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
            The <paramref name="nodeName" /> parameter is <b>null</b> or empty.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer" /> parameter is <b>null</b>.
            </exception>
        <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <see cref="P:Microsoft.Health.ItemTypes.CodableValue.Text" />, <see cref="P:Microsoft.Health.ItemTypes.CodedValue.Value" />, or
            <see cref="P:Microsoft.Health.ItemTypes.CodedValue.Family" /> parameter is <b>null</b> or empty.
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>