<Type Name="HealthVaultPlatformApplication" FullName="Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication">
  <TypeSignature Language="C#" Value="public class HealthVaultPlatformApplication" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HealthVaultPlatformApplication extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Health</AssemblyName>
    <AssemblyVersion>2.64.0.0</AssemblyVersion>
    <AssemblyVersion>2.68.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Provides low-level access to the HealthVault message operations.
            </summary>
    <remarks>
      <see cref="T:Microsoft.Health.HealthVaultPlatform" /> uses this class to perform operations. Set 
            HealthVaultPlatformApplication.Current to a derived class to intercept all message calls.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HealthVaultPlatformApplication ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableMock">
      <MemberSignature Language="C#" Value="public static void DisableMock ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DisableMock() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.DisableMock" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Removes mocking of calls to this class.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
            There is no mock registered for this class.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="EnableMock">
      <MemberSignature Language="C#" Value="public static void EnableMock (Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication mock);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnableMock(class Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication mock) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.EnableMock(Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mock" Type="Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication" />
      </Parameters>
      <Docs>
        <param name="mock">The mocking class.</param>
        <summary>
            Enables mocking of calls to this class.
            </summary>
        <remarks>
            The calling class should pass in a class that derives from this
            class and overrides the calls to be mocked. 
            </remarks>
        <exception cref="T:System.InvalidOperationException">
            There is already a mock registered for this class.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationInfo">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Health.ApplicationInfo GetApplicationInfo (Microsoft.Health.HealthServiceConnection connection, bool allLanguages);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Health.ApplicationInfo GetApplicationInfo(class Microsoft.Health.HealthServiceConnection connection, bool allLanguages) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.GetApplicationInfo(Microsoft.Health.HealthServiceConnection,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ApplicationInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.HealthServiceConnection" />
        <Parameter Name="allLanguages" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="connection">The connection to use to perform the operation. This connection
             must be application level. </param>
        <param name="allLanguages">
             A boolean value indicating whether the localized values all languages should be 
             returned, just one language. This affects all properties which can have multiple 
             localized values, including <see cref="P:Microsoft.Health.ApplicationInfo.CultureSpecificNames" />, 
             <see cref="P:Microsoft.Health.ApplicationInfo.CultureSpecificDescriptions" />,
             <see cref="P:Microsoft.Health.ApplicationInfo.CultureSpecificAuthorizationReasons" />, 
             <see cref="P:Microsoft.Health.ApplicationInfo.LargeLogo" />,
             <see cref="P:Microsoft.Health.ApplicationInfo.SmallLogo" />,
             <see cref="P:Microsoft.Health.ApplicationInfo.PrivacyStatement" />,
             <see cref="P:Microsoft.Health.ApplicationInfo.TermsOfUse" />,
             and <see cref="P:Microsoft.Health.ApplicationInfo.DtcSuccessMessage" /></param>
        <summary>
             Gets the application configuration information for the calling application.
             </summary>
        <returns>
             An ApplicationInfo object for the calling application.
             </returns>
        <remarks>
             This method always calls the HealthVault service to get the latest 
             information. It returns installation configuration about the calling 
             application.
             </remarks>
        <exception cref="T:Microsoft.Health.HealthServiceException">
             The HealthVault service returned an error.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAuthorizedPeople">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.Health.PersonInfo&gt; GetAuthorizedPeople (Microsoft.Health.ApplicationConnection connection, Microsoft.Health.GetAuthorizedPeopleSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Health.PersonInfo&gt; GetAuthorizedPeople(class Microsoft.Health.ApplicationConnection connection, class Microsoft.Health.GetAuthorizedPeopleSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.GetAuthorizedPeople(Microsoft.Health.ApplicationConnection,Microsoft.Health.GetAuthorizedPeopleSettings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication/&lt;GetAuthorizedPeople&gt;d__6))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Health.PersonInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.ApplicationConnection" />
        <Parameter Name="settings" Type="Microsoft.Health.GetAuthorizedPeopleSettings" />
      </Parameters>
      <Docs>
        <param name="connection">The connection to use to perform the operation. This connection
             must be application-level. </param>
        <param name="settings">
             The <see cref="T:Microsoft.Health.GetAuthorizedPeopleSettings" /> object used to configure the 
             IEnumerable iterator returned by this method.
             </param>
        <summary>
             Gets information about people authorized for an application.
             </summary>
        <returns>
             An IEnumerable iterator of <see cref="T:Microsoft.Health.PersonInfo" /> objects representing 
             people authorized for the application.
             </returns>
        <remarks>
             The returned IEnumerable iterator will access the HealthVault service 
             across the network. See <see cref="T:Microsoft.Health.GetAuthorizedPeopleSettings" /> for applicable 
             settings.
             </remarks>
        <exception cref="T:Microsoft.Health.HealthServiceException">
             The HealthVault service returned an error. The retrieval can be retried from the 
             current position by calling this method again and using the last successfully 
             retrieved person Id for <see cref="P:Microsoft.Health.GetAuthorizedPeopleSettings.StartingPersonId" />.        
             </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="settings" /> is null.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="GetUpdatedRecordInfoForApplication">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Microsoft.Health.HealthRecordUpdateInfo&gt; GetUpdatedRecordInfoForApplication (Microsoft.Health.HealthServiceConnection connection, Nullable&lt;DateTime&gt; updatedDate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Microsoft.Health.HealthRecordUpdateInfo&gt; GetUpdatedRecordInfoForApplication(class Microsoft.Health.HealthServiceConnection connection, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; updatedDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.GetUpdatedRecordInfoForApplication(Microsoft.Health.HealthServiceConnection,System.Nullable{System.DateTime})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Health.HealthRecordUpdateInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.HealthServiceConnection" />
        <Parameter Name="updatedDate" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="connection">The connection to use to perform the operation. This connection
             must be application level. </param>
        <param name="updatedDate">
             Date that is used to filter health record IDs according to whether or not they have
             been updated since the specified date.
             </param>
        <summary>
             Gets a list of <see cref="T:Microsoft.Health.HealthRecordUpdateInfo" /> objects for the current application, 
             that optionally have been updated since a specified date.
             </summary>
        <returns>
             List of <see cref="T:Microsoft.Health.HealthRecordUpdateInfo" /> objects filtered by any specified input parameters.
             </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUpdatedRecordsForApplication">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Guid&gt; GetUpdatedRecordsForApplication (Microsoft.Health.HealthServiceConnection connection, Nullable&lt;DateTime&gt; updatedDate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;valuetype System.Guid&gt; GetUpdatedRecordsForApplication(class Microsoft.Health.HealthServiceConnection connection, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; updatedDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.GetUpdatedRecordsForApplication(Microsoft.Health.HealthServiceConnection,System.Nullable{System.DateTime})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Guid&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.HealthServiceConnection" />
        <Parameter Name="updatedDate" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="connection">The connection to use to perform the operation. This connection
             must be application level. </param>
        <param name="updatedDate">
             Date that is used to filter health record IDs according to whether or not they have
             been updated since the specified date.
             </param>
        <summary>
             Gets a list of health record IDs for the current application, 
             that optionally have been updated since a specified date.
             </summary>
        <returns>
             List of health record IDs filtered by any specified input parameters.
             </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewSignupCode">
      <MemberSignature Language="C#" Value="public virtual string NewSignupCode (Microsoft.Health.HealthServiceConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string NewSignupCode(class Microsoft.Health.HealthServiceConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.NewSignupCode(Microsoft.Health.HealthServiceConnection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.HealthServiceConnection" />
      </Parameters>
      <Docs>
        <param name="connection">The connection to use to perform the operation. This connection
             must be application level. </param>
        <summary>
             Generates a new signup code that should be passed to HealthVault Shell in order
             to create a new user account.
             </summary>
        <returns>
             A signup code that can be used to create an account.
             </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>