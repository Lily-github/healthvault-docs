<Type Name="HealthVaultPlatformInformation" FullName="Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation">
  <TypeSignature Language="C#" Value="public class HealthVaultPlatformInformation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HealthVaultPlatformInformation extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation" />
  <TypeSignature Language="VB.NET" Value="Public Class HealthVaultPlatformInformation" />
  <TypeSignature Language="F#" Value="type HealthVaultPlatformInformation = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Health</AssemblyName>
    <AssemblyVersion>2.64.0.0</AssemblyVersion>
    <AssemblyVersion>2.68.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Provides low-level access to the HealthVault message operations.
            </summary>
    <remarks>
      <see cref="T:Microsoft.Health.HealthVaultPlatform" /> uses this class to perform operations. Set 
            HealthVaultPlatformInformation.Current to a derived class to intercept all message calls.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HealthVaultPlatformInformation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearItemTypeCache">
      <MemberSignature Language="C#" Value="public virtual void ClearItemTypeCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearItemTypeCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.ClearItemTypeCache" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ClearItemTypeCache ()" />
      <MemberSignature Language="F#" Value="abstract member ClearItemTypeCache : unit -&gt; unit&#xA;override this.ClearItemTypeCache : unit -&gt; unit" Usage="healthVaultPlatformInformation.ClearItemTypeCache " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> 
            Removes all item type definitions from the client-side cache.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableMock">
      <MemberSignature Language="C#" Value="public static void DisableMock ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DisableMock() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.DisableMock" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DisableMock ()" />
      <MemberSignature Language="F#" Value="static member DisableMock : unit -&gt; unit" Usage="Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.DisableMock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Removes mocking of calls to this class.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
            There is no mock registered for this class.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="EnableMock">
      <MemberSignature Language="C#" Value="public static void EnableMock (Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation mock);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnableMock(class Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation mock) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.EnableMock(Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EnableMock (mock As HealthVaultPlatformInformation)" />
      <MemberSignature Language="F#" Value="static member EnableMock : Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation -&gt; unit" Usage="Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.EnableMock mock" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mock" Type="Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation" />
      </Parameters>
      <Docs>
        <param name="mock">The mocking class.</param>
        <summary>
            Enables mocking of calls to this class.
            </summary>
        <remarks>
            The calling class should pass in a class that derives from this
            class and overrides the calls to be mocked. 
            </remarks>
        <exception cref="T:System.InvalidOperationException">
            There is already a mock registered for this class.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHealthRecordItemTypeDefinition">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IDictionary&lt;Guid,Microsoft.Health.HealthRecordItemTypeDefinition&gt; GetHealthRecordItemTypeDefinition (System.Collections.Generic.IList&lt;Guid&gt; typeIds, Microsoft.Health.HealthRecordItemTypeSections sections, System.Collections.Generic.IList&lt;string&gt; imageTypes, Nullable&lt;DateTime&gt; lastClientRefreshDate, Microsoft.Health.HealthServiceConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;valuetype System.Guid, class Microsoft.Health.HealthRecordItemTypeDefinition&gt; GetHealthRecordItemTypeDefinition(class System.Collections.Generic.IList`1&lt;valuetype System.Guid&gt; typeIds, valuetype Microsoft.Health.HealthRecordItemTypeSections sections, class System.Collections.Generic.IList`1&lt;string&gt; imageTypes, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; lastClientRefreshDate, class Microsoft.Health.HealthServiceConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.GetHealthRecordItemTypeDefinition(System.Collections.Generic.IList{System.Guid},Microsoft.Health.HealthRecordItemTypeSections,System.Collections.Generic.IList{System.String},System.Nullable{System.DateTime},Microsoft.Health.HealthServiceConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHealthRecordItemTypeDefinition (typeIds As IList(Of Guid), sections As HealthRecordItemTypeSections, imageTypes As IList(Of String), lastClientRefreshDate As Nullable(Of DateTime), connection As HealthServiceConnection) As IDictionary(Of Guid, HealthRecordItemTypeDefinition)" />
      <MemberSignature Language="F#" Value="abstract member GetHealthRecordItemTypeDefinition : System.Collections.Generic.IList&lt;Guid&gt; * Microsoft.Health.HealthRecordItemTypeSections * System.Collections.Generic.IList&lt;string&gt; * Nullable&lt;DateTime&gt; * Microsoft.Health.HealthServiceConnection -&gt; System.Collections.Generic.IDictionary&lt;Guid, Microsoft.Health.HealthRecordItemTypeDefinition&gt;&#xA;override this.GetHealthRecordItemTypeDefinition : System.Collections.Generic.IList&lt;Guid&gt; * Microsoft.Health.HealthRecordItemTypeSections * System.Collections.Generic.IList&lt;string&gt; * Nullable&lt;DateTime&gt; * Microsoft.Health.HealthServiceConnection -&gt; System.Collections.Generic.IDictionary&lt;Guid, Microsoft.Health.HealthRecordItemTypeDefinition&gt;" Usage="healthVaultPlatformInformation.GetHealthRecordItemTypeDefinition (typeIds, sections, imageTypes, lastClientRefreshDate, connection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.Guid,Microsoft.Health.HealthRecordItemTypeDefinition&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeIds" Type="System.Collections.Generic.IList&lt;System.Guid&gt;" />
        <Parameter Name="sections" Type="Microsoft.Health.HealthRecordItemTypeSections" />
        <Parameter Name="imageTypes" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="lastClientRefreshDate" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="connection" Type="Microsoft.Health.HealthServiceConnection" />
      </Parameters>
      <Docs>
        <param name="typeIds">
            A collection of health item type IDs whose details are being requested. Null 
            indicates that all health item types should be returned.
            </param>
        <param name="sections">
            A collection of HealthRecordItemTypeSections enumeration values that indicate the type 
            of details to be returned for the specified health item records(s).
            </param>
        <param name="imageTypes">
            A collection of strings that identify which health item record images should be 
            retrieved.
            
            This requests an image of the specified mime type should be returned. For example, 
            to request a GIF image, "image/gif" should be specified. For icons, "image/vnd.microsoft.icon" 
            should be specified. Note, not all health item records will have all image types and 
            some may not have any images at all.
                           
            If '*' is specified, all image types will be returned.
            </param>
        <param name="lastClientRefreshDate">
            A <see cref="T:System.DateTime" /> instance that specifies the time of the last refresh
            made by the client.
            </param>
        <param name="connection"> 
            A connection to the HealthVault service.
            </param>
        <summary>
            Gets the definitions for one or more health record item type definitions
            supported by HealthVault.
            </summary>
        <returns>
            The type definitions for the specified types, or empty if the
            <paramref name="typeIds" /> parameter does not represent a known unique
            type identifier.
            </returns>
        <remarks>
            This method calls the HealthVault service if the types are not
            already in the client-side cache.
            </remarks>
        <exception cref="T:System.ArgumentException">
            If <paramref name="typeIds" /> is <b>null</b> and empty, or 
            <paramref name="typeIds" /> is <b>null</b> and member in <paramref name="typeIds" /> is 
            <see cref="F:System.Guid.Empty" />.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            If <paramref name="connection" /> parameter is <b>null</b>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceDefinition">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Health.ServiceInfo GetServiceDefinition (Microsoft.Health.HealthServiceConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Health.ServiceInfo GetServiceDefinition(class Microsoft.Health.HealthServiceConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.GetServiceDefinition(Microsoft.Health.HealthServiceConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServiceDefinition (connection As HealthServiceConnection) As ServiceInfo" />
      <MemberSignature Language="F#" Value="abstract member GetServiceDefinition : Microsoft.Health.HealthServiceConnection -&gt; Microsoft.Health.ServiceInfo&#xA;override this.GetServiceDefinition : Microsoft.Health.HealthServiceConnection -&gt; Microsoft.Health.ServiceInfo" Usage="healthVaultPlatformInformation.GetServiceDefinition connection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ServiceInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.HealthServiceConnection" />
      </Parameters>
      <Docs>
        <param name="connection">The connection to use to perform the operation. </param>
        <summary>
            Gets information about the HealthVault service.
            </summary>
        <returns>
            A <see cref="T:Microsoft.Health.ServiceInfo" /> instance that contains the service version, SDK
            assemblies versions and URLs, method information, and so on.
            </returns>
        <remarks>
            Gets the latest information about the HealthVault service. This 
            includes:<br />
            - The version of the service.<br />
            - The SDK assembly URLs.<br />
            - The SDK assembly versions.<br />
            - The SDK documentation URL.<br />
            - The URL to the HealthVault Shell.<br />
            - The schema definition for the HealthVault method's request and 
              response.<br />
            - The common schema definitions for types that the HealthVault methods
              use.<br />
            - Information about all available HealthVault instances.<br /></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="connection" /> is <b>null</b>.
            </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            The HealthVault service returned an error.
            </exception>
        <exception cref="T:System.UriFormatException">
            One or more URL strings returned by HealthVault is invalid.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceDefinition">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Health.ServiceInfo GetServiceDefinition (Microsoft.Health.HealthServiceConnection connection, Microsoft.Health.ServiceInfoSections responseSections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Health.ServiceInfo GetServiceDefinition(class Microsoft.Health.HealthServiceConnection connection, valuetype Microsoft.Health.ServiceInfoSections responseSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.GetServiceDefinition(Microsoft.Health.HealthServiceConnection,Microsoft.Health.ServiceInfoSections)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServiceDefinition (connection As HealthServiceConnection, responseSections As ServiceInfoSections) As ServiceInfo" />
      <MemberSignature Language="F#" Value="abstract member GetServiceDefinition : Microsoft.Health.HealthServiceConnection * Microsoft.Health.ServiceInfoSections -&gt; Microsoft.Health.ServiceInfo&#xA;override this.GetServiceDefinition : Microsoft.Health.HealthServiceConnection * Microsoft.Health.ServiceInfoSections -&gt; Microsoft.Health.ServiceInfo" Usage="healthVaultPlatformInformation.GetServiceDefinition (connection, responseSections)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ServiceInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.HealthServiceConnection" />
        <Parameter Name="responseSections" Type="Microsoft.Health.ServiceInfoSections" />
      </Parameters>
      <Docs>
        <param name="connection">The connection to use to perform the operation.</param>
        <param name="responseSections">
            A bitmask of one or more <see cref="T:Microsoft.Health.ServiceInfoSections" /> which specify the
            categories of information to be populated in the <see cref="T:Microsoft.Health.ServiceInfo" />.
            </param>
        <summary>
            Gets information about the HealthVault service corresponding to the specified
            categories.
            </summary>
        <returns>
            A <see cref="T:Microsoft.Health.ServiceInfo" /> instance that contains some or all of the service version,
            SDK assemblies versions and URLs, method information, and so on, depending on which
            information categories were specified.
            </returns>
        <remarks>
            Gets the latest information about the HealthVault service. Depending on the specified
            <paramref name="responseSections" />, this will include some or all of:<br />
            - The version of the service.<br />
            - The SDK assembly URLs.<br />
            - The SDK assembly versions.<br />
            - The SDK documentation URL.<br />
            - The URL to the HealthVault Shell.<br />
            - The schema definition for the HealthVault method's request and 
              response.<br />
            - The common schema definitions for types that the HealthVault methods
              use.<br />
            - Information about all available HealthVault instances.<br />
            
            Retrieving only the sections you need will give a faster response time than
            downloading the full response.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="connection" /> is <b>null</b>.
            </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            The HealthVault service returned an error.
            </exception>
        <exception cref="T:System.UriFormatException">
            One or more URL strings returned by HealthVault is invalid.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceDefinition">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Health.ServiceInfo GetServiceDefinition (Microsoft.Health.HealthServiceConnection connection, DateTime lastUpdatedTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Health.ServiceInfo GetServiceDefinition(class Microsoft.Health.HealthServiceConnection connection, valuetype System.DateTime lastUpdatedTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.GetServiceDefinition(Microsoft.Health.HealthServiceConnection,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServiceDefinition (connection As HealthServiceConnection, lastUpdatedTime As DateTime) As ServiceInfo" />
      <MemberSignature Language="F#" Value="abstract member GetServiceDefinition : Microsoft.Health.HealthServiceConnection * DateTime -&gt; Microsoft.Health.ServiceInfo&#xA;override this.GetServiceDefinition : Microsoft.Health.HealthServiceConnection * DateTime -&gt; Microsoft.Health.ServiceInfo" Usage="healthVaultPlatformInformation.GetServiceDefinition (connection, lastUpdatedTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ServiceInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.HealthServiceConnection" />
        <Parameter Name="lastUpdatedTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="connection">The connection to use to perform the operation.</param>
        <param name="lastUpdatedTime">
            The time of the last update to an existing cached copy of <see cref="T:Microsoft.Health.ServiceInfo" />.
            </param>
        <summary>
            Gets information about the HealthVault service only if it has been updated since
            the specified update time.
            </summary>
        <returns>
            If there were updates to the service information since the specified <paramref name="lastUpdatedTime" />,
            a <see cref="T:Microsoft.Health.ServiceInfo" /> instance that contains the service version, SDK
            assemblies versions and URLs, method information, and so on.  Otherwise, if there were no updates,
            returns <b>null</b>.
            </returns>
        <remarks>
            Gets the latest information about the HealthVault service, if there were updates
            since the specified <paramref name="lastUpdatedTime" />.  If there were no updates
            the method returns <b>null</b>.
            This includes:<br />
            - The version of the service.<br />
            - The SDK assembly URLs.<br />
            - The SDK assembly versions.<br />
            - The SDK documentation URL.<br />
            - The URL to the HealthVault Shell.<br />
            - The schema definition for the HealthVault method's request and 
              response.<br />
            - The common schema definitions for types that the HealthVault methods
              use.<br />
            - Information about all available HealthVault instances.<br /></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="connection" /> is <b>null</b>.
            </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            The HealthVault service returned an error.
            </exception>
        <exception cref="T:System.UriFormatException">
            One or more URL strings returned by HealthVault is invalid.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceDefinition">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Health.ServiceInfo GetServiceDefinition (Microsoft.Health.HealthServiceConnection connection, Microsoft.Health.ServiceInfoSections responseSections, DateTime lastUpdatedTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Health.ServiceInfo GetServiceDefinition(class Microsoft.Health.HealthServiceConnection connection, valuetype Microsoft.Health.ServiceInfoSections responseSections, valuetype System.DateTime lastUpdatedTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.GetServiceDefinition(Microsoft.Health.HealthServiceConnection,Microsoft.Health.ServiceInfoSections,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServiceDefinition (connection As HealthServiceConnection, responseSections As ServiceInfoSections, lastUpdatedTime As DateTime) As ServiceInfo" />
      <MemberSignature Language="F#" Value="abstract member GetServiceDefinition : Microsoft.Health.HealthServiceConnection * Microsoft.Health.ServiceInfoSections * DateTime -&gt; Microsoft.Health.ServiceInfo&#xA;override this.GetServiceDefinition : Microsoft.Health.HealthServiceConnection * Microsoft.Health.ServiceInfoSections * DateTime -&gt; Microsoft.Health.ServiceInfo" Usage="healthVaultPlatformInformation.GetServiceDefinition (connection, responseSections, lastUpdatedTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ServiceInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.HealthServiceConnection" />
        <Parameter Name="responseSections" Type="Microsoft.Health.ServiceInfoSections" />
        <Parameter Name="lastUpdatedTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="connection">The connection to use to perform the operation.</param>
        <param name="responseSections">
            A bitmask of one or more <see cref="T:Microsoft.Health.ServiceInfoSections" /> which specify the
            categories of information to be populated in the <see cref="T:Microsoft.Health.ServiceInfo" />.
            </param>
        <param name="lastUpdatedTime">
            The time of the last update to an existing cached copy of <see cref="T:Microsoft.Health.ServiceInfo" />.
            </param>
        <summary>
            Gets information about the HealthVault service corresponding to the specified
            categories if the requested information has been updated since the specified
            update time.
            </summary>
        <returns>
            If there were updates to the service information since the specified <paramref name="lastUpdatedTime" />,
            a <see cref="T:Microsoft.Health.ServiceInfo" /> instance that contains some or all of the service version,
            SDK  assemblies versions and URLs, method information, and so on, depending on which
            information categories were specified.  Otherwise, if there were no updates, returns
            <b>null</b>.
            </returns>
        <remarks>
            Gets the latest information about the HealthVault service, if there were updates
            since the specified <paramref name="lastUpdatedTime" />.  If there were no updates
            the method returns <b>null</b>.
            Depending on the specified
            <paramref name="responseSections" />, this will include some or all of:<br />
            - The version of the service.<br />
            - The SDK assembly URLs.<br />
            - The SDK assembly versions.<br />
            - The SDK documentation URL.<br />
            - The URL to the HealthVault Shell.<br />
            - The schema definition for the HealthVault method's request and 
              response.<br />
            - The common schema definitions for types that the HealthVault methods
              use.<br />
            - Information about all available HealthVault instances.<br />
            
            Retrieving only the sections you need will give a faster response time than
            downloading the full response.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="connection" /> is <b>null</b>.
            </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            The HealthVault service returned an error.
            </exception>
        <exception cref="T:System.UriFormatException">
            One or more URL strings returned by HealthVault is invalid.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SelectInstance">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Health.HealthServiceInstance SelectInstance (Microsoft.Health.HealthServiceConnection connection, Microsoft.Health.Location preferredLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Health.HealthServiceInstance SelectInstance(class Microsoft.Health.HealthServiceConnection connection, class Microsoft.Health.Location preferredLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.SelectInstance(Microsoft.Health.HealthServiceConnection,Microsoft.Health.Location)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectInstance (connection As HealthServiceConnection, preferredLocation As Location) As HealthServiceInstance" />
      <MemberSignature Language="F#" Value="abstract member SelectInstance : Microsoft.Health.HealthServiceConnection * Microsoft.Health.Location -&gt; Microsoft.Health.HealthServiceInstance&#xA;override this.SelectInstance : Microsoft.Health.HealthServiceConnection * Microsoft.Health.Location -&gt; Microsoft.Health.HealthServiceInstance" Usage="healthVaultPlatformInformation.SelectInstance (connection, preferredLocation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.HealthServiceInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.HealthServiceConnection" />
        <Parameter Name="preferredLocation" Type="Microsoft.Health.Location" />
      </Parameters>
      <Docs>
        <param name="connection">
            The connection to use to perform the operation.
            </param>
        <param name="preferredLocation">
            A user's preferred geographical location, used to select the best instance
            in which to create a new HealthVault account. If there is a location associated
            with the credential that will be used to log into the account, that location
            should be used.
            </param>
        <summary>
            Gets the instance where a HealthVault account should be created
            for the specified account location.
            </summary>
        <returns>
            A <see cref="T:Microsoft.Health.HealthServiceInstance" /> object represents the selected instance,
            or null if no suitable instance exists.
            </returns>
        <remarks>
            If no suitable instance can be found, a null value is returned. This can happen,
            for example, if the account location is not supported by HealthVault.
            
            Currently the returned instance IDs all parse to integers, but that is not
            guaranteed and should not be relied upon.
            </remarks>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            The HealthVault service returned an error.
            </exception>
        <exception cref="T:System.ArgumentException">
            If <paramref name="preferredLocation" /> is <b>null</b>.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            If <paramref name="connection" /> parameter is <b>null</b>.
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>