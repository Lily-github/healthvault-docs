<Type Name="HealthVaultPlatformPerson" FullName="Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson">
  <TypeSignature Language="C#" Value="public class HealthVaultPlatformPerson" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HealthVaultPlatformPerson extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Health</AssemblyName>
    <AssemblyVersion>2.64.0.0</AssemblyVersion>
    <AssemblyVersion>2.68.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Provides low-level access to the HealthVault message operations.
            </summary>
    <remarks>
      <see cref="T:Microsoft.Health.HealthVaultPlatform" /> uses this class to perform operations. Set 
            HealthVaultPlatformPerson.Current to a derived class to intercept all message calls.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HealthVaultPlatformPerson ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableMock">
      <MemberSignature Language="C#" Value="public static void DisableMock ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DisableMock() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.DisableMock" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Removes mocking of calls to this class.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
            There is no mock registered for this class.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="EnableMock">
      <MemberSignature Language="C#" Value="public static void EnableMock (Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson mock);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnableMock(class Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson mock) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.EnableMock(Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mock" Type="Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson" />
      </Parameters>
      <Docs>
        <param name="mock">The mocking class.</param>
        <summary>
            Enables mocking of calls to this class.
            </summary>
        <remarks>
            The calling class should pass in a class that derives from this
            class and overrides the calls to be mocked. 
            </remarks>
        <exception cref="T:System.InvalidOperationException">
            There is already a mock registered for this class.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationSettings">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Health.ApplicationSettings GetApplicationSettings (Microsoft.Health.HealthServiceConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Health.ApplicationSettings GetApplicationSettings(class Microsoft.Health.HealthServiceConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.GetApplicationSettings(Microsoft.Health.HealthServiceConnection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ApplicationSettings</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.HealthServiceConnection" />
      </Parameters>
      <Docs>
        <param name="connection">The connection to use to perform the operation. This connection
             must be authenticated. </param>
        <summary>
             Gets the application settings for the current application and
             person.
             </summary>
        <returns>
             The complete set application settings including the XML settings, selected record ID, etc.
             </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAuthorizedRecords">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ObjectModel.Collection&lt;Microsoft.Health.HealthRecordInfo&gt; GetAuthorizedRecords (Microsoft.Health.ApplicationConnection connection, System.Collections.Generic.IList&lt;Guid&gt; recordIds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.Collection`1&lt;class Microsoft.Health.HealthRecordInfo&gt; GetAuthorizedRecords(class Microsoft.Health.ApplicationConnection connection, class System.Collections.Generic.IList`1&lt;valuetype System.Guid&gt; recordIds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.GetAuthorizedRecords(Microsoft.Health.ApplicationConnection,System.Collections.Generic.IList{System.Guid})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;Microsoft.Health.HealthRecordInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.ApplicationConnection" />
        <Parameter Name="recordIds" Type="System.Collections.Generic.IList&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="connection">The connection to use to perform the operation. This connection
             must be authenticated. </param>
        <param name="recordIds">
             The unique identifiers for the records to retrieve.
             </param>
        <summary>
             Gets the <see cref="T:Microsoft.Health.HealthRecordInfo" /> for the records identified
             by the specified <paramref name="recordIds" />.
             </summary>
        <returns>
             A collection of the records matching the specified record 
             identifiers and authorized for the authenticated person.
             </returns>
        <remarks>
             This method is useful in cases where the application is storing
             record identifiers and needs access to the functionality provided
             by the object model.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPersonInfo">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Health.PersonInfo GetPersonInfo (Microsoft.Health.ApplicationConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Health.PersonInfo GetPersonInfo(class Microsoft.Health.ApplicationConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.GetPersonInfo(Microsoft.Health.ApplicationConnection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.PersonInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.ApplicationConnection" />
      </Parameters>
      <Docs>
        <param name="connection">The connection to use to perform the operation. This connection
            must be authenticated. </param>
        <summary>
            Gets the information about the person specified.
            </summary>
        <returns>
            Information about the person's HealthVault account.
            </returns>
        <remarks>
            This method always calls the HealthVault service to get the latest 
            information. It is recommended that the calling application cache 
            the return value and only call this method again if it needs to 
            refresh the cache.
            </remarks>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            The HealthVault service returned an error.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetApplicationSettings">
      <MemberSignature Language="C#" Value="public virtual void SetApplicationSettings (Microsoft.Health.HealthServiceConnection connection, string requestParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetApplicationSettings(class Microsoft.Health.HealthServiceConnection connection, string requestParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.SetApplicationSettings(Microsoft.Health.HealthServiceConnection,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.HealthServiceConnection" />
        <Parameter Name="requestParameters" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connection">The connection to use to perform the operation. This connection
             must be authenticated. </param>
        <param name="requestParameters">
             The request parameters.
             </param>
        <summary>
             Sets the application settings for the current application and
             person.
             </summary>
        <remarks>
             This may be <b>null</b> if no application settings have been 
             stored for the application or user.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetApplicationSettings">
      <MemberSignature Language="C#" Value="public virtual void SetApplicationSettings (Microsoft.Health.HealthServiceConnection connection, System.Xml.XPath.IXPathNavigable applicationSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetApplicationSettings(class Microsoft.Health.HealthServiceConnection connection, class System.Xml.XPath.IXPathNavigable applicationSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.SetApplicationSettings(Microsoft.Health.HealthServiceConnection,System.Xml.XPath.IXPathNavigable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.HealthServiceConnection" />
        <Parameter Name="applicationSettings" Type="System.Xml.XPath.IXPathNavigable" />
      </Parameters>
      <Docs>
        <param name="connection">The connection to use to perform the operation. This connection
             must be authenticated. </param>
        <param name="applicationSettings">
             The application settings XML.
             </param>
        <summary>
             Sets the application settings for the current application and
             person.
             </summary>
        <remarks>
             This may be <b>null</b> if no application settings have been 
             stored for the application or user.
             </remarks>
      </Docs>
    </Member>
  </Members>
</Type>