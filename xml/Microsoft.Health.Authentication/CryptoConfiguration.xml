<Type Name="CryptoConfiguration" FullName="Microsoft.Health.Authentication.CryptoConfiguration">
  <TypeSignature Language="C#" Value="public static class CryptoConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CryptoConfiguration extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Health.Authentication.CryptoConfiguration" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Health</AssemblyName>
    <AssemblyVersion>2.64.0.0</AssemblyVersion>
    <AssemblyVersion>2.68.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Provides access to both application-level settings and 
            methods to both specify and construct cryptographic primitives.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateHashAlgorithm">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.HashAlgorithm CreateHashAlgorithm ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.HashAlgorithm CreateHashAlgorithm() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.Authentication.CryptoConfiguration.CreateHashAlgorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HashAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Creates a new hash algorithm with default values.
            </summary>
        <returns>
            An instance of <see cref="P:Microsoft.Health.Authentication.CryptoConfiguration.HashAlgorithmName" />.
            </returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:Microsoft.Health.Authentication.CryptoConfiguration.HashAlgorithmName" />
      </Docs>
    </Member>
    <Member MemberName="CreateHashAlgorithm">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.HashAlgorithm CreateHashAlgorithm (string algorithmName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.HashAlgorithm CreateHashAlgorithm(string algorithmName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.Authentication.CryptoConfiguration.CreateHashAlgorithm(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HashAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithmName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithmName">
            The well-known algorithm name that specifies the Hash Message 
            Authentication Code (HMAC) primitive.
            </param>
        <summary>
            Creates a new hash algorithm based on the specified 
            <paramref name="algorithmName" />.
            </summary>
        <returns>
            A new hash algorithm of type <paramref name="algorithmName" />.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
            The <paramref name="algorithmName" /> parameter is not supported.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateHmac">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.HMAC CreateHmac (byte[] keyMaterial);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.HMAC CreateHmac(unsigned int8[] keyMaterial) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.Authentication.CryptoConfiguration.CreateHmac(System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HMAC</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyMaterial" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="keyMaterial">
            The provided key material to be used as the HMAC key.
            </param>
        <summary>
            Creates a new Hash Message Authentication Code (HMAC) based on 
            the current key.
            </summary>
        <returns>
            A new HMAC instance using <see cref="P:Microsoft.Health.Authentication.CryptoConfiguration.HmacAlgorithmName" /> 
            and the provided <paramref name="keyMaterial" />.  
            </returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:Microsoft.Health.Authentication.CryptoConfiguration.HmacAlgorithmName" />
        <exception cref="T:System.ArgumentException">
            The <paramref name="keyMaterial" /> parameter is <b>null</b> or empty.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateHmac">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.HMAC CreateHmac (string algorithmName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.HMAC CreateHmac(string algorithmName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.Authentication.CryptoConfiguration.CreateHmac(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HMAC</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithmName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithmName">
            The well-known algorithm name which specifies the HMAC primitive.
            </param>
        <summary>
            Creates a new Hash Message Authentication Code (HMAC) instance 
            based on the specified <paramref name="algorithmName" />.
            </summary>
        <returns>
            A new HMAC instance of type <paramref name="algorithmName" />.
            </returns>
        <remarks>
            Since this method does not take user-specified keyMaterial,
            the caller must set the key after this call and before using the 
            HMAC algorithm.
            </remarks>
        <exception cref="T:System.ArgumentException">
            The <paramref name="algorithmName" /> parameter is <b>null</b> or empty.
            The <paramref name="algorithmName" /> parameter is not of type HMAC.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateHmac">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.HMAC CreateHmac (string algorithmName, byte[] keyMaterial);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.HMAC CreateHmac(string algorithmName, unsigned int8[] keyMaterial) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.Authentication.CryptoConfiguration.CreateHmac(System.String,System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HMAC</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithmName" Type="System.String" />
        <Parameter Name="keyMaterial" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="algorithmName">
            The well-known algorithm name that specifies the HMAC primitive.
            </param>
        <param name="keyMaterial">
            The provided key material to be used as the HMAC key.
            </param>
        <summary>
            Creates a new Hash Message Authentication Code (HMAC) instance 
            using the specified <paramref name="algorithmName" /> and 
            <paramref name="keyMaterial" />.
            </summary>
        <returns>
            A new HMAC instance.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
            The <paramref name="algorithmName" /> parameter is <b>null</b> or empty.
            The <paramref name="algorithmName" /> parameter is not of type HMAC.
            The <paramref name="keyMaterial" /> parameter is <b>null</b> or empty.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSymmetricAlgorithm">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.SymmetricAlgorithm CreateSymmetricAlgorithm (string algorithmName, byte[] keyMaterial);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.SymmetricAlgorithm CreateSymmetricAlgorithm(string algorithmName, unsigned int8[] keyMaterial) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.Authentication.CryptoConfiguration.CreateSymmetricAlgorithm(System.String,System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.SymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithmName" Type="System.String" />
        <Parameter Name="keyMaterial" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="algorithmName">
            The well-known algorithm name that specifies the symmetric 
            algorithm primitive.
            </param>
        <param name="keyMaterial">
            The provided key material to be used as the Hash Message 
            Authentication Code (HMAC) key.
            </param>
        <summary>
            Constructs a symmetric key algorithm based on the specified 
            <paramref name="algorithmName" /> and <paramref name="keyMaterial" />.
            </summary>
        <returns>
            A new symmetric key of type <paramref name="algorithmName" />.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
            The <paramref name="algorithmName" /> parameter is not supported,
            or the <paramref name="keyMaterial" /> parameter is invalid.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="CryptoServiceProviderName">
      <MemberSignature Language="C#" Value="public static string CryptoServiceProviderName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string CryptoServiceProviderName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.Authentication.CryptoConfiguration.CryptoServiceProviderName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name of the crypto service provider for the currently
            running operating system version.
            
            </summary>
        <value />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateHmacSharedSecret">
      <MemberSignature Language="C#" Value="public static byte[] GenerateHmacSharedSecret ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] GenerateHmacSharedSecret() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.Authentication.CryptoConfiguration.GenerateHmacSharedSecret" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Generates an HMAC shared secret for the default HMAC algorithm.
             </summary>
        <returns>
            A byte array representing the HMAC shared secret.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithmName">
      <MemberSignature Language="C#" Value="public static string HashAlgorithmName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string HashAlgorithmName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.Authentication.CryptoConfiguration.HashAlgorithmName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the preferred application-wide hash algorithm name.
            </summary>
        <value>
            A string representing the algorithm name.
            </value>
        <remarks>
            The application-wide algorithm name can be specified in the 
            configuration, but if it is not, then a default value is used.  
            This algorithm name can be used to construct a hash primitive using
            <see cref="M:Microsoft.Health.Authentication.CryptoConfiguration.CreateHashAlgorithm(System.String)" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HmacAlgorithmName">
      <MemberSignature Language="C#" Value="public static string HmacAlgorithmName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string HmacAlgorithmName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.Authentication.CryptoConfiguration.HmacAlgorithmName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the preferred application-wide Hash Message Authentication Code 
            (HMAC) algorithm name.
            </summary>
        <value>
            The HMAC algorithm name.
            </value>
        <remarks>
            The application-wide algorithm name may be specified in the 
            configuration, but if it is not, then a default value is used.  
            This algorithm name can be used to construct an HMAC primitive 
            using <see cref="M:Microsoft.Health.Authentication.CryptoConfiguration.CreateHmac(System.String)" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureAlgorithmName">
      <MemberSignature Language="C#" Value="public static string SignatureAlgorithmName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string SignatureAlgorithmName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.Authentication.CryptoConfiguration.SignatureAlgorithmName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the preferred application-wide signature algorithm name.
            </summary>
        <value>
            A string representing the signature algorithm name.
            </value>
        <remarks>
            The application-wide algorithm name can be specified in the 
            configuration, but if it is not, then a default value is used.  
            The signature signing algorithm is currently RSA. The RSA algorithm
            name is prepended to the default 
            <seealso cref="P:Microsoft.Health.Authentication.CryptoConfiguration.SignatureHashAlgorithmName" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureHashAlgorithmName">
      <MemberSignature Language="C#" Value="public static string SignatureHashAlgorithmName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string SignatureHashAlgorithmName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.Authentication.CryptoConfiguration.SignatureHashAlgorithmName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the preferred application-wide hash algorithm name for 
            computing digests to be used for signature generation.
            </summary>
        <value>
            A string representing the algorithm name.
            </value>
        <remarks>
            The application-wide algorithm name can be specified in the 
            configuration, but if it is not, then a default value is used.  
            This algorithm name can be used to construct a hash primitive using
            <see cref="M:Microsoft.Health.Authentication.CryptoConfiguration.CreateHashAlgorithm(System.String)" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="SymmetricAlgorithmName">
      <MemberSignature Language="C#" Value="public static string SymmetricAlgorithmName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string SymmetricAlgorithmName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.Authentication.CryptoConfiguration.SymmetricAlgorithmName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the preferred application-wide symmetric algorithm name.
            </summary>
        <value>
            A string representing the default symmetric algorithm name.
            </value>
        <remarks>
            The application-wide algorithm name can be specified in the 
            configuration, but if it is not, then a default value is used.  
            The symmetric algorithm name can be used to construct a
            symmetric algorithm via <see cref="M:Microsoft.Health.Authentication.CryptoConfiguration.CreateSymmetricAlgorithm(System.String,System.Byte[])" />.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>