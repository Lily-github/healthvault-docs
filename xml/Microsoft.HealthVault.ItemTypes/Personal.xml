<Type Name="Personal" FullName="Microsoft.HealthVault.ItemTypes.Personal">
  <TypeSignature Language="C#" Value="public class Personal : Microsoft.HealthVault.Thing.ThingBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Personal extends Microsoft.HealthVault.Thing.ThingBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.HealthVault.ItemTypes.Personal" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.HealthVault</AssemblyName>
    <AssemblyVersion>1.66.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.HealthVault.Thing.ThingBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
             Represents thing type that encapsulates identifying
             information about a person.
             </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Personal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.Personal.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
             Creates a new instance of the <see cref="T:Microsoft.HealthVault.ItemTypes.Personal" /> class with default
             values.
             </summary>
        <remarks>
             The item is not added to the health record until the <see cref="M:Microsoft.HealthVault.Clients.IThingClient.CreateNewThingsAsync``1(System.Guid,System.Collections.Generic.ICollection{``0})" /> method is called.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="BirthDate">
      <MemberSignature Language="C#" Value="public Microsoft.HealthVault.ItemTypes.HealthServiceDateTime BirthDate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.HealthVault.ItemTypes.HealthServiceDateTime BirthDate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.Personal.BirthDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.HealthVault.ItemTypes.HealthServiceDateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the birth date.
             </summary>
        <value>
             A <see cref="T:Microsoft.HealthVault.ItemTypes.HealthServiceDateTime" /> instance representing the date.
             </value>
        <remarks>
             Set the value to <b>null</b> if the birth date should not be stored.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="BloodType">
      <MemberSignature Language="C#" Value="public Microsoft.HealthVault.ItemTypes.CodableValue BloodType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.HealthVault.ItemTypes.CodableValue BloodType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.Personal.BloodType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.HealthVault.ItemTypes.CodableValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the ABO and Rhesus +/- blood type for the person.
             </summary>
        <value>
             A <see cref="T:Microsoft.HealthVault.ItemTypes.CodableValue" /> instance representing the blood type.
             </value>
        <remarks>
             Set the value to <b>null</b> if the blood type should not be stored.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateOfDeath">
      <MemberSignature Language="C#" Value="public Microsoft.HealthVault.ItemTypes.ApproximateDateTime DateOfDeath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.HealthVault.ItemTypes.ApproximateDateTime DateOfDeath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.Personal.DateOfDeath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.HealthVault.ItemTypes.ApproximateDateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the date of death for the person.
             </summary>
        <value>
             An <see cref="T:Microsoft.HealthVault.ItemTypes.ApproximateDateTime" /> instance representing the date.
             </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmploymentStatus">
      <MemberSignature Language="C#" Value="public string EmploymentStatus { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmploymentStatus" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.Personal.EmploymentStatus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the employment status of the person.
             </summary>
        <value>
             A <see cref="T:Microsoft.HealthVault.ItemTypes.CodableValue" /> instance representing the employment
             status.
             </value>
        <remarks>
             Set the value to <b>null</b> if the employment status should not be
             stored.
             </remarks>
        <exception cref="T:System.ArgumentException">
             If <paramref name="value" /> contains only whitespace.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="Ethnicity">
      <MemberSignature Language="C#" Value="public Microsoft.HealthVault.ItemTypes.CodableValue Ethnicity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.HealthVault.ItemTypes.CodableValue Ethnicity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.Personal.Ethnicity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.HealthVault.ItemTypes.CodableValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the ethnicity of the person.
             </summary>
        <value>
             A <see cref="T:Microsoft.HealthVault.ItemTypes.CodableValue" /> instance representing the ethnicity.
             </value>
        <remarks>
             Set the value to <b>null</b> if the ethnicity should not be stored.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="HighestEducationLevel">
      <MemberSignature Language="C#" Value="public Microsoft.HealthVault.ItemTypes.CodableValue HighestEducationLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.HealthVault.ItemTypes.CodableValue HighestEducationLevel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.Personal.HighestEducationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.HealthVault.ItemTypes.CodableValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the highest education level of the person.
             </summary>
        <value>
             A <see cref="T:Microsoft.HealthVault.ItemTypes.CodableValue" /> instance representing the education level.
             </value>
        <remarks>
             Set the value to <b>null</b> if the level should not be stored.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDeceased">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; IsDeceased { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsDeceased" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.Personal.IsDeceased" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets a value indicating whether the person is deceased.
             </summary>
        <value>
          <b>true</b> if the person is deceased; otherwise, <b>false</b>.
             </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDisabled">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; IsDisabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsDisabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.Personal.IsDisabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets a value indicating whether the person has a disability.
             </summary>
        <value>
          <b>true</b> if the person has a disability; otherwise, <b>false</b>.
             </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVeteran">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; IsVeteran { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsVeteran" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.Personal.IsVeteran" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets a value indicating whether the person is a veteran.
             </summary>
        <value>
          <b>true</b> if the person is a veteran; otherwise, <b>false</b>.
             </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaritalStatus">
      <MemberSignature Language="C#" Value="public Microsoft.HealthVault.ItemTypes.CodableValue MaritalStatus { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.HealthVault.ItemTypes.CodableValue MaritalStatus" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.Personal.MaritalStatus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.HealthVault.ItemTypes.CodableValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the marital status of the person.
             </summary>
        <value>
             A <see cref="T:Microsoft.HealthVault.ItemTypes.CodableValue" /> instance representing the marital status.
             </value>
        <remarks>
             Set the value to <b>null</b> if the marital status should not be stored.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public Microsoft.HealthVault.ItemTypes.Name Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.HealthVault.ItemTypes.Name Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.Personal.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.HealthVault.ItemTypes.Name</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the name of the person.
             </summary>
        <value>
             The name of the person.
             </value>
        <remarks>
             Set the value to <b>null</b> if the name should not be stored.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="OrganDonor">
      <MemberSignature Language="C#" Value="public string OrganDonor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OrganDonor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.Personal.OrganDonor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the organ donor status of the person.
             </summary>
        <value>
             A string representing the status.
             </value>
        <remarks>
             Set the value to <b>null</b> if the status should not be
             stored.
             </remarks>
        <exception cref="T:System.ArgumentException">
             If <paramref name="value" /> contains only whitespace.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="ParseXml">
      <MemberSignature Language="C#" Value="protected override void ParseXml (System.Xml.XPath.IXPathNavigable typeSpecificXml);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ParseXml(class System.Xml.XPath.IXPathNavigable typeSpecificXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.Personal.ParseXml(System.Xml.XPath.IXPathNavigable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeSpecificXml" Type="System.Xml.XPath.IXPathNavigable" />
      </Parameters>
      <Docs>
        <param name="typeSpecificXml">
             The XML to get the personal data from.
             </param>
        <summary>
             Populates this <see cref="T:Microsoft.HealthVault.ItemTypes.Personal" /> instance from the data in the XML.
             </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
             The first node in <paramref name="typeSpecificXml" /> is not
             a personal node.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="Religion">
      <MemberSignature Language="C#" Value="public Microsoft.HealthVault.ItemTypes.CodableValue Religion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.HealthVault.ItemTypes.CodableValue Religion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.Personal.Religion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.HealthVault.ItemTypes.CodableValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the religion of the person.
             </summary>
        <value>
             A <see cref="T:Microsoft.HealthVault.ItemTypes.CodableValue" /> instance representing the religion.
             </value>
        <remarks>
             Set the value to <b>null</b> if the religion should not be stored.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="SocialSecurityNumber">
      <MemberSignature Language="C#" Value="public string SocialSecurityNumber { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SocialSecurityNumber" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.Personal.SocialSecurityNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the deployment-specific national identifier for
             the person.
             </summary>
        <value>
             An instance representing the
             deployment-specific national identifier.
             </value>
        <remarks>
             Set the value to <b>null</b> if the deployment-specific national
             identifier should not be stored.
             </remarks>
        <exception cref="T:System.ArgumentException">
             If <paramref name="value" /> contains only whitespace.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.Personal.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
             Gets a string representation of the personal item.
             </summary>
        <returns>
             A string representation of the personal item.
             </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeId">
      <MemberSignature Language="C#" Value="public static readonly Guid TypeId;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Guid TypeId" />
      <MemberSignature Language="DocId" Value="F:Microsoft.HealthVault.ItemTypes.Personal.TypeId" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Retrieves the unique identifier for the item type.
             </summary>
        <returns>
             A GUID.
             </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public override void WriteXml (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteXml(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.Personal.WriteXml(System.Xml.XmlWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
             The XmlWriter to write the personal data to.
             </param>
        <summary>
             Writes the personal data to the specified XmlWriter.
             </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
             If <paramref name="writer" /> is <b>null</b>.
             </exception>
      </Docs>
    </Member>
  </Members>
</Type>
