<Type Name="LabTestResultGroup" FullName="Microsoft.HealthVault.ItemTypes.LabTestResultGroup">
  <TypeSignature Language="C#" Value="public class LabTestResultGroup : Microsoft.HealthVault.ItemTypes.ItemBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LabTestResultGroup extends Microsoft.HealthVault.ItemTypes.ItemBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.HealthVault.ItemTypes.LabTestResultGroup" />
  <TypeSignature Language="VB.NET" Value="Public Class LabTestResultGroup&#xA;Inherits ItemBase" />
  <TypeSignature Language="F#" Value="type LabTestResultGroup = class&#xA;    inherit ItemBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.HealthVault</AssemblyName>
    <AssemblyVersion>1.65.0.0</AssemblyVersion>
    <AssemblyVersion>1.66.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.HealthVault.ItemTypes.ItemBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
              A set of lab test results.
             </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LabTestResultGroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.LabTestResultGroup.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
             Initialize a new instance of the <see cref="T:Microsoft.HealthVault.ItemTypes.LabTestResultGroup" />
             class with default values.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LabTestResultGroup (Microsoft.HealthVault.ItemTypes.CodableValue groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.HealthVault.ItemTypes.CodableValue groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.LabTestResultGroup.#ctor(Microsoft.HealthVault.ItemTypes.CodableValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (groupName As CodableValue)" />
      <MemberSignature Language="F#" Value="new Microsoft.HealthVault.ItemTypes.LabTestResultGroup : Microsoft.HealthVault.ItemTypes.CodableValue -&gt; Microsoft.HealthVault.ItemTypes.LabTestResultGroup" Usage="new Microsoft.HealthVault.ItemTypes.LabTestResultGroup groupName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="groupName" Type="Microsoft.HealthVault.ItemTypes.CodableValue" />
      </Parameters>
      <Docs>
        <param name="groupName">
             The name of this set of tests.
             </param>
        <summary>
             Initialize a new instance of the <see cref="T:Microsoft.HealthVault.ItemTypes.LabTestResultGroup" />
             class with group name.
             </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
             If <paramref name="groupName" /> is <b>null</b>.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="GroupName">
      <MemberSignature Language="C#" Value="public Microsoft.HealthVault.ItemTypes.CodableValue GroupName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.HealthVault.ItemTypes.CodableValue GroupName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.LabTestResultGroup.GroupName" />
      <MemberSignature Language="VB.NET" Value="Public Property GroupName As CodableValue" />
      <MemberSignature Language="F#" Value="member this.GroupName : Microsoft.HealthVault.ItemTypes.CodableValue with get, set" Usage="Microsoft.HealthVault.ItemTypes.LabTestResultGroup.GroupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.HealthVault.ItemTypes.CodableValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the name of this set of tests.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
             If <paramref name="value" /> is <b>null</b>.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="LaboratoryName">
      <MemberSignature Language="C#" Value="public Microsoft.HealthVault.ItemTypes.Organization LaboratoryName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.HealthVault.ItemTypes.Organization LaboratoryName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.LabTestResultGroup.LaboratoryName" />
      <MemberSignature Language="VB.NET" Value="Public Property LaboratoryName As Organization" />
      <MemberSignature Language="F#" Value="member this.LaboratoryName : Microsoft.HealthVault.ItemTypes.Organization with get, set" Usage="Microsoft.HealthVault.ItemTypes.LabTestResultGroup.LaboratoryName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.HealthVault.ItemTypes.Organization</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the information about the laboratory which performed
             this set of tests.
             </summary>
        <value>To be added.</value>
        <remarks>
             Laboratory name should be set to <b>null</b> if it is unknown.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseXml">
      <MemberSignature Language="C#" Value="public override void ParseXml (System.Xml.XPath.XPathNavigator navigator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ParseXml(class System.Xml.XPath.XPathNavigator navigator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.LabTestResultGroup.ParseXml(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ParseXml (navigator As XPathNavigator)" />
      <MemberSignature Language="F#" Value="override this.ParseXml : System.Xml.XPath.XPathNavigator -&gt; unit" Usage="labTestResultGroup.ParseXml navigator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="navigator">
             The XML to get the lab test results group type data from.
             </param>
        <summary>
             Populates this <see cref="T:Microsoft.HealthVault.ItemTypes.LabTestResultGroup" /> instance from the data in the XML.
             </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
             If <paramref name="navigator" /> is <b>null</b>.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="Results">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;Microsoft.HealthVault.ItemTypes.LabTestResultDetails&gt; Results { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class Microsoft.HealthVault.ItemTypes.LabTestResultDetails&gt; Results" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.LabTestResultGroup.Results" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Results As Collection(Of LabTestResultDetails)" />
      <MemberSignature Language="F#" Value="member this.Results : System.Collections.ObjectModel.Collection&lt;Microsoft.HealthVault.ItemTypes.LabTestResultDetails&gt;" Usage="Microsoft.HealthVault.ItemTypes.LabTestResultGroup.Results" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;Microsoft.HealthVault.ItemTypes.LabTestResultDetails&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets a set of results for this group.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public Microsoft.HealthVault.ItemTypes.CodableValue Status { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.HealthVault.ItemTypes.CodableValue Status" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.LabTestResultGroup.Status" />
      <MemberSignature Language="VB.NET" Value="Public Property Status As CodableValue" />
      <MemberSignature Language="F#" Value="member this.Status : Microsoft.HealthVault.ItemTypes.CodableValue with get, set" Usage="Microsoft.HealthVault.ItemTypes.LabTestResultGroup.Status" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.HealthVault.ItemTypes.CodableValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the overall status of this group and the sub group tests.
             </summary>
        <value>To be added.</value>
        <remarks>
             The status can be incomplete, pending, processing, etc. It should be
             set to <b>null</b> if it is unknown.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubGroups">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;Microsoft.HealthVault.ItemTypes.LabTestResultGroup&gt; SubGroups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class Microsoft.HealthVault.ItemTypes.LabTestResultGroup&gt; SubGroups" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.LabTestResultGroup.SubGroups" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubGroups As Collection(Of LabTestResultGroup)" />
      <MemberSignature Language="F#" Value="member this.SubGroups : System.Collections.ObjectModel.Collection&lt;Microsoft.HealthVault.ItemTypes.LabTestResultGroup&gt;" Usage="Microsoft.HealthVault.ItemTypes.LabTestResultGroup.SubGroups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;Microsoft.HealthVault.ItemTypes.LabTestResultGroup&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets lab test result sub groups.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.LabTestResultGroup.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="labTestResultGroup.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
             Gets a string representation of the lab test results group type item.
             </summary>
        <returns>
             A string representation of the lab test results group type item.
             </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public override void WriteXml (string nodeName, System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteXml(string nodeName, class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.LabTestResultGroup.WriteXml(System.String,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteXml (nodeName As String, writer As XmlWriter)" />
      <MemberSignature Language="F#" Value="override this.WriteXml : string * System.Xml.XmlWriter -&gt; unit" Usage="labTestResultGroup.WriteXml (nodeName, writer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeName" Type="System.String" />
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="nodeName">
             The name of the node to write XML output.
             </param>
        <param name="writer">
             The XmlWriter to write the lab test results group type data to.
             </param>
        <summary>
             Writes the lab test results group type data to the specified XmlWriter.
             </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
             If <paramref name="nodeName" /> parameter is <b> null </b> or empty.
             </exception>
        <exception cref="T:System.ArgumentNullException">
             If <paramref name="writer" /> parameter is <b> null </b>.
             </exception>
        <exception cref="T:Microsoft.HealthVault.Exceptions.ThingSerializationException">
             If <see cref="P:Microsoft.HealthVault.ItemTypes.LabTestResultGroup.GroupName" /> parameter is <b> null</b>.
             </exception>
      </Docs>
    </Member>
  </Members>
</Type>