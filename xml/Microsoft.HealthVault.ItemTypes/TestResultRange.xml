<Type Name="TestResultRange" FullName="Microsoft.HealthVault.ItemTypes.TestResultRange">
  <TypeSignature Language="C#" Value="public class TestResultRange : Microsoft.HealthVault.ItemTypes.ItemBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TestResultRange extends Microsoft.HealthVault.ItemTypes.ItemBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.HealthVault.ItemTypes.TestResultRange" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.HealthVault</AssemblyName>
    <AssemblyVersion>1.65.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.HealthVault.ItemTypes.ItemBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
             A range related to a specific test result.
             </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TestResultRange ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.TestResultRange.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
             Initialize a new instance of the <see cref="T:Microsoft.HealthVault.ItemTypes.TestResultRange" />
             class with default values.
             </summary>
        <remarks>
             Each test result can contain multiple ranges that are useful
             to interpret the result value. Examples include reference range
             and therapeutic range.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TestResultRange (Microsoft.HealthVault.ItemTypes.CodableValue type, Microsoft.HealthVault.ItemTypes.CodableValue text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.HealthVault.ItemTypes.CodableValue type, class Microsoft.HealthVault.ItemTypes.CodableValue text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.TestResultRange.#ctor(Microsoft.HealthVault.ItemTypes.CodableValue,Microsoft.HealthVault.ItemTypes.CodableValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="Microsoft.HealthVault.ItemTypes.CodableValue" />
        <Parameter Name="text" Type="Microsoft.HealthVault.ItemTypes.CodableValue" />
      </Parameters>
      <Docs>
        <param name="type">
             Type is the type of a test result.
             </param>
        <param name="text">
             Text is the range expressed as text.
             </param>
        <summary>
             Initialize a new instance of the <see cref="T:Microsoft.HealthVault.ItemTypes.TestResultRange" />
             class with mandatory parameters.
             </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
             If <paramref name="text" /> or <paramref name="type" /> is <b> null </b>.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="ParseXml">
      <MemberSignature Language="C#" Value="public override void ParseXml (System.Xml.XPath.XPathNavigator navigator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ParseXml(class System.Xml.XPath.XPathNavigator navigator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.TestResultRange.ParseXml(System.Xml.XPath.XPathNavigator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="navigator">
             The XML to get the test result range data from.
             </param>
        <summary>
             Populates this <see cref="T:Microsoft.HealthVault.ItemTypes.TestResultRange" /> instance from the data in the XML.
             </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
             The first node in <paramref name="navigator" /> is <b>null</b>.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="RangeType">
      <MemberSignature Language="C#" Value="public Microsoft.HealthVault.ItemTypes.CodableValue RangeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.HealthVault.ItemTypes.CodableValue RangeType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.TestResultRange.RangeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.HealthVault.ItemTypes.CodableValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the type of the range.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
             If <paramref name="value" /> is <b>null</b>.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public Microsoft.HealthVault.ItemTypes.CodableValue Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.HealthVault.ItemTypes.CodableValue Text" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.TestResultRange.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.HealthVault.ItemTypes.CodableValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the range expressed as text.
             </summary>
        <value>To be added.</value>
        <remarks>
             The text element is used in two different ways:
             When a numeric range is used, the text element should contain a textual version of the
             numeric range.
             When the range is non-numeric, the text element contains the range and the range value is omitted. The range may
             also be coded to a vocabulary.
            
             Examples:
             A color range (such as clear to yellow) would be coded using by setting the text element to "clear to yellow",
             and by assigning a code from an appropriate vocabulary.
            
             A numeric range (such as 0.5 - 1.6) would be stored in the minimum and maximum elements of the value, and \
             additionally would be coded by setting the text element to "0.5 - 1.6".
            
             Contact the HealthVault team to help define this vocabulary.
             </remarks>
        <exception cref="T:System.ArgumentNullException">
             If <paramref name="value" /> is <b>null</b>.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.TestResultRange.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
             Gets a string representation of the test result range item.
             </summary>
        <returns>
             A string representation of the test result range item.
             </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public Microsoft.HealthVault.ItemTypes.TestResultRangeValue Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.HealthVault.ItemTypes.TestResultRangeValue Value" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.TestResultRange.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.HealthVault.ItemTypes.TestResultRangeValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the minimum and maximum of the range.
             </summary>
        <value>To be added.</value>
        <remarks>
             The minimum or maximum value may be omitted to specify open-ended ranges.
             Example:
             The range "greater than 3.5" would be coded by setting the minimum to 3.5 and omitting the maximum.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public override void WriteXml (string nodeName, System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteXml(string nodeName, class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.TestResultRange.WriteXml(System.String,System.Xml.XmlWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeName" Type="System.String" />
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="nodeName">
             The name of the node to write XML.
             </param>
        <param name="writer">
             The XmlWriter to write the test result range data to.
             </param>
        <summary>
             Writes the test result range data to the specified XmlWriter.
             </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
             If <paramref name="nodeName" /> is <b> null </b> or empty.
             </exception>
        <exception cref="T:System.ArgumentNullException">
             If <paramref name="writer" /> is <b> null </b>.
             </exception>
        <exception cref="T:Microsoft.HealthVault.Exceptions.ThingSerializationException">
             If <see cref="T:System.Type" /> or <see cref="P:Microsoft.HealthVault.ItemTypes.TestResultRange.Text" /> is <b> null </b>.
             </exception>
      </Docs>
    </Member>
  </Members>
</Type>
