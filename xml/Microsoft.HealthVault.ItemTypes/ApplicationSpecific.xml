<Type Name="ApplicationSpecific" FullName="Microsoft.HealthVault.ItemTypes.ApplicationSpecific">
  <TypeSignature Language="C#" Value="public class ApplicationSpecific : Microsoft.HealthVault.Thing.ThingBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ApplicationSpecific extends Microsoft.HealthVault.Thing.ThingBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.HealthVault.ItemTypes.ApplicationSpecific" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.HealthVault</AssemblyName>
    <AssemblyVersion>1.65.0.0</AssemblyVersion>
    <AssemblyVersion>1.66.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.HealthVault.Thing.ThingBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
             Represents a thing type that encapsulates application
             specific data.
             </summary>
    <remarks>
             Application specific data can only ever be read or updated by the application
             that created.
            
             This type is not all that interesting by itself but used as a base class
             it helps developers implement their own application specific type class
             to handle instances by registering the class using the
             <see cref="M:Microsoft.HealthVault.Thing.ItemTypeManager.RegisterApplicationSpecificHandler(System.Guid,System.String,System.Type)" />
             method.
             </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ApplicationSpecific ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.ApplicationSpecific.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
             Creates a new instance of the <see cref="T:Microsoft.HealthVault.ItemTypes.ApplicationSpecific" /> class with default values.
             </summary>
        <remarks>
             The item is not added to the health record until the <see cref="M:Microsoft.HealthVault.Clients.IThingClient.CreateNewThingsAsync``1(System.Guid,System.Collections.Generic.ICollection{``0})" /> method is called.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ApplicationSpecific (Guid applicationId, string subtypeTag, string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Guid applicationId, string subtypeTag, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.ApplicationSpecific.#ctor(System.Guid,System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="applicationId" Type="System.Guid" />
        <Parameter Name="subtypeTag" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="applicationId">
             The unique application identifier.
             </param>
        <param name="subtypeTag">
             A string identifying a unique schema for the application specific
             type. The string format is completely arbitrary and is used by
             the application to identify the thing application specific
             data as a specific subtype.
             </param>
        <param name="description">
             A descriptive display text for this item.
             </param>
        <summary>
             Creates a new instance of the <see cref="T:Microsoft.HealthVault.ItemTypes.ApplicationSpecific" /> class with the
             specified application ID, subtype tag, and description.
             </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
             If <paramref name="applicationId" /> is <see cref="F:System.Guid.Empty" />,
             or if <paramref name="subtypeTag" /> or <paramref name="description" /> is
             <b>null</b> or empty.
             </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ApplicationSpecific (string applicationId, string subtypeTag, string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string applicationId, string subtypeTag, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.ApplicationSpecific.#ctor(System.String,System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="applicationId" Type="System.String" />
        <Parameter Name="subtypeTag" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="applicationId">
             The unique application identifier.
             </param>
        <param name="subtypeTag">
             A string identifying a unique schema for the application specific
             type. The string format is completely arbitrary and is used by
             the application to identify the thing application specific
             data as a specific subtype.
             </param>
        <param name="description">
             A descriptive display text for this item.
             </param>
        <summary>
             Creates a new instance of the <see cref="T:Microsoft.HealthVault.ItemTypes.ApplicationSpecific" /> class with the
             specified application ID, subtype tag, and description.
             </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
             If <paramref name="applicationId" />, <paramref name="subtypeTag" />, or
             <paramref name="description" /> is <b>null</b> or empty.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="ApplicationId">
      <MemberSignature Language="C#" Value="public string ApplicationId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.ApplicationSpecific.ApplicationId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the unique application identifier for which this application
             specific information pertains.
             </summary>
        <value>
             The application identifier should be in the form of a <see cref="T:System.Guid" />.
             </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
             If <paramref name="value" /> is <b>null</b> or empty.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="ApplicationSpecificXml">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Xml.XPath.IXPathNavigable&gt; ApplicationSpecificXml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Xml.XPath.IXPathNavigable&gt; ApplicationSpecificXml" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.ApplicationSpecific.ApplicationSpecificXml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Xml.XPath.IXPathNavigable&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets a collection of the application specific XML.
             </summary>
        <value>To be added.</value>
        <remarks>
             To change the application specific XML for the item, add or remove
             items in the collection.
             Derived classes can ignore this member.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.ApplicationSpecific.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the description of the item for display purposes.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
             If <paramref name="value" /> is <b>null</b>, empty, or contains only whitespace.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="ParseApplicationSpecificXml">
      <MemberSignature Language="C#" Value="protected virtual void ParseApplicationSpecificXml (System.Collections.Generic.IList&lt;System.Xml.XPath.IXPathNavigable&gt; applicationSpecific);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ParseApplicationSpecificXml(class System.Collections.Generic.IList`1&lt;class System.Xml.XPath.IXPathNavigable&gt; applicationSpecific) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.ApplicationSpecific.ParseApplicationSpecificXml(System.Collections.Generic.IList{System.Xml.XPath.IXPathNavigable})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationSpecific" Type="System.Collections.Generic.IList&lt;System.Xml.XPath.IXPathNavigable&gt;" />
      </Parameters>
      <Docs>
        <param name="applicationSpecific">
             An <see cref="T:System.Xml.XPath.XPathNavigator" /> focused on the "app-specific"
             element in the item XML.
             </param>
        <summary>
             Parses the parts of the application specific item type that is specific
             to each application.
             </summary>
        <remarks>
             The base elements that all application specific items contain are parsed by
             the base class. The derived class overrides this method to parse all
             application specific portions of the XML. The base class implementation
             places the application specific elements in the <see cref="P:Microsoft.HealthVault.ItemTypes.ApplicationSpecific.ApplicationSpecificXml" />
             property and then passes that collection to this method so that derived classes
             can further process those elements.  The base class implementation does nothing
             to process these elements.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseXml">
      <MemberSignature Language="C#" Value="protected override void ParseXml (System.Xml.XPath.IXPathNavigable typeSpecificXml);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ParseXml(class System.Xml.XPath.IXPathNavigable typeSpecificXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.ApplicationSpecific.ParseXml(System.Xml.XPath.IXPathNavigable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeSpecificXml" Type="System.Xml.XPath.IXPathNavigable" />
      </Parameters>
      <Docs>
        <param name="typeSpecificXml">
             The XML to get the application specific data from.
             </param>
        <summary>
             Populates this <see cref="T:Microsoft.HealthVault.ItemTypes.ApplicationSpecific" /> instance from the data in the XML.
             </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
             The first node in <paramref name="typeSpecificXml" /> is not
             an app-specific node.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="SubtypeTag">
      <MemberSignature Language="C#" Value="public string SubtypeTag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SubtypeTag" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.ApplicationSpecific.SubtypeTag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets a tag that uniquely identifies the schema for the application specific
             data.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
             If <paramref name="value" /> is <b>null</b>, empty, or contains only whitespace.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.ApplicationSpecific.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
             Gets a string representation of the application specific item.
             </summary>
        <returns>
             A string representation of the application specific item.
             </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeId">
      <MemberSignature Language="C#" Value="public static readonly Guid TypeId;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Guid TypeId" />
      <MemberSignature Language="DocId" Value="F:Microsoft.HealthVault.ItemTypes.ApplicationSpecific.TypeId" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Retrieves the unique identifier for the item type.
             </summary>
        <returns>
             A GUID.
             </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="When">
      <MemberSignature Language="C#" Value="public Microsoft.HealthVault.ItemTypes.HealthServiceDateTime When { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.HealthVault.ItemTypes.HealthServiceDateTime When" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.ApplicationSpecific.When" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.HealthVault.ItemTypes.HealthServiceDateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the date/time when the application specific item was created.
             </summary>
        <value>
             A <see cref="T:Microsoft.HealthVault.ItemTypes.HealthServiceDateTime" /> instance representing
             the date. The default value is the current year, month, and day.
             </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteApplicationSpecificXml">
      <MemberSignature Language="C#" Value="protected virtual void WriteApplicationSpecificXml (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteApplicationSpecificXml(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.ApplicationSpecific.WriteApplicationSpecificXml(System.Xml.XmlWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
             The XML writer to write the application specific XML to.
             </param>
        <summary>
             Writes the application specific XML to the specified writer.
             </summary>
        <remarks>
             The XML for the base elements that all application specific items contain is written by
             the base class. The derived class overrides this method to write all
             application specific portions of the XML. The base class implementation
             writes the XML in the <see cref="P:Microsoft.HealthVault.ItemTypes.ApplicationSpecific.ApplicationSpecificXml" /> property.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public override void WriteXml (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteXml(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.ApplicationSpecific.WriteXml(System.Xml.XmlWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
             The XmlWriter to write the application specific data to.
             </param>
        <summary>
             Writes the application specific data to the specified XmlWriter.
             </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
             If <paramref name="writer" /> is <b>null</b>.
             </exception>
        <exception cref="T:Microsoft.HealthVault.Exceptions.ThingSerializationException">
             If <see cref="P:Microsoft.HealthVault.ItemTypes.ApplicationSpecific.ApplicationId" />, <see cref="P:Microsoft.HealthVault.ItemTypes.ApplicationSpecific.SubtypeTag" />, or <see cref="P:Microsoft.HealthVault.ItemTypes.ApplicationSpecific.Description" /> is <b>null</b> or empty.
             </exception>
      </Docs>
    </Member>
  </Members>
</Type>