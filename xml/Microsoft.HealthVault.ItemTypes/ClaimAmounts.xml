<Type Name="ClaimAmounts" FullName="Microsoft.HealthVault.ItemTypes.ClaimAmounts">
  <TypeSignature Language="C#" Value="public class ClaimAmounts : Microsoft.HealthVault.ItemTypes.ItemBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClaimAmounts extends Microsoft.HealthVault.ItemTypes.ItemBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.HealthVault.ItemTypes.ClaimAmounts" />
  <TypeSignature Language="VB.NET" Value="Public Class ClaimAmounts&#xA;Inherits ItemBase" />
  <TypeSignature Language="F#" Value="type ClaimAmounts = class&#xA;    inherit ItemBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.HealthVault</AssemblyName>
    <AssemblyVersion>1.65.0.0</AssemblyVersion>
    <AssemblyVersion>1.66.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.HealthVault.ItemTypes.ItemBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The financial information related to a claim on an explanation of benefits.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimAmounts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.ClaimAmounts.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
             Creates a new instance of the <see cref="T:Microsoft.HealthVault.ItemTypes.ClaimAmounts" /> class with default values.
             </summary>
        <remarks>
             This item is not added to the health record until the <see cref="M:Microsoft.HealthVault.Clients.IThingClient.CreateNewThingsAsync``1(System.Guid,System.Collections.Generic.ICollection{``0})" /> method is called
             </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimAmounts (decimal chargedAmount, decimal negotiatedAmount, decimal coPayment, decimal deductible, decimal amountNotCovered, decimal eligibleForBenefits, decimal coinsurance, decimal miscellaneousAdjustments, decimal benefitsPaid, decimal patientResponsibility);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Decimal chargedAmount, valuetype System.Decimal negotiatedAmount, valuetype System.Decimal coPayment, valuetype System.Decimal deductible, valuetype System.Decimal amountNotCovered, valuetype System.Decimal eligibleForBenefits, valuetype System.Decimal coinsurance, valuetype System.Decimal miscellaneousAdjustments, valuetype System.Decimal benefitsPaid, valuetype System.Decimal patientResponsibility) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.ClaimAmounts.#ctor(System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (chargedAmount As Decimal, negotiatedAmount As Decimal, coPayment As Decimal, deductible As Decimal, amountNotCovered As Decimal, eligibleForBenefits As Decimal, coinsurance As Decimal, miscellaneousAdjustments As Decimal, benefitsPaid As Decimal, patientResponsibility As Decimal)" />
      <MemberSignature Language="F#" Value="new Microsoft.HealthVault.ItemTypes.ClaimAmounts : decimal * decimal * decimal * decimal * decimal * decimal * decimal * decimal * decimal * decimal -&gt; Microsoft.HealthVault.ItemTypes.ClaimAmounts" Usage="new Microsoft.HealthVault.ItemTypes.ClaimAmounts (chargedAmount, negotiatedAmount, coPayment, deductible, amountNotCovered, eligibleForBenefits, coinsurance, miscellaneousAdjustments, benefitsPaid, patientResponsibility)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="chargedAmount" Type="System.Decimal" />
        <Parameter Name="negotiatedAmount" Type="System.Decimal" />
        <Parameter Name="coPayment" Type="System.Decimal" />
        <Parameter Name="deductible" Type="System.Decimal" />
        <Parameter Name="amountNotCovered" Type="System.Decimal" />
        <Parameter Name="eligibleForBenefits" Type="System.Decimal" />
        <Parameter Name="coinsurance" Type="System.Decimal" />
        <Parameter Name="miscellaneousAdjustments" Type="System.Decimal" />
        <Parameter Name="benefitsPaid" Type="System.Decimal" />
        <Parameter Name="patientResponsibility" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="chargedAmount">
             The amount charged.
             </param>
        <param name="negotiatedAmount">
             The amount negotiated between the provider and the payer.
             </param>
        <param name="coPayment">
             The copayment amount.
             </param>
        <param name="deductible">
             The deductible amount.
             </param>
        <param name="amountNotCovered">
             Amount for services not covered by the plan.
             </param>
        <param name="eligibleForBenefits">
             The amount that is eligible for benefits.
             </param>
        <param name="coinsurance">
             The amount paid by the person.
             </param>
        <param name="miscellaneousAdjustments">
             Adjustments that may affect the amount paid on the claim.
             </param>
        <param name="benefitsPaid">
             The amount paid by the payer.
             </param>
        <param name="patientResponsibility">
             The total amount paid by the patient.
             </param>
        <summary>
             Creates a new instance of the <see cref="T:Microsoft.HealthVault.ItemTypes.ClaimAmounts" /> class specifying mandatory values.
             </summary>
        <remarks>
             This item is not added to the health record until the <see cref="M:Microsoft.HealthVault.Clients.IThingClient.CreateNewThingsAsync``1(System.Guid,System.Collections.Generic.ICollection{``0})" /> method is called
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="AmountNotCovered">
      <MemberSignature Language="C#" Value="public decimal AmountNotCovered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Decimal AmountNotCovered" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.ClaimAmounts.AmountNotCovered" />
      <MemberSignature Language="VB.NET" Value="Public Property AmountNotCovered As Decimal" />
      <MemberSignature Language="F#" Value="member this.AmountNotCovered : decimal with get, set" Usage="Microsoft.HealthVault.ItemTypes.ClaimAmounts.AmountNotCovered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the amount for services not covered by the plan.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BenefitsPaid">
      <MemberSignature Language="C#" Value="public decimal BenefitsPaid { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Decimal BenefitsPaid" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.ClaimAmounts.BenefitsPaid" />
      <MemberSignature Language="VB.NET" Value="Public Property BenefitsPaid As Decimal" />
      <MemberSignature Language="F#" Value="member this.BenefitsPaid : decimal with get, set" Usage="Microsoft.HealthVault.ItemTypes.ClaimAmounts.BenefitsPaid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the amount paid by the payer.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChargedAmount">
      <MemberSignature Language="C#" Value="public decimal ChargedAmount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Decimal ChargedAmount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.ClaimAmounts.ChargedAmount" />
      <MemberSignature Language="VB.NET" Value="Public Property ChargedAmount As Decimal" />
      <MemberSignature Language="F#" Value="member this.ChargedAmount : decimal with get, set" Usage="Microsoft.HealthVault.ItemTypes.ClaimAmounts.ChargedAmount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the amount charged.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Coinsurance">
      <MemberSignature Language="C#" Value="public decimal Coinsurance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Decimal Coinsurance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.ClaimAmounts.Coinsurance" />
      <MemberSignature Language="VB.NET" Value="Public Property Coinsurance As Decimal" />
      <MemberSignature Language="F#" Value="member this.Coinsurance : decimal with get, set" Usage="Microsoft.HealthVault.ItemTypes.ClaimAmounts.Coinsurance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the amount paid by the person.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CoPayment">
      <MemberSignature Language="C#" Value="public decimal CoPayment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Decimal CoPayment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.ClaimAmounts.CoPayment" />
      <MemberSignature Language="VB.NET" Value="Public Property CoPayment As Decimal" />
      <MemberSignature Language="F#" Value="member this.CoPayment : decimal with get, set" Usage="Microsoft.HealthVault.ItemTypes.ClaimAmounts.CoPayment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the copayment amount.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deductible">
      <MemberSignature Language="C#" Value="public decimal Deductible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Decimal Deductible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.ClaimAmounts.Deductible" />
      <MemberSignature Language="VB.NET" Value="Public Property Deductible As Decimal" />
      <MemberSignature Language="F#" Value="member this.Deductible : decimal with get, set" Usage="Microsoft.HealthVault.ItemTypes.ClaimAmounts.Deductible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the deductible amount.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EligibleForBenefits">
      <MemberSignature Language="C#" Value="public decimal EligibleForBenefits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Decimal EligibleForBenefits" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.ClaimAmounts.EligibleForBenefits" />
      <MemberSignature Language="VB.NET" Value="Public Property EligibleForBenefits As Decimal" />
      <MemberSignature Language="F#" Value="member this.EligibleForBenefits : decimal with get, set" Usage="Microsoft.HealthVault.ItemTypes.ClaimAmounts.EligibleForBenefits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the amount that is eligible for benefits.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MiscellaneousAdjustments">
      <MemberSignature Language="C#" Value="public decimal MiscellaneousAdjustments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Decimal MiscellaneousAdjustments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.ClaimAmounts.MiscellaneousAdjustments" />
      <MemberSignature Language="VB.NET" Value="Public Property MiscellaneousAdjustments As Decimal" />
      <MemberSignature Language="F#" Value="member this.MiscellaneousAdjustments : decimal with get, set" Usage="Microsoft.HealthVault.ItemTypes.ClaimAmounts.MiscellaneousAdjustments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the adjustments that may affect the amount paid on the claim.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NegotiatedAmount">
      <MemberSignature Language="C#" Value="public decimal NegotiatedAmount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Decimal NegotiatedAmount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.ClaimAmounts.NegotiatedAmount" />
      <MemberSignature Language="VB.NET" Value="Public Property NegotiatedAmount As Decimal" />
      <MemberSignature Language="F#" Value="member this.NegotiatedAmount : decimal with get, set" Usage="Microsoft.HealthVault.ItemTypes.ClaimAmounts.NegotiatedAmount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the amount negotiated between the provider and the payer.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseXml">
      <MemberSignature Language="C#" Value="public override void ParseXml (System.Xml.XPath.XPathNavigator navigator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ParseXml(class System.Xml.XPath.XPathNavigator navigator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.ClaimAmounts.ParseXml(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ParseXml (navigator As XPathNavigator)" />
      <MemberSignature Language="F#" Value="override this.ParseXml : System.Xml.XPath.XPathNavigator -&gt; unit" Usage="claimAmounts.ParseXml navigator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="navigator">
             The XML to get the ClaimAmounts data from.
             </param>
        <summary>
             Populates this <see cref="T:Microsoft.HealthVault.ItemTypes.ClaimAmounts" /> instance from the data in the specified XML.
             </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
             If <paramref name="navigator" /> parameter is <b>null</b>.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="PatientResponsibility">
      <MemberSignature Language="C#" Value="public decimal PatientResponsibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Decimal PatientResponsibility" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.ClaimAmounts.PatientResponsibility" />
      <MemberSignature Language="VB.NET" Value="Public Property PatientResponsibility As Decimal" />
      <MemberSignature Language="F#" Value="member this.PatientResponsibility : decimal with get, set" Usage="Microsoft.HealthVault.ItemTypes.ClaimAmounts.PatientResponsibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the total amount paid by the patient.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PercentageCovered">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; PercentageCovered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;float64&gt; PercentageCovered" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.ClaimAmounts.PercentageCovered" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentageCovered As Nullable(Of Double)" />
      <MemberSignature Language="F#" Value="member this.PercentageCovered : Nullable&lt;double&gt; with get, set" Usage="Microsoft.HealthVault.ItemTypes.ClaimAmounts.PercentageCovered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the percentage of the eligible amount that is covered by the payer.
             </summary>
        <value>To be added.</value>
        <remarks>
             The value will be set to null if unknown.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.ClaimAmounts.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="claimAmounts.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
             Gets a string representation of the ClaimAmounts.
             </summary>
        <returns>
             A string representation of the ClaimAmounts.
             </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public override void WriteXml (string nodeName, System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteXml(string nodeName, class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.ClaimAmounts.WriteXml(System.String,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteXml (nodeName As String, writer As XmlWriter)" />
      <MemberSignature Language="F#" Value="override this.WriteXml : string * System.Xml.XmlWriter -&gt; unit" Usage="claimAmounts.WriteXml (nodeName, writer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeName" Type="System.String" />
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="nodeName">
             The name of the outer node for the ClaimAmounts.
             </param>
        <param name="writer">
             The XML writer into which the ClaimAmounts should be
             written.
             </param>
        <summary>
             Writes the XML representation of the ClaimAmounts into
             the specified XML writer.
             </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
             If <paramref name="nodeName" /> parameter is <b>null</b> or empty.
             </exception>
        <exception cref="T:System.ArgumentNullException">
             If <paramref name="writer" /> parameter is <b>null</b>.
             </exception>
      </Docs>
    </Member>
  </Members>
</Type>