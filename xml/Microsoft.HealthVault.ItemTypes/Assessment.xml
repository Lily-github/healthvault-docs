<Type Name="Assessment" FullName="Microsoft.HealthVault.ItemTypes.Assessment">
  <TypeSignature Language="C#" Value="public class Assessment : Microsoft.HealthVault.ItemTypes.ItemBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Assessment extends Microsoft.HealthVault.ItemTypes.ItemBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.HealthVault.ItemTypes.Assessment" />
  <TypeSignature Language="VB.NET" Value="Public Class Assessment&#xA;Inherits ItemBase" />
  <TypeSignature Language="F#" Value="type Assessment = class&#xA;    inherit ItemBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.HealthVault</AssemblyName>
    <AssemblyVersion>1.65.0.0</AssemblyVersion>
    <AssemblyVersion>1.66.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.HealthVault.ItemTypes.ItemBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
             Defines a result from a health assessment containing the name and value of the assessed area.
             </summary>
    <remarks>
             See <see cref="T:Microsoft.HealthVault.ItemTypes.HealthAssessment" /> for more information.
             </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Assessment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.Assessment.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
             Constructs a new instance of the <see cref="T:Microsoft.HealthVault.ItemTypes.Assessment" /> class
             with default values.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Assessment (Microsoft.HealthVault.ItemTypes.CodableValue name, Microsoft.HealthVault.ItemTypes.CodableValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.HealthVault.ItemTypes.CodableValue name, class Microsoft.HealthVault.ItemTypes.CodableValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.Assessment.#ctor(Microsoft.HealthVault.ItemTypes.CodableValue,Microsoft.HealthVault.ItemTypes.CodableValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As CodableValue, value As CodableValue)" />
      <MemberSignature Language="F#" Value="new Microsoft.HealthVault.ItemTypes.Assessment : Microsoft.HealthVault.ItemTypes.CodableValue * Microsoft.HealthVault.ItemTypes.CodableValue -&gt; Microsoft.HealthVault.ItemTypes.Assessment" Usage="new Microsoft.HealthVault.ItemTypes.Assessment (name, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="Microsoft.HealthVault.ItemTypes.CodableValue" />
        <Parameter Name="value" Type="Microsoft.HealthVault.ItemTypes.CodableValue" />
      </Parameters>
      <Docs>
        <param name="name">
             The name of the assessed area. See <see cref="P:Microsoft.HealthVault.ItemTypes.Assessment.Name" /> for more information.
             </param>
        <param name="value">
             The calculated value of the assessed area. See <see cref="P:Microsoft.HealthVault.ItemTypes.Assessment.Value" /> for more information.
             </param>
        <summary>
             Constructs a new instance of the <see cref="T:Microsoft.HealthVault.ItemTypes.Assessment" /> class
             with name and value.
             </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
             If <paramref name="name" /> or <paramref name="value" /> is <b> null </b>.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public Microsoft.HealthVault.ItemTypes.CodableValue Group { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.HealthVault.ItemTypes.CodableValue Group" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.Assessment.Group" />
      <MemberSignature Language="VB.NET" Value="Public Property Group As CodableValue" />
      <MemberSignature Language="F#" Value="member this.Group : Microsoft.HealthVault.ItemTypes.CodableValue with get, set" Usage="Microsoft.HealthVault.ItemTypes.Assessment.Group" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.HealthVault.ItemTypes.CodableValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the additional information that can be used to help organize the
             results.
             </summary>
        <value>To be added.</value>
        <remarks>
             The group is used to specify which group a specific result is in.
             For example, the supporting assessments that follow a main assessment are coded
             to indicate that they are supporting by specifying the "supporting" code.
             The preferred vocabulary for route is "health-assessment-groups".
             Contact the HealthVault team to help define the preferred vocabulary.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public Microsoft.HealthVault.ItemTypes.CodableValue Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.HealthVault.ItemTypes.CodableValue Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.Assessment.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As CodableValue" />
      <MemberSignature Language="F#" Value="member this.Name : Microsoft.HealthVault.ItemTypes.CodableValue with get, set" Usage="Microsoft.HealthVault.ItemTypes.Assessment.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.HealthVault.ItemTypes.CodableValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the name of the assessed area.
             </summary>
        <value>To be added.</value>
        <remarks>
             Examples: Heart attack risk, high blood pressure.
             The preferred vocabulary for route is "health-assessment-name".
             Contact the HealthVault team to help define the preferred vocabulary.
             </remarks>
        <exception cref="T:System.ArgumentNullException">
             If setter value is <b>null</b>.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="ParseXml">
      <MemberSignature Language="C#" Value="public override void ParseXml (System.Xml.XPath.XPathNavigator navigator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ParseXml(class System.Xml.XPath.XPathNavigator navigator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.Assessment.ParseXml(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ParseXml (navigator As XPathNavigator)" />
      <MemberSignature Language="F#" Value="override this.ParseXml : System.Xml.XPath.XPathNavigator -&gt; unit" Usage="assessment.ParseXml navigator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="navigator">
             The XML to get the assessment data from.
             </param>
        <summary>
             Populates this <see cref="T:Microsoft.HealthVault.ItemTypes.Assessment" /> instance from the data in the XML.
             </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
             If <paramref name="navigator" /> is <b> null </b>.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.Assessment.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="assessment.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
             Gets a string of the name or description of the assessment.
             </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public Microsoft.HealthVault.ItemTypes.CodableValue Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.HealthVault.ItemTypes.CodableValue Value" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.Assessment.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As CodableValue" />
      <MemberSignature Language="F#" Value="member this.Value : Microsoft.HealthVault.ItemTypes.CodableValue with get, set" Usage="Microsoft.HealthVault.ItemTypes.Assessment.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.HealthVault.ItemTypes.CodableValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the calculated value of the assessed area.
             </summary>
        <value>To be added.</value>
        <remarks>
             The value may be coded using a specific set of values.
             Example: Low/Medium/High risk.
             A list of vocabularies may be found in the preferred vocabulary
             "health-assessment-value-sets".
             Contact the HealthVault team to help define the preferred vocabulary.
             </remarks>
        <exception cref="T:System.ArgumentNullException">
             If <paramref name="value" /> is <b>null</b>.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public override void WriteXml (string nodeName, System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteXml(string nodeName, class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.Assessment.WriteXml(System.String,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteXml (nodeName As String, writer As XmlWriter)" />
      <MemberSignature Language="F#" Value="override this.WriteXml : string * System.Xml.XmlWriter -&gt; unit" Usage="assessment.WriteXml (nodeName, writer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeName" Type="System.String" />
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="nodeName">
             The name of the outer node for the assessment item.
             </param>
        <param name="writer">
             The XmlWriter to write the assessment data to.
             </param>
        <summary>
             Writes the assessment data to the specified XmlWriter.
             </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
             If <paramref name="nodeName" /> is <b> null </b> or empty.
             </exception>
        <exception cref="T:System.ArgumentNullException">
             If <paramref name="writer" /> is <b> null </b>.
             </exception>
        <exception cref="T:Microsoft.HealthVault.Exceptions.ThingSerializationException">
             If <see cref="P:Microsoft.HealthVault.ItemTypes.Assessment.Name" /> or <see cref="P:Microsoft.HealthVault.ItemTypes.Assessment.Value" /> is <b>null</b>.
             </exception>
      </Docs>
    </Member>
  </Members>
</Type>