<Type Name="PressureMeasurement" FullName="Microsoft.HealthVault.ItemTypes.PressureMeasurement">
  <TypeSignature Language="C#" Value="public class PressureMeasurement : Microsoft.HealthVault.ItemTypes.Measurement&lt;double&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PressureMeasurement extends Microsoft.HealthVault.ItemTypes.Measurement`1&lt;float64&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.HealthVault.ItemTypes.PressureMeasurement" />
  <TypeSignature Language="VB.NET" Value="Public Class PressureMeasurement&#xA;Inherits Measurement(Of Double)" />
  <TypeSignature Language="F#" Value="type PressureMeasurement = class&#xA;    inherit Measurement&lt;double&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.HealthVault</AssemblyName>
    <AssemblyVersion>1.65.0.0</AssemblyVersion>
    <AssemblyVersion>1.66.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.HealthVault.ItemTypes.Measurement&lt;System.Double&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="MeasurementType">System.Double</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
             Represents a pressure measurement and a display value
             associated with the measurement.
             </summary>
    <remarks>
             In HealthVault, pressure measurements have values and display values.
             All values are stored in a standard SI unit of pascal (Pa).
             An application can take a pressure value using any scale the application
             chooses and can store the user-entered value as the display value,
             but the pressure value must be converted to pascals to be stored in HealthVault.
             </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PressureMeasurement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.PressureMeasurement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
             Creates a new instance of the <see cref="T:Microsoft.HealthVault.ItemTypes.PressureMeasurement" /> class
             with empty values.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PressureMeasurement (double pascals);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 pascals) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.PressureMeasurement.#ctor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pascals As Double)" />
      <MemberSignature Language="F#" Value="new Microsoft.HealthVault.ItemTypes.PressureMeasurement : double -&gt; Microsoft.HealthVault.ItemTypes.PressureMeasurement" Usage="new Microsoft.HealthVault.ItemTypes.PressureMeasurement pascals" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pascals" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="pascals">
             The pressure value in pascal.
             </param>
        <summary>
             Creates a new instance of the <see cref="T:Microsoft.HealthVault.ItemTypes.PressureMeasurement" /> class
             with the specified value in pascal.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PressureMeasurement (double pascals, Microsoft.HealthVault.ItemTypes.DisplayValue displayValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 pascals, class Microsoft.HealthVault.ItemTypes.DisplayValue displayValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.PressureMeasurement.#ctor(System.Double,Microsoft.HealthVault.ItemTypes.DisplayValue)" />
      <MemberSignature Language="F#" Value="new Microsoft.HealthVault.ItemTypes.PressureMeasurement : double * Microsoft.HealthVault.ItemTypes.DisplayValue -&gt; Microsoft.HealthVault.ItemTypes.PressureMeasurement" Usage="new Microsoft.HealthVault.ItemTypes.PressureMeasurement (pascals, displayValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pascals" Type="System.Double" />
        <Parameter Name="displayValue" Type="Microsoft.HealthVault.ItemTypes.DisplayValue" />
      </Parameters>
      <Docs>
        <param name="pascals">
             The pressure in pascal.
             </param>
        <param name="displayValue">
             The display value of the pressure. This should contain the
             exact pressure as entered by the user even if it uses some
             other unit of measure besides pascal. The display value
             <see cref="P:Microsoft.HealthVault.ItemTypes.DisplayValue.Units" /> and
             <see cref="P:Microsoft.HealthVault.ItemTypes.DisplayValue.UnitsCode" />
             represents the unit of measure for the user-entered value.
             </param>
        <summary>
             Creates a new instance of the <see cref="T:Microsoft.HealthVault.ItemTypes.PressureMeasurement" /> class with
             the specified value in pascals and an optional display value.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssertMeasurementValue">
      <MemberSignature Language="C#" Value="protected override void AssertMeasurementValue (double value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AssertMeasurementValue(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.PressureMeasurement.AssertMeasurementValue(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AssertMeasurementValue (value As Double)" />
      <MemberSignature Language="F#" Value="override this.AssertMeasurementValue : double -&gt; unit" Usage="pressureMeasurement.AssertMeasurementValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
             The pressure measurement.
             </param>
        <summary>
             Verifies the value is a legal pressure value in Pa.
             </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
             The <paramref name="value" /> parameter is less than zero.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="GetValueString">
      <MemberSignature Language="C#" Value="protected override string GetValueString (double value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetValueString(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.PressureMeasurement.GetValueString(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetValueString (value As Double) As String" />
      <MemberSignature Language="F#" Value="override this.GetValueString : double -&gt; string" Usage="pressureMeasurement.GetValueString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
             Gets a string representation of the pressure in the base units.
             </summary>
        <returns>
             The pressure as a string in the base units.
             </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseValueXml">
      <MemberSignature Language="C#" Value="protected override void ParseValueXml (System.Xml.XPath.XPathNavigator navigator);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ParseValueXml(class System.Xml.XPath.XPathNavigator navigator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.PressureMeasurement.ParseValueXml(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ParseValueXml (navigator As XPathNavigator)" />
      <MemberSignature Language="F#" Value="override this.ParseValueXml : System.Xml.XPath.XPathNavigator -&gt; unit" Usage="pressureMeasurement.ParseValueXml navigator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="navigator">
             The XML node representing the pressure.
             </param>
        <summary>
             Populates the data for the pressure from the XML.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteValueXml">
      <MemberSignature Language="C#" Value="protected override void WriteValueXml (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WriteValueXml(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.PressureMeasurement.WriteValueXml(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WriteValueXml (writer As XmlWriter)" />
      <MemberSignature Language="F#" Value="override this.WriteValueXml : System.Xml.XmlWriter -&gt; unit" Usage="pressureMeasurement.WriteValueXml writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
             The XmlWriter to write the pressure to.
             </param>
        <summary>
             Writes the pressure to the specified XML writer.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>