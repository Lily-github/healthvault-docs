<Type Name="Range&lt;RangeType&gt;" FullName="Microsoft.HealthVault.ItemTypes.Range&lt;RangeType&gt;">
  <TypeSignature Language="C#" Value="public abstract class Range&lt;RangeType&gt; : Microsoft.HealthVault.ItemTypes.ItemBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Range`1&lt;RangeType&gt; extends Microsoft.HealthVault.ItemTypes.ItemBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.HealthVault.ItemTypes.Range`1" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.HealthVault</AssemblyName>
    <AssemblyVersion>1.65.0.0</AssemblyVersion>
    <AssemblyVersion>1.66.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="RangeType" />
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.HealthVault.ItemTypes.ItemBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="RangeType">
             The type of the minimum and maximum values for the range.
             </typeparam>
    <summary>
             Represents a data range based on a generic type.
             </summary>
    <remarks>
             A range consists of a minimum range value and a maximum range value of the specific
             generic type.
             </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Range ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.Range`1.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
             Creates a new instance of the Range class with
             default values.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Range (RangeType minRange, RangeType maxRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!RangeType minRange, !RangeType maxRange) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.Range`1.#ctor(`0,`0)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="minRange" Type="RangeType" />
        <Parameter Name="maxRange" Type="RangeType" />
      </Parameters>
      <Docs>
        <param name="minRange">
             The minimum value for the range.
             </param>
        <param name="maxRange">
             The maximum value for the range.
             </param>
        <summary>
             Constructs a new instance of the Range class with the
             specified min and max range values.
             </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
             If <paramref name="minRange" /> or <paramref name="maxRange" /> would cause the value to
             be "unset".
             </exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultMaxValue">
      <MemberSignature Language="C#" Value="protected abstract RangeType DefaultMaxValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !RangeType DefaultMaxValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.Range`1.DefaultMaxValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>RangeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets the maximum range value to its default value.
             </summary>
        <value>
             The default value for the maximum range value.
             </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultMinValue">
      <MemberSignature Language="C#" Value="protected abstract RangeType DefaultMinValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !RangeType DefaultMinValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.Range`1.DefaultMinValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>RangeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Initializes the minimum range value to its default value.
             </summary>
        <value>
             The default value for the minimum range value.
             </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxRange">
      <MemberSignature Language="C#" Value="public RangeType MaxRange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !RangeType MaxRange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.Range`1.MaxRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>RangeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the maximum value of the range.
             </summary>
        <value>
             A value of <typeparamref name="RangeType" /> that represents the maximum value of the range.
             </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
             If <paramref name="value" /> would cause the value to be "unset".
             </exception>
      </Docs>
    </Member>
    <Member MemberName="MinRange">
      <MemberSignature Language="C#" Value="public RangeType MinRange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !RangeType MinRange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.Range`1.MinRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>RangeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the minimum value of the range.
             </summary>
        <value>
             A value of <typeparamref name="RangeType" /> that represents the minimum value of the range.
             </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
             If <paramref name="value" /> would cause the value to be "unset".
             </exception>
      </Docs>
    </Member>
    <Member MemberName="ParseXml">
      <MemberSignature Language="C#" Value="public override void ParseXml (System.Xml.XPath.XPathNavigator navigator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ParseXml(class System.Xml.XPath.XPathNavigator navigator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.Range`1.ParseXml(System.Xml.XPath.XPathNavigator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="navigator">
             The XML node representing the range.
             </param>
        <summary>
             Populates the data for the range from the XML.
             </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
             The <paramref name="navigator" /> parameter is <b>null</b>.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadRangeValue">
      <MemberSignature Language="C#" Value="protected abstract RangeType ReadRangeValue (System.Xml.XPath.XPathNavigator navigator);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !RangeType ReadRangeValue(class System.Xml.XPath.XPathNavigator navigator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.Range`1.ReadRangeValue(System.Xml.XPath.XPathNavigator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>RangeType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="navigator">
             The <see cref="T:System.Xml.XPath.XPathNavigator" /> to read the value from.
             </param>
        <summary>
             Reads the value from the specified <see cref="T:System.Xml.XPath.XPathNavigator" /> as a
             <typeparamref name="RangeType" />.
             </summary>
        <returns>
             The value as a <typeparamref name="RangeType" />.
             </returns>
        <remarks>
             Derived classes must override and read the value from the XML and convert it to the
             type for the range.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyRangeValue">
      <MemberSignature Language="C#" Value="protected virtual void VerifyRangeValue (RangeType value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void VerifyRangeValue(!RangeType value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.Range`1.VerifyRangeValue(`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="RangeType" />
      </Parameters>
      <Docs>
        <param name="value">
             The value to verify.
             </param>
        <summary>
             Verifies that the specified range value is an appropriate value for the range.
             </summary>
        <remarks>
             Since both the maximum and minimum values for the range must be set, this method is used
             to verify that the value is not "unset". For example, the value is not <b>null</b> for
             a reference type. Derived classes should override and throw an
             <see cref="T:System.ArgumentException" /> or appropriate derived exception if the
             <paramref name="value" /> would cause the range value to be "unset".
             The default implementation does nothing.
             </remarks>
        <exception cref="T:System.ArgumentException">
             If <paramref name="value" /> would cause the value to be "unset".
             </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRangeValue">
      <MemberSignature Language="C#" Value="protected abstract void WriteRangeValue (string nodeName, RangeType value, System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteRangeValue(string nodeName, !RangeType value, class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.Range`1.WriteRangeValue(System.String,`0,System.Xml.XmlWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeName" Type="System.String" />
        <Parameter Name="value" Type="RangeType" />
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="nodeName">
             The name of the node to use when writing the value.
             </param>
        <param name="value">
             The value to be written.
             </param>
        <param name="writer">
             The writer to write the value element to.
             </param>
        <summary>
             Writes the specified range value to the specified writer with the specified node name.
             </summary>
        <remarks>
             Derived classes must override to provide the implementation of writing the value to
             the XML.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public override void WriteXml (string nodeName, System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteXml(string nodeName, class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.Range`1.WriteXml(System.String,System.Xml.XmlWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeName" Type="System.String" />
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="nodeName">
             The name of the outer element for the range data.
             </param>
        <param name="writer">
             The XmlWriter to write the range data to.
             </param>
        <summary>
             Writes the range data to the specified XML writer.
             </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
             The <paramref name="nodeName" /> parameter is <b>null</b> or empty.
             </exception>
        <exception cref="T:System.ArgumentNullException">
             The <paramref name="writer" /> parameter is <b>null</b>.
             </exception>
      </Docs>
    </Member>
  </Members>
</Type>