<Type Name="QuestionAnswer" FullName="Microsoft.HealthVault.ItemTypes.QuestionAnswer">
  <TypeSignature Language="C#" Value="public class QuestionAnswer : Microsoft.HealthVault.Thing.ThingBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit QuestionAnswer extends Microsoft.HealthVault.Thing.ThingBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.HealthVault.ItemTypes.QuestionAnswer" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.HealthVault</AssemblyName>
    <AssemblyVersion>1.65.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.HealthVault.Thing.ThingBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
             Represents a question and answer stored as a thing.
             </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QuestionAnswer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.QuestionAnswer.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
             Creates a new instance of the <see cref="T:Microsoft.HealthVault.ItemTypes.QuestionAnswer" /> class with default
             values.
             </summary>
        <remarks>
             The item is not added to the health record until the <see cref="M:Microsoft.HealthVault.Clients.IThingClient.CreateNewThingsAsync``1(System.Guid,System.Collections.Generic.ICollection{``0})" /> method is called.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QuestionAnswer (Microsoft.HealthVault.ItemTypes.HealthServiceDateTime when, Microsoft.HealthVault.ItemTypes.CodableValue question);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.HealthVault.ItemTypes.HealthServiceDateTime when, class Microsoft.HealthVault.ItemTypes.CodableValue question) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.QuestionAnswer.#ctor(Microsoft.HealthVault.ItemTypes.HealthServiceDateTime,Microsoft.HealthVault.ItemTypes.CodableValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="when" Type="Microsoft.HealthVault.ItemTypes.HealthServiceDateTime" />
        <Parameter Name="question" Type="Microsoft.HealthVault.ItemTypes.CodableValue" />
      </Parameters>
      <Docs>
        <param name="when">
             The date and time the question was asked.
             </param>
        <param name="question">
             The question that was asked.
             </param>
        <summary>
             Creates a new instance of the <see cref="T:Microsoft.HealthVault.ItemTypes.QuestionAnswer" /> class with the specified
             date and time and the question that was asked.
             </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
             If <paramref name="when" /> or <paramref name="question" /> is <b>null</b>.
             </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QuestionAnswer (Microsoft.HealthVault.ItemTypes.HealthServiceDateTime when, Microsoft.HealthVault.ItemTypes.CodableValue question, System.Collections.Generic.IList&lt;Microsoft.HealthVault.ItemTypes.CodableValue&gt; answerChoice, System.Collections.Generic.IList&lt;Microsoft.HealthVault.ItemTypes.CodableValue&gt; answer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.HealthVault.ItemTypes.HealthServiceDateTime when, class Microsoft.HealthVault.ItemTypes.CodableValue question, class System.Collections.Generic.IList`1&lt;class Microsoft.HealthVault.ItemTypes.CodableValue&gt; answerChoice, class System.Collections.Generic.IList`1&lt;class Microsoft.HealthVault.ItemTypes.CodableValue&gt; answer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.QuestionAnswer.#ctor(Microsoft.HealthVault.ItemTypes.HealthServiceDateTime,Microsoft.HealthVault.ItemTypes.CodableValue,System.Collections.Generic.IList{Microsoft.HealthVault.ItemTypes.CodableValue},System.Collections.Generic.IList{Microsoft.HealthVault.ItemTypes.CodableValue})" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="when" Type="Microsoft.HealthVault.ItemTypes.HealthServiceDateTime" />
        <Parameter Name="question" Type="Microsoft.HealthVault.ItemTypes.CodableValue" />
        <Parameter Name="answerChoice" Type="System.Collections.Generic.IList&lt;Microsoft.HealthVault.ItemTypes.CodableValue&gt;" />
        <Parameter Name="answer" Type="System.Collections.Generic.IList&lt;Microsoft.HealthVault.ItemTypes.CodableValue&gt;" />
      </Parameters>
      <Docs>
        <param name="when">
             The date and time the question was asked.
             </param>
        <param name="question">
             The question that was asked.
             </param>
        <param name="answerChoice">
             The possible answers to the question. See <see cref="P:Microsoft.HealthVault.ItemTypes.QuestionAnswer.AnswerChoice" /> for more information
             and the preferred vocabulary.
             </param>
        <param name="answer">
             The answer to the question.
             </param>
        <summary>
             Creates a new instance of the <see cref="T:Microsoft.HealthVault.ItemTypes.QuestionAnswer" /> class with the specified
             date and time and the question that was asked.
             </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
             If <paramref name="when" /> or <paramref name="question" /> is <b>null</b>.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="Answer">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;Microsoft.HealthVault.ItemTypes.CodableValue&gt; Answer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class Microsoft.HealthVault.ItemTypes.CodableValue&gt; Answer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.QuestionAnswer.Answer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;Microsoft.HealthVault.ItemTypes.CodableValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets a collection of the recorded answer(s) to the question.
             </summary>
        <value>To be added.</value>
        <remarks>
             In many cases, the coding of the answer is identical to the coding of the
             selected <see cref="P:Microsoft.HealthVault.ItemTypes.QuestionAnswer.AnswerChoice" />.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnswerChoice">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;Microsoft.HealthVault.ItemTypes.CodableValue&gt; AnswerChoice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class Microsoft.HealthVault.ItemTypes.CodableValue&gt; AnswerChoice" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.QuestionAnswer.AnswerChoice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;Microsoft.HealthVault.ItemTypes.CodableValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets a collection of the possible answers to the question.
             </summary>
        <value>To be added.</value>
        <remarks>
             Questions that are answered using free-form text will not specify answer choices.
             The answer vocabulary used is typically one related to the vocabulary used for the question.
             For example, the choice for "High blood pressure" would code for that condition.
             Standard answers (such as yes/no) can be coded using the preferred vocabulary
             "answer-choice-sets".
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseXml">
      <MemberSignature Language="C#" Value="protected override void ParseXml (System.Xml.XPath.IXPathNavigable typeSpecificXml);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ParseXml(class System.Xml.XPath.IXPathNavigable typeSpecificXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.QuestionAnswer.ParseXml(System.Xml.XPath.IXPathNavigable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeSpecificXml" Type="System.Xml.XPath.IXPathNavigable" />
      </Parameters>
      <Docs>
        <param name="typeSpecificXml">
             The XML to get the question/answer data from.
             </param>
        <summary>
             Populates this question/answer instance from the data in the XML.
             </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
             If the first node in <paramref name="typeSpecificXml" /> is not
             a question-answer node.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="Question">
      <MemberSignature Language="C#" Value="public Microsoft.HealthVault.ItemTypes.CodableValue Question { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.HealthVault.ItemTypes.CodableValue Question" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.QuestionAnswer.Question" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.HealthVault.ItemTypes.CodableValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the question that was asked.
             </summary>
        <value>To be added.</value>
        <remarks>
             A list of vocabularies may be found in the "question-sets".
             Contact the HealthVault team to help define the preferred vocabulary.
             </remarks>
        <exception cref="T:System.ArgumentNullException">
             If <paramref name="value" /> is <b>null</b>.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.QuestionAnswer.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
             Gets a string representation of the question/answer.
             </summary>
        <returns>
             A string representation of the question/answer.
             </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeId">
      <MemberSignature Language="C#" Value="public static readonly Guid TypeId;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Guid TypeId" />
      <MemberSignature Language="DocId" Value="F:Microsoft.HealthVault.ItemTypes.QuestionAnswer.TypeId" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             The unique identifier for the item type.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="When">
      <MemberSignature Language="C#" Value="public Microsoft.HealthVault.ItemTypes.HealthServiceDateTime When { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.HealthVault.ItemTypes.HealthServiceDateTime When" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.QuestionAnswer.When" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.HealthVault.ItemTypes.HealthServiceDateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the date and time of the question was asked.
             </summary>
        <value>
             A <see cref="T:Microsoft.HealthVault.ItemTypes.HealthServiceDateTime" /> instance representing the date
             and time.
             </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
             If the <paramref name="value" /> parameter is <b>null</b>.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public override void WriteXml (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteXml(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.QuestionAnswer.WriteXml(System.Xml.XmlWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
             The XmlWriter to write the question/answer data to.
             </param>
        <summary>
             Writes the question/answer data to the specified XmlWriter.
             </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
             The <paramref name="writer" /> parameter is <b>null</b>.
             </exception>
        <exception cref="T:Microsoft.HealthVault.Exceptions.ThingSerializationException">
             The <see cref="P:Microsoft.HealthVault.ItemTypes.QuestionAnswer.When" /> or <see cref="P:Microsoft.HealthVault.ItemTypes.QuestionAnswer.Question" /> property has not been set.
             </exception>
      </Docs>
    </Member>
  </Members>
</Type>
