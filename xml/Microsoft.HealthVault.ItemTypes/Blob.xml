<Type Name="Blob" FullName="Microsoft.HealthVault.ItemTypes.Blob">
  <TypeSignature Language="C#" Value="public class Blob" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Blob extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.HealthVault.ItemTypes.Blob" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.HealthVault</AssemblyName>
    <AssemblyVersion>1.65.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
             Represents binary data that can be associated with a person's health record.
             </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ContentEncoding">
      <MemberSignature Language="C#" Value="public string ContentEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentEncoding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.Blob.ContentEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets the content encoding of the BLOB.
             </summary>
        <value>To be added.</value>
        <remarks>
             This is only available for BLOBs that were added to HealthVault prior to streaming
             support being added.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentLength">
      <MemberSignature Language="C#" Value="public Nullable&lt;long&gt; ContentLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int64&gt; ContentLength" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.Blob.ContentLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets the length of the content of the BLOB.
             </summary>
        <value>To be added.</value>
        <remarks>
             In some cases the content length can't be determined by
             HealthVault until the data is retrieved. In this case, the property
             will be null. 
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.Blob.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the content type of the BLOB.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReaderStream">
      <MemberSignature Language="C#" Value="public Microsoft.HealthVault.Thing.BlobStream GetReaderStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.HealthVault.Thing.BlobStream GetReaderStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.Blob.GetReaderStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.HealthVault.Thing.BlobStream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
             Gets a stream for reading data from a HealthVault BLOB.
             </summary>
        <returns>
             A <see cref="T:Microsoft.HealthVault.Thing.BlobStream" /> instance to read data from.
             </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
             If there is no data to read from the BLOB.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="GetWriterStream">
      <MemberSignature Language="C#" Value="public Microsoft.HealthVault.Thing.BlobStream GetWriterStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.HealthVault.Thing.BlobStream GetWriterStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.Blob.GetWriterStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.HealthVault.Thing.BlobStream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
             Gets a stream for writing data to a HealthVault BLOB.
             </summary>
        <returns>
             A <see cref="T:Microsoft.HealthVault.Thing.BlobStream" /> instance to write data to.
             </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
             If the Blob already has data that was retrieved from HealthVault.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="HashInfo">
      <MemberSignature Language="C#" Value="public Microsoft.HealthVault.ItemTypes.BlobHashInfo HashInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.HealthVault.ItemTypes.BlobHashInfo HashInfo" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.Blob.HashInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.HealthVault.ItemTypes.BlobHashInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the hash information for the BLOB.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.Blob.IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets if the Blob instance has been modified.
             </summary>
        <value>To be added.</value>
        <remarks>
             Normally this property is maintained by the members of the class, however,
             if <see cref="M:Microsoft.HealthVault.Thing.ThingBase.GetItemXml(System.String)" /> is used to serialize an item
             that contains this Blob before the item is committed to HealthVault, you will
             need to mark the Blob as dirty before trying to commit the item to HealthVault.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.Blob.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name of the BLOB.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAllBytes">
      <MemberSignature Language="C#" Value="public byte[] ReadAllBytes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] ReadAllBytes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.Blob.ReadAllBytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
             Gets all the bytes of the BLOB.
             </summary>
        <returns>
             All the bytes of the BLOB.
             </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
             If the Blob doesn't have data that was retrieved from HealthVault.
             </exception>
        <exception cref="T:Microsoft.HealthVault.Exceptions.HealthServiceException">
             If there is a failure reading the data from HealthVault.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAsString">
      <MemberSignature Language="C#" Value="public string ReadAsString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ReadAsString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.Blob.ReadAsString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
             Fetches the BLOB as a UTF-8 string.
             </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
             If the Blob doesn't have data that was retrieved from HealthVault.
             </exception>
        <exception cref="T:Microsoft.HealthVault.Exceptions.HealthServiceException">
             If there is a failure reading the data from HealthVault.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAsString">
      <MemberSignature Language="C#" Value="public string ReadAsString (System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ReadAsString(class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.Blob.ReadAsString(System.Text.Encoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="encoding">
             The encoding used to convert the BLOB to a string.
             </param>
        <summary>
             Fetches the BLOB as a string with the specified encoding.
             </summary>
        <returns>
             A string representation of the BLOB.
             </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
             If the Blob doesn't have data that was retrieved from HealthVault.
             </exception>
        <exception cref="T:Microsoft.HealthVault.Exceptions.HealthServiceException">
             If there is a failure reading the data from HealthVault.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="SaveToFile">
      <MemberSignature Language="C#" Value="public void SaveToFile (string fileName, System.IO.FileMode mode = System.IO.FileMode.CreateNew);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveToFile(string fileName, valuetype System.IO.FileMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.Blob.SaveToFile(System.String,System.IO.FileMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
      </Parameters>
      <Docs>
        <param name="fileName">
             The path to the file to save the data to.
             </param>
        <param name="mode">
             A <see cref="T:System.IO.FileMode" /> value that specifies whether a file is created if one does not exist,
             and determines whether the contents of existing files are retained or overwritten.
             </param>
        <summary>
             Saves the BLOB data to the specified file.
             </summary>
        <remarks>
             Exceptions that can occur by calling <see cref="M:System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess)" /> may also be
             thrown by this method.
             </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="fileName" /> is <b>null</b> or empty.
             </exception>
        <exception cref="T:System.NotSupportedException">
             If the Blob doesn't have data that was retrieved from HealthVault.
             </exception>
        <exception cref="T:Microsoft.HealthVault.Exceptions.HealthServiceException">
             If there is a failure reading the data from HealthVault.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="SaveToStream">
      <MemberSignature Language="C#" Value="public void SaveToStream (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveToStream(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.Blob.SaveToStream(System.IO.Stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
             The stream to save the data to.
             </param>
        <summary>
             Saves the BLOB data to the specified file.
             </summary>
        <remarks>
             The stream will not be closed by this method.
             </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> is <b>null</b>.
             </exception>
        <exception cref="T:System.NotSupportedException">
             If the Blob doesn't have data that was retrieved from HealthVault.
             </exception>
        <exception cref="T:Microsoft.HealthVault.Exceptions.HealthServiceException">
             If there is a failure reading the data from HealthVault.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public Uri Url { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Url" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.Blob.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets a URL that can be used to read or write the Blob data directly using HTTP GET and PUT.
             </summary>
        <value>
             A URL for direct access to the Blob data.
             </value>
        <remarks>
             The token used on the URL is short-lived so the URL is only valid for a short period
             of time.<br />
             An application storing this URL, whether in a cookie or by other means, should encrypt
             it to avoid tampering.
             </remarks>
        <exception cref="T:System.NotSupportedException">
             If the Blob was retrieved inline or the Blob was created for writing.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.Blob.Write(System.IO.Stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
             The stream to get the bytes from to write to the blob.
             </param>
        <summary>
             Writes the bytes from the specified stream.
             </summary>
        <remarks>To be added.</remarks>
        <exception cref="ArgumentNullException">
             If <paramref name="stream" /> is <b>null</b>.
             </exception>
        <exception cref="T:Microsoft.HealthVault.Exceptions.HealthHttpException">
             If there is an error writing the data to HealthVault.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteInline">
      <MemberSignature Language="C#" Value="public void WriteInline (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteInline(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.Blob.WriteInline(System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="bytes">
             The bytes to write to the blob.
             </param>
        <summary>
             Writes the specified bytes to the blob inline with the data XML of the type.
             </summary>
        <remarks>
             The BLOB data is written into the XML request during the
             <see cref="!:HealthRecordAccessor.NewItemAsync" /> or <see cref="!:HealthRecordAccessor.UpdateItemAsync" />
             rather than being streamed to HealthVault. This is limited to about 3.5MB of data.
             Use <see cref="M:Microsoft.HealthVault.ItemTypes.Blob.GetWriterStream" /> to write more data.
             </remarks>
        <exception cref="ArgumentNullException">
             If <paramref name="bytes" /> is <b>null</b>.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteInline">
      <MemberSignature Language="C#" Value="public void WriteInline (string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteInline(string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.Blob.WriteInline(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="data">
             The data to write to the blob.
             </param>
        <summary>
             Writes the specified string to the blob with UTF-8 encoding.
             </summary>
        <remarks>
             The BLOB data is written into the XML request during the
             <see cref="!:HealthRecordAccessor.NewItemAsync" /> or <see cref="!:HealthRecordAccessor.UpdateItemAsync" />
             rather than being streamed to HealthVault. This is limited to about 3.5MB of data.
             Use <see cref="M:Microsoft.HealthVault.ItemTypes.Blob.GetWriterStream" /> to write more data.
             </remarks>
        <exception cref="ArgumentNullException">
             If <paramref name="data" /> is <b>null</b>.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteInline">
      <MemberSignature Language="C#" Value="public void WriteInline (string data, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteInline(string data, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.Blob.WriteInline(System.String,System.Text.Encoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="data">
             The data to write to the blob.
             </param>
        <param name="encoding">
             The encoding to use when writing the data.
             </param>
        <summary>
             Writes the specified string to the blob with the specified encoding.
             </summary>
        <remarks>
             The BLOB data is written into the XML request during the
             <see cref="!:HealthRecordAccessor.NewItemAsync" /> or <see cref="!:HealthRecordAccessor.UpdateItemAsync" />
             rather than being streamed to HealthVault. This is limited to about 3.5MB of data.
             Use <see cref="M:Microsoft.HealthVault.ItemTypes.Blob.GetWriterStream" /> to write more data.
             </remarks>
        <exception cref="ArgumentNullException">
             If <paramref name="data" /> is <b>null</b><br />-or-<br /><paramref name="encoding" /> is <b>null</b>.
             </exception>
      </Docs>
    </Member>
  </Members>
</Type>
