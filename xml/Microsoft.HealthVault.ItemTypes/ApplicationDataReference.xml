<Type Name="ApplicationDataReference" FullName="Microsoft.HealthVault.ItemTypes.ApplicationDataReference">
  <TypeSignature Language="C#" Value="public class ApplicationDataReference : Microsoft.HealthVault.Thing.ThingBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ApplicationDataReference extends Microsoft.HealthVault.Thing.ThingBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.HealthVault.ItemTypes.ApplicationDataReference" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.HealthVault</AssemblyName>
    <AssemblyVersion>1.66.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.HealthVault.Thing.ThingBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
             Represents a thing that stores information that can be used by an application to
             render content from another application.
             </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ApplicationDataReference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.ApplicationDataReference.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
             Creates a new instance of the <see cref="T:Microsoft.HealthVault.ItemTypes.ApplicationDataReference" /> class with default values.
             </summary>
        <remarks>
             The item is not added to the health record until the <see cref="M:Microsoft.HealthVault.Clients.IThingClient.CreateNewThingsAsync``1(System.Guid,System.Collections.Generic.ICollection{``0})" /> method is called.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ApplicationDataReference (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.ApplicationDataReference.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
             The consumer-friendly name.
             </param>
        <summary>
             Creates a new instance of the <see cref="T:Microsoft.HealthVault.ItemTypes.ApplicationDataReference" /> class
             specifying the mandatory values.
             </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
             The <paramref name="name" /> parameter is <b>null</b>.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="ApplicationDataUrl">
      <MemberSignature Language="C#" Value="public Uri ApplicationDataUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ApplicationDataUrl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.ApplicationDataReference.ApplicationDataUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the URL used to obtain data from the application.
             </summary>
        <value>
             The application data URL.
             </value>
        <remarks>
             If there is application specific data, or data that needs to be served from the application
             rather than directly from HealthVault, then this field should contain the fully qualified HTTPS URL.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigurationUrl">
      <MemberSignature Language="C#" Value="public Uri ConfigurationUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ConfigurationUrl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.ApplicationDataReference.ConfigurationUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the URL to the application's configuration page.
             </summary>
        <value>
             The configuration URL.
             </value>
        <remarks>
             This page is where the user can enable/disable the application.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.ApplicationDataReference.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the consumer-friendly name.
             </summary>
        <value>
             The consumer-friendly name.
             </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
             The <paramref name="value" /> parameter is <b>null or empty</b>.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="ParseXml">
      <MemberSignature Language="C#" Value="protected override void ParseXml (System.Xml.XPath.IXPathNavigable typeSpecificXml);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ParseXml(class System.Xml.XPath.IXPathNavigable typeSpecificXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.ApplicationDataReference.ParseXml(System.Xml.XPath.IXPathNavigable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeSpecificXml" Type="System.Xml.XPath.IXPathNavigable" />
      </Parameters>
      <Docs>
        <param name="typeSpecificXml">
             The XML to get the application data reference from.
             </param>
        <summary>
             Populates this <see cref="T:Microsoft.HealthVault.ItemTypes.ApplicationDataReference" /> instance from the data in the XML.
             </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
             The first node in the <paramref name="typeSpecificXml" /> parameter
             is not an application-data-reference node.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="PublicUrl">
      <MemberSignature Language="C#" Value="public Uri PublicUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri PublicUrl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.ApplicationDataReference.PublicUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the URL that renders the application.
             </summary>
        <value>
             The public URL.
             </value>
        <remarks>
             The rendering is suitable for IFrame embedding.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderFileName">
      <MemberSignature Language="C#" Value="public string RenderFileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RenderFileName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.ApplicationDataReference.RenderFileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the fully qualified name of the Silverlight application.
             </summary>
        <value>
             The render file name.
             </value>
        <remarks>
             In current implementations, the xap files themselves must be hosted by Microsoft.
             This name will be used to look-up the source location of the widget for the purpose of display.
             </remarks>
        <exception cref="T:System.ArgumentException">
             The <paramref name="value" /> parameter is <b>null or empty</b>.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.ApplicationDataReference.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
             Gets a string representation of the application data reference.
             </summary>
        <returns>
             A string representing the application data reference.
             </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeId">
      <MemberSignature Language="C#" Value="public static readonly Guid TypeId;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Guid TypeId" />
      <MemberSignature Language="DocId" Value="F:Microsoft.HealthVault.ItemTypes.ApplicationDataReference.TypeId" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Retrieves the unique identifier for the item type.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public override void WriteXml (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteXml(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.ApplicationDataReference.WriteXml(System.Xml.XmlWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
             The XmlWriter to write the application data reference data to.
             </param>
        <summary>
             Writes the application data reference data to the specified XmlWriter.
             </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
             If <paramref name="writer" /> is <b>null</b>.
             </exception>
        <exception cref="T:Microsoft.HealthVault.Exceptions.ThingSerializationException">
             If <see cref="P:Microsoft.HealthVault.ItemTypes.ApplicationDataReference.Name" /> is <b>null</b>.
             </exception>
      </Docs>
    </Member>
  </Members>
</Type>
