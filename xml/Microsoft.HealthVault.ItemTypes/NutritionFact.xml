<Type Name="NutritionFact" FullName="Microsoft.HealthVault.ItemTypes.NutritionFact">
  <TypeSignature Language="C#" Value="public class NutritionFact : Microsoft.HealthVault.ItemTypes.ItemBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NutritionFact extends Microsoft.HealthVault.ItemTypes.ItemBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.HealthVault.ItemTypes.NutritionFact" />
  <TypeSignature Language="VB.NET" Value="Public Class NutritionFact&#xA;Inherits ItemBase" />
  <TypeSignature Language="F#" Value="type NutritionFact = class&#xA;    inherit ItemBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.HealthVault</AssemblyName>
    <AssemblyVersion>1.65.0.0</AssemblyVersion>
    <AssemblyVersion>1.66.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.HealthVault.ItemTypes.ItemBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
             Information related to a nutrient consumed.
             </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NutritionFact ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.NutritionFact.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
             Creates a new instance of the <see cref="T:Microsoft.HealthVault.ItemTypes.NutritionFact" /> class with default values.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NutritionFact (Microsoft.HealthVault.ItemTypes.CodableValue name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.HealthVault.ItemTypes.CodableValue name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.NutritionFact.#ctor(Microsoft.HealthVault.ItemTypes.CodableValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As CodableValue)" />
      <MemberSignature Language="F#" Value="new Microsoft.HealthVault.ItemTypes.NutritionFact : Microsoft.HealthVault.ItemTypes.CodableValue -&gt; Microsoft.HealthVault.ItemTypes.NutritionFact" Usage="new Microsoft.HealthVault.ItemTypes.NutritionFact name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="Microsoft.HealthVault.ItemTypes.CodableValue" />
      </Parameters>
      <Docs>
        <param name="name">
             The name of the nutrient consumed.
             </param>
        <summary>
             Creates a new instance of the <see cref="T:Microsoft.HealthVault.ItemTypes.NutritionFact" /> class
             specifying mandatory values.
             </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
             If <paramref name="name" /> is <b>null</b>.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="Fact">
      <MemberSignature Language="C#" Value="public Microsoft.HealthVault.ItemTypes.GeneralMeasurement Fact { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.HealthVault.ItemTypes.GeneralMeasurement Fact" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.NutritionFact.Fact" />
      <MemberSignature Language="VB.NET" Value="Public Property Fact As GeneralMeasurement" />
      <MemberSignature Language="F#" Value="member this.Fact : Microsoft.HealthVault.ItemTypes.GeneralMeasurement with get, set" Usage="Microsoft.HealthVault.ItemTypes.NutritionFact.Fact" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.HealthVault.ItemTypes.GeneralMeasurement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the amount of nutrient consumed.
             </summary>
        <value>To be added.</value>
        <remarks>
             Examples include 30 cc, 500 mg, 15 liters, 30 inches, etc.
             If there is no information about fact the value should be set to <b>null</b>.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public Microsoft.HealthVault.ItemTypes.CodableValue Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.HealthVault.ItemTypes.CodableValue Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.NutritionFact.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As CodableValue" />
      <MemberSignature Language="F#" Value="member this.Name : Microsoft.HealthVault.ItemTypes.CodableValue with get, set" Usage="Microsoft.HealthVault.ItemTypes.NutritionFact.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.HealthVault.ItemTypes.CodableValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the name of the nutrient consumed.
             </summary>
        <value>To be added.</value>
        <remarks>
             Example: calcium.
             If there is no information about name the value should be set to <b>null</b>.
             </remarks>
        <exception cref="T:System.ArgumentNullException">
             The <paramref name="value" /> parameter is <b>null</b>.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="ParseXml">
      <MemberSignature Language="C#" Value="public override void ParseXml (System.Xml.XPath.XPathNavigator navigator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ParseXml(class System.Xml.XPath.XPathNavigator navigator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.NutritionFact.ParseXml(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ParseXml (navigator As XPathNavigator)" />
      <MemberSignature Language="F#" Value="override this.ParseXml : System.Xml.XPath.XPathNavigator -&gt; unit" Usage="nutritionFact.ParseXml navigator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="navigator">
             The XML to get the NutritionFact data from.
             </param>
        <summary>
             Populates this <see cref="T:Microsoft.HealthVault.ItemTypes.NutritionFact" /> instance from the data in the specified XML.
             </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
             If <paramref name="navigator" /> parameter is <b>null</b>.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.NutritionFact.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="nutritionFact.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
             Gets a string representation of the NutritionFact.
             </summary>
        <returns>
             A string representation of the NutritionFact.
             </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public override void WriteXml (string nodeName, System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteXml(string nodeName, class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.NutritionFact.WriteXml(System.String,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteXml (nodeName As String, writer As XmlWriter)" />
      <MemberSignature Language="F#" Value="override this.WriteXml : string * System.Xml.XmlWriter -&gt; unit" Usage="nutritionFact.WriteXml (nodeName, writer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.HealthVault</AssemblyName>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
        <AssemblyVersion>1.66.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeName" Type="System.String" />
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="nodeName">
             The name of the outer node for the medical image study series.
             </param>
        <param name="writer">
             The XML writer into which the NutritionFact should be
             written.
             </param>
        <summary>
             Writes the XML representation of the NutritionFact into
             the specified XML writer.
             </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
             If <paramref name="nodeName" /> parameter is <b>null</b> or empty.
             </exception>
        <exception cref="T:System.ArgumentNullException">
             If <paramref name="writer" /> parameter is <b>null</b>.
             </exception>
        <exception cref="T:Microsoft.HealthVault.Exceptions.ThingSerializationException">
             If <see cref="P:Microsoft.HealthVault.ItemTypes.NutritionFact.Name" /> is <b>null</b>.
             </exception>
      </Docs>
    </Member>
  </Members>
</Type>