<Type Name="Baby" FullName="Microsoft.HealthVault.ItemTypes.Baby">
  <TypeSignature Language="C#" Value="public class Baby : Microsoft.HealthVault.ItemTypes.ItemBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Baby extends Microsoft.HealthVault.ItemTypes.ItemBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.HealthVault.ItemTypes.Baby" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.HealthVault</AssemblyName>
    <AssemblyVersion>1.65.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.HealthVault.ItemTypes.ItemBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
             Represents a baby associated with a pregnancy or delivery.
             </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Baby ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.Baby.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Gender">
      <MemberSignature Language="C#" Value="public Microsoft.HealthVault.ItemTypes.CodableValue Gender { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.HealthVault.ItemTypes.CodableValue Gender" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.Baby.Gender" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.HealthVault.ItemTypes.CodableValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the gender of the baby.
             </summary>
        <value>To be added.</value>
        <remarks>
             If the gender is not known the value should be set to <b>null</b>.
             The preferred vocabulary for this value is "gender-types".
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeadCircumference">
      <MemberSignature Language="C#" Value="public Microsoft.HealthVault.ItemTypes.Length HeadCircumference { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.HealthVault.ItemTypes.Length HeadCircumference" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.Baby.HeadCircumference" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.HealthVault.ItemTypes.Length</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the circumference of the baby's head.
             </summary>
        <value>To be added.</value>
        <remarks>
             If the head circumference is not known the value should be set to <b>null</b>.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public Microsoft.HealthVault.ItemTypes.Length Length { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.HealthVault.ItemTypes.Length Length" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.Baby.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.HealthVault.ItemTypes.Length</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the birth length of the baby.
             </summary>
        <value>To be added.</value>
        <remarks>
             If the length is not known the value should be set to <b>null</b>.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public Microsoft.HealthVault.ItemTypes.Name Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.HealthVault.ItemTypes.Name Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.Baby.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.HealthVault.ItemTypes.Name</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the name of the baby.
             </summary>
        <value>To be added.</value>
        <remarks>
             If the name is not known the value should be set to <b>null</b>.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Note">
      <MemberSignature Language="C#" Value="public string Note { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Note" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.Baby.Note" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets additional information about the baby.
             </summary>
        <value>To be added.</value>
        <remarks>
             If there are no additional notes the value should be set to <b>null</b>.
             </remarks>
        <exception cref="T:System.ArgumentException">
             If <paramref name="value" /> contains only whitespace.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="ParseXml">
      <MemberSignature Language="C#" Value="public override void ParseXml (System.Xml.XPath.XPathNavigator navigator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ParseXml(class System.Xml.XPath.XPathNavigator navigator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.Baby.ParseXml(System.Xml.XPath.XPathNavigator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="navigator">
             The XML containing the baby information.
             </param>
        <summary>
             Populates the data from the specified XML.
             </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
             The <paramref name="navigator" /> parameter is <b>null</b>.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.Baby.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
             Gets a string representation of the baby information.
             </summary>
        <returns>
             A string representation of the baby information.
             </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Weight">
      <MemberSignature Language="C#" Value="public Microsoft.HealthVault.ItemTypes.WeightValue Weight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.HealthVault.ItemTypes.WeightValue Weight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.ItemTypes.Baby.Weight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.HealthVault.ItemTypes.WeightValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the birth weight of the baby.
             </summary>
        <value>To be added.</value>
        <remarks>
             If the weight is not known the value should be set to <b>null</b>.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public override void WriteXml (string nodeName, System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteXml(string nodeName, class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.ItemTypes.Baby.WriteXml(System.String,System.Xml.XmlWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeName" Type="System.String" />
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="nodeName">
             The name of the outer node for the baby information.
             </param>
        <param name="writer">
             The XML writer into which the baby information should be
             written.
             </param>
        <summary>
             Writes the XML representation of the baby information into
             the specified XML writer.
             </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
             The <paramref name="nodeName" /> parameter is <b>null</b> or empty.
             </exception>
        <exception cref="T:System.ArgumentNullException">
             The <paramref name="writer" /> parameter is <b>null</b>.
             </exception>
      </Docs>
    </Member>
  </Members>
</Type>
