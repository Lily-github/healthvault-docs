<Type Name="Spirometer" FullName="Microsoft.Health.ItemTypes.Old.Spirometer">
  <TypeSignature Language="C#" Value="public class Spirometer : Microsoft.Health.HealthRecordItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Spirometer extends Microsoft.Health.HealthRecordItem" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Health.ItemTypes.Old.Spirometer" />
  <TypeSignature Language="VB.NET" Value="Public Class Spirometer&#xA;Inherits HealthRecordItem" />
  <TypeSignature Language="F#" Value="type Spirometer = class&#xA;    inherit HealthRecordItem" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Health.ItemTypes.Old</AssemblyName>
    <AssemblyVersion>2.64.0.0</AssemblyVersion>
    <AssemblyVersion>2.68.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Health.HealthRecordItem</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents a health record item that encapsulates a single reading 
            from a spirometer.
            </summary>
    <remarks>
            Note: Please use the peak flow type instead of this type.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Spirometer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.Old.Spirometer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes.Old</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Old.Spirometer" /> class with default values.
            </summary>
        <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)" /> method 
            is called.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Spirometer (Microsoft.Health.ItemTypes.HealthServiceDateTime when);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Health.ItemTypes.HealthServiceDateTime when) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.Old.Spirometer.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (when As HealthServiceDateTime)" />
      <MemberSignature Language="F#" Value="new Microsoft.Health.ItemTypes.Old.Spirometer : Microsoft.Health.ItemTypes.HealthServiceDateTime -&gt; Microsoft.Health.ItemTypes.Old.Spirometer" Usage="new Microsoft.Health.ItemTypes.Old.Spirometer when" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes.Old</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="when" Type="Microsoft.Health.ItemTypes.HealthServiceDateTime" />
      </Parameters>
      <Docs>
        <param name="when">
            The date and time when the spirometer reading occurred.
            </param>
        <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Old.Spirometer" /> class 
            specifying the mandatory values.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            The <paramref name="when" /> parameter is <b>null</b>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Fef25to50">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; Fef25to50 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;float64&gt; Fef25to50" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.Old.Spirometer.Fef25to50" />
      <MemberSignature Language="VB.NET" Value="Public Property Fef25to50 As Nullable(Of Double)" />
      <MemberSignature Language="F#" Value="member this.Fef25to50 : Nullable&lt;double&gt; with get, set" Usage="Microsoft.Health.ItemTypes.Old.Spirometer.Fef25to50" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes.Old</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the average flow of air coming out of the lungs 
            during the middle (25-50%) portion of the expiration.
            </summary>
        <value>
            A number representing the flow.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fef25to75">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; Fef25to75 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;float64&gt; Fef25to75" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.Old.Spirometer.Fef25to75" />
      <MemberSignature Language="VB.NET" Value="Public Property Fef25to75 As Nullable(Of Double)" />
      <MemberSignature Language="F#" Value="member this.Fef25to75 : Nullable&lt;double&gt; with get, set" Usage="Microsoft.Health.ItemTypes.Old.Spirometer.Fef25to75" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes.Old</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the average flow of air coming out of the lungs 
            during the middle (25-75%) portion of the expiration.
            </summary>
        <value>
            A number representing the flow.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FevOverFvc">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; FevOverFvc { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;float64&gt; FevOverFvc" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.Old.Spirometer.FevOverFvc" />
      <MemberSignature Language="VB.NET" Value="Public Property FevOverFvc As Nullable(Of Double)" />
      <MemberSignature Language="F#" Value="member this.FevOverFvc : Nullable&lt;double&gt; with get, set" Usage="Microsoft.Health.ItemTypes.Old.Spirometer.FevOverFvc" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes.Old</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the ratio of the Forced Expiratory Volume (FEV) over
            Forced Vital Capacity (FVC).
            </summary>
        <value>
            A collection of strings representing the ratio.
            </value>
        <remarks>
            In healthy adults, this value should be approximately 75-80%.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fif25to50">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; Fif25to50 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;float64&gt; Fif25to50" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.Old.Spirometer.Fif25to50" />
      <MemberSignature Language="VB.NET" Value="Public Property Fif25to50 As Nullable(Of Double)" />
      <MemberSignature Language="F#" Value="member this.Fif25to50 : Nullable&lt;double&gt; with get, set" Usage="Microsoft.Health.ItemTypes.Old.Spirometer.Fif25to50" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes.Old</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the average inspiratory flow 
            during the middle (25-50%) portion of inspiration.
            </summary>
        <value>
            A number representing the flow.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fif25to75">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; Fif25to75 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;float64&gt; Fif25to75" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.Old.Spirometer.Fif25to75" />
      <MemberSignature Language="VB.NET" Value="Public Property Fif25to75 As Nullable(Of Double)" />
      <MemberSignature Language="F#" Value="member this.Fif25to75 : Nullable&lt;double&gt; with get, set" Usage="Microsoft.Health.ItemTypes.Old.Spirometer.Fif25to75" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes.Old</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the average inspiratory flow 
            during the middle (25-75%) portion of inspiration.
            </summary>
        <value>
            A number representing the flow.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForcedExpiratoryTime">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; ForcedExpiratoryTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;float64&gt; ForcedExpiratoryTime" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.Old.Spirometer.ForcedExpiratoryTime" />
      <MemberSignature Language="VB.NET" Value="Public Property ForcedExpiratoryTime As Nullable(Of Double)" />
      <MemberSignature Language="F#" Value="member this.ForcedExpiratoryTime : Nullable&lt;double&gt; with get, set" Usage="Microsoft.Health.ItemTypes.Old.Spirometer.ForcedExpiratoryTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes.Old</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the length of expiration in seconds.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForcedExpiratoryVolume">
      <MemberSignature Language="C#" Value="public Microsoft.Health.ItemTypes.FlowMeasurement ForcedExpiratoryVolume { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Health.ItemTypes.FlowMeasurement ForcedExpiratoryVolume" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.Old.Spirometer.ForcedExpiratoryVolume" />
      <MemberSignature Language="VB.NET" Value="Public Property ForcedExpiratoryVolume As FlowMeasurement" />
      <MemberSignature Language="F#" Value="member this.ForcedExpiratoryVolume : Microsoft.Health.ItemTypes.FlowMeasurement with get, set" Usage="Microsoft.Health.ItemTypes.Old.Spirometer.ForcedExpiratoryVolume" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes.Old</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ItemTypes.FlowMeasurement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the forced expiratory volume measured in 
            liters per second (L/s).
            </summary>
        <value>
            A number representing the volume.
            </value>
        <remarks>
            Set the value to <b>null</b> if the forced expiratory volume should not
            be stored.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxVoluntaryVentilation">
      <MemberSignature Language="C#" Value="public Microsoft.Health.ItemTypes.FlowMeasurement MaxVoluntaryVentilation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Health.ItemTypes.FlowMeasurement MaxVoluntaryVentilation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.Old.Spirometer.MaxVoluntaryVentilation" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxVoluntaryVentilation As FlowMeasurement" />
      <MemberSignature Language="F#" Value="member this.MaxVoluntaryVentilation : Microsoft.Health.ItemTypes.FlowMeasurement with get, set" Usage="Microsoft.Health.ItemTypes.Old.Spirometer.MaxVoluntaryVentilation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes.Old</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ItemTypes.FlowMeasurement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the maximum voluntary ventilation (MVV) measured
            in liters per second (L/s).
            </summary>
        <value>
            A number representing the ventilation measured in liters per 
            second (L/s).
            </value>
        <remarks>
            For this test, patients inspire and expire
            into the spirometer over and over again as fast 
            as they can, for at least 12 seconds.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseXml">
      <MemberSignature Language="C#" Value="protected override void ParseXml (System.Xml.XPath.IXPathNavigable typeSpecificXml);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ParseXml(class System.Xml.XPath.IXPathNavigable typeSpecificXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.Old.Spirometer.ParseXml(System.Xml.XPath.IXPathNavigable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ParseXml (typeSpecificXml As IXPathNavigable)" />
      <MemberSignature Language="F#" Value="override this.ParseXml : System.Xml.XPath.IXPathNavigable -&gt; unit" Usage="spirometer.ParseXml typeSpecificXml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes.Old</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeSpecificXml" Type="System.Xml.XPath.IXPathNavigable" />
      </Parameters>
      <Docs>
        <param name="typeSpecificXml">
            The XML to get the spirometer data from.
            </param>
        <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.Old.Spirometer" /> instance from the data in the XML.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
            The first node in the <paramref name="typeSpecificXml" /> parameter 
            is not a spirometer node.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="PeakExpiratoryFlow">
      <MemberSignature Language="C#" Value="public Microsoft.Health.ItemTypes.FlowMeasurement PeakExpiratoryFlow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Health.ItemTypes.FlowMeasurement PeakExpiratoryFlow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.Old.Spirometer.PeakExpiratoryFlow" />
      <MemberSignature Language="VB.NET" Value="Public Property PeakExpiratoryFlow As FlowMeasurement" />
      <MemberSignature Language="F#" Value="member this.PeakExpiratoryFlow : Microsoft.Health.ItemTypes.FlowMeasurement with get, set" Usage="Microsoft.Health.ItemTypes.Old.Spirometer.PeakExpiratoryFlow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes.Old</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ItemTypes.FlowMeasurement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the peak expiratory flow measured in liters per 
            second (L/s).
            </summary>
        <value>
            A number representing the peak flow.
            </value>
        <remarks>
            Set the value to <b>null</b> if the peak expiratory flow should not
            be stored.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Problems">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;string&gt; Problems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;string&gt; Problems" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.Old.Spirometer.Problems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Problems As Collection(Of String)" />
      <MemberSignature Language="F#" Value="member this.Problems : System.Collections.ObjectModel.Collection&lt;string&gt;" Usage="Microsoft.Health.ItemTypes.Old.Spirometer.Problems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes.Old</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a collection of the problems that occurred during the reading.
            </summary>
        <value>
            A collection of strings representing the problems.
            </value>
        <remarks>
            To add a problem, pass a string containing the problem message 
            to the Add method of a returned collection.
            <br /><br />
            Problems indicate the reading was not normal and indicates an 
            action should be taken. The text of the problem tells what is of 
            concern.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="SlowVitalCapacity">
      <MemberSignature Language="C#" Value="public Microsoft.Health.ItemTypes.VolumeMeasurement SlowVitalCapacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Health.ItemTypes.VolumeMeasurement SlowVitalCapacity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.Old.Spirometer.SlowVitalCapacity" />
      <MemberSignature Language="VB.NET" Value="Public Property SlowVitalCapacity As VolumeMeasurement" />
      <MemberSignature Language="F#" Value="member this.SlowVitalCapacity : Microsoft.Health.ItemTypes.VolumeMeasurement with get, set" Usage="Microsoft.Health.ItemTypes.Old.Spirometer.SlowVitalCapacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes.Old</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ItemTypes.VolumeMeasurement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the capacity of the lungs during expiration or
            inspiration, measured in liters (L).
            </summary>
        <value>
            A number representing the capacity in liters (L).
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TidalVolume">
      <MemberSignature Language="C#" Value="public Microsoft.Health.ItemTypes.VolumeMeasurement TidalVolume { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Health.ItemTypes.VolumeMeasurement TidalVolume" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.Old.Spirometer.TidalVolume" />
      <MemberSignature Language="VB.NET" Value="Public Property TidalVolume As VolumeMeasurement" />
      <MemberSignature Language="F#" Value="member this.TidalVolume : Microsoft.Health.ItemTypes.VolumeMeasurement with get, set" Usage="Microsoft.Health.ItemTypes.Old.Spirometer.TidalVolume" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes.Old</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ItemTypes.VolumeMeasurement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the tidal volume, measured in liters (L).
             </summary>
        <value>
             A number representing the volume measured in liters (L).
             </value>
        <remarks>
             This is the specific volume of air that is drawn
             into and then expired out of the lungs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.Old.Spirometer.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="spirometer.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes.Old</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets a string representation of the spirometer reading.
            </summary>
        <returns>
            A string representing the vault of the spirometer reading.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeId">
      <MemberSignature Language="C#" Value="public static readonly Guid TypeId;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Guid TypeId" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Health.ItemTypes.Old.Spirometer.TypeId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TypeId As Guid " />
      <MemberSignature Language="F#" Value=" staticval mutable TypeId : Guid" Usage="Microsoft.Health.ItemTypes.Old.Spirometer.TypeId" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes.Old</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Retrieves the unique identifier for the item type.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Warnings">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;string&gt; Warnings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;string&gt; Warnings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.Old.Spirometer.Warnings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Warnings As Collection(Of String)" />
      <MemberSignature Language="F#" Value="member this.Warnings : System.Collections.ObjectModel.Collection&lt;string&gt;" Usage="Microsoft.Health.ItemTypes.Old.Spirometer.Warnings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes.Old</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a collection of the warnings that occurred during the reading.
            </summary>
        <value>
            A collection of strings representing the warnings.
            </value>
        <remarks>
            To add a warning, pass a string containing the warning message 
            to the Add method of a returned collection.
            <br /><br />
            Warnings indicate the reading was not normal. The text of the 
            warning tells what is of concern.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="When">
      <MemberSignature Language="C#" Value="public Microsoft.Health.ItemTypes.HealthServiceDateTime When { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Health.ItemTypes.HealthServiceDateTime When" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.ItemTypes.Old.Spirometer.When" />
      <MemberSignature Language="VB.NET" Value="Public Property When As HealthServiceDateTime" />
      <MemberSignature Language="F#" Value="member this.When : Microsoft.Health.ItemTypes.HealthServiceDateTime with get, set" Usage="Microsoft.Health.ItemTypes.Old.Spirometer.When" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes.Old</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ItemTypes.HealthServiceDateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the date and time when the spirometer reading occurred.
            </summary>
        <value>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime" /> instance representing the date 
            and time.
            </value>
        <remarks>
            The value defaults to the current year, month, and day.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
            The <paramref name="value" /> parameter is <b>null</b>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public override void WriteXml (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteXml(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.ItemTypes.Old.Spirometer.WriteXml(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteXml (writer As XmlWriter)" />
      <MemberSignature Language="F#" Value="override this.WriteXml : System.Xml.XmlWriter -&gt; unit" Usage="spirometer.WriteXml writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.ItemTypes.Old</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
            The XmlWriter to write the spirometer use data to.
            </param>
        <summary>
            Writes the spirometer data to the specified XmlWriter.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer" /> is <b>null</b>.
            </exception>
        <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.Old.Spirometer.When" /> is <b>null</b>.
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>