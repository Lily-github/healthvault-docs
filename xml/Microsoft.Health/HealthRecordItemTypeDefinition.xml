<Type Name="HealthRecordItemTypeDefinition" FullName="Microsoft.Health.HealthRecordItemTypeDefinition">
  <TypeSignature Language="C#" Value="public class HealthRecordItemTypeDefinition" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HealthRecordItemTypeDefinition extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Health.HealthRecordItemTypeDefinition" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Health</AssemblyName>
    <AssemblyVersion>2.64.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Describes the schema and structure of a health record item type.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HealthRecordItemTypeDefinition ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthRecordItemTypeDefinition.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.HealthRecordItemTypeDefinition" /> class for use in testing.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowReadOnly">
      <MemberSignature Language="C#" Value="public bool AllowReadOnly { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowReadOnly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.HealthRecordItemTypeDefinition.AllowReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether the Thing Type allows read-only
            instances.
            </summary>
        <value>
          <b>true</b> if the Thing Type allows read-only instances; otherwise <b>false</b></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnDefinitions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Health.ItemTypeDataColumn&gt; ColumnDefinitions { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class Microsoft.Health.ItemTypeDataColumn&gt; ColumnDefinitions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.HealthRecordItemTypeDefinition.ColumnDefinitions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Health.ItemTypeDataColumn&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the column definitions when dealing with the type as a
            single type table.
            </summary>
        <value>
            A read-only collection containing the defintions.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFromXml">
      <MemberSignature Language="C#" Value="public static Microsoft.Health.HealthRecordItemTypeDefinition CreateFromXml (System.Xml.XPath.XPathNavigator typeNavigator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Health.HealthRecordItemTypeDefinition CreateFromXml(class System.Xml.XPath.XPathNavigator typeNavigator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthRecordItemTypeDefinition.CreateFromXml(System.Xml.XPath.XPathNavigator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.HealthRecordItemTypeDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeNavigator" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="typeNavigator">
            XML navigator containing the information needed to construct the instance. This XML
            must adhere to the schema for a ThingType as defined by response-getthingtype.xsd.
            </param>
        <summary>
            Constructs an instance of <see cref="T:Microsoft.Health.HealthRecordItemTypeDefinition" /> from the specified
            XML.
            </summary>
        <returns>
            An instance of <see cref="T:Microsoft.Health.HealthRecordItemTypeDefinition" /> constructed from the 
            specified XML.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EffectiveDateXPath">
      <MemberSignature Language="C#" Value="public string EffectiveDateXPath { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EffectiveDateXPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.HealthRecordItemTypeDefinition.EffectiveDateXPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the XPath to the effective date element in the <see cref="P:Microsoft.Health.HealthRecordItem.TypeSpecificData" />.
            </summary>
        <value>
            The String representation of the XPath.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTransform">
      <MemberSignature Language="C#" Value="public System.Xml.Xsl.XslCompiledTransform GetTransform (string transformName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Xsl.XslCompiledTransform GetTransform(string transformName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthRecordItemTypeDefinition.GetTransform(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Xsl.XslCompiledTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transformName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="transformName">
            The name of the transform to get.
            </param>
        <summary>
            Gets a compiled version of the specified transform.
            </summary>
        <returns>
            A compiled version of the specified transform.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException">
            If <paramref name="transformName" /> is not found as a transform for the item type.
            </exception>
        <exception cref="T:System.Xml.XmlException">
            There is a load or parse error in the specified transform.
            </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
            The specified style sheet contains an error.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="IsCreatable">
      <MemberSignature Language="C#" Value="public bool IsCreatable { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCreatable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.HealthRecordItemTypeDefinition.IsCreatable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether instances of the type are creatable.
            </summary>
        <value>
          <b>true</b> if the instances are creatable; otherwise, <b>false</b>.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImmutable">
      <MemberSignature Language="C#" Value="public bool IsImmutable { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsImmutable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.HealthRecordItemTypeDefinition.IsImmutable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether instances of the type are immutable.
            </summary>
        <value>
          <b>true</b> if the instances are immutable; otherwise, <b>false</b>.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsItemXmlSchemaValid">
      <MemberSignature Language="C#" Value="public bool IsItemXmlSchemaValid (string typeSpecificXml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsItemXmlSchemaValid(string typeSpecificXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthRecordItemTypeDefinition.IsItemXmlSchemaValid(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeSpecificXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeSpecificXml">
            The type specific portion of the XML for a health record item. It does not include
            the header information like type-id, thing-id, etc.
            </param>
        <summary>
            Validates the type specific XML is valid based on item type definition schema.
            </summary>
        <returns>
            True if <paramref name="typeSpecificXml" /> is schema valid according to
            this type definition.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
            If <paramref name="typeSpecificXml" /> is <b>null</b> or empty.
            </exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaException">
            If <paramref name="typeSpecificXml" /> is not valid according to
            this type definition.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="IsSingletonType">
      <MemberSignature Language="C#" Value="public bool IsSingletonType { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSingletonType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.HealthRecordItemTypeDefinition.IsSingletonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether only a single instance of the type 
            can exist for each health record.
            </summary>
        <value>
          <b>true</b> if only a single instance of the type can exist for each
            health record; otherwise, <b>false</b>.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.HealthRecordItemTypeDefinition.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the type name.
            </summary>
        <value>
            A string representing the type name.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportedTransformNames">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; SupportedTransformNames { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; SupportedTransformNames" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.HealthRecordItemTypeDefinition.SupportedTransformNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the HealthVault transform names supported by the type.
            </summary>
        <value>
            A read-only collection containing the transforms.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformItem">
      <MemberSignature Language="C#" Value="public string TransformItem (string transformName, Microsoft.Health.HealthRecordItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string TransformItem(string transformName, class Microsoft.Health.HealthRecordItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthRecordItemTypeDefinition.TransformItem(System.String,Microsoft.Health.HealthRecordItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transformName" Type="System.String" />
        <Parameter Name="item" Type="Microsoft.Health.HealthRecordItem" />
      </Parameters>
      <Docs>
        <param name="transformName">
            The name of the transform to use. Supported transforms for the type can be found in the
            <see cref="P:Microsoft.Health.HealthRecordItemTypeDefinition.SupportedTransformNames" /> collection.
            </param>
        <param name="item">
            The health record item to be transformed.
            </param>
        <summary>
            Transforms the XML of the specified health record item using the specified transform.
            </summary>
        <returns>
            A string containing the results of the transform.
            </returns>
        <remarks>
            If the transform has been used before a cached instance of the compiled transform will
            be used. Compiled transforms are not thread safe. It is up to the caller to ensure
            that multiple threads do not attempt to use the same transform at the same time.
            </remarks>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException">
            If <paramref name="transformName" /> could not be found in the <see cref="P:Microsoft.Health.HealthRecordItemTypeDefinition.TransformSource" />
            collection.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="TransformSource">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;string,string&gt; TransformSource { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;string, string&gt; TransformSource" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.HealthRecordItemTypeDefinition.TransformSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the HealthVault transforms supported by the type.
            </summary>
        <value>
            A dictionary containing each of the transforms supported by the type. The key is the
            transform name and the value is the source of the transform.
            </value>
        <remarks>
            The transform can be run by calling one of the <see cref="M:Microsoft.Health.HealthRecordItemTypeDefinition.TransformItem(System.String,Microsoft.Health.HealthRecordItem)" /> overloads.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeId">
      <MemberSignature Language="C#" Value="public Guid TypeId { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid TypeId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.HealthRecordItemTypeDefinition.TypeId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the type unique identifier.
            </summary>
        <value>
            A GUID representing the type identifier.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeSchema">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema TypeSchema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchema TypeSchema" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.HealthRecordItemTypeDefinition.TypeSchema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the schema definition of the type.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedEndDateXPath">
      <MemberSignature Language="C#" Value="public string UpdatedEndDateXPath { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdatedEndDateXPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.HealthRecordItemTypeDefinition.UpdatedEndDateXPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the XPath to the updated end date element in the <see cref="P:Microsoft.Health.HealthRecordItem.TypeSpecificData" />.
            </summary>
        <value>
            The String representation of the XPath.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationSchemaSet">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet ValidationSchemaSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaSet ValidationSchemaSet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.HealthRecordItemTypeDefinition.ValidationSchemaSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the XmlSchemaSet that can be used to validate an XML fragment of
            this health record item type.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Versions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Health.HealthRecordItemTypeVersionInfo&gt; Versions { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class Microsoft.Health.HealthRecordItemTypeVersionInfo&gt; Versions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.HealthRecordItemTypeDefinition.Versions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Health.HealthRecordItemTypeVersionInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a collection of the version information for the type.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSchemaDefinition">
      <MemberSignature Language="C#" Value="public string XmlSchemaDefinition { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlSchemaDefinition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.HealthRecordItemTypeDefinition.XmlSchemaDefinition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the XML schema definition.
            </summary>
        <value>
            A string representing the definition.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
