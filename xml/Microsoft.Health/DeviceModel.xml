<Type Name="DeviceModel" FullName="Microsoft.Health.DeviceModel">
  <TypeSignature Language="C#" Value="public class DeviceModel : System.Xml.Serialization.IXmlSerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DeviceModel extends System.Object implements class System.Xml.Serialization.IXmlSerializable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Health.DeviceModel" />
  <TypeSignature Language="VB.NET" Value="Public Class DeviceModel&#xA;Implements IXmlSerializable" />
  <TypeSignature Language="F#" Value="type DeviceModel = class&#xA;    interface IXmlSerializable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Health.Directory</AssemblyName>
    <AssemblyVersion>2.64.0.0</AssemblyVersion>
    <AssemblyVersion>2.68.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Xml.Serialization.IXmlSerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Defines the information for a HealthVault DeviceModel.
            A device model contains information for a model of a device.
            </summary>
    <remarks>
            Device model information typically consists of name, and Windows Portable Device information.
            Supplementary information like purchase url, screenshots, driver packages, etc. are also available.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DeviceModel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.DeviceModel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.Directory</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.DeviceModel" /> class with default parameters.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public Microsoft.Health.CultureSpecificStringDictionary DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Health.CultureSpecificStringDictionary DisplayName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.DeviceModel.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayName As CultureSpecificStringDictionary" />
      <MemberSignature Language="F#" Value="member this.DisplayName : Microsoft.Health.CultureSpecificStringDictionary" Usage="Microsoft.Health.DeviceModel.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.Directory</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.CultureSpecificStringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a dictionary of language specifiers and localized friendly display name of the device model.
            </summary>
        <value>To be added.</value>
        <remarks>
            Maximum length of each string is 255 characters.
            The key is the RFC 5646 compliant locale string such as "en-US", and the value is of type string.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.Schema.XmlSchema GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.DeviceModel.GetSchema" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSchema () As XmlSchema" />
      <MemberSignature Language="F#" Value="abstract member GetSchema : unit -&gt; System.Xml.Schema.XmlSchema&#xA;override this.GetSchema : unit -&gt; System.Xml.Schema.XmlSchema" Usage="deviceModel.GetSchema " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.Serialization.IXmlSerializable.GetSchema</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.Directory</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Get the schema as per IXmlSerializable requirement.
            Always returns null.
            </summary>
        <returns>null</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.DeviceModel.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="Microsoft.Health.DeviceModel.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.Directory</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the name of the device model.
            </summary>
        <value>To be added.</value>
        <remarks>
            Maximum length is 128 characters.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="PurchaseUrl">
      <MemberSignature Language="C#" Value="public Microsoft.Health.CultureSpecificUrlDictionary PurchaseUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Health.CultureSpecificUrlDictionary PurchaseUrl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.DeviceModel.PurchaseUrl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PurchaseUrl As CultureSpecificUrlDictionary" />
      <MemberSignature Language="F#" Value="member this.PurchaseUrl : Microsoft.Health.CultureSpecificUrlDictionary" Usage="Microsoft.Health.DeviceModel.PurchaseUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.Directory</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.CultureSpecificUrlDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets dictionary of language specifiers and localized URL to retrieve the purchase url on this device model.
            </summary>
        <value>To be added.</value>
        <remarks>
            The key is the RFC 5646 compliant locale string such as "en-US", and the value is of type string.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadXml">
      <MemberSignature Language="C#" Value="public void ReadXml (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadXml(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.DeviceModel.ReadXml(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadXml (reader As XmlReader)" />
      <MemberSignature Language="F#" Value="abstract member ReadXml : System.Xml.XmlReader -&gt; unit&#xA;override this.ReadXml : System.Xml.XmlReader -&gt; unit" Usage="deviceModel.ReadXml reader" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.Directory</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
            The XmlReader stream from which the object is deserialized.
            </param>
        <summary>
            Generates an object from its XML representation.
            </summary>
        <remarks>
            The ReadXml method must reconstitute your object using the information that was written by the WriteXml method
            </remarks>
        <exception cref="T:System.ArgumentNullException">
            If the argument <paramref name="reader" /> was <b>null</b>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Screenshots">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;Microsoft.Health.Screenshot&gt; Screenshots { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class Microsoft.Health.Screenshot&gt; Screenshots" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.DeviceModel.Screenshots" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Screenshots As Collection(Of Screenshot)" />
      <MemberSignature Language="F#" Value="member this.Screenshots : System.Collections.ObjectModel.Collection&lt;Microsoft.Health.Screenshot&gt;" Usage="Microsoft.Health.DeviceModel.Screenshots" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.Directory</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;Microsoft.Health.Screenshot&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a collection of screenshots for this device model.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowsClientInformation">
      <MemberSignature Language="C#" Value="public Microsoft.Health.DeviceWindowsClientInformation WindowsClientInformation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Health.DeviceWindowsClientInformation WindowsClientInformation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.DeviceModel.WindowsClientInformation" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowsClientInformation As DeviceWindowsClientInformation" />
      <MemberSignature Language="F#" Value="member this.WindowsClientInformation : Microsoft.Health.DeviceWindowsClientInformation with get, set" Usage="Microsoft.Health.DeviceModel.WindowsClientInformation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.Directory</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.DeviceWindowsClientInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets information required for windows clients in order to detect the device and install the appropriate driver for it.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteXml(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.DeviceModel.WriteXml(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As XmlWriter)" />
      <MemberSignature Language="F#" Value="abstract member WriteXml : System.Xml.XmlWriter -&gt; unit&#xA;override this.WriteXml : System.Xml.XmlWriter -&gt; unit" Usage="deviceModel.WriteXml writer" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health.Directory</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">The XmlWriter stream to which the object is serialized. 
            </param>
        <summary>
            Converts an object into its XML representation.
            </summary>
        <remarks>
            Write sufficient information to the XmlWriter stream to allow the ReadXml method to reconstitute the object.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
            If the argument <paramref name="writer" /> was <b>null</b>.
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>