<Type Name="ActionPlanTaskTargetEvent" FullName="Microsoft.HealthVault.RestApi.Generated.Models.ActionPlanTaskTargetEvent">
  <TypeSignature Language="C#" Value="public class ActionPlanTaskTargetEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ActionPlanTaskTargetEvent extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.HealthVault.RestApi.Generated.Models.ActionPlanTaskTargetEvent" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.HealthVault.RestApi</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The tracking properties of a HealthVault event
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActionPlanTaskTargetEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.RestApi.Generated.Models.ActionPlanTaskTargetEvent.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the ActionPlanTaskTargetEvent class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActionPlanTaskTargetEvent (string elementXPath = null, System.Collections.Generic.IList&lt;string&gt; elementValues = null, Nullable&lt;bool&gt; isNegated = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementXPath, class System.Collections.Generic.IList`1&lt;string&gt; elementValues, valuetype System.Nullable`1&lt;bool&gt; isNegated) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.HealthVault.RestApi.Generated.Models.ActionPlanTaskTargetEvent.#ctor(System.String,System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean})" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementXPath" Type="System.String" />
        <Parameter Name="elementValues" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="isNegated" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="elementXPath">XML XPath to the property for which task
            should be tracked</param>
        <param name="elementValues">List of all of the possible values for
            a given xPath property. (i.e. "run", "running", "walk"
            etc).</param>
        <param name="isNegated">Flag to indicate if the condition mentioned
            above is negated. e.g. Item shouldn't be a run or a walk.</param>
        <summary>
            Initializes a new instance of the ActionPlanTaskTargetEvent class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; ElementValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; ElementValues" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.RestApi.Generated.Models.ActionPlanTaskTargetEvent.ElementValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="elementValues")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets list of all of the possible values for a given xPath
            property. (i.e. "run", "running", "walk" etc).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementXPath">
      <MemberSignature Language="C#" Value="public string ElementXPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementXPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.RestApi.Generated.Models.ActionPlanTaskTargetEvent.ElementXPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="elementXPath")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets XML XPath to the property for which task should be
            tracked
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNegated">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; IsNegated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsNegated" />
      <MemberSignature Language="DocId" Value="P:Microsoft.HealthVault.RestApi.Generated.Models.ActionPlanTaskTargetEvent.IsNegated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="isNegated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets flag to indicate if the condition mentioned above is
            negated. e.g. Item shouldn't be a run or a walk.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
