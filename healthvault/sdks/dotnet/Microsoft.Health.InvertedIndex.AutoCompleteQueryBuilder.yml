### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder
  commentId: T:Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder
  id: AutoCompleteQueryBuilder
  parent: Microsoft.Health.InvertedIndex
  children:
  - Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.#ctor(Microsoft.Health.InvertedIndex.AutoCompleteIndex)
  - Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.AddString(System.String)
  - Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.BuildQuery(System.Collections.Generic.IList{System.String})
  - Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.LooseMatching
  - Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.m_maxPrefixMatchesPerWord
  - Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.m_minQueryLength
  - Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.m_phoneticEncoder
  - Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.MaxPrefixMatchesPerWord
  - Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.MinQueryLength
  - Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.PhoneticMatching
  - Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.PrefixMatching
  langs:
  - csharp
  - vb
  name: AutoCompleteQueryBuilder
  nameWithType: AutoCompleteQueryBuilder
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/AutoCompleteQueryBuilder.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AutoCompleteQueryBuilder
    path: ../Microsoft.Health.Utility/search/InvertedIndex/AutoCompleteQueryBuilder.cs
    startLine: 12
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  syntax:
    content: 'public class AutoCompleteQueryBuilder : VectorQueryBuilder'
    content.vb: >-
      Public Class AutoCompleteQueryBuilder
          Inherits VectorQueryBuilder
  inheritance:
  - System.Object
  - Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  - Microsoft.Health.InvertedIndex.TextQueryBuilder
  - Microsoft.Health.InvertedIndex.VectorQueryBuilder
  inheritedMembers:
  - Microsoft.Health.InvertedIndex.TextQueryBuilder.m_boosts
  - Microsoft.Health.InvertedIndex.TextQueryBuilder.m_maxTerms
  - Microsoft.Health.InvertedIndex.TextQueryBuilder.m_resolvedTerms
  - Microsoft.Health.InvertedIndex.TextQueryBuilder.MaxTerms
  - Microsoft.Health.InvertedIndex.TextQueryBuilder.BuildOrQuery(System.Collections.Generic.IList{System.String})
  - Microsoft.Health.InvertedIndex.TextQueryBuilder.BuildAndQuery(System.Collections.Generic.IList{System.String})
  - Microsoft.Health.InvertedIndex.TextQueryBuilder.BuildExactQuery(System.Collections.Generic.IList{System.String},Microsoft.Health.InvertedIndex.ICorpusStatistics)
  - Microsoft.Health.InvertedIndex.TextQueryBuilder.BuildQueryTree(System.Collections.Generic.IList{System.String})
  - Microsoft.Health.InvertedIndex.TextQueryBuilder.PushTerm(Microsoft.Health.InvertedIndex.RecordIDEnumerator)
  - Microsoft.Health.InvertedIndex.TextQueryBuilder.AddSynonyms(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch,System.String[])
  - Microsoft.Health.InvertedIndex.TextQueryBuilder.AddStem(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch,System.String)
  - Microsoft.Health.InvertedIndex.TextQueryBuilder.AddSpelling(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch,System.String)
  - Microsoft.Health.InvertedIndex.TextQueryBuilder.AddRelated(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch,System.String[])
  - Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.BlockType
  - Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.RemoveType
  - Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.ReplaceType
  - Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.SynonymType
  - Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.RelatedType
  - Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.SpellType
  - Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.StemmerType
  - Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.PhoneticType
  - Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.SubjectType
  - Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.IndicatorType
  - Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.ConceptType
  - Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.Analyzer
  - Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.Build(System.Collections.Generic.IList{System.String})
  - Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.GetBuilder
  - Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.BuildPhrase(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  - Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddWords(System.Collections.Generic.IList{System.String},System.Int32,System.Int32)
  - Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSegment(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  - Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSubject(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  - Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddIndicator(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  - Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddConcept(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch,System.String)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.m_phoneticEncoder
  commentId: F:Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.m_phoneticEncoder
  id: m_phoneticEncoder
  parent: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder
  langs:
  - csharp
  - vb
  name: m_phoneticEncoder
  nameWithType: AutoCompleteQueryBuilder.m_phoneticEncoder
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.m_phoneticEncoder
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/AutoCompleteQueryBuilder.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: m_phoneticEncoder
    path: ../Microsoft.Health.Utility/search/InvertedIndex/AutoCompleteQueryBuilder.cs
    startLine: 21
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: protected PhoneticEncoder m_phoneticEncoder
    content.vb: Protected m_phoneticEncoder As PhoneticEncoder
    return:
      type: Microsoft.Health.InvertedIndex.PhoneticEncoder
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.m_minQueryLength
  commentId: F:Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.m_minQueryLength
  id: m_minQueryLength
  parent: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder
  langs:
  - csharp
  - vb
  name: m_minQueryLength
  nameWithType: AutoCompleteQueryBuilder.m_minQueryLength
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.m_minQueryLength
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/AutoCompleteQueryBuilder.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: m_minQueryLength
    path: ../Microsoft.Health.Utility/search/InvertedIndex/AutoCompleteQueryBuilder.cs
    startLine: 26
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: protected int m_minQueryLength
    content.vb: Protected m_minQueryLength As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.m_maxPrefixMatchesPerWord
  commentId: F:Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.m_maxPrefixMatchesPerWord
  id: m_maxPrefixMatchesPerWord
  parent: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder
  langs:
  - csharp
  - vb
  name: m_maxPrefixMatchesPerWord
  nameWithType: AutoCompleteQueryBuilder.m_maxPrefixMatchesPerWord
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.m_maxPrefixMatchesPerWord
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/AutoCompleteQueryBuilder.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: m_maxPrefixMatchesPerWord
    path: ../Microsoft.Health.Utility/search/InvertedIndex/AutoCompleteQueryBuilder.cs
    startLine: 31
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: protected int m_maxPrefixMatchesPerWord
    content.vb: Protected m_maxPrefixMatchesPerWord As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.#ctor(Microsoft.Health.InvertedIndex.AutoCompleteIndex)
  commentId: M:Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.#ctor(Microsoft.Health.InvertedIndex.AutoCompleteIndex)
  id: '#ctor(Microsoft.Health.InvertedIndex.AutoCompleteIndex)'
  parent: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder
  langs:
  - csharp
  - vb
  name: AutoCompleteQueryBuilder(AutoCompleteIndex)
  nameWithType: AutoCompleteQueryBuilder.AutoCompleteQueryBuilder(AutoCompleteIndex)
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.AutoCompleteQueryBuilder(Microsoft.Health.InvertedIndex.AutoCompleteIndex)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/AutoCompleteQueryBuilder.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.Utility/search/InvertedIndex/AutoCompleteQueryBuilder.cs
    startLine: 37
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public AutoCompleteQueryBuilder(AutoCompleteIndex index)
    content.vb: Public Sub New(index As AutoCompleteIndex)
    parameters:
    - id: index
      type: Microsoft.Health.InvertedIndex.AutoCompleteIndex
      description: ''
  overload: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.LooseMatching
  commentId: F:Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.LooseMatching
  id: LooseMatching
  parent: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder
  langs:
  - csharp
  - vb
  name: LooseMatching
  nameWithType: AutoCompleteQueryBuilder.LooseMatching
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.LooseMatching
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/AutoCompleteQueryBuilder.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: LooseMatching
    path: ../Microsoft.Health.Utility/search/InvertedIndex/AutoCompleteQueryBuilder.cs
    startLine: 46
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public bool LooseMatching
    content.vb: Public LooseMatching As Boolean
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.PrefixMatching
  commentId: F:Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.PrefixMatching
  id: PrefixMatching
  parent: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder
  langs:
  - csharp
  - vb
  name: PrefixMatching
  nameWithType: AutoCompleteQueryBuilder.PrefixMatching
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.PrefixMatching
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/AutoCompleteQueryBuilder.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: PrefixMatching
    path: ../Microsoft.Health.Utility/search/InvertedIndex/AutoCompleteQueryBuilder.cs
    startLine: 51
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public bool PrefixMatching
    content.vb: Public PrefixMatching As Boolean
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.PhoneticMatching
  commentId: F:Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.PhoneticMatching
  id: PhoneticMatching
  parent: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder
  langs:
  - csharp
  - vb
  name: PhoneticMatching
  nameWithType: AutoCompleteQueryBuilder.PhoneticMatching
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.PhoneticMatching
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/AutoCompleteQueryBuilder.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: PhoneticMatching
    path: ../Microsoft.Health.Utility/search/InvertedIndex/AutoCompleteQueryBuilder.cs
    startLine: 56
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public bool PhoneticMatching
    content.vb: Public PhoneticMatching As Boolean
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.MinQueryLength
  commentId: P:Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.MinQueryLength
  id: MinQueryLength
  parent: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder
  langs:
  - csharp
  - vb
  name: MinQueryLength
  nameWithType: AutoCompleteQueryBuilder.MinQueryLength
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.MinQueryLength
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/AutoCompleteQueryBuilder.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: MinQueryLength
    path: ../Microsoft.Health.Utility/search/InvertedIndex/AutoCompleteQueryBuilder.cs
    startLine: 61
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public int MinQueryLength { get; set; }
    content.vb: Public Property MinQueryLength As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.MinQueryLength*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.MaxPrefixMatchesPerWord
  commentId: P:Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.MaxPrefixMatchesPerWord
  id: MaxPrefixMatchesPerWord
  parent: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder
  langs:
  - csharp
  - vb
  name: MaxPrefixMatchesPerWord
  nameWithType: AutoCompleteQueryBuilder.MaxPrefixMatchesPerWord
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.MaxPrefixMatchesPerWord
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/AutoCompleteQueryBuilder.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: MaxPrefixMatchesPerWord
    path: ../Microsoft.Health.Utility/search/InvertedIndex/AutoCompleteQueryBuilder.cs
    startLine: 81
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public int MaxPrefixMatchesPerWord { get; set; }
    content.vb: Public Property MaxPrefixMatchesPerWord As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.MaxPrefixMatchesPerWord*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.BuildQuery(System.Collections.Generic.IList{System.String})
  commentId: M:Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.BuildQuery(System.Collections.Generic.IList{System.String})
  id: BuildQuery(System.Collections.Generic.IList{System.String})
  parent: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder
  langs:
  - csharp
  - vb
  name: BuildQuery(IList<String>)
  nameWithType: AutoCompleteQueryBuilder.BuildQuery(IList<String>)
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.BuildQuery(System.Collections.Generic.IList<System.String>)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/AutoCompleteQueryBuilder.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: BuildQuery
    path: ../Microsoft.Health.Utility/search/InvertedIndex/AutoCompleteQueryBuilder.cs
    startLine: 116
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public override RecordIDEnumerator BuildQuery(IList<string> terms)
    content.vb: Public Overrides Function BuildQuery(terms As IList(Of String)) As RecordIDEnumerator
    parameters:
    - id: terms
      type: System.Collections.Generic.IList{System.String}
      description: ''
    return:
      type: Microsoft.Health.InvertedIndex.RecordIDEnumerator
      description: ''
  overridden: Microsoft.Health.InvertedIndex.VectorQueryBuilder.BuildQuery(System.Collections.Generic.IList{System.String})
  overload: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.BuildQuery*
  nameWithType.vb: AutoCompleteQueryBuilder.BuildQuery(IList(Of String))
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.BuildQuery(System.Collections.Generic.IList(Of System.String))
  name.vb: BuildQuery(IList(Of String))
- uid: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.AddString(System.String)
  commentId: M:Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.AddString(System.String)
  id: AddString(System.String)
  parent: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder
  langs:
  - csharp
  - vb
  name: AddString(String)
  nameWithType: AutoCompleteQueryBuilder.AddString(String)
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.AddString(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/AutoCompleteQueryBuilder.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AddString
    path: ../Microsoft.Health.Utility/search/InvertedIndex/AutoCompleteQueryBuilder.cs
    startLine: 228
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: protected override void AddString(string value)
    content.vb: Protected Overrides Sub AddString(value As String)
    parameters:
    - id: value
      type: System.String
      description: ''
  overridden: Microsoft.Health.InvertedIndex.TextQueryBuilder.AddString(System.String)
  overload: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.AddString*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Microsoft.Health.InvertedIndex
  commentId: N:Microsoft.Health.InvertedIndex
  isExternal: false
  name: Microsoft.Health.InvertedIndex
  nameWithType: Microsoft.Health.InvertedIndex
  fullName: Microsoft.Health.InvertedIndex
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  commentId: T:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  parent: Microsoft.Health.PhraseAnalyzer
  isExternal: false
  name: PhraseNormalizer
  nameWithType: PhraseNormalizer
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
- uid: Microsoft.Health.InvertedIndex.TextQueryBuilder
  commentId: T:Microsoft.Health.InvertedIndex.TextQueryBuilder
  parent: Microsoft.Health.InvertedIndex
  isExternal: false
  name: TextQueryBuilder
  nameWithType: TextQueryBuilder
  fullName: Microsoft.Health.InvertedIndex.TextQueryBuilder
- uid: Microsoft.Health.InvertedIndex.VectorQueryBuilder
  commentId: T:Microsoft.Health.InvertedIndex.VectorQueryBuilder
  parent: Microsoft.Health.InvertedIndex
  isExternal: false
  name: VectorQueryBuilder
  nameWithType: VectorQueryBuilder
  fullName: Microsoft.Health.InvertedIndex.VectorQueryBuilder
- uid: Microsoft.Health.InvertedIndex.TextQueryBuilder.m_boosts
  commentId: F:Microsoft.Health.InvertedIndex.TextQueryBuilder.m_boosts
  parent: Microsoft.Health.InvertedIndex.TextQueryBuilder
  isExternal: false
  name: m_boosts
  nameWithType: TextQueryBuilder.m_boosts
  fullName: Microsoft.Health.InvertedIndex.TextQueryBuilder.m_boosts
- uid: Microsoft.Health.InvertedIndex.TextQueryBuilder.m_maxTerms
  commentId: F:Microsoft.Health.InvertedIndex.TextQueryBuilder.m_maxTerms
  parent: Microsoft.Health.InvertedIndex.TextQueryBuilder
  isExternal: false
  name: m_maxTerms
  nameWithType: TextQueryBuilder.m_maxTerms
  fullName: Microsoft.Health.InvertedIndex.TextQueryBuilder.m_maxTerms
- uid: Microsoft.Health.InvertedIndex.TextQueryBuilder.m_resolvedTerms
  commentId: F:Microsoft.Health.InvertedIndex.TextQueryBuilder.m_resolvedTerms
  parent: Microsoft.Health.InvertedIndex.TextQueryBuilder
  isExternal: false
  name: m_resolvedTerms
  nameWithType: TextQueryBuilder.m_resolvedTerms
  fullName: Microsoft.Health.InvertedIndex.TextQueryBuilder.m_resolvedTerms
- uid: Microsoft.Health.InvertedIndex.TextQueryBuilder.MaxTerms
  commentId: P:Microsoft.Health.InvertedIndex.TextQueryBuilder.MaxTerms
  parent: Microsoft.Health.InvertedIndex.TextQueryBuilder
  isExternal: false
  name: MaxTerms
  nameWithType: TextQueryBuilder.MaxTerms
  fullName: Microsoft.Health.InvertedIndex.TextQueryBuilder.MaxTerms
- uid: Microsoft.Health.InvertedIndex.TextQueryBuilder.BuildOrQuery(System.Collections.Generic.IList{System.String})
  commentId: M:Microsoft.Health.InvertedIndex.TextQueryBuilder.BuildOrQuery(System.Collections.Generic.IList{System.String})
  parent: Microsoft.Health.InvertedIndex.TextQueryBuilder
  isExternal: true
  name: BuildOrQuery(IList<String>)
  nameWithType: TextQueryBuilder.BuildOrQuery(IList<String>)
  fullName: Microsoft.Health.InvertedIndex.TextQueryBuilder.BuildOrQuery(System.Collections.Generic.IList<System.String>)
  nameWithType.vb: TextQueryBuilder.BuildOrQuery(IList(Of String))
  fullName.vb: Microsoft.Health.InvertedIndex.TextQueryBuilder.BuildOrQuery(System.Collections.Generic.IList(Of System.String))
  name.vb: BuildOrQuery(IList(Of String))
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.TextQueryBuilder.BuildOrQuery(System.Collections.Generic.IList{System.String})
    name: BuildOrQuery
    nameWithType: TextQueryBuilder.BuildOrQuery
    fullName: Microsoft.Health.InvertedIndex.TextQueryBuilder.BuildOrQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.TextQueryBuilder.BuildOrQuery(System.Collections.Generic.IList{System.String})
    name: BuildOrQuery
    nameWithType: TextQueryBuilder.BuildOrQuery
    fullName: Microsoft.Health.InvertedIndex.TextQueryBuilder.BuildOrQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.TextQueryBuilder.BuildAndQuery(System.Collections.Generic.IList{System.String})
  commentId: M:Microsoft.Health.InvertedIndex.TextQueryBuilder.BuildAndQuery(System.Collections.Generic.IList{System.String})
  parent: Microsoft.Health.InvertedIndex.TextQueryBuilder
  isExternal: true
  name: BuildAndQuery(IList<String>)
  nameWithType: TextQueryBuilder.BuildAndQuery(IList<String>)
  fullName: Microsoft.Health.InvertedIndex.TextQueryBuilder.BuildAndQuery(System.Collections.Generic.IList<System.String>)
  nameWithType.vb: TextQueryBuilder.BuildAndQuery(IList(Of String))
  fullName.vb: Microsoft.Health.InvertedIndex.TextQueryBuilder.BuildAndQuery(System.Collections.Generic.IList(Of System.String))
  name.vb: BuildAndQuery(IList(Of String))
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.TextQueryBuilder.BuildAndQuery(System.Collections.Generic.IList{System.String})
    name: BuildAndQuery
    nameWithType: TextQueryBuilder.BuildAndQuery
    fullName: Microsoft.Health.InvertedIndex.TextQueryBuilder.BuildAndQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.TextQueryBuilder.BuildAndQuery(System.Collections.Generic.IList{System.String})
    name: BuildAndQuery
    nameWithType: TextQueryBuilder.BuildAndQuery
    fullName: Microsoft.Health.InvertedIndex.TextQueryBuilder.BuildAndQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.TextQueryBuilder.BuildExactQuery(System.Collections.Generic.IList{System.String},Microsoft.Health.InvertedIndex.ICorpusStatistics)
  commentId: M:Microsoft.Health.InvertedIndex.TextQueryBuilder.BuildExactQuery(System.Collections.Generic.IList{System.String},Microsoft.Health.InvertedIndex.ICorpusStatistics)
  parent: Microsoft.Health.InvertedIndex.TextQueryBuilder
  isExternal: true
  name: BuildExactQuery(IList<String>, ICorpusStatistics)
  nameWithType: TextQueryBuilder.BuildExactQuery(IList<String>, ICorpusStatistics)
  fullName: Microsoft.Health.InvertedIndex.TextQueryBuilder.BuildExactQuery(System.Collections.Generic.IList<System.String>, Microsoft.Health.InvertedIndex.ICorpusStatistics)
  nameWithType.vb: TextQueryBuilder.BuildExactQuery(IList(Of String), ICorpusStatistics)
  fullName.vb: Microsoft.Health.InvertedIndex.TextQueryBuilder.BuildExactQuery(System.Collections.Generic.IList(Of System.String), Microsoft.Health.InvertedIndex.ICorpusStatistics)
  name.vb: BuildExactQuery(IList(Of String), ICorpusStatistics)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.TextQueryBuilder.BuildExactQuery(System.Collections.Generic.IList{System.String},Microsoft.Health.InvertedIndex.ICorpusStatistics)
    name: BuildExactQuery
    nameWithType: TextQueryBuilder.BuildExactQuery
    fullName: Microsoft.Health.InvertedIndex.TextQueryBuilder.BuildExactQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.InvertedIndex.ICorpusStatistics
    name: ICorpusStatistics
    nameWithType: ICorpusStatistics
    fullName: Microsoft.Health.InvertedIndex.ICorpusStatistics
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.TextQueryBuilder.BuildExactQuery(System.Collections.Generic.IList{System.String},Microsoft.Health.InvertedIndex.ICorpusStatistics)
    name: BuildExactQuery
    nameWithType: TextQueryBuilder.BuildExactQuery
    fullName: Microsoft.Health.InvertedIndex.TextQueryBuilder.BuildExactQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.InvertedIndex.ICorpusStatistics
    name: ICorpusStatistics
    nameWithType: ICorpusStatistics
    fullName: Microsoft.Health.InvertedIndex.ICorpusStatistics
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.TextQueryBuilder.BuildQueryTree(System.Collections.Generic.IList{System.String})
  commentId: M:Microsoft.Health.InvertedIndex.TextQueryBuilder.BuildQueryTree(System.Collections.Generic.IList{System.String})
  parent: Microsoft.Health.InvertedIndex.TextQueryBuilder
  isExternal: true
  name: BuildQueryTree(IList<String>)
  nameWithType: TextQueryBuilder.BuildQueryTree(IList<String>)
  fullName: Microsoft.Health.InvertedIndex.TextQueryBuilder.BuildQueryTree(System.Collections.Generic.IList<System.String>)
  nameWithType.vb: TextQueryBuilder.BuildQueryTree(IList(Of String))
  fullName.vb: Microsoft.Health.InvertedIndex.TextQueryBuilder.BuildQueryTree(System.Collections.Generic.IList(Of System.String))
  name.vb: BuildQueryTree(IList(Of String))
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.TextQueryBuilder.BuildQueryTree(System.Collections.Generic.IList{System.String})
    name: BuildQueryTree
    nameWithType: TextQueryBuilder.BuildQueryTree
    fullName: Microsoft.Health.InvertedIndex.TextQueryBuilder.BuildQueryTree
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.TextQueryBuilder.BuildQueryTree(System.Collections.Generic.IList{System.String})
    name: BuildQueryTree
    nameWithType: TextQueryBuilder.BuildQueryTree
    fullName: Microsoft.Health.InvertedIndex.TextQueryBuilder.BuildQueryTree
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.TextQueryBuilder.PushTerm(Microsoft.Health.InvertedIndex.RecordIDEnumerator)
  commentId: M:Microsoft.Health.InvertedIndex.TextQueryBuilder.PushTerm(Microsoft.Health.InvertedIndex.RecordIDEnumerator)
  parent: Microsoft.Health.InvertedIndex.TextQueryBuilder
  isExternal: false
  name: PushTerm(RecordIDEnumerator)
  nameWithType: TextQueryBuilder.PushTerm(RecordIDEnumerator)
  fullName: Microsoft.Health.InvertedIndex.TextQueryBuilder.PushTerm(Microsoft.Health.InvertedIndex.RecordIDEnumerator)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.TextQueryBuilder.PushTerm(Microsoft.Health.InvertedIndex.RecordIDEnumerator)
    name: PushTerm
    nameWithType: TextQueryBuilder.PushTerm
    fullName: Microsoft.Health.InvertedIndex.TextQueryBuilder.PushTerm
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.InvertedIndex.RecordIDEnumerator
    name: RecordIDEnumerator
    nameWithType: RecordIDEnumerator
    fullName: Microsoft.Health.InvertedIndex.RecordIDEnumerator
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.TextQueryBuilder.PushTerm(Microsoft.Health.InvertedIndex.RecordIDEnumerator)
    name: PushTerm
    nameWithType: TextQueryBuilder.PushTerm
    fullName: Microsoft.Health.InvertedIndex.TextQueryBuilder.PushTerm
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.InvertedIndex.RecordIDEnumerator
    name: RecordIDEnumerator
    nameWithType: RecordIDEnumerator
    fullName: Microsoft.Health.InvertedIndex.RecordIDEnumerator
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.TextQueryBuilder.AddSynonyms(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch,System.String[])
  commentId: M:Microsoft.Health.InvertedIndex.TextQueryBuilder.AddSynonyms(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch,System.String[])
  parent: Microsoft.Health.InvertedIndex.TextQueryBuilder
  isExternal: true
  name: AddSynonyms(IList<String>, AnalyzerMatch, String[])
  nameWithType: TextQueryBuilder.AddSynonyms(IList<String>, AnalyzerMatch, String[])
  fullName: Microsoft.Health.InvertedIndex.TextQueryBuilder.AddSynonyms(System.Collections.Generic.IList<System.String>, Microsoft.Health.PhraseAnalyzer.AnalyzerMatch, System.String[])
  nameWithType.vb: TextQueryBuilder.AddSynonyms(IList(Of String), AnalyzerMatch, String())
  fullName.vb: Microsoft.Health.InvertedIndex.TextQueryBuilder.AddSynonyms(System.Collections.Generic.IList(Of System.String), Microsoft.Health.PhraseAnalyzer.AnalyzerMatch, System.String())
  name.vb: AddSynonyms(IList(Of String), AnalyzerMatch, String())
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.TextQueryBuilder.AddSynonyms(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch,System.String[])
    name: AddSynonyms
    nameWithType: TextQueryBuilder.AddSynonyms
    fullName: Microsoft.Health.InvertedIndex.TextQueryBuilder.AddSynonyms
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
    name: AnalyzerMatch
    nameWithType: AnalyzerMatch
    fullName: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.TextQueryBuilder.AddSynonyms(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch,System.String[])
    name: AddSynonyms
    nameWithType: TextQueryBuilder.AddSynonyms
    fullName: Microsoft.Health.InvertedIndex.TextQueryBuilder.AddSynonyms
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
    name: AnalyzerMatch
    nameWithType: AnalyzerMatch
    fullName: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.TextQueryBuilder.AddStem(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch,System.String)
  commentId: M:Microsoft.Health.InvertedIndex.TextQueryBuilder.AddStem(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch,System.String)
  parent: Microsoft.Health.InvertedIndex.TextQueryBuilder
  isExternal: true
  name: AddStem(IList<String>, AnalyzerMatch, String)
  nameWithType: TextQueryBuilder.AddStem(IList<String>, AnalyzerMatch, String)
  fullName: Microsoft.Health.InvertedIndex.TextQueryBuilder.AddStem(System.Collections.Generic.IList<System.String>, Microsoft.Health.PhraseAnalyzer.AnalyzerMatch, System.String)
  nameWithType.vb: TextQueryBuilder.AddStem(IList(Of String), AnalyzerMatch, String)
  fullName.vb: Microsoft.Health.InvertedIndex.TextQueryBuilder.AddStem(System.Collections.Generic.IList(Of System.String), Microsoft.Health.PhraseAnalyzer.AnalyzerMatch, System.String)
  name.vb: AddStem(IList(Of String), AnalyzerMatch, String)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.TextQueryBuilder.AddStem(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch,System.String)
    name: AddStem
    nameWithType: TextQueryBuilder.AddStem
    fullName: Microsoft.Health.InvertedIndex.TextQueryBuilder.AddStem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
    name: AnalyzerMatch
    nameWithType: AnalyzerMatch
    fullName: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.TextQueryBuilder.AddStem(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch,System.String)
    name: AddStem
    nameWithType: TextQueryBuilder.AddStem
    fullName: Microsoft.Health.InvertedIndex.TextQueryBuilder.AddStem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
    name: AnalyzerMatch
    nameWithType: AnalyzerMatch
    fullName: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.TextQueryBuilder.AddSpelling(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch,System.String)
  commentId: M:Microsoft.Health.InvertedIndex.TextQueryBuilder.AddSpelling(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch,System.String)
  parent: Microsoft.Health.InvertedIndex.TextQueryBuilder
  isExternal: true
  name: AddSpelling(IList<String>, AnalyzerMatch, String)
  nameWithType: TextQueryBuilder.AddSpelling(IList<String>, AnalyzerMatch, String)
  fullName: Microsoft.Health.InvertedIndex.TextQueryBuilder.AddSpelling(System.Collections.Generic.IList<System.String>, Microsoft.Health.PhraseAnalyzer.AnalyzerMatch, System.String)
  nameWithType.vb: TextQueryBuilder.AddSpelling(IList(Of String), AnalyzerMatch, String)
  fullName.vb: Microsoft.Health.InvertedIndex.TextQueryBuilder.AddSpelling(System.Collections.Generic.IList(Of System.String), Microsoft.Health.PhraseAnalyzer.AnalyzerMatch, System.String)
  name.vb: AddSpelling(IList(Of String), AnalyzerMatch, String)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.TextQueryBuilder.AddSpelling(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch,System.String)
    name: AddSpelling
    nameWithType: TextQueryBuilder.AddSpelling
    fullName: Microsoft.Health.InvertedIndex.TextQueryBuilder.AddSpelling
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
    name: AnalyzerMatch
    nameWithType: AnalyzerMatch
    fullName: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.TextQueryBuilder.AddSpelling(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch,System.String)
    name: AddSpelling
    nameWithType: TextQueryBuilder.AddSpelling
    fullName: Microsoft.Health.InvertedIndex.TextQueryBuilder.AddSpelling
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
    name: AnalyzerMatch
    nameWithType: AnalyzerMatch
    fullName: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.TextQueryBuilder.AddRelated(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch,System.String[])
  commentId: M:Microsoft.Health.InvertedIndex.TextQueryBuilder.AddRelated(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch,System.String[])
  parent: Microsoft.Health.InvertedIndex.TextQueryBuilder
  isExternal: true
  name: AddRelated(IList<String>, AnalyzerMatch, String[])
  nameWithType: TextQueryBuilder.AddRelated(IList<String>, AnalyzerMatch, String[])
  fullName: Microsoft.Health.InvertedIndex.TextQueryBuilder.AddRelated(System.Collections.Generic.IList<System.String>, Microsoft.Health.PhraseAnalyzer.AnalyzerMatch, System.String[])
  nameWithType.vb: TextQueryBuilder.AddRelated(IList(Of String), AnalyzerMatch, String())
  fullName.vb: Microsoft.Health.InvertedIndex.TextQueryBuilder.AddRelated(System.Collections.Generic.IList(Of System.String), Microsoft.Health.PhraseAnalyzer.AnalyzerMatch, System.String())
  name.vb: AddRelated(IList(Of String), AnalyzerMatch, String())
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.TextQueryBuilder.AddRelated(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch,System.String[])
    name: AddRelated
    nameWithType: TextQueryBuilder.AddRelated
    fullName: Microsoft.Health.InvertedIndex.TextQueryBuilder.AddRelated
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
    name: AnalyzerMatch
    nameWithType: AnalyzerMatch
    fullName: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.TextQueryBuilder.AddRelated(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch,System.String[])
    name: AddRelated
    nameWithType: TextQueryBuilder.AddRelated
    fullName: Microsoft.Health.InvertedIndex.TextQueryBuilder.AddRelated
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
    name: AnalyzerMatch
    nameWithType: AnalyzerMatch
    fullName: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.BlockType
  commentId: F:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.BlockType
  parent: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  isExternal: false
  name: BlockType
  nameWithType: PhraseNormalizer.BlockType
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.BlockType
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.RemoveType
  commentId: F:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.RemoveType
  parent: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  isExternal: false
  name: RemoveType
  nameWithType: PhraseNormalizer.RemoveType
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.RemoveType
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.ReplaceType
  commentId: F:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.ReplaceType
  parent: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  isExternal: false
  name: ReplaceType
  nameWithType: PhraseNormalizer.ReplaceType
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.ReplaceType
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.SynonymType
  commentId: F:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.SynonymType
  parent: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  isExternal: false
  name: SynonymType
  nameWithType: PhraseNormalizer.SynonymType
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.SynonymType
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.RelatedType
  commentId: F:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.RelatedType
  parent: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  isExternal: false
  name: RelatedType
  nameWithType: PhraseNormalizer.RelatedType
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.RelatedType
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.SpellType
  commentId: F:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.SpellType
  parent: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  isExternal: false
  name: SpellType
  nameWithType: PhraseNormalizer.SpellType
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.SpellType
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.StemmerType
  commentId: F:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.StemmerType
  parent: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  isExternal: false
  name: StemmerType
  nameWithType: PhraseNormalizer.StemmerType
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.StemmerType
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.PhoneticType
  commentId: F:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.PhoneticType
  parent: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  isExternal: false
  name: PhoneticType
  nameWithType: PhraseNormalizer.PhoneticType
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.PhoneticType
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.SubjectType
  commentId: F:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.SubjectType
  parent: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  isExternal: false
  name: SubjectType
  nameWithType: PhraseNormalizer.SubjectType
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.SubjectType
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.IndicatorType
  commentId: F:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.IndicatorType
  parent: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  isExternal: false
  name: IndicatorType
  nameWithType: PhraseNormalizer.IndicatorType
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.IndicatorType
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.ConceptType
  commentId: F:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.ConceptType
  parent: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  isExternal: false
  name: ConceptType
  nameWithType: PhraseNormalizer.ConceptType
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.ConceptType
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.Analyzer
  commentId: P:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.Analyzer
  parent: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  isExternal: false
  name: Analyzer
  nameWithType: PhraseNormalizer.Analyzer
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.Analyzer
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.Build(System.Collections.Generic.IList{System.String})
  commentId: M:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.Build(System.Collections.Generic.IList{System.String})
  parent: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  isExternal: true
  name: Build(IList<String>)
  nameWithType: PhraseNormalizer.Build(IList<String>)
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.Build(System.Collections.Generic.IList<System.String>)
  nameWithType.vb: PhraseNormalizer.Build(IList(Of String))
  fullName.vb: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.Build(System.Collections.Generic.IList(Of System.String))
  name.vb: Build(IList(Of String))
  spec.csharp:
  - uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.Build(System.Collections.Generic.IList{System.String})
    name: Build
    nameWithType: PhraseNormalizer.Build
    fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.Build
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.Build(System.Collections.Generic.IList{System.String})
    name: Build
    nameWithType: PhraseNormalizer.Build
    fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.Build
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.GetBuilder
  commentId: M:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.GetBuilder
  parent: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  isExternal: false
  name: GetBuilder()
  nameWithType: PhraseNormalizer.GetBuilder()
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.GetBuilder()
  spec.csharp:
  - uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.GetBuilder
    name: GetBuilder
    nameWithType: PhraseNormalizer.GetBuilder
    fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.GetBuilder
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.GetBuilder
    name: GetBuilder
    nameWithType: PhraseNormalizer.GetBuilder
    fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.GetBuilder
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.BuildPhrase(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  commentId: M:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.BuildPhrase(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  parent: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  isExternal: true
  name: BuildPhrase(IList<String>, AnalyzerMatch)
  nameWithType: PhraseNormalizer.BuildPhrase(IList<String>, AnalyzerMatch)
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.BuildPhrase(System.Collections.Generic.IList<System.String>, Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  nameWithType.vb: PhraseNormalizer.BuildPhrase(IList(Of String), AnalyzerMatch)
  fullName.vb: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.BuildPhrase(System.Collections.Generic.IList(Of System.String), Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  name.vb: BuildPhrase(IList(Of String), AnalyzerMatch)
  spec.csharp:
  - uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.BuildPhrase(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
    name: BuildPhrase
    nameWithType: PhraseNormalizer.BuildPhrase
    fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.BuildPhrase
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
    name: AnalyzerMatch
    nameWithType: AnalyzerMatch
    fullName: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.BuildPhrase(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
    name: BuildPhrase
    nameWithType: PhraseNormalizer.BuildPhrase
    fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.BuildPhrase
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
    name: AnalyzerMatch
    nameWithType: AnalyzerMatch
    fullName: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddWords(System.Collections.Generic.IList{System.String},System.Int32,System.Int32)
  commentId: M:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddWords(System.Collections.Generic.IList{System.String},System.Int32,System.Int32)
  parent: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  isExternal: true
  name: AddWords(IList<String>, Int32, Int32)
  nameWithType: PhraseNormalizer.AddWords(IList<String>, Int32, Int32)
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddWords(System.Collections.Generic.IList<System.String>, System.Int32, System.Int32)
  nameWithType.vb: PhraseNormalizer.AddWords(IList(Of String), Int32, Int32)
  fullName.vb: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddWords(System.Collections.Generic.IList(Of System.String), System.Int32, System.Int32)
  name.vb: AddWords(IList(Of String), Int32, Int32)
  spec.csharp:
  - uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddWords(System.Collections.Generic.IList{System.String},System.Int32,System.Int32)
    name: AddWords
    nameWithType: PhraseNormalizer.AddWords
    fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddWords
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddWords(System.Collections.Generic.IList{System.String},System.Int32,System.Int32)
    name: AddWords
    nameWithType: PhraseNormalizer.AddWords
    fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddWords
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSegment(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  commentId: M:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSegment(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  parent: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  isExternal: true
  name: AddSegment(IList<String>, AnalyzerMatch)
  nameWithType: PhraseNormalizer.AddSegment(IList<String>, AnalyzerMatch)
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSegment(System.Collections.Generic.IList<System.String>, Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  nameWithType.vb: PhraseNormalizer.AddSegment(IList(Of String), AnalyzerMatch)
  fullName.vb: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSegment(System.Collections.Generic.IList(Of System.String), Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  name.vb: AddSegment(IList(Of String), AnalyzerMatch)
  spec.csharp:
  - uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSegment(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
    name: AddSegment
    nameWithType: PhraseNormalizer.AddSegment
    fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSegment
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
    name: AnalyzerMatch
    nameWithType: AnalyzerMatch
    fullName: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSegment(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
    name: AddSegment
    nameWithType: PhraseNormalizer.AddSegment
    fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSegment
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
    name: AnalyzerMatch
    nameWithType: AnalyzerMatch
    fullName: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSubject(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  commentId: M:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSubject(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  parent: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  isExternal: true
  name: AddSubject(IList<String>, AnalyzerMatch)
  nameWithType: PhraseNormalizer.AddSubject(IList<String>, AnalyzerMatch)
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSubject(System.Collections.Generic.IList<System.String>, Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  nameWithType.vb: PhraseNormalizer.AddSubject(IList(Of String), AnalyzerMatch)
  fullName.vb: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSubject(System.Collections.Generic.IList(Of System.String), Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  name.vb: AddSubject(IList(Of String), AnalyzerMatch)
  spec.csharp:
  - uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSubject(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
    name: AddSubject
    nameWithType: PhraseNormalizer.AddSubject
    fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSubject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
    name: AnalyzerMatch
    nameWithType: AnalyzerMatch
    fullName: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSubject(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
    name: AddSubject
    nameWithType: PhraseNormalizer.AddSubject
    fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSubject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
    name: AnalyzerMatch
    nameWithType: AnalyzerMatch
    fullName: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddIndicator(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  commentId: M:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddIndicator(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  parent: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  isExternal: true
  name: AddIndicator(IList<String>, AnalyzerMatch)
  nameWithType: PhraseNormalizer.AddIndicator(IList<String>, AnalyzerMatch)
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddIndicator(System.Collections.Generic.IList<System.String>, Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  nameWithType.vb: PhraseNormalizer.AddIndicator(IList(Of String), AnalyzerMatch)
  fullName.vb: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddIndicator(System.Collections.Generic.IList(Of System.String), Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  name.vb: AddIndicator(IList(Of String), AnalyzerMatch)
  spec.csharp:
  - uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddIndicator(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
    name: AddIndicator
    nameWithType: PhraseNormalizer.AddIndicator
    fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddIndicator
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
    name: AnalyzerMatch
    nameWithType: AnalyzerMatch
    fullName: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddIndicator(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
    name: AddIndicator
    nameWithType: PhraseNormalizer.AddIndicator
    fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddIndicator
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
    name: AnalyzerMatch
    nameWithType: AnalyzerMatch
    fullName: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddConcept(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch,System.String)
  commentId: M:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddConcept(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch,System.String)
  parent: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  isExternal: true
  name: AddConcept(IList<String>, AnalyzerMatch, String)
  nameWithType: PhraseNormalizer.AddConcept(IList<String>, AnalyzerMatch, String)
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddConcept(System.Collections.Generic.IList<System.String>, Microsoft.Health.PhraseAnalyzer.AnalyzerMatch, System.String)
  nameWithType.vb: PhraseNormalizer.AddConcept(IList(Of String), AnalyzerMatch, String)
  fullName.vb: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddConcept(System.Collections.Generic.IList(Of System.String), Microsoft.Health.PhraseAnalyzer.AnalyzerMatch, System.String)
  name.vb: AddConcept(IList(Of String), AnalyzerMatch, String)
  spec.csharp:
  - uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddConcept(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch,System.String)
    name: AddConcept
    nameWithType: PhraseNormalizer.AddConcept
    fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddConcept
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
    name: AnalyzerMatch
    nameWithType: AnalyzerMatch
    fullName: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddConcept(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch,System.String)
    name: AddConcept
    nameWithType: PhraseNormalizer.AddConcept
    fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddConcept
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
    name: AnalyzerMatch
    nameWithType: AnalyzerMatch
    fullName: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<AutoCompleteQueryBuilder>()
  nameWithType: TypeHelper.ValueOrDbNull<AutoCompleteQueryBuilder>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of AutoCompleteQueryBuilder)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder)()
  name.vb: ValueOrDbNull(Of AutoCompleteQueryBuilder)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<AutoCompleteQueryBuilder>
    nameWithType: TypeHelper.ValueOrDbNull<AutoCompleteQueryBuilder>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of AutoCompleteQueryBuilder)
    nameWithType: TypeHelper.ValueOrDbNull(Of AutoCompleteQueryBuilder)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.PhraseAnalyzer
  commentId: N:Microsoft.Health.PhraseAnalyzer
  isExternal: false
  name: Microsoft.Health.PhraseAnalyzer
  nameWithType: Microsoft.Health.PhraseAnalyzer
  fullName: Microsoft.Health.PhraseAnalyzer
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.InvertedIndex.PhoneticEncoder
  commentId: T:Microsoft.Health.InvertedIndex.PhoneticEncoder
  parent: Microsoft.Health.InvertedIndex
  isExternal: false
  name: PhoneticEncoder
  nameWithType: PhoneticEncoder
  fullName: Microsoft.Health.InvertedIndex.PhoneticEncoder
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.#ctor*
  commentId: Overload:Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.#ctor
  isExternal: false
  name: AutoCompleteQueryBuilder
  nameWithType: AutoCompleteQueryBuilder.AutoCompleteQueryBuilder
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.AutoCompleteQueryBuilder
- uid: Microsoft.Health.InvertedIndex.AutoCompleteIndex
  commentId: T:Microsoft.Health.InvertedIndex.AutoCompleteIndex
  parent: Microsoft.Health.InvertedIndex
  isExternal: false
  name: AutoCompleteIndex
  nameWithType: AutoCompleteIndex
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteIndex
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.MinQueryLength*
  commentId: Overload:Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.MinQueryLength
  isExternal: false
  name: MinQueryLength
  nameWithType: AutoCompleteQueryBuilder.MinQueryLength
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.MinQueryLength
- uid: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.MaxPrefixMatchesPerWord*
  commentId: Overload:Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.MaxPrefixMatchesPerWord
  isExternal: false
  name: MaxPrefixMatchesPerWord
  nameWithType: AutoCompleteQueryBuilder.MaxPrefixMatchesPerWord
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.MaxPrefixMatchesPerWord
- uid: Microsoft.Health.InvertedIndex.VectorQueryBuilder.BuildQuery(System.Collections.Generic.IList{System.String})
  commentId: M:Microsoft.Health.InvertedIndex.VectorQueryBuilder.BuildQuery(System.Collections.Generic.IList{System.String})
  parent: Microsoft.Health.InvertedIndex.VectorQueryBuilder
  isExternal: true
  name: BuildQuery(IList<String>)
  nameWithType: VectorQueryBuilder.BuildQuery(IList<String>)
  fullName: Microsoft.Health.InvertedIndex.VectorQueryBuilder.BuildQuery(System.Collections.Generic.IList<System.String>)
  nameWithType.vb: VectorQueryBuilder.BuildQuery(IList(Of String))
  fullName.vb: Microsoft.Health.InvertedIndex.VectorQueryBuilder.BuildQuery(System.Collections.Generic.IList(Of System.String))
  name.vb: BuildQuery(IList(Of String))
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.VectorQueryBuilder.BuildQuery(System.Collections.Generic.IList{System.String})
    name: BuildQuery
    nameWithType: VectorQueryBuilder.BuildQuery
    fullName: Microsoft.Health.InvertedIndex.VectorQueryBuilder.BuildQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.VectorQueryBuilder.BuildQuery(System.Collections.Generic.IList{System.String})
    name: BuildQuery
    nameWithType: VectorQueryBuilder.BuildQuery
    fullName: Microsoft.Health.InvertedIndex.VectorQueryBuilder.BuildQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.BuildQuery*
  commentId: Overload:Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.BuildQuery
  isExternal: false
  name: BuildQuery
  nameWithType: AutoCompleteQueryBuilder.BuildQuery
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.BuildQuery
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.RecordIDEnumerator
  commentId: T:Microsoft.Health.InvertedIndex.RecordIDEnumerator
  parent: Microsoft.Health.InvertedIndex
  isExternal: false
  name: RecordIDEnumerator
  nameWithType: RecordIDEnumerator
  fullName: Microsoft.Health.InvertedIndex.RecordIDEnumerator
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Health.InvertedIndex.TextQueryBuilder.AddString(System.String)
  commentId: M:Microsoft.Health.InvertedIndex.TextQueryBuilder.AddString(System.String)
  parent: Microsoft.Health.InvertedIndex.TextQueryBuilder
  isExternal: true
  name: AddString(String)
  nameWithType: TextQueryBuilder.AddString(String)
  fullName: Microsoft.Health.InvertedIndex.TextQueryBuilder.AddString(System.String)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.TextQueryBuilder.AddString(System.String)
    name: AddString
    nameWithType: TextQueryBuilder.AddString
    fullName: Microsoft.Health.InvertedIndex.TextQueryBuilder.AddString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.TextQueryBuilder.AddString(System.String)
    name: AddString
    nameWithType: TextQueryBuilder.AddString
    fullName: Microsoft.Health.InvertedIndex.TextQueryBuilder.AddString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.AddString*
  commentId: Overload:Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.AddString
  isExternal: false
  name: AddString
  nameWithType: AutoCompleteQueryBuilder.AddString
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder.AddString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
