### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Events.CommonSubscriptionData
  commentId: T:Microsoft.Health.Events.CommonSubscriptionData
  id: CommonSubscriptionData
  parent: Microsoft.Health.Events
  children:
  - Microsoft.Health.Events.CommonSubscriptionData.#ctor
  - Microsoft.Health.Events.CommonSubscriptionData.#ctor(Microsoft.Health.Events.NotificationChannel,Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo)
  - Microsoft.Health.Events.CommonSubscriptionData.#ctor(Microsoft.Health.Events.NotificationChannel,Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo,System.Guid)
  - Microsoft.Health.Events.CommonSubscriptionData.Id
  - Microsoft.Health.Events.CommonSubscriptionData.NotificationChannel
  - Microsoft.Health.Events.CommonSubscriptionData.ParseXml(System.Xml.XPath.XPathNavigator)
  - Microsoft.Health.Events.CommonSubscriptionData.SharedKeyInfo
  - Microsoft.Health.Events.CommonSubscriptionData.WriteXml(System.Xml.XmlWriter)
  - Microsoft.Health.Events.CommonSubscriptionData.WriteXmlInternal(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: CommonSubscriptionData
  nameWithType: CommonSubscriptionData
  fullName: Microsoft.Health.Events.CommonSubscriptionData
  type: Class
  source:
    remote:
      path: Microsoft.Health/Eventing/CommonSubscriptionData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CommonSubscriptionData
    path: ../Microsoft.Health/Eventing/CommonSubscriptionData.cs
    startLine: 15
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Events
  summary: "\nRepresents data that is common across all event subscriptions.\n"
  example: []
  syntax:
    content: public class CommonSubscriptionData
    content.vb: Public Class CommonSubscriptionData
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.Events.CommonSubscriptionData.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.Events.CommonSubscriptionData.#ctor
  commentId: M:Microsoft.Health.Events.CommonSubscriptionData.#ctor
  id: '#ctor'
  parent: Microsoft.Health.Events.CommonSubscriptionData
  langs:
  - csharp
  - vb
  name: CommonSubscriptionData()
  nameWithType: CommonSubscriptionData.CommonSubscriptionData()
  fullName: Microsoft.Health.Events.CommonSubscriptionData.CommonSubscriptionData()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/Eventing/CommonSubscriptionData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health/Eventing/CommonSubscriptionData.cs
    startLine: 20
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Events
  summary: "\nCreates an empty instance of the CommonSubscriptionData class. \n"
  example: []
  syntax:
    content: public CommonSubscriptionData()
    content.vb: Public Sub New
  overload: Microsoft.Health.Events.CommonSubscriptionData.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Events.CommonSubscriptionData.#ctor(Microsoft.Health.Events.NotificationChannel,Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo)
  commentId: M:Microsoft.Health.Events.CommonSubscriptionData.#ctor(Microsoft.Health.Events.NotificationChannel,Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo)
  id: '#ctor(Microsoft.Health.Events.NotificationChannel,Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo)'
  parent: Microsoft.Health.Events.CommonSubscriptionData
  langs:
  - csharp
  - vb
  name: CommonSubscriptionData(NotificationChannel, NotificationAuthenticationSharedKeyInfo)
  nameWithType: CommonSubscriptionData.CommonSubscriptionData(NotificationChannel, NotificationAuthenticationSharedKeyInfo)
  fullName: Microsoft.Health.Events.CommonSubscriptionData.CommonSubscriptionData(Microsoft.Health.Events.NotificationChannel, Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/Eventing/CommonSubscriptionData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health/Eventing/CommonSubscriptionData.cs
    startLine: 38
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Events
  summary: "\nCreates an instance of the CommonSubscriptionData class and sets the notification channel and the\nshared key information.\n"
  example: []
  syntax:
    content: public CommonSubscriptionData(NotificationChannel notificationChannel, NotificationAuthenticationSharedKeyInfo sharedKeyInfo)
    content.vb: Public Sub New(notificationChannel As NotificationChannel, sharedKeyInfo As NotificationAuthenticationSharedKeyInfo)
    parameters:
    - id: notificationChannel
      type: Microsoft.Health.Events.NotificationChannel
      description: The channel to use for notifications.
    - id: sharedKeyInfo
      type: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo
      description: The shared key to use for authentication.
  overload: Microsoft.Health.Events.CommonSubscriptionData.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">notificationChannel</span> parameter is <strong>null</strong>.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">sharedKeyInfo</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Events.CommonSubscriptionData.#ctor(Microsoft.Health.Events.NotificationChannel,Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo,System.Guid)
  commentId: M:Microsoft.Health.Events.CommonSubscriptionData.#ctor(Microsoft.Health.Events.NotificationChannel,Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo,System.Guid)
  id: '#ctor(Microsoft.Health.Events.NotificationChannel,Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo,System.Guid)'
  parent: Microsoft.Health.Events.CommonSubscriptionData
  langs:
  - csharp
  - vb
  name: CommonSubscriptionData(NotificationChannel, NotificationAuthenticationSharedKeyInfo, Guid)
  nameWithType: CommonSubscriptionData.CommonSubscriptionData(NotificationChannel, NotificationAuthenticationSharedKeyInfo, Guid)
  fullName: Microsoft.Health.Events.CommonSubscriptionData.CommonSubscriptionData(Microsoft.Health.Events.NotificationChannel, Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo, System.Guid)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/Eventing/CommonSubscriptionData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health/Eventing/CommonSubscriptionData.cs
    startLine: 67
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Events
  summary: "\nCreates an instance of the CommonSubscriptionData class and sets the notification channel, the shared\nkey information and the unique identifier for the subscription.\n"
  example: []
  syntax:
    content: public CommonSubscriptionData(NotificationChannel notificationChannel, NotificationAuthenticationSharedKeyInfo sharedKeyInfo, Guid id)
    content.vb: Public Sub New(notificationChannel As NotificationChannel, sharedKeyInfo As NotificationAuthenticationSharedKeyInfo, id As Guid)
    parameters:
    - id: notificationChannel
      type: Microsoft.Health.Events.NotificationChannel
      description: The channel to use for notifications.
    - id: sharedKeyInfo
      type: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo
      description: The shared key to use for authentication.
    - id: id
      type: System.Guid
      description: The id of the subscription.
  overload: Microsoft.Health.Events.CommonSubscriptionData.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">notificationChannel</span> parameter is <strong>null</strong>.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">sharedKeyInfo</span> parameter is <strong>null</strong>.\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">id</span> parameter is an empty GUID.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Events.CommonSubscriptionData.WriteXml(System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.Events.CommonSubscriptionData.WriteXml(System.Xml.XmlWriter)
  id: WriteXml(System.Xml.XmlWriter)
  parent: Microsoft.Health.Events.CommonSubscriptionData
  langs:
  - csharp
  - vb
  name: WriteXml(XmlWriter)
  nameWithType: CommonSubscriptionData.WriteXml(XmlWriter)
  fullName: Microsoft.Health.Events.CommonSubscriptionData.WriteXml(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health/Eventing/CommonSubscriptionData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteXml
    path: ../Microsoft.Health/Eventing/CommonSubscriptionData.cs
    startLine: 87
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Events
  summary: "\nWrite a representation of the CommonSubscriptionData instance to XML.\n"
  example: []
  syntax:
    content: public void WriteXml(XmlWriter xmlWriter)
    content.vb: Public Sub WriteXml(xmlWriter As XmlWriter)
    parameters:
    - id: xmlWriter
      type: System.Xml.XmlWriter
      description: The XmlWriter.
  overload: Microsoft.Health.Events.CommonSubscriptionData.WriteXml*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nThe <xref href=\"Microsoft.Health.Events.CommonSubscriptionData.NotificationChannel\" data-throw-if-not-resolved=\"false\"></xref> property is <strong>null</strong> or the \n<xref href=\"Microsoft.Health.Events.CommonSubscriptionData.SharedKeyInfo\" data-throw-if-not-resolved=\"false\"></xref> property is null.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Events.CommonSubscriptionData.WriteXmlInternal(System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.Events.CommonSubscriptionData.WriteXmlInternal(System.Xml.XmlWriter)
  id: WriteXmlInternal(System.Xml.XmlWriter)
  parent: Microsoft.Health.Events.CommonSubscriptionData
  langs:
  - csharp
  - vb
  name: WriteXmlInternal(XmlWriter)
  nameWithType: CommonSubscriptionData.WriteXmlInternal(XmlWriter)
  fullName: Microsoft.Health.Events.CommonSubscriptionData.WriteXmlInternal(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health/Eventing/CommonSubscriptionData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteXmlInternal
    path: ../Microsoft.Health/Eventing/CommonSubscriptionData.cs
    startLine: 104
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Events
  summary: "\nInternal implementation of <xref href=\"Microsoft.Health.Events.CommonSubscriptionData.WriteXml(System.Xml.XmlWriter)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected virtual void WriteXmlInternal(XmlWriter xmlWriter)
    content.vb: Protected Overridable Sub WriteXmlInternal(xmlWriter As XmlWriter)
    parameters:
    - id: xmlWriter
      type: System.Xml.XmlWriter
      description: The XmlWriter
  overload: Microsoft.Health.Events.CommonSubscriptionData.WriteXmlInternal*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nThe <xref href=\"Microsoft.Health.Events.CommonSubscriptionData.NotificationChannel\" data-throw-if-not-resolved=\"false\"></xref> property is <strong>null</strong> or the \n<xref href=\"Microsoft.Health.Events.CommonSubscriptionData.SharedKeyInfo\" data-throw-if-not-resolved=\"false\"></xref> property is null.\n"
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.Health.Events.CommonSubscriptionData.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.Events.CommonSubscriptionData.ParseXml(System.Xml.XPath.XPathNavigator)
  id: ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.Events.CommonSubscriptionData
  langs:
  - csharp
  - vb
  name: ParseXml(XPathNavigator)
  nameWithType: CommonSubscriptionData.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.Events.CommonSubscriptionData.ParseXml(System.Xml.XPath.XPathNavigator)
  type: Method
  source:
    remote:
      path: Microsoft.Health/Eventing/CommonSubscriptionData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ParseXml
    path: ../Microsoft.Health/Eventing/CommonSubscriptionData.cs
    startLine: 140
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Events
  summary: "\nPopulate the CommonSubscriptionData instance from XML.\n"
  example: []
  syntax:
    content: public void ParseXml(XPathNavigator navigator)
    content.vb: Public Sub ParseXml(navigator As XPathNavigator)
    parameters:
    - id: navigator
      type: System.Xml.XPath.XPathNavigator
      description: The XPathNavigator.
  overload: Microsoft.Health.Events.CommonSubscriptionData.ParseXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">navigator</span> parameter is <strong>null</strong>.\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">navigator</span> parameter does not contain a \"common\" node.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Events.CommonSubscriptionData.Id
  commentId: P:Microsoft.Health.Events.CommonSubscriptionData.Id
  id: Id
  parent: Microsoft.Health.Events.CommonSubscriptionData
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: CommonSubscriptionData.Id
  fullName: Microsoft.Health.Events.CommonSubscriptionData.Id
  type: Property
  source:
    remote:
      path: Microsoft.Health/Eventing/CommonSubscriptionData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Id
    path: ../Microsoft.Health/Eventing/CommonSubscriptionData.cs
    startLine: 174
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Events
  summary: "\nGets or sets the unique identifier for the subscription.\n"
  example: []
  syntax:
    content: public Guid? Id { get; set; }
    content.vb: Public Property Id As Guid?
    parameters: []
    return:
      type: System.Nullable{System.Guid}
  overload: Microsoft.Health.Events.CommonSubscriptionData.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Events.CommonSubscriptionData.NotificationChannel
  commentId: P:Microsoft.Health.Events.CommonSubscriptionData.NotificationChannel
  id: NotificationChannel
  parent: Microsoft.Health.Events.CommonSubscriptionData
  langs:
  - csharp
  - vb
  name: NotificationChannel
  nameWithType: CommonSubscriptionData.NotificationChannel
  fullName: Microsoft.Health.Events.CommonSubscriptionData.NotificationChannel
  type: Property
  source:
    remote:
      path: Microsoft.Health/Eventing/CommonSubscriptionData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: NotificationChannel
    path: ../Microsoft.Health/Eventing/CommonSubscriptionData.cs
    startLine: 185
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Events
  summary: "\nGets or sets the notification channel that is used to deliver events from\nthe subscription.\n"
  example: []
  syntax:
    content: public NotificationChannel NotificationChannel { get; set; }
    content.vb: Public Property NotificationChannel As NotificationChannel
    parameters: []
    return:
      type: Microsoft.Health.Events.NotificationChannel
  overload: Microsoft.Health.Events.CommonSubscriptionData.NotificationChannel*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Events.CommonSubscriptionData.SharedKeyInfo
  commentId: P:Microsoft.Health.Events.CommonSubscriptionData.SharedKeyInfo
  id: SharedKeyInfo
  parent: Microsoft.Health.Events.CommonSubscriptionData
  langs:
  - csharp
  - vb
  name: SharedKeyInfo
  nameWithType: CommonSubscriptionData.SharedKeyInfo
  fullName: Microsoft.Health.Events.CommonSubscriptionData.SharedKeyInfo
  type: Property
  source:
    remote:
      path: Microsoft.Health/Eventing/CommonSubscriptionData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SharedKeyInfo
    path: ../Microsoft.Health/Eventing/CommonSubscriptionData.cs
    startLine: 204
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Events
  summary: "\nGets or sets the information used to validate the source of notifications.\n"
  remarks: "\nFor notification channels where the HealthVault service pushes \nnotifications to an application's end-point (ie. an HTTP \nnotification channel), this information can be used by the \napplication to ensure the incoming notification was sent by the \nHealthVault service.\n"
  example: []
  syntax:
    content: public NotificationAuthenticationSharedKeyInfo SharedKeyInfo { get; set; }
    content.vb: Public Property SharedKeyInfo As NotificationAuthenticationSharedKeyInfo
    parameters: []
    return:
      type: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo
  overload: Microsoft.Health.Events.CommonSubscriptionData.SharedKeyInfo*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Health.Events
  commentId: N:Microsoft.Health.Events
  isExternal: false
  name: Microsoft.Health.Events
  nameWithType: Microsoft.Health.Events
  fullName: Microsoft.Health.Events
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Events.CommonSubscriptionData.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<CommonSubscriptionData>()
  nameWithType: TypeHelper.ValueOrDbNull<CommonSubscriptionData>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Events.CommonSubscriptionData>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of CommonSubscriptionData)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Events.CommonSubscriptionData)()
  name.vb: ValueOrDbNull(Of CommonSubscriptionData)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<CommonSubscriptionData>
    nameWithType: TypeHelper.ValueOrDbNull<CommonSubscriptionData>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Events.CommonSubscriptionData>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of CommonSubscriptionData)
    nameWithType: TypeHelper.ValueOrDbNull(Of CommonSubscriptionData)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Events.CommonSubscriptionData)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.Events.CommonSubscriptionData.#ctor*
  commentId: Overload:Microsoft.Health.Events.CommonSubscriptionData.#ctor
  isExternal: false
  name: CommonSubscriptionData
  nameWithType: CommonSubscriptionData.CommonSubscriptionData
  fullName: Microsoft.Health.Events.CommonSubscriptionData.CommonSubscriptionData
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: Microsoft.Health.Events.NotificationChannel
  commentId: T:Microsoft.Health.Events.NotificationChannel
  parent: Microsoft.Health.Events
  isExternal: false
  name: NotificationChannel
  nameWithType: NotificationChannel
  fullName: Microsoft.Health.Events.NotificationChannel
- uid: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo
  commentId: T:Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo
  parent: Microsoft.Health.Events
  isExternal: false
  name: NotificationAuthenticationSharedKeyInfo
  nameWithType: NotificationAuthenticationSharedKeyInfo
  fullName: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Microsoft.Health.Events.CommonSubscriptionData.NotificationChannel
  commentId: P:Microsoft.Health.Events.CommonSubscriptionData.NotificationChannel
- uid: Microsoft.Health.Events.CommonSubscriptionData.SharedKeyInfo
  commentId: P:Microsoft.Health.Events.CommonSubscriptionData.SharedKeyInfo
- uid: Microsoft.Health.Events.CommonSubscriptionData.WriteXml*
  commentId: Overload:Microsoft.Health.Events.CommonSubscriptionData.WriteXml
  isExternal: false
  name: WriteXml
  nameWithType: CommonSubscriptionData.WriteXml
  fullName: Microsoft.Health.Events.CommonSubscriptionData.WriteXml
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: Microsoft.Health.Events.CommonSubscriptionData.WriteXml(System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.Events.CommonSubscriptionData.WriteXml(System.Xml.XmlWriter)
- uid: Microsoft.Health.Events.CommonSubscriptionData.WriteXmlInternal*
  commentId: Overload:Microsoft.Health.Events.CommonSubscriptionData.WriteXmlInternal
  isExternal: false
  name: WriteXmlInternal
  nameWithType: CommonSubscriptionData.WriteXmlInternal
  fullName: Microsoft.Health.Events.CommonSubscriptionData.WriteXmlInternal
- uid: Microsoft.Health.Events.CommonSubscriptionData.ParseXml*
  commentId: Overload:Microsoft.Health.Events.CommonSubscriptionData.ParseXml
  isExternal: false
  name: ParseXml
  nameWithType: CommonSubscriptionData.ParseXml
  fullName: Microsoft.Health.Events.CommonSubscriptionData.ParseXml
- uid: System.Xml.XPath.XPathNavigator
  commentId: T:System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: true
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: false
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: Microsoft.Health.Events.CommonSubscriptionData.Id*
  commentId: Overload:Microsoft.Health.Events.CommonSubscriptionData.Id
  isExternal: false
  name: Id
  nameWithType: CommonSubscriptionData.Id
  fullName: Microsoft.Health.Events.CommonSubscriptionData.Id
- uid: System.Nullable{System.Guid}
  commentId: T:System.Nullable{System.Guid}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Guid>
  nameWithType: Nullable<Guid>
  fullName: System.Nullable<System.Guid>
  nameWithType.vb: Nullable(Of Guid)
  fullName.vb: System.Nullable(Of System.Guid)
  name.vb: Nullable(Of Guid)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Events.CommonSubscriptionData.NotificationChannel*
  commentId: Overload:Microsoft.Health.Events.CommonSubscriptionData.NotificationChannel
  isExternal: false
  name: NotificationChannel
  nameWithType: CommonSubscriptionData.NotificationChannel
  fullName: Microsoft.Health.Events.CommonSubscriptionData.NotificationChannel
- uid: Microsoft.Health.Events.CommonSubscriptionData.SharedKeyInfo*
  commentId: Overload:Microsoft.Health.Events.CommonSubscriptionData.SharedKeyInfo
  isExternal: false
  name: SharedKeyInfo
  nameWithType: CommonSubscriptionData.SharedKeyInfo
  fullName: Microsoft.Health.Events.CommonSubscriptionData.SharedKeyInfo
