### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Utility.BufferSegment
  commentId: T:Microsoft.Health.Utility.BufferSegment
  id: BufferSegment
  parent: Microsoft.Health.Utility
  children:
  - Microsoft.Health.Utility.BufferSegment.#ctor(System.ArraySegment{System.Byte})
  - Microsoft.Health.Utility.BufferSegment.#ctor(System.Byte[])
  - Microsoft.Health.Utility.BufferSegment.#ctor(System.Byte[],System.Int32,System.Int32)
  - Microsoft.Health.Utility.BufferSegment.#ctor(System.IO.MemoryStream)
  - Microsoft.Health.Utility.BufferSegment.ArraySegment
  - Microsoft.Health.Utility.BufferSegment.Buffer
  - Microsoft.Health.Utility.BufferSegment.ComputeHash(System.Security.Cryptography.HashAlgorithm)
  - Microsoft.Health.Utility.BufferSegment.Count
  - Microsoft.Health.Utility.BufferSegment.Empty
  - Microsoft.Health.Utility.BufferSegment.Equals(System.Object,System.Collections.IEqualityComparer)
  - Microsoft.Health.Utility.BufferSegment.GetHashCode(System.Collections.IEqualityComparer)
  - Microsoft.Health.Utility.BufferSegment.Offset
  - Microsoft.Health.Utility.BufferSegment.ToString
  langs:
  - csharp
  - vb
  name: BufferSegment
  nameWithType: BufferSegment
  fullName: Microsoft.Health.Utility.BufferSegment
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/BufferSegment.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: BufferSegment
    path: ../Microsoft.Health.Utility/utilities/BufferSegment.cs
    startLine: 19
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\nA helper class semantically close to the ArraySegment&lt;Byte&gt; but is a class\nnot a struct (we need an easy to use nullable type).\n"
  example: []
  syntax:
    content: 'public class BufferSegment : IStructuralEquatable'
    content.vb: >-
      Public Class BufferSegment
          Implements IStructuralEquatable
  inheritance:
  - System.Object
  implements:
  - System.Collections.IStructuralEquatable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.Utility.BufferSegment.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.Utility.BufferSegment.#ctor(System.Byte[],System.Int32,System.Int32)
  commentId: M:Microsoft.Health.Utility.BufferSegment.#ctor(System.Byte[],System.Int32,System.Int32)
  id: '#ctor(System.Byte[],System.Int32,System.Int32)'
  parent: Microsoft.Health.Utility.BufferSegment
  langs:
  - csharp
  - vb
  name: BufferSegment(Byte[], Int32, Int32)
  nameWithType: BufferSegment.BufferSegment(Byte[], Int32, Int32)
  fullName: Microsoft.Health.Utility.BufferSegment.BufferSegment(System.Byte[], System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/BufferSegment.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.Utility/utilities/BufferSegment.cs
    startLine: 43
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\nInitializes an instance with a reference to the given byte array.\n"
  example: []
  syntax:
    content: public BufferSegment(byte[] buffer, int offset, int count)
    content.vb: Public Sub New(buffer As Byte(), offset As Integer, count As Integer)
    parameters:
    - id: buffer
      type: System.Byte[]
      description: ''
    - id: offset
      type: System.Int32
      description: ''
    - id: count
      type: System.Int32
      description: ''
  overload: Microsoft.Health.Utility.BufferSegment.#ctor*
  nameWithType.vb: BufferSegment.BufferSegment(Byte(), Int32, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Utility.BufferSegment.BufferSegment(System.Byte(), System.Int32, System.Int32)
  name.vb: BufferSegment(Byte(), Int32, Int32)
- uid: Microsoft.Health.Utility.BufferSegment.#ctor(System.Byte[])
  commentId: M:Microsoft.Health.Utility.BufferSegment.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: Microsoft.Health.Utility.BufferSegment
  langs:
  - csharp
  - vb
  name: BufferSegment(Byte[])
  nameWithType: BufferSegment.BufferSegment(Byte[])
  fullName: Microsoft.Health.Utility.BufferSegment.BufferSegment(System.Byte[])
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/BufferSegment.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.Utility/utilities/BufferSegment.cs
    startLine: 69
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\nInitializes an instance with a reference to the given byte array.\n"
  example: []
  syntax:
    content: public BufferSegment(byte[] buffer)
    content.vb: Public Sub New(buffer As Byte())
    parameters:
    - id: buffer
      type: System.Byte[]
      description: ''
  overload: Microsoft.Health.Utility.BufferSegment.#ctor*
  nameWithType.vb: BufferSegment.BufferSegment(Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Utility.BufferSegment.BufferSegment(System.Byte())
  name.vb: BufferSegment(Byte())
- uid: Microsoft.Health.Utility.BufferSegment.#ctor(System.ArraySegment{System.Byte})
  commentId: M:Microsoft.Health.Utility.BufferSegment.#ctor(System.ArraySegment{System.Byte})
  id: '#ctor(System.ArraySegment{System.Byte})'
  parent: Microsoft.Health.Utility.BufferSegment
  langs:
  - csharp
  - vb
  name: BufferSegment(ArraySegment<Byte>)
  nameWithType: BufferSegment.BufferSegment(ArraySegment<Byte>)
  fullName: Microsoft.Health.Utility.BufferSegment.BufferSegment(System.ArraySegment<System.Byte>)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/BufferSegment.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.Utility/utilities/BufferSegment.cs
    startLine: 78
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\nInitializes an instance with a reference to the given array segment buffer.\n"
  example: []
  syntax:
    content: public BufferSegment(ArraySegment<byte> segment)
    content.vb: Public Sub New(segment As ArraySegment(Of Byte))
    parameters:
    - id: segment
      type: System.ArraySegment{System.Byte}
      description: ''
  overload: Microsoft.Health.Utility.BufferSegment.#ctor*
  nameWithType.vb: BufferSegment.BufferSegment(ArraySegment(Of Byte))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Utility.BufferSegment.BufferSegment(System.ArraySegment(Of System.Byte))
  name.vb: BufferSegment(ArraySegment(Of Byte))
- uid: Microsoft.Health.Utility.BufferSegment.#ctor(System.IO.MemoryStream)
  commentId: M:Microsoft.Health.Utility.BufferSegment.#ctor(System.IO.MemoryStream)
  id: '#ctor(System.IO.MemoryStream)'
  parent: Microsoft.Health.Utility.BufferSegment
  langs:
  - csharp
  - vb
  name: BufferSegment(MemoryStream)
  nameWithType: BufferSegment.BufferSegment(MemoryStream)
  fullName: Microsoft.Health.Utility.BufferSegment.BufferSegment(System.IO.MemoryStream)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/BufferSegment.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.Utility/utilities/BufferSegment.cs
    startLine: 87
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\nInitializes an instance with a reference to the memory-stream buffer.\n"
  example: []
  syntax:
    content: public BufferSegment(MemoryStream ms)
    content.vb: Public Sub New(ms As MemoryStream)
    parameters:
    - id: ms
      type: System.IO.MemoryStream
      description: ''
  overload: Microsoft.Health.Utility.BufferSegment.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.BufferSegment.Empty
  commentId: P:Microsoft.Health.Utility.BufferSegment.Empty
  id: Empty
  parent: Microsoft.Health.Utility.BufferSegment
  langs:
  - csharp
  - vb
  name: Empty
  nameWithType: BufferSegment.Empty
  fullName: Microsoft.Health.Utility.BufferSegment.Empty
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/BufferSegment.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Empty
    path: ../Microsoft.Health.Utility/utilities/BufferSegment.cs
    startLine: 95
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\nGets an \"empty\" (offset, size = 0) instance of the BufferSegment.\n"
  example: []
  syntax:
    content: public static BufferSegment Empty { get; }
    content.vb: Public Shared ReadOnly Property Empty As BufferSegment
    parameters: []
    return:
      type: Microsoft.Health.Utility.BufferSegment
  overload: Microsoft.Health.Utility.BufferSegment.Empty*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Health.Utility.BufferSegment.Buffer
  commentId: P:Microsoft.Health.Utility.BufferSegment.Buffer
  id: Buffer
  parent: Microsoft.Health.Utility.BufferSegment
  langs:
  - csharp
  - vb
  name: Buffer
  nameWithType: BufferSegment.Buffer
  fullName: Microsoft.Health.Utility.BufferSegment.Buffer
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/BufferSegment.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Buffer
    path: ../Microsoft.Health.Utility/utilities/BufferSegment.cs
    startLine: 106
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\nGets the underlying buffer.\n"
  example: []
  syntax:
    content: public byte[] Buffer { get; }
    content.vb: Public ReadOnly Property Buffer As Byte()
    parameters: []
    return:
      type: System.Byte[]
  overload: Microsoft.Health.Utility.BufferSegment.Buffer*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.BufferSegment.Offset
  commentId: P:Microsoft.Health.Utility.BufferSegment.Offset
  id: Offset
  parent: Microsoft.Health.Utility.BufferSegment
  langs:
  - csharp
  - vb
  name: Offset
  nameWithType: BufferSegment.Offset
  fullName: Microsoft.Health.Utility.BufferSegment.Offset
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/BufferSegment.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Offset
    path: ../Microsoft.Health.Utility/utilities/BufferSegment.cs
    startLine: 118
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\nGets the segment's buffer byte offset.\n"
  example: []
  syntax:
    content: public int Offset { get; }
    content.vb: Public ReadOnly Property Offset As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Health.Utility.BufferSegment.Offset*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.BufferSegment.Count
  commentId: P:Microsoft.Health.Utility.BufferSegment.Count
  id: Count
  parent: Microsoft.Health.Utility.BufferSegment
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: BufferSegment.Count
  fullName: Microsoft.Health.Utility.BufferSegment.Count
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/BufferSegment.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Count
    path: ../Microsoft.Health.Utility/utilities/BufferSegment.cs
    startLine: 129
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\nGets the length in bytes of the buffer segment.\n"
  example: []
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Health.Utility.BufferSegment.Count*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.BufferSegment.ArraySegment
  commentId: P:Microsoft.Health.Utility.BufferSegment.ArraySegment
  id: ArraySegment
  parent: Microsoft.Health.Utility.BufferSegment
  langs:
  - csharp
  - vb
  name: ArraySegment
  nameWithType: BufferSegment.ArraySegment
  fullName: Microsoft.Health.Utility.BufferSegment.ArraySegment
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/BufferSegment.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ArraySegment
    path: ../Microsoft.Health.Utility/utilities/BufferSegment.cs
    startLine: 140
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\nGets the ArraySegment representation of this buffer segment.\n"
  example: []
  syntax:
    content: public ArraySegment<byte> ArraySegment { get; }
    content.vb: Public ReadOnly Property ArraySegment As ArraySegment(Of Byte)
    parameters: []
    return:
      type: System.ArraySegment{System.Byte}
  overload: Microsoft.Health.Utility.BufferSegment.ArraySegment*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.BufferSegment.ToString
  commentId: M:Microsoft.Health.Utility.BufferSegment.ToString
  id: ToString
  parent: Microsoft.Health.Utility.BufferSegment
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: BufferSegment.ToString()
  fullName: Microsoft.Health.Utility.BufferSegment.ToString()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/BufferSegment.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ToString
    path: ../Microsoft.Health.Utility/utilities/BufferSegment.cs
    startLine: 148
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  overridden: System.Object.ToString
  overload: Microsoft.Health.Utility.BufferSegment.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.Utility.BufferSegment.Equals(System.Object,System.Collections.IEqualityComparer)
  commentId: M:Microsoft.Health.Utility.BufferSegment.Equals(System.Object,System.Collections.IEqualityComparer)
  id: Equals(System.Object,System.Collections.IEqualityComparer)
  parent: Microsoft.Health.Utility.BufferSegment
  langs:
  - csharp
  - vb
  name: Equals(Object, IEqualityComparer)
  nameWithType: BufferSegment.Equals(Object, IEqualityComparer)
  fullName: Microsoft.Health.Utility.BufferSegment.Equals(System.Object, System.Collections.IEqualityComparer)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/BufferSegment.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Equals
    path: ../Microsoft.Health.Utility/utilities/BufferSegment.cs
    startLine: 169
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\nDetermines whether an object is structurally equal to the current instance.\n"
  example: []
  syntax:
    content: public bool Equals(object other, IEqualityComparer comparer)
    content.vb: Public Function Equals(other As Object, comparer As IEqualityComparer) As Boolean
    parameters:
    - id: other
      type: System.Object
      description: The object to compare with the current instance.
    - id: comparer
      type: System.Collections.IEqualityComparer
      description: 'An object that determines whether the current instance and other are equal. '
    return:
      type: System.Boolean
      description: true if the two objects are equal; otherwise, false.
  overload: Microsoft.Health.Utility.BufferSegment.Equals*
  implements:
  - System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.BufferSegment.GetHashCode(System.Collections.IEqualityComparer)
  commentId: M:Microsoft.Health.Utility.BufferSegment.GetHashCode(System.Collections.IEqualityComparer)
  id: GetHashCode(System.Collections.IEqualityComparer)
  parent: Microsoft.Health.Utility.BufferSegment
  langs:
  - csharp
  - vb
  name: GetHashCode(IEqualityComparer)
  nameWithType: BufferSegment.GetHashCode(IEqualityComparer)
  fullName: Microsoft.Health.Utility.BufferSegment.GetHashCode(System.Collections.IEqualityComparer)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/BufferSegment.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetHashCode
    path: ../Microsoft.Health.Utility/utilities/BufferSegment.cs
    startLine: 200
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\nReturns a hash code for the current instance.\n"
  example: []
  syntax:
    content: public int GetHashCode(IEqualityComparer comparer)
    content.vb: Public Function GetHashCode(comparer As IEqualityComparer) As Integer
    parameters:
    - id: comparer
      type: System.Collections.IEqualityComparer
      description: An object that computes the hash code of the current object.
    return:
      type: System.Int32
      description: The hash code for the current instance.
  overload: Microsoft.Health.Utility.BufferSegment.GetHashCode*
  implements:
  - System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.BufferSegment.ComputeHash(System.Security.Cryptography.HashAlgorithm)
  commentId: M:Microsoft.Health.Utility.BufferSegment.ComputeHash(System.Security.Cryptography.HashAlgorithm)
  id: ComputeHash(System.Security.Cryptography.HashAlgorithm)
  parent: Microsoft.Health.Utility.BufferSegment
  langs:
  - csharp
  - vb
  name: ComputeHash(HashAlgorithm)
  nameWithType: BufferSegment.ComputeHash(HashAlgorithm)
  fullName: Microsoft.Health.Utility.BufferSegment.ComputeHash(System.Security.Cryptography.HashAlgorithm)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/BufferSegment.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ComputeHash
    path: ../Microsoft.Health.Utility/utilities/BufferSegment.cs
    startLine: 217
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\nComputes the hash value for the buffer segment.\n"
  example: []
  syntax:
    content: public byte[] ComputeHash(HashAlgorithm algorithm)
    content.vb: Public Function ComputeHash(algorithm As HashAlgorithm) As Byte()
    parameters:
    - id: algorithm
      type: System.Security.Cryptography.HashAlgorithm
    return:
      type: System.Byte[]
      description: ''
  overload: Microsoft.Health.Utility.BufferSegment.ComputeHash*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.IStructuralEquatable
  commentId: T:System.Collections.IStructuralEquatable
  parent: System.Collections
  isExternal: true
  name: IStructuralEquatable
  nameWithType: IStructuralEquatable
  fullName: System.Collections.IStructuralEquatable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.BufferSegment.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<BufferSegment>()
  nameWithType: TypeHelper.ValueOrDbNull<BufferSegment>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Utility.BufferSegment>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of BufferSegment)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Utility.BufferSegment)()
  name.vb: ValueOrDbNull(Of BufferSegment)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<BufferSegment>
    nameWithType: TypeHelper.ValueOrDbNull<BufferSegment>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Utility.BufferSegment>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of BufferSegment)
    nameWithType: TypeHelper.ValueOrDbNull(Of BufferSegment)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Utility.BufferSegment)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility.BufferSegment.#ctor*
  commentId: Overload:Microsoft.Health.Utility.BufferSegment.#ctor
  isExternal: false
  name: BufferSegment
  nameWithType: BufferSegment.BufferSegment
  fullName: Microsoft.Health.Utility.BufferSegment.BufferSegment
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ArraySegment{System.Byte}
  commentId: T:System.ArraySegment{System.Byte}
  parent: System
  definition: System.ArraySegment`1
  name: ArraySegment<Byte>
  nameWithType: ArraySegment<Byte>
  fullName: System.ArraySegment<System.Byte>
  nameWithType.vb: ArraySegment(Of Byte)
  fullName.vb: System.ArraySegment(Of System.Byte)
  name.vb: ArraySegment(Of Byte)
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ArraySegment`1
  commentId: T:System.ArraySegment`1
  isExternal: true
  name: ArraySegment<T>
  nameWithType: ArraySegment<T>
  fullName: System.ArraySegment<T>
  nameWithType.vb: ArraySegment(Of T)
  fullName.vb: System.ArraySegment(Of T)
  name.vb: ArraySegment(Of T)
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.MemoryStream
  commentId: T:System.IO.MemoryStream
  parent: System.IO
  isExternal: true
  name: MemoryStream
  nameWithType: MemoryStream
  fullName: System.IO.MemoryStream
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Microsoft.Health.Utility.BufferSegment.Empty*
  commentId: Overload:Microsoft.Health.Utility.BufferSegment.Empty
  isExternal: false
  name: Empty
  nameWithType: BufferSegment.Empty
  fullName: Microsoft.Health.Utility.BufferSegment.Empty
- uid: Microsoft.Health.Utility.BufferSegment
  commentId: T:Microsoft.Health.Utility.BufferSegment
  parent: Microsoft.Health.Utility
  isExternal: false
  name: BufferSegment
  nameWithType: BufferSegment
  fullName: Microsoft.Health.Utility.BufferSegment
- uid: Microsoft.Health.Utility.BufferSegment.Buffer*
  commentId: Overload:Microsoft.Health.Utility.BufferSegment.Buffer
  isExternal: false
  name: Buffer
  nameWithType: BufferSegment.Buffer
  fullName: Microsoft.Health.Utility.BufferSegment.Buffer
- uid: Microsoft.Health.Utility.BufferSegment.Offset*
  commentId: Overload:Microsoft.Health.Utility.BufferSegment.Offset
  isExternal: false
  name: Offset
  nameWithType: BufferSegment.Offset
  fullName: Microsoft.Health.Utility.BufferSegment.Offset
- uid: Microsoft.Health.Utility.BufferSegment.Count*
  commentId: Overload:Microsoft.Health.Utility.BufferSegment.Count
  isExternal: false
  name: Count
  nameWithType: BufferSegment.Count
  fullName: Microsoft.Health.Utility.BufferSegment.Count
- uid: Microsoft.Health.Utility.BufferSegment.ArraySegment*
  commentId: Overload:Microsoft.Health.Utility.BufferSegment.ArraySegment
  isExternal: false
  name: ArraySegment
  nameWithType: BufferSegment.ArraySegment
  fullName: Microsoft.Health.Utility.BufferSegment.ArraySegment
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.BufferSegment.ToString*
  commentId: Overload:Microsoft.Health.Utility.BufferSegment.ToString
  isExternal: false
  name: ToString
  nameWithType: BufferSegment.ToString
  fullName: Microsoft.Health.Utility.BufferSegment.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.Utility.BufferSegment.Equals*
  commentId: Overload:Microsoft.Health.Utility.BufferSegment.Equals
  isExternal: false
  name: Equals
  nameWithType: BufferSegment.Equals
  fullName: Microsoft.Health.Utility.BufferSegment.Equals
- uid: System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)
  commentId: M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)
  parent: System.Collections.IStructuralEquatable
  isExternal: true
  name: Equals(Object, IEqualityComparer)
  nameWithType: IStructuralEquatable.Equals(Object, IEqualityComparer)
  fullName: System.Collections.IStructuralEquatable.Equals(System.Object, System.Collections.IEqualityComparer)
  spec.csharp:
  - uid: System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)
    name: Equals
    nameWithType: IStructuralEquatable.Equals
    fullName: System.Collections.IStructuralEquatable.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.IEqualityComparer
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.IEqualityComparer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)
    name: Equals
    nameWithType: IStructuralEquatable.Equals
    fullName: System.Collections.IStructuralEquatable.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.IEqualityComparer
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.IEqualityComparer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEqualityComparer
  commentId: T:System.Collections.IEqualityComparer
  parent: System.Collections
  isExternal: true
  name: IEqualityComparer
  nameWithType: IEqualityComparer
  fullName: System.Collections.IEqualityComparer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Health.Utility.BufferSegment.GetHashCode*
  commentId: Overload:Microsoft.Health.Utility.BufferSegment.GetHashCode
  isExternal: false
  name: GetHashCode
  nameWithType: BufferSegment.GetHashCode
  fullName: Microsoft.Health.Utility.BufferSegment.GetHashCode
- uid: System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)
  commentId: M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)
  parent: System.Collections.IStructuralEquatable
  isExternal: true
  name: GetHashCode(IEqualityComparer)
  nameWithType: IStructuralEquatable.GetHashCode(IEqualityComparer)
  fullName: System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)
  spec.csharp:
  - uid: System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)
    name: GetHashCode
    nameWithType: IStructuralEquatable.GetHashCode
    fullName: System.Collections.IStructuralEquatable.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEqualityComparer
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.IEqualityComparer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)
    name: GetHashCode
    nameWithType: IStructuralEquatable.GetHashCode
    fullName: System.Collections.IStructuralEquatable.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEqualityComparer
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.IEqualityComparer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.BufferSegment.ComputeHash*
  commentId: Overload:Microsoft.Health.Utility.BufferSegment.ComputeHash
  isExternal: false
  name: ComputeHash
  nameWithType: BufferSegment.ComputeHash
  fullName: Microsoft.Health.Utility.BufferSegment.ComputeHash
- uid: System.Security.Cryptography.HashAlgorithm
  commentId: T:System.Security.Cryptography.HashAlgorithm
  parent: System.Security.Cryptography
  isExternal: true
  name: HashAlgorithm
  nameWithType: HashAlgorithm
  fullName: System.Security.Cryptography.HashAlgorithm
- uid: System.Security.Cryptography
  commentId: N:System.Security.Cryptography
  isExternal: false
  name: System.Security.Cryptography
  nameWithType: System.Security.Cryptography
  fullName: System.Security.Cryptography
