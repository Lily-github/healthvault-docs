### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.ShellRedirectParameters
  commentId: T:Microsoft.Health.ShellRedirectParameters
  id: ShellRedirectParameters
  parent: Microsoft.Health
  children:
  - Microsoft.Health.ShellRedirectParameters.#ctor
  - Microsoft.Health.ShellRedirectParameters.#ctor(System.String)
  - Microsoft.Health.ShellRedirectParameters.ActionParameters
  - Microsoft.Health.ShellRedirectParameters.ActionQueryString
  - Microsoft.Health.ShellRedirectParameters.AllowInstanceBounce
  - Microsoft.Health.ShellRedirectParameters.ApplicationId
  - Microsoft.Health.ShellRedirectParameters.Clone
  - Microsoft.Health.ShellRedirectParameters.ConstructRedirectorQueryString
  - Microsoft.Health.ShellRedirectParameters.ConstructRedirectUrl
  - Microsoft.Health.ShellRedirectParameters.ConstructTargetQueryString
  - Microsoft.Health.ShellRedirectParameters.IsMultiRecordApplication
  - Microsoft.Health.ShellRedirectParameters.ReturnUrl
  - Microsoft.Health.ShellRedirectParameters.ShellRedirectorUrl
  - Microsoft.Health.ShellRedirectParameters.SignupCode
  - Microsoft.Health.ShellRedirectParameters.TargetLocation
  - Microsoft.Health.ShellRedirectParameters.TargetParameters
  - Microsoft.Health.ShellRedirectParameters.TargetQueryString
  - Microsoft.Health.ShellRedirectParameters.TokenRedirectionMethod
  langs:
  - csharp
  - vb
  name: ShellRedirectParameters
  nameWithType: ShellRedirectParameters
  fullName: Microsoft.Health.ShellRedirectParameters
  type: Class
  source:
    remote:
      path: Microsoft.Health/ShellRedirectParameters.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ShellRedirectParameters
    path: ../Microsoft.Health/ShellRedirectParameters.cs
    startLine: 21
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nParameters for constructing a HealthVault Shell redirect URL.\n"
  remarks: "\nSee the <a href=\"http://msdn.microsoft.com/en-us/library/ff803620.aspx\">Shell redirect interface documentation</a> for\ncomplete listing of all parameters supported by Shell.\n"
  example: []
  syntax:
    content: public class ShellRedirectParameters
    content.vb: Public Class ShellRedirectParameters
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.ShellRedirectParameters.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.ShellRedirectParameters.#ctor
  commentId: M:Microsoft.Health.ShellRedirectParameters.#ctor
  id: '#ctor'
  parent: Microsoft.Health.ShellRedirectParameters
  langs:
  - csharp
  - vb
  name: ShellRedirectParameters()
  nameWithType: ShellRedirectParameters.ShellRedirectParameters()
  fullName: Microsoft.Health.ShellRedirectParameters.ShellRedirectParameters()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/ShellRedirectParameters.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health/ShellRedirectParameters.cs
    startLine: 28
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Health.ShellRedirectParameters\" data-throw-if-not-resolved=\"false\"></xref> class that is empty.\n"
  example: []
  syntax:
    content: public ShellRedirectParameters()
    content.vb: Public Sub New
  overload: Microsoft.Health.ShellRedirectParameters.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ShellRedirectParameters.#ctor(System.String)
  commentId: M:Microsoft.Health.ShellRedirectParameters.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Health.ShellRedirectParameters
  langs:
  - csharp
  - vb
  name: ShellRedirectParameters(String)
  nameWithType: ShellRedirectParameters.ShellRedirectParameters(String)
  fullName: Microsoft.Health.ShellRedirectParameters.ShellRedirectParameters(System.String)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/ShellRedirectParameters.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health/ShellRedirectParameters.cs
    startLine: 39
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Health.ShellRedirectParameters\" data-throw-if-not-resolved=\"false\"></xref> class with\nthe specified Shell redirector URL.\n"
  example: []
  syntax:
    content: public ShellRedirectParameters(string shellRedirectorUrl)
    content.vb: Public Sub New(shellRedirectorUrl As String)
    parameters:
    - id: shellRedirectorUrl
      type: System.String
  overload: Microsoft.Health.ShellRedirectParameters.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ShellRedirectParameters.ShellRedirectorUrl
  commentId: P:Microsoft.Health.ShellRedirectParameters.ShellRedirectorUrl
  id: ShellRedirectorUrl
  parent: Microsoft.Health.ShellRedirectParameters
  langs:
  - csharp
  - vb
  name: ShellRedirectorUrl
  nameWithType: ShellRedirectParameters.ShellRedirectorUrl
  fullName: Microsoft.Health.ShellRedirectParameters.ShellRedirectorUrl
  type: Property
  source:
    remote:
      path: Microsoft.Health/ShellRedirectParameters.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ShellRedirectorUrl
    path: ../Microsoft.Health/ShellRedirectParameters.cs
    startLine: 65
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the base Shell redirector URL.\n"
  remarks: "\n<p>\nFor example, \"https://account.healthvault.com/redirect.aspx\".\n</p>\n\n<p>\nIf the specified URL does not end with \"/redirect.aspx\", when \n<xref href=\"Microsoft.Health.ShellRedirectParameters.ConstructRedirectUrl\" data-throw-if-not-resolved=\"false\"></xref> is called, \"/redirect.aspx\"\nis appended to the URL used for redirection.\n</p>\n\n<p>\nIf not specified, the value of the <xref href=\"Microsoft.Health.HealthApplicationConfiguration.HealthVaultShellUrl\" data-throw-if-not-resolved=\"false\"></xref> configuration is\nused for constructing the Shell redirect URL.\n</p>\n"
  example: []
  syntax:
    content: public string ShellRedirectorUrl { get; set; }
    content.vb: Public Property ShellRedirectorUrl As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.ShellRedirectParameters.ShellRedirectorUrl*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ShellRedirectParameters.IsMultiRecordApplication
  commentId: P:Microsoft.Health.ShellRedirectParameters.IsMultiRecordApplication
  id: IsMultiRecordApplication
  parent: Microsoft.Health.ShellRedirectParameters
  langs:
  - csharp
  - vb
  name: IsMultiRecordApplication
  nameWithType: ShellRedirectParameters.IsMultiRecordApplication
  fullName: Microsoft.Health.ShellRedirectParameters.IsMultiRecordApplication
  type: Property
  source:
    remote:
      path: Microsoft.Health/ShellRedirectParameters.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: IsMultiRecordApplication
    path: ../Microsoft.Health/ShellRedirectParameters.cs
    startLine: 82
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the parameter that specifies whether\nthe application simultaneously deals with multiple records\nfor the same person.\n"
  remarks: "\nIf set to true, this is encoded as the value of the <strong>ismra</strong> parameter in the \n<strong>targetqs</strong> query string parameter.\n\n<p>\nSee the <a href=\"http://msdn.microsoft.com/en-us/library/ff803620.aspx\">Shell redirect interface documentation</a>.\n</p>\n"
  example: []
  syntax:
    content: public bool ? IsMultiRecordApplication { get; set; }
    content.vb: Public Property IsMultiRecordApplication As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Health.ShellRedirectParameters.IsMultiRecordApplication*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ShellRedirectParameters.SignupCode
  commentId: P:Microsoft.Health.ShellRedirectParameters.SignupCode
  id: SignupCode
  parent: Microsoft.Health.ShellRedirectParameters
  langs:
  - csharp
  - vb
  name: SignupCode
  nameWithType: ShellRedirectParameters.SignupCode
  fullName: Microsoft.Health.ShellRedirectParameters.SignupCode
  type: Property
  source:
    remote:
      path: Microsoft.Health/ShellRedirectParameters.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SignupCode
    path: ../Microsoft.Health/ShellRedirectParameters.cs
    startLine: 111
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the signup code parameter for creating a HealthVault account.\n"
  remarks: "\n<p>\nThis is required for applications in locations with limited access to HealthVault.\nSignup codes may be obtained from\n<xref href=\"Microsoft.Health.ApplicationConnection.NewSignupCode\" data-throw-if-not-resolved=\"false\"></xref>,\n<xref href=\"Microsoft.Health.PatientConnect.PatientConnection.Create(Microsoft.Health.Web.OfflineWebApplicationConnection%2cSystem.String%2cSystem.String%2cSystem.String%2cSystem.Uri%2cSystem.String)\" data-throw-if-not-resolved=\"false\"></xref>,\n<xref href=\"Microsoft.Health.Package.ConnectPackage.Create(Microsoft.Health.Web.OfflineWebApplicationConnection%2cSystem.String%2cSystem.String%2cSystem.String%2cSystem.String%2cSystem.Collections.Generic.IList%7bMicrosoft.Health.HealthRecordItem%7d)\" data-throw-if-not-resolved=\"false\"></xref>,\n<xref href=\"Microsoft.Health.Package.ConnectPackage.Create(Microsoft.Health.Web.OfflineWebApplicationConnection%2cSystem.String%2cSystem.String%2cSystem.String%2cMicrosoft.Health.ItemTypes.PasswordProtectedPackage)\" data-throw-if-not-resolved=\"false\"></xref>,\n<xref href=\"Microsoft.Health.Package.ConnectPackage.Create(Microsoft.Health.Web.OfflineWebApplicationConnection%2cSystem.String%2cSystem.String%2cSystem.String%2cSystem.String%2cMicrosoft.Health.ItemTypes.PasswordProtectedPackage)\" data-throw-if-not-resolved=\"false\"></xref>,\n<xref href=\"Microsoft.Health.Package.ConnectPackage.CreatePackage(Microsoft.Health.Web.OfflineWebApplicationConnection%2cSystem.String%2cSystem.String%2cSystem.String%2cSystem.String%2cSystem.String%2cSystem.Collections.Generic.IList%7bMicrosoft.Health.HealthRecordItem%7d)\" data-throw-if-not-resolved=\"false\"></xref>,\nand <xref href=\"Microsoft.Health.Package.ConnectPackage.AllocatePackageId(Microsoft.Health.Web.OfflineWebApplicationConnection)\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n\n<p>\nIf specified, this is encoded as the value of the <strong>signupcode</strong> parameter in the \n<strong>targetqs</strong> query string parameter.\n</p>\n\n<p>\nSee the <a href=\"http://msdn.microsoft.com/en-us/library/ff803620.aspx\">Shell redirect interface documentation</a>.\n</p>\n"
  example: []
  syntax:
    content: public string SignupCode { get; set; }
    content.vb: Public Property SignupCode As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.ShellRedirectParameters.SignupCode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ShellRedirectParameters.TargetLocation
  commentId: P:Microsoft.Health.ShellRedirectParameters.TargetLocation
  id: TargetLocation
  parent: Microsoft.Health.ShellRedirectParameters
  langs:
  - csharp
  - vb
  name: TargetLocation
  nameWithType: ShellRedirectParameters.TargetLocation
  fullName: Microsoft.Health.ShellRedirectParameters.TargetLocation
  type: Property
  source:
    remote:
      path: Microsoft.Health/ShellRedirectParameters.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: TargetLocation
    path: ../Microsoft.Health/ShellRedirectParameters.cs
    startLine: 129
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the name of the location to redirect to in HealthVault Shell.\n"
  remarks: "\n<p>\nSee <a href=\"http://msdn.microsoft.com/en-us/library/ff803620.aspx\">Shell redirect interface</a> for\ncomplete listing of target locations and their parameters.\n</p>\n\n<p>\nThis is encoded as the value of the <strong>target</strong> query string parameter in the\nredirect URL.\n</p>\n"
  example: []
  syntax:
    content: public string TargetLocation { get; set; }
    content.vb: Public Property TargetLocation As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.ShellRedirectParameters.TargetLocation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ShellRedirectParameters.TargetParameters
  commentId: P:Microsoft.Health.ShellRedirectParameters.TargetParameters
  id: TargetParameters
  parent: Microsoft.Health.ShellRedirectParameters
  langs:
  - csharp
  - vb
  name: TargetParameters
  nameWithType: ShellRedirectParameters.TargetParameters
  fullName: Microsoft.Health.ShellRedirectParameters.TargetParameters
  type: Property
  source:
    remote:
      path: Microsoft.Health/ShellRedirectParameters.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: TargetParameters
    path: ../Microsoft.Health/ShellRedirectParameters.cs
    startLine: 147
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets the collection of target-specific parameters to pass to the target location.\n"
  remarks: "\n<p>\nSee <a href=\"http://msdn.microsoft.com/en-us/library/ff803620.aspx\">Shell redirect interface</a> for\ncomplete listing of target locations and their parameters.\n</p>\n\n<p>\nThis is encoded as a key-value query string (application/x-www-form-urlencoded) along with <xref href=\"TargetQueryString\" data-throw-if-not-resolved=\"false\"></xref>\nas the value of the <strong>targetqs</strong> query string parameter in the redirect URL.\n</p>\n"
  example: []
  syntax:
    content: public NameValueCollection TargetParameters { get; }
    content.vb: Public ReadOnly Property TargetParameters As NameValueCollection
    parameters: []
    return:
      type: System.Collections.Specialized.NameValueCollection
  overload: Microsoft.Health.ShellRedirectParameters.TargetParameters*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.ShellRedirectParameters.TargetQueryString
  commentId: P:Microsoft.Health.ShellRedirectParameters.TargetQueryString
  id: TargetQueryString
  parent: Microsoft.Health.ShellRedirectParameters
  langs:
  - csharp
  - vb
  name: TargetQueryString
  nameWithType: ShellRedirectParameters.TargetQueryString
  fullName: Microsoft.Health.ShellRedirectParameters.TargetQueryString
  type: Property
  source:
    remote:
      path: Microsoft.Health/ShellRedirectParameters.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: TargetQueryString
    path: ../Microsoft.Health/ShellRedirectParameters.cs
    startLine: 165
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the target-specific query string that is passed to the target location.\n"
  remarks: "\n<p>\nWhen specified, this value is used along with the <xref href=\"TargetParameters\" data-throw-if-not-resolved=\"false\"></xref> name-value collection as the value\nof the <strong>targetqs</strong> query string parameter.\n</p>\n\n<p>\nSee <a href=\"http://msdn.microsoft.com/en-us/library/ff803620.aspx\">Shell redirect interface</a> for\ncomplete listing of target locations and their parameters.\n</p>\n"
  example: []
  syntax:
    content: public string TargetQueryString { get; set; }
    content.vb: Public Property TargetQueryString As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.ShellRedirectParameters.TargetQueryString*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ShellRedirectParameters.ReturnUrl
  commentId: P:Microsoft.Health.ShellRedirectParameters.ReturnUrl
  id: ReturnUrl
  parent: Microsoft.Health.ShellRedirectParameters
  langs:
  - csharp
  - vb
  name: ReturnUrl
  nameWithType: ShellRedirectParameters.ReturnUrl
  fullName: Microsoft.Health.ShellRedirectParameters.ReturnUrl
  type: Property
  source:
    remote:
      path: Microsoft.Health/ShellRedirectParameters.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ReturnUrl
    path: ../Microsoft.Health/ShellRedirectParameters.cs
    startLine: 187
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the URL that the non-production HealthVault Shell will redirect\nback to after the user interaction for the requested target\nlocation is complete.\n"
  remarks: "\n<p>\nThis parameter is intended to make development in non-production HealthVault\nenvironments easier.  In the production HealthVault environment, redirects\nwill return to HealthVault's action URL configuration for the application ID.\nSee the <a href=\"http://msdn.microsoft.com/en-us/library/ff803620.aspx\">Shell redirect interface documentation</a>.\n</p>\n\n<p>\nIf specified or configured, this is encoded as the value of the <strong>redirect</strong> parameter in the \n<strong>targetqs</strong> query string parameter.\n</p>\n"
  example: []
  syntax:
    content: public string ReturnUrl { get; set; }
    content.vb: Public Property ReturnUrl As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.ShellRedirectParameters.ReturnUrl*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ShellRedirectParameters.ActionParameters
  commentId: P:Microsoft.Health.ShellRedirectParameters.ActionParameters
  id: ActionParameters
  parent: Microsoft.Health.ShellRedirectParameters
  langs:
  - csharp
  - vb
  name: ActionParameters
  nameWithType: ShellRedirectParameters.ActionParameters
  fullName: Microsoft.Health.ShellRedirectParameters.ActionParameters
  type: Property
  source:
    remote:
      path: Microsoft.Health/ShellRedirectParameters.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ActionParameters
    path: ../Microsoft.Health/ShellRedirectParameters.cs
    startLine: 207
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets the collection of user-defined parameters which are included in the return redirect\nwhen HealthVault Shell redirects back to the application.\n"
  remarks: "\n<p>\nThese parameters allow the application to transfer its state through the\nHealthVault Shell redirect.\nSee the <a href=\"http://msdn.microsoft.com/en-us/library/ff803620.aspx\">Shell redirect interface documentation</a>.\n</p>\n\n<p>\nThis is encoded as a key-value query string (application/x-www-form-urlencoded) along with <xref href=\"ActionQueryString\" data-throw-if-not-resolved=\"false\"></xref>\nas the value of the <strong>actionqs</strong> parameter in the <strong>targetqs</strong> query string parameter.\n</p>\n"
  example: []
  syntax:
    content: public NameValueCollection ActionParameters { get; }
    content.vb: Public ReadOnly Property ActionParameters As NameValueCollection
    parameters: []
    return:
      type: System.Collections.Specialized.NameValueCollection
  overload: Microsoft.Health.ShellRedirectParameters.ActionParameters*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.ShellRedirectParameters.ActionQueryString
  commentId: P:Microsoft.Health.ShellRedirectParameters.ActionQueryString
  id: ActionQueryString
  parent: Microsoft.Health.ShellRedirectParameters
  langs:
  - csharp
  - vb
  name: ActionQueryString
  nameWithType: ShellRedirectParameters.ActionQueryString
  fullName: Microsoft.Health.ShellRedirectParameters.ActionQueryString
  type: Property
  source:
    remote:
      path: Microsoft.Health/ShellRedirectParameters.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ActionQueryString
    path: ../Microsoft.Health/ShellRedirectParameters.cs
    startLine: 227
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the query string which is included in the return redirect when HealthVault Shell\nredirects back to the application.\n"
  remarks: "\n<p>\nThis query string allows the application to transfer its state through the\nHealthVault Shell redirect.\nSee the <a href=\"http://msdn.microsoft.com/en-us/library/ff803620.aspx\">Shell redirect interface documentation</a>.\n</p>\n\n<p>\nWhen specified, this value is used along with the <xref href=\"ActionParameters\" data-throw-if-not-resolved=\"false\"></xref> name-value collection as the value\nof the <strong>actionqs</strong> parameter in the <strong>targetqs</strong> query string parameter.\n</p>\n"
  example: []
  syntax:
    content: public string ActionQueryString { get; set; }
    content.vb: Public Property ActionQueryString As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.ShellRedirectParameters.ActionQueryString*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ShellRedirectParameters.ApplicationId
  commentId: P:Microsoft.Health.ShellRedirectParameters.ApplicationId
  id: ApplicationId
  parent: Microsoft.Health.ShellRedirectParameters
  langs:
  - csharp
  - vb
  name: ApplicationId
  nameWithType: ShellRedirectParameters.ApplicationId
  fullName: Microsoft.Health.ShellRedirectParameters.ApplicationId
  type: Property
  source:
    remote:
      path: Microsoft.Health/ShellRedirectParameters.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ApplicationId
    path: ../Microsoft.Health/ShellRedirectParameters.cs
    startLine: 232
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the application identifier parameter.\n"
  example: []
  syntax:
    content: public Guid? ApplicationId { get; set; }
    content.vb: Public Property ApplicationId As Guid?
    parameters: []
    return:
      type: System.Nullable{System.Guid}
  overload: Microsoft.Health.ShellRedirectParameters.ApplicationId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ShellRedirectParameters.AllowInstanceBounce
  commentId: P:Microsoft.Health.ShellRedirectParameters.AllowInstanceBounce
  id: AllowInstanceBounce
  parent: Microsoft.Health.ShellRedirectParameters
  langs:
  - csharp
  - vb
  name: AllowInstanceBounce
  nameWithType: ShellRedirectParameters.AllowInstanceBounce
  fullName: Microsoft.Health.ShellRedirectParameters.AllowInstanceBounce
  type: Property
  source:
    remote:
      path: Microsoft.Health/ShellRedirectParameters.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AllowInstanceBounce
    path: ../Microsoft.Health/ShellRedirectParameters.cs
    startLine: 249
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the parameter that specifies whether the target instance of HealthVault Shell can redirect the\nuser to another instance of HealthVault Shell where the user's account might\nreside.\n"
  remarks: "\n<p>\nSee the <a href=\"http://msdn.microsoft.com/en-us/library/ff803620.aspx\">Shell redirect interface documentation</a>.\n</p>\n<p>\nIf set to true, this is encoded as the value of the <strong>aib</strong> parameter in the \n<strong>targetqs</strong> query string parameter.\n</p>\n"
  example: []
  syntax:
    content: public bool ? AllowInstanceBounce { get; set; }
    content.vb: Public Property AllowInstanceBounce As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Health.ShellRedirectParameters.AllowInstanceBounce*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ShellRedirectParameters.TokenRedirectionMethod
  commentId: P:Microsoft.Health.ShellRedirectParameters.TokenRedirectionMethod
  id: TokenRedirectionMethod
  parent: Microsoft.Health.ShellRedirectParameters
  langs:
  - csharp
  - vb
  name: TokenRedirectionMethod
  nameWithType: ShellRedirectParameters.TokenRedirectionMethod
  fullName: Microsoft.Health.ShellRedirectParameters.TokenRedirectionMethod
  type: Property
  source:
    remote:
      path: Microsoft.Health/ShellRedirectParameters.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: TokenRedirectionMethod
    path: ../Microsoft.Health/ShellRedirectParameters.cs
    startLine: 261
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the parameter that specifies the token redirection method.\n"
  remarks: "\nThis is the HTTP method HealthVault Shell will use when redirecting user back\nto the application with the auth token.\nSee the <a href=\"http://msdn.microsoft.com/en-us/library/ff803620.aspx\">Shell redirect interface documentation</a>.\n"
  example: []
  syntax:
    content: public string TokenRedirectionMethod { get; set; }
    content.vb: Public Property TokenRedirectionMethod As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.ShellRedirectParameters.TokenRedirectionMethod*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ShellRedirectParameters.Clone
  commentId: M:Microsoft.Health.ShellRedirectParameters.Clone
  id: Clone
  parent: Microsoft.Health.ShellRedirectParameters
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: ShellRedirectParameters.Clone()
  fullName: Microsoft.Health.ShellRedirectParameters.Clone()
  type: Method
  source:
    remote:
      path: Microsoft.Health/ShellRedirectParameters.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Clone
    path: ../Microsoft.Health/ShellRedirectParameters.cs
    startLine: 270
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nMakes a copy of the redirect parameters object.\n"
  example: []
  syntax:
    content: public ShellRedirectParameters Clone()
    content.vb: Public Function Clone As ShellRedirectParameters
    return:
      type: Microsoft.Health.ShellRedirectParameters
      description: "\nA copy of the redirect parameters object.\n"
  overload: Microsoft.Health.ShellRedirectParameters.Clone*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ShellRedirectParameters.ConstructRedirectUrl
  commentId: M:Microsoft.Health.ShellRedirectParameters.ConstructRedirectUrl
  id: ConstructRedirectUrl
  parent: Microsoft.Health.ShellRedirectParameters
  langs:
  - csharp
  - vb
  name: ConstructRedirectUrl()
  nameWithType: ShellRedirectParameters.ConstructRedirectUrl()
  fullName: Microsoft.Health.ShellRedirectParameters.ConstructRedirectUrl()
  type: Method
  source:
    remote:
      path: Microsoft.Health/ShellRedirectParameters.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ConstructRedirectUrl
    path: ../Microsoft.Health/ShellRedirectParameters.cs
    startLine: 328
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nConstructs a Shell redirect URL for the redirect parameters.\n"
  example: []
  syntax:
    content: public Uri ConstructRedirectUrl()
    content.vb: Public Function ConstructRedirectUrl As Uri
    return:
      type: System.Uri
      description: "\nThe constructed URL.\n"
  overload: Microsoft.Health.ShellRedirectParameters.ConstructRedirectUrl*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nNo <xref href=\"Microsoft.Health.ShellRedirectParameters.TargetLocation\" data-throw-if-not-resolved=\"false\"></xref> is specified.\n"
  - type: System.Configuration.ConfigurationException
    commentId: T:System.Configuration.ConfigurationException
    description: "\nNo <xref href=\"Microsoft.Health.ShellRedirectParameters.ShellRedirectorUrl\" data-throw-if-not-resolved=\"false\"></xref> specified or \nShell URL configured for the application\n(<xref href=\"Microsoft.Health.HealthApplicationConfiguration.HealthVaultShellUrl\" data-throw-if-not-resolved=\"false\"></xref>).\n"
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "\nThe specified parameters construct an invalid URL.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ShellRedirectParameters.ConstructRedirectorQueryString
  commentId: M:Microsoft.Health.ShellRedirectParameters.ConstructRedirectorQueryString
  id: ConstructRedirectorQueryString
  parent: Microsoft.Health.ShellRedirectParameters
  langs:
  - csharp
  - vb
  name: ConstructRedirectorQueryString()
  nameWithType: ShellRedirectParameters.ConstructRedirectorQueryString()
  fullName: Microsoft.Health.ShellRedirectParameters.ConstructRedirectorQueryString()
  type: Method
  source:
    remote:
      path: Microsoft.Health/ShellRedirectParameters.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ConstructRedirectorQueryString
    path: ../Microsoft.Health/ShellRedirectParameters.cs
    startLine: 373
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nConstruct the query string for the Shell redirect URL.\n"
  example: []
  syntax:
    content: public string ConstructRedirectorQueryString()
    content.vb: Public Function ConstructRedirectorQueryString As String
    return:
      type: System.String
      description: "\nThe Shell redirect query string.\n"
  overload: Microsoft.Health.ShellRedirectParameters.ConstructRedirectorQueryString*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<xref href=\"Microsoft.Health.ShellRedirectParameters.TargetLocation\" data-throw-if-not-resolved=\"false\"></xref> is not set.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ShellRedirectParameters.ConstructTargetQueryString
  commentId: M:Microsoft.Health.ShellRedirectParameters.ConstructTargetQueryString
  id: ConstructTargetQueryString
  parent: Microsoft.Health.ShellRedirectParameters
  langs:
  - csharp
  - vb
  name: ConstructTargetQueryString()
  nameWithType: ShellRedirectParameters.ConstructTargetQueryString()
  fullName: Microsoft.Health.ShellRedirectParameters.ConstructTargetQueryString()
  type: Method
  source:
    remote:
      path: Microsoft.Health/ShellRedirectParameters.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ConstructTargetQueryString
    path: ../Microsoft.Health/ShellRedirectParameters.cs
    startLine: 397
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nConstructs the query string for the target.\n"
  example: []
  syntax:
    content: public string ConstructTargetQueryString()
    content.vb: Public Function ConstructTargetQueryString As String
    return:
      type: System.String
      description: "\nThe Shell redirect query string.\n"
  overload: Microsoft.Health.ShellRedirectParameters.ConstructTargetQueryString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ShellRedirectParameters.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<ShellRedirectParameters>()
  nameWithType: TypeHelper.ValueOrDbNull<ShellRedirectParameters>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.ShellRedirectParameters>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of ShellRedirectParameters)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.ShellRedirectParameters)()
  name.vb: ValueOrDbNull(Of ShellRedirectParameters)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<ShellRedirectParameters>
    nameWithType: TypeHelper.ValueOrDbNull<ShellRedirectParameters>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.ShellRedirectParameters>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of ShellRedirectParameters)
    nameWithType: TypeHelper.ValueOrDbNull(Of ShellRedirectParameters)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.ShellRedirectParameters)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.ShellRedirectParameters
  commentId: T:Microsoft.Health.ShellRedirectParameters
  parent: Microsoft.Health
  isExternal: false
  name: ShellRedirectParameters
  nameWithType: ShellRedirectParameters
  fullName: Microsoft.Health.ShellRedirectParameters
- uid: Microsoft.Health.ShellRedirectParameters.#ctor*
  commentId: Overload:Microsoft.Health.ShellRedirectParameters.#ctor
  isExternal: false
  name: ShellRedirectParameters
  nameWithType: ShellRedirectParameters.ShellRedirectParameters
  fullName: Microsoft.Health.ShellRedirectParameters.ShellRedirectParameters
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.ShellRedirectParameters.ConstructRedirectUrl
  commentId: M:Microsoft.Health.ShellRedirectParameters.ConstructRedirectUrl
- uid: Microsoft.Health.HealthApplicationConfiguration.HealthVaultShellUrl
  commentId: P:Microsoft.Health.HealthApplicationConfiguration.HealthVaultShellUrl
  parent: Microsoft.Health.HealthApplicationConfiguration
  isExternal: false
  name: HealthVaultShellUrl
  nameWithType: HealthApplicationConfiguration.HealthVaultShellUrl
  fullName: Microsoft.Health.HealthApplicationConfiguration.HealthVaultShellUrl
- uid: Microsoft.Health.ShellRedirectParameters.ShellRedirectorUrl*
  commentId: Overload:Microsoft.Health.ShellRedirectParameters.ShellRedirectorUrl
  isExternal: false
  name: ShellRedirectorUrl
  nameWithType: ShellRedirectParameters.ShellRedirectorUrl
  fullName: Microsoft.Health.ShellRedirectParameters.ShellRedirectorUrl
- uid: Microsoft.Health.HealthApplicationConfiguration
  commentId: T:Microsoft.Health.HealthApplicationConfiguration
  parent: Microsoft.Health
  isExternal: false
  name: HealthApplicationConfiguration
  nameWithType: HealthApplicationConfiguration
  fullName: Microsoft.Health.HealthApplicationConfiguration
- uid: Microsoft.Health.ShellRedirectParameters.IsMultiRecordApplication*
  commentId: Overload:Microsoft.Health.ShellRedirectParameters.IsMultiRecordApplication
  isExternal: false
  name: IsMultiRecordApplication
  nameWithType: ShellRedirectParameters.IsMultiRecordApplication
  fullName: Microsoft.Health.ShellRedirectParameters.IsMultiRecordApplication
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ApplicationConnection.NewSignupCode
  commentId: M:Microsoft.Health.ApplicationConnection.NewSignupCode
  parent: Microsoft.Health.ApplicationConnection
  isExternal: false
  name: NewSignupCode()
  nameWithType: ApplicationConnection.NewSignupCode()
  fullName: Microsoft.Health.ApplicationConnection.NewSignupCode()
  spec.csharp:
  - uid: Microsoft.Health.ApplicationConnection.NewSignupCode
    name: NewSignupCode
    nameWithType: ApplicationConnection.NewSignupCode
    fullName: Microsoft.Health.ApplicationConnection.NewSignupCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ApplicationConnection.NewSignupCode
    name: NewSignupCode
    nameWithType: ApplicationConnection.NewSignupCode
    fullName: Microsoft.Health.ApplicationConnection.NewSignupCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.PatientConnect.PatientConnection.Create(Microsoft.Health.Web.OfflineWebApplicationConnection,System.String,System.String,System.String,System.Uri,System.String)
  commentId: M:Microsoft.Health.PatientConnect.PatientConnection.Create(Microsoft.Health.Web.OfflineWebApplicationConnection,System.String,System.String,System.String,System.Uri,System.String)
- uid: Microsoft.Health.Package.ConnectPackage.Create(Microsoft.Health.Web.OfflineWebApplicationConnection,System.String,System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Health.HealthRecordItem})
  commentId: M:Microsoft.Health.Package.ConnectPackage.Create(Microsoft.Health.Web.OfflineWebApplicationConnection,System.String,System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Health.HealthRecordItem})
- uid: Microsoft.Health.Package.ConnectPackage.Create(Microsoft.Health.Web.OfflineWebApplicationConnection,System.String,System.String,System.String,Microsoft.Health.ItemTypes.PasswordProtectedPackage)
  commentId: M:Microsoft.Health.Package.ConnectPackage.Create(Microsoft.Health.Web.OfflineWebApplicationConnection,System.String,System.String,System.String,Microsoft.Health.ItemTypes.PasswordProtectedPackage)
- uid: Microsoft.Health.Package.ConnectPackage.Create(Microsoft.Health.Web.OfflineWebApplicationConnection,System.String,System.String,System.String,System.String,Microsoft.Health.ItemTypes.PasswordProtectedPackage)
  commentId: M:Microsoft.Health.Package.ConnectPackage.Create(Microsoft.Health.Web.OfflineWebApplicationConnection,System.String,System.String,System.String,System.String,Microsoft.Health.ItemTypes.PasswordProtectedPackage)
- uid: Microsoft.Health.Package.ConnectPackage.CreatePackage(Microsoft.Health.Web.OfflineWebApplicationConnection,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Health.HealthRecordItem})
  commentId: M:Microsoft.Health.Package.ConnectPackage.CreatePackage(Microsoft.Health.Web.OfflineWebApplicationConnection,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Health.HealthRecordItem})
- uid: Microsoft.Health.Package.ConnectPackage.AllocatePackageId(Microsoft.Health.Web.OfflineWebApplicationConnection)
  commentId: M:Microsoft.Health.Package.ConnectPackage.AllocatePackageId(Microsoft.Health.Web.OfflineWebApplicationConnection)
- uid: Microsoft.Health.ShellRedirectParameters.SignupCode*
  commentId: Overload:Microsoft.Health.ShellRedirectParameters.SignupCode
  isExternal: false
  name: SignupCode
  nameWithType: ShellRedirectParameters.SignupCode
  fullName: Microsoft.Health.ShellRedirectParameters.SignupCode
- uid: Microsoft.Health.ApplicationConnection
  commentId: T:Microsoft.Health.ApplicationConnection
  parent: Microsoft.Health
  isExternal: false
  name: ApplicationConnection
  nameWithType: ApplicationConnection
  fullName: Microsoft.Health.ApplicationConnection
- uid: Microsoft.Health.ShellRedirectParameters.TargetLocation*
  commentId: Overload:Microsoft.Health.ShellRedirectParameters.TargetLocation
  isExternal: false
  name: TargetLocation
  nameWithType: ShellRedirectParameters.TargetLocation
  fullName: Microsoft.Health.ShellRedirectParameters.TargetLocation
- uid: TargetQueryString
  commentId: P:TargetQueryString
- uid: Microsoft.Health.ShellRedirectParameters.TargetParameters*
  commentId: Overload:Microsoft.Health.ShellRedirectParameters.TargetParameters
  isExternal: false
  name: TargetParameters
  nameWithType: ShellRedirectParameters.TargetParameters
  fullName: Microsoft.Health.ShellRedirectParameters.TargetParameters
- uid: System.Collections.Specialized.NameValueCollection
  commentId: T:System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: true
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Collections.Specialized
  commentId: N:System.Collections.Specialized
  isExternal: false
  name: System.Collections.Specialized
  nameWithType: System.Collections.Specialized
  fullName: System.Collections.Specialized
- uid: TargetParameters
  commentId: P:TargetParameters
- uid: Microsoft.Health.ShellRedirectParameters.TargetQueryString*
  commentId: Overload:Microsoft.Health.ShellRedirectParameters.TargetQueryString
  isExternal: false
  name: TargetQueryString
  nameWithType: ShellRedirectParameters.TargetQueryString
  fullName: Microsoft.Health.ShellRedirectParameters.TargetQueryString
- uid: Microsoft.Health.ShellRedirectParameters.ReturnUrl*
  commentId: Overload:Microsoft.Health.ShellRedirectParameters.ReturnUrl
  isExternal: false
  name: ReturnUrl
  nameWithType: ShellRedirectParameters.ReturnUrl
  fullName: Microsoft.Health.ShellRedirectParameters.ReturnUrl
- uid: ActionQueryString
  commentId: P:ActionQueryString
- uid: Microsoft.Health.ShellRedirectParameters.ActionParameters*
  commentId: Overload:Microsoft.Health.ShellRedirectParameters.ActionParameters
  isExternal: false
  name: ActionParameters
  nameWithType: ShellRedirectParameters.ActionParameters
  fullName: Microsoft.Health.ShellRedirectParameters.ActionParameters
- uid: ActionParameters
  commentId: P:ActionParameters
- uid: Microsoft.Health.ShellRedirectParameters.ActionQueryString*
  commentId: Overload:Microsoft.Health.ShellRedirectParameters.ActionQueryString
  isExternal: false
  name: ActionQueryString
  nameWithType: ShellRedirectParameters.ActionQueryString
  fullName: Microsoft.Health.ShellRedirectParameters.ActionQueryString
- uid: Microsoft.Health.ShellRedirectParameters.ApplicationId*
  commentId: Overload:Microsoft.Health.ShellRedirectParameters.ApplicationId
  isExternal: false
  name: ApplicationId
  nameWithType: ShellRedirectParameters.ApplicationId
  fullName: Microsoft.Health.ShellRedirectParameters.ApplicationId
- uid: System.Nullable{System.Guid}
  commentId: T:System.Nullable{System.Guid}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Guid>
  nameWithType: Nullable<Guid>
  fullName: System.Nullable<System.Guid>
  nameWithType.vb: Nullable(Of Guid)
  fullName.vb: System.Nullable(Of System.Guid)
  name.vb: Nullable(Of Guid)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ShellRedirectParameters.AllowInstanceBounce*
  commentId: Overload:Microsoft.Health.ShellRedirectParameters.AllowInstanceBounce
  isExternal: false
  name: AllowInstanceBounce
  nameWithType: ShellRedirectParameters.AllowInstanceBounce
  fullName: Microsoft.Health.ShellRedirectParameters.AllowInstanceBounce
- uid: Microsoft.Health.ShellRedirectParameters.TokenRedirectionMethod*
  commentId: Overload:Microsoft.Health.ShellRedirectParameters.TokenRedirectionMethod
  isExternal: false
  name: TokenRedirectionMethod
  nameWithType: ShellRedirectParameters.TokenRedirectionMethod
  fullName: Microsoft.Health.ShellRedirectParameters.TokenRedirectionMethod
- uid: Microsoft.Health.ShellRedirectParameters.Clone*
  commentId: Overload:Microsoft.Health.ShellRedirectParameters.Clone
  isExternal: false
  name: Clone
  nameWithType: ShellRedirectParameters.Clone
  fullName: Microsoft.Health.ShellRedirectParameters.Clone
- uid: Microsoft.Health.ShellRedirectParameters.TargetLocation
  commentId: P:Microsoft.Health.ShellRedirectParameters.TargetLocation
- uid: Microsoft.Health.ShellRedirectParameters.ShellRedirectorUrl
  commentId: P:Microsoft.Health.ShellRedirectParameters.ShellRedirectorUrl
- uid: Microsoft.Health.ShellRedirectParameters.ConstructRedirectUrl*
  commentId: Overload:Microsoft.Health.ShellRedirectParameters.ConstructRedirectUrl
  isExternal: false
  name: ConstructRedirectUrl
  nameWithType: ShellRedirectParameters.ConstructRedirectUrl
  fullName: Microsoft.Health.ShellRedirectParameters.ConstructRedirectUrl
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: System.Configuration.ConfigurationException
  commentId: T:System.Configuration.ConfigurationException
- uid: System.UriFormatException
  commentId: T:System.UriFormatException
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Microsoft.Health.ShellRedirectParameters.ConstructRedirectorQueryString*
  commentId: Overload:Microsoft.Health.ShellRedirectParameters.ConstructRedirectorQueryString
  isExternal: false
  name: ConstructRedirectorQueryString
  nameWithType: ShellRedirectParameters.ConstructRedirectorQueryString
  fullName: Microsoft.Health.ShellRedirectParameters.ConstructRedirectorQueryString
- uid: Microsoft.Health.ShellRedirectParameters.ConstructTargetQueryString*
  commentId: Overload:Microsoft.Health.ShellRedirectParameters.ConstructTargetQueryString
  isExternal: false
  name: ConstructTargetQueryString
  nameWithType: ShellRedirectParameters.ConstructTargetQueryString
  fullName: Microsoft.Health.ShellRedirectParameters.ConstructTargetQueryString
