### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.ItemTypes.CarePlanGoal
  commentId: T:Microsoft.Health.ItemTypes.CarePlanGoal
  id: CarePlanGoal
  parent: Microsoft.Health.ItemTypes
  children:
  - Microsoft.Health.ItemTypes.CarePlanGoal.#ctor
  - Microsoft.Health.ItemTypes.CarePlanGoal.#ctor(Microsoft.Health.ItemTypes.CodableValue)
  - Microsoft.Health.ItemTypes.CarePlanGoal.Description
  - Microsoft.Health.ItemTypes.CarePlanGoal.EndDate
  - Microsoft.Health.ItemTypes.CarePlanGoal.GoalAdditionalRanges
  - Microsoft.Health.ItemTypes.CarePlanGoal.GoalAssociatedTypeInfo
  - Microsoft.Health.ItemTypes.CarePlanGoal.Name
  - Microsoft.Health.ItemTypes.CarePlanGoal.ParseXml(System.Xml.XPath.XPathNavigator)
  - Microsoft.Health.ItemTypes.CarePlanGoal.Recurrence
  - Microsoft.Health.ItemTypes.CarePlanGoal.ReferenceId
  - Microsoft.Health.ItemTypes.CarePlanGoal.StartDate
  - Microsoft.Health.ItemTypes.CarePlanGoal.TargetCompletionDate
  - Microsoft.Health.ItemTypes.CarePlanGoal.TargetRange
  - Microsoft.Health.ItemTypes.CarePlanGoal.ToString
  - Microsoft.Health.ItemTypes.CarePlanGoal.WriteXml(System.String,System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: CarePlanGoal
  nameWithType: CarePlanGoal
  fullName: Microsoft.Health.ItemTypes.CarePlanGoal
  type: Class
  source:
    remote:
      path: Microsoft.Health.ItemTypes/CarePlanGoal.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CarePlanGoal
    path: CarePlanGoal.cs
    startLine: 20
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nA goal defines a target for a measurement.\n"
  example: []
  syntax:
    content: 'public class CarePlanGoal : HealthRecordItemData'
    content.vb: >-
      Public Class CarePlanGoal
          Inherits HealthRecordItemData
  inheritance:
  - System.Object
  - Microsoft.Health.ItemTypes.HealthRecordItemData
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.ItemTypes.CarePlanGoal.#ctor
  commentId: M:Microsoft.Health.ItemTypes.CarePlanGoal.#ctor
  id: '#ctor'
  parent: Microsoft.Health.ItemTypes.CarePlanGoal
  langs:
  - csharp
  - vb
  name: CarePlanGoal()
  nameWithType: CarePlanGoal.CarePlanGoal()
  fullName: Microsoft.Health.ItemTypes.CarePlanGoal.CarePlanGoal()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/CarePlanGoal.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: CarePlanGoal.cs
    startLine: 26
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.CarePlanGoal\" data-throw-if-not-resolved=\"false\"></xref> class with default values.\n"
  example: []
  syntax:
    content: public CarePlanGoal()
    content.vb: Public Sub New
  overload: Microsoft.Health.ItemTypes.CarePlanGoal.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.CarePlanGoal.#ctor(Microsoft.Health.ItemTypes.CodableValue)
  commentId: M:Microsoft.Health.ItemTypes.CarePlanGoal.#ctor(Microsoft.Health.ItemTypes.CodableValue)
  id: '#ctor(Microsoft.Health.ItemTypes.CodableValue)'
  parent: Microsoft.Health.ItemTypes.CarePlanGoal
  langs:
  - csharp
  - vb
  name: CarePlanGoal(CodableValue)
  nameWithType: CarePlanGoal.CarePlanGoal(CodableValue)
  fullName: Microsoft.Health.ItemTypes.CarePlanGoal.CarePlanGoal(Microsoft.Health.ItemTypes.CodableValue)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/CarePlanGoal.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: CarePlanGoal.cs
    startLine: 43
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.CarePlanGoal\" data-throw-if-not-resolved=\"false\"></xref> class\nspecifying mandatory values.\n"
  example: []
  syntax:
    content: public CarePlanGoal(CodableValue name)
    content.vb: Public Sub New(name As CodableValue)
    parameters:
    - id: name
      type: Microsoft.Health.ItemTypes.CodableValue
      description: "\nName of the goal.\n"
  overload: Microsoft.Health.ItemTypes.CarePlanGoal.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nIf <span class=\"paramref\">name</span> is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.CarePlanGoal.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.CarePlanGoal.ParseXml(System.Xml.XPath.XPathNavigator)
  id: ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.CarePlanGoal
  langs:
  - csharp
  - vb
  name: ParseXml(XPathNavigator)
  nameWithType: CarePlanGoal.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.CarePlanGoal.ParseXml(System.Xml.XPath.XPathNavigator)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/CarePlanGoal.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ParseXml
    path: CarePlanGoal.cs
    startLine: 60
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nPopulates this <xref href=\"Microsoft.Health.ItemTypes.CarePlanGoal\" data-throw-if-not-resolved=\"false\"></xref> instance from the data in the specified XML.\n"
  example: []
  syntax:
    content: public override void ParseXml(XPathNavigator navigator)
    content.vb: Public Overrides Sub ParseXml(navigator As XPathNavigator)
    parameters:
    - id: navigator
      type: System.Xml.XPath.XPathNavigator
      description: "\nThe XML to get the CarePlanGoal data from.\n"
  overridden: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  overload: Microsoft.Health.ItemTypes.CarePlanGoal.ParseXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nIf <span class=\"paramref\">navigator</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.CarePlanGoal.WriteXml(System.String,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.CarePlanGoal.WriteXml(System.String,System.Xml.XmlWriter)
  id: WriteXml(System.String,System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.CarePlanGoal
  langs:
  - csharp
  - vb
  name: WriteXml(String, XmlWriter)
  nameWithType: CarePlanGoal.WriteXml(String, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.CarePlanGoal.WriteXml(System.String, System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/CarePlanGoal.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteXml
    path: CarePlanGoal.cs
    startLine: 110
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nWrites the XML representation of the CarePlanGoal into\nthe specified XML writer.\n"
  example: []
  syntax:
    content: public override void WriteXml(string nodeName, XmlWriter writer)
    content.vb: Public Overrides Sub WriteXml(nodeName As String, writer As XmlWriter)
    parameters:
    - id: nodeName
      type: System.String
      description: "\nThe name of the outer node for the medical image study series.\n"
    - id: writer
      type: System.Xml.XmlWriter
      description: "\nThe XML writer into which the CarePlanGoal should be\nwritten.\n"
  overridden: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  overload: Microsoft.Health.ItemTypes.CarePlanGoal.WriteXml*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nIf <span class=\"paramref\">nodeName</span> parameter is <strong>null</strong> or empty.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nIf <span class=\"paramref\">writer</span> parameter is <strong>null</strong>.\n"
  - type: Microsoft.Health.HealthRecordItemSerializationException
    commentId: T:Microsoft.Health.HealthRecordItemSerializationException
    description: "\nIf <xref href=\"Microsoft.Health.ItemTypes.CarePlanGoal.Name\" data-throw-if-not-resolved=\"false\"></xref> is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.CarePlanGoal.Name
  commentId: P:Microsoft.Health.ItemTypes.CarePlanGoal.Name
  id: Name
  parent: Microsoft.Health.ItemTypes.CarePlanGoal
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: CarePlanGoal.Name
  fullName: Microsoft.Health.ItemTypes.CarePlanGoal.Name
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/CarePlanGoal.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Name
    path: CarePlanGoal.cs
    startLine: 154
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets name of the goal.\n"
  remarks: "\nExample: average blood-glucose for the last seven days\n"
  example: []
  syntax:
    content: public CodableValue Name { get; set; }
    content.vb: Public Property Name As CodableValue
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.CodableValue
  overload: Microsoft.Health.ItemTypes.CarePlanGoal.Name*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">value</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.CarePlanGoal.Description
  commentId: P:Microsoft.Health.ItemTypes.CarePlanGoal.Description
  id: Description
  parent: Microsoft.Health.ItemTypes.CarePlanGoal
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: CarePlanGoal.Description
  fullName: Microsoft.Health.ItemTypes.CarePlanGoal.Description
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/CarePlanGoal.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Description
    path: CarePlanGoal.cs
    startLine: 183
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets description of the goal.\n"
  remarks: "\nIf there is no information about description the value should be set to <strong>null</strong>.\n"
  example: []
  syntax:
    content: public string Description { get; set; }
    content.vb: Public Property Description As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.ItemTypes.CarePlanGoal.Description*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">value</span> is empty or contains only whitespace.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.CarePlanGoal.StartDate
  commentId: P:Microsoft.Health.ItemTypes.CarePlanGoal.StartDate
  id: StartDate
  parent: Microsoft.Health.ItemTypes.CarePlanGoal
  langs:
  - csharp
  - vb
  name: StartDate
  nameWithType: CarePlanGoal.StartDate
  fullName: Microsoft.Health.ItemTypes.CarePlanGoal.StartDate
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/CarePlanGoal.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: StartDate
    path: CarePlanGoal.cs
    startLine: 223
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the start date of the goal.\n"
  remarks: "\nIf there is no information about startDate the value should be set to <strong>null</strong>.\n"
  example: []
  syntax:
    content: public ApproximateDateTime StartDate { get; set; }
    content.vb: Public Property StartDate As ApproximateDateTime
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.ApproximateDateTime
  overload: Microsoft.Health.ItemTypes.CarePlanGoal.StartDate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.CarePlanGoal.EndDate
  commentId: P:Microsoft.Health.ItemTypes.CarePlanGoal.EndDate
  id: EndDate
  parent: Microsoft.Health.ItemTypes.CarePlanGoal
  langs:
  - csharp
  - vb
  name: EndDate
  nameWithType: CarePlanGoal.EndDate
  fullName: Microsoft.Health.ItemTypes.CarePlanGoal.EndDate
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/CarePlanGoal.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: EndDate
    path: CarePlanGoal.cs
    startLine: 248
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the end date of the goal.\n"
  remarks: "\nIf there is no information about endDate the value should be set to <strong>null</strong>.\n"
  example: []
  syntax:
    content: public ApproximateDateTime EndDate { get; set; }
    content.vb: Public Property EndDate As ApproximateDateTime
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.ApproximateDateTime
  overload: Microsoft.Health.ItemTypes.CarePlanGoal.EndDate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.CarePlanGoal.TargetCompletionDate
  commentId: P:Microsoft.Health.ItemTypes.CarePlanGoal.TargetCompletionDate
  id: TargetCompletionDate
  parent: Microsoft.Health.ItemTypes.CarePlanGoal
  langs:
  - csharp
  - vb
  name: TargetCompletionDate
  nameWithType: CarePlanGoal.TargetCompletionDate
  fullName: Microsoft.Health.ItemTypes.CarePlanGoal.TargetCompletionDate
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/CarePlanGoal.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: TargetCompletionDate
    path: CarePlanGoal.cs
    startLine: 273
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the date user intends to complete the goal.\n"
  remarks: "\nIf there is no information about targetCompletionDate the value should be set to <strong>null</strong>.\n"
  example: []
  syntax:
    content: public ApproximateDateTime TargetCompletionDate { get; set; }
    content.vb: Public Property TargetCompletionDate As ApproximateDateTime
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.ApproximateDateTime
  overload: Microsoft.Health.ItemTypes.CarePlanGoal.TargetCompletionDate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.CarePlanGoal.GoalAssociatedTypeInfo
  commentId: P:Microsoft.Health.ItemTypes.CarePlanGoal.GoalAssociatedTypeInfo
  id: GoalAssociatedTypeInfo
  parent: Microsoft.Health.ItemTypes.CarePlanGoal
  langs:
  - csharp
  - vb
  name: GoalAssociatedTypeInfo
  nameWithType: CarePlanGoal.GoalAssociatedTypeInfo
  fullName: Microsoft.Health.ItemTypes.CarePlanGoal.GoalAssociatedTypeInfo
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/CarePlanGoal.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GoalAssociatedTypeInfo
    path: CarePlanGoal.cs
    startLine: 296
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets HealthVault type information related to this goal.\n"
  remarks: "\nIf there is no information about GoalAssociatedTypeInfo the value should be set to <strong>null</strong>.\n"
  example: []
  syntax:
    content: public AssociatedTypeInfo GoalAssociatedTypeInfo { get; set; }
    content.vb: Public Property GoalAssociatedTypeInfo As AssociatedTypeInfo
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.AssociatedTypeInfo
  overload: Microsoft.Health.ItemTypes.CarePlanGoal.GoalAssociatedTypeInfo*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.CarePlanGoal.TargetRange
  commentId: P:Microsoft.Health.ItemTypes.CarePlanGoal.TargetRange
  id: TargetRange
  parent: Microsoft.Health.ItemTypes.CarePlanGoal
  langs:
  - csharp
  - vb
  name: TargetRange
  nameWithType: CarePlanGoal.TargetRange
  fullName: Microsoft.Health.ItemTypes.CarePlanGoal.TargetRange
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/CarePlanGoal.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: TargetRange
    path: CarePlanGoal.cs
    startLine: 320
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the target range for the goal.\n"
  remarks: "\nThis represents the ideal range for a goal, for example, the ideal weight, or the ideal blood pressure.\nIf there is no information about targetRange the value should be set to <strong>null</strong>.\n"
  example: []
  syntax:
    content: public GoalRange TargetRange { get; set; }
    content.vb: Public Property TargetRange As GoalRange
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.GoalRange
  overload: Microsoft.Health.ItemTypes.CarePlanGoal.TargetRange*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.CarePlanGoal.GoalAdditionalRanges
  commentId: P:Microsoft.Health.ItemTypes.CarePlanGoal.GoalAdditionalRanges
  id: GoalAdditionalRanges
  parent: Microsoft.Health.ItemTypes.CarePlanGoal
  langs:
  - csharp
  - vb
  name: GoalAdditionalRanges
  nameWithType: CarePlanGoal.GoalAdditionalRanges
  fullName: Microsoft.Health.ItemTypes.CarePlanGoal.GoalAdditionalRanges
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/CarePlanGoal.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GoalAdditionalRanges
    path: CarePlanGoal.cs
    startLine: 344
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets additional ranges for the goal.\n"
  remarks: "\nFor example, in a blood pressure goal, it may be useful to include the 'hypertensive' range in addition to the ideal range.\nIf there is no information about goalAdditionalRanges the collection should be empty.\n"
  example: []
  syntax:
    content: public Collection<GoalRange> GoalAdditionalRanges { get; }
    content.vb: Public ReadOnly Property GoalAdditionalRanges As Collection(Of GoalRange)
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{Microsoft.Health.ItemTypes.GoalRange}
  overload: Microsoft.Health.ItemTypes.CarePlanGoal.GoalAdditionalRanges*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.ItemTypes.CarePlanGoal.Recurrence
  commentId: P:Microsoft.Health.ItemTypes.CarePlanGoal.Recurrence
  id: Recurrence
  parent: Microsoft.Health.ItemTypes.CarePlanGoal
  langs:
  - csharp
  - vb
  name: Recurrence
  nameWithType: CarePlanGoal.Recurrence
  fullName: Microsoft.Health.ItemTypes.CarePlanGoal.Recurrence
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/CarePlanGoal.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Recurrence
    path: CarePlanGoal.cs
    startLine: 360
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets recurrence for goals.\n"
  remarks: "\nA goal can be defined to be achieved every specific interval. Example, walking 70000 steps in a week.\nIf there is no information about recurrence the value should be set to <strong>null</strong>.\n"
  example: []
  syntax:
    content: public GoalRecurrence Recurrence { get; set; }
    content.vb: Public Property Recurrence As GoalRecurrence
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.GoalRecurrence
  overload: Microsoft.Health.ItemTypes.CarePlanGoal.Recurrence*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.CarePlanGoal.ReferenceId
  commentId: P:Microsoft.Health.ItemTypes.CarePlanGoal.ReferenceId
  id: ReferenceId
  parent: Microsoft.Health.ItemTypes.CarePlanGoal
  langs:
  - csharp
  - vb
  name: ReferenceId
  nameWithType: CarePlanGoal.ReferenceId
  fullName: Microsoft.Health.ItemTypes.CarePlanGoal.ReferenceId
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/CarePlanGoal.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ReferenceId
    path: CarePlanGoal.cs
    startLine: 387
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets an unique id to distinguish one goal from another.\n"
  remarks: "\nIf there is no information about referenceId the value should be set to <strong>null</strong>.\n"
  example: []
  syntax:
    content: public string ReferenceId { get; set; }
    content.vb: Public Property ReferenceId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.ItemTypes.CarePlanGoal.ReferenceId*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">value</span> contains only whitespace.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.CarePlanGoal.ToString
  commentId: M:Microsoft.Health.ItemTypes.CarePlanGoal.ToString
  id: ToString
  parent: Microsoft.Health.ItemTypes.CarePlanGoal
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: CarePlanGoal.ToString()
  fullName: Microsoft.Health.ItemTypes.CarePlanGoal.ToString()
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/CarePlanGoal.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ToString
    path: CarePlanGoal.cs
    startLine: 411
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets a string representation of the CarePlanGoal.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\nA string representation of the CarePlanGoal.\n"
  overridden: System.Object.ToString
  overload: Microsoft.Health.ItemTypes.CarePlanGoal.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Health.ItemTypes
  commentId: N:Microsoft.Health.ItemTypes
  isExternal: false
  name: Microsoft.Health.ItemTypes
  nameWithType: Microsoft.Health.ItemTypes
  fullName: Microsoft.Health.ItemTypes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData
  commentId: T:Microsoft.Health.ItemTypes.HealthRecordItemData
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: HealthRecordItemData
  nameWithType: HealthRecordItemData
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.ItemTypes.CarePlanGoal
  commentId: T:Microsoft.Health.ItemTypes.CarePlanGoal
  isExternal: false
  name: CarePlanGoal
  nameWithType: CarePlanGoal
  fullName: Microsoft.Health.ItemTypes.CarePlanGoal
- uid: Microsoft.Health.ItemTypes.CarePlanGoal.#ctor*
  commentId: Overload:Microsoft.Health.ItemTypes.CarePlanGoal.#ctor
  isExternal: false
  name: CarePlanGoal
  nameWithType: CarePlanGoal.CarePlanGoal
  fullName: Microsoft.Health.ItemTypes.CarePlanGoal.CarePlanGoal
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: Microsoft.Health.ItemTypes.CodableValue
  commentId: T:Microsoft.Health.ItemTypes.CodableValue
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: CodableValue
  nameWithType: CodableValue
  fullName: Microsoft.Health.ItemTypes.CodableValue
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.HealthRecordItemData
  isExternal: true
  name: ParseXml(XPathNavigator)
  nameWithType: HealthRecordItemData.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: HealthRecordItemData.ParseXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: HealthRecordItemData.ParseXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.CarePlanGoal.ParseXml*
  commentId: Overload:Microsoft.Health.ItemTypes.CarePlanGoal.ParseXml
  isExternal: false
  name: ParseXml
  nameWithType: CarePlanGoal.ParseXml
  fullName: Microsoft.Health.ItemTypes.CarePlanGoal.ParseXml
- uid: System.Xml.XPath.XPathNavigator
  commentId: T:System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: true
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: false
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: Microsoft.Health.ItemTypes.CarePlanGoal.Name
  commentId: P:Microsoft.Health.ItemTypes.CarePlanGoal.Name
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.HealthRecordItemData
  isExternal: true
  name: WriteXml(String, XmlWriter)
  nameWithType: HealthRecordItemData.WriteXml(String, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String, System.Xml.XmlWriter)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItemData.WriteXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItemData.WriteXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.CarePlanGoal.WriteXml*
  commentId: Overload:Microsoft.Health.ItemTypes.CarePlanGoal.WriteXml
  isExternal: false
  name: WriteXml
  nameWithType: CarePlanGoal.WriteXml
  fullName: Microsoft.Health.ItemTypes.CarePlanGoal.WriteXml
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: Microsoft.Health.HealthRecordItemSerializationException
  commentId: T:Microsoft.Health.HealthRecordItemSerializationException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: Microsoft.Health.ItemTypes.CarePlanGoal.Name*
  commentId: Overload:Microsoft.Health.ItemTypes.CarePlanGoal.Name
  isExternal: false
  name: Name
  nameWithType: CarePlanGoal.Name
  fullName: Microsoft.Health.ItemTypes.CarePlanGoal.Name
- uid: Microsoft.Health.ItemTypes.CarePlanGoal.Description*
  commentId: Overload:Microsoft.Health.ItemTypes.CarePlanGoal.Description
  isExternal: false
  name: Description
  nameWithType: CarePlanGoal.Description
  fullName: Microsoft.Health.ItemTypes.CarePlanGoal.Description
- uid: Microsoft.Health.ItemTypes.CarePlanGoal.StartDate*
  commentId: Overload:Microsoft.Health.ItemTypes.CarePlanGoal.StartDate
  isExternal: false
  name: StartDate
  nameWithType: CarePlanGoal.StartDate
  fullName: Microsoft.Health.ItemTypes.CarePlanGoal.StartDate
- uid: Microsoft.Health.ItemTypes.ApproximateDateTime
  commentId: T:Microsoft.Health.ItemTypes.ApproximateDateTime
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: ApproximateDateTime
  nameWithType: ApproximateDateTime
  fullName: Microsoft.Health.ItemTypes.ApproximateDateTime
- uid: Microsoft.Health.ItemTypes.CarePlanGoal.EndDate*
  commentId: Overload:Microsoft.Health.ItemTypes.CarePlanGoal.EndDate
  isExternal: false
  name: EndDate
  nameWithType: CarePlanGoal.EndDate
  fullName: Microsoft.Health.ItemTypes.CarePlanGoal.EndDate
- uid: Microsoft.Health.ItemTypes.CarePlanGoal.TargetCompletionDate*
  commentId: Overload:Microsoft.Health.ItemTypes.CarePlanGoal.TargetCompletionDate
  isExternal: false
  name: TargetCompletionDate
  nameWithType: CarePlanGoal.TargetCompletionDate
  fullName: Microsoft.Health.ItemTypes.CarePlanGoal.TargetCompletionDate
- uid: Microsoft.Health.ItemTypes.CarePlanGoal.GoalAssociatedTypeInfo*
  commentId: Overload:Microsoft.Health.ItemTypes.CarePlanGoal.GoalAssociatedTypeInfo
  isExternal: false
  name: GoalAssociatedTypeInfo
  nameWithType: CarePlanGoal.GoalAssociatedTypeInfo
  fullName: Microsoft.Health.ItemTypes.CarePlanGoal.GoalAssociatedTypeInfo
- uid: Microsoft.Health.ItemTypes.AssociatedTypeInfo
  commentId: T:Microsoft.Health.ItemTypes.AssociatedTypeInfo
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: AssociatedTypeInfo
  nameWithType: AssociatedTypeInfo
  fullName: Microsoft.Health.ItemTypes.AssociatedTypeInfo
- uid: Microsoft.Health.ItemTypes.CarePlanGoal.TargetRange*
  commentId: Overload:Microsoft.Health.ItemTypes.CarePlanGoal.TargetRange
  isExternal: false
  name: TargetRange
  nameWithType: CarePlanGoal.TargetRange
  fullName: Microsoft.Health.ItemTypes.CarePlanGoal.TargetRange
- uid: Microsoft.Health.ItemTypes.GoalRange
  commentId: T:Microsoft.Health.ItemTypes.GoalRange
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: GoalRange
  nameWithType: GoalRange
  fullName: Microsoft.Health.ItemTypes.GoalRange
- uid: Microsoft.Health.ItemTypes.CarePlanGoal.GoalAdditionalRanges*
  commentId: Overload:Microsoft.Health.ItemTypes.CarePlanGoal.GoalAdditionalRanges
  isExternal: false
  name: GoalAdditionalRanges
  nameWithType: CarePlanGoal.GoalAdditionalRanges
  fullName: Microsoft.Health.ItemTypes.CarePlanGoal.GoalAdditionalRanges
- uid: System.Collections.ObjectModel.Collection{Microsoft.Health.ItemTypes.GoalRange}
  commentId: T:System.Collections.ObjectModel.Collection{Microsoft.Health.ItemTypes.GoalRange}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<GoalRange>
  nameWithType: Collection<GoalRange>
  fullName: System.Collections.ObjectModel.Collection<Microsoft.Health.ItemTypes.GoalRange>
  nameWithType.vb: Collection(Of GoalRange)
  fullName.vb: System.Collections.ObjectModel.Collection(Of Microsoft.Health.ItemTypes.GoalRange)
  name.vb: Collection(Of GoalRange)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.ItemTypes.GoalRange
    name: GoalRange
    nameWithType: GoalRange
    fullName: Microsoft.Health.ItemTypes.GoalRange
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.ItemTypes.GoalRange
    name: GoalRange
    nameWithType: GoalRange
    fullName: Microsoft.Health.ItemTypes.GoalRange
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1
  commentId: T:System.Collections.ObjectModel.Collection`1
  isExternal: true
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  nameWithType.vb: Collection(Of T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T)
  name.vb: Collection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: Microsoft.Health.ItemTypes.CarePlanGoal.Recurrence*
  commentId: Overload:Microsoft.Health.ItemTypes.CarePlanGoal.Recurrence
  isExternal: false
  name: Recurrence
  nameWithType: CarePlanGoal.Recurrence
  fullName: Microsoft.Health.ItemTypes.CarePlanGoal.Recurrence
- uid: Microsoft.Health.ItemTypes.GoalRecurrence
  commentId: T:Microsoft.Health.ItemTypes.GoalRecurrence
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: GoalRecurrence
  nameWithType: GoalRecurrence
  fullName: Microsoft.Health.ItemTypes.GoalRecurrence
- uid: Microsoft.Health.ItemTypes.CarePlanGoal.ReferenceId*
  commentId: Overload:Microsoft.Health.ItemTypes.CarePlanGoal.ReferenceId
  isExternal: false
  name: ReferenceId
  nameWithType: CarePlanGoal.ReferenceId
  fullName: Microsoft.Health.ItemTypes.CarePlanGoal.ReferenceId
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.CarePlanGoal.ToString*
  commentId: Overload:Microsoft.Health.ItemTypes.CarePlanGoal.ToString
  isExternal: false
  name: ToString
  nameWithType: CarePlanGoal.ToString
  fullName: Microsoft.Health.ItemTypes.CarePlanGoal.ToString
