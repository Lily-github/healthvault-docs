### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.ItemTypes.ExerciseSampleOneValue
  commentId: T:Microsoft.Health.ItemTypes.ExerciseSampleOneValue
  id: ExerciseSampleOneValue
  parent: Microsoft.Health.ItemTypes
  children:
  - Microsoft.Health.ItemTypes.ExerciseSampleOneValue.#ctor(System.Double,System.Double)
  - Microsoft.Health.ItemTypes.ExerciseSampleOneValue.OffsetInSeconds
  - Microsoft.Health.ItemTypes.ExerciseSampleOneValue.ToString
  - Microsoft.Health.ItemTypes.ExerciseSampleOneValue.Value
  langs:
  - csharp
  - vb
  name: ExerciseSampleOneValue
  nameWithType: ExerciseSampleOneValue
  fullName: Microsoft.Health.ItemTypes.ExerciseSampleOneValue
  type: Class
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ExerciseSampleOneValue.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ExerciseSampleOneValue
    path: ExerciseSampleOneValue.cs
    startLine: 14
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nA exercise sample that contains one data value.\n"
  example: []
  syntax:
    content: public class ExerciseSampleOneValue
    content.vb: Public Class ExerciseSampleOneValue
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.ItemTypes.ExerciseSampleOneValue.#ctor(System.Double,System.Double)
  commentId: M:Microsoft.Health.ItemTypes.ExerciseSampleOneValue.#ctor(System.Double,System.Double)
  id: '#ctor(System.Double,System.Double)'
  parent: Microsoft.Health.ItemTypes.ExerciseSampleOneValue
  langs:
  - csharp
  - vb
  name: ExerciseSampleOneValue(Double, Double)
  nameWithType: ExerciseSampleOneValue.ExerciseSampleOneValue(Double, Double)
  fullName: Microsoft.Health.ItemTypes.ExerciseSampleOneValue.ExerciseSampleOneValue(System.Double, System.Double)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ExerciseSampleOneValue.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ExerciseSampleOneValue.cs
    startLine: 21
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreate an instance of the <xref href=\"Microsoft.Health.ItemTypes.ExerciseSampleOneValue\" data-throw-if-not-resolved=\"false\"></xref> type with the specified values.\n"
  example: []
  syntax:
    content: public ExerciseSampleOneValue(double offsetInSeconds, double value)
    content.vb: Public Sub New(offsetInSeconds As Double, value As Double)
    parameters:
    - id: offsetInSeconds
      type: System.Double
      description: The offset of this sample from the beginning of the sample set.
    - id: value
      type: System.Double
      description: The data value of this sample.
  overload: Microsoft.Health.ItemTypes.ExerciseSampleOneValue.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.ExerciseSampleOneValue.OffsetInSeconds
  commentId: P:Microsoft.Health.ItemTypes.ExerciseSampleOneValue.OffsetInSeconds
  id: OffsetInSeconds
  parent: Microsoft.Health.ItemTypes.ExerciseSampleOneValue
  langs:
  - csharp
  - vb
  name: OffsetInSeconds
  nameWithType: ExerciseSampleOneValue.OffsetInSeconds
  fullName: Microsoft.Health.ItemTypes.ExerciseSampleOneValue.OffsetInSeconds
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ExerciseSampleOneValue.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: OffsetInSeconds
    path: ExerciseSampleOneValue.cs
    startLine: 40
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the offset in seconds of this data sample from the beginning of the sample set. \n"
  example: []
  syntax:
    content: public double OffsetInSeconds { get; set; }
    content.vb: Public Property OffsetInSeconds As Double
    parameters: []
    return:
      type: System.Double
      description: "\nThe offset in seconds.\n"
  overload: Microsoft.Health.ItemTypes.ExerciseSampleOneValue.OffsetInSeconds*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nThe <span class=\"paramref\">OffsetInSeconds</span> value is less than zero.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.ExerciseSampleOneValue.Value
  commentId: P:Microsoft.Health.ItemTypes.ExerciseSampleOneValue.Value
  id: Value
  parent: Microsoft.Health.ItemTypes.ExerciseSampleOneValue
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: ExerciseSampleOneValue.Value
  fullName: Microsoft.Health.ItemTypes.ExerciseSampleOneValue.Value
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ExerciseSampleOneValue.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Value
    path: ExerciseSampleOneValue.cs
    startLine: 58
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the data value stored in the sample.\n"
  example: []
  syntax:
    content: public double Value { get; set; }
    content.vb: Public Property Value As Double
    parameters: []
    return:
      type: System.Double
  overload: Microsoft.Health.ItemTypes.ExerciseSampleOneValue.Value*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.ExerciseSampleOneValue.ToString
  commentId: M:Microsoft.Health.ItemTypes.ExerciseSampleOneValue.ToString
  id: ToString
  parent: Microsoft.Health.ItemTypes.ExerciseSampleOneValue
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ExerciseSampleOneValue.ToString()
  fullName: Microsoft.Health.ItemTypes.ExerciseSampleOneValue.ToString()
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ExerciseSampleOneValue.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ToString
    path: ExerciseSampleOneValue.cs
    startLine: 67
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets a string representation of the sample.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  overridden: System.Object.ToString
  overload: Microsoft.Health.ItemTypes.ExerciseSampleOneValue.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Health.ItemTypes
  commentId: N:Microsoft.Health.ItemTypes
  isExternal: false
  name: Microsoft.Health.ItemTypes
  nameWithType: Microsoft.Health.ItemTypes
  fullName: Microsoft.Health.ItemTypes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.ItemTypes.ExerciseSampleOneValue
  commentId: T:Microsoft.Health.ItemTypes.ExerciseSampleOneValue
  isExternal: false
  name: ExerciseSampleOneValue
  nameWithType: ExerciseSampleOneValue
  fullName: Microsoft.Health.ItemTypes.ExerciseSampleOneValue
- uid: Microsoft.Health.ItemTypes.ExerciseSampleOneValue.#ctor*
  commentId: Overload:Microsoft.Health.ItemTypes.ExerciseSampleOneValue.#ctor
  isExternal: false
  name: ExerciseSampleOneValue
  nameWithType: ExerciseSampleOneValue.ExerciseSampleOneValue
  fullName: Microsoft.Health.ItemTypes.ExerciseSampleOneValue.ExerciseSampleOneValue
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Microsoft.Health.ItemTypes.ExerciseSampleOneValue.OffsetInSeconds*
  commentId: Overload:Microsoft.Health.ItemTypes.ExerciseSampleOneValue.OffsetInSeconds
  isExternal: false
  name: OffsetInSeconds
  nameWithType: ExerciseSampleOneValue.OffsetInSeconds
  fullName: Microsoft.Health.ItemTypes.ExerciseSampleOneValue.OffsetInSeconds
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
- uid: Microsoft.Health.ItemTypes.ExerciseSampleOneValue.Value*
  commentId: Overload:Microsoft.Health.ItemTypes.ExerciseSampleOneValue.Value
  isExternal: false
  name: Value
  nameWithType: ExerciseSampleOneValue.Value
  fullName: Microsoft.Health.ItemTypes.ExerciseSampleOneValue.Value
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.ExerciseSampleOneValue.ToString*
  commentId: Overload:Microsoft.Health.ItemTypes.ExerciseSampleOneValue.ToString
  isExternal: false
  name: ToString
  nameWithType: ExerciseSampleOneValue.ToString
  fullName: Microsoft.Health.ItemTypes.ExerciseSampleOneValue.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
