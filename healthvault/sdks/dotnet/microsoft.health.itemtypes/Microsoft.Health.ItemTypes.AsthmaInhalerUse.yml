### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.ItemTypes.AsthmaInhalerUse
  commentId: T:Microsoft.Health.ItemTypes.AsthmaInhalerUse
  id: AsthmaInhalerUse
  parent: Microsoft.Health.ItemTypes
  children:
  - Microsoft.Health.ItemTypes.AsthmaInhalerUse.#ctor
  - Microsoft.Health.ItemTypes.AsthmaInhalerUse.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime,Microsoft.Health.ItemTypes.CodableValue,System.Int32)
  - Microsoft.Health.ItemTypes.AsthmaInhalerUse.DeviceId
  - Microsoft.Health.ItemTypes.AsthmaInhalerUse.DoseCount
  - Microsoft.Health.ItemTypes.AsthmaInhalerUse.DosePurpose
  - Microsoft.Health.ItemTypes.AsthmaInhalerUse.Drug
  - Microsoft.Health.ItemTypes.AsthmaInhalerUse.ParseXml(System.Xml.XPath.IXPathNavigable)
  - Microsoft.Health.ItemTypes.AsthmaInhalerUse.Strength
  - Microsoft.Health.ItemTypes.AsthmaInhalerUse.ToString
  - Microsoft.Health.ItemTypes.AsthmaInhalerUse.TypeId
  - Microsoft.Health.ItemTypes.AsthmaInhalerUse.When
  - Microsoft.Health.ItemTypes.AsthmaInhalerUse.WriteXml(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: AsthmaInhalerUse
  nameWithType: AsthmaInhalerUse
  fullName: Microsoft.Health.ItemTypes.AsthmaInhalerUse
  type: Class
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AsthmaInhalerUse.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AsthmaInhalerUse
    path: AsthmaInhalerUse.cs
    startLine: 26
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nRepresents a health record item type that encapsulates a single use of \nan asthma inhaler.\n"
  remarks: "\nA single use can consist of multiple doses if the prescription\ncalls for it.\n"
  example: []
  syntax:
    content: 'public class AsthmaInhalerUse : HealthRecordItem'
    content.vb: >-
      Public Class AsthmaInhalerUse
          Inherits HealthRecordItem
  inheritance:
  - System.Object
  - Microsoft.Health.HealthRecordItem
  inheritedMembers:
  - Microsoft.Health.HealthRecordItem.Sign(System.Security.Cryptography.X509Certificates.X509Certificate2)
  - Microsoft.Health.HealthRecordItem.IsSignatureValid
  - Microsoft.Health.HealthRecordItem.ValidateCertificate
  - Microsoft.Health.HealthRecordItem.Key
  - Microsoft.Health.HealthRecordItem.TypeName
  - Microsoft.Health.HealthRecordItem.EffectiveDate
  - Microsoft.Health.HealthRecordItem.State
  - Microsoft.Health.HealthRecordItem.Flags
  - Microsoft.Health.HealthRecordItem.IsPersonal
  - Microsoft.Health.HealthRecordItem.IsDownVersioned
  - Microsoft.Health.HealthRecordItem.IsUpVersioned
  - Microsoft.Health.HealthRecordItem.UpdatedEndDate
  - Microsoft.Health.HealthRecordItem.LastUpdated
  - Microsoft.Health.HealthRecordItem.Created
  - Microsoft.Health.HealthRecordItem.EffectivePermissions
  - Microsoft.Health.HealthRecordItem.IsImmutable
  - Microsoft.Health.HealthRecordItem.IsReadOnly
  - Microsoft.Health.HealthRecordItem.TypeSpecificData
  - Microsoft.Health.HealthRecordItem.TransformedXmlData
  - Microsoft.Health.HealthRecordItem.CommonData
  - Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.HealthRecordAccessor)
  - Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.Package.ConnectPackageCreationParameters)
  - Microsoft.Health.HealthRecordItem.Tags
  - Microsoft.Health.HealthRecordItem.HealthRecordItemSignatures
  - Microsoft.Health.HealthRecordItem.Sections
  - Microsoft.Health.HealthRecordItem.GetSizeInBytes
  - Microsoft.Health.HealthRecordItem.GetItemXml
  - Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections)
  - Microsoft.Health.HealthRecordItem.GetItemXml(System.String)
  - Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections,System.String)
  - Microsoft.Health.HealthRecordItem.Serialize
  - Microsoft.Health.HealthRecordItem.Deserialize(System.String)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.ItemTypes.AsthmaInhalerUse.#ctor
  commentId: M:Microsoft.Health.ItemTypes.AsthmaInhalerUse.#ctor
  id: '#ctor'
  parent: Microsoft.Health.ItemTypes.AsthmaInhalerUse
  langs:
  - csharp
  - vb
  name: AsthmaInhalerUse()
  nameWithType: AsthmaInhalerUse.AsthmaInhalerUse()
  fullName: Microsoft.Health.ItemTypes.AsthmaInhalerUse.AsthmaInhalerUse()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AsthmaInhalerUse.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: AsthmaInhalerUse.cs
    startLine: 38
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.AsthmaInhalerUse\" data-throw-if-not-resolved=\"false\"></xref> class with default values.\n"
  remarks: "\nThe item is not added to the health record until the\n<xref href=\"Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)\" data-throw-if-not-resolved=\"false\"></xref> method \nis called.\n"
  example: []
  syntax:
    content: public AsthmaInhalerUse()
    content.vb: Public Sub New
  overload: Microsoft.Health.ItemTypes.AsthmaInhalerUse.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.AsthmaInhalerUse.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime,Microsoft.Health.ItemTypes.CodableValue,System.Int32)
  commentId: M:Microsoft.Health.ItemTypes.AsthmaInhalerUse.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime,Microsoft.Health.ItemTypes.CodableValue,System.Int32)
  id: '#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime,Microsoft.Health.ItemTypes.CodableValue,System.Int32)'
  parent: Microsoft.Health.ItemTypes.AsthmaInhalerUse
  langs:
  - csharp
  - vb
  name: AsthmaInhalerUse(HealthServiceDateTime, CodableValue, Int32)
  nameWithType: AsthmaInhalerUse.AsthmaInhalerUse(HealthServiceDateTime, CodableValue, Int32)
  fullName: Microsoft.Health.ItemTypes.AsthmaInhalerUse.AsthmaInhalerUse(Microsoft.Health.ItemTypes.HealthServiceDateTime, Microsoft.Health.ItemTypes.CodableValue, System.Int32)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AsthmaInhalerUse.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: AsthmaInhalerUse.cs
    startLine: 68
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.AsthmaInhalerUse\" data-throw-if-not-resolved=\"false\"></xref> class \nspecifying the mandatory values.\n"
  example: []
  syntax:
    content: public AsthmaInhalerUse(HealthServiceDateTime when, CodableValue drug, int doseCount)
    content.vb: Public Sub New(when As HealthServiceDateTime, drug As CodableValue, doseCount As Integer)
    parameters:
    - id: when
      type: Microsoft.Health.ItemTypes.HealthServiceDateTime
      description: "\nThe date/time when the inhaler was used.\n"
    - id: drug
      type: Microsoft.Health.ItemTypes.CodableValue
      description: "\nThe name of the drug being used in the inhaler.\n"
    - id: doseCount
      type: System.Int32
      description: "\nThe count of doses for each inhaler use.\n"
  overload: Microsoft.Health.ItemTypes.AsthmaInhalerUse.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">when</span> parameter is <strong>null</strong>.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">drug</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.AsthmaInhalerUse.TypeId
  commentId: F:Microsoft.Health.ItemTypes.AsthmaInhalerUse.TypeId
  id: TypeId
  parent: Microsoft.Health.ItemTypes.AsthmaInhalerUse
  langs:
  - csharp
  - vb
  name: TypeId
  nameWithType: AsthmaInhalerUse.TypeId
  fullName: Microsoft.Health.ItemTypes.AsthmaInhalerUse.TypeId
  type: Field
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AsthmaInhalerUse.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: TypeId
    path: AsthmaInhalerUse.cs
    startLine: 84
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nRetrieves the unique identifier for the item type.\n"
  example: []
  syntax:
    content: public static readonly Guid TypeId
    content.vb: Public Shared ReadOnly TypeId As Guid
    return:
      type: System.Guid
      description: "\nA GUID.\n"
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Health.ItemTypes.AsthmaInhalerUse.ParseXml(System.Xml.XPath.IXPathNavigable)
  commentId: M:Microsoft.Health.ItemTypes.AsthmaInhalerUse.ParseXml(System.Xml.XPath.IXPathNavigable)
  id: ParseXml(System.Xml.XPath.IXPathNavigable)
  parent: Microsoft.Health.ItemTypes.AsthmaInhalerUse
  langs:
  - csharp
  - vb
  name: ParseXml(IXPathNavigable)
  nameWithType: AsthmaInhalerUse.ParseXml(IXPathNavigable)
  fullName: Microsoft.Health.ItemTypes.AsthmaInhalerUse.ParseXml(System.Xml.XPath.IXPathNavigable)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AsthmaInhalerUse.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ParseXml
    path: AsthmaInhalerUse.cs
    startLine: 100
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nPopulates this <xref href=\"Microsoft.Health.ItemTypes.AsthmaInhalerUse\" data-throw-if-not-resolved=\"false\"></xref> instance from the data in the XML.\n"
  example: []
  syntax:
    content: protected override void ParseXml(IXPathNavigable typeSpecificXml)
    content.vb: Protected Overrides Sub ParseXml(typeSpecificXml As IXPathNavigable)
    parameters:
    - id: typeSpecificXml
      type: System.Xml.XPath.IXPathNavigable
      description: "\nThe XML to get the asthma inhaler use data from.\n"
  overridden: Microsoft.Health.HealthRecordItem.ParseXml(System.Xml.XPath.IXPathNavigable)
  overload: Microsoft.Health.ItemTypes.AsthmaInhalerUse.ParseXml*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nThe first node in <span class=\"paramref\">typeSpecificXml</span> is not\nan asthma-inhaler-use node.\n"
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Health.ItemTypes.AsthmaInhalerUse.WriteXml(System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.AsthmaInhalerUse.WriteXml(System.Xml.XmlWriter)
  id: WriteXml(System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.AsthmaInhalerUse
  langs:
  - csharp
  - vb
  name: WriteXml(XmlWriter)
  nameWithType: AsthmaInhalerUse.WriteXml(XmlWriter)
  fullName: Microsoft.Health.ItemTypes.AsthmaInhalerUse.WriteXml(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AsthmaInhalerUse.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteXml
    path: AsthmaInhalerUse.cs
    startLine: 156
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nWrites the asthma inhaler use data to the specified XmlWriter.\n"
  example: []
  syntax:
    content: public override void WriteXml(XmlWriter writer)
    content.vb: Public Overrides Sub WriteXml(writer As XmlWriter)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "\nThe XmlWriter to write the asthma inhaler use data to.\n"
  overridden: Microsoft.Health.HealthRecordItem.WriteXml(System.Xml.XmlWriter)
  overload: Microsoft.Health.ItemTypes.AsthmaInhalerUse.WriteXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nIf <span class=\"paramref\">writer</span> is <strong>null</strong>.\n"
  - type: Microsoft.Health.HealthRecordItemSerializationException
    commentId: T:Microsoft.Health.HealthRecordItemSerializationException
    description: "\nThe <xref href=\"Microsoft.Health.ItemTypes.AsthmaInhalerUse.When\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Microsoft.Health.ItemTypes.AsthmaInhalerUse.DoseCount\" data-throw-if-not-resolved=\"false\"></xref>, or\n<xref href=\"Microsoft.Health.ItemTypes.AsthmaInhalerUse.Drug\" data-throw-if-not-resolved=\"false\"></xref> property is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.AsthmaInhalerUse.When
  commentId: P:Microsoft.Health.ItemTypes.AsthmaInhalerUse.When
  id: When
  parent: Microsoft.Health.ItemTypes.AsthmaInhalerUse
  langs:
  - csharp
  - vb
  name: When
  nameWithType: AsthmaInhalerUse.When
  fullName: Microsoft.Health.ItemTypes.AsthmaInhalerUse.When
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AsthmaInhalerUse.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: When
    path: AsthmaInhalerUse.cs
    startLine: 212
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the date when the inhaler use occurred.\n"
  example: []
  syntax:
    content: public HealthServiceDateTime When { get; set; }
    content.vb: Public Property When As HealthServiceDateTime
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.HealthServiceDateTime
      description: "\nA <xref href=\"Microsoft.Health.ItemTypes.HealthServiceDateTime\" data-throw-if-not-resolved=\"false\"></xref> instance representing \nthe date. The default value is the current year, month, and day.\n"
  overload: Microsoft.Health.ItemTypes.AsthmaInhalerUse.When*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">value</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.AsthmaInhalerUse.Drug
  commentId: P:Microsoft.Health.ItemTypes.AsthmaInhalerUse.Drug
  id: Drug
  parent: Microsoft.Health.ItemTypes.AsthmaInhalerUse
  langs:
  - csharp
  - vb
  name: Drug
  nameWithType: AsthmaInhalerUse.Drug
  fullName: Microsoft.Health.ItemTypes.AsthmaInhalerUse.Drug
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AsthmaInhalerUse.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Drug
    path: AsthmaInhalerUse.cs
    startLine: 240
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the drug being used in the inhaler.\n"
  remarks: "\nThe name of the drug in the canister.\n"
  example: []
  syntax:
    content: public CodableValue Drug { get; set; }
    content.vb: Public Property Drug As CodableValue
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.CodableValue
      description: "\nA <xref href=\"Microsoft.Health.ItemTypes.CodableValue\" data-throw-if-not-resolved=\"false\"></xref> instance representing the \ndrug.\n"
  overload: Microsoft.Health.ItemTypes.AsthmaInhalerUse.Drug*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">value</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.AsthmaInhalerUse.Strength
  commentId: P:Microsoft.Health.ItemTypes.AsthmaInhalerUse.Strength
  id: Strength
  parent: Microsoft.Health.ItemTypes.AsthmaInhalerUse
  langs:
  - csharp
  - vb
  name: Strength
  nameWithType: AsthmaInhalerUse.Strength
  fullName: Microsoft.Health.ItemTypes.AsthmaInhalerUse.Strength
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AsthmaInhalerUse.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Strength
    path: AsthmaInhalerUse.cs
    startLine: 263
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the strength of the dosage for each inhaler use.\n"
  remarks: "\nSet the value to <strong>null</strong> if the strength should not be stored.\n"
  example: []
  syntax:
    content: public CodableValue Strength { get; set; }
    content.vb: Public Property Strength As CodableValue
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.CodableValue
      description: "\nA <xref href=\"Microsoft.Health.ItemTypes.CodableValue\" data-throw-if-not-resolved=\"false\"></xref> instance representing the \ndosage strength.\n"
  overload: Microsoft.Health.ItemTypes.AsthmaInhalerUse.Strength*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.AsthmaInhalerUse.DoseCount
  commentId: P:Microsoft.Health.ItemTypes.AsthmaInhalerUse.DoseCount
  id: DoseCount
  parent: Microsoft.Health.ItemTypes.AsthmaInhalerUse
  langs:
  - csharp
  - vb
  name: DoseCount
  nameWithType: AsthmaInhalerUse.DoseCount
  fullName: Microsoft.Health.ItemTypes.AsthmaInhalerUse.DoseCount
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AsthmaInhalerUse.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DoseCount
    path: AsthmaInhalerUse.cs
    startLine: 278
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the count of doses for each inhaler use.\n"
  example: []
  syntax:
    content: public int DoseCount { get; set; }
    content.vb: Public Property DoseCount As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\nAn integer representing the count.\n"
  overload: Microsoft.Health.ItemTypes.AsthmaInhalerUse.DoseCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.AsthmaInhalerUse.DeviceId
  commentId: P:Microsoft.Health.ItemTypes.AsthmaInhalerUse.DeviceId
  id: DeviceId
  parent: Microsoft.Health.ItemTypes.AsthmaInhalerUse
  langs:
  - csharp
  - vb
  name: DeviceId
  nameWithType: AsthmaInhalerUse.DeviceId
  fullName: Microsoft.Health.ItemTypes.AsthmaInhalerUse.DeviceId
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AsthmaInhalerUse.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DeviceId
    path: AsthmaInhalerUse.cs
    startLine: 305
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the identifier for the device used.\n"
  remarks: "\nSet the value to <strong>null</strong> if the device identifier should not be \nstored.\n"
  example: []
  syntax:
    content: public string DeviceId { get; set; }
    content.vb: Public Property DeviceId As String
    parameters: []
    return:
      type: System.String
      description: "\nA string representing the device identifier.\n"
  overload: Microsoft.Health.ItemTypes.AsthmaInhalerUse.DeviceId*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nIf <span class=\"paramref\">value</span> contains only whitespace.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.AsthmaInhalerUse.DosePurpose
  commentId: P:Microsoft.Health.ItemTypes.AsthmaInhalerUse.DosePurpose
  id: DosePurpose
  parent: Microsoft.Health.ItemTypes.AsthmaInhalerUse
  langs:
  - csharp
  - vb
  name: DosePurpose
  nameWithType: AsthmaInhalerUse.DosePurpose
  fullName: Microsoft.Health.ItemTypes.AsthmaInhalerUse.DosePurpose
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AsthmaInhalerUse.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DosePurpose
    path: AsthmaInhalerUse.cs
    startLine: 337
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the target of the inhaler usage.\n"
  remarks: "\nExamples include relief (the dose purpose is\nintended to relieve immediate asthma symptoms), \nprevention (the dose purpose is intended to \nprevent asthma symptoms), control (the dose \npurpose is intended to control the impact of \ncurrent asthma symptoms), other (the dose \npurpose is known, but other than to relieve, \nprevent or control asthma symptoms), and \nundefined (there is not enough information \nabout the inhaler usage to discern purpose).\n<br /><br />\nCodes for this value are in the \"dose-purpose\" \nvocabulary.\n"
  example: []
  syntax:
    content: public CodableValue DosePurpose { get; set; }
    content.vb: Public Property DosePurpose As CodableValue
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.CodableValue
  overload: Microsoft.Health.ItemTypes.AsthmaInhalerUse.DosePurpose*
  see:
  - linkId: Microsoft.Health.ItemTypes.CodableValue
    commentId: T:Microsoft.Health.ItemTypes.CodableValue
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.AsthmaInhalerUse.ToString
  commentId: M:Microsoft.Health.ItemTypes.AsthmaInhalerUse.ToString
  id: ToString
  parent: Microsoft.Health.ItemTypes.AsthmaInhalerUse
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: AsthmaInhalerUse.ToString()
  fullName: Microsoft.Health.ItemTypes.AsthmaInhalerUse.ToString()
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AsthmaInhalerUse.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ToString
    path: AsthmaInhalerUse.cs
    startLine: 352
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets a string representation of the asthma inhaler use item.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\nA string representation of the asthma inhaler use item.\n"
  overridden: System.Object.ToString
  overload: Microsoft.Health.ItemTypes.AsthmaInhalerUse.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Health.ItemTypes
  commentId: N:Microsoft.Health.ItemTypes
  isExternal: false
  name: Microsoft.Health.ItemTypes
  nameWithType: Microsoft.Health.ItemTypes
  fullName: Microsoft.Health.ItemTypes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.HealthRecordItem
  commentId: T:Microsoft.Health.HealthRecordItem
  parent: Microsoft.Health
  isExternal: false
  name: HealthRecordItem
  nameWithType: HealthRecordItem
  fullName: Microsoft.Health.HealthRecordItem
- uid: Microsoft.Health.HealthRecordItem.Sign(System.Security.Cryptography.X509Certificates.X509Certificate2)
  commentId: M:Microsoft.Health.HealthRecordItem.Sign(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: true
  name: Sign(X509Certificate2)
  nameWithType: HealthRecordItem.Sign(X509Certificate2)
  fullName: Microsoft.Health.HealthRecordItem.Sign(System.Security.Cryptography.X509Certificates.X509Certificate2)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.Sign(System.Security.Cryptography.X509Certificates.X509Certificate2)
    name: Sign
    nameWithType: HealthRecordItem.Sign
    fullName: Microsoft.Health.HealthRecordItem.Sign
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2
    name: X509Certificate2
    nameWithType: X509Certificate2
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.Sign(System.Security.Cryptography.X509Certificates.X509Certificate2)
    name: Sign
    nameWithType: HealthRecordItem.Sign
    fullName: Microsoft.Health.HealthRecordItem.Sign
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2
    name: X509Certificate2
    nameWithType: X509Certificate2
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.IsSignatureValid
  commentId: M:Microsoft.Health.HealthRecordItem.IsSignatureValid
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: IsSignatureValid()
  nameWithType: HealthRecordItem.IsSignatureValid()
  fullName: Microsoft.Health.HealthRecordItem.IsSignatureValid()
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.IsSignatureValid
    name: IsSignatureValid
    nameWithType: HealthRecordItem.IsSignatureValid
    fullName: Microsoft.Health.HealthRecordItem.IsSignatureValid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.IsSignatureValid
    name: IsSignatureValid
    nameWithType: HealthRecordItem.IsSignatureValid
    fullName: Microsoft.Health.HealthRecordItem.IsSignatureValid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.ValidateCertificate
  commentId: M:Microsoft.Health.HealthRecordItem.ValidateCertificate
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: ValidateCertificate()
  nameWithType: HealthRecordItem.ValidateCertificate()
  fullName: Microsoft.Health.HealthRecordItem.ValidateCertificate()
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.ValidateCertificate
    name: ValidateCertificate
    nameWithType: HealthRecordItem.ValidateCertificate
    fullName: Microsoft.Health.HealthRecordItem.ValidateCertificate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.ValidateCertificate
    name: ValidateCertificate
    nameWithType: HealthRecordItem.ValidateCertificate
    fullName: Microsoft.Health.HealthRecordItem.ValidateCertificate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.Key
  commentId: P:Microsoft.Health.HealthRecordItem.Key
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: Key
  nameWithType: HealthRecordItem.Key
  fullName: Microsoft.Health.HealthRecordItem.Key
- uid: Microsoft.Health.HealthRecordItem.TypeName
  commentId: P:Microsoft.Health.HealthRecordItem.TypeName
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: TypeName
  nameWithType: HealthRecordItem.TypeName
  fullName: Microsoft.Health.HealthRecordItem.TypeName
- uid: Microsoft.Health.HealthRecordItem.EffectiveDate
  commentId: P:Microsoft.Health.HealthRecordItem.EffectiveDate
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: EffectiveDate
  nameWithType: HealthRecordItem.EffectiveDate
  fullName: Microsoft.Health.HealthRecordItem.EffectiveDate
- uid: Microsoft.Health.HealthRecordItem.State
  commentId: P:Microsoft.Health.HealthRecordItem.State
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: State
  nameWithType: HealthRecordItem.State
  fullName: Microsoft.Health.HealthRecordItem.State
- uid: Microsoft.Health.HealthRecordItem.Flags
  commentId: P:Microsoft.Health.HealthRecordItem.Flags
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: Flags
  nameWithType: HealthRecordItem.Flags
  fullName: Microsoft.Health.HealthRecordItem.Flags
- uid: Microsoft.Health.HealthRecordItem.IsPersonal
  commentId: P:Microsoft.Health.HealthRecordItem.IsPersonal
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: IsPersonal
  nameWithType: HealthRecordItem.IsPersonal
  fullName: Microsoft.Health.HealthRecordItem.IsPersonal
- uid: Microsoft.Health.HealthRecordItem.IsDownVersioned
  commentId: P:Microsoft.Health.HealthRecordItem.IsDownVersioned
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: IsDownVersioned
  nameWithType: HealthRecordItem.IsDownVersioned
  fullName: Microsoft.Health.HealthRecordItem.IsDownVersioned
- uid: Microsoft.Health.HealthRecordItem.IsUpVersioned
  commentId: P:Microsoft.Health.HealthRecordItem.IsUpVersioned
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: IsUpVersioned
  nameWithType: HealthRecordItem.IsUpVersioned
  fullName: Microsoft.Health.HealthRecordItem.IsUpVersioned
- uid: Microsoft.Health.HealthRecordItem.UpdatedEndDate
  commentId: P:Microsoft.Health.HealthRecordItem.UpdatedEndDate
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: UpdatedEndDate
  nameWithType: HealthRecordItem.UpdatedEndDate
  fullName: Microsoft.Health.HealthRecordItem.UpdatedEndDate
- uid: Microsoft.Health.HealthRecordItem.LastUpdated
  commentId: P:Microsoft.Health.HealthRecordItem.LastUpdated
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: LastUpdated
  nameWithType: HealthRecordItem.LastUpdated
  fullName: Microsoft.Health.HealthRecordItem.LastUpdated
- uid: Microsoft.Health.HealthRecordItem.Created
  commentId: P:Microsoft.Health.HealthRecordItem.Created
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: Created
  nameWithType: HealthRecordItem.Created
  fullName: Microsoft.Health.HealthRecordItem.Created
- uid: Microsoft.Health.HealthRecordItem.EffectivePermissions
  commentId: P:Microsoft.Health.HealthRecordItem.EffectivePermissions
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: EffectivePermissions
  nameWithType: HealthRecordItem.EffectivePermissions
  fullName: Microsoft.Health.HealthRecordItem.EffectivePermissions
- uid: Microsoft.Health.HealthRecordItem.IsImmutable
  commentId: P:Microsoft.Health.HealthRecordItem.IsImmutable
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: IsImmutable
  nameWithType: HealthRecordItem.IsImmutable
  fullName: Microsoft.Health.HealthRecordItem.IsImmutable
- uid: Microsoft.Health.HealthRecordItem.IsReadOnly
  commentId: P:Microsoft.Health.HealthRecordItem.IsReadOnly
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: IsReadOnly
  nameWithType: HealthRecordItem.IsReadOnly
  fullName: Microsoft.Health.HealthRecordItem.IsReadOnly
- uid: Microsoft.Health.HealthRecordItem.TypeSpecificData
  commentId: P:Microsoft.Health.HealthRecordItem.TypeSpecificData
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: TypeSpecificData
  nameWithType: HealthRecordItem.TypeSpecificData
  fullName: Microsoft.Health.HealthRecordItem.TypeSpecificData
- uid: Microsoft.Health.HealthRecordItem.TransformedXmlData
  commentId: P:Microsoft.Health.HealthRecordItem.TransformedXmlData
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: TransformedXmlData
  nameWithType: HealthRecordItem.TransformedXmlData
  fullName: Microsoft.Health.HealthRecordItem.TransformedXmlData
- uid: Microsoft.Health.HealthRecordItem.CommonData
  commentId: P:Microsoft.Health.HealthRecordItem.CommonData
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: CommonData
  nameWithType: HealthRecordItem.CommonData
  fullName: Microsoft.Health.HealthRecordItem.CommonData
- uid: Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.HealthRecordAccessor)
  commentId: M:Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.HealthRecordAccessor)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: GetBlobStore(HealthRecordAccessor)
  nameWithType: HealthRecordItem.GetBlobStore(HealthRecordAccessor)
  fullName: Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.HealthRecordAccessor)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.HealthRecordAccessor)
    name: GetBlobStore
    nameWithType: HealthRecordItem.GetBlobStore
    fullName: Microsoft.Health.HealthRecordItem.GetBlobStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.HealthRecordAccessor
    name: HealthRecordAccessor
    nameWithType: HealthRecordAccessor
    fullName: Microsoft.Health.HealthRecordAccessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.HealthRecordAccessor)
    name: GetBlobStore
    nameWithType: HealthRecordItem.GetBlobStore
    fullName: Microsoft.Health.HealthRecordItem.GetBlobStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.HealthRecordAccessor
    name: HealthRecordAccessor
    nameWithType: HealthRecordAccessor
    fullName: Microsoft.Health.HealthRecordAccessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.Package.ConnectPackageCreationParameters)
  commentId: M:Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.Package.ConnectPackageCreationParameters)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: GetBlobStore(ConnectPackageCreationParameters)
  nameWithType: HealthRecordItem.GetBlobStore(ConnectPackageCreationParameters)
  fullName: Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.Package.ConnectPackageCreationParameters)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.Package.ConnectPackageCreationParameters)
    name: GetBlobStore
    nameWithType: HealthRecordItem.GetBlobStore
    fullName: Microsoft.Health.HealthRecordItem.GetBlobStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.Package.ConnectPackageCreationParameters
    name: ConnectPackageCreationParameters
    nameWithType: ConnectPackageCreationParameters
    fullName: Microsoft.Health.Package.ConnectPackageCreationParameters
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.Package.ConnectPackageCreationParameters)
    name: GetBlobStore
    nameWithType: HealthRecordItem.GetBlobStore
    fullName: Microsoft.Health.HealthRecordItem.GetBlobStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.Package.ConnectPackageCreationParameters
    name: ConnectPackageCreationParameters
    nameWithType: ConnectPackageCreationParameters
    fullName: Microsoft.Health.Package.ConnectPackageCreationParameters
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.Tags
  commentId: P:Microsoft.Health.HealthRecordItem.Tags
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: Tags
  nameWithType: HealthRecordItem.Tags
  fullName: Microsoft.Health.HealthRecordItem.Tags
- uid: Microsoft.Health.HealthRecordItem.HealthRecordItemSignatures
  commentId: P:Microsoft.Health.HealthRecordItem.HealthRecordItemSignatures
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: HealthRecordItemSignatures
  nameWithType: HealthRecordItem.HealthRecordItemSignatures
  fullName: Microsoft.Health.HealthRecordItem.HealthRecordItemSignatures
- uid: Microsoft.Health.HealthRecordItem.Sections
  commentId: P:Microsoft.Health.HealthRecordItem.Sections
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: Sections
  nameWithType: HealthRecordItem.Sections
  fullName: Microsoft.Health.HealthRecordItem.Sections
- uid: Microsoft.Health.HealthRecordItem.GetSizeInBytes
  commentId: M:Microsoft.Health.HealthRecordItem.GetSizeInBytes
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: GetSizeInBytes()
  nameWithType: HealthRecordItem.GetSizeInBytes()
  fullName: Microsoft.Health.HealthRecordItem.GetSizeInBytes()
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.GetSizeInBytes
    name: GetSizeInBytes
    nameWithType: HealthRecordItem.GetSizeInBytes
    fullName: Microsoft.Health.HealthRecordItem.GetSizeInBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.GetSizeInBytes
    name: GetSizeInBytes
    nameWithType: HealthRecordItem.GetSizeInBytes
    fullName: Microsoft.Health.HealthRecordItem.GetSizeInBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.GetItemXml
  commentId: M:Microsoft.Health.HealthRecordItem.GetItemXml
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: GetItemXml()
  nameWithType: HealthRecordItem.GetItemXml()
  fullName: Microsoft.Health.HealthRecordItem.GetItemXml()
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.GetItemXml
    name: GetItemXml
    nameWithType: HealthRecordItem.GetItemXml
    fullName: Microsoft.Health.HealthRecordItem.GetItemXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.GetItemXml
    name: GetItemXml
    nameWithType: HealthRecordItem.GetItemXml
    fullName: Microsoft.Health.HealthRecordItem.GetItemXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections)
  commentId: M:Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: GetItemXml(HealthRecordItemSections)
  nameWithType: HealthRecordItem.GetItemXml(HealthRecordItemSections)
  fullName: Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections)
    name: GetItemXml
    nameWithType: HealthRecordItem.GetItemXml
    fullName: Microsoft.Health.HealthRecordItem.GetItemXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.HealthRecordItemSections
    name: HealthRecordItemSections
    nameWithType: HealthRecordItemSections
    fullName: Microsoft.Health.HealthRecordItemSections
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections)
    name: GetItemXml
    nameWithType: HealthRecordItem.GetItemXml
    fullName: Microsoft.Health.HealthRecordItem.GetItemXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.HealthRecordItemSections
    name: HealthRecordItemSections
    nameWithType: HealthRecordItemSections
    fullName: Microsoft.Health.HealthRecordItemSections
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.GetItemXml(System.String)
  commentId: M:Microsoft.Health.HealthRecordItem.GetItemXml(System.String)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: true
  name: GetItemXml(String)
  nameWithType: HealthRecordItem.GetItemXml(String)
  fullName: Microsoft.Health.HealthRecordItem.GetItemXml(System.String)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.GetItemXml(System.String)
    name: GetItemXml
    nameWithType: HealthRecordItem.GetItemXml
    fullName: Microsoft.Health.HealthRecordItem.GetItemXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.GetItemXml(System.String)
    name: GetItemXml
    nameWithType: HealthRecordItem.GetItemXml
    fullName: Microsoft.Health.HealthRecordItem.GetItemXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections,System.String)
  commentId: M:Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections,System.String)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: true
  name: GetItemXml(HealthRecordItemSections, String)
  nameWithType: HealthRecordItem.GetItemXml(HealthRecordItemSections, String)
  fullName: Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections, System.String)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections,System.String)
    name: GetItemXml
    nameWithType: HealthRecordItem.GetItemXml
    fullName: Microsoft.Health.HealthRecordItem.GetItemXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.HealthRecordItemSections
    name: HealthRecordItemSections
    nameWithType: HealthRecordItemSections
    fullName: Microsoft.Health.HealthRecordItemSections
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections,System.String)
    name: GetItemXml
    nameWithType: HealthRecordItem.GetItemXml
    fullName: Microsoft.Health.HealthRecordItem.GetItemXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.HealthRecordItemSections
    name: HealthRecordItemSections
    nameWithType: HealthRecordItemSections
    fullName: Microsoft.Health.HealthRecordItemSections
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.Serialize
  commentId: M:Microsoft.Health.HealthRecordItem.Serialize
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: Serialize()
  nameWithType: HealthRecordItem.Serialize()
  fullName: Microsoft.Health.HealthRecordItem.Serialize()
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.Serialize
    name: Serialize
    nameWithType: HealthRecordItem.Serialize
    fullName: Microsoft.Health.HealthRecordItem.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.Serialize
    name: Serialize
    nameWithType: HealthRecordItem.Serialize
    fullName: Microsoft.Health.HealthRecordItem.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.Deserialize(System.String)
  commentId: M:Microsoft.Health.HealthRecordItem.Deserialize(System.String)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: true
  name: Deserialize(String)
  nameWithType: HealthRecordItem.Deserialize(String)
  fullName: Microsoft.Health.HealthRecordItem.Deserialize(System.String)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.Deserialize(System.String)
    name: Deserialize
    nameWithType: HealthRecordItem.Deserialize
    fullName: Microsoft.Health.HealthRecordItem.Deserialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.Deserialize(System.String)
    name: Deserialize
    nameWithType: HealthRecordItem.Deserialize
    fullName: Microsoft.Health.HealthRecordItem.Deserialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: Microsoft.Health.ItemTypes.AsthmaInhalerUse
  commentId: T:Microsoft.Health.ItemTypes.AsthmaInhalerUse
  isExternal: false
  name: AsthmaInhalerUse
  nameWithType: AsthmaInhalerUse
  fullName: Microsoft.Health.ItemTypes.AsthmaInhalerUse
- uid: Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)
  commentId: M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)
- uid: Microsoft.Health.ItemTypes.AsthmaInhalerUse.#ctor*
  commentId: Overload:Microsoft.Health.ItemTypes.AsthmaInhalerUse.#ctor
  isExternal: false
  name: AsthmaInhalerUse
  nameWithType: AsthmaInhalerUse.AsthmaInhalerUse
  fullName: Microsoft.Health.ItemTypes.AsthmaInhalerUse.AsthmaInhalerUse
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: Microsoft.Health.ItemTypes.HealthServiceDateTime
  commentId: T:Microsoft.Health.ItemTypes.HealthServiceDateTime
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: HealthServiceDateTime
  nameWithType: HealthServiceDateTime
  fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime
- uid: Microsoft.Health.ItemTypes.CodableValue
  commentId: T:Microsoft.Health.ItemTypes.CodableValue
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: CodableValue
  nameWithType: CodableValue
  fullName: Microsoft.Health.ItemTypes.CodableValue
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Microsoft.Health.HealthRecordItem.ParseXml(System.Xml.XPath.IXPathNavigable)
  commentId: M:Microsoft.Health.HealthRecordItem.ParseXml(System.Xml.XPath.IXPathNavigable)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: true
  name: ParseXml(IXPathNavigable)
  nameWithType: HealthRecordItem.ParseXml(IXPathNavigable)
  fullName: Microsoft.Health.HealthRecordItem.ParseXml(System.Xml.XPath.IXPathNavigable)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.ParseXml(System.Xml.XPath.IXPathNavigable)
    name: ParseXml
    nameWithType: HealthRecordItem.ParseXml
    fullName: Microsoft.Health.HealthRecordItem.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.IXPathNavigable
    name: IXPathNavigable
    nameWithType: IXPathNavigable
    fullName: System.Xml.XPath.IXPathNavigable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.ParseXml(System.Xml.XPath.IXPathNavigable)
    name: ParseXml
    nameWithType: HealthRecordItem.ParseXml
    fullName: Microsoft.Health.HealthRecordItem.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.IXPathNavigable
    name: IXPathNavigable
    nameWithType: IXPathNavigable
    fullName: System.Xml.XPath.IXPathNavigable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.AsthmaInhalerUse.ParseXml*
  commentId: Overload:Microsoft.Health.ItemTypes.AsthmaInhalerUse.ParseXml
  isExternal: false
  name: ParseXml
  nameWithType: AsthmaInhalerUse.ParseXml
  fullName: Microsoft.Health.ItemTypes.AsthmaInhalerUse.ParseXml
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
- uid: System.Xml.XPath.IXPathNavigable
  commentId: T:System.Xml.XPath.IXPathNavigable
  parent: System.Xml.XPath
  isExternal: true
  name: IXPathNavigable
  nameWithType: IXPathNavigable
  fullName: System.Xml.XPath.IXPathNavigable
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: false
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: Microsoft.Health.ItemTypes.AsthmaInhalerUse.When
  commentId: P:Microsoft.Health.ItemTypes.AsthmaInhalerUse.When
- uid: Microsoft.Health.ItemTypes.AsthmaInhalerUse.DoseCount
  commentId: P:Microsoft.Health.ItemTypes.AsthmaInhalerUse.DoseCount
- uid: Microsoft.Health.ItemTypes.AsthmaInhalerUse.Drug
  commentId: P:Microsoft.Health.ItemTypes.AsthmaInhalerUse.Drug
- uid: Microsoft.Health.HealthRecordItem.WriteXml(System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.HealthRecordItem.WriteXml(System.Xml.XmlWriter)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: true
  name: WriteXml(XmlWriter)
  nameWithType: HealthRecordItem.WriteXml(XmlWriter)
  fullName: Microsoft.Health.HealthRecordItem.WriteXml(System.Xml.XmlWriter)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItem.WriteXml
    fullName: Microsoft.Health.HealthRecordItem.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItem.WriteXml
    fullName: Microsoft.Health.HealthRecordItem.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.AsthmaInhalerUse.WriteXml*
  commentId: Overload:Microsoft.Health.ItemTypes.AsthmaInhalerUse.WriteXml
  isExternal: false
  name: WriteXml
  nameWithType: AsthmaInhalerUse.WriteXml
  fullName: Microsoft.Health.ItemTypes.AsthmaInhalerUse.WriteXml
- uid: Microsoft.Health.HealthRecordItemSerializationException
  commentId: T:Microsoft.Health.HealthRecordItemSerializationException
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: Microsoft.Health.ItemTypes.AsthmaInhalerUse.When*
  commentId: Overload:Microsoft.Health.ItemTypes.AsthmaInhalerUse.When
  isExternal: false
  name: When
  nameWithType: AsthmaInhalerUse.When
  fullName: Microsoft.Health.ItemTypes.AsthmaInhalerUse.When
- uid: Microsoft.Health.ItemTypes.AsthmaInhalerUse.Drug*
  commentId: Overload:Microsoft.Health.ItemTypes.AsthmaInhalerUse.Drug
  isExternal: false
  name: Drug
  nameWithType: AsthmaInhalerUse.Drug
  fullName: Microsoft.Health.ItemTypes.AsthmaInhalerUse.Drug
- uid: Microsoft.Health.ItemTypes.AsthmaInhalerUse.Strength*
  commentId: Overload:Microsoft.Health.ItemTypes.AsthmaInhalerUse.Strength
  isExternal: false
  name: Strength
  nameWithType: AsthmaInhalerUse.Strength
  fullName: Microsoft.Health.ItemTypes.AsthmaInhalerUse.Strength
- uid: Microsoft.Health.ItemTypes.AsthmaInhalerUse.DoseCount*
  commentId: Overload:Microsoft.Health.ItemTypes.AsthmaInhalerUse.DoseCount
  isExternal: false
  name: DoseCount
  nameWithType: AsthmaInhalerUse.DoseCount
  fullName: Microsoft.Health.ItemTypes.AsthmaInhalerUse.DoseCount
- uid: Microsoft.Health.ItemTypes.AsthmaInhalerUse.DeviceId*
  commentId: Overload:Microsoft.Health.ItemTypes.AsthmaInhalerUse.DeviceId
  isExternal: false
  name: DeviceId
  nameWithType: AsthmaInhalerUse.DeviceId
  fullName: Microsoft.Health.ItemTypes.AsthmaInhalerUse.DeviceId
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.ItemTypes.AsthmaInhalerUse.DosePurpose*
  commentId: Overload:Microsoft.Health.ItemTypes.AsthmaInhalerUse.DosePurpose
  isExternal: false
  name: DosePurpose
  nameWithType: AsthmaInhalerUse.DosePurpose
  fullName: Microsoft.Health.ItemTypes.AsthmaInhalerUse.DosePurpose
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.AsthmaInhalerUse.ToString*
  commentId: Overload:Microsoft.Health.ItemTypes.AsthmaInhalerUse.ToString
  isExternal: false
  name: ToString
  nameWithType: AsthmaInhalerUse.ToString
  fullName: Microsoft.Health.ItemTypes.AsthmaInhalerUse.ToString
