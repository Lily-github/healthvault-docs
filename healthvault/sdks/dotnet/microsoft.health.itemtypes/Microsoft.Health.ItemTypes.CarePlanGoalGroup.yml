### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.ItemTypes.CarePlanGoalGroup
  commentId: T:Microsoft.Health.ItemTypes.CarePlanGoalGroup
  id: CarePlanGoalGroup
  parent: Microsoft.Health.ItemTypes
  children:
  - Microsoft.Health.ItemTypes.CarePlanGoalGroup.#ctor
  - Microsoft.Health.ItemTypes.CarePlanGoalGroup.#ctor(Microsoft.Health.ItemTypes.CodableValue,System.Collections.ObjectModel.Collection{Microsoft.Health.ItemTypes.CarePlanGoal})
  - Microsoft.Health.ItemTypes.CarePlanGoalGroup.Description
  - Microsoft.Health.ItemTypes.CarePlanGoalGroup.Goals
  - Microsoft.Health.ItemTypes.CarePlanGoalGroup.Name
  - Microsoft.Health.ItemTypes.CarePlanGoalGroup.ParseXml(System.Xml.XPath.XPathNavigator)
  - Microsoft.Health.ItemTypes.CarePlanGoalGroup.ToString
  - Microsoft.Health.ItemTypes.CarePlanGoalGroup.WriteXml(System.String,System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: CarePlanGoalGroup
  nameWithType: CarePlanGoalGroup
  fullName: Microsoft.Health.ItemTypes.CarePlanGoalGroup
  type: Class
  source:
    remote:
      path: Microsoft.Health.ItemTypes/CarePlanGoalGroup.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CarePlanGoalGroup
    path: CarePlanGoalGroup.cs
    startLine: 24
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGoal groups are used to group related measurement goals together.\n"
  remarks: "\nFor example, blood pressure has two individual measurement goals (systolic and diastolic) but are grouped \ntogether under blood pressure.\n"
  example: []
  syntax:
    content: 'public class CarePlanGoalGroup : HealthRecordItemData'
    content.vb: >-
      Public Class CarePlanGoalGroup
          Inherits HealthRecordItemData
  inheritance:
  - System.Object
  - Microsoft.Health.ItemTypes.HealthRecordItemData
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.ItemTypes.CarePlanGoalGroup.#ctor
  commentId: M:Microsoft.Health.ItemTypes.CarePlanGoalGroup.#ctor
  id: '#ctor'
  parent: Microsoft.Health.ItemTypes.CarePlanGoalGroup
  langs:
  - csharp
  - vb
  name: CarePlanGoalGroup()
  nameWithType: CarePlanGoalGroup.CarePlanGoalGroup()
  fullName: Microsoft.Health.ItemTypes.CarePlanGoalGroup.CarePlanGoalGroup()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/CarePlanGoalGroup.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: CarePlanGoalGroup.cs
    startLine: 30
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.CarePlanGoalGroup\" data-throw-if-not-resolved=\"false\"></xref> class with default values.\n"
  example: []
  syntax:
    content: public CarePlanGoalGroup()
    content.vb: Public Sub New
  overload: Microsoft.Health.ItemTypes.CarePlanGoalGroup.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.CarePlanGoalGroup.#ctor(Microsoft.Health.ItemTypes.CodableValue,System.Collections.ObjectModel.Collection{Microsoft.Health.ItemTypes.CarePlanGoal})
  commentId: M:Microsoft.Health.ItemTypes.CarePlanGoalGroup.#ctor(Microsoft.Health.ItemTypes.CodableValue,System.Collections.ObjectModel.Collection{Microsoft.Health.ItemTypes.CarePlanGoal})
  id: '#ctor(Microsoft.Health.ItemTypes.CodableValue,System.Collections.ObjectModel.Collection{Microsoft.Health.ItemTypes.CarePlanGoal})'
  parent: Microsoft.Health.ItemTypes.CarePlanGoalGroup
  langs:
  - csharp
  - vb
  name: CarePlanGoalGroup(CodableValue, Collection<CarePlanGoal>)
  nameWithType: CarePlanGoalGroup.CarePlanGoalGroup(CodableValue, Collection<CarePlanGoal>)
  fullName: Microsoft.Health.ItemTypes.CarePlanGoalGroup.CarePlanGoalGroup(Microsoft.Health.ItemTypes.CodableValue, System.Collections.ObjectModel.Collection<Microsoft.Health.ItemTypes.CarePlanGoal>)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/CarePlanGoalGroup.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: CarePlanGoalGroup.cs
    startLine: 51
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.CarePlanGoalGroup\" data-throw-if-not-resolved=\"false\"></xref> class\nspecifying mandatory values.\n"
  example: []
  syntax:
    content: public CarePlanGoalGroup(CodableValue name, Collection<CarePlanGoal> goals)
    content.vb: Public Sub New(name As CodableValue, goals As Collection(Of CarePlanGoal))
    parameters:
    - id: name
      type: Microsoft.Health.ItemTypes.CodableValue
      description: "\nName of the goal group.\n"
    - id: goals
      type: System.Collections.ObjectModel.Collection{Microsoft.Health.ItemTypes.CarePlanGoal}
      description: "\nList of care plan goals associated with this goal group.\n"
  overload: Microsoft.Health.ItemTypes.CarePlanGoalGroup.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nIf <span class=\"paramref\">name</span> is <strong>null</strong>.\nIf <span class=\"paramref\">goals</span> is <strong>null</strong>.\n"
  nameWithType.vb: CarePlanGoalGroup.CarePlanGoalGroup(CodableValue, Collection(Of CarePlanGoal))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.ItemTypes.CarePlanGoalGroup.CarePlanGoalGroup(Microsoft.Health.ItemTypes.CodableValue, System.Collections.ObjectModel.Collection(Of Microsoft.Health.ItemTypes.CarePlanGoal))
  name.vb: CarePlanGoalGroup(CodableValue, Collection(Of CarePlanGoal))
- uid: Microsoft.Health.ItemTypes.CarePlanGoalGroup.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.CarePlanGoalGroup.ParseXml(System.Xml.XPath.XPathNavigator)
  id: ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.CarePlanGoalGroup
  langs:
  - csharp
  - vb
  name: ParseXml(XPathNavigator)
  nameWithType: CarePlanGoalGroup.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.CarePlanGoalGroup.ParseXml(System.Xml.XPath.XPathNavigator)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/CarePlanGoalGroup.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ParseXml
    path: CarePlanGoalGroup.cs
    startLine: 75
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nPopulates this <xref href=\"Microsoft.Health.ItemTypes.CarePlanGoalGroup\" data-throw-if-not-resolved=\"false\"></xref> instance from the data in the specified XML.\n"
  example: []
  syntax:
    content: public override void ParseXml(XPathNavigator navigator)
    content.vb: Public Overrides Sub ParseXml(navigator As XPathNavigator)
    parameters:
    - id: navigator
      type: System.Xml.XPath.XPathNavigator
      description: "\nThe XML to get the CarePlanGoalGroup data from.\n"
  overridden: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  overload: Microsoft.Health.ItemTypes.CarePlanGoalGroup.ParseXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nIf <span class=\"paramref\">navigator</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.CarePlanGoalGroup.WriteXml(System.String,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.CarePlanGoalGroup.WriteXml(System.String,System.Xml.XmlWriter)
  id: WriteXml(System.String,System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.CarePlanGoalGroup
  langs:
  - csharp
  - vb
  name: WriteXml(String, XmlWriter)
  nameWithType: CarePlanGoalGroup.WriteXml(String, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.CarePlanGoalGroup.WriteXml(System.String, System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/CarePlanGoalGroup.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteXml
    path: CarePlanGoalGroup.cs
    startLine: 112
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nWrites the XML representation of the CarePlanGoalGroup into\nthe specified XML writer.\n"
  example: []
  syntax:
    content: public override void WriteXml(string nodeName, XmlWriter writer)
    content.vb: Public Overrides Sub WriteXml(nodeName As String, writer As XmlWriter)
    parameters:
    - id: nodeName
      type: System.String
      description: "\nThe name of the outer node for the medical image study series.\n"
    - id: writer
      type: System.Xml.XmlWriter
      description: "\nThe XML writer into which the CarePlanGoalGroup should be\nwritten.\n"
  overridden: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  overload: Microsoft.Health.ItemTypes.CarePlanGoalGroup.WriteXml*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nIf <span class=\"paramref\">nodeName</span> parameter is <strong>null</strong> or empty.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nIf <span class=\"paramref\">writer</span> parameter is <strong>null</strong>.\n"
  - type: Microsoft.Health.HealthRecordItemSerializationException
    commentId: T:Microsoft.Health.HealthRecordItemSerializationException
    description: "\nIf <xref href=\"Microsoft.Health.ItemTypes.CarePlanGoalGroup.Name\" data-throw-if-not-resolved=\"false\"></xref> is <strong>null</strong>.\nIf <xref href=\"Microsoft.Health.ItemTypes.CarePlanGoalGroup.Goals\" data-throw-if-not-resolved=\"false\"></xref> is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.CarePlanGoalGroup.Name
  commentId: P:Microsoft.Health.ItemTypes.CarePlanGoalGroup.Name
  id: Name
  parent: Microsoft.Health.ItemTypes.CarePlanGoalGroup
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: CarePlanGoalGroup.Name
  fullName: Microsoft.Health.ItemTypes.CarePlanGoalGroup.Name
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/CarePlanGoalGroup.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Name
    path: CarePlanGoalGroup.cs
    startLine: 144
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets name of the goal group.\n"
  remarks: "\nIf there is no information about name the value should be set to <strong>null</strong>.\n"
  example: []
  syntax:
    content: public CodableValue Name { get; set; }
    content.vb: Public Property Name As CodableValue
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.CodableValue
  overload: Microsoft.Health.ItemTypes.CarePlanGoalGroup.Name*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">value</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.CarePlanGoalGroup.Description
  commentId: P:Microsoft.Health.ItemTypes.CarePlanGoalGroup.Description
  id: Description
  parent: Microsoft.Health.ItemTypes.CarePlanGoalGroup
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: CarePlanGoalGroup.Description
  fullName: Microsoft.Health.ItemTypes.CarePlanGoalGroup.Description
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/CarePlanGoalGroup.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Description
    path: CarePlanGoalGroup.cs
    startLine: 173
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets description of the goal group.\n"
  remarks: "\nIf there is no information about description the value should be set to <strong>null</strong>.\n"
  example: []
  syntax:
    content: public string Description { get; set; }
    content.vb: Public Property Description As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.ItemTypes.CarePlanGoalGroup.Description*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">value</span> contains only whitespace.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.CarePlanGoalGroup.Goals
  commentId: P:Microsoft.Health.ItemTypes.CarePlanGoalGroup.Goals
  id: Goals
  parent: Microsoft.Health.ItemTypes.CarePlanGoalGroup
  langs:
  - csharp
  - vb
  name: Goals
  nameWithType: CarePlanGoalGroup.Goals
  fullName: Microsoft.Health.ItemTypes.CarePlanGoalGroup.Goals
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/CarePlanGoalGroup.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Goals
    path: CarePlanGoalGroup.cs
    startLine: 195
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets list of care plan goals associated with this goal group.\n"
  example: []
  syntax:
    content: public Collection<CarePlanGoal> Goals { get; }
    content.vb: Public ReadOnly Property Goals As Collection(Of CarePlanGoal)
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{Microsoft.Health.ItemTypes.CarePlanGoal}
  overload: Microsoft.Health.ItemTypes.CarePlanGoalGroup.Goals*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.ItemTypes.CarePlanGoalGroup.ToString
  commentId: M:Microsoft.Health.ItemTypes.CarePlanGoalGroup.ToString
  id: ToString
  parent: Microsoft.Health.ItemTypes.CarePlanGoalGroup
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: CarePlanGoalGroup.ToString()
  fullName: Microsoft.Health.ItemTypes.CarePlanGoalGroup.ToString()
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/CarePlanGoalGroup.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ToString
    path: CarePlanGoalGroup.cs
    startLine: 214
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets a string representation of the CarePlanGoalGroup.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\nA string representation of the CarePlanGoalGroup.\n"
  overridden: System.Object.ToString
  overload: Microsoft.Health.ItemTypes.CarePlanGoalGroup.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Health.ItemTypes
  commentId: N:Microsoft.Health.ItemTypes
  isExternal: false
  name: Microsoft.Health.ItemTypes
  nameWithType: Microsoft.Health.ItemTypes
  fullName: Microsoft.Health.ItemTypes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData
  commentId: T:Microsoft.Health.ItemTypes.HealthRecordItemData
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: HealthRecordItemData
  nameWithType: HealthRecordItemData
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.ItemTypes.CarePlanGoalGroup
  commentId: T:Microsoft.Health.ItemTypes.CarePlanGoalGroup
  isExternal: false
  name: CarePlanGoalGroup
  nameWithType: CarePlanGoalGroup
  fullName: Microsoft.Health.ItemTypes.CarePlanGoalGroup
- uid: Microsoft.Health.ItemTypes.CarePlanGoalGroup.#ctor*
  commentId: Overload:Microsoft.Health.ItemTypes.CarePlanGoalGroup.#ctor
  isExternal: false
  name: CarePlanGoalGroup
  nameWithType: CarePlanGoalGroup.CarePlanGoalGroup
  fullName: Microsoft.Health.ItemTypes.CarePlanGoalGroup.CarePlanGoalGroup
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: Microsoft.Health.ItemTypes.CodableValue
  commentId: T:Microsoft.Health.ItemTypes.CodableValue
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: CodableValue
  nameWithType: CodableValue
  fullName: Microsoft.Health.ItemTypes.CodableValue
- uid: System.Collections.ObjectModel.Collection{Microsoft.Health.ItemTypes.CarePlanGoal}
  commentId: T:System.Collections.ObjectModel.Collection{Microsoft.Health.ItemTypes.CarePlanGoal}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<CarePlanGoal>
  nameWithType: Collection<CarePlanGoal>
  fullName: System.Collections.ObjectModel.Collection<Microsoft.Health.ItemTypes.CarePlanGoal>
  nameWithType.vb: Collection(Of CarePlanGoal)
  fullName.vb: System.Collections.ObjectModel.Collection(Of Microsoft.Health.ItemTypes.CarePlanGoal)
  name.vb: Collection(Of CarePlanGoal)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.ItemTypes.CarePlanGoal
    name: CarePlanGoal
    nameWithType: CarePlanGoal
    fullName: Microsoft.Health.ItemTypes.CarePlanGoal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.ItemTypes.CarePlanGoal
    name: CarePlanGoal
    nameWithType: CarePlanGoal
    fullName: Microsoft.Health.ItemTypes.CarePlanGoal
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1
  commentId: T:System.Collections.ObjectModel.Collection`1
  isExternal: true
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  nameWithType.vb: Collection(Of T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T)
  name.vb: Collection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.HealthRecordItemData
  isExternal: true
  name: ParseXml(XPathNavigator)
  nameWithType: HealthRecordItemData.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: HealthRecordItemData.ParseXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: HealthRecordItemData.ParseXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.CarePlanGoalGroup.ParseXml*
  commentId: Overload:Microsoft.Health.ItemTypes.CarePlanGoalGroup.ParseXml
  isExternal: false
  name: ParseXml
  nameWithType: CarePlanGoalGroup.ParseXml
  fullName: Microsoft.Health.ItemTypes.CarePlanGoalGroup.ParseXml
- uid: System.Xml.XPath.XPathNavigator
  commentId: T:System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: true
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: false
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: Microsoft.Health.ItemTypes.CarePlanGoalGroup.Name
  commentId: P:Microsoft.Health.ItemTypes.CarePlanGoalGroup.Name
- uid: Microsoft.Health.ItemTypes.CarePlanGoalGroup.Goals
  commentId: P:Microsoft.Health.ItemTypes.CarePlanGoalGroup.Goals
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.HealthRecordItemData
  isExternal: true
  name: WriteXml(String, XmlWriter)
  nameWithType: HealthRecordItemData.WriteXml(String, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String, System.Xml.XmlWriter)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItemData.WriteXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItemData.WriteXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.CarePlanGoalGroup.WriteXml*
  commentId: Overload:Microsoft.Health.ItemTypes.CarePlanGoalGroup.WriteXml
  isExternal: false
  name: WriteXml
  nameWithType: CarePlanGoalGroup.WriteXml
  fullName: Microsoft.Health.ItemTypes.CarePlanGoalGroup.WriteXml
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: Microsoft.Health.HealthRecordItemSerializationException
  commentId: T:Microsoft.Health.HealthRecordItemSerializationException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: Microsoft.Health.ItemTypes.CarePlanGoalGroup.Name*
  commentId: Overload:Microsoft.Health.ItemTypes.CarePlanGoalGroup.Name
  isExternal: false
  name: Name
  nameWithType: CarePlanGoalGroup.Name
  fullName: Microsoft.Health.ItemTypes.CarePlanGoalGroup.Name
- uid: Microsoft.Health.ItemTypes.CarePlanGoalGroup.Description*
  commentId: Overload:Microsoft.Health.ItemTypes.CarePlanGoalGroup.Description
  isExternal: false
  name: Description
  nameWithType: CarePlanGoalGroup.Description
  fullName: Microsoft.Health.ItemTypes.CarePlanGoalGroup.Description
- uid: Microsoft.Health.ItemTypes.CarePlanGoalGroup.Goals*
  commentId: Overload:Microsoft.Health.ItemTypes.CarePlanGoalGroup.Goals
  isExternal: false
  name: Goals
  nameWithType: CarePlanGoalGroup.Goals
  fullName: Microsoft.Health.ItemTypes.CarePlanGoalGroup.Goals
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.CarePlanGoalGroup.ToString*
  commentId: Overload:Microsoft.Health.ItemTypes.CarePlanGoalGroup.ToString
  isExternal: false
  name: ToString
  nameWithType: CarePlanGoalGroup.ToString
  fullName: Microsoft.Health.ItemTypes.CarePlanGoalGroup.ToString
