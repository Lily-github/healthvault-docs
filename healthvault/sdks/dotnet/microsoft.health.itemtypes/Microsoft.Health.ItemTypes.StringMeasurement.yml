### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.ItemTypes.StringMeasurement
  commentId: T:Microsoft.Health.ItemTypes.StringMeasurement
  id: StringMeasurement
  parent: Microsoft.Health.ItemTypes
  children:
  - Microsoft.Health.ItemTypes.StringMeasurement.#ctor
  - Microsoft.Health.ItemTypes.StringMeasurement.#ctor(System.String)
  - Microsoft.Health.ItemTypes.StringMeasurement.#ctor(System.String,Microsoft.Health.ItemTypes.DisplayValue)
  - Microsoft.Health.ItemTypes.StringMeasurement.AssertMeasurementValue(System.String)
  - Microsoft.Health.ItemTypes.StringMeasurement.GetValueString(System.String)
  - Microsoft.Health.ItemTypes.StringMeasurement.ParseValueXml(System.Xml.XPath.XPathNavigator)
  - Microsoft.Health.ItemTypes.StringMeasurement.ValueElementName
  - Microsoft.Health.ItemTypes.StringMeasurement.WriteValueXml(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: StringMeasurement
  nameWithType: StringMeasurement
  fullName: Microsoft.Health.ItemTypes.StringMeasurement
  type: Class
  source:
    remote:
      path: Microsoft.Health.ItemTypes/StringMeasurement.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: StringMeasurement
    path: StringMeasurement.cs
    startLine: 19
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nRepresents a measurement of type string and display.\n"
  example: []
  syntax:
    content: 'public class StringMeasurement : Measurement<string>'
    content.vb: >-
      Public Class StringMeasurement
          Inherits Measurement(Of String)
  inheritance:
  - System.Object
  - Microsoft.Health.ItemTypes.HealthRecordItemData
  - Microsoft.Health.ItemTypes.Measurement{System.String}
  inheritedMembers:
  - Microsoft.Health.ItemTypes.Measurement{System.String}.ParseXml(System.Xml.XPath.XPathNavigator)
  - Microsoft.Health.ItemTypes.Measurement{System.String}.WriteXml(System.String,System.Xml.XmlWriter)
  - Microsoft.Health.ItemTypes.Measurement{System.String}.Value
  - Microsoft.Health.ItemTypes.Measurement{System.String}.DisplayValue
  - Microsoft.Health.ItemTypes.Measurement{System.String}.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.ItemTypes.StringMeasurement.#ctor
  commentId: M:Microsoft.Health.ItemTypes.StringMeasurement.#ctor
  id: '#ctor'
  parent: Microsoft.Health.ItemTypes.StringMeasurement
  langs:
  - csharp
  - vb
  name: StringMeasurement()
  nameWithType: StringMeasurement.StringMeasurement()
  fullName: Microsoft.Health.ItemTypes.StringMeasurement.StringMeasurement()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/StringMeasurement.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: StringMeasurement.cs
    startLine: 26
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.StringMeasurement\" data-throw-if-not-resolved=\"false\"></xref> \nclass with empty values.\n"
  example: []
  syntax:
    content: public StringMeasurement()
    content.vb: Public Sub New
  overload: Microsoft.Health.ItemTypes.StringMeasurement.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.StringMeasurement.#ctor(System.String)
  commentId: M:Microsoft.Health.ItemTypes.StringMeasurement.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Health.ItemTypes.StringMeasurement
  langs:
  - csharp
  - vb
  name: StringMeasurement(String)
  nameWithType: StringMeasurement.StringMeasurement(String)
  fullName: Microsoft.Health.ItemTypes.StringMeasurement.StringMeasurement(System.String)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/StringMeasurement.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: StringMeasurement.cs
    startLine: 40
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.StringMeasurement\" data-throw-if-not-resolved=\"false\"></xref> \nclass with the specified value.\n"
  example: []
  syntax:
    content: public StringMeasurement(string value)
    content.vb: Public Sub New(value As String)
    parameters:
    - id: value
      type: System.String
      description: "\nThe value of the measurement.\n"
  overload: Microsoft.Health.ItemTypes.StringMeasurement.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.StringMeasurement.#ctor(System.String,Microsoft.Health.ItemTypes.DisplayValue)
  commentId: M:Microsoft.Health.ItemTypes.StringMeasurement.#ctor(System.String,Microsoft.Health.ItemTypes.DisplayValue)
  id: '#ctor(System.String,Microsoft.Health.ItemTypes.DisplayValue)'
  parent: Microsoft.Health.ItemTypes.StringMeasurement
  langs:
  - csharp
  - vb
  name: StringMeasurement(String, DisplayValue)
  nameWithType: StringMeasurement.StringMeasurement(String, DisplayValue)
  fullName: Microsoft.Health.ItemTypes.StringMeasurement.StringMeasurement(System.String, Microsoft.Health.ItemTypes.DisplayValue)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/StringMeasurement.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: StringMeasurement.cs
    startLine: 63
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.StringMeasurement\" data-throw-if-not-resolved=\"false\"></xref> \nclass with the specified value and optional display value.\n"
  example: []
  syntax:
    content: public StringMeasurement(string value, DisplayValue displayValue)
    content.vb: Public Sub New(value As String, displayValue As DisplayValue)
    parameters:
    - id: value
      type: System.String
      description: "\nThe value of the measurement.\n"
    - id: displayValue
      type: Microsoft.Health.ItemTypes.DisplayValue
      description: "\nThe display value of the measurement. This should contain the\nexact measurement as entered by the user even if it uses some\nother unit of measure. The display value\n<xref href=\"Microsoft.Health.ItemTypes.DisplayValue.Units\" data-throw-if-not-resolved=\"false\"></xref> and \n<xref href=\"Microsoft.Health.ItemTypes.DisplayValue.UnitsCode\" data-throw-if-not-resolved=\"false\"></xref> \nrepresents the unit of measure for the user entered value.\n"
  overload: Microsoft.Health.ItemTypes.StringMeasurement.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.StringMeasurement.AssertMeasurementValue(System.String)
  commentId: M:Microsoft.Health.ItemTypes.StringMeasurement.AssertMeasurementValue(System.String)
  id: AssertMeasurementValue(System.String)
  parent: Microsoft.Health.ItemTypes.StringMeasurement
  langs:
  - csharp
  - vb
  name: AssertMeasurementValue(String)
  nameWithType: StringMeasurement.AssertMeasurementValue(String)
  fullName: Microsoft.Health.ItemTypes.StringMeasurement.AssertMeasurementValue(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/StringMeasurement.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AssertMeasurementValue
    path: StringMeasurement.cs
    startLine: 76
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nVerifies that the value is a legal value.\n"
  example: []
  syntax:
    content: protected override void AssertMeasurementValue(string value)
    content.vb: Protected Overrides Sub AssertMeasurementValue(value As String)
    parameters:
    - id: value
      type: System.String
      description: "\nThe value of the measurement.\n"
  overridden: Microsoft.Health.ItemTypes.Measurement{System.String}.AssertMeasurementValue(System.String)
  overload: Microsoft.Health.ItemTypes.StringMeasurement.AssertMeasurementValue*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Health.ItemTypes.StringMeasurement.ParseValueXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.StringMeasurement.ParseValueXml(System.Xml.XPath.XPathNavigator)
  id: ParseValueXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.StringMeasurement
  langs:
  - csharp
  - vb
  name: ParseValueXml(XPathNavigator)
  nameWithType: StringMeasurement.ParseValueXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.StringMeasurement.ParseValueXml(System.Xml.XPath.XPathNavigator)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/StringMeasurement.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ParseValueXml
    path: StringMeasurement.cs
    startLine: 88
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nPopulates the data for the measurement from the XML.\n"
  example: []
  syntax:
    content: protected override void ParseValueXml(XPathNavigator navigator)
    content.vb: Protected Overrides Sub ParseValueXml(navigator As XPathNavigator)
    parameters:
    - id: navigator
      type: System.Xml.XPath.XPathNavigator
      description: "\nThe XML node representing the measurement.\n"
  overridden: Microsoft.Health.ItemTypes.Measurement{System.String}.ParseValueXml(System.Xml.XPath.XPathNavigator)
  overload: Microsoft.Health.ItemTypes.StringMeasurement.ParseValueXml*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Health.ItemTypes.StringMeasurement.WriteValueXml(System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.StringMeasurement.WriteValueXml(System.Xml.XmlWriter)
  id: WriteValueXml(System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.StringMeasurement
  langs:
  - csharp
  - vb
  name: WriteValueXml(XmlWriter)
  nameWithType: StringMeasurement.WriteValueXml(XmlWriter)
  fullName: Microsoft.Health.ItemTypes.StringMeasurement.WriteValueXml(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/StringMeasurement.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteValueXml
    path: StringMeasurement.cs
    startLine: 101
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nWrites the measurement to the specified XML writer.\n"
  example: []
  syntax:
    content: protected override void WriteValueXml(XmlWriter writer)
    content.vb: Protected Overrides Sub WriteValueXml(writer As XmlWriter)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "\nThe XmlWriter to write the measurement to.\n"
  overridden: Microsoft.Health.ItemTypes.Measurement{System.String}.WriteValueXml(System.Xml.XmlWriter)
  overload: Microsoft.Health.ItemTypes.StringMeasurement.WriteValueXml*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Health.ItemTypes.StringMeasurement.GetValueString(System.String)
  commentId: M:Microsoft.Health.ItemTypes.StringMeasurement.GetValueString(System.String)
  id: GetValueString(System.String)
  parent: Microsoft.Health.ItemTypes.StringMeasurement
  langs:
  - csharp
  - vb
  name: GetValueString(String)
  nameWithType: StringMeasurement.GetValueString(String)
  fullName: Microsoft.Health.ItemTypes.StringMeasurement.GetValueString(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/StringMeasurement.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetValueString
    path: StringMeasurement.cs
    startLine: 116
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nRetrieves a string representation of the measurement in the base units.\n"
  example: []
  syntax:
    content: protected override string GetValueString(string value)
    content.vb: Protected Overrides Function GetValueString(value As String) As String
    parameters:
    - id: value
      type: System.String
    return:
      type: System.String
      description: "\nThe measurement as a string in the base units.\n"
  overridden: Microsoft.Health.ItemTypes.Measurement{System.String}.GetValueString(System.String)
  overload: Microsoft.Health.ItemTypes.StringMeasurement.GetValueString*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Health.ItemTypes.StringMeasurement.ValueElementName
  commentId: P:Microsoft.Health.ItemTypes.StringMeasurement.ValueElementName
  id: ValueElementName
  parent: Microsoft.Health.ItemTypes.StringMeasurement
  langs:
  - csharp
  - vb
  name: ValueElementName
  nameWithType: StringMeasurement.ValueElementName
  fullName: Microsoft.Health.ItemTypes.StringMeasurement.ValueElementName
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/StringMeasurement.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ValueElementName
    path: StringMeasurement.cs
    startLine: 135
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the name of the element that defines the value for the measurement.\n"
  remarks: "\nThe default value for the element name is \"value\" but should be\noverridden in derived classes to provide a specific element name\nwhere appropriate.\n"
  example: []
  syntax:
    content: protected virtual string ValueElementName { get; set; }
    content.vb: Protected Overridable Property ValueElementName As String
    parameters: []
    return:
      type: System.String
      description: "\nA string representing the element name.\n"
  overload: Microsoft.Health.ItemTypes.StringMeasurement.ValueElementName*
  modifiers.csharp:
  - protected
  - virtual
  - get
  - set
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Microsoft.Health.ItemTypes
  commentId: N:Microsoft.Health.ItemTypes
  isExternal: false
  name: Microsoft.Health.ItemTypes
  nameWithType: Microsoft.Health.ItemTypes
  fullName: Microsoft.Health.ItemTypes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData
  commentId: T:Microsoft.Health.ItemTypes.HealthRecordItemData
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: HealthRecordItemData
  nameWithType: HealthRecordItemData
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData
- uid: Microsoft.Health.ItemTypes.Measurement{System.String}
  commentId: T:Microsoft.Health.ItemTypes.Measurement{System.String}
  parent: Microsoft.Health.ItemTypes
  definition: Microsoft.Health.ItemTypes.Measurement`1
  name: Measurement<String>
  nameWithType: Measurement<String>
  fullName: Microsoft.Health.ItemTypes.Measurement<System.String>
  nameWithType.vb: Measurement(Of String)
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of System.String)
  name.vb: Measurement(Of String)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Measurement`1
    name: Measurement
    nameWithType: Measurement
    fullName: Microsoft.Health.ItemTypes.Measurement
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Measurement`1
    name: Measurement
    nameWithType: Measurement
    fullName: Microsoft.Health.ItemTypes.Measurement
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Measurement{System.String}.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.Measurement{System.String}.ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.Measurement{System.String}
  definition: Microsoft.Health.ItemTypes.Measurement`1.ParseXml(System.Xml.XPath.XPathNavigator)
  name: ParseXml(XPathNavigator)
  nameWithType: Measurement<String>.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.Measurement<System.String>.ParseXml(System.Xml.XPath.XPathNavigator)
  nameWithType.vb: Measurement(Of String).ParseXml(XPathNavigator)
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of System.String).ParseXml(System.Xml.XPath.XPathNavigator)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: Measurement<String>.ParseXml
    fullName: Microsoft.Health.ItemTypes.Measurement<System.String>.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: Measurement(Of String).ParseXml
    fullName: Microsoft.Health.ItemTypes.Measurement(Of System.String).ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Measurement{System.String}.WriteXml(System.String,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.Measurement{System.String}.WriteXml(System.String,System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.Measurement{System.String}
  definition: Microsoft.Health.ItemTypes.Measurement`1.WriteXml(System.String,System.Xml.XmlWriter)
  name: WriteXml(String, XmlWriter)
  nameWithType: Measurement<String>.WriteXml(String, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.Measurement<System.String>.WriteXml(System.String, System.Xml.XmlWriter)
  nameWithType.vb: Measurement(Of String).WriteXml(String, XmlWriter)
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of System.String).WriteXml(System.String, System.Xml.XmlWriter)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: Measurement<String>.WriteXml
    fullName: Microsoft.Health.ItemTypes.Measurement<System.String>.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: Measurement(Of String).WriteXml
    fullName: Microsoft.Health.ItemTypes.Measurement(Of System.String).WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Measurement{System.String}.Value
  commentId: P:Microsoft.Health.ItemTypes.Measurement{System.String}.Value
  parent: Microsoft.Health.ItemTypes.Measurement{System.String}
  definition: Microsoft.Health.ItemTypes.Measurement`1.Value
  name: Value
  nameWithType: Measurement<String>.Value
  fullName: Microsoft.Health.ItemTypes.Measurement<System.String>.Value
  nameWithType.vb: Measurement(Of String).Value
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of System.String).Value
- uid: Microsoft.Health.ItemTypes.Measurement{System.String}.DisplayValue
  commentId: P:Microsoft.Health.ItemTypes.Measurement{System.String}.DisplayValue
  parent: Microsoft.Health.ItemTypes.Measurement{System.String}
  definition: Microsoft.Health.ItemTypes.Measurement`1.DisplayValue
  name: DisplayValue
  nameWithType: Measurement<String>.DisplayValue
  fullName: Microsoft.Health.ItemTypes.Measurement<System.String>.DisplayValue
  nameWithType.vb: Measurement(Of String).DisplayValue
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of System.String).DisplayValue
- uid: Microsoft.Health.ItemTypes.Measurement{System.String}.ToString
  commentId: M:Microsoft.Health.ItemTypes.Measurement{System.String}.ToString
  parent: Microsoft.Health.ItemTypes.Measurement{System.String}
  definition: Microsoft.Health.ItemTypes.Measurement`1.ToString
  name: ToString()
  nameWithType: Measurement<String>.ToString()
  fullName: Microsoft.Health.ItemTypes.Measurement<System.String>.ToString()
  nameWithType.vb: Measurement(Of String).ToString()
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of System.String).ToString()
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.ToString
    name: ToString
    nameWithType: Measurement<String>.ToString
    fullName: Microsoft.Health.ItemTypes.Measurement<System.String>.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.ToString
    name: ToString
    nameWithType: Measurement(Of String).ToString
    fullName: Microsoft.Health.ItemTypes.Measurement(Of System.String).ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.ItemTypes.Measurement`1
  commentId: T:Microsoft.Health.ItemTypes.Measurement`1
  isExternal: false
  name: Measurement<MeasurementType>
  nameWithType: Measurement<MeasurementType>
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>
  nameWithType.vb: Measurement(Of MeasurementType)
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType)
  name.vb: Measurement(Of MeasurementType)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Measurement`1
    name: Measurement
    nameWithType: Measurement
    fullName: Microsoft.Health.ItemTypes.Measurement
  - name: <
    nameWithType: <
    fullName: <
  - name: MeasurementType
    nameWithType: MeasurementType
    fullName: MeasurementType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Measurement`1
    name: Measurement
    nameWithType: Measurement
    fullName: Microsoft.Health.ItemTypes.Measurement
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: MeasurementType
    nameWithType: MeasurementType
    fullName: MeasurementType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Measurement`1.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.Measurement`1.ParseXml(System.Xml.XPath.XPathNavigator)
  isExternal: true
  name: ParseXml(XPathNavigator)
  nameWithType: Measurement<MeasurementType>.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.ParseXml(System.Xml.XPath.XPathNavigator)
  nameWithType.vb: Measurement(Of MeasurementType).ParseXml(XPathNavigator)
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).ParseXml(System.Xml.XPath.XPathNavigator)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: Measurement<MeasurementType>.ParseXml
    fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: Measurement(Of MeasurementType).ParseXml
    fullName: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Measurement`1.WriteXml(System.String,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.Measurement`1.WriteXml(System.String,System.Xml.XmlWriter)
  isExternal: true
  name: WriteXml(String, XmlWriter)
  nameWithType: Measurement<MeasurementType>.WriteXml(String, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.WriteXml(System.String, System.Xml.XmlWriter)
  nameWithType.vb: Measurement(Of MeasurementType).WriteXml(String, XmlWriter)
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).WriteXml(System.String, System.Xml.XmlWriter)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: Measurement<MeasurementType>.WriteXml
    fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: Measurement(Of MeasurementType).WriteXml
    fullName: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Measurement`1.Value
  commentId: P:Microsoft.Health.ItemTypes.Measurement`1.Value
  isExternal: false
  name: Value
  nameWithType: Measurement<MeasurementType>.Value
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.Value
  nameWithType.vb: Measurement(Of MeasurementType).Value
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).Value
- uid: Microsoft.Health.ItemTypes.Measurement`1.DisplayValue
  commentId: P:Microsoft.Health.ItemTypes.Measurement`1.DisplayValue
  isExternal: false
  name: DisplayValue
  nameWithType: Measurement<MeasurementType>.DisplayValue
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.DisplayValue
  nameWithType.vb: Measurement(Of MeasurementType).DisplayValue
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).DisplayValue
- uid: Microsoft.Health.ItemTypes.Measurement`1.ToString
  commentId: M:Microsoft.Health.ItemTypes.Measurement`1.ToString
  isExternal: false
  name: ToString()
  nameWithType: Measurement<MeasurementType>.ToString()
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.ToString()
  nameWithType.vb: Measurement(Of MeasurementType).ToString()
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).ToString()
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.ToString
    name: ToString
    nameWithType: Measurement<MeasurementType>.ToString
    fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.ToString
    name: ToString
    nameWithType: Measurement(Of MeasurementType).ToString
    fullName: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.StringMeasurement
  commentId: T:Microsoft.Health.ItemTypes.StringMeasurement
  isExternal: false
  name: StringMeasurement
  nameWithType: StringMeasurement
  fullName: Microsoft.Health.ItemTypes.StringMeasurement
- uid: Microsoft.Health.ItemTypes.StringMeasurement.#ctor*
  commentId: Overload:Microsoft.Health.ItemTypes.StringMeasurement.#ctor
  isExternal: false
  name: StringMeasurement
  nameWithType: StringMeasurement.StringMeasurement
  fullName: Microsoft.Health.ItemTypes.StringMeasurement.StringMeasurement
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.ItemTypes.DisplayValue.Units
  commentId: P:Microsoft.Health.ItemTypes.DisplayValue.Units
- uid: Microsoft.Health.ItemTypes.DisplayValue.UnitsCode
  commentId: P:Microsoft.Health.ItemTypes.DisplayValue.UnitsCode
- uid: Microsoft.Health.ItemTypes.DisplayValue
  commentId: T:Microsoft.Health.ItemTypes.DisplayValue
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: DisplayValue
  nameWithType: DisplayValue
  fullName: Microsoft.Health.ItemTypes.DisplayValue
- uid: Microsoft.Health.ItemTypes.Measurement{System.String}.AssertMeasurementValue(System.String)
  commentId: M:Microsoft.Health.ItemTypes.Measurement{System.String}.AssertMeasurementValue(System.String)
  parent: Microsoft.Health.ItemTypes.Measurement{System.String}
  definition: Microsoft.Health.ItemTypes.Measurement`1.AssertMeasurementValue(`0)
  name: AssertMeasurementValue(String)
  nameWithType: Measurement<String>.AssertMeasurementValue(String)
  fullName: Microsoft.Health.ItemTypes.Measurement<System.String>.AssertMeasurementValue(System.String)
  nameWithType.vb: Measurement(Of String).AssertMeasurementValue(String)
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of System.String).AssertMeasurementValue(System.String)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.AssertMeasurementValue(`0)
    name: AssertMeasurementValue
    nameWithType: Measurement<String>.AssertMeasurementValue
    fullName: Microsoft.Health.ItemTypes.Measurement<System.String>.AssertMeasurementValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.AssertMeasurementValue(`0)
    name: AssertMeasurementValue
    nameWithType: Measurement(Of String).AssertMeasurementValue
    fullName: Microsoft.Health.ItemTypes.Measurement(Of System.String).AssertMeasurementValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.StringMeasurement.AssertMeasurementValue*
  commentId: Overload:Microsoft.Health.ItemTypes.StringMeasurement.AssertMeasurementValue
  isExternal: false
  name: AssertMeasurementValue
  nameWithType: StringMeasurement.AssertMeasurementValue
  fullName: Microsoft.Health.ItemTypes.StringMeasurement.AssertMeasurementValue
- uid: Microsoft.Health.ItemTypes.Measurement`1.AssertMeasurementValue(`0)
  commentId: M:Microsoft.Health.ItemTypes.Measurement`1.AssertMeasurementValue(`0)
  isExternal: false
  name: AssertMeasurementValue(MeasurementType)
  nameWithType: Measurement<MeasurementType>.AssertMeasurementValue(MeasurementType)
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.AssertMeasurementValue(MeasurementType)
  nameWithType.vb: Measurement(Of MeasurementType).AssertMeasurementValue(MeasurementType)
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).AssertMeasurementValue(MeasurementType)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.AssertMeasurementValue(`0)
    name: AssertMeasurementValue
    nameWithType: Measurement<MeasurementType>.AssertMeasurementValue
    fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.AssertMeasurementValue
  - name: (
    nameWithType: (
    fullName: (
  - name: MeasurementType
    nameWithType: MeasurementType
    fullName: MeasurementType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.AssertMeasurementValue(`0)
    name: AssertMeasurementValue
    nameWithType: Measurement(Of MeasurementType).AssertMeasurementValue
    fullName: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).AssertMeasurementValue
  - name: (
    nameWithType: (
    fullName: (
  - name: MeasurementType
    nameWithType: MeasurementType
    fullName: MeasurementType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Measurement{System.String}.ParseValueXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.Measurement{System.String}.ParseValueXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.Measurement{System.String}
  definition: Microsoft.Health.ItemTypes.Measurement`1.ParseValueXml(System.Xml.XPath.XPathNavigator)
  name: ParseValueXml(XPathNavigator)
  nameWithType: Measurement<String>.ParseValueXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.Measurement<System.String>.ParseValueXml(System.Xml.XPath.XPathNavigator)
  nameWithType.vb: Measurement(Of String).ParseValueXml(XPathNavigator)
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of System.String).ParseValueXml(System.Xml.XPath.XPathNavigator)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.ParseValueXml(System.Xml.XPath.XPathNavigator)
    name: ParseValueXml
    nameWithType: Measurement<String>.ParseValueXml
    fullName: Microsoft.Health.ItemTypes.Measurement<System.String>.ParseValueXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.ParseValueXml(System.Xml.XPath.XPathNavigator)
    name: ParseValueXml
    nameWithType: Measurement(Of String).ParseValueXml
    fullName: Microsoft.Health.ItemTypes.Measurement(Of System.String).ParseValueXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.StringMeasurement.ParseValueXml*
  commentId: Overload:Microsoft.Health.ItemTypes.StringMeasurement.ParseValueXml
  isExternal: false
  name: ParseValueXml
  nameWithType: StringMeasurement.ParseValueXml
  fullName: Microsoft.Health.ItemTypes.StringMeasurement.ParseValueXml
- uid: System.Xml.XPath.XPathNavigator
  commentId: T:System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: true
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: Microsoft.Health.ItemTypes.Measurement`1.ParseValueXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.Measurement`1.ParseValueXml(System.Xml.XPath.XPathNavigator)
  isExternal: true
  name: ParseValueXml(XPathNavigator)
  nameWithType: Measurement<MeasurementType>.ParseValueXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.ParseValueXml(System.Xml.XPath.XPathNavigator)
  nameWithType.vb: Measurement(Of MeasurementType).ParseValueXml(XPathNavigator)
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).ParseValueXml(System.Xml.XPath.XPathNavigator)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.ParseValueXml(System.Xml.XPath.XPathNavigator)
    name: ParseValueXml
    nameWithType: Measurement<MeasurementType>.ParseValueXml
    fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.ParseValueXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.ParseValueXml(System.Xml.XPath.XPathNavigator)
    name: ParseValueXml
    nameWithType: Measurement(Of MeasurementType).ParseValueXml
    fullName: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).ParseValueXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: false
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: Microsoft.Health.ItemTypes.Measurement{System.String}.WriteValueXml(System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.Measurement{System.String}.WriteValueXml(System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.Measurement{System.String}
  definition: Microsoft.Health.ItemTypes.Measurement`1.WriteValueXml(System.Xml.XmlWriter)
  name: WriteValueXml(XmlWriter)
  nameWithType: Measurement<String>.WriteValueXml(XmlWriter)
  fullName: Microsoft.Health.ItemTypes.Measurement<System.String>.WriteValueXml(System.Xml.XmlWriter)
  nameWithType.vb: Measurement(Of String).WriteValueXml(XmlWriter)
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of System.String).WriteValueXml(System.Xml.XmlWriter)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.WriteValueXml(System.Xml.XmlWriter)
    name: WriteValueXml
    nameWithType: Measurement<String>.WriteValueXml
    fullName: Microsoft.Health.ItemTypes.Measurement<System.String>.WriteValueXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.WriteValueXml(System.Xml.XmlWriter)
    name: WriteValueXml
    nameWithType: Measurement(Of String).WriteValueXml
    fullName: Microsoft.Health.ItemTypes.Measurement(Of System.String).WriteValueXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.StringMeasurement.WriteValueXml*
  commentId: Overload:Microsoft.Health.ItemTypes.StringMeasurement.WriteValueXml
  isExternal: false
  name: WriteValueXml
  nameWithType: StringMeasurement.WriteValueXml
  fullName: Microsoft.Health.ItemTypes.StringMeasurement.WriteValueXml
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: Microsoft.Health.ItemTypes.Measurement`1.WriteValueXml(System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.Measurement`1.WriteValueXml(System.Xml.XmlWriter)
  isExternal: true
  name: WriteValueXml(XmlWriter)
  nameWithType: Measurement<MeasurementType>.WriteValueXml(XmlWriter)
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.WriteValueXml(System.Xml.XmlWriter)
  nameWithType.vb: Measurement(Of MeasurementType).WriteValueXml(XmlWriter)
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).WriteValueXml(System.Xml.XmlWriter)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.WriteValueXml(System.Xml.XmlWriter)
    name: WriteValueXml
    nameWithType: Measurement<MeasurementType>.WriteValueXml
    fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.WriteValueXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.WriteValueXml(System.Xml.XmlWriter)
    name: WriteValueXml
    nameWithType: Measurement(Of MeasurementType).WriteValueXml
    fullName: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).WriteValueXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: Microsoft.Health.ItemTypes.Measurement{System.String}.GetValueString(System.String)
  commentId: M:Microsoft.Health.ItemTypes.Measurement{System.String}.GetValueString(System.String)
  parent: Microsoft.Health.ItemTypes.Measurement{System.String}
  definition: Microsoft.Health.ItemTypes.Measurement`1.GetValueString(`0)
  name: GetValueString(String)
  nameWithType: Measurement<String>.GetValueString(String)
  fullName: Microsoft.Health.ItemTypes.Measurement<System.String>.GetValueString(System.String)
  nameWithType.vb: Measurement(Of String).GetValueString(String)
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of System.String).GetValueString(System.String)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.GetValueString(`0)
    name: GetValueString
    nameWithType: Measurement<String>.GetValueString
    fullName: Microsoft.Health.ItemTypes.Measurement<System.String>.GetValueString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.GetValueString(`0)
    name: GetValueString
    nameWithType: Measurement(Of String).GetValueString
    fullName: Microsoft.Health.ItemTypes.Measurement(Of System.String).GetValueString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.StringMeasurement.GetValueString*
  commentId: Overload:Microsoft.Health.ItemTypes.StringMeasurement.GetValueString
  isExternal: false
  name: GetValueString
  nameWithType: StringMeasurement.GetValueString
  fullName: Microsoft.Health.ItemTypes.StringMeasurement.GetValueString
- uid: Microsoft.Health.ItemTypes.Measurement`1.GetValueString(`0)
  commentId: M:Microsoft.Health.ItemTypes.Measurement`1.GetValueString(`0)
  isExternal: false
  name: GetValueString(MeasurementType)
  nameWithType: Measurement<MeasurementType>.GetValueString(MeasurementType)
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.GetValueString(MeasurementType)
  nameWithType.vb: Measurement(Of MeasurementType).GetValueString(MeasurementType)
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).GetValueString(MeasurementType)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.GetValueString(`0)
    name: GetValueString
    nameWithType: Measurement<MeasurementType>.GetValueString
    fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.GetValueString
  - name: (
    nameWithType: (
    fullName: (
  - name: MeasurementType
    nameWithType: MeasurementType
    fullName: MeasurementType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.GetValueString(`0)
    name: GetValueString
    nameWithType: Measurement(Of MeasurementType).GetValueString
    fullName: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).GetValueString
  - name: (
    nameWithType: (
    fullName: (
  - name: MeasurementType
    nameWithType: MeasurementType
    fullName: MeasurementType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.StringMeasurement.ValueElementName*
  commentId: Overload:Microsoft.Health.ItemTypes.StringMeasurement.ValueElementName
  isExternal: false
  name: ValueElementName
  nameWithType: StringMeasurement.ValueElementName
  fullName: Microsoft.Health.ItemTypes.StringMeasurement.ValueElementName
