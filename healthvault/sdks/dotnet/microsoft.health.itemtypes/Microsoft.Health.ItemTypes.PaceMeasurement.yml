### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.ItemTypes.PaceMeasurement
  commentId: T:Microsoft.Health.ItemTypes.PaceMeasurement
  id: PaceMeasurement
  parent: Microsoft.Health.ItemTypes
  children:
  - Microsoft.Health.ItemTypes.PaceMeasurement.#ctor
  - Microsoft.Health.ItemTypes.PaceMeasurement.#ctor(System.Double)
  - Microsoft.Health.ItemTypes.PaceMeasurement.#ctor(System.Double,Microsoft.Health.ItemTypes.DisplayValue)
  - Microsoft.Health.ItemTypes.PaceMeasurement.AssertMeasurementValue(System.Double)
  - Microsoft.Health.ItemTypes.PaceMeasurement.GetValueString(System.Double)
  - Microsoft.Health.ItemTypes.PaceMeasurement.ParseValueXml(System.Xml.XPath.XPathNavigator)
  - Microsoft.Health.ItemTypes.PaceMeasurement.WriteValueXml(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: PaceMeasurement
  nameWithType: PaceMeasurement
  fullName: Microsoft.Health.ItemTypes.PaceMeasurement
  type: Class
  source:
    remote:
      path: Microsoft.Health.ItemTypes/PaceMeasurement.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: PaceMeasurement
    path: PaceMeasurement.cs
    startLine: 28
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nRepresents a pace measurement and display.\n"
  remarks: "\nIn HealthVault, pace measurements have values and display values. \nAll values are stored in a base unit of seconds per 100 meters. \nAn application can take a pace value using any scale the application \nchooses and can store the user-entered value as the display value, \nbut the pace value must be converted to seconds per 100 meters to be \nstored in HealthVault.\n"
  example: []
  syntax:
    content: 'public class PaceMeasurement : Measurement<double>'
    content.vb: >-
      Public Class PaceMeasurement
          Inherits Measurement(Of Double)
  inheritance:
  - System.Object
  - Microsoft.Health.ItemTypes.HealthRecordItemData
  - Microsoft.Health.ItemTypes.Measurement{System.Double}
  inheritedMembers:
  - Microsoft.Health.ItemTypes.Measurement{System.Double}.ParseXml(System.Xml.XPath.XPathNavigator)
  - Microsoft.Health.ItemTypes.Measurement{System.Double}.WriteXml(System.String,System.Xml.XmlWriter)
  - Microsoft.Health.ItemTypes.Measurement{System.Double}.Value
  - Microsoft.Health.ItemTypes.Measurement{System.Double}.DisplayValue
  - Microsoft.Health.ItemTypes.Measurement{System.Double}.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.ItemTypes.PaceMeasurement.#ctor
  commentId: M:Microsoft.Health.ItemTypes.PaceMeasurement.#ctor
  id: '#ctor'
  parent: Microsoft.Health.ItemTypes.PaceMeasurement
  langs:
  - csharp
  - vb
  name: PaceMeasurement()
  nameWithType: PaceMeasurement.PaceMeasurement()
  fullName: Microsoft.Health.ItemTypes.PaceMeasurement.PaceMeasurement()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/PaceMeasurement.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: PaceMeasurement.cs
    startLine: 35
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.PaceMeasurement\" data-throw-if-not-resolved=\"false\"></xref> \nclass with empty values.\n"
  example: []
  syntax:
    content: public PaceMeasurement()
    content.vb: Public Sub New
  overload: Microsoft.Health.ItemTypes.PaceMeasurement.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.PaceMeasurement.#ctor(System.Double)
  commentId: M:Microsoft.Health.ItemTypes.PaceMeasurement.#ctor(System.Double)
  id: '#ctor(System.Double)'
  parent: Microsoft.Health.ItemTypes.PaceMeasurement
  langs:
  - csharp
  - vb
  name: PaceMeasurement(Double)
  nameWithType: PaceMeasurement.PaceMeasurement(Double)
  fullName: Microsoft.Health.ItemTypes.PaceMeasurement.PaceMeasurement(System.Double)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/PaceMeasurement.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: PaceMeasurement.cs
    startLine: 48
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.PaceMeasurement\" data-throw-if-not-resolved=\"false\"></xref> \nclass with the specified value in seconds per 100 meters.\n"
  example: []
  syntax:
    content: public PaceMeasurement(double secondsPerHundredMeters)
    content.vb: Public Sub New(secondsPerHundredMeters As Double)
    parameters:
    - id: secondsPerHundredMeters
      type: System.Double
      description: "\nThe pace in seconds per 100 meters.\n"
  overload: Microsoft.Health.ItemTypes.PaceMeasurement.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.PaceMeasurement.#ctor(System.Double,Microsoft.Health.ItemTypes.DisplayValue)
  commentId: M:Microsoft.Health.ItemTypes.PaceMeasurement.#ctor(System.Double,Microsoft.Health.ItemTypes.DisplayValue)
  id: '#ctor(System.Double,Microsoft.Health.ItemTypes.DisplayValue)'
  parent: Microsoft.Health.ItemTypes.PaceMeasurement
  langs:
  - csharp
  - vb
  name: PaceMeasurement(Double, DisplayValue)
  nameWithType: PaceMeasurement.PaceMeasurement(Double, DisplayValue)
  fullName: Microsoft.Health.ItemTypes.PaceMeasurement.PaceMeasurement(System.Double, Microsoft.Health.ItemTypes.DisplayValue)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/PaceMeasurement.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: PaceMeasurement.cs
    startLine: 72
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.PaceMeasurement\" data-throw-if-not-resolved=\"false\"></xref> \nclass with the specified value in seconds per 100 meters and \noptional display value.\n"
  example: []
  syntax:
    content: public PaceMeasurement(double secondsPerHundredMeters, DisplayValue displayValue)
    content.vb: Public Sub New(secondsPerHundredMeters As Double, displayValue As DisplayValue)
    parameters:
    - id: secondsPerHundredMeters
      type: System.Double
      description: "\nThe pace in seconds per 100 meters.\n"
    - id: displayValue
      type: Microsoft.Health.ItemTypes.DisplayValue
      description: "\nThe display value of the pace. This should contain the\nexact pace as entered by the user even if it uses some\nother unit of measure besides seconds per 100 meters. The display value\n<xref href=\"Microsoft.Health.ItemTypes.DisplayValue.Units\" data-throw-if-not-resolved=\"false\"></xref> and \n<xref href=\"Microsoft.Health.ItemTypes.DisplayValue.UnitsCode\" data-throw-if-not-resolved=\"false\"></xref> \nrepresents the unit of measure for the user-entered value.\n"
  overload: Microsoft.Health.ItemTypes.PaceMeasurement.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.PaceMeasurement.AssertMeasurementValue(System.Double)
  commentId: M:Microsoft.Health.ItemTypes.PaceMeasurement.AssertMeasurementValue(System.Double)
  id: AssertMeasurementValue(System.Double)
  parent: Microsoft.Health.ItemTypes.PaceMeasurement
  langs:
  - csharp
  - vb
  name: AssertMeasurementValue(Double)
  nameWithType: PaceMeasurement.AssertMeasurementValue(Double)
  fullName: Microsoft.Health.ItemTypes.PaceMeasurement.AssertMeasurementValue(System.Double)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/PaceMeasurement.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AssertMeasurementValue
    path: PaceMeasurement.cs
    startLine: 89
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nVerifies that the value is a legal pace value.\n"
  example: []
  syntax:
    content: protected override void AssertMeasurementValue(double value)
    content.vb: Protected Overrides Sub AssertMeasurementValue(value As Double)
    parameters:
    - id: value
      type: System.Double
      description: "\nThe pace measurement.\n"
  overridden: Microsoft.Health.ItemTypes.Measurement{System.Double}.AssertMeasurementValue(System.Double)
  overload: Microsoft.Health.ItemTypes.PaceMeasurement.AssertMeasurementValue*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nThe <span class=\"paramref\">value</span> parameter is less than or equal to zero.\n"
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Health.ItemTypes.PaceMeasurement.ParseValueXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.PaceMeasurement.ParseValueXml(System.Xml.XPath.XPathNavigator)
  id: ParseValueXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.PaceMeasurement
  langs:
  - csharp
  - vb
  name: ParseValueXml(XPathNavigator)
  nameWithType: PaceMeasurement.ParseValueXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.PaceMeasurement.ParseValueXml(System.Xml.XPath.XPathNavigator)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/PaceMeasurement.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ParseValueXml
    path: PaceMeasurement.cs
    startLine: 102
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nPopulates the data for the pace from the XML.\n"
  example: []
  syntax:
    content: protected override void ParseValueXml(XPathNavigator navigator)
    content.vb: Protected Overrides Sub ParseValueXml(navigator As XPathNavigator)
    parameters:
    - id: navigator
      type: System.Xml.XPath.XPathNavigator
      description: "\nThe XML node representing the pace.\n"
  overridden: Microsoft.Health.ItemTypes.Measurement{System.Double}.ParseValueXml(System.Xml.XPath.XPathNavigator)
  overload: Microsoft.Health.ItemTypes.PaceMeasurement.ParseValueXml*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Health.ItemTypes.PaceMeasurement.WriteValueXml(System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.PaceMeasurement.WriteValueXml(System.Xml.XmlWriter)
  id: WriteValueXml(System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.PaceMeasurement
  langs:
  - csharp
  - vb
  name: WriteValueXml(XmlWriter)
  nameWithType: PaceMeasurement.WriteValueXml(XmlWriter)
  fullName: Microsoft.Health.ItemTypes.PaceMeasurement.WriteValueXml(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/PaceMeasurement.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteValueXml
    path: PaceMeasurement.cs
    startLine: 115
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nWrites the pace to the specified XML writer.\n"
  example: []
  syntax:
    content: protected override void WriteValueXml(XmlWriter writer)
    content.vb: Protected Overrides Sub WriteValueXml(writer As XmlWriter)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "\nThe XmlWriter to write the pace to.\n"
  overridden: Microsoft.Health.ItemTypes.Measurement{System.Double}.WriteValueXml(System.Xml.XmlWriter)
  overload: Microsoft.Health.ItemTypes.PaceMeasurement.WriteValueXml*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Health.ItemTypes.PaceMeasurement.GetValueString(System.Double)
  commentId: M:Microsoft.Health.ItemTypes.PaceMeasurement.GetValueString(System.Double)
  id: GetValueString(System.Double)
  parent: Microsoft.Health.ItemTypes.PaceMeasurement
  langs:
  - csharp
  - vb
  name: GetValueString(Double)
  nameWithType: PaceMeasurement.GetValueString(Double)
  fullName: Microsoft.Health.ItemTypes.PaceMeasurement.GetValueString(System.Double)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/PaceMeasurement.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetValueString
    path: PaceMeasurement.cs
    startLine: 130
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets a string representation of the pace in the base units.\n"
  example: []
  syntax:
    content: protected override string GetValueString(double value)
    content.vb: Protected Overrides Function GetValueString(value As Double) As String
    parameters:
    - id: value
      type: System.Double
    return:
      type: System.String
      description: "\nThe pace as a string in the base units.\n"
  overridden: Microsoft.Health.ItemTypes.Measurement{System.Double}.GetValueString(System.Double)
  overload: Microsoft.Health.ItemTypes.PaceMeasurement.GetValueString*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Microsoft.Health.ItemTypes
  commentId: N:Microsoft.Health.ItemTypes
  isExternal: false
  name: Microsoft.Health.ItemTypes
  nameWithType: Microsoft.Health.ItemTypes
  fullName: Microsoft.Health.ItemTypes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData
  commentId: T:Microsoft.Health.ItemTypes.HealthRecordItemData
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: HealthRecordItemData
  nameWithType: HealthRecordItemData
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData
- uid: Microsoft.Health.ItemTypes.Measurement{System.Double}
  commentId: T:Microsoft.Health.ItemTypes.Measurement{System.Double}
  parent: Microsoft.Health.ItemTypes
  definition: Microsoft.Health.ItemTypes.Measurement`1
  name: Measurement<Double>
  nameWithType: Measurement<Double>
  fullName: Microsoft.Health.ItemTypes.Measurement<System.Double>
  nameWithType.vb: Measurement(Of Double)
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of System.Double)
  name.vb: Measurement(Of Double)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Measurement`1
    name: Measurement
    nameWithType: Measurement
    fullName: Microsoft.Health.ItemTypes.Measurement
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Measurement`1
    name: Measurement
    nameWithType: Measurement
    fullName: Microsoft.Health.ItemTypes.Measurement
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Measurement{System.Double}.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.Measurement{System.Double}.ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.Measurement{System.Double}
  definition: Microsoft.Health.ItemTypes.Measurement`1.ParseXml(System.Xml.XPath.XPathNavigator)
  name: ParseXml(XPathNavigator)
  nameWithType: Measurement<Double>.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.Measurement<System.Double>.ParseXml(System.Xml.XPath.XPathNavigator)
  nameWithType.vb: Measurement(Of Double).ParseXml(XPathNavigator)
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of System.Double).ParseXml(System.Xml.XPath.XPathNavigator)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: Measurement<Double>.ParseXml
    fullName: Microsoft.Health.ItemTypes.Measurement<System.Double>.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: Measurement(Of Double).ParseXml
    fullName: Microsoft.Health.ItemTypes.Measurement(Of System.Double).ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Measurement{System.Double}.WriteXml(System.String,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.Measurement{System.Double}.WriteXml(System.String,System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.Measurement{System.Double}
  definition: Microsoft.Health.ItemTypes.Measurement`1.WriteXml(System.String,System.Xml.XmlWriter)
  name: WriteXml(String, XmlWriter)
  nameWithType: Measurement<Double>.WriteXml(String, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.Measurement<System.Double>.WriteXml(System.String, System.Xml.XmlWriter)
  nameWithType.vb: Measurement(Of Double).WriteXml(String, XmlWriter)
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of System.Double).WriteXml(System.String, System.Xml.XmlWriter)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: Measurement<Double>.WriteXml
    fullName: Microsoft.Health.ItemTypes.Measurement<System.Double>.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: Measurement(Of Double).WriteXml
    fullName: Microsoft.Health.ItemTypes.Measurement(Of System.Double).WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Measurement{System.Double}.Value
  commentId: P:Microsoft.Health.ItemTypes.Measurement{System.Double}.Value
  parent: Microsoft.Health.ItemTypes.Measurement{System.Double}
  definition: Microsoft.Health.ItemTypes.Measurement`1.Value
  name: Value
  nameWithType: Measurement<Double>.Value
  fullName: Microsoft.Health.ItemTypes.Measurement<System.Double>.Value
  nameWithType.vb: Measurement(Of Double).Value
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of System.Double).Value
- uid: Microsoft.Health.ItemTypes.Measurement{System.Double}.DisplayValue
  commentId: P:Microsoft.Health.ItemTypes.Measurement{System.Double}.DisplayValue
  parent: Microsoft.Health.ItemTypes.Measurement{System.Double}
  definition: Microsoft.Health.ItemTypes.Measurement`1.DisplayValue
  name: DisplayValue
  nameWithType: Measurement<Double>.DisplayValue
  fullName: Microsoft.Health.ItemTypes.Measurement<System.Double>.DisplayValue
  nameWithType.vb: Measurement(Of Double).DisplayValue
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of System.Double).DisplayValue
- uid: Microsoft.Health.ItemTypes.Measurement{System.Double}.ToString
  commentId: M:Microsoft.Health.ItemTypes.Measurement{System.Double}.ToString
  parent: Microsoft.Health.ItemTypes.Measurement{System.Double}
  definition: Microsoft.Health.ItemTypes.Measurement`1.ToString
  name: ToString()
  nameWithType: Measurement<Double>.ToString()
  fullName: Microsoft.Health.ItemTypes.Measurement<System.Double>.ToString()
  nameWithType.vb: Measurement(Of Double).ToString()
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of System.Double).ToString()
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.ToString
    name: ToString
    nameWithType: Measurement<Double>.ToString
    fullName: Microsoft.Health.ItemTypes.Measurement<System.Double>.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.ToString
    name: ToString
    nameWithType: Measurement(Of Double).ToString
    fullName: Microsoft.Health.ItemTypes.Measurement(Of System.Double).ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.ItemTypes.Measurement`1
  commentId: T:Microsoft.Health.ItemTypes.Measurement`1
  isExternal: false
  name: Measurement<MeasurementType>
  nameWithType: Measurement<MeasurementType>
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>
  nameWithType.vb: Measurement(Of MeasurementType)
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType)
  name.vb: Measurement(Of MeasurementType)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Measurement`1
    name: Measurement
    nameWithType: Measurement
    fullName: Microsoft.Health.ItemTypes.Measurement
  - name: <
    nameWithType: <
    fullName: <
  - name: MeasurementType
    nameWithType: MeasurementType
    fullName: MeasurementType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Measurement`1
    name: Measurement
    nameWithType: Measurement
    fullName: Microsoft.Health.ItemTypes.Measurement
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: MeasurementType
    nameWithType: MeasurementType
    fullName: MeasurementType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Measurement`1.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.Measurement`1.ParseXml(System.Xml.XPath.XPathNavigator)
  isExternal: true
  name: ParseXml(XPathNavigator)
  nameWithType: Measurement<MeasurementType>.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.ParseXml(System.Xml.XPath.XPathNavigator)
  nameWithType.vb: Measurement(Of MeasurementType).ParseXml(XPathNavigator)
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).ParseXml(System.Xml.XPath.XPathNavigator)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: Measurement<MeasurementType>.ParseXml
    fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: Measurement(Of MeasurementType).ParseXml
    fullName: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Measurement`1.WriteXml(System.String,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.Measurement`1.WriteXml(System.String,System.Xml.XmlWriter)
  isExternal: true
  name: WriteXml(String, XmlWriter)
  nameWithType: Measurement<MeasurementType>.WriteXml(String, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.WriteXml(System.String, System.Xml.XmlWriter)
  nameWithType.vb: Measurement(Of MeasurementType).WriteXml(String, XmlWriter)
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).WriteXml(System.String, System.Xml.XmlWriter)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: Measurement<MeasurementType>.WriteXml
    fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: Measurement(Of MeasurementType).WriteXml
    fullName: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Measurement`1.Value
  commentId: P:Microsoft.Health.ItemTypes.Measurement`1.Value
  isExternal: false
  name: Value
  nameWithType: Measurement<MeasurementType>.Value
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.Value
  nameWithType.vb: Measurement(Of MeasurementType).Value
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).Value
- uid: Microsoft.Health.ItemTypes.Measurement`1.DisplayValue
  commentId: P:Microsoft.Health.ItemTypes.Measurement`1.DisplayValue
  isExternal: false
  name: DisplayValue
  nameWithType: Measurement<MeasurementType>.DisplayValue
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.DisplayValue
  nameWithType.vb: Measurement(Of MeasurementType).DisplayValue
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).DisplayValue
- uid: Microsoft.Health.ItemTypes.Measurement`1.ToString
  commentId: M:Microsoft.Health.ItemTypes.Measurement`1.ToString
  isExternal: false
  name: ToString()
  nameWithType: Measurement<MeasurementType>.ToString()
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.ToString()
  nameWithType.vb: Measurement(Of MeasurementType).ToString()
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).ToString()
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.ToString
    name: ToString
    nameWithType: Measurement<MeasurementType>.ToString
    fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.ToString
    name: ToString
    nameWithType: Measurement(Of MeasurementType).ToString
    fullName: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.PaceMeasurement
  commentId: T:Microsoft.Health.ItemTypes.PaceMeasurement
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: PaceMeasurement
  nameWithType: PaceMeasurement
  fullName: Microsoft.Health.ItemTypes.PaceMeasurement
- uid: Microsoft.Health.ItemTypes.PaceMeasurement.#ctor*
  commentId: Overload:Microsoft.Health.ItemTypes.PaceMeasurement.#ctor
  isExternal: false
  name: PaceMeasurement
  nameWithType: PaceMeasurement.PaceMeasurement
  fullName: Microsoft.Health.ItemTypes.PaceMeasurement.PaceMeasurement
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Microsoft.Health.ItemTypes.DisplayValue.Units
  commentId: P:Microsoft.Health.ItemTypes.DisplayValue.Units
- uid: Microsoft.Health.ItemTypes.DisplayValue.UnitsCode
  commentId: P:Microsoft.Health.ItemTypes.DisplayValue.UnitsCode
- uid: Microsoft.Health.ItemTypes.DisplayValue
  commentId: T:Microsoft.Health.ItemTypes.DisplayValue
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: DisplayValue
  nameWithType: DisplayValue
  fullName: Microsoft.Health.ItemTypes.DisplayValue
- uid: Microsoft.Health.ItemTypes.Measurement{System.Double}.AssertMeasurementValue(System.Double)
  commentId: M:Microsoft.Health.ItemTypes.Measurement{System.Double}.AssertMeasurementValue(System.Double)
  parent: Microsoft.Health.ItemTypes.Measurement{System.Double}
  definition: Microsoft.Health.ItemTypes.Measurement`1.AssertMeasurementValue(`0)
  name: AssertMeasurementValue(Double)
  nameWithType: Measurement<Double>.AssertMeasurementValue(Double)
  fullName: Microsoft.Health.ItemTypes.Measurement<System.Double>.AssertMeasurementValue(System.Double)
  nameWithType.vb: Measurement(Of Double).AssertMeasurementValue(Double)
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of System.Double).AssertMeasurementValue(System.Double)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.AssertMeasurementValue(`0)
    name: AssertMeasurementValue
    nameWithType: Measurement<Double>.AssertMeasurementValue
    fullName: Microsoft.Health.ItemTypes.Measurement<System.Double>.AssertMeasurementValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.AssertMeasurementValue(`0)
    name: AssertMeasurementValue
    nameWithType: Measurement(Of Double).AssertMeasurementValue
    fullName: Microsoft.Health.ItemTypes.Measurement(Of System.Double).AssertMeasurementValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.PaceMeasurement.AssertMeasurementValue*
  commentId: Overload:Microsoft.Health.ItemTypes.PaceMeasurement.AssertMeasurementValue
  isExternal: false
  name: AssertMeasurementValue
  nameWithType: PaceMeasurement.AssertMeasurementValue
  fullName: Microsoft.Health.ItemTypes.PaceMeasurement.AssertMeasurementValue
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
- uid: Microsoft.Health.ItemTypes.Measurement`1.AssertMeasurementValue(`0)
  commentId: M:Microsoft.Health.ItemTypes.Measurement`1.AssertMeasurementValue(`0)
  isExternal: false
  name: AssertMeasurementValue(MeasurementType)
  nameWithType: Measurement<MeasurementType>.AssertMeasurementValue(MeasurementType)
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.AssertMeasurementValue(MeasurementType)
  nameWithType.vb: Measurement(Of MeasurementType).AssertMeasurementValue(MeasurementType)
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).AssertMeasurementValue(MeasurementType)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.AssertMeasurementValue(`0)
    name: AssertMeasurementValue
    nameWithType: Measurement<MeasurementType>.AssertMeasurementValue
    fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.AssertMeasurementValue
  - name: (
    nameWithType: (
    fullName: (
  - name: MeasurementType
    nameWithType: MeasurementType
    fullName: MeasurementType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.AssertMeasurementValue(`0)
    name: AssertMeasurementValue
    nameWithType: Measurement(Of MeasurementType).AssertMeasurementValue
    fullName: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).AssertMeasurementValue
  - name: (
    nameWithType: (
    fullName: (
  - name: MeasurementType
    nameWithType: MeasurementType
    fullName: MeasurementType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Measurement{System.Double}.ParseValueXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.Measurement{System.Double}.ParseValueXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.Measurement{System.Double}
  definition: Microsoft.Health.ItemTypes.Measurement`1.ParseValueXml(System.Xml.XPath.XPathNavigator)
  name: ParseValueXml(XPathNavigator)
  nameWithType: Measurement<Double>.ParseValueXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.Measurement<System.Double>.ParseValueXml(System.Xml.XPath.XPathNavigator)
  nameWithType.vb: Measurement(Of Double).ParseValueXml(XPathNavigator)
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of System.Double).ParseValueXml(System.Xml.XPath.XPathNavigator)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.ParseValueXml(System.Xml.XPath.XPathNavigator)
    name: ParseValueXml
    nameWithType: Measurement<Double>.ParseValueXml
    fullName: Microsoft.Health.ItemTypes.Measurement<System.Double>.ParseValueXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.ParseValueXml(System.Xml.XPath.XPathNavigator)
    name: ParseValueXml
    nameWithType: Measurement(Of Double).ParseValueXml
    fullName: Microsoft.Health.ItemTypes.Measurement(Of System.Double).ParseValueXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.PaceMeasurement.ParseValueXml*
  commentId: Overload:Microsoft.Health.ItemTypes.PaceMeasurement.ParseValueXml
  isExternal: false
  name: ParseValueXml
  nameWithType: PaceMeasurement.ParseValueXml
  fullName: Microsoft.Health.ItemTypes.PaceMeasurement.ParseValueXml
- uid: System.Xml.XPath.XPathNavigator
  commentId: T:System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: true
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: Microsoft.Health.ItemTypes.Measurement`1.ParseValueXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.Measurement`1.ParseValueXml(System.Xml.XPath.XPathNavigator)
  isExternal: true
  name: ParseValueXml(XPathNavigator)
  nameWithType: Measurement<MeasurementType>.ParseValueXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.ParseValueXml(System.Xml.XPath.XPathNavigator)
  nameWithType.vb: Measurement(Of MeasurementType).ParseValueXml(XPathNavigator)
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).ParseValueXml(System.Xml.XPath.XPathNavigator)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.ParseValueXml(System.Xml.XPath.XPathNavigator)
    name: ParseValueXml
    nameWithType: Measurement<MeasurementType>.ParseValueXml
    fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.ParseValueXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.ParseValueXml(System.Xml.XPath.XPathNavigator)
    name: ParseValueXml
    nameWithType: Measurement(Of MeasurementType).ParseValueXml
    fullName: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).ParseValueXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: false
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: Microsoft.Health.ItemTypes.Measurement{System.Double}.WriteValueXml(System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.Measurement{System.Double}.WriteValueXml(System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.Measurement{System.Double}
  definition: Microsoft.Health.ItemTypes.Measurement`1.WriteValueXml(System.Xml.XmlWriter)
  name: WriteValueXml(XmlWriter)
  nameWithType: Measurement<Double>.WriteValueXml(XmlWriter)
  fullName: Microsoft.Health.ItemTypes.Measurement<System.Double>.WriteValueXml(System.Xml.XmlWriter)
  nameWithType.vb: Measurement(Of Double).WriteValueXml(XmlWriter)
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of System.Double).WriteValueXml(System.Xml.XmlWriter)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.WriteValueXml(System.Xml.XmlWriter)
    name: WriteValueXml
    nameWithType: Measurement<Double>.WriteValueXml
    fullName: Microsoft.Health.ItemTypes.Measurement<System.Double>.WriteValueXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.WriteValueXml(System.Xml.XmlWriter)
    name: WriteValueXml
    nameWithType: Measurement(Of Double).WriteValueXml
    fullName: Microsoft.Health.ItemTypes.Measurement(Of System.Double).WriteValueXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.PaceMeasurement.WriteValueXml*
  commentId: Overload:Microsoft.Health.ItemTypes.PaceMeasurement.WriteValueXml
  isExternal: false
  name: WriteValueXml
  nameWithType: PaceMeasurement.WriteValueXml
  fullName: Microsoft.Health.ItemTypes.PaceMeasurement.WriteValueXml
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: Microsoft.Health.ItemTypes.Measurement`1.WriteValueXml(System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.Measurement`1.WriteValueXml(System.Xml.XmlWriter)
  isExternal: true
  name: WriteValueXml(XmlWriter)
  nameWithType: Measurement<MeasurementType>.WriteValueXml(XmlWriter)
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.WriteValueXml(System.Xml.XmlWriter)
  nameWithType.vb: Measurement(Of MeasurementType).WriteValueXml(XmlWriter)
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).WriteValueXml(System.Xml.XmlWriter)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.WriteValueXml(System.Xml.XmlWriter)
    name: WriteValueXml
    nameWithType: Measurement<MeasurementType>.WriteValueXml
    fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.WriteValueXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.WriteValueXml(System.Xml.XmlWriter)
    name: WriteValueXml
    nameWithType: Measurement(Of MeasurementType).WriteValueXml
    fullName: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).WriteValueXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: Microsoft.Health.ItemTypes.Measurement{System.Double}.GetValueString(System.Double)
  commentId: M:Microsoft.Health.ItemTypes.Measurement{System.Double}.GetValueString(System.Double)
  parent: Microsoft.Health.ItemTypes.Measurement{System.Double}
  definition: Microsoft.Health.ItemTypes.Measurement`1.GetValueString(`0)
  name: GetValueString(Double)
  nameWithType: Measurement<Double>.GetValueString(Double)
  fullName: Microsoft.Health.ItemTypes.Measurement<System.Double>.GetValueString(System.Double)
  nameWithType.vb: Measurement(Of Double).GetValueString(Double)
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of System.Double).GetValueString(System.Double)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.GetValueString(`0)
    name: GetValueString
    nameWithType: Measurement<Double>.GetValueString
    fullName: Microsoft.Health.ItemTypes.Measurement<System.Double>.GetValueString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.GetValueString(`0)
    name: GetValueString
    nameWithType: Measurement(Of Double).GetValueString
    fullName: Microsoft.Health.ItemTypes.Measurement(Of System.Double).GetValueString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.PaceMeasurement.GetValueString*
  commentId: Overload:Microsoft.Health.ItemTypes.PaceMeasurement.GetValueString
  isExternal: false
  name: GetValueString
  nameWithType: PaceMeasurement.GetValueString
  fullName: Microsoft.Health.ItemTypes.PaceMeasurement.GetValueString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.ItemTypes.Measurement`1.GetValueString(`0)
  commentId: M:Microsoft.Health.ItemTypes.Measurement`1.GetValueString(`0)
  isExternal: false
  name: GetValueString(MeasurementType)
  nameWithType: Measurement<MeasurementType>.GetValueString(MeasurementType)
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.GetValueString(MeasurementType)
  nameWithType.vb: Measurement(Of MeasurementType).GetValueString(MeasurementType)
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).GetValueString(MeasurementType)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.GetValueString(`0)
    name: GetValueString
    nameWithType: Measurement<MeasurementType>.GetValueString
    fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.GetValueString
  - name: (
    nameWithType: (
    fullName: (
  - name: MeasurementType
    nameWithType: MeasurementType
    fullName: MeasurementType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.GetValueString(`0)
    name: GetValueString
    nameWithType: Measurement(Of MeasurementType).GetValueString
    fullName: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).GetValueString
  - name: (
    nameWithType: (
    fullName: (
  - name: MeasurementType
    nameWithType: MeasurementType
    fullName: MeasurementType
  - name: )
    nameWithType: )
    fullName: )
