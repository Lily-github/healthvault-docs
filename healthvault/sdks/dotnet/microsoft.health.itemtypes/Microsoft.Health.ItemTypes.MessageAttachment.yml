### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.ItemTypes.MessageAttachment
  commentId: T:Microsoft.Health.ItemTypes.MessageAttachment
  id: MessageAttachment
  parent: Microsoft.Health.ItemTypes
  children:
  - Microsoft.Health.ItemTypes.MessageAttachment.#ctor
  - Microsoft.Health.ItemTypes.MessageAttachment.#ctor(System.String,System.String,System.Boolean)
  - Microsoft.Health.ItemTypes.MessageAttachment.BlobName
  - Microsoft.Health.ItemTypes.MessageAttachment.ContentId
  - Microsoft.Health.ItemTypes.MessageAttachment.InlineDisplay
  - Microsoft.Health.ItemTypes.MessageAttachment.Name
  - Microsoft.Health.ItemTypes.MessageAttachment.ParseXml(System.Xml.XPath.XPathNavigator)
  - Microsoft.Health.ItemTypes.MessageAttachment.ToString
  - Microsoft.Health.ItemTypes.MessageAttachment.WriteXml(System.String,System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: MessageAttachment
  nameWithType: MessageAttachment
  fullName: Microsoft.Health.ItemTypes.MessageAttachment
  type: Class
  source:
    remote:
      path: Microsoft.Health.ItemTypes/MessageAttachment.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: MessageAttachment
    path: MessageAttachment.cs
    startLine: 19
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nAn attachment to the message.\n"
  example: []
  syntax:
    content: 'public class MessageAttachment : HealthRecordItemData'
    content.vb: >-
      Public Class MessageAttachment
          Inherits HealthRecordItemData
  inheritance:
  - System.Object
  - Microsoft.Health.ItemTypes.HealthRecordItemData
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.ItemTypes.MessageAttachment.#ctor
  commentId: M:Microsoft.Health.ItemTypes.MessageAttachment.#ctor
  id: '#ctor'
  parent: Microsoft.Health.ItemTypes.MessageAttachment
  langs:
  - csharp
  - vb
  name: MessageAttachment()
  nameWithType: MessageAttachment.MessageAttachment()
  fullName: Microsoft.Health.ItemTypes.MessageAttachment.MessageAttachment()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/MessageAttachment.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: MessageAttachment.cs
    startLine: 25
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.MessageAttachment\" data-throw-if-not-resolved=\"false\"></xref> class with default values.\n"
  example: []
  syntax:
    content: public MessageAttachment()
    content.vb: Public Sub New
  overload: Microsoft.Health.ItemTypes.MessageAttachment.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.MessageAttachment.#ctor(System.String,System.String,System.Boolean)
  commentId: M:Microsoft.Health.ItemTypes.MessageAttachment.#ctor(System.String,System.String,System.Boolean)
  id: '#ctor(System.String,System.String,System.Boolean)'
  parent: Microsoft.Health.ItemTypes.MessageAttachment
  langs:
  - csharp
  - vb
  name: MessageAttachment(String, String, Boolean)
  nameWithType: MessageAttachment.MessageAttachment(String, String, Boolean)
  fullName: Microsoft.Health.ItemTypes.MessageAttachment.MessageAttachment(System.String, System.String, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/MessageAttachment.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: MessageAttachment.cs
    startLine: 49
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.MessageAttachment\" data-throw-if-not-resolved=\"false\"></xref> class\nspecifying mandatory values.\n"
  example: []
  syntax:
    content: public MessageAttachment(string name, string blobName, bool inlineDisplay)
    content.vb: Public Sub New(name As String, blobName As String, inlineDisplay As Boolean)
    parameters:
    - id: name
      type: System.String
      description: "\nThe name of the attachment.\n"
    - id: blobName
      type: System.String
      description: "\nThe name of the blob storing the attachment\n"
    - id: inlineDisplay
      type: System.Boolean
      description: "\nIf true the attachment is intended to be displayed inline with the text.\n"
  overload: Microsoft.Health.ItemTypes.MessageAttachment.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nIf <span class=\"paramref\">name</span> is <strong>null</strong>, empty or contains only whitespace.\nIf <span class=\"paramref\">blobName</span> is <strong>null</strong>, empty or contains only whitespace.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.MessageAttachment.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.MessageAttachment.ParseXml(System.Xml.XPath.XPathNavigator)
  id: ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.MessageAttachment
  langs:
  - csharp
  - vb
  name: ParseXml(XPathNavigator)
  nameWithType: MessageAttachment.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.MessageAttachment.ParseXml(System.Xml.XPath.XPathNavigator)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/MessageAttachment.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ParseXml
    path: MessageAttachment.cs
    startLine: 71
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nPopulates this <xref href=\"Microsoft.Health.ItemTypes.MessageAttachment\" data-throw-if-not-resolved=\"false\"></xref> instance from the data in the specified XML.\n"
  example: []
  syntax:
    content: public override void ParseXml(XPathNavigator navigator)
    content.vb: Public Overrides Sub ParseXml(navigator As XPathNavigator)
    parameters:
    - id: navigator
      type: System.Xml.XPath.XPathNavigator
      description: "\nThe XML to get the MessageAttachment data from.\n"
  overridden: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  overload: Microsoft.Health.ItemTypes.MessageAttachment.ParseXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nIf <span class=\"paramref\">navigator</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.MessageAttachment.WriteXml(System.String,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.MessageAttachment.WriteXml(System.String,System.Xml.XmlWriter)
  id: WriteXml(System.String,System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.MessageAttachment
  langs:
  - csharp
  - vb
  name: WriteXml(String, XmlWriter)
  nameWithType: MessageAttachment.WriteXml(String, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.MessageAttachment.WriteXml(System.String, System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/MessageAttachment.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteXml
    path: MessageAttachment.cs
    startLine: 108
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nWrites the XML representation of the MessageAttachment into\nthe specified XML writer.\n"
  example: []
  syntax:
    content: public override void WriteXml(string nodeName, XmlWriter writer)
    content.vb: Public Overrides Sub WriteXml(nodeName As String, writer As XmlWriter)
    parameters:
    - id: nodeName
      type: System.String
      description: "\nThe name of the outer node for the medical image study series.\n"
    - id: writer
      type: System.Xml.XmlWriter
      description: "\nThe XML writer into which the MessageAttachment should be\nwritten.\n"
  overridden: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  overload: Microsoft.Health.ItemTypes.MessageAttachment.WriteXml*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nIf <span class=\"paramref\">nodeName</span> parameter is <strong>null</strong> or empty.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nIf <span class=\"paramref\">writer</span> parameter is <strong>null</strong>.\n"
  - type: Microsoft.Health.HealthRecordItemSerializationException
    commentId: T:Microsoft.Health.HealthRecordItemSerializationException
    description: "\nIf <xref href=\"Microsoft.Health.ItemTypes.MessageAttachment.Name\" data-throw-if-not-resolved=\"false\"></xref> is <strong>null</strong> or empty or contains only whitespace.\nIf <xref href=\"Microsoft.Health.ItemTypes.MessageAttachment.BlobName\" data-throw-if-not-resolved=\"false\"></xref> is <strong>null</strong> or empty or contains only whitespace.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.MessageAttachment.Name
  commentId: P:Microsoft.Health.ItemTypes.MessageAttachment.Name
  id: Name
  parent: Microsoft.Health.ItemTypes.MessageAttachment
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: MessageAttachment.Name
  fullName: Microsoft.Health.ItemTypes.MessageAttachment.Name
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/MessageAttachment.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Name
    path: MessageAttachment.cs
    startLine: 146
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the name of the attachment.\n"
  remarks: "\nIf there is no information about name the value should be set to <strong>null</strong>.\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.ItemTypes.MessageAttachment.Name*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">value</span> parameter is <strong>null</strong>.\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">value</span> contains only whitespace.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.MessageAttachment.BlobName
  commentId: P:Microsoft.Health.ItemTypes.MessageAttachment.BlobName
  id: BlobName
  parent: Microsoft.Health.ItemTypes.MessageAttachment
  langs:
  - csharp
  - vb
  name: BlobName
  nameWithType: MessageAttachment.BlobName
  fullName: Microsoft.Health.ItemTypes.MessageAttachment.BlobName
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/MessageAttachment.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: BlobName
    path: MessageAttachment.cs
    startLine: 180
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the name of the blob storing the attachment.\n"
  remarks: "\nIf there is no information about blobName the value should be set to <strong>null</strong>.\n"
  example: []
  syntax:
    content: public string BlobName { get; set; }
    content.vb: Public Property BlobName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.ItemTypes.MessageAttachment.BlobName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">value</span> parameter is <strong>null</strong>.\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">value</span> contains only whitespace.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.MessageAttachment.InlineDisplay
  commentId: P:Microsoft.Health.ItemTypes.MessageAttachment.InlineDisplay
  id: InlineDisplay
  parent: Microsoft.Health.ItemTypes.MessageAttachment
  langs:
  - csharp
  - vb
  name: InlineDisplay
  nameWithType: MessageAttachment.InlineDisplay
  fullName: Microsoft.Health.ItemTypes.MessageAttachment.InlineDisplay
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/MessageAttachment.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: InlineDisplay
    path: MessageAttachment.cs
    startLine: 207
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets whether the attachment is intended to be displayed inline with the text.\n"
  remarks: "\nIf true, the location of the attachment in the message can be found using the \n<xref href=\"Microsoft.Health.ItemTypes.MessageAttachment.ContentId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public bool InlineDisplay { get; set; }
    content.vb: Public Property InlineDisplay As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.Health.ItemTypes.MessageAttachment.InlineDisplay*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.MessageAttachment.ContentId
  commentId: P:Microsoft.Health.ItemTypes.MessageAttachment.ContentId
  id: ContentId
  parent: Microsoft.Health.ItemTypes.MessageAttachment
  langs:
  - csharp
  - vb
  name: ContentId
  nameWithType: MessageAttachment.ContentId
  fullName: Microsoft.Health.ItemTypes.MessageAttachment.ContentId
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/MessageAttachment.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ContentId
    path: MessageAttachment.cs
    startLine: 236
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the content identifier for attachments that will be displayed inline with the text.\n"
  remarks: "\nIf this attachment is inline and the message text is available as HTML, the HTML contains \nan img tag reference to this content id in the location where the attachment should be displayed.\nIf there is no information about contentId the value should be set to <strong>null</strong>.\n"
  example: []
  syntax:
    content: public string ContentId { get; set; }
    content.vb: Public Property ContentId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.ItemTypes.MessageAttachment.ContentId*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">value</span> contains only whitespace.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.MessageAttachment.ToString
  commentId: M:Microsoft.Health.ItemTypes.MessageAttachment.ToString
  id: ToString
  parent: Microsoft.Health.ItemTypes.MessageAttachment
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: MessageAttachment.ToString()
  fullName: Microsoft.Health.ItemTypes.MessageAttachment.ToString()
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/MessageAttachment.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ToString
    path: MessageAttachment.cs
    startLine: 261
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets a string representation of the MessageAttachment.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\nA string representation of the MessageAttachment.\n"
  overridden: System.Object.ToString
  overload: Microsoft.Health.ItemTypes.MessageAttachment.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Health.ItemTypes
  commentId: N:Microsoft.Health.ItemTypes
  isExternal: false
  name: Microsoft.Health.ItemTypes
  nameWithType: Microsoft.Health.ItemTypes
  fullName: Microsoft.Health.ItemTypes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData
  commentId: T:Microsoft.Health.ItemTypes.HealthRecordItemData
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: HealthRecordItemData
  nameWithType: HealthRecordItemData
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.ItemTypes.MessageAttachment
  commentId: T:Microsoft.Health.ItemTypes.MessageAttachment
  isExternal: false
  name: MessageAttachment
  nameWithType: MessageAttachment
  fullName: Microsoft.Health.ItemTypes.MessageAttachment
- uid: Microsoft.Health.ItemTypes.MessageAttachment.#ctor*
  commentId: Overload:Microsoft.Health.ItemTypes.MessageAttachment.#ctor
  isExternal: false
  name: MessageAttachment
  nameWithType: MessageAttachment.MessageAttachment
  fullName: Microsoft.Health.ItemTypes.MessageAttachment.MessageAttachment
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.HealthRecordItemData
  isExternal: true
  name: ParseXml(XPathNavigator)
  nameWithType: HealthRecordItemData.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: HealthRecordItemData.ParseXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: HealthRecordItemData.ParseXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.MessageAttachment.ParseXml*
  commentId: Overload:Microsoft.Health.ItemTypes.MessageAttachment.ParseXml
  isExternal: false
  name: ParseXml
  nameWithType: MessageAttachment.ParseXml
  fullName: Microsoft.Health.ItemTypes.MessageAttachment.ParseXml
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.Xml.XPath.XPathNavigator
  commentId: T:System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: true
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: false
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: Microsoft.Health.ItemTypes.MessageAttachment.Name
  commentId: P:Microsoft.Health.ItemTypes.MessageAttachment.Name
- uid: Microsoft.Health.ItemTypes.MessageAttachment.BlobName
  commentId: P:Microsoft.Health.ItemTypes.MessageAttachment.BlobName
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.HealthRecordItemData
  isExternal: true
  name: WriteXml(String, XmlWriter)
  nameWithType: HealthRecordItemData.WriteXml(String, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String, System.Xml.XmlWriter)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItemData.WriteXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItemData.WriteXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.MessageAttachment.WriteXml*
  commentId: Overload:Microsoft.Health.ItemTypes.MessageAttachment.WriteXml
  isExternal: false
  name: WriteXml
  nameWithType: MessageAttachment.WriteXml
  fullName: Microsoft.Health.ItemTypes.MessageAttachment.WriteXml
- uid: Microsoft.Health.HealthRecordItemSerializationException
  commentId: T:Microsoft.Health.HealthRecordItemSerializationException
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: Microsoft.Health.ItemTypes.MessageAttachment.Name*
  commentId: Overload:Microsoft.Health.ItemTypes.MessageAttachment.Name
  isExternal: false
  name: Name
  nameWithType: MessageAttachment.Name
  fullName: Microsoft.Health.ItemTypes.MessageAttachment.Name
- uid: Microsoft.Health.ItemTypes.MessageAttachment.BlobName*
  commentId: Overload:Microsoft.Health.ItemTypes.MessageAttachment.BlobName
  isExternal: false
  name: BlobName
  nameWithType: MessageAttachment.BlobName
  fullName: Microsoft.Health.ItemTypes.MessageAttachment.BlobName
- uid: Microsoft.Health.ItemTypes.MessageAttachment.ContentId
  commentId: P:Microsoft.Health.ItemTypes.MessageAttachment.ContentId
- uid: Microsoft.Health.ItemTypes.MessageAttachment.InlineDisplay*
  commentId: Overload:Microsoft.Health.ItemTypes.MessageAttachment.InlineDisplay
  isExternal: false
  name: InlineDisplay
  nameWithType: MessageAttachment.InlineDisplay
  fullName: Microsoft.Health.ItemTypes.MessageAttachment.InlineDisplay
- uid: Microsoft.Health.ItemTypes.MessageAttachment.ContentId*
  commentId: Overload:Microsoft.Health.ItemTypes.MessageAttachment.ContentId
  isExternal: false
  name: ContentId
  nameWithType: MessageAttachment.ContentId
  fullName: Microsoft.Health.ItemTypes.MessageAttachment.ContentId
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.MessageAttachment.ToString*
  commentId: Overload:Microsoft.Health.ItemTypes.MessageAttachment.ToString
  isExternal: false
  name: ToString
  nameWithType: MessageAttachment.ToString
  fullName: Microsoft.Health.ItemTypes.MessageAttachment.ToString
