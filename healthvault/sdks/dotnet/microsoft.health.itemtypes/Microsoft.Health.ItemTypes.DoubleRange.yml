### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.ItemTypes.DoubleRange
  commentId: T:Microsoft.Health.ItemTypes.DoubleRange
  id: DoubleRange
  parent: Microsoft.Health.ItemTypes
  children:
  - Microsoft.Health.ItemTypes.DoubleRange.#ctor
  - Microsoft.Health.ItemTypes.DoubleRange.#ctor(System.Double,System.Double)
  - Microsoft.Health.ItemTypes.DoubleRange.DefaultMaxValue
  - Microsoft.Health.ItemTypes.DoubleRange.DefaultMinValue
  - Microsoft.Health.ItemTypes.DoubleRange.ReadRangeValue(System.Xml.XPath.XPathNavigator)
  - Microsoft.Health.ItemTypes.DoubleRange.ToString
  - Microsoft.Health.ItemTypes.DoubleRange.WriteRangeValue(System.String,System.Double,System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: DoubleRange
  nameWithType: DoubleRange
  fullName: Microsoft.Health.ItemTypes.DoubleRange
  type: Class
  source:
    remote:
      path: Microsoft.Health.ItemTypes/DoubleRange.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DoubleRange
    path: DoubleRange.cs
    startLine: 25
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nRepresents a data range based on the <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> type.\n"
  remarks: "\nA range consists of a minimum range value and a maximum range value of type\n<xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: 'public class DoubleRange : Range<double>'
    content.vb: >-
      Public Class DoubleRange
          Inherits Range(Of Double)
  inheritance:
  - System.Object
  - Microsoft.Health.ItemTypes.HealthRecordItemData
  - Microsoft.Health.ItemTypes.Range{System.Double}
  inheritedMembers:
  - Microsoft.Health.ItemTypes.Range{System.Double}.ParseXml(System.Xml.XPath.XPathNavigator)
  - Microsoft.Health.ItemTypes.Range{System.Double}.WriteXml(System.String,System.Xml.XmlWriter)
  - Microsoft.Health.ItemTypes.Range{System.Double}.MinRange
  - Microsoft.Health.ItemTypes.Range{System.Double}.MaxRange
  - Microsoft.Health.ItemTypes.Range{System.Double}.VerifyRangeValue(System.Double)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.ItemTypes.DoubleRange.#ctor
  commentId: M:Microsoft.Health.ItemTypes.DoubleRange.#ctor
  id: '#ctor'
  parent: Microsoft.Health.ItemTypes.DoubleRange
  langs:
  - csharp
  - vb
  name: DoubleRange()
  nameWithType: DoubleRange.DoubleRange()
  fullName: Microsoft.Health.ItemTypes.DoubleRange.DoubleRange()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/DoubleRange.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: DoubleRange.cs
    startLine: 32
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.DoubleRange\" data-throw-if-not-resolved=\"false\"></xref> class with \ndefault values.\n"
  example: []
  syntax:
    content: public DoubleRange()
    content.vb: Public Sub New
  overload: Microsoft.Health.ItemTypes.DoubleRange.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.DoubleRange.#ctor(System.Double,System.Double)
  commentId: M:Microsoft.Health.ItemTypes.DoubleRange.#ctor(System.Double,System.Double)
  id: '#ctor(System.Double,System.Double)'
  parent: Microsoft.Health.ItemTypes.DoubleRange
  langs:
  - csharp
  - vb
  name: DoubleRange(Double, Double)
  nameWithType: DoubleRange.DoubleRange(Double, Double)
  fullName: Microsoft.Health.ItemTypes.DoubleRange.DoubleRange(System.Double, System.Double)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/DoubleRange.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: DoubleRange.cs
    startLine: 50
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nConstructs a new instance of the <xref href=\"Microsoft.Health.ItemTypes.DoubleRange\" data-throw-if-not-resolved=\"false\"></xref> class with the specified\nminimum and maximum range values.\n"
  example: []
  syntax:
    content: public DoubleRange(double minRange, double maxRange)
    content.vb: Public Sub New(minRange As Double, maxRange As Double)
    parameters:
    - id: minRange
      type: System.Double
      description: "\nThe minimum value for the range.\n"
    - id: maxRange
      type: System.Double
      description: "\nThe maximum value for the range.\n"
  overload: Microsoft.Health.ItemTypes.DoubleRange.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.DoubleRange.ReadRangeValue(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.DoubleRange.ReadRangeValue(System.Xml.XPath.XPathNavigator)
  id: ReadRangeValue(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.DoubleRange
  langs:
  - csharp
  - vb
  name: ReadRangeValue(XPathNavigator)
  nameWithType: DoubleRange.ReadRangeValue(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.DoubleRange.ReadRangeValue(System.Xml.XPath.XPathNavigator)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/DoubleRange.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ReadRangeValue
    path: DoubleRange.cs
    startLine: 74
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nReads the value from the specified <xref href=\"System.Xml.XPath.XPathNavigator\" data-throw-if-not-resolved=\"false\"></xref> as a \n<xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nDerived classes must override and read the value from the XML and convert it to the\ntype for the range.\n"
  example: []
  syntax:
    content: protected override double ReadRangeValue(XPathNavigator navigator)
    content.vb: Protected Overrides Function ReadRangeValue(navigator As XPathNavigator) As Double
    parameters:
    - id: navigator
      type: System.Xml.XPath.XPathNavigator
      description: "\nThe <xref href=\"System.Xml.XPath.XPathNavigator\" data-throw-if-not-resolved=\"false\"></xref> to read the value from.\n"
    return:
      type: System.Double
      description: "\nThe value as a <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  overridden: Microsoft.Health.ItemTypes.Range{System.Double}.ReadRangeValue(System.Xml.XPath.XPathNavigator)
  overload: Microsoft.Health.ItemTypes.DoubleRange.ReadRangeValue*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Health.ItemTypes.DoubleRange.WriteRangeValue(System.String,System.Double,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.DoubleRange.WriteRangeValue(System.String,System.Double,System.Xml.XmlWriter)
  id: WriteRangeValue(System.String,System.Double,System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.DoubleRange
  langs:
  - csharp
  - vb
  name: WriteRangeValue(String, Double, XmlWriter)
  nameWithType: DoubleRange.WriteRangeValue(String, Double, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.DoubleRange.WriteRangeValue(System.String, System.Double, System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/DoubleRange.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteRangeValue
    path: DoubleRange.cs
    startLine: 95
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nWrites the specified range value to the specified writer with the specified node name.\n"
  example: []
  syntax:
    content: protected override void WriteRangeValue(string nodeName, double value, XmlWriter writer)
    content.vb: Protected Overrides Sub WriteRangeValue(nodeName As String, value As Double, writer As XmlWriter)
    parameters:
    - id: nodeName
      type: System.String
      description: "\nThe name of the node to use when writing the value.\n"
    - id: value
      type: System.Double
      description: "\nThe value to be written.\n"
    - id: writer
      type: System.Xml.XmlWriter
      description: "\nThe writer to write the value element to.\n"
  overridden: Microsoft.Health.ItemTypes.Range{System.Double}.WriteRangeValue(System.String,System.Double,System.Xml.XmlWriter)
  overload: Microsoft.Health.ItemTypes.DoubleRange.WriteRangeValue*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Health.ItemTypes.DoubleRange.DefaultMinValue
  commentId: P:Microsoft.Health.ItemTypes.DoubleRange.DefaultMinValue
  id: DefaultMinValue
  parent: Microsoft.Health.ItemTypes.DoubleRange
  langs:
  - csharp
  - vb
  name: DefaultMinValue
  nameWithType: DoubleRange.DefaultMinValue
  fullName: Microsoft.Health.ItemTypes.DoubleRange.DefaultMinValue
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/DoubleRange.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DefaultMinValue
    path: DoubleRange.cs
    startLine: 108
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nInitializes the minimum range value to its default value.\n"
  example: []
  syntax:
    content: protected override double DefaultMinValue { get; }
    content.vb: Protected Overrides ReadOnly Property DefaultMinValue As Double
    parameters: []
    return:
      type: System.Double
      description: "\n<xref href=\"System.Double.MinValue\" data-throw-if-not-resolved=\"false\"></xref>\n"
  overridden: Microsoft.Health.ItemTypes.Range{System.Double}.DefaultMinValue
  overload: Microsoft.Health.ItemTypes.DoubleRange.DefaultMinValue*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: Microsoft.Health.ItemTypes.DoubleRange.DefaultMaxValue
  commentId: P:Microsoft.Health.ItemTypes.DoubleRange.DefaultMaxValue
  id: DefaultMaxValue
  parent: Microsoft.Health.ItemTypes.DoubleRange
  langs:
  - csharp
  - vb
  name: DefaultMaxValue
  nameWithType: DoubleRange.DefaultMaxValue
  fullName: Microsoft.Health.ItemTypes.DoubleRange.DefaultMaxValue
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/DoubleRange.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DefaultMaxValue
    path: DoubleRange.cs
    startLine: 118
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets the maximum range value to it's default value.\n"
  example: []
  syntax:
    content: protected override double DefaultMaxValue { get; }
    content.vb: Protected Overrides ReadOnly Property DefaultMaxValue As Double
    parameters: []
    return:
      type: System.Double
      description: "\n<xref href=\"System.Double.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>\n"
  overridden: Microsoft.Health.ItemTypes.Range{System.Double}.DefaultMaxValue
  overload: Microsoft.Health.ItemTypes.DoubleRange.DefaultMaxValue*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: Microsoft.Health.ItemTypes.DoubleRange.ToString
  commentId: M:Microsoft.Health.ItemTypes.DoubleRange.ToString
  id: ToString
  parent: Microsoft.Health.ItemTypes.DoubleRange
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: DoubleRange.ToString()
  fullName: Microsoft.Health.ItemTypes.DoubleRange.ToString()
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/DoubleRange.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ToString
    path: DoubleRange.cs
    startLine: 132
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nReturns the range as a string.\n"
  remarks: "\nThis method is not locale aware.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\nA string representation of the range.\n"
  overridden: System.Object.ToString
  overload: Microsoft.Health.ItemTypes.DoubleRange.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Microsoft.Health.ItemTypes
  commentId: N:Microsoft.Health.ItemTypes
  isExternal: false
  name: Microsoft.Health.ItemTypes
  nameWithType: Microsoft.Health.ItemTypes
  fullName: Microsoft.Health.ItemTypes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData
  commentId: T:Microsoft.Health.ItemTypes.HealthRecordItemData
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: HealthRecordItemData
  nameWithType: HealthRecordItemData
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData
- uid: Microsoft.Health.ItemTypes.Range{System.Double}
  commentId: T:Microsoft.Health.ItemTypes.Range{System.Double}
  parent: Microsoft.Health.ItemTypes
  definition: Microsoft.Health.ItemTypes.Range`1
  name: Range<Double>
  nameWithType: Range<Double>
  fullName: Microsoft.Health.ItemTypes.Range<System.Double>
  nameWithType.vb: Range(Of Double)
  fullName.vb: Microsoft.Health.ItemTypes.Range(Of System.Double)
  name.vb: Range(Of Double)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Range`1
    name: Range
    nameWithType: Range
    fullName: Microsoft.Health.ItemTypes.Range
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Range`1
    name: Range
    nameWithType: Range
    fullName: Microsoft.Health.ItemTypes.Range
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Range{System.Double}.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.Range{System.Double}.ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.Range{System.Double}
  definition: Microsoft.Health.ItemTypes.Range`1.ParseXml(System.Xml.XPath.XPathNavigator)
  name: ParseXml(XPathNavigator)
  nameWithType: Range<Double>.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.Range<System.Double>.ParseXml(System.Xml.XPath.XPathNavigator)
  nameWithType.vb: Range(Of Double).ParseXml(XPathNavigator)
  fullName.vb: Microsoft.Health.ItemTypes.Range(Of System.Double).ParseXml(System.Xml.XPath.XPathNavigator)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Range`1.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: Range<Double>.ParseXml
    fullName: Microsoft.Health.ItemTypes.Range<System.Double>.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Range`1.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: Range(Of Double).ParseXml
    fullName: Microsoft.Health.ItemTypes.Range(Of System.Double).ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Range{System.Double}.WriteXml(System.String,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.Range{System.Double}.WriteXml(System.String,System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.Range{System.Double}
  definition: Microsoft.Health.ItemTypes.Range`1.WriteXml(System.String,System.Xml.XmlWriter)
  name: WriteXml(String, XmlWriter)
  nameWithType: Range<Double>.WriteXml(String, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.Range<System.Double>.WriteXml(System.String, System.Xml.XmlWriter)
  nameWithType.vb: Range(Of Double).WriteXml(String, XmlWriter)
  fullName.vb: Microsoft.Health.ItemTypes.Range(Of System.Double).WriteXml(System.String, System.Xml.XmlWriter)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Range`1.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: Range<Double>.WriteXml
    fullName: Microsoft.Health.ItemTypes.Range<System.Double>.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Range`1.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: Range(Of Double).WriteXml
    fullName: Microsoft.Health.ItemTypes.Range(Of System.Double).WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Range{System.Double}.MinRange
  commentId: P:Microsoft.Health.ItemTypes.Range{System.Double}.MinRange
  parent: Microsoft.Health.ItemTypes.Range{System.Double}
  definition: Microsoft.Health.ItemTypes.Range`1.MinRange
  name: MinRange
  nameWithType: Range<Double>.MinRange
  fullName: Microsoft.Health.ItemTypes.Range<System.Double>.MinRange
  nameWithType.vb: Range(Of Double).MinRange
  fullName.vb: Microsoft.Health.ItemTypes.Range(Of System.Double).MinRange
- uid: Microsoft.Health.ItemTypes.Range{System.Double}.MaxRange
  commentId: P:Microsoft.Health.ItemTypes.Range{System.Double}.MaxRange
  parent: Microsoft.Health.ItemTypes.Range{System.Double}
  definition: Microsoft.Health.ItemTypes.Range`1.MaxRange
  name: MaxRange
  nameWithType: Range<Double>.MaxRange
  fullName: Microsoft.Health.ItemTypes.Range<System.Double>.MaxRange
  nameWithType.vb: Range(Of Double).MaxRange
  fullName.vb: Microsoft.Health.ItemTypes.Range(Of System.Double).MaxRange
- uid: Microsoft.Health.ItemTypes.Range{System.Double}.VerifyRangeValue(System.Double)
  commentId: M:Microsoft.Health.ItemTypes.Range{System.Double}.VerifyRangeValue(System.Double)
  parent: Microsoft.Health.ItemTypes.Range{System.Double}
  definition: Microsoft.Health.ItemTypes.Range`1.VerifyRangeValue(`0)
  name: VerifyRangeValue(Double)
  nameWithType: Range<Double>.VerifyRangeValue(Double)
  fullName: Microsoft.Health.ItemTypes.Range<System.Double>.VerifyRangeValue(System.Double)
  nameWithType.vb: Range(Of Double).VerifyRangeValue(Double)
  fullName.vb: Microsoft.Health.ItemTypes.Range(Of System.Double).VerifyRangeValue(System.Double)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Range`1.VerifyRangeValue(`0)
    name: VerifyRangeValue
    nameWithType: Range<Double>.VerifyRangeValue
    fullName: Microsoft.Health.ItemTypes.Range<System.Double>.VerifyRangeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Range`1.VerifyRangeValue(`0)
    name: VerifyRangeValue
    nameWithType: Range(Of Double).VerifyRangeValue
    fullName: Microsoft.Health.ItemTypes.Range(Of System.Double).VerifyRangeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.ItemTypes.Range`1
  commentId: T:Microsoft.Health.ItemTypes.Range`1
  isExternal: false
  name: Range<RangeType>
  nameWithType: Range<RangeType>
  fullName: Microsoft.Health.ItemTypes.Range<RangeType>
  nameWithType.vb: Range(Of RangeType)
  fullName.vb: Microsoft.Health.ItemTypes.Range(Of RangeType)
  name.vb: Range(Of RangeType)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Range`1
    name: Range
    nameWithType: Range
    fullName: Microsoft.Health.ItemTypes.Range
  - name: <
    nameWithType: <
    fullName: <
  - name: RangeType
    nameWithType: RangeType
    fullName: RangeType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Range`1
    name: Range
    nameWithType: Range
    fullName: Microsoft.Health.ItemTypes.Range
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: RangeType
    nameWithType: RangeType
    fullName: RangeType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Range`1.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.Range`1.ParseXml(System.Xml.XPath.XPathNavigator)
  isExternal: true
  name: ParseXml(XPathNavigator)
  nameWithType: Range<RangeType>.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.Range<RangeType>.ParseXml(System.Xml.XPath.XPathNavigator)
  nameWithType.vb: Range(Of RangeType).ParseXml(XPathNavigator)
  fullName.vb: Microsoft.Health.ItemTypes.Range(Of RangeType).ParseXml(System.Xml.XPath.XPathNavigator)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Range`1.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: Range<RangeType>.ParseXml
    fullName: Microsoft.Health.ItemTypes.Range<RangeType>.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Range`1.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: Range(Of RangeType).ParseXml
    fullName: Microsoft.Health.ItemTypes.Range(Of RangeType).ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Range`1.WriteXml(System.String,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.Range`1.WriteXml(System.String,System.Xml.XmlWriter)
  isExternal: true
  name: WriteXml(String, XmlWriter)
  nameWithType: Range<RangeType>.WriteXml(String, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.Range<RangeType>.WriteXml(System.String, System.Xml.XmlWriter)
  nameWithType.vb: Range(Of RangeType).WriteXml(String, XmlWriter)
  fullName.vb: Microsoft.Health.ItemTypes.Range(Of RangeType).WriteXml(System.String, System.Xml.XmlWriter)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Range`1.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: Range<RangeType>.WriteXml
    fullName: Microsoft.Health.ItemTypes.Range<RangeType>.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Range`1.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: Range(Of RangeType).WriteXml
    fullName: Microsoft.Health.ItemTypes.Range(Of RangeType).WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Range`1.MinRange
  commentId: P:Microsoft.Health.ItemTypes.Range`1.MinRange
  isExternal: false
  name: MinRange
  nameWithType: Range<RangeType>.MinRange
  fullName: Microsoft.Health.ItemTypes.Range<RangeType>.MinRange
  nameWithType.vb: Range(Of RangeType).MinRange
  fullName.vb: Microsoft.Health.ItemTypes.Range(Of RangeType).MinRange
- uid: Microsoft.Health.ItemTypes.Range`1.MaxRange
  commentId: P:Microsoft.Health.ItemTypes.Range`1.MaxRange
  isExternal: false
  name: MaxRange
  nameWithType: Range<RangeType>.MaxRange
  fullName: Microsoft.Health.ItemTypes.Range<RangeType>.MaxRange
  nameWithType.vb: Range(Of RangeType).MaxRange
  fullName.vb: Microsoft.Health.ItemTypes.Range(Of RangeType).MaxRange
- uid: Microsoft.Health.ItemTypes.Range`1.VerifyRangeValue(`0)
  commentId: M:Microsoft.Health.ItemTypes.Range`1.VerifyRangeValue(`0)
  isExternal: false
  name: VerifyRangeValue(RangeType)
  nameWithType: Range<RangeType>.VerifyRangeValue(RangeType)
  fullName: Microsoft.Health.ItemTypes.Range<RangeType>.VerifyRangeValue(RangeType)
  nameWithType.vb: Range(Of RangeType).VerifyRangeValue(RangeType)
  fullName.vb: Microsoft.Health.ItemTypes.Range(Of RangeType).VerifyRangeValue(RangeType)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Range`1.VerifyRangeValue(`0)
    name: VerifyRangeValue
    nameWithType: Range<RangeType>.VerifyRangeValue
    fullName: Microsoft.Health.ItemTypes.Range<RangeType>.VerifyRangeValue
  - name: (
    nameWithType: (
    fullName: (
  - name: RangeType
    nameWithType: RangeType
    fullName: RangeType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Range`1.VerifyRangeValue(`0)
    name: VerifyRangeValue
    nameWithType: Range(Of RangeType).VerifyRangeValue
    fullName: Microsoft.Health.ItemTypes.Range(Of RangeType).VerifyRangeValue
  - name: (
    nameWithType: (
    fullName: (
  - name: RangeType
    nameWithType: RangeType
    fullName: RangeType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.DoubleRange
  commentId: T:Microsoft.Health.ItemTypes.DoubleRange
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: DoubleRange
  nameWithType: DoubleRange
  fullName: Microsoft.Health.ItemTypes.DoubleRange
- uid: Microsoft.Health.ItemTypes.DoubleRange.#ctor*
  commentId: Overload:Microsoft.Health.ItemTypes.DoubleRange.#ctor
  isExternal: false
  name: DoubleRange
  nameWithType: DoubleRange.DoubleRange
  fullName: Microsoft.Health.ItemTypes.DoubleRange.DoubleRange
- uid: System.Xml.XPath.XPathNavigator
  commentId: T:System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: true
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: Microsoft.Health.ItemTypes.Range{System.Double}.ReadRangeValue(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.Range{System.Double}.ReadRangeValue(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.Range{System.Double}
  definition: Microsoft.Health.ItemTypes.Range`1.ReadRangeValue(System.Xml.XPath.XPathNavigator)
  name: ReadRangeValue(XPathNavigator)
  nameWithType: Range<Double>.ReadRangeValue(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.Range<System.Double>.ReadRangeValue(System.Xml.XPath.XPathNavigator)
  nameWithType.vb: Range(Of Double).ReadRangeValue(XPathNavigator)
  fullName.vb: Microsoft.Health.ItemTypes.Range(Of System.Double).ReadRangeValue(System.Xml.XPath.XPathNavigator)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Range`1.ReadRangeValue(System.Xml.XPath.XPathNavigator)
    name: ReadRangeValue
    nameWithType: Range<Double>.ReadRangeValue
    fullName: Microsoft.Health.ItemTypes.Range<System.Double>.ReadRangeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Range`1.ReadRangeValue(System.Xml.XPath.XPathNavigator)
    name: ReadRangeValue
    nameWithType: Range(Of Double).ReadRangeValue
    fullName: Microsoft.Health.ItemTypes.Range(Of System.Double).ReadRangeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.DoubleRange.ReadRangeValue*
  commentId: Overload:Microsoft.Health.ItemTypes.DoubleRange.ReadRangeValue
  isExternal: false
  name: ReadRangeValue
  nameWithType: DoubleRange.ReadRangeValue
  fullName: Microsoft.Health.ItemTypes.DoubleRange.ReadRangeValue
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: false
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: Microsoft.Health.ItemTypes.Range`1.ReadRangeValue(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.Range`1.ReadRangeValue(System.Xml.XPath.XPathNavigator)
  isExternal: true
  name: ReadRangeValue(XPathNavigator)
  nameWithType: Range<RangeType>.ReadRangeValue(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.Range<RangeType>.ReadRangeValue(System.Xml.XPath.XPathNavigator)
  nameWithType.vb: Range(Of RangeType).ReadRangeValue(XPathNavigator)
  fullName.vb: Microsoft.Health.ItemTypes.Range(Of RangeType).ReadRangeValue(System.Xml.XPath.XPathNavigator)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Range`1.ReadRangeValue(System.Xml.XPath.XPathNavigator)
    name: ReadRangeValue
    nameWithType: Range<RangeType>.ReadRangeValue
    fullName: Microsoft.Health.ItemTypes.Range<RangeType>.ReadRangeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Range`1.ReadRangeValue(System.Xml.XPath.XPathNavigator)
    name: ReadRangeValue
    nameWithType: Range(Of RangeType).ReadRangeValue
    fullName: Microsoft.Health.ItemTypes.Range(Of RangeType).ReadRangeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Range{System.Double}.WriteRangeValue(System.String,System.Double,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.Range{System.Double}.WriteRangeValue(System.String,System.Double,System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.Range{System.Double}
  definition: Microsoft.Health.ItemTypes.Range`1.WriteRangeValue(System.String,`0,System.Xml.XmlWriter)
  name: WriteRangeValue(String, Double, XmlWriter)
  nameWithType: Range<Double>.WriteRangeValue(String, Double, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.Range<System.Double>.WriteRangeValue(System.String, System.Double, System.Xml.XmlWriter)
  nameWithType.vb: Range(Of Double).WriteRangeValue(String, Double, XmlWriter)
  fullName.vb: Microsoft.Health.ItemTypes.Range(Of System.Double).WriteRangeValue(System.String, System.Double, System.Xml.XmlWriter)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Range`1.WriteRangeValue(System.String,`0,System.Xml.XmlWriter)
    name: WriteRangeValue
    nameWithType: Range<Double>.WriteRangeValue
    fullName: Microsoft.Health.ItemTypes.Range<System.Double>.WriteRangeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Range`1.WriteRangeValue(System.String,`0,System.Xml.XmlWriter)
    name: WriteRangeValue
    nameWithType: Range(Of Double).WriteRangeValue
    fullName: Microsoft.Health.ItemTypes.Range(Of System.Double).WriteRangeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.DoubleRange.WriteRangeValue*
  commentId: Overload:Microsoft.Health.ItemTypes.DoubleRange.WriteRangeValue
  isExternal: false
  name: WriteRangeValue
  nameWithType: DoubleRange.WriteRangeValue
  fullName: Microsoft.Health.ItemTypes.DoubleRange.WriteRangeValue
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: Microsoft.Health.ItemTypes.Range`1.WriteRangeValue(System.String,`0,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.Range`1.WriteRangeValue(System.String,`0,System.Xml.XmlWriter)
  isExternal: true
  name: WriteRangeValue(String, RangeType, XmlWriter)
  nameWithType: Range<RangeType>.WriteRangeValue(String, RangeType, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.Range<RangeType>.WriteRangeValue(System.String, RangeType, System.Xml.XmlWriter)
  nameWithType.vb: Range(Of RangeType).WriteRangeValue(String, RangeType, XmlWriter)
  fullName.vb: Microsoft.Health.ItemTypes.Range(Of RangeType).WriteRangeValue(System.String, RangeType, System.Xml.XmlWriter)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Range`1.WriteRangeValue(System.String,`0,System.Xml.XmlWriter)
    name: WriteRangeValue
    nameWithType: Range<RangeType>.WriteRangeValue
    fullName: Microsoft.Health.ItemTypes.Range<RangeType>.WriteRangeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: RangeType
    nameWithType: RangeType
    fullName: RangeType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Range`1.WriteRangeValue(System.String,`0,System.Xml.XmlWriter)
    name: WriteRangeValue
    nameWithType: Range(Of RangeType).WriteRangeValue
    fullName: Microsoft.Health.ItemTypes.Range(Of RangeType).WriteRangeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: RangeType
    nameWithType: RangeType
    fullName: RangeType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: System.Double.MinValue
  commentId: F:System.Double.MinValue
- uid: Microsoft.Health.ItemTypes.Range{System.Double}.DefaultMinValue
  commentId: P:Microsoft.Health.ItemTypes.Range{System.Double}.DefaultMinValue
  parent: Microsoft.Health.ItemTypes.Range{System.Double}
  definition: Microsoft.Health.ItemTypes.Range`1.DefaultMinValue
  name: DefaultMinValue
  nameWithType: Range<Double>.DefaultMinValue
  fullName: Microsoft.Health.ItemTypes.Range<System.Double>.DefaultMinValue
  nameWithType.vb: Range(Of Double).DefaultMinValue
  fullName.vb: Microsoft.Health.ItemTypes.Range(Of System.Double).DefaultMinValue
- uid: Microsoft.Health.ItemTypes.DoubleRange.DefaultMinValue*
  commentId: Overload:Microsoft.Health.ItemTypes.DoubleRange.DefaultMinValue
  isExternal: false
  name: DefaultMinValue
  nameWithType: DoubleRange.DefaultMinValue
  fullName: Microsoft.Health.ItemTypes.DoubleRange.DefaultMinValue
- uid: Microsoft.Health.ItemTypes.Range`1.DefaultMinValue
  commentId: P:Microsoft.Health.ItemTypes.Range`1.DefaultMinValue
  isExternal: false
  name: DefaultMinValue
  nameWithType: Range<RangeType>.DefaultMinValue
  fullName: Microsoft.Health.ItemTypes.Range<RangeType>.DefaultMinValue
  nameWithType.vb: Range(Of RangeType).DefaultMinValue
  fullName.vb: Microsoft.Health.ItemTypes.Range(Of RangeType).DefaultMinValue
- uid: System.Double.MaxValue
  commentId: F:System.Double.MaxValue
- uid: Microsoft.Health.ItemTypes.Range{System.Double}.DefaultMaxValue
  commentId: P:Microsoft.Health.ItemTypes.Range{System.Double}.DefaultMaxValue
  parent: Microsoft.Health.ItemTypes.Range{System.Double}
  definition: Microsoft.Health.ItemTypes.Range`1.DefaultMaxValue
  name: DefaultMaxValue
  nameWithType: Range<Double>.DefaultMaxValue
  fullName: Microsoft.Health.ItemTypes.Range<System.Double>.DefaultMaxValue
  nameWithType.vb: Range(Of Double).DefaultMaxValue
  fullName.vb: Microsoft.Health.ItemTypes.Range(Of System.Double).DefaultMaxValue
- uid: Microsoft.Health.ItemTypes.DoubleRange.DefaultMaxValue*
  commentId: Overload:Microsoft.Health.ItemTypes.DoubleRange.DefaultMaxValue
  isExternal: false
  name: DefaultMaxValue
  nameWithType: DoubleRange.DefaultMaxValue
  fullName: Microsoft.Health.ItemTypes.DoubleRange.DefaultMaxValue
- uid: Microsoft.Health.ItemTypes.Range`1.DefaultMaxValue
  commentId: P:Microsoft.Health.ItemTypes.Range`1.DefaultMaxValue
  isExternal: false
  name: DefaultMaxValue
  nameWithType: Range<RangeType>.DefaultMaxValue
  fullName: Microsoft.Health.ItemTypes.Range<RangeType>.DefaultMaxValue
  nameWithType.vb: Range(Of RangeType).DefaultMaxValue
  fullName.vb: Microsoft.Health.ItemTypes.Range(Of RangeType).DefaultMaxValue
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.DoubleRange.ToString*
  commentId: Overload:Microsoft.Health.ItemTypes.DoubleRange.ToString
  isExternal: false
  name: ToString
  nameWithType: DoubleRange.ToString
  fullName: Microsoft.Health.ItemTypes.DoubleRange.ToString
