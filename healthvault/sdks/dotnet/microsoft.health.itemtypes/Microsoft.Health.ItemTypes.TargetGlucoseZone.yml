### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.ItemTypes.TargetGlucoseZone
  commentId: T:Microsoft.Health.ItemTypes.TargetGlucoseZone
  id: TargetGlucoseZone
  parent: Microsoft.Health.ItemTypes
  children:
  - Microsoft.Health.ItemTypes.TargetGlucoseZone.#ctor
  - Microsoft.Health.ItemTypes.TargetGlucoseZone.#ctor(System.String,Microsoft.Health.ItemTypes.BloodGlucoseMeasurement,Microsoft.Health.ItemTypes.BloodGlucoseMeasurement)
  - Microsoft.Health.ItemTypes.TargetGlucoseZone.#ctor(System.String,System.Double,System.Double)
  - Microsoft.Health.ItemTypes.TargetGlucoseZone.AbsoluteLowerBoundary
  - Microsoft.Health.ItemTypes.TargetGlucoseZone.AbsoluteUpperBoundary
  - Microsoft.Health.ItemTypes.TargetGlucoseZone.Name
  - Microsoft.Health.ItemTypes.TargetGlucoseZone.ParseXml(System.Xml.XPath.XPathNavigator)
  - Microsoft.Health.ItemTypes.TargetGlucoseZone.RelativeLowerBoundary
  - Microsoft.Health.ItemTypes.TargetGlucoseZone.RelativeUpperBoundary
  - Microsoft.Health.ItemTypes.TargetGlucoseZone.WriteXml(System.String,System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: TargetGlucoseZone
  nameWithType: TargetGlucoseZone
  fullName: Microsoft.Health.ItemTypes.TargetGlucoseZone
  type: Class
  source:
    remote:
      path: Microsoft.Health.ItemTypes/TargetGlucoseZone.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: TargetGlucoseZone
    path: TargetGlucoseZone.cs
    startLine: 19
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nRepresents a target glucose zone.\n"
  example: []
  syntax:
    content: 'public class TargetGlucoseZone : HealthRecordItemData'
    content.vb: >-
      Public Class TargetGlucoseZone
          Inherits HealthRecordItemData
  inheritance:
  - System.Object
  - Microsoft.Health.ItemTypes.HealthRecordItemData
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.ItemTypes.TargetGlucoseZone.#ctor
  commentId: M:Microsoft.Health.ItemTypes.TargetGlucoseZone.#ctor
  id: '#ctor'
  parent: Microsoft.Health.ItemTypes.TargetGlucoseZone
  langs:
  - csharp
  - vb
  name: TargetGlucoseZone()
  nameWithType: TargetGlucoseZone.TargetGlucoseZone()
  fullName: Microsoft.Health.ItemTypes.TargetGlucoseZone.TargetGlucoseZone()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/TargetGlucoseZone.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: TargetGlucoseZone.cs
    startLine: 26
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.TargetGlucoseZone\" data-throw-if-not-resolved=\"false\"></xref> class with default \nvalues.\n"
  example: []
  syntax:
    content: public TargetGlucoseZone()
    content.vb: Public Sub New
  overload: Microsoft.Health.ItemTypes.TargetGlucoseZone.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.TargetGlucoseZone.#ctor(System.String,Microsoft.Health.ItemTypes.BloodGlucoseMeasurement,Microsoft.Health.ItemTypes.BloodGlucoseMeasurement)
  commentId: M:Microsoft.Health.ItemTypes.TargetGlucoseZone.#ctor(System.String,Microsoft.Health.ItemTypes.BloodGlucoseMeasurement,Microsoft.Health.ItemTypes.BloodGlucoseMeasurement)
  id: '#ctor(System.String,Microsoft.Health.ItemTypes.BloodGlucoseMeasurement,Microsoft.Health.ItemTypes.BloodGlucoseMeasurement)'
  parent: Microsoft.Health.ItemTypes.TargetGlucoseZone
  langs:
  - csharp
  - vb
  name: TargetGlucoseZone(String, BloodGlucoseMeasurement, BloodGlucoseMeasurement)
  nameWithType: TargetGlucoseZone.TargetGlucoseZone(String, BloodGlucoseMeasurement, BloodGlucoseMeasurement)
  fullName: Microsoft.Health.ItemTypes.TargetGlucoseZone.TargetGlucoseZone(System.String, Microsoft.Health.ItemTypes.BloodGlucoseMeasurement, Microsoft.Health.ItemTypes.BloodGlucoseMeasurement)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/TargetGlucoseZone.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: TargetGlucoseZone.cs
    startLine: 49
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.TargetGlucoseZone\" data-throw-if-not-resolved=\"false\"></xref> class \nwith the specified absolute glucose value boundaries and name.\n"
  example: []
  syntax:
    content: public TargetGlucoseZone(string name, BloodGlucoseMeasurement lowerBoundaryAbsoluteGlucose, BloodGlucoseMeasurement upperBoundaryAbsoluteGlucose)
    content.vb: Public Sub New(name As String, lowerBoundaryAbsoluteGlucose As BloodGlucoseMeasurement, upperBoundaryAbsoluteGlucose As BloodGlucoseMeasurement)
    parameters:
    - id: name
      type: System.String
      description: "\nThe name of the zone.\n"
    - id: lowerBoundaryAbsoluteGlucose
      type: Microsoft.Health.ItemTypes.BloodGlucoseMeasurement
      description: "\nThe glucose value in millimoles per liter (mmol/L) for the lower \nboundary of the zone.\n"
    - id: upperBoundaryAbsoluteGlucose
      type: Microsoft.Health.ItemTypes.BloodGlucoseMeasurement
      description: "\nThe glucose value in millimoles per liter (mmol/L) for the upper \nboundary of the zone.\n"
  overload: Microsoft.Health.ItemTypes.TargetGlucoseZone.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.TargetGlucoseZone.#ctor(System.String,System.Double,System.Double)
  commentId: M:Microsoft.Health.ItemTypes.TargetGlucoseZone.#ctor(System.String,System.Double,System.Double)
  id: '#ctor(System.String,System.Double,System.Double)'
  parent: Microsoft.Health.ItemTypes.TargetGlucoseZone
  langs:
  - csharp
  - vb
  name: TargetGlucoseZone(String, Double, Double)
  nameWithType: TargetGlucoseZone.TargetGlucoseZone(String, Double, Double)
  fullName: Microsoft.Health.ItemTypes.TargetGlucoseZone.TargetGlucoseZone(System.String, System.Double, System.Double)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/TargetGlucoseZone.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: TargetGlucoseZone.cs
    startLine: 84
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.TargetGlucoseZone\" data-throw-if-not-resolved=\"false\"></xref> class \nwith the specified relative glucose value boundaries and name.\n"
  example: []
  syntax:
    content: public TargetGlucoseZone(string name, double lowerBoundaryRelativeGlucose, double upperBoundaryRelativeGlucose)
    content.vb: Public Sub New(name As String, lowerBoundaryRelativeGlucose As Double, upperBoundaryRelativeGlucose As Double)
    parameters:
    - id: name
      type: System.String
      description: "\nThe name of the zone.\n"
    - id: lowerBoundaryRelativeGlucose
      type: System.Double
      description: "\nThe lower glucose boundary as a percentage of the person's \nmaximum blood glucose level.\n"
    - id: upperBoundaryRelativeGlucose
      type: System.Double
      description: "\nThe upper glucose boundary as a percentage of the person's \nmaximum blood glucose level.\n"
  overload: Microsoft.Health.ItemTypes.TargetGlucoseZone.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nThe <span class=\"paramref\">lowerBoundaryRelativeGlucose</span> or \n<span class=\"paramref\">upperBoundaryRelativeGlucose</span> parameter \nis less than 0.0 or greater than 1.0.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.TargetGlucoseZone.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.TargetGlucoseZone.ParseXml(System.Xml.XPath.XPathNavigator)
  id: ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.TargetGlucoseZone
  langs:
  - csharp
  - vb
  name: ParseXml(XPathNavigator)
  nameWithType: TargetGlucoseZone.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.TargetGlucoseZone.ParseXml(System.Xml.XPath.XPathNavigator)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/TargetGlucoseZone.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ParseXml
    path: TargetGlucoseZone.cs
    startLine: 106
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nPopulates the data from the specified XML.\n"
  example: []
  syntax:
    content: public override void ParseXml(XPathNavigator navigator)
    content.vb: Public Overrides Sub ParseXml(navigator As XPathNavigator)
    parameters:
    - id: navigator
      type: System.Xml.XPath.XPathNavigator
      description: "\nThe XML containing the glucose zone information.\n"
  overridden: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  overload: Microsoft.Health.ItemTypes.TargetGlucoseZone.ParseXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">navigator</span> parameter is null.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.TargetGlucoseZone.WriteXml(System.String,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.TargetGlucoseZone.WriteXml(System.String,System.Xml.XmlWriter)
  id: WriteXml(System.String,System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.TargetGlucoseZone
  langs:
  - csharp
  - vb
  name: WriteXml(String, XmlWriter)
  nameWithType: TargetGlucoseZone.WriteXml(String, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.TargetGlucoseZone.WriteXml(System.String, System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/TargetGlucoseZone.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteXml
    path: TargetGlucoseZone.cs
    startLine: 189
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nWrites the XML representation of the glucose zone into\nthe specified XML writer.\n"
  example: []
  syntax:
    content: public override void WriteXml(string nodeName, XmlWriter writer)
    content.vb: Public Overrides Sub WriteXml(nodeName As String, writer As XmlWriter)
    parameters:
    - id: nodeName
      type: System.String
      description: "\nThe name of the outer node for the heart rate zone.\n"
    - id: writer
      type: System.Xml.XmlWriter
      description: "\nThe XML writer into which the glucose zone should be \nwritten.\n"
  overridden: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  overload: Microsoft.Health.ItemTypes.TargetGlucoseZone.WriteXml*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">nodeName</span> parameter is null or empty.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">writer</span> parameter is null.\n"
  - type: Microsoft.Health.HealthRecordItemSerializationException
    commentId: T:Microsoft.Health.HealthRecordItemSerializationException
    description: "\nThe <xref href=\"Microsoft.Health.ItemTypes.TargetGlucoseZone.RelativeLowerBoundary\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Microsoft.Health.ItemTypes.TargetGlucoseZone.AbsoluteLowerBoundary\" data-throw-if-not-resolved=\"false\"></xref>, \n<xref href=\"Microsoft.Health.ItemTypes.TargetGlucoseZone.RelativeUpperBoundary\" data-throw-if-not-resolved=\"false\"></xref>, or <xref href=\"Microsoft.Health.ItemTypes.TargetGlucoseZone.AbsoluteUpperBoundary\" data-throw-if-not-resolved=\"false\"></xref> \nparameter is not set.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.TargetGlucoseZone.Name
  commentId: P:Microsoft.Health.ItemTypes.TargetGlucoseZone.Name
  id: Name
  parent: Microsoft.Health.ItemTypes.TargetGlucoseZone
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: TargetGlucoseZone.Name
  fullName: Microsoft.Health.ItemTypes.TargetGlucoseZone.Name
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/TargetGlucoseZone.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Name
    path: TargetGlucoseZone.cs
    startLine: 250
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the name for the blood glucose zone.\n"
  remarks: "\nSet the value to null if the name should not be stored.\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
      description: "\nA string representing the name.\n"
  overload: Microsoft.Health.ItemTypes.TargetGlucoseZone.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.TargetGlucoseZone.RelativeLowerBoundary
  commentId: P:Microsoft.Health.ItemTypes.TargetGlucoseZone.RelativeLowerBoundary
  id: RelativeLowerBoundary
  parent: Microsoft.Health.ItemTypes.TargetGlucoseZone
  langs:
  - csharp
  - vb
  name: RelativeLowerBoundary
  nameWithType: TargetGlucoseZone.RelativeLowerBoundary
  fullName: Microsoft.Health.ItemTypes.TargetGlucoseZone.RelativeLowerBoundary
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/TargetGlucoseZone.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: RelativeLowerBoundary
    path: TargetGlucoseZone.cs
    startLine: 276
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the lower boundary of the blood glucose zone as a\npercentage of the person's maximum blood glucose level.\n"
  remarks: "\nOnly <xref href=\"Microsoft.Health.ItemTypes.TargetGlucoseZone.RelativeLowerBoundary\" data-throw-if-not-resolved=\"false\"></xref> or \n<xref href=\"Microsoft.Health.ItemTypes.TargetGlucoseZone.AbsoluteLowerBoundary\" data-throw-if-not-resolved=\"false\"></xref> can be stored. If both are\nset, only <xref href=\"Microsoft.Health.ItemTypes.TargetGlucoseZone.AbsoluteLowerBoundary\" data-throw-if-not-resolved=\"false\"></xref> is stored.\n"
  example: []
  syntax:
    content: public double ? RelativeLowerBoundary { get; set; }
    content.vb: Public Property RelativeLowerBoundary As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
      description: "\nA number representing the boundary.\n"
  overload: Microsoft.Health.ItemTypes.TargetGlucoseZone.RelativeLowerBoundary*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nThe <span class=\"paramref\">value</span> parameter is less than 0.0 or greater than 1.0.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.TargetGlucoseZone.AbsoluteLowerBoundary
  commentId: P:Microsoft.Health.ItemTypes.TargetGlucoseZone.AbsoluteLowerBoundary
  id: AbsoluteLowerBoundary
  parent: Microsoft.Health.ItemTypes.TargetGlucoseZone
  langs:
  - csharp
  - vb
  name: AbsoluteLowerBoundary
  nameWithType: TargetGlucoseZone.AbsoluteLowerBoundary
  fullName: Microsoft.Health.ItemTypes.TargetGlucoseZone.AbsoluteLowerBoundary
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/TargetGlucoseZone.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AbsoluteLowerBoundary
    path: TargetGlucoseZone.cs
    startLine: 306
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the lower boundary of the blood glucose zone as a\nspecific blood glucose level.\n"
  remarks: "\nOnly <xref href=\"Microsoft.Health.ItemTypes.TargetGlucoseZone.RelativeLowerBoundary\" data-throw-if-not-resolved=\"false\"></xref> or \n<xref href=\"Microsoft.Health.ItemTypes.TargetGlucoseZone.AbsoluteLowerBoundary\" data-throw-if-not-resolved=\"false\"></xref> can be stored. If both are\nset, only <xref href=\"Microsoft.Health.ItemTypes.TargetGlucoseZone.AbsoluteLowerBoundary\" data-throw-if-not-resolved=\"false\"></xref> is stored.\n"
  example: []
  syntax:
    content: public BloodGlucoseMeasurement AbsoluteLowerBoundary { get; set; }
    content.vb: Public Property AbsoluteLowerBoundary As BloodGlucoseMeasurement
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.BloodGlucoseMeasurement
      description: "\nA <xref href=\"Microsoft.Health.ItemTypes.BloodGlucoseMeasurement\" data-throw-if-not-resolved=\"false\"></xref> instance representing the \nboundary.\n"
  overload: Microsoft.Health.ItemTypes.TargetGlucoseZone.AbsoluteLowerBoundary*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.TargetGlucoseZone.RelativeUpperBoundary
  commentId: P:Microsoft.Health.ItemTypes.TargetGlucoseZone.RelativeUpperBoundary
  id: RelativeUpperBoundary
  parent: Microsoft.Health.ItemTypes.TargetGlucoseZone
  langs:
  - csharp
  - vb
  name: RelativeUpperBoundary
  nameWithType: TargetGlucoseZone.RelativeUpperBoundary
  fullName: Microsoft.Health.ItemTypes.TargetGlucoseZone.RelativeUpperBoundary
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/TargetGlucoseZone.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: RelativeUpperBoundary
    path: TargetGlucoseZone.cs
    startLine: 332
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the upper boundary of the blood glucose zone as a\npercentage of the person's maximum blood glucose level.\n"
  remarks: "\nOnly <xref href=\"Microsoft.Health.ItemTypes.TargetGlucoseZone.RelativeUpperBoundary\" data-throw-if-not-resolved=\"false\"></xref> or \n<xref href=\"Microsoft.Health.ItemTypes.TargetGlucoseZone.AbsoluteUpperBoundary\" data-throw-if-not-resolved=\"false\"></xref> may be stored. If both are\nset, only <xref href=\"Microsoft.Health.ItemTypes.TargetGlucoseZone.AbsoluteUpperBoundary\" data-throw-if-not-resolved=\"false\"></xref> will be stored.\n"
  example: []
  syntax:
    content: public double ? RelativeUpperBoundary { get; set; }
    content.vb: Public Property RelativeUpperBoundary As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
      description: "\nA number representing the boundary.\n"
  overload: Microsoft.Health.ItemTypes.TargetGlucoseZone.RelativeUpperBoundary*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nThe <span class=\"paramref\">value</span> parameter is less than 0.0 or greater than 1.0.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.TargetGlucoseZone.AbsoluteUpperBoundary
  commentId: P:Microsoft.Health.ItemTypes.TargetGlucoseZone.AbsoluteUpperBoundary
  id: AbsoluteUpperBoundary
  parent: Microsoft.Health.ItemTypes.TargetGlucoseZone
  langs:
  - csharp
  - vb
  name: AbsoluteUpperBoundary
  nameWithType: TargetGlucoseZone.AbsoluteUpperBoundary
  fullName: Microsoft.Health.ItemTypes.TargetGlucoseZone.AbsoluteUpperBoundary
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/TargetGlucoseZone.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AbsoluteUpperBoundary
    path: TargetGlucoseZone.cs
    startLine: 357
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the upper boundary of the blood glucose zone as a\nspecific blood glucose level.\n"
  remarks: "\nOnly <xref href=\"Microsoft.Health.ItemTypes.TargetGlucoseZone.RelativeUpperBoundary\" data-throw-if-not-resolved=\"false\"></xref> or \n<xref href=\"Microsoft.Health.ItemTypes.TargetGlucoseZone.AbsoluteUpperBoundary\" data-throw-if-not-resolved=\"false\"></xref> can be stored. If both are\nset, only <xref href=\"Microsoft.Health.ItemTypes.TargetGlucoseZone.AbsoluteUpperBoundary\" data-throw-if-not-resolved=\"false\"></xref> is stored.\n"
  example: []
  syntax:
    content: public BloodGlucoseMeasurement AbsoluteUpperBoundary { get; set; }
    content.vb: Public Property AbsoluteUpperBoundary As BloodGlucoseMeasurement
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.BloodGlucoseMeasurement
  overload: Microsoft.Health.ItemTypes.TargetGlucoseZone.AbsoluteUpperBoundary*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Health.ItemTypes
  commentId: N:Microsoft.Health.ItemTypes
  isExternal: false
  name: Microsoft.Health.ItemTypes
  nameWithType: Microsoft.Health.ItemTypes
  fullName: Microsoft.Health.ItemTypes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData
  commentId: T:Microsoft.Health.ItemTypes.HealthRecordItemData
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: HealthRecordItemData
  nameWithType: HealthRecordItemData
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.ItemTypes.TargetGlucoseZone
  commentId: T:Microsoft.Health.ItemTypes.TargetGlucoseZone
  isExternal: false
  name: TargetGlucoseZone
  nameWithType: TargetGlucoseZone
  fullName: Microsoft.Health.ItemTypes.TargetGlucoseZone
- uid: Microsoft.Health.ItemTypes.TargetGlucoseZone.#ctor*
  commentId: Overload:Microsoft.Health.ItemTypes.TargetGlucoseZone.#ctor
  isExternal: false
  name: TargetGlucoseZone
  nameWithType: TargetGlucoseZone.TargetGlucoseZone
  fullName: Microsoft.Health.ItemTypes.TargetGlucoseZone.TargetGlucoseZone
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.ItemTypes.BloodGlucoseMeasurement
  commentId: T:Microsoft.Health.ItemTypes.BloodGlucoseMeasurement
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: BloodGlucoseMeasurement
  nameWithType: BloodGlucoseMeasurement
  fullName: Microsoft.Health.ItemTypes.BloodGlucoseMeasurement
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.HealthRecordItemData
  isExternal: true
  name: ParseXml(XPathNavigator)
  nameWithType: HealthRecordItemData.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: HealthRecordItemData.ParseXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: HealthRecordItemData.ParseXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.TargetGlucoseZone.ParseXml*
  commentId: Overload:Microsoft.Health.ItemTypes.TargetGlucoseZone.ParseXml
  isExternal: false
  name: ParseXml
  nameWithType: TargetGlucoseZone.ParseXml
  fullName: Microsoft.Health.ItemTypes.TargetGlucoseZone.ParseXml
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.Xml.XPath.XPathNavigator
  commentId: T:System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: true
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: false
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: Microsoft.Health.ItemTypes.TargetGlucoseZone.RelativeLowerBoundary
  commentId: P:Microsoft.Health.ItemTypes.TargetGlucoseZone.RelativeLowerBoundary
- uid: Microsoft.Health.ItemTypes.TargetGlucoseZone.AbsoluteLowerBoundary
  commentId: P:Microsoft.Health.ItemTypes.TargetGlucoseZone.AbsoluteLowerBoundary
- uid: Microsoft.Health.ItemTypes.TargetGlucoseZone.RelativeUpperBoundary
  commentId: P:Microsoft.Health.ItemTypes.TargetGlucoseZone.RelativeUpperBoundary
- uid: Microsoft.Health.ItemTypes.TargetGlucoseZone.AbsoluteUpperBoundary
  commentId: P:Microsoft.Health.ItemTypes.TargetGlucoseZone.AbsoluteUpperBoundary
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.HealthRecordItemData
  isExternal: true
  name: WriteXml(String, XmlWriter)
  nameWithType: HealthRecordItemData.WriteXml(String, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String, System.Xml.XmlWriter)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItemData.WriteXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItemData.WriteXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.TargetGlucoseZone.WriteXml*
  commentId: Overload:Microsoft.Health.ItemTypes.TargetGlucoseZone.WriteXml
  isExternal: false
  name: WriteXml
  nameWithType: TargetGlucoseZone.WriteXml
  fullName: Microsoft.Health.ItemTypes.TargetGlucoseZone.WriteXml
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: Microsoft.Health.HealthRecordItemSerializationException
  commentId: T:Microsoft.Health.HealthRecordItemSerializationException
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: Microsoft.Health.ItemTypes.TargetGlucoseZone.Name*
  commentId: Overload:Microsoft.Health.ItemTypes.TargetGlucoseZone.Name
  isExternal: false
  name: Name
  nameWithType: TargetGlucoseZone.Name
  fullName: Microsoft.Health.ItemTypes.TargetGlucoseZone.Name
- uid: Microsoft.Health.ItemTypes.TargetGlucoseZone.RelativeLowerBoundary*
  commentId: Overload:Microsoft.Health.ItemTypes.TargetGlucoseZone.RelativeLowerBoundary
  isExternal: false
  name: RelativeLowerBoundary
  nameWithType: TargetGlucoseZone.RelativeLowerBoundary
  fullName: Microsoft.Health.ItemTypes.TargetGlucoseZone.RelativeLowerBoundary
- uid: System.Nullable{System.Double}
  commentId: T:System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  nameWithType.vb: Nullable(Of Double)
  fullName.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.TargetGlucoseZone.AbsoluteLowerBoundary*
  commentId: Overload:Microsoft.Health.ItemTypes.TargetGlucoseZone.AbsoluteLowerBoundary
  isExternal: false
  name: AbsoluteLowerBoundary
  nameWithType: TargetGlucoseZone.AbsoluteLowerBoundary
  fullName: Microsoft.Health.ItemTypes.TargetGlucoseZone.AbsoluteLowerBoundary
- uid: Microsoft.Health.ItemTypes.TargetGlucoseZone.RelativeUpperBoundary*
  commentId: Overload:Microsoft.Health.ItemTypes.TargetGlucoseZone.RelativeUpperBoundary
  isExternal: false
  name: RelativeUpperBoundary
  nameWithType: TargetGlucoseZone.RelativeUpperBoundary
  fullName: Microsoft.Health.ItemTypes.TargetGlucoseZone.RelativeUpperBoundary
- uid: Microsoft.Health.ItemTypes.TargetGlucoseZone.AbsoluteUpperBoundary*
  commentId: Overload:Microsoft.Health.ItemTypes.TargetGlucoseZone.AbsoluteUpperBoundary
  isExternal: false
  name: AbsoluteUpperBoundary
  nameWithType: TargetGlucoseZone.AbsoluteUpperBoundary
  fullName: Microsoft.Health.ItemTypes.TargetGlucoseZone.AbsoluteUpperBoundary
