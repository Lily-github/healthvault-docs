### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2
  commentId: T:Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2
  id: MedicalImageStudySeriesV2
  parent: Microsoft.Health.ItemTypes
  children:
  - Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.#ctor
  - Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.#ctor(System.Collections.Generic.ICollection{Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage})
  - Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.AcquisitionDateTime
  - Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.BodyPart
  - Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.Description
  - Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.Images
  - Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.InstitutionName
  - Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.Modality
  - Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.ParseXml(System.Xml.XPath.XPathNavigator)
  - Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.PreviewBlobName
  - Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.SeriesInstanceUID
  - Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.ToString
  - Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.WriteXml(System.String,System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: MedicalImageStudySeriesV2
  nameWithType: MedicalImageStudySeriesV2
  fullName: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2
  type: Class
  source:
    remote:
      path: Microsoft.Health.ItemTypes/MedicalImageStudySeriesV2.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: MedicalImageStudySeriesV2
    path: MedicalImageStudySeriesV2.cs
    startLine: 17
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nRepresents the details of a specific series of images in a medical image study.\n"
  example: []
  syntax:
    content: 'public class MedicalImageStudySeriesV2 : HealthRecordItemData'
    content.vb: >-
      Public Class MedicalImageStudySeriesV2
          Inherits HealthRecordItemData
  inheritance:
  - System.Object
  - Microsoft.Health.ItemTypes.HealthRecordItemData
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.#ctor
  commentId: M:Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.#ctor
  id: '#ctor'
  parent: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2
  langs:
  - csharp
  - vb
  name: MedicalImageStudySeriesV2()
  nameWithType: MedicalImageStudySeriesV2.MedicalImageStudySeriesV2()
  fullName: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.MedicalImageStudySeriesV2()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/MedicalImageStudySeriesV2.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: MedicalImageStudySeriesV2.cs
    startLine: 23
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2\" data-throw-if-not-resolved=\"false\"></xref> class with default values.\n"
  example: []
  syntax:
    content: public MedicalImageStudySeriesV2()
    content.vb: Public Sub New
  overload: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.#ctor(System.Collections.Generic.ICollection{Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage})
  commentId: M:Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.#ctor(System.Collections.Generic.ICollection{Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage})
  id: '#ctor(System.Collections.Generic.ICollection{Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage})'
  parent: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2
  langs:
  - csharp
  - vb
  name: MedicalImageStudySeriesV2(ICollection<MedicalImageStudySeriesImage>)
  nameWithType: MedicalImageStudySeriesV2.MedicalImageStudySeriesV2(ICollection<MedicalImageStudySeriesImage>)
  fullName: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.MedicalImageStudySeriesV2(System.Collections.Generic.ICollection<Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage>)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/MedicalImageStudySeriesV2.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: MedicalImageStudySeriesV2.cs
    startLine: 40
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2\" data-throw-if-not-resolved=\"false\"></xref> class\nspecifying mandatory values.\n"
  example: []
  syntax:
    content: public MedicalImageStudySeriesV2(ICollection<MedicalImageStudySeriesImage> images)
    content.vb: Public Sub New(images As ICollection(Of MedicalImageStudySeriesImage))
    parameters:
    - id: images
      type: System.Collections.Generic.ICollection{Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage}
      description: "\nMedical image study series images. \n"
  overload: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nIf <span class=\"paramref\">images</span> parameter is <strong>null</strong> or doesn't contain any images.\n"
  nameWithType.vb: MedicalImageStudySeriesV2.MedicalImageStudySeriesV2(ICollection(Of MedicalImageStudySeriesImage))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.MedicalImageStudySeriesV2(System.Collections.Generic.ICollection(Of Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage))
  name.vb: MedicalImageStudySeriesV2(ICollection(Of MedicalImageStudySeriesImage))
- uid: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.ParseXml(System.Xml.XPath.XPathNavigator)
  id: ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2
  langs:
  - csharp
  - vb
  name: ParseXml(XPathNavigator)
  nameWithType: MedicalImageStudySeriesV2.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.ParseXml(System.Xml.XPath.XPathNavigator)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/MedicalImageStudySeriesV2.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ParseXml
    path: MedicalImageStudySeriesV2.cs
    startLine: 67
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nPopulates the data from the specified XML.\n"
  example: []
  syntax:
    content: public override void ParseXml(XPathNavigator navigator)
    content.vb: Public Overrides Sub ParseXml(navigator As XPathNavigator)
    parameters:
    - id: navigator
      type: System.Xml.XPath.XPathNavigator
      description: "\nThe XML containing the medical image study series.\n"
  overridden: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  overload: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.ParseXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nIf <span class=\"paramref\">navigator</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.WriteXml(System.String,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.WriteXml(System.String,System.Xml.XmlWriter)
  id: WriteXml(System.String,System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2
  langs:
  - csharp
  - vb
  name: WriteXml(String, XmlWriter)
  nameWithType: MedicalImageStudySeriesV2.WriteXml(String, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.WriteXml(System.String, System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/MedicalImageStudySeriesV2.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteXml
    path: MedicalImageStudySeriesV2.cs
    startLine: 117
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nWrites the XML representation of the medical image study series into\nthe specified XML writer.\n"
  example: []
  syntax:
    content: public override void WriteXml(string nodeName, XmlWriter writer)
    content.vb: Public Overrides Sub WriteXml(nodeName As String, writer As XmlWriter)
    parameters:
    - id: nodeName
      type: System.String
      description: "\nThe name of the outer node for the medical image study series.\n"
    - id: writer
      type: System.Xml.XmlWriter
      description: "\nThe XML writer into which the medical image study series should be \nwritten.\n"
  overridden: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  overload: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.WriteXml*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nIf <span class=\"paramref\">nodeName</span> parameter is <strong>null</strong> or empty.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nIf <span class=\"paramref\">writer</span> parameter is <strong>null</strong>.\n"
  - type: Microsoft.Health.HealthRecordItemSerializationException
    commentId: T:Microsoft.Health.HealthRecordItemSerializationException
    description: "\nIf <xref href=\"Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.AcquisitionDateTime\" data-throw-if-not-resolved=\"false\"></xref> is <strong>null</strong>.\nIf <xref href=\"Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.Images\" data-throw-if-not-resolved=\"false\"></xref> is <strong>null</strong> or doesn't contain any image. \n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.AcquisitionDateTime
  commentId: P:Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.AcquisitionDateTime
  id: AcquisitionDateTime
  parent: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2
  langs:
  - csharp
  - vb
  name: AcquisitionDateTime
  nameWithType: MedicalImageStudySeriesV2.AcquisitionDateTime
  fullName: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.AcquisitionDateTime
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/MedicalImageStudySeriesV2.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AcquisitionDateTime
    path: MedicalImageStudySeriesV2.cs
    startLine: 155
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the date and time that the image was acquired.\n"
  remarks: "\nThis value corresponds to DICOM tags (0008, 0022) and (0008, 0032).\n\nIf there is no information about the acquisition date time the value should be set \nto <strong>null</strong>.\n"
  example: []
  syntax:
    content: public HealthServiceDateTime AcquisitionDateTime { get; set; }
    content.vb: Public Property AcquisitionDateTime As HealthServiceDateTime
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.HealthServiceDateTime
  overload: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.AcquisitionDateTime*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.Description
  commentId: P:Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.Description
  id: Description
  parent: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: MedicalImageStudySeriesV2.Description
  fullName: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.Description
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/MedicalImageStudySeriesV2.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Description
    path: MedicalImageStudySeriesV2.cs
    startLine: 175
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets a description of the series.\n"
  remarks: "\nThis value corresponds to DICOM tag (0008, 103E).\n"
  example: []
  syntax:
    content: public string Description { get; set; }
    content.vb: Public Property Description As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.Description*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">value</span> contains only whitespace.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.Images
  commentId: P:Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.Images
  id: Images
  parent: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2
  langs:
  - csharp
  - vb
  name: Images
  nameWithType: MedicalImageStudySeriesV2.Images
  fullName: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.Images
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/MedicalImageStudySeriesV2.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Images
    path: MedicalImageStudySeriesV2.cs
    startLine: 195
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets medical images. \n"
  example: []
  syntax:
    content: public Collection<MedicalImageStudySeriesImage> Images { get; }
    content.vb: Public ReadOnly Property Images As Collection(Of MedicalImageStudySeriesImage)
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage}
  overload: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.Images*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.InstitutionName
  commentId: P:Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.InstitutionName
  id: InstitutionName
  parent: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2
  langs:
  - csharp
  - vb
  name: InstitutionName
  nameWithType: MedicalImageStudySeriesV2.InstitutionName
  fullName: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.InstitutionName
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/MedicalImageStudySeriesV2.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: InstitutionName
    path: MedicalImageStudySeriesV2.cs
    startLine: 213
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the name of the institution where the images were acquired.\n"
  remarks: "\nThis value corresponds to DICOM tag (0008, 0080).\n\nIf there is no information about the institution the value should be set \nto <strong>null</strong>.\n"
  example: []
  syntax:
    content: public Organization InstitutionName { get; set; }
    content.vb: Public Property InstitutionName As Organization
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.Organization
  overload: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.InstitutionName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.Modality
  commentId: P:Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.Modality
  id: Modality
  parent: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2
  langs:
  - csharp
  - vb
  name: Modality
  nameWithType: MedicalImageStudySeriesV2.Modality
  fullName: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.Modality
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/MedicalImageStudySeriesV2.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Modality
    path: MedicalImageStudySeriesV2.cs
    startLine: 233
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the method (or modality) in which the images were acquired.\n"
  remarks: "\nThis value corresponds to DICOM tag (0008, 0060).\n\nIf there is no information about the modality the value should be set to <strong>null</strong>.\n\nThe preferred vocabulary is dicom.modality.\n"
  example: []
  syntax:
    content: public CodableValue Modality { get; set; }
    content.vb: Public Property Modality As CodableValue
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.CodableValue
  overload: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.Modality*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.BodyPart
  commentId: P:Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.BodyPart
  id: BodyPart
  parent: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2
  langs:
  - csharp
  - vb
  name: BodyPart
  nameWithType: MedicalImageStudySeriesV2.BodyPart
  fullName: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.BodyPart
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/MedicalImageStudySeriesV2.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: BodyPart
    path: MedicalImageStudySeriesV2.cs
    startLine: 251
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the body part that was imaged.\n"
  remarks: "\nThis value corresponds to DICOM tag (0018, 0015).\n\nIf there is no information about the body part the value should be set to <strong>null</strong>.\n"
  example: []
  syntax:
    content: public CodableValue BodyPart { get; set; }
    content.vb: Public Property BodyPart As CodableValue
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.CodableValue
  overload: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.BodyPart*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.PreviewBlobName
  commentId: P:Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.PreviewBlobName
  id: PreviewBlobName
  parent: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2
  langs:
  - csharp
  - vb
  name: PreviewBlobName
  nameWithType: MedicalImageStudySeriesV2.PreviewBlobName
  fullName: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.PreviewBlobName
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/MedicalImageStudySeriesV2.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: PreviewBlobName
    path: MedicalImageStudySeriesV2.cs
    startLine: 274
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the name of the BLOB holding a smaller version of the image\nsuitable for web viewing or email.\n"
  remarks: "\nIf there is no preview BLOB name the value should be set to <strong>null</strong>.\nPreviews should be stored using the jpeg or png format.\nIt is recommended that the shorter dimension of the image be no less than 500 pixels in size.\n"
  example: []
  syntax:
    content: public string PreviewBlobName { get; set; }
    content.vb: Public Property PreviewBlobName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.PreviewBlobName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nIf <span class=\"paramref\">value</span> contains only whitespace.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.SeriesInstanceUID
  commentId: P:Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.SeriesInstanceUID
  id: SeriesInstanceUID
  parent: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2
  langs:
  - csharp
  - vb
  name: SeriesInstanceUID
  nameWithType: MedicalImageStudySeriesV2.SeriesInstanceUID
  fullName: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.SeriesInstanceUID
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/MedicalImageStudySeriesV2.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SeriesInstanceUID
    path: MedicalImageStudySeriesV2.cs
    startLine: 304
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the series instance UID.\n"
  remarks: "\nThis value corresponds to DICOM tag (0020,000E)\n\nIf there is no series instance UID, the value should be set to <strong>null</strong>.\n"
  example: []
  syntax:
    content: public string SeriesInstanceUID { get; set; }
    content.vb: Public Property SeriesInstanceUID As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.SeriesInstanceUID*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nIf <span class=\"paramref\">value</span> contains only whitespace.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.ToString
  commentId: M:Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.ToString
  id: ToString
  parent: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: MedicalImageStudySeriesV2.ToString()
  fullName: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.ToString()
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/MedicalImageStudySeriesV2.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ToString
    path: MedicalImageStudySeriesV2.cs
    startLine: 328
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets a string representation of the medical image study series.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\nA string representation of the medical image study series.\n"
  overridden: System.Object.ToString
  overload: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Health.ItemTypes
  commentId: N:Microsoft.Health.ItemTypes
  isExternal: false
  name: Microsoft.Health.ItemTypes
  nameWithType: Microsoft.Health.ItemTypes
  fullName: Microsoft.Health.ItemTypes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData
  commentId: T:Microsoft.Health.ItemTypes.HealthRecordItemData
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: HealthRecordItemData
  nameWithType: HealthRecordItemData
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2
  commentId: T:Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2
  isExternal: false
  name: MedicalImageStudySeriesV2
  nameWithType: MedicalImageStudySeriesV2
  fullName: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2
- uid: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.#ctor*
  commentId: Overload:Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.#ctor
  isExternal: false
  name: MedicalImageStudySeriesV2
  nameWithType: MedicalImageStudySeriesV2.MedicalImageStudySeriesV2
  fullName: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.MedicalImageStudySeriesV2
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: System.Collections.Generic.ICollection{Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage}
  commentId: T:System.Collections.Generic.ICollection{Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<MedicalImageStudySeriesImage>
  nameWithType: ICollection<MedicalImageStudySeriesImage>
  fullName: System.Collections.Generic.ICollection<Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage>
  nameWithType.vb: ICollection(Of MedicalImageStudySeriesImage)
  fullName.vb: System.Collections.Generic.ICollection(Of Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage)
  name.vb: ICollection(Of MedicalImageStudySeriesImage)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage
    name: MedicalImageStudySeriesImage
    nameWithType: MedicalImageStudySeriesImage
    fullName: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage
    name: MedicalImageStudySeriesImage
    nameWithType: MedicalImageStudySeriesImage
    fullName: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.HealthRecordItemData
  isExternal: true
  name: ParseXml(XPathNavigator)
  nameWithType: HealthRecordItemData.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: HealthRecordItemData.ParseXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: HealthRecordItemData.ParseXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.ParseXml*
  commentId: Overload:Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.ParseXml
  isExternal: false
  name: ParseXml
  nameWithType: MedicalImageStudySeriesV2.ParseXml
  fullName: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.ParseXml
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.Xml.XPath.XPathNavigator
  commentId: T:System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: true
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: false
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.AcquisitionDateTime
  commentId: P:Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.AcquisitionDateTime
- uid: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.Images
  commentId: P:Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.Images
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.HealthRecordItemData
  isExternal: true
  name: WriteXml(String, XmlWriter)
  nameWithType: HealthRecordItemData.WriteXml(String, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String, System.Xml.XmlWriter)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItemData.WriteXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItemData.WriteXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.WriteXml*
  commentId: Overload:Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.WriteXml
  isExternal: false
  name: WriteXml
  nameWithType: MedicalImageStudySeriesV2.WriteXml
  fullName: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.WriteXml
- uid: Microsoft.Health.HealthRecordItemSerializationException
  commentId: T:Microsoft.Health.HealthRecordItemSerializationException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.AcquisitionDateTime*
  commentId: Overload:Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.AcquisitionDateTime
  isExternal: false
  name: AcquisitionDateTime
  nameWithType: MedicalImageStudySeriesV2.AcquisitionDateTime
  fullName: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.AcquisitionDateTime
- uid: Microsoft.Health.ItemTypes.HealthServiceDateTime
  commentId: T:Microsoft.Health.ItemTypes.HealthServiceDateTime
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: HealthServiceDateTime
  nameWithType: HealthServiceDateTime
  fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime
- uid: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.Description*
  commentId: Overload:Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.Description
  isExternal: false
  name: Description
  nameWithType: MedicalImageStudySeriesV2.Description
  fullName: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.Description
- uid: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.Images*
  commentId: Overload:Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.Images
  isExternal: false
  name: Images
  nameWithType: MedicalImageStudySeriesV2.Images
  fullName: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.Images
- uid: System.Collections.ObjectModel.Collection{Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage}
  commentId: T:System.Collections.ObjectModel.Collection{Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<MedicalImageStudySeriesImage>
  nameWithType: Collection<MedicalImageStudySeriesImage>
  fullName: System.Collections.ObjectModel.Collection<Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage>
  nameWithType.vb: Collection(Of MedicalImageStudySeriesImage)
  fullName.vb: System.Collections.ObjectModel.Collection(Of Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage)
  name.vb: Collection(Of MedicalImageStudySeriesImage)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage
    name: MedicalImageStudySeriesImage
    nameWithType: MedicalImageStudySeriesImage
    fullName: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage
    name: MedicalImageStudySeriesImage
    nameWithType: MedicalImageStudySeriesImage
    fullName: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1
  commentId: T:System.Collections.ObjectModel.Collection`1
  isExternal: true
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  nameWithType.vb: Collection(Of T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T)
  name.vb: Collection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.InstitutionName*
  commentId: Overload:Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.InstitutionName
  isExternal: false
  name: InstitutionName
  nameWithType: MedicalImageStudySeriesV2.InstitutionName
  fullName: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.InstitutionName
- uid: Microsoft.Health.ItemTypes.Organization
  commentId: T:Microsoft.Health.ItemTypes.Organization
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: Organization
  nameWithType: Organization
  fullName: Microsoft.Health.ItemTypes.Organization
- uid: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.Modality*
  commentId: Overload:Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.Modality
  isExternal: false
  name: Modality
  nameWithType: MedicalImageStudySeriesV2.Modality
  fullName: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.Modality
- uid: Microsoft.Health.ItemTypes.CodableValue
  commentId: T:Microsoft.Health.ItemTypes.CodableValue
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: CodableValue
  nameWithType: CodableValue
  fullName: Microsoft.Health.ItemTypes.CodableValue
- uid: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.BodyPart*
  commentId: Overload:Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.BodyPart
  isExternal: false
  name: BodyPart
  nameWithType: MedicalImageStudySeriesV2.BodyPart
  fullName: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.BodyPart
- uid: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.PreviewBlobName*
  commentId: Overload:Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.PreviewBlobName
  isExternal: false
  name: PreviewBlobName
  nameWithType: MedicalImageStudySeriesV2.PreviewBlobName
  fullName: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.PreviewBlobName
- uid: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.SeriesInstanceUID*
  commentId: Overload:Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.SeriesInstanceUID
  isExternal: false
  name: SeriesInstanceUID
  nameWithType: MedicalImageStudySeriesV2.SeriesInstanceUID
  fullName: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.SeriesInstanceUID
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.ToString*
  commentId: Overload:Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.ToString
  isExternal: false
  name: ToString
  nameWithType: MedicalImageStudySeriesV2.ToString
  fullName: Microsoft.Health.ItemTypes.MedicalImageStudySeriesV2.ToString
