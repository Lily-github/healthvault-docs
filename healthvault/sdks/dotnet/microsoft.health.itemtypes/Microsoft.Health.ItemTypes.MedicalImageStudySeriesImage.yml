### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage
  commentId: T:Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage
  id: MedicalImageStudySeriesImage
  parent: Microsoft.Health.ItemTypes
  children:
  - Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.#ctor
  - Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.#ctor(System.String)
  - Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.ImageBlobName
  - Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.ImagePreviewBlobName
  - Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.ParseXml(System.Xml.XPath.XPathNavigator)
  - Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.ToString
  - Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.WriteXml(System.String,System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: MedicalImageStudySeriesImage
  nameWithType: MedicalImageStudySeriesImage
  fullName: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage
  type: Class
  source:
    remote:
      path: Microsoft.Health.ItemTypes/MedicalImageStudySeriesImage.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: MedicalImageStudySeriesImage
    path: MedicalImageStudySeriesImage.cs
    startLine: 17
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nRepresents the details of a single image in a series.\n"
  example: []
  syntax:
    content: 'public class MedicalImageStudySeriesImage : HealthRecordItemData'
    content.vb: >-
      Public Class MedicalImageStudySeriesImage
          Inherits HealthRecordItemData
  inheritance:
  - System.Object
  - Microsoft.Health.ItemTypes.HealthRecordItemData
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.#ctor
  commentId: M:Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.#ctor
  id: '#ctor'
  parent: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage
  langs:
  - csharp
  - vb
  name: MedicalImageStudySeriesImage()
  nameWithType: MedicalImageStudySeriesImage.MedicalImageStudySeriesImage()
  fullName: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.MedicalImageStudySeriesImage()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/MedicalImageStudySeriesImage.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: MedicalImageStudySeriesImage.cs
    startLine: 22
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage\" data-throw-if-not-resolved=\"false\"></xref> class with default values.\n"
  example: []
  syntax:
    content: public MedicalImageStudySeriesImage()
    content.vb: Public Sub New
  overload: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.#ctor(System.String)
  commentId: M:Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage
  langs:
  - csharp
  - vb
  name: MedicalImageStudySeriesImage(String)
  nameWithType: MedicalImageStudySeriesImage.MedicalImageStudySeriesImage(String)
  fullName: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.MedicalImageStudySeriesImage(System.String)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/MedicalImageStudySeriesImage.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: MedicalImageStudySeriesImage.cs
    startLine: 39
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage\" data-throw-if-not-resolved=\"false\"></xref> class\nspecifying mandatory values.\n"
  example: []
  syntax:
    content: public MedicalImageStudySeriesImage(string imageBlobName)
    content.vb: Public Sub New(imageBlobName As String)
    parameters:
    - id: imageBlobName
      type: System.String
      description: "\nThe name of the BLOB holding the image.\n"
  overload: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">imageBlobName</span> parameter is <strong>null</strong> or empty or contains only whitespace.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.ParseXml(System.Xml.XPath.XPathNavigator)
  id: ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage
  langs:
  - csharp
  - vb
  name: ParseXml(XPathNavigator)
  nameWithType: MedicalImageStudySeriesImage.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.ParseXml(System.Xml.XPath.XPathNavigator)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/MedicalImageStudySeriesImage.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ParseXml
    path: MedicalImageStudySeriesImage.cs
    startLine: 56
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nPopulates the data from the specified XML.\n"
  example: []
  syntax:
    content: public override void ParseXml(XPathNavigator navigator)
    content.vb: Public Overrides Sub ParseXml(navigator As XPathNavigator)
    parameters:
    - id: navigator
      type: System.Xml.XPath.XPathNavigator
      description: "\nThe XML containing the medical image study series image.\n"
  overridden: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  overload: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.ParseXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">navigator</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.WriteXml(System.String,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.WriteXml(System.String,System.Xml.XmlWriter)
  id: WriteXml(System.String,System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage
  langs:
  - csharp
  - vb
  name: WriteXml(String, XmlWriter)
  nameWithType: MedicalImageStudySeriesImage.WriteXml(String, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.WriteXml(System.String, System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/MedicalImageStudySeriesImage.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteXml
    path: MedicalImageStudySeriesImage.cs
    startLine: 90
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nWrites the XML representation of the medical image study series image into\nthe specified XML writer.\n"
  example: []
  syntax:
    content: public override void WriteXml(string nodeName, XmlWriter writer)
    content.vb: Public Overrides Sub WriteXml(nodeName As String, writer As XmlWriter)
    parameters:
    - id: nodeName
      type: System.String
      description: "\nThe name of the outer node for the medical image study series image.\n"
    - id: writer
      type: System.Xml.XmlWriter
      description: "\nThe XML writer into which the medical image study series image should be \nwritten.\n"
  overridden: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  overload: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.WriteXml*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">nodeName</span> parameter is <strong>null</strong> or empty.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">writer</span> parameter is <strong>null</strong>.\n"
  - type: Microsoft.Health.HealthRecordItemSerializationException
    commentId: T:Microsoft.Health.HealthRecordItemSerializationException
    description: "\nIf <xref href=\"Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.ImageBlobName\" data-throw-if-not-resolved=\"false\"></xref> is <strong>null</strong> or empty or contains only whitespace.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.ImageBlobName
  commentId: P:Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.ImageBlobName
  id: ImageBlobName
  parent: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage
  langs:
  - csharp
  - vb
  name: ImageBlobName
  nameWithType: MedicalImageStudySeriesImage.ImageBlobName
  fullName: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.ImageBlobName
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/MedicalImageStudySeriesImage.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ImageBlobName
    path: MedicalImageStudySeriesImage.cs
    startLine: 120
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the name of the BLOB holding the image.\n"
  remarks: "\nThis value corresponds to DICOM tag (0008,0018).\n"
  example: []
  syntax:
    content: public string ImageBlobName { get; set; }
    content.vb: Public Property ImageBlobName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.ImageBlobName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">value</span> parameter is <strong>null</strong>, empty, or contains only\nwhitespace during set.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.ImagePreviewBlobName
  commentId: P:Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.ImagePreviewBlobName
  id: ImagePreviewBlobName
  parent: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage
  langs:
  - csharp
  - vb
  name: ImagePreviewBlobName
  nameWithType: MedicalImageStudySeriesImage.ImagePreviewBlobName
  fullName: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.ImagePreviewBlobName
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/MedicalImageStudySeriesImage.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ImagePreviewBlobName
    path: MedicalImageStudySeriesImage.cs
    startLine: 147
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the name of the BLOB holding a smaller version of the image\nsuitable for web viewing or email.\n"
  remarks: "\nIf there is no image preview BLOB name the value should be set to <strong>null</strong>.\nPreviews should be stored using the jpeg or png format.\nIt is recommended that the shorter dimension of the image be no less than 500 pixels in size.\n"
  example: []
  syntax:
    content: public string ImagePreviewBlobName { get; set; }
    content.vb: Public Property ImagePreviewBlobName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.ImagePreviewBlobName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nIf <span class=\"paramref\">value</span> contains only whitespace.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.ToString
  commentId: M:Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.ToString
  id: ToString
  parent: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: MedicalImageStudySeriesImage.ToString()
  fullName: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.ToString()
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/MedicalImageStudySeriesImage.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ToString
    path: MedicalImageStudySeriesImage.cs
    startLine: 165
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets a string representation of the medical image study series image.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\nA string representation of the medical image study series image.\n"
  overridden: System.Object.ToString
  overload: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Health.ItemTypes
  commentId: N:Microsoft.Health.ItemTypes
  isExternal: false
  name: Microsoft.Health.ItemTypes
  nameWithType: Microsoft.Health.ItemTypes
  fullName: Microsoft.Health.ItemTypes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData
  commentId: T:Microsoft.Health.ItemTypes.HealthRecordItemData
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: HealthRecordItemData
  nameWithType: HealthRecordItemData
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage
  commentId: T:Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage
  isExternal: false
  name: MedicalImageStudySeriesImage
  nameWithType: MedicalImageStudySeriesImage
  fullName: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage
- uid: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.#ctor*
  commentId: Overload:Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.#ctor
  isExternal: false
  name: MedicalImageStudySeriesImage
  nameWithType: MedicalImageStudySeriesImage.MedicalImageStudySeriesImage
  fullName: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.MedicalImageStudySeriesImage
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.HealthRecordItemData
  isExternal: true
  name: ParseXml(XPathNavigator)
  nameWithType: HealthRecordItemData.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: HealthRecordItemData.ParseXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: HealthRecordItemData.ParseXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.ParseXml*
  commentId: Overload:Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.ParseXml
  isExternal: false
  name: ParseXml
  nameWithType: MedicalImageStudySeriesImage.ParseXml
  fullName: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.ParseXml
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.Xml.XPath.XPathNavigator
  commentId: T:System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: true
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: false
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.ImageBlobName
  commentId: P:Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.ImageBlobName
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.HealthRecordItemData
  isExternal: true
  name: WriteXml(String, XmlWriter)
  nameWithType: HealthRecordItemData.WriteXml(String, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String, System.Xml.XmlWriter)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItemData.WriteXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItemData.WriteXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.WriteXml*
  commentId: Overload:Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.WriteXml
  isExternal: false
  name: WriteXml
  nameWithType: MedicalImageStudySeriesImage.WriteXml
  fullName: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.WriteXml
- uid: Microsoft.Health.HealthRecordItemSerializationException
  commentId: T:Microsoft.Health.HealthRecordItemSerializationException
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.ImageBlobName*
  commentId: Overload:Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.ImageBlobName
  isExternal: false
  name: ImageBlobName
  nameWithType: MedicalImageStudySeriesImage.ImageBlobName
  fullName: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.ImageBlobName
- uid: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.ImagePreviewBlobName*
  commentId: Overload:Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.ImagePreviewBlobName
  isExternal: false
  name: ImagePreviewBlobName
  nameWithType: MedicalImageStudySeriesImage.ImagePreviewBlobName
  fullName: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.ImagePreviewBlobName
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.ToString*
  commentId: Overload:Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.ToString
  isExternal: false
  name: ToString
  nameWithType: MedicalImageStudySeriesImage.ToString
  fullName: Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.ToString
