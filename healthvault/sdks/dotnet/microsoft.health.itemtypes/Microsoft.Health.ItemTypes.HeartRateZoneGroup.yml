### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.ItemTypes.HeartRateZoneGroup
  commentId: T:Microsoft.Health.ItemTypes.HeartRateZoneGroup
  id: HeartRateZoneGroup
  parent: Microsoft.Health.ItemTypes
  children:
  - Microsoft.Health.ItemTypes.HeartRateZoneGroup.#ctor
  - Microsoft.Health.ItemTypes.HeartRateZoneGroup.#ctor(System.String)
  - Microsoft.Health.ItemTypes.HeartRateZoneGroup.#ctor(System.String,System.Collections.Generic.IEnumerable{Microsoft.Health.ItemTypes.HeartRateZone})
  - Microsoft.Health.ItemTypes.HeartRateZoneGroup.Name
  - Microsoft.Health.ItemTypes.HeartRateZoneGroup.ParseXml(System.Xml.XPath.XPathNavigator)
  - Microsoft.Health.ItemTypes.HeartRateZoneGroup.TargetZones
  - Microsoft.Health.ItemTypes.HeartRateZoneGroup.WriteXml(System.String,System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: HeartRateZoneGroup
  nameWithType: HeartRateZoneGroup
  fullName: Microsoft.Health.ItemTypes.HeartRateZoneGroup
  type: Class
  source:
    remote:
      path: Microsoft.Health.ItemTypes/HeartRateZoneGroup.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: HeartRateZoneGroup
    path: HeartRateZoneGroup.cs
    startLine: 19
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nRepresents a grouping of heart rate zones by name.\n"
  example: []
  syntax:
    content: 'public class HeartRateZoneGroup : HealthRecordItemData'
    content.vb: >-
      Public Class HeartRateZoneGroup
          Inherits HealthRecordItemData
  inheritance:
  - System.Object
  - Microsoft.Health.ItemTypes.HealthRecordItemData
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.ItemTypes.HeartRateZoneGroup.#ctor
  commentId: M:Microsoft.Health.ItemTypes.HeartRateZoneGroup.#ctor
  id: '#ctor'
  parent: Microsoft.Health.ItemTypes.HeartRateZoneGroup
  langs:
  - csharp
  - vb
  name: HeartRateZoneGroup()
  nameWithType: HeartRateZoneGroup.HeartRateZoneGroup()
  fullName: Microsoft.Health.ItemTypes.HeartRateZoneGroup.HeartRateZoneGroup()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/HeartRateZoneGroup.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: HeartRateZoneGroup.cs
    startLine: 26
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.HeartRateZoneGroup\" data-throw-if-not-resolved=\"false\"></xref> class with \ndefault values.\n"
  example: []
  syntax:
    content: public HeartRateZoneGroup()
    content.vb: Public Sub New
  overload: Microsoft.Health.ItemTypes.HeartRateZoneGroup.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.HeartRateZoneGroup.#ctor(System.String)
  commentId: M:Microsoft.Health.ItemTypes.HeartRateZoneGroup.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Health.ItemTypes.HeartRateZoneGroup
  langs:
  - csharp
  - vb
  name: HeartRateZoneGroup(String)
  nameWithType: HeartRateZoneGroup.HeartRateZoneGroup(String)
  fullName: Microsoft.Health.ItemTypes.HeartRateZoneGroup.HeartRateZoneGroup(System.String)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/HeartRateZoneGroup.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: HeartRateZoneGroup.cs
    startLine: 39
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.HeartRateZoneGroup\" data-throw-if-not-resolved=\"false\"></xref> class \nwith the specified name.\n"
  example: []
  syntax:
    content: public HeartRateZoneGroup(string name)
    content.vb: Public Sub New(name As String)
    parameters:
    - id: name
      type: System.String
      description: "\nThe name of the heart rate zone grouping.\n"
  overload: Microsoft.Health.ItemTypes.HeartRateZoneGroup.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.HeartRateZoneGroup.#ctor(System.String,System.Collections.Generic.IEnumerable{Microsoft.Health.ItemTypes.HeartRateZone})
  commentId: M:Microsoft.Health.ItemTypes.HeartRateZoneGroup.#ctor(System.String,System.Collections.Generic.IEnumerable{Microsoft.Health.ItemTypes.HeartRateZone})
  id: '#ctor(System.String,System.Collections.Generic.IEnumerable{Microsoft.Health.ItemTypes.HeartRateZone})'
  parent: Microsoft.Health.ItemTypes.HeartRateZoneGroup
  langs:
  - csharp
  - vb
  name: HeartRateZoneGroup(String, IEnumerable<HeartRateZone>)
  nameWithType: HeartRateZoneGroup.HeartRateZoneGroup(String, IEnumerable<HeartRateZone>)
  fullName: Microsoft.Health.ItemTypes.HeartRateZoneGroup.HeartRateZoneGroup(System.String, System.Collections.Generic.IEnumerable<Microsoft.Health.ItemTypes.HeartRateZone>)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/HeartRateZoneGroup.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: HeartRateZoneGroup.cs
    startLine: 58
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.HeartRateZoneGroup\" data-throw-if-not-resolved=\"false\"></xref> class \nwith the specified name and target zones.\n"
  example: []
  syntax:
    content: public HeartRateZoneGroup(string name, IEnumerable<HeartRateZone> targetZones)
    content.vb: Public Sub New(name As String, targetZones As IEnumerable(Of HeartRateZone))
    parameters:
    - id: name
      type: System.String
      description: "\nThe name of the heart rate zone grouping.\n"
    - id: targetZones
      type: System.Collections.Generic.IEnumerable{Microsoft.Health.ItemTypes.HeartRateZone}
      description: "\nThe target heart rate zones for the grouping.\n"
  overload: Microsoft.Health.ItemTypes.HeartRateZoneGroup.#ctor*
  nameWithType.vb: HeartRateZoneGroup.HeartRateZoneGroup(String, IEnumerable(Of HeartRateZone))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.ItemTypes.HeartRateZoneGroup.HeartRateZoneGroup(System.String, System.Collections.Generic.IEnumerable(Of Microsoft.Health.ItemTypes.HeartRateZone))
  name.vb: HeartRateZoneGroup(String, IEnumerable(Of HeartRateZone))
- uid: Microsoft.Health.ItemTypes.HeartRateZoneGroup.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.HeartRateZoneGroup.ParseXml(System.Xml.XPath.XPathNavigator)
  id: ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.HeartRateZoneGroup
  langs:
  - csharp
  - vb
  name: ParseXml(XPathNavigator)
  nameWithType: HeartRateZoneGroup.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.HeartRateZoneGroup.ParseXml(System.Xml.XPath.XPathNavigator)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/HeartRateZoneGroup.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ParseXml
    path: HeartRateZoneGroup.cs
    startLine: 88
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nPopulates the data from the specified XML.\n"
  example: []
  syntax:
    content: public override void ParseXml(XPathNavigator navigator)
    content.vb: Public Overrides Sub ParseXml(navigator As XPathNavigator)
    parameters:
    - id: navigator
      type: System.Xml.XPath.XPathNavigator
      description: "\nThe XML containing the heart rate zone group information.\n"
  overridden: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  overload: Microsoft.Health.ItemTypes.HeartRateZoneGroup.ParseXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">navigator</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.HeartRateZoneGroup.WriteXml(System.String,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.HeartRateZoneGroup.WriteXml(System.String,System.Xml.XmlWriter)
  id: WriteXml(System.String,System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.HeartRateZoneGroup
  langs:
  - csharp
  - vb
  name: WriteXml(String, XmlWriter)
  nameWithType: HeartRateZoneGroup.WriteXml(String, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.HeartRateZoneGroup.WriteXml(System.String, System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/HeartRateZoneGroup.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteXml
    path: HeartRateZoneGroup.cs
    startLine: 135
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nWrites the XML representation of the heart rate zone group into\nthe specified XML writer.\n"
  example: []
  syntax:
    content: public override void WriteXml(string nodeName, XmlWriter writer)
    content.vb: Public Overrides Sub WriteXml(nodeName As String, writer As XmlWriter)
    parameters:
    - id: nodeName
      type: System.String
      description: "\nThe name of the outer node for the heart rate zone group.\n"
    - id: writer
      type: System.Xml.XmlWriter
      description: "\nThe XML writer into which the heart rate zone group should be \nwritten.\n"
  overridden: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  overload: Microsoft.Health.ItemTypes.HeartRateZoneGroup.WriteXml*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">nodeName</span> parameter is <strong>null</strong> or empty.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">writer</span> parameter is <strong>null</strong>.\n"
  - type: Microsoft.Health.HealthRecordItemSerializationException
    commentId: T:Microsoft.Health.HealthRecordItemSerializationException
    description: "\nThe <xref href=\"Microsoft.Health.ItemTypes.HeartRateZoneGroup.TargetZones\" data-throw-if-not-resolved=\"false\"></xref> property contains no zones.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.HeartRateZoneGroup.Name
  commentId: P:Microsoft.Health.ItemTypes.HeartRateZoneGroup.Name
  id: Name
  parent: Microsoft.Health.ItemTypes.HeartRateZoneGroup
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: HeartRateZoneGroup.Name
  fullName: Microsoft.Health.ItemTypes.HeartRateZoneGroup.Name
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/HeartRateZoneGroup.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Name
    path: HeartRateZoneGroup.cs
    startLine: 174
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the name for the heart rate zone group.\n"
  remarks: "\nSet the value to <strong>null</strong> if the name should not be stored.\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
      description: "\nA string representing the name.\n"
  overload: Microsoft.Health.ItemTypes.HeartRateZoneGroup.Name*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nIf <span class=\"paramref\">value</span> contains only whitespace.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.HeartRateZoneGroup.TargetZones
  commentId: P:Microsoft.Health.ItemTypes.HeartRateZoneGroup.TargetZones
  id: TargetZones
  parent: Microsoft.Health.ItemTypes.HeartRateZoneGroup
  langs:
  - csharp
  - vb
  name: TargetZones
  nameWithType: HeartRateZoneGroup.TargetZones
  fullName: Microsoft.Health.ItemTypes.HeartRateZoneGroup.TargetZones
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/HeartRateZoneGroup.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: TargetZones
    path: HeartRateZoneGroup.cs
    startLine: 197
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets the target heart rate zones for the zone group.\n"
  remarks: "\nTo add a zone to the group, call Add on the returned collection.\n"
  example: []
  syntax:
    content: public Collection<HeartRateZone> TargetZones { get; }
    content.vb: Public ReadOnly Property TargetZones As Collection(Of HeartRateZone)
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{Microsoft.Health.ItemTypes.HeartRateZone}
      description: "\nA collection of zones.\n"
  overload: Microsoft.Health.ItemTypes.HeartRateZoneGroup.TargetZones*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Health.ItemTypes
  commentId: N:Microsoft.Health.ItemTypes
  isExternal: false
  name: Microsoft.Health.ItemTypes
  nameWithType: Microsoft.Health.ItemTypes
  fullName: Microsoft.Health.ItemTypes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData
  commentId: T:Microsoft.Health.ItemTypes.HealthRecordItemData
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: HealthRecordItemData
  nameWithType: HealthRecordItemData
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.ItemTypes.HeartRateZoneGroup
  commentId: T:Microsoft.Health.ItemTypes.HeartRateZoneGroup
  isExternal: false
  name: HeartRateZoneGroup
  nameWithType: HeartRateZoneGroup
  fullName: Microsoft.Health.ItemTypes.HeartRateZoneGroup
- uid: Microsoft.Health.ItemTypes.HeartRateZoneGroup.#ctor*
  commentId: Overload:Microsoft.Health.ItemTypes.HeartRateZoneGroup.#ctor
  isExternal: false
  name: HeartRateZoneGroup
  nameWithType: HeartRateZoneGroup.HeartRateZoneGroup
  fullName: Microsoft.Health.ItemTypes.HeartRateZoneGroup.HeartRateZoneGroup
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{Microsoft.Health.ItemTypes.HeartRateZone}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.Health.ItemTypes.HeartRateZone}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<HeartRateZone>
  nameWithType: IEnumerable<HeartRateZone>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Health.ItemTypes.HeartRateZone>
  nameWithType.vb: IEnumerable(Of HeartRateZone)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Health.ItemTypes.HeartRateZone)
  name.vb: IEnumerable(Of HeartRateZone)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.ItemTypes.HeartRateZone
    name: HeartRateZone
    nameWithType: HeartRateZone
    fullName: Microsoft.Health.ItemTypes.HeartRateZone
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.ItemTypes.HeartRateZone
    name: HeartRateZone
    nameWithType: HeartRateZone
    fullName: Microsoft.Health.ItemTypes.HeartRateZone
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.HealthRecordItemData
  isExternal: true
  name: ParseXml(XPathNavigator)
  nameWithType: HealthRecordItemData.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: HealthRecordItemData.ParseXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: HealthRecordItemData.ParseXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.HeartRateZoneGroup.ParseXml*
  commentId: Overload:Microsoft.Health.ItemTypes.HeartRateZoneGroup.ParseXml
  isExternal: false
  name: ParseXml
  nameWithType: HeartRateZoneGroup.ParseXml
  fullName: Microsoft.Health.ItemTypes.HeartRateZoneGroup.ParseXml
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.Xml.XPath.XPathNavigator
  commentId: T:System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: true
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: false
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: Microsoft.Health.ItemTypes.HeartRateZoneGroup.TargetZones
  commentId: P:Microsoft.Health.ItemTypes.HeartRateZoneGroup.TargetZones
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.HealthRecordItemData
  isExternal: true
  name: WriteXml(String, XmlWriter)
  nameWithType: HealthRecordItemData.WriteXml(String, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String, System.Xml.XmlWriter)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItemData.WriteXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItemData.WriteXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.HeartRateZoneGroup.WriteXml*
  commentId: Overload:Microsoft.Health.ItemTypes.HeartRateZoneGroup.WriteXml
  isExternal: false
  name: WriteXml
  nameWithType: HeartRateZoneGroup.WriteXml
  fullName: Microsoft.Health.ItemTypes.HeartRateZoneGroup.WriteXml
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: Microsoft.Health.HealthRecordItemSerializationException
  commentId: T:Microsoft.Health.HealthRecordItemSerializationException
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: Microsoft.Health.ItemTypes.HeartRateZoneGroup.Name*
  commentId: Overload:Microsoft.Health.ItemTypes.HeartRateZoneGroup.Name
  isExternal: false
  name: Name
  nameWithType: HeartRateZoneGroup.Name
  fullName: Microsoft.Health.ItemTypes.HeartRateZoneGroup.Name
- uid: Microsoft.Health.ItemTypes.HeartRateZoneGroup.TargetZones*
  commentId: Overload:Microsoft.Health.ItemTypes.HeartRateZoneGroup.TargetZones
  isExternal: false
  name: TargetZones
  nameWithType: HeartRateZoneGroup.TargetZones
  fullName: Microsoft.Health.ItemTypes.HeartRateZoneGroup.TargetZones
- uid: System.Collections.ObjectModel.Collection{Microsoft.Health.ItemTypes.HeartRateZone}
  commentId: T:System.Collections.ObjectModel.Collection{Microsoft.Health.ItemTypes.HeartRateZone}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<HeartRateZone>
  nameWithType: Collection<HeartRateZone>
  fullName: System.Collections.ObjectModel.Collection<Microsoft.Health.ItemTypes.HeartRateZone>
  nameWithType.vb: Collection(Of HeartRateZone)
  fullName.vb: System.Collections.ObjectModel.Collection(Of Microsoft.Health.ItemTypes.HeartRateZone)
  name.vb: Collection(Of HeartRateZone)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.ItemTypes.HeartRateZone
    name: HeartRateZone
    nameWithType: HeartRateZone
    fullName: Microsoft.Health.ItemTypes.HeartRateZone
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.ItemTypes.HeartRateZone
    name: HeartRateZone
    nameWithType: HeartRateZone
    fullName: Microsoft.Health.ItemTypes.HeartRateZone
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1
  commentId: T:System.Collections.ObjectModel.Collection`1
  isExternal: true
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  nameWithType.vb: Collection(Of T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T)
  name.vb: Collection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
