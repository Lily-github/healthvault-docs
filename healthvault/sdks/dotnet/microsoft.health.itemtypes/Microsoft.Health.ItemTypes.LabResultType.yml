### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.ItemTypes.LabResultType
  commentId: T:Microsoft.Health.ItemTypes.LabResultType
  id: LabResultType
  parent: Microsoft.Health.ItemTypes
  children:
  - Microsoft.Health.ItemTypes.LabResultType.#ctor
  - Microsoft.Health.ItemTypes.LabResultType.Flags
  - Microsoft.Health.ItemTypes.LabResultType.ParseXml(System.Xml.XPath.XPathNavigator)
  - Microsoft.Health.ItemTypes.LabResultType.ReferenceRange
  - Microsoft.Health.ItemTypes.LabResultType.TextValue
  - Microsoft.Health.ItemTypes.LabResultType.ToString
  - Microsoft.Health.ItemTypes.LabResultType.ToxicRange
  - Microsoft.Health.ItemTypes.LabResultType.Unit
  - Microsoft.Health.ItemTypes.LabResultType.Value
  - Microsoft.Health.ItemTypes.LabResultType.WriteXml(System.String,System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: LabResultType
  nameWithType: LabResultType
  fullName: Microsoft.Health.ItemTypes.LabResultType
  type: Class
  source:
    remote:
      path: Microsoft.Health.ItemTypes/LabResultType.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: LabResultType
    path: LabResultType.cs
    startLine: 20
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nRepresents a clinical value within lab result.\n"
  example: []
  syntax:
    content: 'public class LabResultType : HealthRecordItemData'
    content.vb: >-
      Public Class LabResultType
          Inherits HealthRecordItemData
  inheritance:
  - System.Object
  - Microsoft.Health.ItemTypes.HealthRecordItemData
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.ItemTypes.LabResultType.#ctor
  commentId: M:Microsoft.Health.ItemTypes.LabResultType.#ctor
  id: '#ctor'
  parent: Microsoft.Health.ItemTypes.LabResultType
  langs:
  - csharp
  - vb
  name: LabResultType()
  nameWithType: LabResultType.LabResultType()
  fullName: Microsoft.Health.ItemTypes.LabResultType.LabResultType()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/LabResultType.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: LabResultType.cs
    startLine: 27
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nConstructs a new instance of the <xref href=\"Microsoft.Health.ItemTypes.LabResultType\" data-throw-if-not-resolved=\"false\"></xref> class with \ndefault values.\n"
  example: []
  syntax:
    content: public LabResultType()
    content.vb: Public Sub New
  overload: Microsoft.Health.ItemTypes.LabResultType.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.LabResultType.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.LabResultType.ParseXml(System.Xml.XPath.XPathNavigator)
  id: ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.LabResultType
  langs:
  - csharp
  - vb
  name: ParseXml(XPathNavigator)
  nameWithType: LabResultType.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.LabResultType.ParseXml(System.Xml.XPath.XPathNavigator)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/LabResultType.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ParseXml
    path: LabResultType.cs
    startLine: 44
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nPopulates the data for the lab result type from the XML.\n"
  example: []
  syntax:
    content: public override void ParseXml(XPathNavigator navigator)
    content.vb: Public Overrides Sub ParseXml(navigator As XPathNavigator)
    parameters:
    - id: navigator
      type: System.Xml.XPath.XPathNavigator
      description: "\nThe XML node representing the lab result type.\n"
  overridden: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  overload: Microsoft.Health.ItemTypes.LabResultType.ParseXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">navigator</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.LabResultType.WriteXml(System.String,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.LabResultType.WriteXml(System.String,System.Xml.XmlWriter)
  id: WriteXml(System.String,System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.LabResultType
  langs:
  - csharp
  - vb
  name: WriteXml(String, XmlWriter)
  nameWithType: LabResultType.WriteXml(String, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.LabResultType.WriteXml(System.String, System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/LabResultType.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteXml
    path: LabResultType.cs
    startLine: 84
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nWrites the lab result type data to the specified XML writer.\n"
  example: []
  syntax:
    content: public override void WriteXml(string nodeName, XmlWriter writer)
    content.vb: Public Overrides Sub WriteXml(nodeName As String, writer As XmlWriter)
    parameters:
    - id: nodeName
      type: System.String
      description: "\nThe name of the outer element for the lab result type.\n"
    - id: writer
      type: System.Xml.XmlWriter
      description: "\nThe XmlWriter to write the lab result type to.\n"
  overridden: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  overload: Microsoft.Health.ItemTypes.LabResultType.WriteXml*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">nodeName</span> parameter is <strong>null</strong> or empty.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">writer</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.LabResultType.Value
  commentId: P:Microsoft.Health.ItemTypes.LabResultType.Value
  id: Value
  parent: Microsoft.Health.ItemTypes.LabResultType
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: LabResultType.Value
  fullName: Microsoft.Health.ItemTypes.LabResultType.Value
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/LabResultType.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Value
    path: LabResultType.cs
    startLine: 114
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the value for the lab result.\n"
  example: []
  syntax:
    content: public double ? Value { get; set; }
    content.vb: Public Property Value As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
      description: "\nA <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> representing the value of the lab result, or <strong>null</strong> if\nno lab result is available.\n"
  overload: Microsoft.Health.ItemTypes.LabResultType.Value*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.LabResultType.Unit
  commentId: P:Microsoft.Health.ItemTypes.LabResultType.Unit
  id: Unit
  parent: Microsoft.Health.ItemTypes.LabResultType
  langs:
  - csharp
  - vb
  name: Unit
  nameWithType: LabResultType.Unit
  fullName: Microsoft.Health.ItemTypes.LabResultType.Unit
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/LabResultType.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Unit
    path: LabResultType.cs
    startLine: 130
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the unit of measure for the <xref href=\"Microsoft.Health.ItemTypes.LabResultType.Value\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThe unit of measure may defined by the HealthVault dictionary or the \n<xref href=\"Microsoft.Health.ItemTypes.CodableValue.Text\" data-throw-if-not-resolved=\"false\"></xref> property may be set to any unit of measure.\n"
  example: []
  syntax:
    content: public CodableValue Unit { get; set; }
    content.vb: Public Property Unit As CodableValue
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.CodableValue
  overload: Microsoft.Health.ItemTypes.LabResultType.Unit*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.LabResultType.ReferenceRange
  commentId: P:Microsoft.Health.ItemTypes.LabResultType.ReferenceRange
  id: ReferenceRange
  parent: Microsoft.Health.ItemTypes.LabResultType
  langs:
  - csharp
  - vb
  name: ReferenceRange
  nameWithType: LabResultType.ReferenceRange
  fullName: Microsoft.Health.ItemTypes.LabResultType.ReferenceRange
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/LabResultType.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ReferenceRange
    path: LabResultType.cs
    startLine: 146
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the reference range for the lab result type.\n"
  example: []
  syntax:
    content: public DoubleRange ReferenceRange { get; set; }
    content.vb: Public Property ReferenceRange As DoubleRange
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.DoubleRange
      description: "\nThe \"normal\" range of values for this lab result type or <strong>null</strong> if the reference\nrange is not available.\n"
  overload: Microsoft.Health.ItemTypes.LabResultType.ReferenceRange*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.LabResultType.ToxicRange
  commentId: P:Microsoft.Health.ItemTypes.LabResultType.ToxicRange
  id: ToxicRange
  parent: Microsoft.Health.ItemTypes.LabResultType
  langs:
  - csharp
  - vb
  name: ToxicRange
  nameWithType: LabResultType.ToxicRange
  fullName: Microsoft.Health.ItemTypes.LabResultType.ToxicRange
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/LabResultType.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ToxicRange
    path: LabResultType.cs
    startLine: 162
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the toxic range for the lab result type.\n"
  example: []
  syntax:
    content: public DoubleRange ToxicRange { get; set; }
    content.vb: Public Property ToxicRange As DoubleRange
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.DoubleRange
      description: "\nThe toxic range of values for this lab result type or <strong>null</strong> if the toxic\nrange is not available.\n"
  overload: Microsoft.Health.ItemTypes.LabResultType.ToxicRange*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.LabResultType.TextValue
  commentId: P:Microsoft.Health.ItemTypes.LabResultType.TextValue
  id: TextValue
  parent: Microsoft.Health.ItemTypes.LabResultType
  langs:
  - csharp
  - vb
  name: TextValue
  nameWithType: LabResultType.TextValue
  fullName: Microsoft.Health.ItemTypes.LabResultType.TextValue
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/LabResultType.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: TextValue
    path: LabResultType.cs
    startLine: 182
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or set the text representation of the value.\n"
  example: []
  syntax:
    content: public string TextValue { get; set; }
    content.vb: Public Property TextValue As String
    parameters: []
    return:
      type: System.String
      description: "\nA string representation of the <xref href=\"Microsoft.Health.ItemTypes.LabResultType.Value\" data-throw-if-not-resolved=\"false\"></xref> or <strong>null</strong> if the text value is\nnot available.\n"
  overload: Microsoft.Health.ItemTypes.LabResultType.TextValue*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nIf <span class=\"paramref\">value</span> contains only whitespace.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.LabResultType.Flags
  commentId: P:Microsoft.Health.ItemTypes.LabResultType.Flags
  id: Flags
  parent: Microsoft.Health.ItemTypes.LabResultType
  langs:
  - csharp
  - vb
  name: Flags
  nameWithType: LabResultType.Flags
  fullName: Microsoft.Health.ItemTypes.LabResultType.Flags
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/LabResultType.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Flags
    path: LabResultType.cs
    startLine: 202
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets a collection of the flags associated with the lab result type.\n"
  example: []
  syntax:
    content: public Collection<CodableValue> Flags { get; }
    content.vb: Public ReadOnly Property Flags As Collection(Of CodableValue)
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{Microsoft.Health.ItemTypes.CodableValue}
      description: "\nThe flags for the lab result type are generally values like \"normal\", \"critical\", \"high\",\n\"low\", etc. which are defined by the \"lab-result-flag\" HealthVault vocabulary.\n"
  overload: Microsoft.Health.ItemTypes.LabResultType.Flags*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.ItemTypes.LabResultType.ToString
  commentId: M:Microsoft.Health.ItemTypes.LabResultType.ToString
  id: ToString
  parent: Microsoft.Health.ItemTypes.LabResultType
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: LabResultType.ToString()
  fullName: Microsoft.Health.ItemTypes.LabResultType.ToString()
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/LabResultType.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ToString
    path: LabResultType.cs
    startLine: 216
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets a string representation of the lab result type.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\nA string representing the lab result type.\n"
  overridden: System.Object.ToString
  overload: Microsoft.Health.ItemTypes.LabResultType.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Health.ItemTypes
  commentId: N:Microsoft.Health.ItemTypes
  isExternal: false
  name: Microsoft.Health.ItemTypes
  nameWithType: Microsoft.Health.ItemTypes
  fullName: Microsoft.Health.ItemTypes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData
  commentId: T:Microsoft.Health.ItemTypes.HealthRecordItemData
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: HealthRecordItemData
  nameWithType: HealthRecordItemData
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.ItemTypes.LabResultType
  commentId: T:Microsoft.Health.ItemTypes.LabResultType
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: LabResultType
  nameWithType: LabResultType
  fullName: Microsoft.Health.ItemTypes.LabResultType
- uid: Microsoft.Health.ItemTypes.LabResultType.#ctor*
  commentId: Overload:Microsoft.Health.ItemTypes.LabResultType.#ctor
  isExternal: false
  name: LabResultType
  nameWithType: LabResultType.LabResultType
  fullName: Microsoft.Health.ItemTypes.LabResultType.LabResultType
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.HealthRecordItemData
  isExternal: true
  name: ParseXml(XPathNavigator)
  nameWithType: HealthRecordItemData.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: HealthRecordItemData.ParseXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: HealthRecordItemData.ParseXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.LabResultType.ParseXml*
  commentId: Overload:Microsoft.Health.ItemTypes.LabResultType.ParseXml
  isExternal: false
  name: ParseXml
  nameWithType: LabResultType.ParseXml
  fullName: Microsoft.Health.ItemTypes.LabResultType.ParseXml
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.Xml.XPath.XPathNavigator
  commentId: T:System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: true
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: false
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.HealthRecordItemData
  isExternal: true
  name: WriteXml(String, XmlWriter)
  nameWithType: HealthRecordItemData.WriteXml(String, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String, System.Xml.XmlWriter)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItemData.WriteXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItemData.WriteXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.LabResultType.WriteXml*
  commentId: Overload:Microsoft.Health.ItemTypes.LabResultType.WriteXml
  isExternal: false
  name: WriteXml
  nameWithType: LabResultType.WriteXml
  fullName: Microsoft.Health.ItemTypes.LabResultType.WriteXml
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Microsoft.Health.ItemTypes.LabResultType.Value*
  commentId: Overload:Microsoft.Health.ItemTypes.LabResultType.Value
  isExternal: false
  name: Value
  nameWithType: LabResultType.Value
  fullName: Microsoft.Health.ItemTypes.LabResultType.Value
- uid: System.Nullable{System.Double}
  commentId: T:System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  nameWithType.vb: Nullable(Of Double)
  fullName.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.LabResultType.Value
  commentId: P:Microsoft.Health.ItemTypes.LabResultType.Value
- uid: Microsoft.Health.ItemTypes.CodableValue.Text
  commentId: P:Microsoft.Health.ItemTypes.CodableValue.Text
- uid: Microsoft.Health.ItemTypes.LabResultType.Unit*
  commentId: Overload:Microsoft.Health.ItemTypes.LabResultType.Unit
  isExternal: false
  name: Unit
  nameWithType: LabResultType.Unit
  fullName: Microsoft.Health.ItemTypes.LabResultType.Unit
- uid: Microsoft.Health.ItemTypes.CodableValue
  commentId: T:Microsoft.Health.ItemTypes.CodableValue
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: CodableValue
  nameWithType: CodableValue
  fullName: Microsoft.Health.ItemTypes.CodableValue
- uid: Microsoft.Health.ItemTypes.LabResultType.ReferenceRange*
  commentId: Overload:Microsoft.Health.ItemTypes.LabResultType.ReferenceRange
  isExternal: false
  name: ReferenceRange
  nameWithType: LabResultType.ReferenceRange
  fullName: Microsoft.Health.ItemTypes.LabResultType.ReferenceRange
- uid: Microsoft.Health.ItemTypes.DoubleRange
  commentId: T:Microsoft.Health.ItemTypes.DoubleRange
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: DoubleRange
  nameWithType: DoubleRange
  fullName: Microsoft.Health.ItemTypes.DoubleRange
- uid: Microsoft.Health.ItemTypes.LabResultType.ToxicRange*
  commentId: Overload:Microsoft.Health.ItemTypes.LabResultType.ToxicRange
  isExternal: false
  name: ToxicRange
  nameWithType: LabResultType.ToxicRange
  fullName: Microsoft.Health.ItemTypes.LabResultType.ToxicRange
- uid: Microsoft.Health.ItemTypes.LabResultType.TextValue*
  commentId: Overload:Microsoft.Health.ItemTypes.LabResultType.TextValue
  isExternal: false
  name: TextValue
  nameWithType: LabResultType.TextValue
  fullName: Microsoft.Health.ItemTypes.LabResultType.TextValue
- uid: Microsoft.Health.ItemTypes.LabResultType.Flags*
  commentId: Overload:Microsoft.Health.ItemTypes.LabResultType.Flags
  isExternal: false
  name: Flags
  nameWithType: LabResultType.Flags
  fullName: Microsoft.Health.ItemTypes.LabResultType.Flags
- uid: System.Collections.ObjectModel.Collection{Microsoft.Health.ItemTypes.CodableValue}
  commentId: T:System.Collections.ObjectModel.Collection{Microsoft.Health.ItemTypes.CodableValue}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<CodableValue>
  nameWithType: Collection<CodableValue>
  fullName: System.Collections.ObjectModel.Collection<Microsoft.Health.ItemTypes.CodableValue>
  nameWithType.vb: Collection(Of CodableValue)
  fullName.vb: System.Collections.ObjectModel.Collection(Of Microsoft.Health.ItemTypes.CodableValue)
  name.vb: Collection(Of CodableValue)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.ItemTypes.CodableValue
    name: CodableValue
    nameWithType: CodableValue
    fullName: Microsoft.Health.ItemTypes.CodableValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.ItemTypes.CodableValue
    name: CodableValue
    nameWithType: CodableValue
    fullName: Microsoft.Health.ItemTypes.CodableValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1
  commentId: T:System.Collections.ObjectModel.Collection`1
  isExternal: true
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  nameWithType.vb: Collection(Of T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T)
  name.vb: Collection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.LabResultType.ToString*
  commentId: Overload:Microsoft.Health.ItemTypes.LabResultType.ToString
  isExternal: false
  name: ToString
  nameWithType: LabResultType.ToString
  fullName: Microsoft.Health.ItemTypes.LabResultType.ToString
