### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.ItemTypes.LabTestType
  commentId: T:Microsoft.Health.ItemTypes.LabTestType
  id: LabTestType
  parent: Microsoft.Health.ItemTypes
  children:
  - Microsoft.Health.ItemTypes.LabTestType.#ctor
  - Microsoft.Health.ItemTypes.LabTestType.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime)
  - Microsoft.Health.ItemTypes.LabTestType.Code
  - Microsoft.Health.ItemTypes.LabTestType.CollectionMethod
  - Microsoft.Health.ItemTypes.LabTestType.Description
  - Microsoft.Health.ItemTypes.LabTestType.Name
  - Microsoft.Health.ItemTypes.LabTestType.ParseXml(System.Xml.XPath.XPathNavigator)
  - Microsoft.Health.ItemTypes.LabTestType.Result
  - Microsoft.Health.ItemTypes.LabTestType.Status
  - Microsoft.Health.ItemTypes.LabTestType.Substance
  - Microsoft.Health.ItemTypes.LabTestType.TestAbbreviation
  - Microsoft.Health.ItemTypes.LabTestType.ToString
  - Microsoft.Health.ItemTypes.LabTestType.When
  - Microsoft.Health.ItemTypes.LabTestType.WriteXml(System.String,System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: LabTestType
  nameWithType: LabTestType
  fullName: Microsoft.Health.ItemTypes.LabTestType
  type: Class
  source:
    remote:
      path: Microsoft.Health.ItemTypes/LabTestType.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: LabTestType
    path: LabTestType.cs
    startLine: 20
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nRepresents a lab test component, including the lab result value.\n"
  example: []
  syntax:
    content: 'public class LabTestType : HealthRecordItemData'
    content.vb: >-
      Public Class LabTestType
          Inherits HealthRecordItemData
  inheritance:
  - System.Object
  - Microsoft.Health.ItemTypes.HealthRecordItemData
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.ItemTypes.LabTestType.#ctor
  commentId: M:Microsoft.Health.ItemTypes.LabTestType.#ctor
  id: '#ctor'
  parent: Microsoft.Health.ItemTypes.LabTestType
  langs:
  - csharp
  - vb
  name: LabTestType()
  nameWithType: LabTestType.LabTestType()
  fullName: Microsoft.Health.ItemTypes.LabTestType.LabTestType()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/LabTestType.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: LabTestType.cs
    startLine: 27
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nConstructs a new instance of the <xref href=\"Microsoft.Health.ItemTypes.LabTestType\" data-throw-if-not-resolved=\"false\"></xref> class with \ndefault values.\n"
  example: []
  syntax:
    content: public LabTestType()
    content.vb: Public Sub New
  overload: Microsoft.Health.ItemTypes.LabTestType.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.LabTestType.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime)
  commentId: M:Microsoft.Health.ItemTypes.LabTestType.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime)
  id: '#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime)'
  parent: Microsoft.Health.ItemTypes.LabTestType
  langs:
  - csharp
  - vb
  name: LabTestType(HealthServiceDateTime)
  nameWithType: LabTestType.LabTestType(HealthServiceDateTime)
  fullName: Microsoft.Health.ItemTypes.LabTestType.LabTestType(Microsoft.Health.ItemTypes.HealthServiceDateTime)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/LabTestType.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: LabTestType.cs
    startLine: 41
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nConstructs a new instance of the <xref href=\"Microsoft.Health.ItemTypes.LabTestType\" data-throw-if-not-resolved=\"false\"></xref> with the specified test\ndate.\n"
  example: []
  syntax:
    content: public LabTestType(HealthServiceDateTime when)
    content.vb: Public Sub New(when As HealthServiceDateTime)
    parameters:
    - id: when
      type: Microsoft.Health.ItemTypes.HealthServiceDateTime
      description: "\nThe date and time when the laboratory test was performed.\n"
  overload: Microsoft.Health.ItemTypes.LabTestType.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.LabTestType.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.LabTestType.ParseXml(System.Xml.XPath.XPathNavigator)
  id: ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.LabTestType
  langs:
  - csharp
  - vb
  name: ParseXml(XPathNavigator)
  nameWithType: LabTestType.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.LabTestType.ParseXml(System.Xml.XPath.XPathNavigator)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/LabTestType.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ParseXml
    path: LabTestType.cs
    startLine: 58
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nPopulates the data for the lab test type from the XML.\n"
  example: []
  syntax:
    content: public override void ParseXml(XPathNavigator navigator)
    content.vb: Public Overrides Sub ParseXml(navigator As XPathNavigator)
    parameters:
    - id: navigator
      type: System.Xml.XPath.XPathNavigator
      description: "\nThe XML node representing the lab test type.\n"
  overridden: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  overload: Microsoft.Health.ItemTypes.LabTestType.ParseXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">navigator</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.LabTestType.WriteXml(System.String,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.LabTestType.WriteXml(System.String,System.Xml.XmlWriter)
  id: WriteXml(System.String,System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.LabTestType
  langs:
  - csharp
  - vb
  name: WriteXml(String, XmlWriter)
  nameWithType: LabTestType.WriteXml(String, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.LabTestType.WriteXml(System.String, System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/LabTestType.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteXml
    path: LabTestType.cs
    startLine: 109
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nWrites the lab test type data to the specified XML writer.\n"
  example: []
  syntax:
    content: public override void WriteXml(string nodeName, XmlWriter writer)
    content.vb: Public Overrides Sub WriteXml(nodeName As String, writer As XmlWriter)
    parameters:
    - id: nodeName
      type: System.String
      description: "\nThe name of the outer element for the lab test type.\n"
    - id: writer
      type: System.Xml.XmlWriter
      description: "\nThe XmlWriter to write the lab test type to.\n"
  overridden: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  overload: Microsoft.Health.ItemTypes.LabTestType.WriteXml*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">nodeName</span> parameter is <strong>null</strong> or empty.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">writer</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.LabTestType.When
  commentId: P:Microsoft.Health.ItemTypes.LabTestType.When
  id: When
  parent: Microsoft.Health.ItemTypes.LabTestType
  langs:
  - csharp
  - vb
  name: When
  nameWithType: LabTestType.When
  fullName: Microsoft.Health.ItemTypes.LabTestType.When
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/LabTestType.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: When
    path: LabTestType.cs
    startLine: 149
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the date when the lab test was conducted.\n"
  example: []
  syntax:
    content: public HealthServiceDateTime When { get; set; }
    content.vb: Public Property When As HealthServiceDateTime
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.HealthServiceDateTime
      description: "\nA <xref href=\"Microsoft.Health.ItemTypes.HealthServiceDateTime\" data-throw-if-not-resolved=\"false\"></xref> instance representing \nthe date and time. The default value is the current year, month, and day.\n"
  overload: Microsoft.Health.ItemTypes.LabTestType.When*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">value</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.LabTestType.Name
  commentId: P:Microsoft.Health.ItemTypes.LabTestType.Name
  id: Name
  parent: Microsoft.Health.ItemTypes.LabTestType
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: LabTestType.Name
  fullName: Microsoft.Health.ItemTypes.LabTestType.Name
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/LabTestType.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Name
    path: LabTestType.cs
    startLine: 168
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the name of the test.\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.ItemTypes.LabTestType.Name*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nIf <span class=\"paramref\">value</span> contains only whitespace.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.LabTestType.Substance
  commentId: P:Microsoft.Health.ItemTypes.LabTestType.Substance
  id: Substance
  parent: Microsoft.Health.ItemTypes.LabTestType
  langs:
  - csharp
  - vb
  name: Substance
  nameWithType: LabTestType.Substance
  fullName: Microsoft.Health.ItemTypes.LabTestType.Substance
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/LabTestType.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Substance
    path: LabTestType.cs
    startLine: 183
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the substance that was tested.\n"
  example: []
  syntax:
    content: public CodableValue Substance { get; set; }
    content.vb: Public Property Substance As CodableValue
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.CodableValue
  overload: Microsoft.Health.ItemTypes.LabTestType.Substance*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.LabTestType.CollectionMethod
  commentId: P:Microsoft.Health.ItemTypes.LabTestType.CollectionMethod
  id: CollectionMethod
  parent: Microsoft.Health.ItemTypes.LabTestType
  langs:
  - csharp
  - vb
  name: CollectionMethod
  nameWithType: LabTestType.CollectionMethod
  fullName: Microsoft.Health.ItemTypes.LabTestType.CollectionMethod
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/LabTestType.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CollectionMethod
    path: LabTestType.cs
    startLine: 194
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the method used to collect the substance.\n"
  example: []
  syntax:
    content: public CodableValue CollectionMethod { get; set; }
    content.vb: Public Property CollectionMethod As CodableValue
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.CodableValue
  overload: Microsoft.Health.ItemTypes.LabTestType.CollectionMethod*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.LabTestType.TestAbbreviation
  commentId: P:Microsoft.Health.ItemTypes.LabTestType.TestAbbreviation
  id: TestAbbreviation
  parent: Microsoft.Health.ItemTypes.LabTestType
  langs:
  - csharp
  - vb
  name: TestAbbreviation
  nameWithType: LabTestType.TestAbbreviation
  fullName: Microsoft.Health.ItemTypes.LabTestType.TestAbbreviation
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/LabTestType.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: TestAbbreviation
    path: LabTestType.cs
    startLine: 209
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the abbreviation for the test.\n"
  example: []
  syntax:
    content: public string TestAbbreviation { get; set; }
    content.vb: Public Property TestAbbreviation As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.ItemTypes.LabTestType.TestAbbreviation*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nIf <span class=\"paramref\">value</span> contains only whitespace.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.LabTestType.Description
  commentId: P:Microsoft.Health.ItemTypes.LabTestType.Description
  id: Description
  parent: Microsoft.Health.ItemTypes.LabTestType
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: LabTestType.Description
  fullName: Microsoft.Health.ItemTypes.LabTestType.Description
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/LabTestType.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Description
    path: LabTestType.cs
    startLine: 228
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the description for the test.\n"
  example: []
  syntax:
    content: public string Description { get; set; }
    content.vb: Public Property Description As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.ItemTypes.LabTestType.Description*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nIf <span class=\"paramref\">value</span> contains only whitespace.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.LabTestType.Code
  commentId: P:Microsoft.Health.ItemTypes.LabTestType.Code
  id: Code
  parent: Microsoft.Health.ItemTypes.LabTestType
  langs:
  - csharp
  - vb
  name: Code
  nameWithType: LabTestType.Code
  fullName: Microsoft.Health.ItemTypes.LabTestType.Code
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/LabTestType.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Code
    path: LabTestType.cs
    startLine: 244
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets a collection of the clinical code(s) used for the test.\n"
  example: []
  syntax:
    content: public Collection<CodableValue> Code { get; }
    content.vb: Public ReadOnly Property Code As Collection(Of CodableValue)
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{Microsoft.Health.ItemTypes.CodableValue}
  overload: Microsoft.Health.ItemTypes.LabTestType.Code*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.ItemTypes.LabTestType.Result
  commentId: P:Microsoft.Health.ItemTypes.LabTestType.Result
  id: Result
  parent: Microsoft.Health.ItemTypes.LabTestType
  langs:
  - csharp
  - vb
  name: Result
  nameWithType: LabTestType.Result
  fullName: Microsoft.Health.ItemTypes.LabTestType.Result
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/LabTestType.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Result
    path: LabTestType.cs
    startLine: 254
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the result of the lab test.\n"
  example: []
  syntax:
    content: public LabResultType Result { get; set; }
    content.vb: Public Property Result As LabResultType
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.LabResultType
  overload: Microsoft.Health.ItemTypes.LabTestType.Result*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.LabTestType.Status
  commentId: P:Microsoft.Health.ItemTypes.LabTestType.Status
  id: Status
  parent: Microsoft.Health.ItemTypes.LabTestType
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: LabTestType.Status
  fullName: Microsoft.Health.ItemTypes.LabTestType.Status
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/LabTestType.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Status
    path: LabTestType.cs
    startLine: 271
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the status of the lab results.\n"
  example: []
  syntax:
    content: public CodableValue Status { get; set; }
    content.vb: Public Property Status As CodableValue
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.CodableValue
      description: "\nA CodableValue representing the status of the lab results. For example, \"completed\" or\n\"pending\". These values can be found in the \"lab-results-status\" HealthVault vocabulary.\n"
  overload: Microsoft.Health.ItemTypes.LabTestType.Status*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.LabTestType.ToString
  commentId: M:Microsoft.Health.ItemTypes.LabTestType.ToString
  id: ToString
  parent: Microsoft.Health.ItemTypes.LabTestType
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: LabTestType.ToString()
  fullName: Microsoft.Health.ItemTypes.LabTestType.ToString()
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/LabTestType.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ToString
    path: LabTestType.cs
    startLine: 286
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets a string representation of the lab test type.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\nA string representing the lab test type.\n"
  overridden: System.Object.ToString
  overload: Microsoft.Health.ItemTypes.LabTestType.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Health.ItemTypes
  commentId: N:Microsoft.Health.ItemTypes
  isExternal: false
  name: Microsoft.Health.ItemTypes
  nameWithType: Microsoft.Health.ItemTypes
  fullName: Microsoft.Health.ItemTypes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData
  commentId: T:Microsoft.Health.ItemTypes.HealthRecordItemData
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: HealthRecordItemData
  nameWithType: HealthRecordItemData
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.ItemTypes.LabTestType
  commentId: T:Microsoft.Health.ItemTypes.LabTestType
  isExternal: false
  name: LabTestType
  nameWithType: LabTestType
  fullName: Microsoft.Health.ItemTypes.LabTestType
- uid: Microsoft.Health.ItemTypes.LabTestType.#ctor*
  commentId: Overload:Microsoft.Health.ItemTypes.LabTestType.#ctor
  isExternal: false
  name: LabTestType
  nameWithType: LabTestType.LabTestType
  fullName: Microsoft.Health.ItemTypes.LabTestType.LabTestType
- uid: Microsoft.Health.ItemTypes.HealthServiceDateTime
  commentId: T:Microsoft.Health.ItemTypes.HealthServiceDateTime
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: HealthServiceDateTime
  nameWithType: HealthServiceDateTime
  fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.HealthRecordItemData
  isExternal: true
  name: ParseXml(XPathNavigator)
  nameWithType: HealthRecordItemData.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: HealthRecordItemData.ParseXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: HealthRecordItemData.ParseXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.LabTestType.ParseXml*
  commentId: Overload:Microsoft.Health.ItemTypes.LabTestType.ParseXml
  isExternal: false
  name: ParseXml
  nameWithType: LabTestType.ParseXml
  fullName: Microsoft.Health.ItemTypes.LabTestType.ParseXml
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.Xml.XPath.XPathNavigator
  commentId: T:System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: true
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: false
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.HealthRecordItemData
  isExternal: true
  name: WriteXml(String, XmlWriter)
  nameWithType: HealthRecordItemData.WriteXml(String, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String, System.Xml.XmlWriter)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItemData.WriteXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItemData.WriteXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.LabTestType.WriteXml*
  commentId: Overload:Microsoft.Health.ItemTypes.LabTestType.WriteXml
  isExternal: false
  name: WriteXml
  nameWithType: LabTestType.WriteXml
  fullName: Microsoft.Health.ItemTypes.LabTestType.WriteXml
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: Microsoft.Health.ItemTypes.LabTestType.When*
  commentId: Overload:Microsoft.Health.ItemTypes.LabTestType.When
  isExternal: false
  name: When
  nameWithType: LabTestType.When
  fullName: Microsoft.Health.ItemTypes.LabTestType.When
- uid: Microsoft.Health.ItemTypes.LabTestType.Name*
  commentId: Overload:Microsoft.Health.ItemTypes.LabTestType.Name
  isExternal: false
  name: Name
  nameWithType: LabTestType.Name
  fullName: Microsoft.Health.ItemTypes.LabTestType.Name
- uid: Microsoft.Health.ItemTypes.LabTestType.Substance*
  commentId: Overload:Microsoft.Health.ItemTypes.LabTestType.Substance
  isExternal: false
  name: Substance
  nameWithType: LabTestType.Substance
  fullName: Microsoft.Health.ItemTypes.LabTestType.Substance
- uid: Microsoft.Health.ItemTypes.CodableValue
  commentId: T:Microsoft.Health.ItemTypes.CodableValue
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: CodableValue
  nameWithType: CodableValue
  fullName: Microsoft.Health.ItemTypes.CodableValue
- uid: Microsoft.Health.ItemTypes.LabTestType.CollectionMethod*
  commentId: Overload:Microsoft.Health.ItemTypes.LabTestType.CollectionMethod
  isExternal: false
  name: CollectionMethod
  nameWithType: LabTestType.CollectionMethod
  fullName: Microsoft.Health.ItemTypes.LabTestType.CollectionMethod
- uid: Microsoft.Health.ItemTypes.LabTestType.TestAbbreviation*
  commentId: Overload:Microsoft.Health.ItemTypes.LabTestType.TestAbbreviation
  isExternal: false
  name: TestAbbreviation
  nameWithType: LabTestType.TestAbbreviation
  fullName: Microsoft.Health.ItemTypes.LabTestType.TestAbbreviation
- uid: Microsoft.Health.ItemTypes.LabTestType.Description*
  commentId: Overload:Microsoft.Health.ItemTypes.LabTestType.Description
  isExternal: false
  name: Description
  nameWithType: LabTestType.Description
  fullName: Microsoft.Health.ItemTypes.LabTestType.Description
- uid: Microsoft.Health.ItemTypes.LabTestType.Code*
  commentId: Overload:Microsoft.Health.ItemTypes.LabTestType.Code
  isExternal: false
  name: Code
  nameWithType: LabTestType.Code
  fullName: Microsoft.Health.ItemTypes.LabTestType.Code
- uid: System.Collections.ObjectModel.Collection{Microsoft.Health.ItemTypes.CodableValue}
  commentId: T:System.Collections.ObjectModel.Collection{Microsoft.Health.ItemTypes.CodableValue}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<CodableValue>
  nameWithType: Collection<CodableValue>
  fullName: System.Collections.ObjectModel.Collection<Microsoft.Health.ItemTypes.CodableValue>
  nameWithType.vb: Collection(Of CodableValue)
  fullName.vb: System.Collections.ObjectModel.Collection(Of Microsoft.Health.ItemTypes.CodableValue)
  name.vb: Collection(Of CodableValue)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.ItemTypes.CodableValue
    name: CodableValue
    nameWithType: CodableValue
    fullName: Microsoft.Health.ItemTypes.CodableValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.ItemTypes.CodableValue
    name: CodableValue
    nameWithType: CodableValue
    fullName: Microsoft.Health.ItemTypes.CodableValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1
  commentId: T:System.Collections.ObjectModel.Collection`1
  isExternal: true
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  nameWithType.vb: Collection(Of T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T)
  name.vb: Collection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: Microsoft.Health.ItemTypes.LabTestType.Result*
  commentId: Overload:Microsoft.Health.ItemTypes.LabTestType.Result
  isExternal: false
  name: Result
  nameWithType: LabTestType.Result
  fullName: Microsoft.Health.ItemTypes.LabTestType.Result
- uid: Microsoft.Health.ItemTypes.LabResultType
  commentId: T:Microsoft.Health.ItemTypes.LabResultType
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: LabResultType
  nameWithType: LabResultType
  fullName: Microsoft.Health.ItemTypes.LabResultType
- uid: Microsoft.Health.ItemTypes.LabTestType.Status*
  commentId: Overload:Microsoft.Health.ItemTypes.LabTestType.Status
  isExternal: false
  name: Status
  nameWithType: LabTestType.Status
  fullName: Microsoft.Health.ItemTypes.LabTestType.Status
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.LabTestType.ToString*
  commentId: Overload:Microsoft.Health.ItemTypes.LabTestType.ToString
  isExternal: false
  name: ToString
  nameWithType: LabTestType.ToString
  fullName: Microsoft.Health.ItemTypes.LabTestType.ToString
