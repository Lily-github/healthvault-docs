### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.ItemTypes.CarePlanTaskRecurrence
  commentId: T:Microsoft.Health.ItemTypes.CarePlanTaskRecurrence
  id: CarePlanTaskRecurrence
  parent: Microsoft.Health.ItemTypes
  children:
  - Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.#ctor
  - Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.IcalRecurrence
  - Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.Interval
  - Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.ParseXml(System.Xml.XPath.XPathNavigator)
  - Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.TimesInInterval
  - Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.ToString
  - Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.WriteXml(System.String,System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: CarePlanTaskRecurrence
  nameWithType: CarePlanTaskRecurrence
  fullName: Microsoft.Health.ItemTypes.CarePlanTaskRecurrence
  type: Class
  source:
    remote:
      path: Microsoft.Health.ItemTypes/CarePlanTaskRecurrence.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CarePlanTaskRecurrence
    path: CarePlanTaskRecurrence.cs
    startLine: 23
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCare plan task recurrence representation.\n"
  remarks: "\nFor recurrence rules that cannot be expressed using iCalendar recurrence format, use interval and times-in-interval fields. Ex: Two times in a week.\n"
  example: []
  syntax:
    content: 'public class CarePlanTaskRecurrence : HealthRecordItemData'
    content.vb: >-
      Public Class CarePlanTaskRecurrence
          Inherits HealthRecordItemData
  inheritance:
  - System.Object
  - Microsoft.Health.ItemTypes.HealthRecordItemData
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.#ctor
  commentId: M:Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.#ctor
  id: '#ctor'
  parent: Microsoft.Health.ItemTypes.CarePlanTaskRecurrence
  langs:
  - csharp
  - vb
  name: CarePlanTaskRecurrence()
  nameWithType: CarePlanTaskRecurrence.CarePlanTaskRecurrence()
  fullName: Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.CarePlanTaskRecurrence()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/CarePlanTaskRecurrence.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: CarePlanTaskRecurrence.cs
    startLine: 29
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.CarePlanTaskRecurrence\" data-throw-if-not-resolved=\"false\"></xref> class with default values.\n"
  example: []
  syntax:
    content: public CarePlanTaskRecurrence()
    content.vb: Public Sub New
  overload: Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.ParseXml(System.Xml.XPath.XPathNavigator)
  id: ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.CarePlanTaskRecurrence
  langs:
  - csharp
  - vb
  name: ParseXml(XPathNavigator)
  nameWithType: CarePlanTaskRecurrence.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.ParseXml(System.Xml.XPath.XPathNavigator)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/CarePlanTaskRecurrence.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ParseXml
    path: CarePlanTaskRecurrence.cs
    startLine: 45
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nPopulates this <xref href=\"Microsoft.Health.ItemTypes.CarePlanTaskRecurrence\" data-throw-if-not-resolved=\"false\"></xref> instance from the data in the specified XML.\n"
  example: []
  syntax:
    content: public override void ParseXml(XPathNavigator navigator)
    content.vb: Public Overrides Sub ParseXml(navigator As XPathNavigator)
    parameters:
    - id: navigator
      type: System.Xml.XPath.XPathNavigator
      description: "\nThe XML to get the CarePlanTaskRecurrence data from.\n"
  overridden: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  overload: Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.ParseXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nIf <span class=\"paramref\">navigator</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.WriteXml(System.String,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.WriteXml(System.String,System.Xml.XmlWriter)
  id: WriteXml(System.String,System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.CarePlanTaskRecurrence
  langs:
  - csharp
  - vb
  name: WriteXml(String, XmlWriter)
  nameWithType: CarePlanTaskRecurrence.WriteXml(String, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.WriteXml(System.String, System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/CarePlanTaskRecurrence.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteXml
    path: CarePlanTaskRecurrence.cs
    startLine: 76
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nWrites the XML representation of the CarePlanTaskRecurrence into\nthe specified XML writer.\n"
  example: []
  syntax:
    content: public override void WriteXml(string nodeName, XmlWriter writer)
    content.vb: Public Overrides Sub WriteXml(nodeName As String, writer As XmlWriter)
    parameters:
    - id: nodeName
      type: System.String
      description: "\nThe name of the outer node for the medical image study series.\n"
    - id: writer
      type: System.Xml.XmlWriter
      description: "\nThe XML writer into which the CarePlanTaskRecurrence should be\nwritten.\n"
  overridden: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  overload: Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.WriteXml*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nIf <span class=\"paramref\">nodeName</span> parameter is <strong>null</strong> or empty.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nIf <span class=\"paramref\">writer</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.IcalRecurrence
  commentId: P:Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.IcalRecurrence
  id: IcalRecurrence
  parent: Microsoft.Health.ItemTypes.CarePlanTaskRecurrence
  langs:
  - csharp
  - vb
  name: IcalRecurrence
  nameWithType: CarePlanTaskRecurrence.IcalRecurrence
  fullName: Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.IcalRecurrence
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/CarePlanTaskRecurrence.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: IcalRecurrence
    path: CarePlanTaskRecurrence.cs
    startLine: 103
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the ical-recurrence\n"
  remarks: "\nUses the iCalendar format for recurrence specification as per RFC 2445, Section 4.3.10.\n"
  example: []
  syntax:
    content: public string IcalRecurrence { get; set; }
    content.vb: Public Property IcalRecurrence As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.IcalRecurrence*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.Interval
  commentId: P:Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.Interval
  id: Interval
  parent: Microsoft.Health.ItemTypes.CarePlanTaskRecurrence
  langs:
  - csharp
  - vb
  name: Interval
  nameWithType: CarePlanTaskRecurrence.Interval
  fullName: Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.Interval
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/CarePlanTaskRecurrence.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Interval
    path: CarePlanTaskRecurrence.cs
    startLine: 130
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the recurrence interval.\n"
  remarks: "\nFor example: day, month, year.\n"
  example: []
  syntax:
    content: public CodableValue Interval { get; set; }
    content.vb: Public Property Interval As CodableValue
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.CodableValue
  overload: Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.Interval*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.TimesInInterval
  commentId: P:Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.TimesInInterval
  id: TimesInInterval
  parent: Microsoft.Health.ItemTypes.CarePlanTaskRecurrence
  langs:
  - csharp
  - vb
  name: TimesInInterval
  nameWithType: CarePlanTaskRecurrence.TimesInInterval
  fullName: Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.TimesInInterval
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/CarePlanTaskRecurrence.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: TimesInInterval
    path: CarePlanTaskRecurrence.cs
    startLine: 153
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the number of times in the interval.\n"
  remarks: "\nExample: Two times in a week would be stored as interval = week, times-in-interval = 2.\n"
  example: []
  syntax:
    content: public int ? TimesInInterval { get; set; }
    content.vb: Public Property TimesInInterval As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.TimesInInterval*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.ToString
  commentId: M:Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.ToString
  id: ToString
  parent: Microsoft.Health.ItemTypes.CarePlanTaskRecurrence
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: CarePlanTaskRecurrence.ToString()
  fullName: Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.ToString()
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/CarePlanTaskRecurrence.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ToString
    path: CarePlanTaskRecurrence.cs
    startLine: 182
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets a string representation of the CarePlanTaskRecurrence.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\nA string representation of the CarePlanTaskRecurrence.\n"
  overridden: System.Object.ToString
  overload: Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Health.ItemTypes
  commentId: N:Microsoft.Health.ItemTypes
  isExternal: false
  name: Microsoft.Health.ItemTypes
  nameWithType: Microsoft.Health.ItemTypes
  fullName: Microsoft.Health.ItemTypes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData
  commentId: T:Microsoft.Health.ItemTypes.HealthRecordItemData
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: HealthRecordItemData
  nameWithType: HealthRecordItemData
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.ItemTypes.CarePlanTaskRecurrence
  commentId: T:Microsoft.Health.ItemTypes.CarePlanTaskRecurrence
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: CarePlanTaskRecurrence
  nameWithType: CarePlanTaskRecurrence
  fullName: Microsoft.Health.ItemTypes.CarePlanTaskRecurrence
- uid: Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.#ctor*
  commentId: Overload:Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.#ctor
  isExternal: false
  name: CarePlanTaskRecurrence
  nameWithType: CarePlanTaskRecurrence.CarePlanTaskRecurrence
  fullName: Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.CarePlanTaskRecurrence
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.HealthRecordItemData
  isExternal: true
  name: ParseXml(XPathNavigator)
  nameWithType: HealthRecordItemData.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: HealthRecordItemData.ParseXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: HealthRecordItemData.ParseXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.ParseXml*
  commentId: Overload:Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.ParseXml
  isExternal: false
  name: ParseXml
  nameWithType: CarePlanTaskRecurrence.ParseXml
  fullName: Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.ParseXml
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.Xml.XPath.XPathNavigator
  commentId: T:System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: true
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: false
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.HealthRecordItemData
  isExternal: true
  name: WriteXml(String, XmlWriter)
  nameWithType: HealthRecordItemData.WriteXml(String, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String, System.Xml.XmlWriter)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItemData.WriteXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItemData.WriteXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.WriteXml*
  commentId: Overload:Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.WriteXml
  isExternal: false
  name: WriteXml
  nameWithType: CarePlanTaskRecurrence.WriteXml
  fullName: Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.WriteXml
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.IcalRecurrence*
  commentId: Overload:Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.IcalRecurrence
  isExternal: false
  name: IcalRecurrence
  nameWithType: CarePlanTaskRecurrence.IcalRecurrence
  fullName: Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.IcalRecurrence
- uid: Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.Interval*
  commentId: Overload:Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.Interval
  isExternal: false
  name: Interval
  nameWithType: CarePlanTaskRecurrence.Interval
  fullName: Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.Interval
- uid: Microsoft.Health.ItemTypes.CodableValue
  commentId: T:Microsoft.Health.ItemTypes.CodableValue
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: CodableValue
  nameWithType: CodableValue
  fullName: Microsoft.Health.ItemTypes.CodableValue
- uid: Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.TimesInInterval*
  commentId: Overload:Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.TimesInInterval
  isExternal: false
  name: TimesInInterval
  nameWithType: CarePlanTaskRecurrence.TimesInInterval
  fullName: Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.TimesInInterval
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.ToString*
  commentId: Overload:Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.ToString
  isExternal: false
  name: ToString
  nameWithType: CarePlanTaskRecurrence.ToString
  fullName: Microsoft.Health.ItemTypes.CarePlanTaskRecurrence.ToString
