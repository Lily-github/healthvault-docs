### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.ItemTypes.SnpData
  commentId: T:Microsoft.Health.ItemTypes.SnpData
  id: SnpData
  parent: Microsoft.Health.ItemTypes
  children:
  - Microsoft.Health.ItemTypes.SnpData.#ctor
  - Microsoft.Health.ItemTypes.SnpData.#ctor(System.String,System.String,System.String)
  - Microsoft.Health.ItemTypes.SnpData.RefreshSnpItems
  - Microsoft.Health.ItemTypes.SnpData.SnpItems
  - Microsoft.Health.ItemTypes.SnpData.WriteXml(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: SnpData
  nameWithType: SnpData
  fullName: Microsoft.Health.ItemTypes.SnpData
  type: Class
  source:
    remote:
      path: Microsoft.Health.ItemTypes/SnpData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SnpData
    path: SnpData.cs
    startLine: 26
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nThe <xref href=\"Microsoft.Health.ItemTypes.SnpData\" data-throw-if-not-resolved=\"false\"></xref> class is used to store and retrieve SNP result data.\n"
  remarks: "\nSNP data are stored in a dictionary. It handles converting from a SNP result \nformat to the comma-separated format.\n"
  example: []
  syntax:
    content: 'public class SnpData : OtherItemDataCsv'
    content.vb: >-
      Public Class SnpData
          Inherits OtherItemDataCsv
  inheritance:
  - System.Object
  - Microsoft.Health.OtherItemData
  - Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv
  inheritedMembers:
  - Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.GetAsString
  - Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.GetAsDouble
  - Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.SetOtherData(System.Collections.Generic.IList{Microsoft.Health.ItemTypes.Csv.OtherItemDataCsvItem})
  - Microsoft.Health.OtherItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  - Microsoft.Health.OtherItemData.Data
  - Microsoft.Health.OtherItemData.ContentType
  - Microsoft.Health.OtherItemData.ContentEncoding
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.ItemTypes.SnpData.#ctor
  commentId: M:Microsoft.Health.ItemTypes.SnpData.#ctor
  id: '#ctor'
  parent: Microsoft.Health.ItemTypes.SnpData
  langs:
  - csharp
  - vb
  name: SnpData()
  nameWithType: SnpData.SnpData()
  fullName: Microsoft.Health.ItemTypes.SnpData.SnpData()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/SnpData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: SnpData.cs
    startLine: 32
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.SnpData\" data-throw-if-not-resolved=\"false\"></xref> class. \n"
  example: []
  syntax:
    content: public SnpData()
    content.vb: Public Sub New
  overload: Microsoft.Health.ItemTypes.SnpData.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.SnpData.#ctor(System.String,System.String,System.String)
  commentId: M:Microsoft.Health.ItemTypes.SnpData.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: Microsoft.Health.ItemTypes.SnpData
  langs:
  - csharp
  - vb
  name: SnpData(String, String, String)
  nameWithType: SnpData.SnpData(String, String, String)
  fullName: Microsoft.Health.ItemTypes.SnpData.SnpData(System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/SnpData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: SnpData.cs
    startLine: 55
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.SnpData\" data-throw-if-not-resolved=\"false\"></xref> class \nwith the specified data, encoding, and content type.\n"
  example: []
  syntax:
    content: public SnpData(string data, string contentEncoding, string contentType)
    content.vb: Public Sub New(data As String, contentEncoding As String, contentType As String)
    parameters:
    - id: data
      type: System.String
      description: "\nThe data to store in the other data section of the health record\nitem.\n"
    - id: contentEncoding
      type: System.String
      description: "\nThe type of encoding that was done on the data. Usually this will\nbe \"base64\" but other encodings are acceptable.\n"
    - id: contentType
      type: System.String
      description: "\nThe MIME-content type of the data.\n"
  overload: Microsoft.Health.ItemTypes.SnpData.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.SnpData.SnpItems
  commentId: P:Microsoft.Health.ItemTypes.SnpData.SnpItems
  id: SnpItems
  parent: Microsoft.Health.ItemTypes.SnpData
  langs:
  - csharp
  - vb
  name: SnpItems
  nameWithType: SnpData.SnpItems
  fullName: Microsoft.Health.ItemTypes.SnpData.SnpItems
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/SnpData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SnpItems
    path: SnpData.cs
    startLine: 89
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets the SNP data as a dictionary of SNP items.\n"
  remarks: "\nSNP items in a dictionary can be easily accessed by the reference SNP Id. \n"
  example: []
  syntax:
    content: public Dictionary<string, SnpItem> SnpItems { get; }
    content.vb: Public ReadOnly Property SnpItems As Dictionary(Of String, SnpItem)
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.ItemTypes.SnpItem}
  overload: Microsoft.Health.ItemTypes.SnpData.SnpItems*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.ItemTypes.SnpData.RefreshSnpItems
  commentId: M:Microsoft.Health.ItemTypes.SnpData.RefreshSnpItems
  id: RefreshSnpItems
  parent: Microsoft.Health.ItemTypes.SnpData
  langs:
  - csharp
  - vb
  name: RefreshSnpItems()
  nameWithType: SnpData.RefreshSnpItems()
  fullName: Microsoft.Health.ItemTypes.SnpData.RefreshSnpItems()
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/SnpData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: RefreshSnpItems
    path: SnpData.cs
    startLine: 113
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nReloads SNP items from other data section of the health record item.\n"
  example: []
  syntax:
    content: public void RefreshSnpItems()
    content.vb: Public Sub RefreshSnpItems
  overload: Microsoft.Health.ItemTypes.SnpData.RefreshSnpItems*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.SnpData.WriteXml(System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.SnpData.WriteXml(System.Xml.XmlWriter)
  id: WriteXml(System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.SnpData
  langs:
  - csharp
  - vb
  name: WriteXml(XmlWriter)
  nameWithType: SnpData.WriteXml(XmlWriter)
  fullName: Microsoft.Health.ItemTypes.SnpData.WriteXml(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/SnpData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteXml
    path: SnpData.cs
    startLine: 186
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nWrites the SNP Items to the specified XmlWriter.\n"
  example: []
  syntax:
    content: public override void WriteXml(XmlWriter writer)
    content.vb: Public Overrides Sub WriteXml(writer As XmlWriter)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "\nThe XmlWriter to write the SNP item data.\n"
  overridden: Microsoft.Health.OtherItemData.WriteXml(System.Xml.XmlWriter)
  overload: Microsoft.Health.ItemTypes.SnpData.WriteXml*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nIf <xref href=\"Microsoft.Health.ItemTypes.SnpData.SnpItems\" data-throw-if-not-resolved=\"false\"></xref> has not been set. \n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Health.ItemTypes.SnpData
  commentId: T:Microsoft.Health.ItemTypes.SnpData
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: SnpData
  nameWithType: SnpData
  fullName: Microsoft.Health.ItemTypes.SnpData
- uid: Microsoft.Health.ItemTypes
  commentId: N:Microsoft.Health.ItemTypes
  isExternal: false
  name: Microsoft.Health.ItemTypes
  nameWithType: Microsoft.Health.ItemTypes
  fullName: Microsoft.Health.ItemTypes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.OtherItemData
  commentId: T:Microsoft.Health.OtherItemData
  parent: Microsoft.Health
  isExternal: false
  name: OtherItemData
  nameWithType: OtherItemData
  fullName: Microsoft.Health.OtherItemData
- uid: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv
  commentId: T:Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv
  parent: Microsoft.Health.ItemTypes.Csv
  isExternal: false
  name: OtherItemDataCsv
  nameWithType: OtherItemDataCsv
  fullName: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv
- uid: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.GetAsString
  commentId: M:Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.GetAsString
  parent: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv
  isExternal: false
  name: GetAsString()
  nameWithType: OtherItemDataCsv.GetAsString()
  fullName: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.GetAsString()
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.GetAsString
    name: GetAsString
    nameWithType: OtherItemDataCsv.GetAsString
    fullName: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.GetAsString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.GetAsString
    name: GetAsString
    nameWithType: OtherItemDataCsv.GetAsString
    fullName: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.GetAsString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.GetAsDouble
  commentId: M:Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.GetAsDouble
  parent: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv
  isExternal: false
  name: GetAsDouble()
  nameWithType: OtherItemDataCsv.GetAsDouble()
  fullName: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.GetAsDouble()
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.GetAsDouble
    name: GetAsDouble
    nameWithType: OtherItemDataCsv.GetAsDouble
    fullName: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.GetAsDouble
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.GetAsDouble
    name: GetAsDouble
    nameWithType: OtherItemDataCsv.GetAsDouble
    fullName: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.GetAsDouble
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.SetOtherData(System.Collections.Generic.IList{Microsoft.Health.ItemTypes.Csv.OtherItemDataCsvItem})
  commentId: M:Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.SetOtherData(System.Collections.Generic.IList{Microsoft.Health.ItemTypes.Csv.OtherItemDataCsvItem})
  parent: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv
  isExternal: true
  name: SetOtherData(IList<OtherItemDataCsvItem>)
  nameWithType: OtherItemDataCsv.SetOtherData(IList<OtherItemDataCsvItem>)
  fullName: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.SetOtherData(System.Collections.Generic.IList<Microsoft.Health.ItemTypes.Csv.OtherItemDataCsvItem>)
  nameWithType.vb: OtherItemDataCsv.SetOtherData(IList(Of OtherItemDataCsvItem))
  fullName.vb: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.SetOtherData(System.Collections.Generic.IList(Of Microsoft.Health.ItemTypes.Csv.OtherItemDataCsvItem))
  name.vb: SetOtherData(IList(Of OtherItemDataCsvItem))
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.SetOtherData(System.Collections.Generic.IList{Microsoft.Health.ItemTypes.Csv.OtherItemDataCsvItem})
    name: SetOtherData
    nameWithType: OtherItemDataCsv.SetOtherData
    fullName: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.SetOtherData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsvItem
    name: OtherItemDataCsvItem
    nameWithType: OtherItemDataCsvItem
    fullName: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsvItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.SetOtherData(System.Collections.Generic.IList{Microsoft.Health.ItemTypes.Csv.OtherItemDataCsvItem})
    name: SetOtherData
    nameWithType: OtherItemDataCsv.SetOtherData
    fullName: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.SetOtherData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsvItem
    name: OtherItemDataCsvItem
    nameWithType: OtherItemDataCsvItem
    fullName: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsvItem
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.OtherItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.OtherItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.OtherItemData
  isExternal: true
  name: ParseXml(XPathNavigator)
  nameWithType: OtherItemData.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.OtherItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  spec.csharp:
  - uid: Microsoft.Health.OtherItemData.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: OtherItemData.ParseXml
    fullName: Microsoft.Health.OtherItemData.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.OtherItemData.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: OtherItemData.ParseXml
    fullName: Microsoft.Health.OtherItemData.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.OtherItemData.Data
  commentId: P:Microsoft.Health.OtherItemData.Data
  parent: Microsoft.Health.OtherItemData
  isExternal: false
  name: Data
  nameWithType: OtherItemData.Data
  fullName: Microsoft.Health.OtherItemData.Data
- uid: Microsoft.Health.OtherItemData.ContentType
  commentId: P:Microsoft.Health.OtherItemData.ContentType
  parent: Microsoft.Health.OtherItemData
  isExternal: false
  name: ContentType
  nameWithType: OtherItemData.ContentType
  fullName: Microsoft.Health.OtherItemData.ContentType
- uid: Microsoft.Health.OtherItemData.ContentEncoding
  commentId: P:Microsoft.Health.OtherItemData.ContentEncoding
  parent: Microsoft.Health.OtherItemData
  isExternal: false
  name: ContentEncoding
  nameWithType: OtherItemData.ContentEncoding
  fullName: Microsoft.Health.OtherItemData.ContentEncoding
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: Microsoft.Health.ItemTypes.Csv
  commentId: N:Microsoft.Health.ItemTypes.Csv
  isExternal: false
  name: Microsoft.Health.ItemTypes.Csv
  nameWithType: Microsoft.Health.ItemTypes.Csv
  fullName: Microsoft.Health.ItemTypes.Csv
- uid: Microsoft.Health.ItemTypes.SnpData.#ctor*
  commentId: Overload:Microsoft.Health.ItemTypes.SnpData.#ctor
  isExternal: false
  name: SnpData
  nameWithType: SnpData.SnpData
  fullName: Microsoft.Health.ItemTypes.SnpData.SnpData
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.ItemTypes.SnpData.SnpItems*
  commentId: Overload:Microsoft.Health.ItemTypes.SnpData.SnpItems
  isExternal: false
  name: SnpItems
  nameWithType: SnpData.SnpItems
  fullName: Microsoft.Health.ItemTypes.SnpData.SnpItems
- uid: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.ItemTypes.SnpItem}
  commentId: T:System.Collections.Generic.Dictionary{System.String,Microsoft.Health.ItemTypes.SnpItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, SnpItem>
  nameWithType: Dictionary<String, SnpItem>
  fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.ItemTypes.SnpItem>
  nameWithType.vb: Dictionary(Of String, SnpItem)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.ItemTypes.SnpItem)
  name.vb: Dictionary(Of String, SnpItem)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.ItemTypes.SnpItem
    name: SnpItem
    nameWithType: SnpItem
    fullName: Microsoft.Health.ItemTypes.SnpItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.ItemTypes.SnpItem
    name: SnpItem
    nameWithType: SnpItem
    fullName: Microsoft.Health.ItemTypes.SnpItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Health.ItemTypes.SnpData.RefreshSnpItems*
  commentId: Overload:Microsoft.Health.ItemTypes.SnpData.RefreshSnpItems
  isExternal: false
  name: RefreshSnpItems
  nameWithType: SnpData.RefreshSnpItems
  fullName: Microsoft.Health.ItemTypes.SnpData.RefreshSnpItems
- uid: Microsoft.Health.ItemTypes.SnpData.SnpItems
  commentId: P:Microsoft.Health.ItemTypes.SnpData.SnpItems
- uid: Microsoft.Health.OtherItemData.WriteXml(System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.OtherItemData.WriteXml(System.Xml.XmlWriter)
  parent: Microsoft.Health.OtherItemData
  isExternal: true
  name: WriteXml(XmlWriter)
  nameWithType: OtherItemData.WriteXml(XmlWriter)
  fullName: Microsoft.Health.OtherItemData.WriteXml(System.Xml.XmlWriter)
  spec.csharp:
  - uid: Microsoft.Health.OtherItemData.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: OtherItemData.WriteXml
    fullName: Microsoft.Health.OtherItemData.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.OtherItemData.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: OtherItemData.WriteXml
    fullName: Microsoft.Health.OtherItemData.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.SnpData.WriteXml*
  commentId: Overload:Microsoft.Health.ItemTypes.SnpData.WriteXml
  isExternal: false
  name: WriteXml
  nameWithType: SnpData.WriteXml
  fullName: Microsoft.Health.ItemTypes.SnpData.WriteXml
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
