### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.ItemTypes.IMshItem
  commentId: T:Microsoft.Health.ItemTypes.IMshItem
  id: IMshItem
  parent: Microsoft.Health.ItemTypes
  children:
  - Microsoft.Health.ItemTypes.IMshItem.Base64EncodedJson
  - Microsoft.Health.ItemTypes.IMshItem.ThingId
  - Microsoft.Health.ItemTypes.IMshItem.VersionStamp
  - Microsoft.Health.ItemTypes.IMshItem.WrappedTypeName
  langs:
  - csharp
  - vb
  name: IMshItem
  nameWithType: IMshItem
  fullName: Microsoft.Health.ItemTypes.IMshItem
  type: Interface
  source:
    remote:
      path: Microsoft.Health.ItemTypes/IMshItem.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: IMshItem
    path: IMshItem.cs
    startLine: 13
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nContract to make sure wrapped object passes key value \nof <xref href=\"Microsoft.Health.HealthRecordItem\" data-throw-if-not-resolved=\"false\"></xref> class and type name.\n"
  example: []
  syntax:
    content: public interface IMshItem
    content.vb: Public Interface IMshItem
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Health.ItemTypes.IMshItem.VersionStamp
  commentId: P:Microsoft.Health.ItemTypes.IMshItem.VersionStamp
  id: VersionStamp
  parent: Microsoft.Health.ItemTypes.IMshItem
  langs:
  - csharp
  - vb
  name: VersionStamp
  nameWithType: IMshItem.VersionStamp
  fullName: Microsoft.Health.ItemTypes.IMshItem.VersionStamp
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/IMshItem.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: VersionStamp
    path: IMshItem.cs
    startLine: 18
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nVersionstamp used for concurrency check (same as ETag in azure table)\n"
  example: []
  syntax:
    content: Guid VersionStamp { get; set; }
    content.vb: Property VersionStamp As Guid
    parameters: []
    return:
      type: System.Guid
  overload: Microsoft.Health.ItemTypes.IMshItem.VersionStamp*
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.Health.ItemTypes.IMshItem.ThingId
  commentId: P:Microsoft.Health.ItemTypes.IMshItem.ThingId
  id: ThingId
  parent: Microsoft.Health.ItemTypes.IMshItem
  langs:
  - csharp
  - vb
  name: ThingId
  nameWithType: IMshItem.ThingId
  fullName: Microsoft.Health.ItemTypes.IMshItem.ThingId
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/IMshItem.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ThingId
    path: IMshItem.cs
    startLine: 23
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nId of wrapped thing object\n"
  example: []
  syntax:
    content: Guid ThingId { get; set; }
    content.vb: Property ThingId As Guid
    parameters: []
    return:
      type: System.Guid
  overload: Microsoft.Health.ItemTypes.IMshItem.ThingId*
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.Health.ItemTypes.IMshItem.Base64EncodedJson
  commentId: P:Microsoft.Health.ItemTypes.IMshItem.Base64EncodedJson
  id: Base64EncodedJson
  parent: Microsoft.Health.ItemTypes.IMshItem
  langs:
  - csharp
  - vb
  name: Base64EncodedJson
  nameWithType: IMshItem.Base64EncodedJson
  fullName: Microsoft.Health.ItemTypes.IMshItem.Base64EncodedJson
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/IMshItem.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Base64EncodedJson
    path: IMshItem.cs
    startLine: 28
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nBase64-encoded json of wrapped object\n"
  example: []
  syntax:
    content: string Base64EncodedJson { get; }
    content.vb: ReadOnly Property Base64EncodedJson As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.ItemTypes.IMshItem.Base64EncodedJson*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Health.ItemTypes.IMshItem.WrappedTypeName
  commentId: P:Microsoft.Health.ItemTypes.IMshItem.WrappedTypeName
  id: WrappedTypeName
  parent: Microsoft.Health.ItemTypes.IMshItem
  langs:
  - csharp
  - vb
  name: WrappedTypeName
  nameWithType: IMshItem.WrappedTypeName
  fullName: Microsoft.Health.ItemTypes.IMshItem.WrappedTypeName
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/IMshItem.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WrappedTypeName
    path: IMshItem.cs
    startLine: 33
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nFull type name of wrapped object\n"
  example: []
  syntax:
    content: string WrappedTypeName { get; }
    content.vb: ReadOnly Property WrappedTypeName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.ItemTypes.IMshItem.WrappedTypeName*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Microsoft.Health.HealthRecordItem
  commentId: T:Microsoft.Health.HealthRecordItem
  parent: Microsoft.Health
  isExternal: false
  name: HealthRecordItem
  nameWithType: HealthRecordItem
  fullName: Microsoft.Health.HealthRecordItem
- uid: Microsoft.Health.ItemTypes
  commentId: N:Microsoft.Health.ItemTypes
  isExternal: false
  name: Microsoft.Health.ItemTypes
  nameWithType: Microsoft.Health.ItemTypes
  fullName: Microsoft.Health.ItemTypes
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: Microsoft.Health.ItemTypes.IMshItem.VersionStamp*
  commentId: Overload:Microsoft.Health.ItemTypes.IMshItem.VersionStamp
  isExternal: false
  name: VersionStamp
  nameWithType: IMshItem.VersionStamp
  fullName: Microsoft.Health.ItemTypes.IMshItem.VersionStamp
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.ItemTypes.IMshItem.ThingId*
  commentId: Overload:Microsoft.Health.ItemTypes.IMshItem.ThingId
  isExternal: false
  name: ThingId
  nameWithType: IMshItem.ThingId
  fullName: Microsoft.Health.ItemTypes.IMshItem.ThingId
- uid: Microsoft.Health.ItemTypes.IMshItem.Base64EncodedJson*
  commentId: Overload:Microsoft.Health.ItemTypes.IMshItem.Base64EncodedJson
  isExternal: false
  name: Base64EncodedJson
  nameWithType: IMshItem.Base64EncodedJson
  fullName: Microsoft.Health.ItemTypes.IMshItem.Base64EncodedJson
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.ItemTypes.IMshItem.WrappedTypeName*
  commentId: Overload:Microsoft.Health.ItemTypes.IMshItem.WrappedTypeName
  isExternal: false
  name: WrappedTypeName
  nameWithType: IMshItem.WrappedTypeName
  fullName: Microsoft.Health.ItemTypes.IMshItem.WrappedTypeName
