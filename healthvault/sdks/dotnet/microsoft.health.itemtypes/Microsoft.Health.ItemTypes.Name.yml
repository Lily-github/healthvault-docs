### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.ItemTypes.Name
  commentId: T:Microsoft.Health.ItemTypes.Name
  id: Name
  parent: Microsoft.Health.ItemTypes
  children:
  - Microsoft.Health.ItemTypes.Name.#ctor
  - Microsoft.Health.ItemTypes.Name.#ctor(System.String)
  - Microsoft.Health.ItemTypes.Name.#ctor(System.String,System.String,System.String,System.String)
  - Microsoft.Health.ItemTypes.Name.#ctor(System.String,System.String,System.String,System.String,Microsoft.Health.ItemTypes.CodableValue)
  - Microsoft.Health.ItemTypes.Name.First
  - Microsoft.Health.ItemTypes.Name.Full
  - Microsoft.Health.ItemTypes.Name.Last
  - Microsoft.Health.ItemTypes.Name.Middle
  - Microsoft.Health.ItemTypes.Name.ParseXml(System.Xml.XPath.XPathNavigator)
  - Microsoft.Health.ItemTypes.Name.Suffix
  - Microsoft.Health.ItemTypes.Name.Title
  - Microsoft.Health.ItemTypes.Name.ToString
  - Microsoft.Health.ItemTypes.Name.WriteXml(System.String,System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Name
  fullName: Microsoft.Health.ItemTypes.Name
  type: Class
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Name.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Name
    path: Name.cs
    startLine: 20
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nRepresents a person's name.\n"
  example: []
  syntax:
    content: 'public class Name : HealthRecordItemData'
    content.vb: >-
      Public Class Name
          Inherits HealthRecordItemData
  inheritance:
  - System.Object
  - Microsoft.Health.ItemTypes.HealthRecordItemData
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.ItemTypes.Name.#ctor
  commentId: M:Microsoft.Health.ItemTypes.Name.#ctor
  id: '#ctor'
  parent: Microsoft.Health.ItemTypes.Name
  langs:
  - csharp
  - vb
  name: Name()
  nameWithType: Name.Name()
  fullName: Microsoft.Health.ItemTypes.Name.Name()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Name.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: Name.cs
    startLine: 26
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the  <xref href=\"Microsoft.Health.ItemTypes.Name\" data-throw-if-not-resolved=\"false\"></xref> class with default values.\n"
  example: []
  syntax:
    content: public Name()
    content.vb: Public Sub New
  overload: Microsoft.Health.ItemTypes.Name.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Name.#ctor(System.String)
  commentId: M:Microsoft.Health.ItemTypes.Name.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Health.ItemTypes.Name
  langs:
  - csharp
  - vb
  name: Name(String)
  nameWithType: Name.Name(String)
  fullName: Microsoft.Health.ItemTypes.Name.Name(System.String)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Name.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: Name.cs
    startLine: 42
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the  <xref href=\"Microsoft.Health.ItemTypes.Name\" data-throw-if-not-resolved=\"false\"></xref> class with the specified full name.\n"
  example: []
  syntax:
    content: public Name(string fullName)
    content.vb: Public Sub New(fullName As String)
    parameters:
    - id: fullName
      type: System.String
      description: "\nThe full name.\n"
  overload: Microsoft.Health.ItemTypes.Name.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">fullName</span> parameter is <strong>null</strong> or empty.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Name.#ctor(System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Health.ItemTypes.Name.#ctor(System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String)'
  parent: Microsoft.Health.ItemTypes.Name
  langs:
  - csharp
  - vb
  name: Name(String, String, String, String)
  nameWithType: Name.Name(String, String, String, String)
  fullName: Microsoft.Health.ItemTypes.Name.Name(System.String, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Name.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: Name.cs
    startLine: 72
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the  <xref href=\"Microsoft.Health.ItemTypes.Name\" data-throw-if-not-resolved=\"false\"></xref> class with the \nspecified first, middle, and last name.\n"
  example: []
  syntax:
    content: public Name(string fullName, string first, string middle, string last)
    content.vb: Public Sub New(fullName As String, first As String, middle As String, last As String)
    parameters:
    - id: fullName
      type: System.String
      description: "\nThe full name.\n"
    - id: first
      type: System.String
      description: "\nThe first name (given name).\n"
    - id: middle
      type: System.String
      description: "\nThe middle name.\n"
    - id: last
      type: System.String
      description: "\nThe last name (surname).\n"
  overload: Microsoft.Health.ItemTypes.Name.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">fullName</span> parameter is <strong>null</strong> or empty.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Name.#ctor(System.String,System.String,System.String,System.String,Microsoft.Health.ItemTypes.CodableValue)
  commentId: M:Microsoft.Health.ItemTypes.Name.#ctor(System.String,System.String,System.String,System.String,Microsoft.Health.ItemTypes.CodableValue)
  id: '#ctor(System.String,System.String,System.String,System.String,Microsoft.Health.ItemTypes.CodableValue)'
  parent: Microsoft.Health.ItemTypes.Name
  langs:
  - csharp
  - vb
  name: Name(String, String, String, String, CodableValue)
  nameWithType: Name.Name(String, String, String, String, CodableValue)
  fullName: Microsoft.Health.ItemTypes.Name.Name(System.String, System.String, System.String, System.String, Microsoft.Health.ItemTypes.CodableValue)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Name.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: Name.cs
    startLine: 109
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the  <xref href=\"Microsoft.Health.ItemTypes.Name\" data-throw-if-not-resolved=\"false\"></xref> class with the \nspecified first, middle, and last name and suffix.\n"
  example: []
  syntax:
    content: public Name(string fullName, string first, string middle, string last, CodableValue suffix)
    content.vb: Public Sub New(fullName As String, first As String, middle As String, last As String, suffix As CodableValue)
    parameters:
    - id: fullName
      type: System.String
      description: "\nThe full name.\n"
    - id: first
      type: System.String
      description: "\nThe first name (given name).\n"
    - id: middle
      type: System.String
      description: "\nThe middle name.\n"
    - id: last
      type: System.String
      description: "\nThe last name (surname).\n"
    - id: suffix
      type: Microsoft.Health.ItemTypes.CodableValue
      description: "\nThe name suffix.\n"
  overload: Microsoft.Health.ItemTypes.Name.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">fullName</span> parameter is <strong>null</strong> or empty.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Name.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.Name.ParseXml(System.Xml.XPath.XPathNavigator)
  id: ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.Name
  langs:
  - csharp
  - vb
  name: ParseXml(XPathNavigator)
  nameWithType: Name.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.Name.ParseXml(System.Xml.XPath.XPathNavigator)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Name.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ParseXml
    path: Name.cs
    startLine: 132
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nPopulates the data from the specified XML.\n"
  example: []
  syntax:
    content: public override void ParseXml(XPathNavigator navigator)
    content.vb: Public Overrides Sub ParseXml(navigator As XPathNavigator)
    parameters:
    - id: navigator
      type: System.Xml.XPath.XPathNavigator
      description: "\nThe XML containing the name information.\n"
  overridden: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  overload: Microsoft.Health.ItemTypes.Name.ParseXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">navigator</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.Name.WriteXml(System.String,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.Name.WriteXml(System.String,System.Xml.XmlWriter)
  id: WriteXml(System.String,System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.Name
  langs:
  - csharp
  - vb
  name: WriteXml(String, XmlWriter)
  nameWithType: Name.WriteXml(String, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.Name.WriteXml(System.String, System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Name.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteXml
    path: Name.cs
    startLine: 208
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nWrites the XML representation of the name into\nthe specified XML writer.\n"
  example: []
  syntax:
    content: public override void WriteXml(string nodeName, XmlWriter writer)
    content.vb: Public Overrides Sub WriteXml(nodeName As String, writer As XmlWriter)
    parameters:
    - id: nodeName
      type: System.String
      description: "\nThe name of the outer node for the name.\n"
    - id: writer
      type: System.Xml.XmlWriter
      description: "\nThe XML writer into which the name should be \nwritten.\n"
  overridden: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  overload: Microsoft.Health.ItemTypes.Name.WriteXml*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">nodeName</span> parameter is <strong>null</strong> or empty.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">writer</span> parameter is <strong>null</strong>.\n"
  - type: Microsoft.Health.HealthRecordItemSerializationException
    commentId: T:Microsoft.Health.HealthRecordItemSerializationException
    description: "\nThe <xref href=\"Microsoft.Health.ItemTypes.Name.Full\" data-throw-if-not-resolved=\"false\"></xref> property has not been set.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.Name.Full
  commentId: P:Microsoft.Health.ItemTypes.Name.Full
  id: Full
  parent: Microsoft.Health.ItemTypes.Name
  langs:
  - csharp
  - vb
  name: Full
  nameWithType: Name.Full
  fullName: Microsoft.Health.ItemTypes.Name.Full
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Name.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Full
    path: Name.cs
    startLine: 259
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the full name.\n"
  example: []
  syntax:
    content: public string Full { get; set; }
    content.vb: Public Property Full As String
    parameters: []
    return:
      type: System.String
      description: "\nA string representing the name.\n"
  overload: Microsoft.Health.ItemTypes.Name.Full*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">value</span> parameter is <strong>null</strong> or empty when setting.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Name.Title
  commentId: P:Microsoft.Health.ItemTypes.Name.Title
  id: Title
  parent: Microsoft.Health.ItemTypes.Name
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: Name.Title
  fullName: Microsoft.Health.ItemTypes.Name.Title
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Name.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Title
    path: Name.cs
    startLine: 282
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the person's title.\n"
  remarks: "\nSet the value to <strong>null</strong> if the title should not be stored.\n"
  example: []
  syntax:
    content: public CodableValue Title { get; set; }
    content.vb: Public Property Title As CodableValue
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.CodableValue
      description: "\nA <xref href=\"Microsoft.Health.ItemTypes.CodableValue\" data-throw-if-not-resolved=\"false\"></xref> representing the title.\n"
  overload: Microsoft.Health.ItemTypes.Name.Title*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Name.First
  commentId: P:Microsoft.Health.ItemTypes.Name.First
  id: First
  parent: Microsoft.Health.ItemTypes.Name
  langs:
  - csharp
  - vb
  name: First
  nameWithType: Name.First
  fullName: Microsoft.Health.ItemTypes.Name.First
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Name.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: First
    path: Name.cs
    startLine: 301
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the person's first name.\n"
  remarks: "\nSet the value to <strong>null</strong> if the first name should not be stored.\n"
  example: []
  syntax:
    content: public string First { get; set; }
    content.vb: Public Property First As String
    parameters: []
    return:
      type: System.String
      description: "\nA string representing the first name.\n"
  overload: Microsoft.Health.ItemTypes.Name.First*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Name.Middle
  commentId: P:Microsoft.Health.ItemTypes.Name.Middle
  id: Middle
  parent: Microsoft.Health.ItemTypes.Name
  langs:
  - csharp
  - vb
  name: Middle
  nameWithType: Name.Middle
  fullName: Microsoft.Health.ItemTypes.Name.Middle
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Name.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Middle
    path: Name.cs
    startLine: 320
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the person's middle name.\n"
  remarks: "\nSet the value to <strong>null</strong> if the middle name should not be stored.\n"
  example: []
  syntax:
    content: public string Middle { get; set; }
    content.vb: Public Property Middle As String
    parameters: []
    return:
      type: System.String
      description: "\nA string representing the middle name.\n"
  overload: Microsoft.Health.ItemTypes.Name.Middle*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Name.Last
  commentId: P:Microsoft.Health.ItemTypes.Name.Last
  id: Last
  parent: Microsoft.Health.ItemTypes.Name
  langs:
  - csharp
  - vb
  name: Last
  nameWithType: Name.Last
  fullName: Microsoft.Health.ItemTypes.Name.Last
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Name.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Last
    path: Name.cs
    startLine: 339
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the person's last name.\n"
  remarks: "\nSet the value to <strong>null</strong> if the last name should not be stored.\n"
  example: []
  syntax:
    content: public string Last { get; set; }
    content.vb: Public Property Last As String
    parameters: []
    return:
      type: System.String
      description: "\nA string representing the last name.\n"
  overload: Microsoft.Health.ItemTypes.Name.Last*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Name.Suffix
  commentId: P:Microsoft.Health.ItemTypes.Name.Suffix
  id: Suffix
  parent: Microsoft.Health.ItemTypes.Name
  langs:
  - csharp
  - vb
  name: Suffix
  nameWithType: Name.Suffix
  fullName: Microsoft.Health.ItemTypes.Name.Suffix
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Name.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Suffix
    path: Name.cs
    startLine: 358
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the person's suffix.\n"
  remarks: "\nSet the value to <strong>null</strong> if the suffix should not be stored.\n"
  example: []
  syntax:
    content: public CodableValue Suffix { get; set; }
    content.vb: Public Property Suffix As CodableValue
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.CodableValue
      description: "\nA string representing the suffix.\n"
  overload: Microsoft.Health.ItemTypes.Name.Suffix*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Name.ToString
  commentId: M:Microsoft.Health.ItemTypes.Name.ToString
  id: ToString
  parent: Microsoft.Health.ItemTypes.Name
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Name.ToString()
  fullName: Microsoft.Health.ItemTypes.Name.ToString()
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Name.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ToString
    path: Name.cs
    startLine: 373
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets a string representation of the name.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\nA string representation of the name.\n"
  overridden: System.Object.ToString
  overload: Microsoft.Health.ItemTypes.Name.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Health.ItemTypes
  commentId: N:Microsoft.Health.ItemTypes
  isExternal: false
  name: Microsoft.Health.ItemTypes
  nameWithType: Microsoft.Health.ItemTypes
  fullName: Microsoft.Health.ItemTypes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData
  commentId: T:Microsoft.Health.ItemTypes.HealthRecordItemData
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: HealthRecordItemData
  nameWithType: HealthRecordItemData
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.ItemTypes.Name
  commentId: T:Microsoft.Health.ItemTypes.Name
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: Name
  nameWithType: Name
  fullName: Microsoft.Health.ItemTypes.Name
- uid: Microsoft.Health.ItemTypes.Name.#ctor*
  commentId: Overload:Microsoft.Health.ItemTypes.Name.#ctor
  isExternal: false
  name: Name
  nameWithType: Name.Name
  fullName: Microsoft.Health.ItemTypes.Name.Name
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.ItemTypes.CodableValue
  commentId: T:Microsoft.Health.ItemTypes.CodableValue
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: CodableValue
  nameWithType: CodableValue
  fullName: Microsoft.Health.ItemTypes.CodableValue
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.HealthRecordItemData
  isExternal: true
  name: ParseXml(XPathNavigator)
  nameWithType: HealthRecordItemData.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: HealthRecordItemData.ParseXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: HealthRecordItemData.ParseXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Name.ParseXml*
  commentId: Overload:Microsoft.Health.ItemTypes.Name.ParseXml
  isExternal: false
  name: ParseXml
  nameWithType: Name.ParseXml
  fullName: Microsoft.Health.ItemTypes.Name.ParseXml
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.Xml.XPath.XPathNavigator
  commentId: T:System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: true
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: false
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: Microsoft.Health.ItemTypes.Name.Full
  commentId: P:Microsoft.Health.ItemTypes.Name.Full
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.HealthRecordItemData
  isExternal: true
  name: WriteXml(String, XmlWriter)
  nameWithType: HealthRecordItemData.WriteXml(String, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String, System.Xml.XmlWriter)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItemData.WriteXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItemData.WriteXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Name.WriteXml*
  commentId: Overload:Microsoft.Health.ItemTypes.Name.WriteXml
  isExternal: false
  name: WriteXml
  nameWithType: Name.WriteXml
  fullName: Microsoft.Health.ItemTypes.Name.WriteXml
- uid: Microsoft.Health.HealthRecordItemSerializationException
  commentId: T:Microsoft.Health.HealthRecordItemSerializationException
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: Microsoft.Health.ItemTypes.Name.Full*
  commentId: Overload:Microsoft.Health.ItemTypes.Name.Full
  isExternal: false
  name: Full
  nameWithType: Name.Full
  fullName: Microsoft.Health.ItemTypes.Name.Full
- uid: Microsoft.Health.ItemTypes.Name.Title*
  commentId: Overload:Microsoft.Health.ItemTypes.Name.Title
  isExternal: false
  name: Title
  nameWithType: Name.Title
  fullName: Microsoft.Health.ItemTypes.Name.Title
- uid: Microsoft.Health.ItemTypes.Name.First*
  commentId: Overload:Microsoft.Health.ItemTypes.Name.First
  isExternal: false
  name: First
  nameWithType: Name.First
  fullName: Microsoft.Health.ItemTypes.Name.First
- uid: Microsoft.Health.ItemTypes.Name.Middle*
  commentId: Overload:Microsoft.Health.ItemTypes.Name.Middle
  isExternal: false
  name: Middle
  nameWithType: Name.Middle
  fullName: Microsoft.Health.ItemTypes.Name.Middle
- uid: Microsoft.Health.ItemTypes.Name.Last*
  commentId: Overload:Microsoft.Health.ItemTypes.Name.Last
  isExternal: false
  name: Last
  nameWithType: Name.Last
  fullName: Microsoft.Health.ItemTypes.Name.Last
- uid: Microsoft.Health.ItemTypes.Name.Suffix*
  commentId: Overload:Microsoft.Health.ItemTypes.Name.Suffix
  isExternal: false
  name: Suffix
  nameWithType: Name.Suffix
  fullName: Microsoft.Health.ItemTypes.Name.Suffix
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Name.ToString*
  commentId: Overload:Microsoft.Health.ItemTypes.Name.ToString
  isExternal: false
  name: ToString
  nameWithType: Name.ToString
  fullName: Microsoft.Health.ItemTypes.Name.ToString
