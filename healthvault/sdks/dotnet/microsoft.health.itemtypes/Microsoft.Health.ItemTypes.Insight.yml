### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.ItemTypes.Insight
  commentId: T:Microsoft.Health.ItemTypes.Insight
  id: Insight
  parent: Microsoft.Health.ItemTypes
  children:
  - Microsoft.Health.ItemTypes.Insight.#ctor
  - Microsoft.Health.ItemTypes.Insight.#ctor(System.String,System.String,Microsoft.Health.ItemTypes.HealthServiceDateTime,Microsoft.Health.ItemTypes.HealthServiceDateTime)
  - Microsoft.Health.ItemTypes.Insight.AlgoClass
  - Microsoft.Health.ItemTypes.Insight.Annotation
  - Microsoft.Health.ItemTypes.Insight.Attribution
  - Microsoft.Health.ItemTypes.Insight.CatalogId
  - Microsoft.Health.ItemTypes.Insight.Channel
  - Microsoft.Health.ItemTypes.Insight.ComparisonPivot
  - Microsoft.Health.ItemTypes.Insight.Confidence
  - Microsoft.Health.ItemTypes.Insight.DataUsedPivot
  - Microsoft.Health.ItemTypes.Insight.Directionality
  - Microsoft.Health.ItemTypes.Insight.ExpirationDate
  - Microsoft.Health.ItemTypes.Insight.InsightTags
  - Microsoft.Health.ItemTypes.Insight.Links
  - Microsoft.Health.ItemTypes.Insight.Messages
  - Microsoft.Health.ItemTypes.Insight.Origin
  - Microsoft.Health.ItemTypes.Insight.ParseXml(System.Xml.XPath.IXPathNavigable)
  - Microsoft.Health.ItemTypes.Insight.RaisedInsightId
  - Microsoft.Health.ItemTypes.Insight.ScopePivot
  - Microsoft.Health.ItemTypes.Insight.Strength
  - Microsoft.Health.ItemTypes.Insight.TimespanPivot
  - Microsoft.Health.ItemTypes.Insight.TonePivot
  - Microsoft.Health.ItemTypes.Insight.ToString
  - Microsoft.Health.ItemTypes.Insight.TypeId
  - Microsoft.Health.ItemTypes.Insight.Values
  - Microsoft.Health.ItemTypes.Insight.When
  - Microsoft.Health.ItemTypes.Insight.WriteXml(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: Insight
  nameWithType: Insight
  fullName: Microsoft.Health.ItemTypes.Insight
  type: Class
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Insight.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Insight
    path: Insight.cs
    startLine: 18
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nRepresents a health record item type that encapsulates an insight\nrelated to the record. This insight is generated by the system.\n"
  example: []
  syntax:
    content: 'public class Insight : HealthRecordItem'
    content.vb: >-
      Public Class Insight
          Inherits HealthRecordItem
  inheritance:
  - System.Object
  - Microsoft.Health.HealthRecordItem
  inheritedMembers:
  - Microsoft.Health.HealthRecordItem.Sign(System.Security.Cryptography.X509Certificates.X509Certificate2)
  - Microsoft.Health.HealthRecordItem.IsSignatureValid
  - Microsoft.Health.HealthRecordItem.ValidateCertificate
  - Microsoft.Health.HealthRecordItem.Key
  - Microsoft.Health.HealthRecordItem.TypeName
  - Microsoft.Health.HealthRecordItem.EffectiveDate
  - Microsoft.Health.HealthRecordItem.State
  - Microsoft.Health.HealthRecordItem.Flags
  - Microsoft.Health.HealthRecordItem.IsPersonal
  - Microsoft.Health.HealthRecordItem.IsDownVersioned
  - Microsoft.Health.HealthRecordItem.IsUpVersioned
  - Microsoft.Health.HealthRecordItem.UpdatedEndDate
  - Microsoft.Health.HealthRecordItem.LastUpdated
  - Microsoft.Health.HealthRecordItem.Created
  - Microsoft.Health.HealthRecordItem.EffectivePermissions
  - Microsoft.Health.HealthRecordItem.IsImmutable
  - Microsoft.Health.HealthRecordItem.IsReadOnly
  - Microsoft.Health.HealthRecordItem.TypeSpecificData
  - Microsoft.Health.HealthRecordItem.TransformedXmlData
  - Microsoft.Health.HealthRecordItem.CommonData
  - Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.HealthRecordAccessor)
  - Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.Package.ConnectPackageCreationParameters)
  - Microsoft.Health.HealthRecordItem.Tags
  - Microsoft.Health.HealthRecordItem.HealthRecordItemSignatures
  - Microsoft.Health.HealthRecordItem.Sections
  - Microsoft.Health.HealthRecordItem.GetSizeInBytes
  - Microsoft.Health.HealthRecordItem.GetItemXml
  - Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections)
  - Microsoft.Health.HealthRecordItem.GetItemXml(System.String)
  - Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections,System.String)
  - Microsoft.Health.HealthRecordItem.Serialize
  - Microsoft.Health.HealthRecordItem.Deserialize(System.String)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.ItemTypes.Insight.#ctor
  commentId: M:Microsoft.Health.ItemTypes.Insight.#ctor
  id: '#ctor'
  parent: Microsoft.Health.ItemTypes.Insight
  langs:
  - csharp
  - vb
  name: Insight()
  nameWithType: Insight.Insight()
  fullName: Microsoft.Health.ItemTypes.Insight.Insight()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Insight.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: Insight.cs
    startLine: 29
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.Insight\" data-throw-if-not-resolved=\"false\"></xref> class with default values.\n"
  remarks: "\nThe item is not added to the health record until the\n<xref href=\"Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)\" data-throw-if-not-resolved=\"false\"></xref> \nmethod is called.        \n"
  example: []
  syntax:
    content: public Insight()
    content.vb: Public Sub New
  overload: Microsoft.Health.ItemTypes.Insight.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Insight.#ctor(System.String,System.String,Microsoft.Health.ItemTypes.HealthServiceDateTime,Microsoft.Health.ItemTypes.HealthServiceDateTime)
  commentId: M:Microsoft.Health.ItemTypes.Insight.#ctor(System.String,System.String,Microsoft.Health.ItemTypes.HealthServiceDateTime,Microsoft.Health.ItemTypes.HealthServiceDateTime)
  id: '#ctor(System.String,System.String,Microsoft.Health.ItemTypes.HealthServiceDateTime,Microsoft.Health.ItemTypes.HealthServiceDateTime)'
  parent: Microsoft.Health.ItemTypes.Insight
  langs:
  - csharp
  - vb
  name: Insight(String, String, HealthServiceDateTime, HealthServiceDateTime)
  nameWithType: Insight.Insight(String, String, HealthServiceDateTime, HealthServiceDateTime)
  fullName: Microsoft.Health.ItemTypes.Insight.Insight(System.String, System.String, Microsoft.Health.ItemTypes.HealthServiceDateTime, Microsoft.Health.ItemTypes.HealthServiceDateTime)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Insight.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: Insight.cs
    startLine: 62
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.Insight\" data-throw-if-not-resolved=\"false\"></xref> class \nwith the specified date.\n"
  example: []
  syntax:
    content: public Insight(string raisedInsightId, string catalogId, HealthServiceDateTime when, HealthServiceDateTime expirationDate)
    content.vb: Public Sub New(raisedInsightId As String, catalogId As String, when As HealthServiceDateTime, expirationDate As HealthServiceDateTime)
    parameters:
    - id: raisedInsightId
      type: System.String
      description: "\nUnique Id of this insight instance.\n"
    - id: catalogId
      type: System.String
      description: "\nUnique Id of the catalog item used to generate this insight.\n"
    - id: when
      type: Microsoft.Health.ItemTypes.HealthServiceDateTime
      description: "\nThe date when the insight was generated.\n"
    - id: expirationDate
      type: Microsoft.Health.ItemTypes.HealthServiceDateTime
      description: "\nThe date when the insight will expire.\n"
  overload: Microsoft.Health.ItemTypes.Insight.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">when</span> parameter is <strong>null</strong>.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">expirationDate</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Insight.TypeId
  commentId: F:Microsoft.Health.ItemTypes.Insight.TypeId
  id: TypeId
  parent: Microsoft.Health.ItemTypes.Insight
  langs:
  - csharp
  - vb
  name: TypeId
  nameWithType: Insight.TypeId
  fullName: Microsoft.Health.ItemTypes.Insight.TypeId
  type: Field
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Insight.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: TypeId
    path: Insight.cs
    startLine: 83
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nRetrieves the unique identifier for the item type.\n"
  example: []
  syntax:
    content: public static readonly Guid TypeId
    content.vb: Public Shared ReadOnly TypeId As Guid
    return:
      type: System.Guid
      description: "\nA GUID.\n"
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Health.ItemTypes.Insight.ParseXml(System.Xml.XPath.IXPathNavigable)
  commentId: M:Microsoft.Health.ItemTypes.Insight.ParseXml(System.Xml.XPath.IXPathNavigable)
  id: ParseXml(System.Xml.XPath.IXPathNavigable)
  parent: Microsoft.Health.ItemTypes.Insight
  langs:
  - csharp
  - vb
  name: ParseXml(IXPathNavigable)
  nameWithType: Insight.ParseXml(IXPathNavigable)
  fullName: Microsoft.Health.ItemTypes.Insight.ParseXml(System.Xml.XPath.IXPathNavigable)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Insight.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ParseXml
    path: Insight.cs
    startLine: 99
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nPopulates this <xref href=\"Microsoft.Health.ItemTypes.Insight\" data-throw-if-not-resolved=\"false\"></xref> instance from the data in the XML.\n"
  example: []
  syntax:
    content: protected override void ParseXml(IXPathNavigable typeSpecificXml)
    content.vb: Protected Overrides Sub ParseXml(typeSpecificXml As IXPathNavigable)
    parameters:
    - id: typeSpecificXml
      type: System.Xml.XPath.IXPathNavigable
      description: "\nThe XML to get the insight data from.\n"
  overridden: Microsoft.Health.HealthRecordItem.ParseXml(System.Xml.XPath.IXPathNavigable)
  overload: Microsoft.Health.ItemTypes.Insight.ParseXml*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nThe first node in <span class=\"paramref\">typeSpecificXml</span> is not\nan insight node.\n"
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Health.ItemTypes.Insight.WriteXml(System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.Insight.WriteXml(System.Xml.XmlWriter)
  id: WriteXml(System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.Insight
  langs:
  - csharp
  - vb
  name: WriteXml(XmlWriter)
  nameWithType: Insight.WriteXml(XmlWriter)
  fullName: Microsoft.Health.ItemTypes.Insight.WriteXml(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Insight.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteXml
    path: Insight.cs
    startLine: 154
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nWrites the insight data to the specified XmlWriter.\n"
  example: []
  syntax:
    content: public override void WriteXml(XmlWriter writer)
    content.vb: Public Overrides Sub WriteXml(writer As XmlWriter)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "\nThe XmlWriter to write the insight data to.\n"
  overridden: Microsoft.Health.HealthRecordItem.WriteXml(System.Xml.XmlWriter)
  overload: Microsoft.Health.ItemTypes.Insight.WriteXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nIf <span class=\"paramref\">writer</span> is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.Insight.ToString
  commentId: M:Microsoft.Health.ItemTypes.Insight.ToString
  id: ToString
  parent: Microsoft.Health.ItemTypes.Insight
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Insight.ToString()
  fullName: Microsoft.Health.ItemTypes.Insight.ToString()
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Insight.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ToString
    path: Insight.cs
    startLine: 234
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets a string representation of the insight.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\nA string representing the insight.\n"
  overridden: System.Object.ToString
  overload: Microsoft.Health.ItemTypes.Insight.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.Insight.RaisedInsightId
  commentId: P:Microsoft.Health.ItemTypes.Insight.RaisedInsightId
  id: RaisedInsightId
  parent: Microsoft.Health.ItemTypes.Insight
  langs:
  - csharp
  - vb
  name: RaisedInsightId
  nameWithType: Insight.RaisedInsightId
  fullName: Microsoft.Health.ItemTypes.Insight.RaisedInsightId
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Insight.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: RaisedInsightId
    path: Insight.cs
    startLine: 253
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nUniquely identifies an instance of Insight generated for a user.\n"
  example: []
  syntax:
    content: public string RaisedInsightId { get; set; }
    content.vb: Public Property RaisedInsightId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.ItemTypes.Insight.RaisedInsightId*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">value</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Insight.CatalogId
  commentId: P:Microsoft.Health.ItemTypes.Insight.CatalogId
  id: CatalogId
  parent: Microsoft.Health.ItemTypes.Insight
  langs:
  - csharp
  - vb
  name: CatalogId
  nameWithType: Insight.CatalogId
  fullName: Microsoft.Health.ItemTypes.Insight.CatalogId
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Insight.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CatalogId
    path: Insight.cs
    startLine: 277
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nUnique identity of the catalog item used to create this Insight.\n"
  example: []
  syntax:
    content: public string CatalogId { get; set; }
    content.vb: Public Property CatalogId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.ItemTypes.Insight.CatalogId*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">value</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Insight.When
  commentId: P:Microsoft.Health.ItemTypes.Insight.When
  id: When
  parent: Microsoft.Health.ItemTypes.Insight
  langs:
  - csharp
  - vb
  name: When
  nameWithType: Insight.When
  fullName: Microsoft.Health.ItemTypes.Insight.When
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Insight.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: When
    path: Insight.cs
    startLine: 307
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the date when the insight was created.\n"
  example: []
  syntax:
    content: public HealthServiceDateTime When { get; set; }
    content.vb: Public Property When As HealthServiceDateTime
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.HealthServiceDateTime
      description: "\nA <xref href=\"Microsoft.Health.ItemTypes.HealthServiceDateTime\" data-throw-if-not-resolved=\"false\"></xref> representing the date. \nThe default value is the current year, month, and day.\n"
  overload: Microsoft.Health.ItemTypes.Insight.When*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">value</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Insight.ExpirationDate
  commentId: P:Microsoft.Health.ItemTypes.Insight.ExpirationDate
  id: ExpirationDate
  parent: Microsoft.Health.ItemTypes.Insight
  langs:
  - csharp
  - vb
  name: ExpirationDate
  nameWithType: Insight.ExpirationDate
  fullName: Microsoft.Health.ItemTypes.Insight.ExpirationDate
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Insight.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ExpirationDate
    path: Insight.cs
    startLine: 330
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nDate and time when this Insight instance expires.\n"
  example: []
  syntax:
    content: public HealthServiceDateTime ExpirationDate { get; set; }
    content.vb: Public Property ExpirationDate As HealthServiceDateTime
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.HealthServiceDateTime
  overload: Microsoft.Health.ItemTypes.Insight.ExpirationDate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">value</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Insight.Channel
  commentId: P:Microsoft.Health.ItemTypes.Insight.Channel
  id: Channel
  parent: Microsoft.Health.ItemTypes.Insight
  langs:
  - csharp
  - vb
  name: Channel
  nameWithType: Insight.Channel
  fullName: Microsoft.Health.ItemTypes.Insight.Channel
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Insight.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Channel
    path: Insight.cs
    startLine: 353
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nShows what does this Insight impact. For example sleep or activity etc.\n"
  example: []
  syntax:
    content: public string Channel { get; set; }
    content.vb: Public Property Channel As String
    parameters: []
    return:
      type: System.String
      description: "\nThe value of insight's channel enum or <strong>null</strong> if unknown. \n"
  overload: Microsoft.Health.ItemTypes.Insight.Channel*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Insight.AlgoClass
  commentId: P:Microsoft.Health.ItemTypes.Insight.AlgoClass
  id: AlgoClass
  parent: Microsoft.Health.ItemTypes.Insight
  langs:
  - csharp
  - vb
  name: AlgoClass
  nameWithType: Insight.AlgoClass
  fullName: Microsoft.Health.ItemTypes.Insight.AlgoClass
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Insight.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AlgoClass
    path: Insight.cs
    startLine: 368
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nRepresents the algorithm class used to create this Insight.\n"
  example: []
  syntax:
    content: public string AlgoClass { get; set; }
    content.vb: Public Property AlgoClass As String
    parameters: []
    return:
      type: System.String
      description: "\nThe value of insight's algo class enum or <strong>null</strong> if unknown.\n"
  overload: Microsoft.Health.ItemTypes.Insight.AlgoClass*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Insight.Directionality
  commentId: P:Microsoft.Health.ItemTypes.Insight.Directionality
  id: Directionality
  parent: Microsoft.Health.ItemTypes.Insight
  langs:
  - csharp
  - vb
  name: Directionality
  nameWithType: Insight.Directionality
  fullName: Microsoft.Health.ItemTypes.Insight.Directionality
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Insight.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Directionality
    path: Insight.cs
    startLine: 383
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nRepresents which way the Insight is trending. For example positive, negative or neutral.\n"
  example: []
  syntax:
    content: public string Directionality { get; set; }
    content.vb: Public Property Directionality As String
    parameters: []
    return:
      type: System.String
      description: "\nThe value of insight's directionality enum or <strong>null</strong> if unknown.\n"
  overload: Microsoft.Health.ItemTypes.Insight.Directionality*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Insight.TimespanPivot
  commentId: P:Microsoft.Health.ItemTypes.Insight.TimespanPivot
  id: TimespanPivot
  parent: Microsoft.Health.ItemTypes.Insight
  langs:
  - csharp
  - vb
  name: TimespanPivot
  nameWithType: Insight.TimespanPivot
  fullName: Microsoft.Health.ItemTypes.Insight.TimespanPivot
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Insight.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: TimespanPivot
    path: Insight.cs
    startLine: 398
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nRepresents the aggregation time span of the data. Example, data is aggregated weekly or daily.\n"
  example: []
  syntax:
    content: public string TimespanPivot { get; set; }
    content.vb: Public Property TimespanPivot As String
    parameters: []
    return:
      type: System.String
      description: "\nThe value of insight's timespan pivot enum or <strong>null</strong> if unknown.\n"
  overload: Microsoft.Health.ItemTypes.Insight.TimespanPivot*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Insight.ComparisonPivot
  commentId: P:Microsoft.Health.ItemTypes.Insight.ComparisonPivot
  id: ComparisonPivot
  parent: Microsoft.Health.ItemTypes.Insight
  langs:
  - csharp
  - vb
  name: ComparisonPivot
  nameWithType: Insight.ComparisonPivot
  fullName: Microsoft.Health.ItemTypes.Insight.ComparisonPivot
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Insight.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ComparisonPivot
    path: Insight.cs
    startLine: 413
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nRepresents how the user was compared for deriving this Insight. Example with themselves or people similar to the user.\n"
  example: []
  syntax:
    content: public string ComparisonPivot { get; set; }
    content.vb: Public Property ComparisonPivot As String
    parameters: []
    return:
      type: System.String
      description: "\nThe value of insight's comparison pivot enum or <strong>null</strong> if unknown.\n"
  overload: Microsoft.Health.ItemTypes.Insight.ComparisonPivot*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Insight.TonePivot
  commentId: P:Microsoft.Health.ItemTypes.Insight.TonePivot
  id: TonePivot
  parent: Microsoft.Health.ItemTypes.Insight
  langs:
  - csharp
  - vb
  name: TonePivot
  nameWithType: Insight.TonePivot
  fullName: Microsoft.Health.ItemTypes.Insight.TonePivot
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Insight.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: TonePivot
    path: Insight.cs
    startLine: 428
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nRepresents the tone of the Insight, like better or worse. \n"
  example: []
  syntax:
    content: public string TonePivot { get; set; }
    content.vb: Public Property TonePivot As String
    parameters: []
    return:
      type: System.String
      description: "\nThe value of insight's tone pivot enum or <strong>null</strong> if unknown.\n"
  overload: Microsoft.Health.ItemTypes.Insight.TonePivot*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Insight.ScopePivot
  commentId: P:Microsoft.Health.ItemTypes.Insight.ScopePivot
  id: ScopePivot
  parent: Microsoft.Health.ItemTypes.Insight
  langs:
  - csharp
  - vb
  name: ScopePivot
  nameWithType: Insight.ScopePivot
  fullName: Microsoft.Health.ItemTypes.Insight.ScopePivot
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Insight.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ScopePivot
    path: Insight.cs
    startLine: 443
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nRepresents the scope of the Insight like for a specific event or event types.\n"
  example: []
  syntax:
    content: public string ScopePivot { get; set; }
    content.vb: Public Property ScopePivot As String
    parameters: []
    return:
      type: System.String
      description: "\nThe value of insight's scope pivot enum or <strong>null</strong> if unknown.\n"
  overload: Microsoft.Health.ItemTypes.Insight.ScopePivot*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Insight.DataUsedPivot
  commentId: P:Microsoft.Health.ItemTypes.Insight.DataUsedPivot
  id: DataUsedPivot
  parent: Microsoft.Health.ItemTypes.Insight
  langs:
  - csharp
  - vb
  name: DataUsedPivot
  nameWithType: Insight.DataUsedPivot
  fullName: Microsoft.Health.ItemTypes.Insight.DataUsedPivot
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Insight.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DataUsedPivot
    path: Insight.cs
    startLine: 458
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nRepresents a list of data types used as input to the insight calculation.\n"
  example: []
  syntax:
    content: public List<string> DataUsedPivot { get; set; }
    content.vb: Public Property DataUsedPivot As List(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
      description: "\nList of datatype enum values or <strong>null</strong> if unknown.\n"
  overload: Microsoft.Health.ItemTypes.Insight.DataUsedPivot*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Insight.Annotation
  commentId: P:Microsoft.Health.ItemTypes.Insight.Annotation
  id: Annotation
  parent: Microsoft.Health.ItemTypes.Insight
  langs:
  - csharp
  - vb
  name: Annotation
  nameWithType: Insight.Annotation
  fullName: Microsoft.Health.ItemTypes.Insight.Annotation
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Insight.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Annotation
    path: Insight.cs
    startLine: 473
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nDescribes how we got to this conclusion and why this Insight is relevant to the user.\n"
  example: []
  syntax:
    content: public string Annotation { get; set; }
    content.vb: Public Property Annotation As String
    parameters: []
    return:
      type: System.String
      description: "\nThe value of annotation text or <strong>null</strong> if unknown.\n"
  overload: Microsoft.Health.ItemTypes.Insight.Annotation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Insight.Strength
  commentId: P:Microsoft.Health.ItemTypes.Insight.Strength
  id: Strength
  parent: Microsoft.Health.ItemTypes.Insight
  langs:
  - csharp
  - vb
  name: Strength
  nameWithType: Insight.Strength
  fullName: Microsoft.Health.ItemTypes.Insight.Strength
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Insight.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Strength
    path: Insight.cs
    startLine: 488
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nRepresents the strength of the data used for calculating the Insights.\n"
  example: []
  syntax:
    content: public double ? Strength { get; set; }
    content.vb: Public Property Strength As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
      description: "\nThe value representing strength of this insight or <strong>null</strong> if unknown.\n"
  overload: Microsoft.Health.ItemTypes.Insight.Strength*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Insight.Confidence
  commentId: P:Microsoft.Health.ItemTypes.Insight.Confidence
  id: Confidence
  parent: Microsoft.Health.ItemTypes.Insight
  langs:
  - csharp
  - vb
  name: Confidence
  nameWithType: Insight.Confidence
  fullName: Microsoft.Health.ItemTypes.Insight.Confidence
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Insight.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Confidence
    path: Insight.cs
    startLine: 503
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nConfidence level of the insight process that generated the insight.\n"
  example: []
  syntax:
    content: public double ? Confidence { get; set; }
    content.vb: Public Property Confidence As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
      description: "\nThe value representing the confidence or <strong>null</strong> if unknown.\n"
  overload: Microsoft.Health.ItemTypes.Insight.Confidence*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Insight.Origin
  commentId: P:Microsoft.Health.ItemTypes.Insight.Origin
  id: Origin
  parent: Microsoft.Health.ItemTypes.Insight
  langs:
  - csharp
  - vb
  name: Origin
  nameWithType: Insight.Origin
  fullName: Microsoft.Health.ItemTypes.Insight.Origin
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Insight.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Origin
    path: Insight.cs
    startLine: 518
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nWhere was this insight generated.\n"
  example: []
  syntax:
    content: public string Origin { get; set; }
    content.vb: Public Property Origin As String
    parameters: []
    return:
      type: System.String
      description: "\nThe value of the insight's origin or <strong>null</strong> if unknown.\n"
  overload: Microsoft.Health.ItemTypes.Insight.Origin*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Insight.InsightTags
  commentId: P:Microsoft.Health.ItemTypes.Insight.InsightTags
  id: InsightTags
  parent: Microsoft.Health.ItemTypes.Insight
  langs:
  - csharp
  - vb
  name: InsightTags
  nameWithType: Insight.InsightTags
  fullName: Microsoft.Health.ItemTypes.Insight.InsightTags
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Insight.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: InsightTags
    path: Insight.cs
    startLine: 533
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nTags associated with this insight. Can be used by clients for grouping, filtering etc.\n"
  example: []
  syntax:
    content: public List<string> InsightTags { get; set; }
    content.vb: Public Property InsightTags As List(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
      description: "\nList of tags associated with this insight or <strong>null</strong> if unknown.\n"
  overload: Microsoft.Health.ItemTypes.Insight.InsightTags*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Insight.Values
  commentId: P:Microsoft.Health.ItemTypes.Insight.Values
  id: Values
  parent: Microsoft.Health.ItemTypes.Insight
  langs:
  - csharp
  - vb
  name: Values
  nameWithType: Insight.Values
  fullName: Microsoft.Health.ItemTypes.Insight.Values
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Insight.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Values
    path: Insight.cs
    startLine: 549
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nContains the key-value collection associated with the Insight. Keys and their description is included\nin Insights Catalog.\n"
  example: []
  syntax:
    content: public Dictionary<string, object> Values { get; set; }
    content.vb: Public Property Values As Dictionary(Of String, Object)
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: "\nList of key-values containing the insight values or <strong>null</strong> if unknown.\n"
  overload: Microsoft.Health.ItemTypes.Insight.Values*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Insight.Links
  commentId: P:Microsoft.Health.ItemTypes.Insight.Links
  id: Links
  parent: Microsoft.Health.ItemTypes.Insight
  langs:
  - csharp
  - vb
  name: Links
  nameWithType: Insight.Links
  fullName: Microsoft.Health.ItemTypes.Insight.Links
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Insight.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Links
    path: Insight.cs
    startLine: 564
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets links for Insights.\n"
  example: []
  syntax:
    content: public Dictionary<string, object> Links { get; set; }
    content.vb: Public Property Links As Dictionary(Of String, Object)
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: "\nList of key-values containing links for this insight or <strong>null</strong> if unknown.\n"
  overload: Microsoft.Health.ItemTypes.Insight.Links*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Insight.Messages
  commentId: P:Microsoft.Health.ItemTypes.Insight.Messages
  id: Messages
  parent: Microsoft.Health.ItemTypes.Insight
  langs:
  - csharp
  - vb
  name: Messages
  nameWithType: Insight.Messages
  fullName: Microsoft.Health.ItemTypes.Insight.Messages
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Insight.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Messages
    path: Insight.cs
    startLine: 579
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets insight messages.\n"
  example: []
  syntax:
    content: public InsightMessages Messages { get; set; }
    content.vb: Public Property Messages As InsightMessages
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.InsightMessages
      description: "\nCollection of message strings associated with this insight.\n"
  overload: Microsoft.Health.ItemTypes.Insight.Messages*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Insight.Attribution
  commentId: P:Microsoft.Health.ItemTypes.Insight.Attribution
  id: Attribution
  parent: Microsoft.Health.ItemTypes.Insight
  langs:
  - csharp
  - vb
  name: Attribution
  nameWithType: Insight.Attribution
  fullName: Microsoft.Health.ItemTypes.Insight.Attribution
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Insight.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Attribution
    path: Insight.cs
    startLine: 594
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets insight attribution\n"
  example: []
  syntax:
    content: public InsightAttribution Attribution { get; set; }
    content.vb: Public Property Attribution As InsightAttribution
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.InsightAttribution
      description: "\nAttribution information for this insight.\n"
  overload: Microsoft.Health.ItemTypes.Insight.Attribution*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Health.ItemTypes
  commentId: N:Microsoft.Health.ItemTypes
  isExternal: false
  name: Microsoft.Health.ItemTypes
  nameWithType: Microsoft.Health.ItemTypes
  fullName: Microsoft.Health.ItemTypes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.HealthRecordItem
  commentId: T:Microsoft.Health.HealthRecordItem
  parent: Microsoft.Health
  isExternal: false
  name: HealthRecordItem
  nameWithType: HealthRecordItem
  fullName: Microsoft.Health.HealthRecordItem
- uid: Microsoft.Health.HealthRecordItem.Sign(System.Security.Cryptography.X509Certificates.X509Certificate2)
  commentId: M:Microsoft.Health.HealthRecordItem.Sign(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: true
  name: Sign(X509Certificate2)
  nameWithType: HealthRecordItem.Sign(X509Certificate2)
  fullName: Microsoft.Health.HealthRecordItem.Sign(System.Security.Cryptography.X509Certificates.X509Certificate2)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.Sign(System.Security.Cryptography.X509Certificates.X509Certificate2)
    name: Sign
    nameWithType: HealthRecordItem.Sign
    fullName: Microsoft.Health.HealthRecordItem.Sign
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2
    name: X509Certificate2
    nameWithType: X509Certificate2
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.Sign(System.Security.Cryptography.X509Certificates.X509Certificate2)
    name: Sign
    nameWithType: HealthRecordItem.Sign
    fullName: Microsoft.Health.HealthRecordItem.Sign
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2
    name: X509Certificate2
    nameWithType: X509Certificate2
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.IsSignatureValid
  commentId: M:Microsoft.Health.HealthRecordItem.IsSignatureValid
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: IsSignatureValid()
  nameWithType: HealthRecordItem.IsSignatureValid()
  fullName: Microsoft.Health.HealthRecordItem.IsSignatureValid()
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.IsSignatureValid
    name: IsSignatureValid
    nameWithType: HealthRecordItem.IsSignatureValid
    fullName: Microsoft.Health.HealthRecordItem.IsSignatureValid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.IsSignatureValid
    name: IsSignatureValid
    nameWithType: HealthRecordItem.IsSignatureValid
    fullName: Microsoft.Health.HealthRecordItem.IsSignatureValid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.ValidateCertificate
  commentId: M:Microsoft.Health.HealthRecordItem.ValidateCertificate
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: ValidateCertificate()
  nameWithType: HealthRecordItem.ValidateCertificate()
  fullName: Microsoft.Health.HealthRecordItem.ValidateCertificate()
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.ValidateCertificate
    name: ValidateCertificate
    nameWithType: HealthRecordItem.ValidateCertificate
    fullName: Microsoft.Health.HealthRecordItem.ValidateCertificate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.ValidateCertificate
    name: ValidateCertificate
    nameWithType: HealthRecordItem.ValidateCertificate
    fullName: Microsoft.Health.HealthRecordItem.ValidateCertificate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.Key
  commentId: P:Microsoft.Health.HealthRecordItem.Key
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: Key
  nameWithType: HealthRecordItem.Key
  fullName: Microsoft.Health.HealthRecordItem.Key
- uid: Microsoft.Health.HealthRecordItem.TypeName
  commentId: P:Microsoft.Health.HealthRecordItem.TypeName
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: TypeName
  nameWithType: HealthRecordItem.TypeName
  fullName: Microsoft.Health.HealthRecordItem.TypeName
- uid: Microsoft.Health.HealthRecordItem.EffectiveDate
  commentId: P:Microsoft.Health.HealthRecordItem.EffectiveDate
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: EffectiveDate
  nameWithType: HealthRecordItem.EffectiveDate
  fullName: Microsoft.Health.HealthRecordItem.EffectiveDate
- uid: Microsoft.Health.HealthRecordItem.State
  commentId: P:Microsoft.Health.HealthRecordItem.State
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: State
  nameWithType: HealthRecordItem.State
  fullName: Microsoft.Health.HealthRecordItem.State
- uid: Microsoft.Health.HealthRecordItem.Flags
  commentId: P:Microsoft.Health.HealthRecordItem.Flags
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: Flags
  nameWithType: HealthRecordItem.Flags
  fullName: Microsoft.Health.HealthRecordItem.Flags
- uid: Microsoft.Health.HealthRecordItem.IsPersonal
  commentId: P:Microsoft.Health.HealthRecordItem.IsPersonal
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: IsPersonal
  nameWithType: HealthRecordItem.IsPersonal
  fullName: Microsoft.Health.HealthRecordItem.IsPersonal
- uid: Microsoft.Health.HealthRecordItem.IsDownVersioned
  commentId: P:Microsoft.Health.HealthRecordItem.IsDownVersioned
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: IsDownVersioned
  nameWithType: HealthRecordItem.IsDownVersioned
  fullName: Microsoft.Health.HealthRecordItem.IsDownVersioned
- uid: Microsoft.Health.HealthRecordItem.IsUpVersioned
  commentId: P:Microsoft.Health.HealthRecordItem.IsUpVersioned
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: IsUpVersioned
  nameWithType: HealthRecordItem.IsUpVersioned
  fullName: Microsoft.Health.HealthRecordItem.IsUpVersioned
- uid: Microsoft.Health.HealthRecordItem.UpdatedEndDate
  commentId: P:Microsoft.Health.HealthRecordItem.UpdatedEndDate
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: UpdatedEndDate
  nameWithType: HealthRecordItem.UpdatedEndDate
  fullName: Microsoft.Health.HealthRecordItem.UpdatedEndDate
- uid: Microsoft.Health.HealthRecordItem.LastUpdated
  commentId: P:Microsoft.Health.HealthRecordItem.LastUpdated
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: LastUpdated
  nameWithType: HealthRecordItem.LastUpdated
  fullName: Microsoft.Health.HealthRecordItem.LastUpdated
- uid: Microsoft.Health.HealthRecordItem.Created
  commentId: P:Microsoft.Health.HealthRecordItem.Created
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: Created
  nameWithType: HealthRecordItem.Created
  fullName: Microsoft.Health.HealthRecordItem.Created
- uid: Microsoft.Health.HealthRecordItem.EffectivePermissions
  commentId: P:Microsoft.Health.HealthRecordItem.EffectivePermissions
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: EffectivePermissions
  nameWithType: HealthRecordItem.EffectivePermissions
  fullName: Microsoft.Health.HealthRecordItem.EffectivePermissions
- uid: Microsoft.Health.HealthRecordItem.IsImmutable
  commentId: P:Microsoft.Health.HealthRecordItem.IsImmutable
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: IsImmutable
  nameWithType: HealthRecordItem.IsImmutable
  fullName: Microsoft.Health.HealthRecordItem.IsImmutable
- uid: Microsoft.Health.HealthRecordItem.IsReadOnly
  commentId: P:Microsoft.Health.HealthRecordItem.IsReadOnly
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: IsReadOnly
  nameWithType: HealthRecordItem.IsReadOnly
  fullName: Microsoft.Health.HealthRecordItem.IsReadOnly
- uid: Microsoft.Health.HealthRecordItem.TypeSpecificData
  commentId: P:Microsoft.Health.HealthRecordItem.TypeSpecificData
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: TypeSpecificData
  nameWithType: HealthRecordItem.TypeSpecificData
  fullName: Microsoft.Health.HealthRecordItem.TypeSpecificData
- uid: Microsoft.Health.HealthRecordItem.TransformedXmlData
  commentId: P:Microsoft.Health.HealthRecordItem.TransformedXmlData
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: TransformedXmlData
  nameWithType: HealthRecordItem.TransformedXmlData
  fullName: Microsoft.Health.HealthRecordItem.TransformedXmlData
- uid: Microsoft.Health.HealthRecordItem.CommonData
  commentId: P:Microsoft.Health.HealthRecordItem.CommonData
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: CommonData
  nameWithType: HealthRecordItem.CommonData
  fullName: Microsoft.Health.HealthRecordItem.CommonData
- uid: Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.HealthRecordAccessor)
  commentId: M:Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.HealthRecordAccessor)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: GetBlobStore(HealthRecordAccessor)
  nameWithType: HealthRecordItem.GetBlobStore(HealthRecordAccessor)
  fullName: Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.HealthRecordAccessor)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.HealthRecordAccessor)
    name: GetBlobStore
    nameWithType: HealthRecordItem.GetBlobStore
    fullName: Microsoft.Health.HealthRecordItem.GetBlobStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.HealthRecordAccessor
    name: HealthRecordAccessor
    nameWithType: HealthRecordAccessor
    fullName: Microsoft.Health.HealthRecordAccessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.HealthRecordAccessor)
    name: GetBlobStore
    nameWithType: HealthRecordItem.GetBlobStore
    fullName: Microsoft.Health.HealthRecordItem.GetBlobStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.HealthRecordAccessor
    name: HealthRecordAccessor
    nameWithType: HealthRecordAccessor
    fullName: Microsoft.Health.HealthRecordAccessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.Package.ConnectPackageCreationParameters)
  commentId: M:Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.Package.ConnectPackageCreationParameters)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: GetBlobStore(ConnectPackageCreationParameters)
  nameWithType: HealthRecordItem.GetBlobStore(ConnectPackageCreationParameters)
  fullName: Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.Package.ConnectPackageCreationParameters)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.Package.ConnectPackageCreationParameters)
    name: GetBlobStore
    nameWithType: HealthRecordItem.GetBlobStore
    fullName: Microsoft.Health.HealthRecordItem.GetBlobStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.Package.ConnectPackageCreationParameters
    name: ConnectPackageCreationParameters
    nameWithType: ConnectPackageCreationParameters
    fullName: Microsoft.Health.Package.ConnectPackageCreationParameters
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.Package.ConnectPackageCreationParameters)
    name: GetBlobStore
    nameWithType: HealthRecordItem.GetBlobStore
    fullName: Microsoft.Health.HealthRecordItem.GetBlobStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.Package.ConnectPackageCreationParameters
    name: ConnectPackageCreationParameters
    nameWithType: ConnectPackageCreationParameters
    fullName: Microsoft.Health.Package.ConnectPackageCreationParameters
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.Tags
  commentId: P:Microsoft.Health.HealthRecordItem.Tags
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: Tags
  nameWithType: HealthRecordItem.Tags
  fullName: Microsoft.Health.HealthRecordItem.Tags
- uid: Microsoft.Health.HealthRecordItem.HealthRecordItemSignatures
  commentId: P:Microsoft.Health.HealthRecordItem.HealthRecordItemSignatures
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: HealthRecordItemSignatures
  nameWithType: HealthRecordItem.HealthRecordItemSignatures
  fullName: Microsoft.Health.HealthRecordItem.HealthRecordItemSignatures
- uid: Microsoft.Health.HealthRecordItem.Sections
  commentId: P:Microsoft.Health.HealthRecordItem.Sections
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: Sections
  nameWithType: HealthRecordItem.Sections
  fullName: Microsoft.Health.HealthRecordItem.Sections
- uid: Microsoft.Health.HealthRecordItem.GetSizeInBytes
  commentId: M:Microsoft.Health.HealthRecordItem.GetSizeInBytes
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: GetSizeInBytes()
  nameWithType: HealthRecordItem.GetSizeInBytes()
  fullName: Microsoft.Health.HealthRecordItem.GetSizeInBytes()
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.GetSizeInBytes
    name: GetSizeInBytes
    nameWithType: HealthRecordItem.GetSizeInBytes
    fullName: Microsoft.Health.HealthRecordItem.GetSizeInBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.GetSizeInBytes
    name: GetSizeInBytes
    nameWithType: HealthRecordItem.GetSizeInBytes
    fullName: Microsoft.Health.HealthRecordItem.GetSizeInBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.GetItemXml
  commentId: M:Microsoft.Health.HealthRecordItem.GetItemXml
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: GetItemXml()
  nameWithType: HealthRecordItem.GetItemXml()
  fullName: Microsoft.Health.HealthRecordItem.GetItemXml()
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.GetItemXml
    name: GetItemXml
    nameWithType: HealthRecordItem.GetItemXml
    fullName: Microsoft.Health.HealthRecordItem.GetItemXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.GetItemXml
    name: GetItemXml
    nameWithType: HealthRecordItem.GetItemXml
    fullName: Microsoft.Health.HealthRecordItem.GetItemXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections)
  commentId: M:Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: GetItemXml(HealthRecordItemSections)
  nameWithType: HealthRecordItem.GetItemXml(HealthRecordItemSections)
  fullName: Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections)
    name: GetItemXml
    nameWithType: HealthRecordItem.GetItemXml
    fullName: Microsoft.Health.HealthRecordItem.GetItemXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.HealthRecordItemSections
    name: HealthRecordItemSections
    nameWithType: HealthRecordItemSections
    fullName: Microsoft.Health.HealthRecordItemSections
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections)
    name: GetItemXml
    nameWithType: HealthRecordItem.GetItemXml
    fullName: Microsoft.Health.HealthRecordItem.GetItemXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.HealthRecordItemSections
    name: HealthRecordItemSections
    nameWithType: HealthRecordItemSections
    fullName: Microsoft.Health.HealthRecordItemSections
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.GetItemXml(System.String)
  commentId: M:Microsoft.Health.HealthRecordItem.GetItemXml(System.String)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: true
  name: GetItemXml(String)
  nameWithType: HealthRecordItem.GetItemXml(String)
  fullName: Microsoft.Health.HealthRecordItem.GetItemXml(System.String)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.GetItemXml(System.String)
    name: GetItemXml
    nameWithType: HealthRecordItem.GetItemXml
    fullName: Microsoft.Health.HealthRecordItem.GetItemXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.GetItemXml(System.String)
    name: GetItemXml
    nameWithType: HealthRecordItem.GetItemXml
    fullName: Microsoft.Health.HealthRecordItem.GetItemXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections,System.String)
  commentId: M:Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections,System.String)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: true
  name: GetItemXml(HealthRecordItemSections, String)
  nameWithType: HealthRecordItem.GetItemXml(HealthRecordItemSections, String)
  fullName: Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections, System.String)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections,System.String)
    name: GetItemXml
    nameWithType: HealthRecordItem.GetItemXml
    fullName: Microsoft.Health.HealthRecordItem.GetItemXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.HealthRecordItemSections
    name: HealthRecordItemSections
    nameWithType: HealthRecordItemSections
    fullName: Microsoft.Health.HealthRecordItemSections
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections,System.String)
    name: GetItemXml
    nameWithType: HealthRecordItem.GetItemXml
    fullName: Microsoft.Health.HealthRecordItem.GetItemXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.HealthRecordItemSections
    name: HealthRecordItemSections
    nameWithType: HealthRecordItemSections
    fullName: Microsoft.Health.HealthRecordItemSections
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.Serialize
  commentId: M:Microsoft.Health.HealthRecordItem.Serialize
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: Serialize()
  nameWithType: HealthRecordItem.Serialize()
  fullName: Microsoft.Health.HealthRecordItem.Serialize()
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.Serialize
    name: Serialize
    nameWithType: HealthRecordItem.Serialize
    fullName: Microsoft.Health.HealthRecordItem.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.Serialize
    name: Serialize
    nameWithType: HealthRecordItem.Serialize
    fullName: Microsoft.Health.HealthRecordItem.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.Deserialize(System.String)
  commentId: M:Microsoft.Health.HealthRecordItem.Deserialize(System.String)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: true
  name: Deserialize(String)
  nameWithType: HealthRecordItem.Deserialize(String)
  fullName: Microsoft.Health.HealthRecordItem.Deserialize(System.String)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.Deserialize(System.String)
    name: Deserialize
    nameWithType: HealthRecordItem.Deserialize
    fullName: Microsoft.Health.HealthRecordItem.Deserialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.Deserialize(System.String)
    name: Deserialize
    nameWithType: HealthRecordItem.Deserialize
    fullName: Microsoft.Health.HealthRecordItem.Deserialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: Microsoft.Health.ItemTypes.Insight
  commentId: T:Microsoft.Health.ItemTypes.Insight
  isExternal: false
  name: Insight
  nameWithType: Insight
  fullName: Microsoft.Health.ItemTypes.Insight
- uid: Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)
  commentId: M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)
- uid: Microsoft.Health.ItemTypes.Insight.#ctor*
  commentId: Overload:Microsoft.Health.ItemTypes.Insight.#ctor
  isExternal: false
  name: Insight
  nameWithType: Insight.Insight
  fullName: Microsoft.Health.ItemTypes.Insight.Insight
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.ItemTypes.HealthServiceDateTime
  commentId: T:Microsoft.Health.ItemTypes.HealthServiceDateTime
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: HealthServiceDateTime
  nameWithType: HealthServiceDateTime
  fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Microsoft.Health.HealthRecordItem.ParseXml(System.Xml.XPath.IXPathNavigable)
  commentId: M:Microsoft.Health.HealthRecordItem.ParseXml(System.Xml.XPath.IXPathNavigable)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: true
  name: ParseXml(IXPathNavigable)
  nameWithType: HealthRecordItem.ParseXml(IXPathNavigable)
  fullName: Microsoft.Health.HealthRecordItem.ParseXml(System.Xml.XPath.IXPathNavigable)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.ParseXml(System.Xml.XPath.IXPathNavigable)
    name: ParseXml
    nameWithType: HealthRecordItem.ParseXml
    fullName: Microsoft.Health.HealthRecordItem.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.IXPathNavigable
    name: IXPathNavigable
    nameWithType: IXPathNavigable
    fullName: System.Xml.XPath.IXPathNavigable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.ParseXml(System.Xml.XPath.IXPathNavigable)
    name: ParseXml
    nameWithType: HealthRecordItem.ParseXml
    fullName: Microsoft.Health.HealthRecordItem.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.IXPathNavigable
    name: IXPathNavigable
    nameWithType: IXPathNavigable
    fullName: System.Xml.XPath.IXPathNavigable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Insight.ParseXml*
  commentId: Overload:Microsoft.Health.ItemTypes.Insight.ParseXml
  isExternal: false
  name: ParseXml
  nameWithType: Insight.ParseXml
  fullName: Microsoft.Health.ItemTypes.Insight.ParseXml
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
- uid: System.Xml.XPath.IXPathNavigable
  commentId: T:System.Xml.XPath.IXPathNavigable
  parent: System.Xml.XPath
  isExternal: true
  name: IXPathNavigable
  nameWithType: IXPathNavigable
  fullName: System.Xml.XPath.IXPathNavigable
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: false
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: Microsoft.Health.HealthRecordItem.WriteXml(System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.HealthRecordItem.WriteXml(System.Xml.XmlWriter)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: true
  name: WriteXml(XmlWriter)
  nameWithType: HealthRecordItem.WriteXml(XmlWriter)
  fullName: Microsoft.Health.HealthRecordItem.WriteXml(System.Xml.XmlWriter)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItem.WriteXml
    fullName: Microsoft.Health.HealthRecordItem.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItem.WriteXml
    fullName: Microsoft.Health.HealthRecordItem.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Insight.WriteXml*
  commentId: Overload:Microsoft.Health.ItemTypes.Insight.WriteXml
  isExternal: false
  name: WriteXml
  nameWithType: Insight.WriteXml
  fullName: Microsoft.Health.ItemTypes.Insight.WriteXml
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Insight.ToString*
  commentId: Overload:Microsoft.Health.ItemTypes.Insight.ToString
  isExternal: false
  name: ToString
  nameWithType: Insight.ToString
  fullName: Microsoft.Health.ItemTypes.Insight.ToString
- uid: Microsoft.Health.ItemTypes.Insight.RaisedInsightId*
  commentId: Overload:Microsoft.Health.ItemTypes.Insight.RaisedInsightId
  isExternal: false
  name: RaisedInsightId
  nameWithType: Insight.RaisedInsightId
  fullName: Microsoft.Health.ItemTypes.Insight.RaisedInsightId
- uid: Microsoft.Health.ItemTypes.Insight.CatalogId*
  commentId: Overload:Microsoft.Health.ItemTypes.Insight.CatalogId
  isExternal: false
  name: CatalogId
  nameWithType: Insight.CatalogId
  fullName: Microsoft.Health.ItemTypes.Insight.CatalogId
- uid: Microsoft.Health.ItemTypes.Insight.When*
  commentId: Overload:Microsoft.Health.ItemTypes.Insight.When
  isExternal: false
  name: When
  nameWithType: Insight.When
  fullName: Microsoft.Health.ItemTypes.Insight.When
- uid: Microsoft.Health.ItemTypes.Insight.ExpirationDate*
  commentId: Overload:Microsoft.Health.ItemTypes.Insight.ExpirationDate
  isExternal: false
  name: ExpirationDate
  nameWithType: Insight.ExpirationDate
  fullName: Microsoft.Health.ItemTypes.Insight.ExpirationDate
- uid: Microsoft.Health.ItemTypes.Insight.Channel*
  commentId: Overload:Microsoft.Health.ItemTypes.Insight.Channel
  isExternal: false
  name: Channel
  nameWithType: Insight.Channel
  fullName: Microsoft.Health.ItemTypes.Insight.Channel
- uid: Microsoft.Health.ItemTypes.Insight.AlgoClass*
  commentId: Overload:Microsoft.Health.ItemTypes.Insight.AlgoClass
  isExternal: false
  name: AlgoClass
  nameWithType: Insight.AlgoClass
  fullName: Microsoft.Health.ItemTypes.Insight.AlgoClass
- uid: Microsoft.Health.ItemTypes.Insight.Directionality*
  commentId: Overload:Microsoft.Health.ItemTypes.Insight.Directionality
  isExternal: false
  name: Directionality
  nameWithType: Insight.Directionality
  fullName: Microsoft.Health.ItemTypes.Insight.Directionality
- uid: Microsoft.Health.ItemTypes.Insight.TimespanPivot*
  commentId: Overload:Microsoft.Health.ItemTypes.Insight.TimespanPivot
  isExternal: false
  name: TimespanPivot
  nameWithType: Insight.TimespanPivot
  fullName: Microsoft.Health.ItemTypes.Insight.TimespanPivot
- uid: Microsoft.Health.ItemTypes.Insight.ComparisonPivot*
  commentId: Overload:Microsoft.Health.ItemTypes.Insight.ComparisonPivot
  isExternal: false
  name: ComparisonPivot
  nameWithType: Insight.ComparisonPivot
  fullName: Microsoft.Health.ItemTypes.Insight.ComparisonPivot
- uid: Microsoft.Health.ItemTypes.Insight.TonePivot*
  commentId: Overload:Microsoft.Health.ItemTypes.Insight.TonePivot
  isExternal: false
  name: TonePivot
  nameWithType: Insight.TonePivot
  fullName: Microsoft.Health.ItemTypes.Insight.TonePivot
- uid: Microsoft.Health.ItemTypes.Insight.ScopePivot*
  commentId: Overload:Microsoft.Health.ItemTypes.Insight.ScopePivot
  isExternal: false
  name: ScopePivot
  nameWithType: Insight.ScopePivot
  fullName: Microsoft.Health.ItemTypes.Insight.ScopePivot
- uid: Microsoft.Health.ItemTypes.Insight.DataUsedPivot*
  commentId: Overload:Microsoft.Health.ItemTypes.Insight.DataUsedPivot
  isExternal: false
  name: DataUsedPivot
  nameWithType: Insight.DataUsedPivot
  fullName: Microsoft.Health.ItemTypes.Insight.DataUsedPivot
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Health.ItemTypes.Insight.Annotation*
  commentId: Overload:Microsoft.Health.ItemTypes.Insight.Annotation
  isExternal: false
  name: Annotation
  nameWithType: Insight.Annotation
  fullName: Microsoft.Health.ItemTypes.Insight.Annotation
- uid: Microsoft.Health.ItemTypes.Insight.Strength*
  commentId: Overload:Microsoft.Health.ItemTypes.Insight.Strength
  isExternal: false
  name: Strength
  nameWithType: Insight.Strength
  fullName: Microsoft.Health.ItemTypes.Insight.Strength
- uid: System.Nullable{System.Double}
  commentId: T:System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  nameWithType.vb: Nullable(Of Double)
  fullName.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Insight.Confidence*
  commentId: Overload:Microsoft.Health.ItemTypes.Insight.Confidence
  isExternal: false
  name: Confidence
  nameWithType: Insight.Confidence
  fullName: Microsoft.Health.ItemTypes.Insight.Confidence
- uid: Microsoft.Health.ItemTypes.Insight.Origin*
  commentId: Overload:Microsoft.Health.ItemTypes.Insight.Origin
  isExternal: false
  name: Origin
  nameWithType: Insight.Origin
  fullName: Microsoft.Health.ItemTypes.Insight.Origin
- uid: Microsoft.Health.ItemTypes.Insight.InsightTags*
  commentId: Overload:Microsoft.Health.ItemTypes.Insight.InsightTags
  isExternal: false
  name: InsightTags
  nameWithType: Insight.InsightTags
  fullName: Microsoft.Health.ItemTypes.Insight.InsightTags
- uid: Microsoft.Health.ItemTypes.Insight.Values*
  commentId: Overload:Microsoft.Health.ItemTypes.Insight.Values
  isExternal: false
  name: Values
  nameWithType: Insight.Values
  fullName: Microsoft.Health.ItemTypes.Insight.Values
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Object>
  nameWithType: Dictionary<String, Object>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Object>
  nameWithType.vb: Dictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Object)
  name.vb: Dictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Insight.Links*
  commentId: Overload:Microsoft.Health.ItemTypes.Insight.Links
  isExternal: false
  name: Links
  nameWithType: Insight.Links
  fullName: Microsoft.Health.ItemTypes.Insight.Links
- uid: Microsoft.Health.ItemTypes.Insight.Messages*
  commentId: Overload:Microsoft.Health.ItemTypes.Insight.Messages
  isExternal: false
  name: Messages
  nameWithType: Insight.Messages
  fullName: Microsoft.Health.ItemTypes.Insight.Messages
- uid: Microsoft.Health.ItemTypes.InsightMessages
  commentId: T:Microsoft.Health.ItemTypes.InsightMessages
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: InsightMessages
  nameWithType: InsightMessages
  fullName: Microsoft.Health.ItemTypes.InsightMessages
- uid: Microsoft.Health.ItemTypes.Insight.Attribution*
  commentId: Overload:Microsoft.Health.ItemTypes.Insight.Attribution
  isExternal: false
  name: Attribution
  nameWithType: Insight.Attribution
  fullName: Microsoft.Health.ItemTypes.Insight.Attribution
- uid: Microsoft.Health.ItemTypes.InsightAttribution
  commentId: T:Microsoft.Health.ItemTypes.InsightAttribution
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: InsightAttribution
  nameWithType: InsightAttribution
  fullName: Microsoft.Health.ItemTypes.InsightAttribution
