### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.ItemTypes.Medication
  commentId: T:Microsoft.Health.ItemTypes.Medication
  id: Medication
  parent: Microsoft.Health.ItemTypes
  children:
  - Microsoft.Health.ItemTypes.Medication.#ctor
  - Microsoft.Health.ItemTypes.Medication.#ctor(Microsoft.Health.ItemTypes.CodableValue)
  - Microsoft.Health.ItemTypes.Medication.DateDiscontinued
  - Microsoft.Health.ItemTypes.Medication.DateStarted
  - Microsoft.Health.ItemTypes.Medication.Dose
  - Microsoft.Health.ItemTypes.Medication.Frequency
  - Microsoft.Health.ItemTypes.Medication.GenericName
  - Microsoft.Health.ItemTypes.Medication.Indication
  - Microsoft.Health.ItemTypes.Medication.Name
  - Microsoft.Health.ItemTypes.Medication.ParseXml(System.Xml.XPath.IXPathNavigable)
  - Microsoft.Health.ItemTypes.Medication.Prescribed
  - Microsoft.Health.ItemTypes.Medication.Prescription
  - Microsoft.Health.ItemTypes.Medication.Route
  - Microsoft.Health.ItemTypes.Medication.Strength
  - Microsoft.Health.ItemTypes.Medication.ToString
  - Microsoft.Health.ItemTypes.Medication.TypeId
  - Microsoft.Health.ItemTypes.Medication.WriteXml(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: Medication
  nameWithType: Medication
  fullName: Microsoft.Health.ItemTypes.Medication
  type: Class
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Medication.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Medication
    path: Medication.cs
    startLine: 20
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nRepresents a medication health record item.\n"
  example: []
  syntax:
    content: 'public class Medication : HealthRecordItem'
    content.vb: >-
      Public Class Medication
          Inherits HealthRecordItem
  inheritance:
  - System.Object
  - Microsoft.Health.HealthRecordItem
  inheritedMembers:
  - Microsoft.Health.HealthRecordItem.Sign(System.Security.Cryptography.X509Certificates.X509Certificate2)
  - Microsoft.Health.HealthRecordItem.IsSignatureValid
  - Microsoft.Health.HealthRecordItem.ValidateCertificate
  - Microsoft.Health.HealthRecordItem.Key
  - Microsoft.Health.HealthRecordItem.TypeName
  - Microsoft.Health.HealthRecordItem.EffectiveDate
  - Microsoft.Health.HealthRecordItem.State
  - Microsoft.Health.HealthRecordItem.Flags
  - Microsoft.Health.HealthRecordItem.IsPersonal
  - Microsoft.Health.HealthRecordItem.IsDownVersioned
  - Microsoft.Health.HealthRecordItem.IsUpVersioned
  - Microsoft.Health.HealthRecordItem.UpdatedEndDate
  - Microsoft.Health.HealthRecordItem.LastUpdated
  - Microsoft.Health.HealthRecordItem.Created
  - Microsoft.Health.HealthRecordItem.EffectivePermissions
  - Microsoft.Health.HealthRecordItem.IsImmutable
  - Microsoft.Health.HealthRecordItem.IsReadOnly
  - Microsoft.Health.HealthRecordItem.TypeSpecificData
  - Microsoft.Health.HealthRecordItem.TransformedXmlData
  - Microsoft.Health.HealthRecordItem.CommonData
  - Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.HealthRecordAccessor)
  - Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.Package.ConnectPackageCreationParameters)
  - Microsoft.Health.HealthRecordItem.Tags
  - Microsoft.Health.HealthRecordItem.HealthRecordItemSignatures
  - Microsoft.Health.HealthRecordItem.Sections
  - Microsoft.Health.HealthRecordItem.GetSizeInBytes
  - Microsoft.Health.HealthRecordItem.GetItemXml
  - Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections)
  - Microsoft.Health.HealthRecordItem.GetItemXml(System.String)
  - Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections,System.String)
  - Microsoft.Health.HealthRecordItem.Serialize
  - Microsoft.Health.HealthRecordItem.Deserialize(System.String)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.ItemTypes.Medication.#ctor
  commentId: M:Microsoft.Health.ItemTypes.Medication.#ctor
  id: '#ctor'
  parent: Microsoft.Health.ItemTypes.Medication
  langs:
  - csharp
  - vb
  name: Medication()
  nameWithType: Medication.Medication()
  fullName: Microsoft.Health.ItemTypes.Medication.Medication()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Medication.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: Medication.cs
    startLine: 33
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.Medication\" data-throw-if-not-resolved=\"false\"></xref> class with default \nvalues.\n"
  remarks: "\nThe item is not added to the health record until the\n<xref href=\"Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)\" data-throw-if-not-resolved=\"false\"></xref> method \nis called.\n"
  example: []
  syntax:
    content: public Medication()
    content.vb: Public Sub New
  overload: Microsoft.Health.ItemTypes.Medication.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Medication.#ctor(Microsoft.Health.ItemTypes.CodableValue)
  commentId: M:Microsoft.Health.ItemTypes.Medication.#ctor(Microsoft.Health.ItemTypes.CodableValue)
  id: '#ctor(Microsoft.Health.ItemTypes.CodableValue)'
  parent: Microsoft.Health.ItemTypes.Medication
  langs:
  - csharp
  - vb
  name: Medication(CodableValue)
  nameWithType: Medication.Medication(CodableValue)
  fullName: Microsoft.Health.ItemTypes.Medication.Medication(Microsoft.Health.ItemTypes.CodableValue)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Medication.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: Medication.cs
    startLine: 50
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.Medication\" data-throw-if-not-resolved=\"false\"></xref> class with the specified name.\n"
  example: []
  syntax:
    content: public Medication(CodableValue name)
    content.vb: Public Sub New(name As CodableValue)
    parameters:
    - id: name
      type: Microsoft.Health.ItemTypes.CodableValue
      description: "\nThe name of the medication.\n"
  overload: Microsoft.Health.ItemTypes.Medication.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nIf <span class=\"paramref\">name</span> is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Medication.TypeId
  commentId: F:Microsoft.Health.ItemTypes.Medication.TypeId
  id: TypeId
  parent: Microsoft.Health.ItemTypes.Medication
  langs:
  - csharp
  - vb
  name: TypeId
  nameWithType: Medication.TypeId
  fullName: Microsoft.Health.ItemTypes.Medication.TypeId
  type: Field
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Medication.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: TypeId
    path: Medication.cs
    startLine: 60
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nThe unique identifier for the item type.\n"
  example: []
  syntax:
    content: public static readonly Guid TypeId
    content.vb: Public Shared ReadOnly TypeId As Guid
    return:
      type: System.Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Health.ItemTypes.Medication.ParseXml(System.Xml.XPath.IXPathNavigable)
  commentId: M:Microsoft.Health.ItemTypes.Medication.ParseXml(System.Xml.XPath.IXPathNavigable)
  id: ParseXml(System.Xml.XPath.IXPathNavigable)
  parent: Microsoft.Health.ItemTypes.Medication
  langs:
  - csharp
  - vb
  name: ParseXml(IXPathNavigable)
  nameWithType: Medication.ParseXml(IXPathNavigable)
  fullName: Microsoft.Health.ItemTypes.Medication.ParseXml(System.Xml.XPath.IXPathNavigable)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Medication.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ParseXml
    path: Medication.cs
    startLine: 76
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nPopulates this medication instance from the data in the XML.\n"
  example: []
  syntax:
    content: protected override void ParseXml(IXPathNavigable typeSpecificXml)
    content.vb: Protected Overrides Sub ParseXml(typeSpecificXml As IXPathNavigable)
    parameters:
    - id: typeSpecificXml
      type: System.Xml.XPath.IXPathNavigable
      description: "\nThe XML to get the medication data from.\n"
  overridden: Microsoft.Health.HealthRecordItem.ParseXml(System.Xml.XPath.IXPathNavigable)
  overload: Microsoft.Health.ItemTypes.Medication.ParseXml*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nIf the first node in <span class=\"paramref\">typeSpecificXml</span> is not\na medication node.\n"
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Health.ItemTypes.Medication.WriteXml(System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.Medication.WriteXml(System.Xml.XmlWriter)
  id: WriteXml(System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.Medication
  langs:
  - csharp
  - vb
  name: WriteXml(XmlWriter)
  nameWithType: Medication.WriteXml(XmlWriter)
  fullName: Microsoft.Health.ItemTypes.Medication.WriteXml(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Medication.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteXml
    path: Medication.cs
    startLine: 133
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nWrites the medication data to the specified XmlWriter.\n"
  example: []
  syntax:
    content: public override void WriteXml(XmlWriter writer)
    content.vb: Public Overrides Sub WriteXml(writer As XmlWriter)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "\nThe XmlWriter to write the medication data to.\n"
  overridden: Microsoft.Health.HealthRecordItem.WriteXml(System.Xml.XmlWriter)
  overload: Microsoft.Health.ItemTypes.Medication.WriteXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">writer</span> parameter is <strong>null</strong>.\n"
  - type: Microsoft.Health.HealthRecordItemSerializationException
    commentId: T:Microsoft.Health.HealthRecordItemSerializationException
    description: "\nThe <xref href=\"Microsoft.Health.ItemTypes.Medication.Name\" data-throw-if-not-resolved=\"false\"></xref> property has not been set.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.Medication.Name
  commentId: P:Microsoft.Health.ItemTypes.Medication.Name
  id: Name
  parent: Microsoft.Health.ItemTypes.Medication
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Medication.Name
  fullName: Microsoft.Health.ItemTypes.Medication.Name
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Medication.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Name
    path: Medication.cs
    startLine: 216
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the medication name and clinical code.\n"
  example: []
  syntax:
    content: public CodableValue Name { get; set; }
    content.vb: Public Property Name As CodableValue
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.CodableValue
  overload: Microsoft.Health.ItemTypes.Medication.Name*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nIf <span class=\"paramref\">value</span> is <strong>null</strong> on set.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Medication.GenericName
  commentId: P:Microsoft.Health.ItemTypes.Medication.GenericName
  id: GenericName
  parent: Microsoft.Health.ItemTypes.Medication
  langs:
  - csharp
  - vb
  name: GenericName
  nameWithType: Medication.GenericName
  fullName: Microsoft.Health.ItemTypes.Medication.GenericName
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Medication.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GenericName
    path: Medication.cs
    startLine: 236
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the generic name of the medication.\n"
  remarks: "\nIf the value is not known, it will be set to <strong>null</strong>.\n"
  example: []
  syntax:
    content: public CodableValue GenericName { get; set; }
    content.vb: Public Property GenericName As CodableValue
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.CodableValue
  overload: Microsoft.Health.ItemTypes.Medication.GenericName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Medication.Dose
  commentId: P:Microsoft.Health.ItemTypes.Medication.Dose
  id: Dose
  parent: Microsoft.Health.ItemTypes.Medication
  langs:
  - csharp
  - vb
  name: Dose
  nameWithType: Medication.Dose
  fullName: Microsoft.Health.ItemTypes.Medication.Dose
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Medication.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Dose
    path: Medication.cs
    startLine: 252
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the dose of the medication.\n"
  remarks: "\nIf the value is not known, it will be set to <strong>null</strong>.\nExamples: 1 tablet, 50 ml.\n"
  example: []
  syntax:
    content: public GeneralMeasurement Dose { get; set; }
    content.vb: Public Property Dose As GeneralMeasurement
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.GeneralMeasurement
  overload: Microsoft.Health.ItemTypes.Medication.Dose*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Medication.Strength
  commentId: P:Microsoft.Health.ItemTypes.Medication.Strength
  id: Strength
  parent: Microsoft.Health.ItemTypes.Medication
  langs:
  - csharp
  - vb
  name: Strength
  nameWithType: Medication.Strength
  fullName: Microsoft.Health.ItemTypes.Medication.Strength
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Medication.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Strength
    path: Medication.cs
    startLine: 268
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the strength of the medication.\n"
  remarks: "\nIf the value is not known, it will be set to <strong>null</strong>.\nExamples: 500 mg, 10 mg/ml.\n"
  example: []
  syntax:
    content: public GeneralMeasurement Strength { get; set; }
    content.vb: Public Property Strength As GeneralMeasurement
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.GeneralMeasurement
  overload: Microsoft.Health.ItemTypes.Medication.Strength*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Medication.Frequency
  commentId: P:Microsoft.Health.ItemTypes.Medication.Frequency
  id: Frequency
  parent: Microsoft.Health.ItemTypes.Medication
  langs:
  - csharp
  - vb
  name: Frequency
  nameWithType: Medication.Frequency
  fullName: Microsoft.Health.ItemTypes.Medication.Frequency
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Medication.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Frequency
    path: Medication.cs
    startLine: 284
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets how often the medication is taken.\n"
  remarks: "\nIf the value is not known, it will be set to <strong>null</strong>.\nExamples: 1 tablet per day, 2 every 6 hours, as needed.\n"
  example: []
  syntax:
    content: public GeneralMeasurement Frequency { get; set; }
    content.vb: Public Property Frequency As GeneralMeasurement
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.GeneralMeasurement
  overload: Microsoft.Health.ItemTypes.Medication.Frequency*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Medication.Route
  commentId: P:Microsoft.Health.ItemTypes.Medication.Route
  id: Route
  parent: Microsoft.Health.ItemTypes.Medication
  langs:
  - csharp
  - vb
  name: Route
  nameWithType: Medication.Route
  fullName: Microsoft.Health.ItemTypes.Medication.Route
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Medication.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Route
    path: Medication.cs
    startLine: 300
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the route by which the medication is administered.\n"
  remarks: "\nIf the value is not known, it will be set to <strong>null</strong>.\nThe preferred vocabulary for route is \"medication-routes\".\n"
  example: []
  syntax:
    content: public CodableValue Route { get; set; }
    content.vb: Public Property Route As CodableValue
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.CodableValue
  overload: Microsoft.Health.ItemTypes.Medication.Route*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Medication.Indication
  commentId: P:Microsoft.Health.ItemTypes.Medication.Indication
  id: Indication
  parent: Microsoft.Health.ItemTypes.Medication
  langs:
  - csharp
  - vb
  name: Indication
  nameWithType: Medication.Indication
  fullName: Microsoft.Health.ItemTypes.Medication.Indication
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Medication.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Indication
    path: Medication.cs
    startLine: 315
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the indication for the medication.\n"
  remarks: "\nIf the value is not known, it will be set to <strong>null</strong>.\n"
  example: []
  syntax:
    content: public CodableValue Indication { get; set; }
    content.vb: Public Property Indication As CodableValue
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.CodableValue
  overload: Microsoft.Health.ItemTypes.Medication.Indication*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Medication.DateStarted
  commentId: P:Microsoft.Health.ItemTypes.Medication.DateStarted
  id: DateStarted
  parent: Microsoft.Health.ItemTypes.Medication
  langs:
  - csharp
  - vb
  name: DateStarted
  nameWithType: Medication.DateStarted
  fullName: Microsoft.Health.ItemTypes.Medication.DateStarted
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Medication.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DateStarted
    path: Medication.cs
    startLine: 330
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the date on which the person started taken the medication.\n"
  remarks: "\nIf the value is not known, it will be set to <strong>null</strong>.\n"
  example: []
  syntax:
    content: public ApproximateDateTime DateStarted { get; set; }
    content.vb: Public Property DateStarted As ApproximateDateTime
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.ApproximateDateTime
  overload: Microsoft.Health.ItemTypes.Medication.DateStarted*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Medication.DateDiscontinued
  commentId: P:Microsoft.Health.ItemTypes.Medication.DateDiscontinued
  id: DateDiscontinued
  parent: Microsoft.Health.ItemTypes.Medication
  langs:
  - csharp
  - vb
  name: DateDiscontinued
  nameWithType: Medication.DateDiscontinued
  fullName: Microsoft.Health.ItemTypes.Medication.DateDiscontinued
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Medication.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DateDiscontinued
    path: Medication.cs
    startLine: 345
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the date on which the medication was discontinued.\n"
  remarks: "\nIf the value is not known, it will be set to <strong>null</strong>.\n"
  example: []
  syntax:
    content: public ApproximateDateTime DateDiscontinued { get; set; }
    content.vb: Public Property DateDiscontinued As ApproximateDateTime
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.ApproximateDateTime
  overload: Microsoft.Health.ItemTypes.Medication.DateDiscontinued*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Medication.Prescribed
  commentId: P:Microsoft.Health.ItemTypes.Medication.Prescribed
  id: Prescribed
  parent: Microsoft.Health.ItemTypes.Medication
  langs:
  - csharp
  - vb
  name: Prescribed
  nameWithType: Medication.Prescribed
  fullName: Microsoft.Health.ItemTypes.Medication.Prescribed
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Medication.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Prescribed
    path: Medication.cs
    startLine: 364
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the source of the prescription.\n"
  remarks: "\nA medication that is prescribed by a physician should code \"prescribed\"\ninto this element. \nIf the value is not known, it will be set to <strong>null</strong>.\nThe preferred vocabulary for prescribed is \"medication-prescribed\".\n"
  example: []
  syntax:
    content: public CodableValue Prescribed { get; set; }
    content.vb: Public Property Prescribed As CodableValue
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.CodableValue
  overload: Microsoft.Health.ItemTypes.Medication.Prescribed*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Medication.Prescription
  commentId: P:Microsoft.Health.ItemTypes.Medication.Prescription
  id: Prescription
  parent: Microsoft.Health.ItemTypes.Medication
  langs:
  - csharp
  - vb
  name: Prescription
  nameWithType: Medication.Prescription
  fullName: Microsoft.Health.ItemTypes.Medication.Prescription
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Medication.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Prescription
    path: Medication.cs
    startLine: 379
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the prescription for the medication.\n"
  remarks: "\nIf the value is not known, it will be set to <strong>null</strong>.\n"
  example: []
  syntax:
    content: public Prescription Prescription { get; set; }
    content.vb: Public Property Prescription As Prescription
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.Prescription
  overload: Microsoft.Health.ItemTypes.Medication.Prescription*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Medication.ToString
  commentId: M:Microsoft.Health.ItemTypes.Medication.ToString
  id: ToString
  parent: Microsoft.Health.ItemTypes.Medication
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Medication.ToString()
  fullName: Microsoft.Health.ItemTypes.Medication.ToString()
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Medication.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ToString
    path: Medication.cs
    startLine: 394
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets a string representation of the medication.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\nA string representation of the medication.\n"
  overridden: System.Object.ToString
  overload: Microsoft.Health.ItemTypes.Medication.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Health.ItemTypes
  commentId: N:Microsoft.Health.ItemTypes
  isExternal: false
  name: Microsoft.Health.ItemTypes
  nameWithType: Microsoft.Health.ItemTypes
  fullName: Microsoft.Health.ItemTypes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.HealthRecordItem
  commentId: T:Microsoft.Health.HealthRecordItem
  parent: Microsoft.Health
  isExternal: false
  name: HealthRecordItem
  nameWithType: HealthRecordItem
  fullName: Microsoft.Health.HealthRecordItem
- uid: Microsoft.Health.HealthRecordItem.Sign(System.Security.Cryptography.X509Certificates.X509Certificate2)
  commentId: M:Microsoft.Health.HealthRecordItem.Sign(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: true
  name: Sign(X509Certificate2)
  nameWithType: HealthRecordItem.Sign(X509Certificate2)
  fullName: Microsoft.Health.HealthRecordItem.Sign(System.Security.Cryptography.X509Certificates.X509Certificate2)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.Sign(System.Security.Cryptography.X509Certificates.X509Certificate2)
    name: Sign
    nameWithType: HealthRecordItem.Sign
    fullName: Microsoft.Health.HealthRecordItem.Sign
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2
    name: X509Certificate2
    nameWithType: X509Certificate2
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.Sign(System.Security.Cryptography.X509Certificates.X509Certificate2)
    name: Sign
    nameWithType: HealthRecordItem.Sign
    fullName: Microsoft.Health.HealthRecordItem.Sign
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2
    name: X509Certificate2
    nameWithType: X509Certificate2
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.IsSignatureValid
  commentId: M:Microsoft.Health.HealthRecordItem.IsSignatureValid
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: IsSignatureValid()
  nameWithType: HealthRecordItem.IsSignatureValid()
  fullName: Microsoft.Health.HealthRecordItem.IsSignatureValid()
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.IsSignatureValid
    name: IsSignatureValid
    nameWithType: HealthRecordItem.IsSignatureValid
    fullName: Microsoft.Health.HealthRecordItem.IsSignatureValid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.IsSignatureValid
    name: IsSignatureValid
    nameWithType: HealthRecordItem.IsSignatureValid
    fullName: Microsoft.Health.HealthRecordItem.IsSignatureValid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.ValidateCertificate
  commentId: M:Microsoft.Health.HealthRecordItem.ValidateCertificate
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: ValidateCertificate()
  nameWithType: HealthRecordItem.ValidateCertificate()
  fullName: Microsoft.Health.HealthRecordItem.ValidateCertificate()
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.ValidateCertificate
    name: ValidateCertificate
    nameWithType: HealthRecordItem.ValidateCertificate
    fullName: Microsoft.Health.HealthRecordItem.ValidateCertificate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.ValidateCertificate
    name: ValidateCertificate
    nameWithType: HealthRecordItem.ValidateCertificate
    fullName: Microsoft.Health.HealthRecordItem.ValidateCertificate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.Key
  commentId: P:Microsoft.Health.HealthRecordItem.Key
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: Key
  nameWithType: HealthRecordItem.Key
  fullName: Microsoft.Health.HealthRecordItem.Key
- uid: Microsoft.Health.HealthRecordItem.TypeName
  commentId: P:Microsoft.Health.HealthRecordItem.TypeName
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: TypeName
  nameWithType: HealthRecordItem.TypeName
  fullName: Microsoft.Health.HealthRecordItem.TypeName
- uid: Microsoft.Health.HealthRecordItem.EffectiveDate
  commentId: P:Microsoft.Health.HealthRecordItem.EffectiveDate
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: EffectiveDate
  nameWithType: HealthRecordItem.EffectiveDate
  fullName: Microsoft.Health.HealthRecordItem.EffectiveDate
- uid: Microsoft.Health.HealthRecordItem.State
  commentId: P:Microsoft.Health.HealthRecordItem.State
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: State
  nameWithType: HealthRecordItem.State
  fullName: Microsoft.Health.HealthRecordItem.State
- uid: Microsoft.Health.HealthRecordItem.Flags
  commentId: P:Microsoft.Health.HealthRecordItem.Flags
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: Flags
  nameWithType: HealthRecordItem.Flags
  fullName: Microsoft.Health.HealthRecordItem.Flags
- uid: Microsoft.Health.HealthRecordItem.IsPersonal
  commentId: P:Microsoft.Health.HealthRecordItem.IsPersonal
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: IsPersonal
  nameWithType: HealthRecordItem.IsPersonal
  fullName: Microsoft.Health.HealthRecordItem.IsPersonal
- uid: Microsoft.Health.HealthRecordItem.IsDownVersioned
  commentId: P:Microsoft.Health.HealthRecordItem.IsDownVersioned
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: IsDownVersioned
  nameWithType: HealthRecordItem.IsDownVersioned
  fullName: Microsoft.Health.HealthRecordItem.IsDownVersioned
- uid: Microsoft.Health.HealthRecordItem.IsUpVersioned
  commentId: P:Microsoft.Health.HealthRecordItem.IsUpVersioned
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: IsUpVersioned
  nameWithType: HealthRecordItem.IsUpVersioned
  fullName: Microsoft.Health.HealthRecordItem.IsUpVersioned
- uid: Microsoft.Health.HealthRecordItem.UpdatedEndDate
  commentId: P:Microsoft.Health.HealthRecordItem.UpdatedEndDate
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: UpdatedEndDate
  nameWithType: HealthRecordItem.UpdatedEndDate
  fullName: Microsoft.Health.HealthRecordItem.UpdatedEndDate
- uid: Microsoft.Health.HealthRecordItem.LastUpdated
  commentId: P:Microsoft.Health.HealthRecordItem.LastUpdated
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: LastUpdated
  nameWithType: HealthRecordItem.LastUpdated
  fullName: Microsoft.Health.HealthRecordItem.LastUpdated
- uid: Microsoft.Health.HealthRecordItem.Created
  commentId: P:Microsoft.Health.HealthRecordItem.Created
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: Created
  nameWithType: HealthRecordItem.Created
  fullName: Microsoft.Health.HealthRecordItem.Created
- uid: Microsoft.Health.HealthRecordItem.EffectivePermissions
  commentId: P:Microsoft.Health.HealthRecordItem.EffectivePermissions
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: EffectivePermissions
  nameWithType: HealthRecordItem.EffectivePermissions
  fullName: Microsoft.Health.HealthRecordItem.EffectivePermissions
- uid: Microsoft.Health.HealthRecordItem.IsImmutable
  commentId: P:Microsoft.Health.HealthRecordItem.IsImmutable
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: IsImmutable
  nameWithType: HealthRecordItem.IsImmutable
  fullName: Microsoft.Health.HealthRecordItem.IsImmutable
- uid: Microsoft.Health.HealthRecordItem.IsReadOnly
  commentId: P:Microsoft.Health.HealthRecordItem.IsReadOnly
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: IsReadOnly
  nameWithType: HealthRecordItem.IsReadOnly
  fullName: Microsoft.Health.HealthRecordItem.IsReadOnly
- uid: Microsoft.Health.HealthRecordItem.TypeSpecificData
  commentId: P:Microsoft.Health.HealthRecordItem.TypeSpecificData
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: TypeSpecificData
  nameWithType: HealthRecordItem.TypeSpecificData
  fullName: Microsoft.Health.HealthRecordItem.TypeSpecificData
- uid: Microsoft.Health.HealthRecordItem.TransformedXmlData
  commentId: P:Microsoft.Health.HealthRecordItem.TransformedXmlData
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: TransformedXmlData
  nameWithType: HealthRecordItem.TransformedXmlData
  fullName: Microsoft.Health.HealthRecordItem.TransformedXmlData
- uid: Microsoft.Health.HealthRecordItem.CommonData
  commentId: P:Microsoft.Health.HealthRecordItem.CommonData
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: CommonData
  nameWithType: HealthRecordItem.CommonData
  fullName: Microsoft.Health.HealthRecordItem.CommonData
- uid: Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.HealthRecordAccessor)
  commentId: M:Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.HealthRecordAccessor)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: GetBlobStore(HealthRecordAccessor)
  nameWithType: HealthRecordItem.GetBlobStore(HealthRecordAccessor)
  fullName: Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.HealthRecordAccessor)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.HealthRecordAccessor)
    name: GetBlobStore
    nameWithType: HealthRecordItem.GetBlobStore
    fullName: Microsoft.Health.HealthRecordItem.GetBlobStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.HealthRecordAccessor
    name: HealthRecordAccessor
    nameWithType: HealthRecordAccessor
    fullName: Microsoft.Health.HealthRecordAccessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.HealthRecordAccessor)
    name: GetBlobStore
    nameWithType: HealthRecordItem.GetBlobStore
    fullName: Microsoft.Health.HealthRecordItem.GetBlobStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.HealthRecordAccessor
    name: HealthRecordAccessor
    nameWithType: HealthRecordAccessor
    fullName: Microsoft.Health.HealthRecordAccessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.Package.ConnectPackageCreationParameters)
  commentId: M:Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.Package.ConnectPackageCreationParameters)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: GetBlobStore(ConnectPackageCreationParameters)
  nameWithType: HealthRecordItem.GetBlobStore(ConnectPackageCreationParameters)
  fullName: Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.Package.ConnectPackageCreationParameters)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.Package.ConnectPackageCreationParameters)
    name: GetBlobStore
    nameWithType: HealthRecordItem.GetBlobStore
    fullName: Microsoft.Health.HealthRecordItem.GetBlobStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.Package.ConnectPackageCreationParameters
    name: ConnectPackageCreationParameters
    nameWithType: ConnectPackageCreationParameters
    fullName: Microsoft.Health.Package.ConnectPackageCreationParameters
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.Package.ConnectPackageCreationParameters)
    name: GetBlobStore
    nameWithType: HealthRecordItem.GetBlobStore
    fullName: Microsoft.Health.HealthRecordItem.GetBlobStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.Package.ConnectPackageCreationParameters
    name: ConnectPackageCreationParameters
    nameWithType: ConnectPackageCreationParameters
    fullName: Microsoft.Health.Package.ConnectPackageCreationParameters
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.Tags
  commentId: P:Microsoft.Health.HealthRecordItem.Tags
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: Tags
  nameWithType: HealthRecordItem.Tags
  fullName: Microsoft.Health.HealthRecordItem.Tags
- uid: Microsoft.Health.HealthRecordItem.HealthRecordItemSignatures
  commentId: P:Microsoft.Health.HealthRecordItem.HealthRecordItemSignatures
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: HealthRecordItemSignatures
  nameWithType: HealthRecordItem.HealthRecordItemSignatures
  fullName: Microsoft.Health.HealthRecordItem.HealthRecordItemSignatures
- uid: Microsoft.Health.HealthRecordItem.Sections
  commentId: P:Microsoft.Health.HealthRecordItem.Sections
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: Sections
  nameWithType: HealthRecordItem.Sections
  fullName: Microsoft.Health.HealthRecordItem.Sections
- uid: Microsoft.Health.HealthRecordItem.GetSizeInBytes
  commentId: M:Microsoft.Health.HealthRecordItem.GetSizeInBytes
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: GetSizeInBytes()
  nameWithType: HealthRecordItem.GetSizeInBytes()
  fullName: Microsoft.Health.HealthRecordItem.GetSizeInBytes()
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.GetSizeInBytes
    name: GetSizeInBytes
    nameWithType: HealthRecordItem.GetSizeInBytes
    fullName: Microsoft.Health.HealthRecordItem.GetSizeInBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.GetSizeInBytes
    name: GetSizeInBytes
    nameWithType: HealthRecordItem.GetSizeInBytes
    fullName: Microsoft.Health.HealthRecordItem.GetSizeInBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.GetItemXml
  commentId: M:Microsoft.Health.HealthRecordItem.GetItemXml
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: GetItemXml()
  nameWithType: HealthRecordItem.GetItemXml()
  fullName: Microsoft.Health.HealthRecordItem.GetItemXml()
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.GetItemXml
    name: GetItemXml
    nameWithType: HealthRecordItem.GetItemXml
    fullName: Microsoft.Health.HealthRecordItem.GetItemXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.GetItemXml
    name: GetItemXml
    nameWithType: HealthRecordItem.GetItemXml
    fullName: Microsoft.Health.HealthRecordItem.GetItemXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections)
  commentId: M:Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: GetItemXml(HealthRecordItemSections)
  nameWithType: HealthRecordItem.GetItemXml(HealthRecordItemSections)
  fullName: Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections)
    name: GetItemXml
    nameWithType: HealthRecordItem.GetItemXml
    fullName: Microsoft.Health.HealthRecordItem.GetItemXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.HealthRecordItemSections
    name: HealthRecordItemSections
    nameWithType: HealthRecordItemSections
    fullName: Microsoft.Health.HealthRecordItemSections
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections)
    name: GetItemXml
    nameWithType: HealthRecordItem.GetItemXml
    fullName: Microsoft.Health.HealthRecordItem.GetItemXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.HealthRecordItemSections
    name: HealthRecordItemSections
    nameWithType: HealthRecordItemSections
    fullName: Microsoft.Health.HealthRecordItemSections
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.GetItemXml(System.String)
  commentId: M:Microsoft.Health.HealthRecordItem.GetItemXml(System.String)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: true
  name: GetItemXml(String)
  nameWithType: HealthRecordItem.GetItemXml(String)
  fullName: Microsoft.Health.HealthRecordItem.GetItemXml(System.String)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.GetItemXml(System.String)
    name: GetItemXml
    nameWithType: HealthRecordItem.GetItemXml
    fullName: Microsoft.Health.HealthRecordItem.GetItemXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.GetItemXml(System.String)
    name: GetItemXml
    nameWithType: HealthRecordItem.GetItemXml
    fullName: Microsoft.Health.HealthRecordItem.GetItemXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections,System.String)
  commentId: M:Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections,System.String)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: true
  name: GetItemXml(HealthRecordItemSections, String)
  nameWithType: HealthRecordItem.GetItemXml(HealthRecordItemSections, String)
  fullName: Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections, System.String)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections,System.String)
    name: GetItemXml
    nameWithType: HealthRecordItem.GetItemXml
    fullName: Microsoft.Health.HealthRecordItem.GetItemXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.HealthRecordItemSections
    name: HealthRecordItemSections
    nameWithType: HealthRecordItemSections
    fullName: Microsoft.Health.HealthRecordItemSections
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections,System.String)
    name: GetItemXml
    nameWithType: HealthRecordItem.GetItemXml
    fullName: Microsoft.Health.HealthRecordItem.GetItemXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.HealthRecordItemSections
    name: HealthRecordItemSections
    nameWithType: HealthRecordItemSections
    fullName: Microsoft.Health.HealthRecordItemSections
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.Serialize
  commentId: M:Microsoft.Health.HealthRecordItem.Serialize
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: Serialize()
  nameWithType: HealthRecordItem.Serialize()
  fullName: Microsoft.Health.HealthRecordItem.Serialize()
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.Serialize
    name: Serialize
    nameWithType: HealthRecordItem.Serialize
    fullName: Microsoft.Health.HealthRecordItem.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.Serialize
    name: Serialize
    nameWithType: HealthRecordItem.Serialize
    fullName: Microsoft.Health.HealthRecordItem.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.Deserialize(System.String)
  commentId: M:Microsoft.Health.HealthRecordItem.Deserialize(System.String)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: true
  name: Deserialize(String)
  nameWithType: HealthRecordItem.Deserialize(String)
  fullName: Microsoft.Health.HealthRecordItem.Deserialize(System.String)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.Deserialize(System.String)
    name: Deserialize
    nameWithType: HealthRecordItem.Deserialize
    fullName: Microsoft.Health.HealthRecordItem.Deserialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.Deserialize(System.String)
    name: Deserialize
    nameWithType: HealthRecordItem.Deserialize
    fullName: Microsoft.Health.HealthRecordItem.Deserialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: Microsoft.Health.ItemTypes.Medication
  commentId: T:Microsoft.Health.ItemTypes.Medication
  isExternal: false
  name: Medication
  nameWithType: Medication
  fullName: Microsoft.Health.ItemTypes.Medication
- uid: Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)
  commentId: M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)
- uid: Microsoft.Health.ItemTypes.Medication.#ctor*
  commentId: Overload:Microsoft.Health.ItemTypes.Medication.#ctor
  isExternal: false
  name: Medication
  nameWithType: Medication.Medication
  fullName: Microsoft.Health.ItemTypes.Medication.Medication
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: Microsoft.Health.ItemTypes.CodableValue
  commentId: T:Microsoft.Health.ItemTypes.CodableValue
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: CodableValue
  nameWithType: CodableValue
  fullName: Microsoft.Health.ItemTypes.CodableValue
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Microsoft.Health.HealthRecordItem.ParseXml(System.Xml.XPath.IXPathNavigable)
  commentId: M:Microsoft.Health.HealthRecordItem.ParseXml(System.Xml.XPath.IXPathNavigable)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: true
  name: ParseXml(IXPathNavigable)
  nameWithType: HealthRecordItem.ParseXml(IXPathNavigable)
  fullName: Microsoft.Health.HealthRecordItem.ParseXml(System.Xml.XPath.IXPathNavigable)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.ParseXml(System.Xml.XPath.IXPathNavigable)
    name: ParseXml
    nameWithType: HealthRecordItem.ParseXml
    fullName: Microsoft.Health.HealthRecordItem.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.IXPathNavigable
    name: IXPathNavigable
    nameWithType: IXPathNavigable
    fullName: System.Xml.XPath.IXPathNavigable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.ParseXml(System.Xml.XPath.IXPathNavigable)
    name: ParseXml
    nameWithType: HealthRecordItem.ParseXml
    fullName: Microsoft.Health.HealthRecordItem.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.IXPathNavigable
    name: IXPathNavigable
    nameWithType: IXPathNavigable
    fullName: System.Xml.XPath.IXPathNavigable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Medication.ParseXml*
  commentId: Overload:Microsoft.Health.ItemTypes.Medication.ParseXml
  isExternal: false
  name: ParseXml
  nameWithType: Medication.ParseXml
  fullName: Microsoft.Health.ItemTypes.Medication.ParseXml
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
- uid: System.Xml.XPath.IXPathNavigable
  commentId: T:System.Xml.XPath.IXPathNavigable
  parent: System.Xml.XPath
  isExternal: true
  name: IXPathNavigable
  nameWithType: IXPathNavigable
  fullName: System.Xml.XPath.IXPathNavigable
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: false
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: Microsoft.Health.ItemTypes.Medication.Name
  commentId: P:Microsoft.Health.ItemTypes.Medication.Name
- uid: Microsoft.Health.HealthRecordItem.WriteXml(System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.HealthRecordItem.WriteXml(System.Xml.XmlWriter)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: true
  name: WriteXml(XmlWriter)
  nameWithType: HealthRecordItem.WriteXml(XmlWriter)
  fullName: Microsoft.Health.HealthRecordItem.WriteXml(System.Xml.XmlWriter)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItem.WriteXml
    fullName: Microsoft.Health.HealthRecordItem.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItem.WriteXml
    fullName: Microsoft.Health.HealthRecordItem.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Medication.WriteXml*
  commentId: Overload:Microsoft.Health.ItemTypes.Medication.WriteXml
  isExternal: false
  name: WriteXml
  nameWithType: Medication.WriteXml
  fullName: Microsoft.Health.ItemTypes.Medication.WriteXml
- uid: Microsoft.Health.HealthRecordItemSerializationException
  commentId: T:Microsoft.Health.HealthRecordItemSerializationException
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: Microsoft.Health.ItemTypes.Medication.Name*
  commentId: Overload:Microsoft.Health.ItemTypes.Medication.Name
  isExternal: false
  name: Name
  nameWithType: Medication.Name
  fullName: Microsoft.Health.ItemTypes.Medication.Name
- uid: Microsoft.Health.ItemTypes.Medication.GenericName*
  commentId: Overload:Microsoft.Health.ItemTypes.Medication.GenericName
  isExternal: false
  name: GenericName
  nameWithType: Medication.GenericName
  fullName: Microsoft.Health.ItemTypes.Medication.GenericName
- uid: Microsoft.Health.ItemTypes.Medication.Dose*
  commentId: Overload:Microsoft.Health.ItemTypes.Medication.Dose
  isExternal: false
  name: Dose
  nameWithType: Medication.Dose
  fullName: Microsoft.Health.ItemTypes.Medication.Dose
- uid: Microsoft.Health.ItemTypes.GeneralMeasurement
  commentId: T:Microsoft.Health.ItemTypes.GeneralMeasurement
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: GeneralMeasurement
  nameWithType: GeneralMeasurement
  fullName: Microsoft.Health.ItemTypes.GeneralMeasurement
- uid: Microsoft.Health.ItemTypes.Medication.Strength*
  commentId: Overload:Microsoft.Health.ItemTypes.Medication.Strength
  isExternal: false
  name: Strength
  nameWithType: Medication.Strength
  fullName: Microsoft.Health.ItemTypes.Medication.Strength
- uid: Microsoft.Health.ItemTypes.Medication.Frequency*
  commentId: Overload:Microsoft.Health.ItemTypes.Medication.Frequency
  isExternal: false
  name: Frequency
  nameWithType: Medication.Frequency
  fullName: Microsoft.Health.ItemTypes.Medication.Frequency
- uid: Microsoft.Health.ItemTypes.Medication.Route*
  commentId: Overload:Microsoft.Health.ItemTypes.Medication.Route
  isExternal: false
  name: Route
  nameWithType: Medication.Route
  fullName: Microsoft.Health.ItemTypes.Medication.Route
- uid: Microsoft.Health.ItemTypes.Medication.Indication*
  commentId: Overload:Microsoft.Health.ItemTypes.Medication.Indication
  isExternal: false
  name: Indication
  nameWithType: Medication.Indication
  fullName: Microsoft.Health.ItemTypes.Medication.Indication
- uid: Microsoft.Health.ItemTypes.Medication.DateStarted*
  commentId: Overload:Microsoft.Health.ItemTypes.Medication.DateStarted
  isExternal: false
  name: DateStarted
  nameWithType: Medication.DateStarted
  fullName: Microsoft.Health.ItemTypes.Medication.DateStarted
- uid: Microsoft.Health.ItemTypes.ApproximateDateTime
  commentId: T:Microsoft.Health.ItemTypes.ApproximateDateTime
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: ApproximateDateTime
  nameWithType: ApproximateDateTime
  fullName: Microsoft.Health.ItemTypes.ApproximateDateTime
- uid: Microsoft.Health.ItemTypes.Medication.DateDiscontinued*
  commentId: Overload:Microsoft.Health.ItemTypes.Medication.DateDiscontinued
  isExternal: false
  name: DateDiscontinued
  nameWithType: Medication.DateDiscontinued
  fullName: Microsoft.Health.ItemTypes.Medication.DateDiscontinued
- uid: Microsoft.Health.ItemTypes.Medication.Prescribed*
  commentId: Overload:Microsoft.Health.ItemTypes.Medication.Prescribed
  isExternal: false
  name: Prescribed
  nameWithType: Medication.Prescribed
  fullName: Microsoft.Health.ItemTypes.Medication.Prescribed
- uid: Microsoft.Health.ItemTypes.Medication.Prescription*
  commentId: Overload:Microsoft.Health.ItemTypes.Medication.Prescription
  isExternal: false
  name: Prescription
  nameWithType: Medication.Prescription
  fullName: Microsoft.Health.ItemTypes.Medication.Prescription
- uid: Microsoft.Health.ItemTypes.Prescription
  commentId: T:Microsoft.Health.ItemTypes.Prescription
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: Prescription
  nameWithType: Prescription
  fullName: Microsoft.Health.ItemTypes.Prescription
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Medication.ToString*
  commentId: Overload:Microsoft.Health.ItemTypes.Medication.ToString
  isExternal: false
  name: ToString
  nameWithType: Medication.ToString
  fullName: Microsoft.Health.ItemTypes.Medication.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
