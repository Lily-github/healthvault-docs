### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.InvertedIndex.WeightPostingList`1
  commentId: T:Microsoft.Health.InvertedIndex.WeightPostingList`1
  id: WeightPostingList`1
  parent: Microsoft.Health.InvertedIndex
  children:
  - Microsoft.Health.InvertedIndex.WeightPostingList`1.#ctor
  - Microsoft.Health.InvertedIndex.WeightPostingList`1.#ctor(System.Int32,System.Int32)
  - Microsoft.Health.InvertedIndex.WeightPostingList`1.CreatePostingEnumerator
  - Microsoft.Health.InvertedIndex.WeightPostingList`1.SerializationTokenName
  langs:
  - csharp
  - vb
  name: WeightPostingList<T>
  nameWithType: WeightPostingList<T>
  fullName: Microsoft.Health.InvertedIndex.WeightPostingList<T>
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/WeightPostingList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WeightPostingList
    path: ../Microsoft.Health.Utility/search/InvertedIndex/WeightPostingList.cs
    startLine: 10
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: 'public class WeightPostingList<T> : PostingList<T>, IList<Posting<T>>, ICollection<Posting<T>>, IEnumerable<Posting<T>>, IRecordPropertyList<T>, IRecordIDList, ISkipEnumerable<uint>, IEnumerable<uint>, IEnumerable, ISerializableIndexType where T : IConvertible'
    content.vb: >-
      Public Class WeightPostingList(Of T As IConvertible)
          Inherits PostingList(Of T)
          Implements IList(Of Posting(Of T)), ICollection(Of Posting(Of T)), IEnumerable(Of Posting(Of T)), IRecordPropertyList(Of T), IRecordIDList, ISkipEnumerable(Of UInteger), IEnumerable(Of UInteger), IEnumerable, ISerializableIndexType
    typeParameters:
    - id: T
      description: ''
  inheritance:
  - System.Object
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}
  - Microsoft.Health.InvertedIndex.IndexList{Microsoft.Health.InvertedIndex.Posting{{T}}}
  - Microsoft.Health.InvertedIndex.PostingList{{T}}
  derivedClasses:
  - Microsoft.Health.InvertedIndex.BytePostingList
  - Microsoft.Health.InvertedIndex.FloatPostingList
  - Microsoft.Health.InvertedIndex.IntPostingList
  implements:
  - System.Collections.Generic.IList{Microsoft.Health.InvertedIndex.Posting{{T}}}
  - System.Collections.Generic.ICollection{Microsoft.Health.InvertedIndex.Posting{{T}}}
  - System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.Posting{{T}}}
  - Microsoft.Health.InvertedIndex.IRecordPropertyList{{T}}
  - Microsoft.Health.InvertedIndex.IRecordIDList
  - Microsoft.Health.InvertedIndex.ISkipEnumerable{System.UInt32}
  - System.Collections.Generic.IEnumerable{System.UInt32}
  - System.Collections.IEnumerable
  - Microsoft.Health.InvertedIndex.ISerializableIndexType
  inheritedMembers:
  - Microsoft.Health.InvertedIndex.PostingList{{T}}.AddInOrder(Microsoft.Health.InvertedIndex.Posting{{T}})
  - Microsoft.Health.InvertedIndex.PostingList{{T}}.GetPropertyEnumerator
  - Microsoft.Health.InvertedIndex.PostingList{{T}}.GetIDs
  - Microsoft.Health.InvertedIndex.PostingList{{T}}.GetSkipEnumerator
  - Microsoft.Health.InvertedIndex.PostingList{{T}}.GetEnumerator
  - Microsoft.Health.InvertedIndex.PostingList{{T}}.System#Collections#IEnumerable#GetEnumerator
  - Microsoft.Health.InvertedIndex.IndexList{Microsoft.Health.InvertedIndex.Posting{{T}}}.GrowBy
  - Microsoft.Health.InvertedIndex.IndexList{Microsoft.Health.InvertedIndex.Posting{{T}}}.PrepareForIndex
  - Microsoft.Health.InvertedIndex.IndexList{Microsoft.Health.InvertedIndex.Posting{{T}}}.CalculateNewSize(System.Int32)
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.Item(System.Int32)
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.Buffer
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.Count
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.IsReadOnly
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.Add(Microsoft.Health.InvertedIndex.Posting{{T}})
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.AddNoCheck(Microsoft.Health.InvertedIndex.Posting{{T}})
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.AddRange(System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.Posting{{T}}})
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.AddRange(System.Collections.Generic.IList{Microsoft.Health.InvertedIndex.Posting{{T}}})
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.AddRange(Microsoft.Health.InvertedIndex.Posting{{T}}[])
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.AddRange(Microsoft.Health.InvertedIndex.Posting{{T}}[],System.Int32,System.Int32)
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.Clear
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.Erase
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.GetAt(System.Int32)
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.Contains(Microsoft.Health.InvertedIndex.Posting{{T}})
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.IndexOf(Microsoft.Health.InvertedIndex.Posting{{T}})
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.Insert(System.Int32,Microsoft.Health.InvertedIndex.Posting{{T}})
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.RemoveAt(System.Int32)
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.CopyTo(Microsoft.Health.InvertedIndex.Posting{{T}}[],System.Int32)
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.Remove(Microsoft.Health.InvertedIndex.Posting{{T}})
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.Trim
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.Sort
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.Sort(System.Collections.Generic.IComparer{Microsoft.Health.InvertedIndex.Posting{{T}}})
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.BinarySearch(Microsoft.Health.InvertedIndex.Posting{{T}})
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.BinarySearch(Microsoft.Health.InvertedIndex.Posting{{T}},System.Collections.Generic.IComparer{Microsoft.Health.InvertedIndex.Posting{{T}}})
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.EnsureCapacity
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.EnsureCapacity(System.Int32)
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.Init(System.Int32)
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.ToArray
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.GetTrimmedBuffer
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.InvertedIndex.WeightPostingList`1.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  nameWithType.vb: WeightPostingList(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.Health.InvertedIndex.WeightPostingList(Of T)
  name.vb: WeightPostingList(Of T)
- uid: Microsoft.Health.InvertedIndex.WeightPostingList`1.#ctor
  commentId: M:Microsoft.Health.InvertedIndex.WeightPostingList`1.#ctor
  id: '#ctor'
  parent: Microsoft.Health.InvertedIndex.WeightPostingList`1
  langs:
  - csharp
  - vb
  name: WeightPostingList()
  nameWithType: WeightPostingList<T>.WeightPostingList()
  fullName: Microsoft.Health.InvertedIndex.WeightPostingList<T>.WeightPostingList()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/WeightPostingList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.Utility/search/InvertedIndex/WeightPostingList.cs
    startLine: 16
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public WeightPostingList()
    content.vb: Public Sub New
  overload: Microsoft.Health.InvertedIndex.WeightPostingList`1.#ctor*
  nameWithType.vb: WeightPostingList(Of T).WeightPostingList()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.WeightPostingList(Of T).WeightPostingList()
- uid: Microsoft.Health.InvertedIndex.WeightPostingList`1.#ctor(System.Int32,System.Int32)
  commentId: M:Microsoft.Health.InvertedIndex.WeightPostingList`1.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: Microsoft.Health.InvertedIndex.WeightPostingList`1
  langs:
  - csharp
  - vb
  name: WeightPostingList(Int32, Int32)
  nameWithType: WeightPostingList<T>.WeightPostingList(Int32, Int32)
  fullName: Microsoft.Health.InvertedIndex.WeightPostingList<T>.WeightPostingList(System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/WeightPostingList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.Utility/search/InvertedIndex/WeightPostingList.cs
    startLine: 26
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public WeightPostingList(int capacity, int growBy)
    content.vb: Public Sub New(capacity As Integer, growBy As Integer)
    parameters:
    - id: capacity
      type: System.Int32
      description: ''
    - id: growBy
      type: System.Int32
      description: ''
  overload: Microsoft.Health.InvertedIndex.WeightPostingList`1.#ctor*
  nameWithType.vb: WeightPostingList(Of T).WeightPostingList(Int32, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.WeightPostingList(Of T).WeightPostingList(System.Int32, System.Int32)
- uid: Microsoft.Health.InvertedIndex.WeightPostingList`1.SerializationTokenName
  commentId: P:Microsoft.Health.InvertedIndex.WeightPostingList`1.SerializationTokenName
  id: SerializationTokenName
  parent: Microsoft.Health.InvertedIndex.WeightPostingList`1
  langs:
  - csharp
  - vb
  name: SerializationTokenName
  nameWithType: WeightPostingList<T>.SerializationTokenName
  fullName: Microsoft.Health.InvertedIndex.WeightPostingList<T>.SerializationTokenName
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/WeightPostingList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SerializationTokenName
    path: ../Microsoft.Health.Utility/search/InvertedIndex/WeightPostingList.cs
    startLine: 34
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public virtual string SerializationTokenName { get; }
    content.vb: Public Overridable ReadOnly Property SerializationTokenName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.InvertedIndex.WeightPostingList`1.SerializationTokenName*
  implements:
  - Microsoft.Health.InvertedIndex.ISerializableIndexType.SerializationTokenName
  nameWithType.vb: WeightPostingList(Of T).SerializationTokenName
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Microsoft.Health.InvertedIndex.WeightPostingList(Of T).SerializationTokenName
- uid: Microsoft.Health.InvertedIndex.WeightPostingList`1.CreatePostingEnumerator
  commentId: M:Microsoft.Health.InvertedIndex.WeightPostingList`1.CreatePostingEnumerator
  id: CreatePostingEnumerator
  parent: Microsoft.Health.InvertedIndex.WeightPostingList`1
  langs:
  - csharp
  - vb
  name: CreatePostingEnumerator()
  nameWithType: WeightPostingList<T>.CreatePostingEnumerator()
  fullName: Microsoft.Health.InvertedIndex.WeightPostingList<T>.CreatePostingEnumerator()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/WeightPostingList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CreatePostingEnumerator
    path: ../Microsoft.Health.Utility/search/InvertedIndex/WeightPostingList.cs
    startLine: 46
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: protected override PostingArrayEnumerator<T> CreatePostingEnumerator()
    content.vb: Protected Overrides Function CreatePostingEnumerator As PostingArrayEnumerator(Of T)
    return:
      type: Microsoft.Health.InvertedIndex.PostingArrayEnumerator{{T}}
      description: ''
  overridden: Microsoft.Health.InvertedIndex.PostingList{{T}}.CreatePostingEnumerator
  overload: Microsoft.Health.InvertedIndex.WeightPostingList`1.CreatePostingEnumerator*
  nameWithType.vb: WeightPostingList(Of T).CreatePostingEnumerator()
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Microsoft.Health.InvertedIndex.WeightPostingList(Of T).CreatePostingEnumerator()
references:
- uid: Microsoft.Health.InvertedIndex
  commentId: N:Microsoft.Health.InvertedIndex
  isExternal: false
  name: Microsoft.Health.InvertedIndex
  nameWithType: Microsoft.Health.InvertedIndex
  fullName: Microsoft.Health.InvertedIndex
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}
  commentId: T:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{`0}}
  parent: Microsoft.Health
  definition: Microsoft.Health.FastList`1
  name: FastList<Posting<T>>
  nameWithType: FastList<Posting<T>>
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>
  nameWithType.vb: FastList(Of Posting(Of T))
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T))
  name.vb: FastList(Of Posting(Of T))
  spec.csharp:
  - uid: Microsoft.Health.FastList`1
    name: FastList
    nameWithType: FastList
    fullName: Microsoft.Health.FastList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.FastList`1
    name: FastList
    nameWithType: FastList
    fullName: Microsoft.Health.FastList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.IndexList{Microsoft.Health.InvertedIndex.Posting{{T}}}
  commentId: T:Microsoft.Health.InvertedIndex.IndexList{Microsoft.Health.InvertedIndex.Posting{`0}}
  parent: Microsoft.Health.InvertedIndex
  definition: Microsoft.Health.InvertedIndex.IndexList`1
  name: IndexList<Posting<T>>
  nameWithType: IndexList<Posting<T>>
  fullName: Microsoft.Health.InvertedIndex.IndexList<Microsoft.Health.InvertedIndex.Posting<T>>
  nameWithType.vb: IndexList(Of Posting(Of T))
  fullName.vb: Microsoft.Health.InvertedIndex.IndexList(Of Microsoft.Health.InvertedIndex.Posting(Of T))
  name.vb: IndexList(Of Posting(Of T))
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.IndexList`1
    name: IndexList
    nameWithType: IndexList
    fullName: Microsoft.Health.InvertedIndex.IndexList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.IndexList`1
    name: IndexList
    nameWithType: IndexList
    fullName: Microsoft.Health.InvertedIndex.IndexList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.PostingList{{T}}
  commentId: T:Microsoft.Health.InvertedIndex.PostingList{`0}
  parent: Microsoft.Health.InvertedIndex
  definition: Microsoft.Health.InvertedIndex.PostingList`1
  name: PostingList<T>
  nameWithType: PostingList<T>
  fullName: Microsoft.Health.InvertedIndex.PostingList<T>
  nameWithType.vb: PostingList(Of T)
  fullName.vb: Microsoft.Health.InvertedIndex.PostingList(Of T)
  name.vb: PostingList(Of T)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.PostingList`1
    name: PostingList
    nameWithType: PostingList
    fullName: Microsoft.Health.InvertedIndex.PostingList
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.PostingList`1
    name: PostingList
    nameWithType: PostingList
    fullName: Microsoft.Health.InvertedIndex.PostingList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Health.InvertedIndex.Posting{{T}}}
  commentId: T:System.Collections.Generic.IList{Microsoft.Health.InvertedIndex.Posting{`0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Posting<T>>
  nameWithType: IList<Posting<T>>
  fullName: System.Collections.Generic.IList<Microsoft.Health.InvertedIndex.Posting<T>>
  nameWithType.vb: IList(Of Posting(Of T))
  fullName.vb: System.Collections.Generic.IList(Of Microsoft.Health.InvertedIndex.Posting(Of T))
  name.vb: IList(Of Posting(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{Microsoft.Health.InvertedIndex.Posting{{T}}}
  commentId: T:System.Collections.Generic.ICollection{Microsoft.Health.InvertedIndex.Posting{`0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<Posting<T>>
  nameWithType: ICollection<Posting<T>>
  fullName: System.Collections.Generic.ICollection<Microsoft.Health.InvertedIndex.Posting<T>>
  nameWithType.vb: ICollection(Of Posting(Of T))
  fullName.vb: System.Collections.Generic.ICollection(Of Microsoft.Health.InvertedIndex.Posting(Of T))
  name.vb: ICollection(Of Posting(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.Posting{{T}}}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.Posting{`0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Posting<T>>
  nameWithType: IEnumerable<Posting<T>>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Health.InvertedIndex.Posting<T>>
  nameWithType.vb: IEnumerable(Of Posting(Of T))
  fullName.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Health.InvertedIndex.Posting(Of T))
  name.vb: IEnumerable(Of Posting(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.IRecordPropertyList{{T}}
  commentId: T:Microsoft.Health.InvertedIndex.IRecordPropertyList{`0}
  parent: Microsoft.Health.InvertedIndex
  definition: Microsoft.Health.InvertedIndex.IRecordPropertyList`1
  name: IRecordPropertyList<T>
  nameWithType: IRecordPropertyList<T>
  fullName: Microsoft.Health.InvertedIndex.IRecordPropertyList<T>
  nameWithType.vb: IRecordPropertyList(Of T)
  fullName.vb: Microsoft.Health.InvertedIndex.IRecordPropertyList(Of T)
  name.vb: IRecordPropertyList(Of T)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.IRecordPropertyList`1
    name: IRecordPropertyList
    nameWithType: IRecordPropertyList
    fullName: Microsoft.Health.InvertedIndex.IRecordPropertyList
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.IRecordPropertyList`1
    name: IRecordPropertyList
    nameWithType: IRecordPropertyList
    fullName: Microsoft.Health.InvertedIndex.IRecordPropertyList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.IRecordIDList
  commentId: T:Microsoft.Health.InvertedIndex.IRecordIDList
  parent: Microsoft.Health.InvertedIndex
  isExternal: false
  name: IRecordIDList
  nameWithType: IRecordIDList
  fullName: Microsoft.Health.InvertedIndex.IRecordIDList
- uid: Microsoft.Health.InvertedIndex.ISkipEnumerable{System.UInt32}
  commentId: T:Microsoft.Health.InvertedIndex.ISkipEnumerable{System.UInt32}
  parent: Microsoft.Health.InvertedIndex
  definition: Microsoft.Health.InvertedIndex.ISkipEnumerable`1
  name: ISkipEnumerable<UInt32>
  nameWithType: ISkipEnumerable<UInt32>
  fullName: Microsoft.Health.InvertedIndex.ISkipEnumerable<System.UInt32>
  nameWithType.vb: ISkipEnumerable(Of UInt32)
  fullName.vb: Microsoft.Health.InvertedIndex.ISkipEnumerable(Of System.UInt32)
  name.vb: ISkipEnumerable(Of UInt32)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.ISkipEnumerable`1
    name: ISkipEnumerable
    nameWithType: ISkipEnumerable
    fullName: Microsoft.Health.InvertedIndex.ISkipEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.ISkipEnumerable`1
    name: ISkipEnumerable
    nameWithType: ISkipEnumerable
    fullName: Microsoft.Health.InvertedIndex.ISkipEnumerable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.UInt32}
  commentId: T:System.Collections.Generic.IEnumerable{System.UInt32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<UInt32>
  nameWithType: IEnumerable<UInt32>
  fullName: System.Collections.Generic.IEnumerable<System.UInt32>
  nameWithType.vb: IEnumerable(Of UInt32)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.UInt32)
  name.vb: IEnumerable(Of UInt32)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: Microsoft.Health.InvertedIndex.ISerializableIndexType
  commentId: T:Microsoft.Health.InvertedIndex.ISerializableIndexType
  parent: Microsoft.Health.InvertedIndex
  isExternal: false
  name: ISerializableIndexType
  nameWithType: ISerializableIndexType
  fullName: Microsoft.Health.InvertedIndex.ISerializableIndexType
- uid: Microsoft.Health.InvertedIndex.PostingList{{T}}.AddInOrder(Microsoft.Health.InvertedIndex.Posting{{T}})
  commentId: M:Microsoft.Health.InvertedIndex.PostingList{`0}.AddInOrder(Microsoft.Health.InvertedIndex.Posting{`0})
  parent: Microsoft.Health.InvertedIndex.PostingList{{T}}
  definition: Microsoft.Health.InvertedIndex.PostingList`1.AddInOrder(Microsoft.Health.InvertedIndex.Posting{`0})
  name: AddInOrder(Posting<T>)
  nameWithType: PostingList<T>.AddInOrder(Posting<T>)
  fullName: Microsoft.Health.InvertedIndex.PostingList<T>.AddInOrder(Microsoft.Health.InvertedIndex.Posting<T>)
  nameWithType.vb: PostingList(Of T).AddInOrder(Posting(Of T))
  fullName.vb: Microsoft.Health.InvertedIndex.PostingList(Of T).AddInOrder(Microsoft.Health.InvertedIndex.Posting(Of T))
  name.vb: AddInOrder(Posting(Of T))
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.PostingList`1.AddInOrder(Microsoft.Health.InvertedIndex.Posting{`0})
    name: AddInOrder
    nameWithType: PostingList<T>.AddInOrder
    fullName: Microsoft.Health.InvertedIndex.PostingList<T>.AddInOrder
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.PostingList`1.AddInOrder(Microsoft.Health.InvertedIndex.Posting{`0})
    name: AddInOrder
    nameWithType: PostingList(Of T).AddInOrder
    fullName: Microsoft.Health.InvertedIndex.PostingList(Of T).AddInOrder
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.PostingList{{T}}.GetPropertyEnumerator
  commentId: M:Microsoft.Health.InvertedIndex.PostingList{`0}.GetPropertyEnumerator
  parent: Microsoft.Health.InvertedIndex.PostingList{{T}}
  definition: Microsoft.Health.InvertedIndex.PostingList`1.GetPropertyEnumerator
  name: GetPropertyEnumerator()
  nameWithType: PostingList<T>.GetPropertyEnumerator()
  fullName: Microsoft.Health.InvertedIndex.PostingList<T>.GetPropertyEnumerator()
  nameWithType.vb: PostingList(Of T).GetPropertyEnumerator()
  fullName.vb: Microsoft.Health.InvertedIndex.PostingList(Of T).GetPropertyEnumerator()
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.PostingList`1.GetPropertyEnumerator
    name: GetPropertyEnumerator
    nameWithType: PostingList<T>.GetPropertyEnumerator
    fullName: Microsoft.Health.InvertedIndex.PostingList<T>.GetPropertyEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.PostingList`1.GetPropertyEnumerator
    name: GetPropertyEnumerator
    nameWithType: PostingList(Of T).GetPropertyEnumerator
    fullName: Microsoft.Health.InvertedIndex.PostingList(Of T).GetPropertyEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.PostingList{{T}}.GetIDs
  commentId: M:Microsoft.Health.InvertedIndex.PostingList{`0}.GetIDs
  parent: Microsoft.Health.InvertedIndex.PostingList{{T}}
  definition: Microsoft.Health.InvertedIndex.PostingList`1.GetIDs
  name: GetIDs()
  nameWithType: PostingList<T>.GetIDs()
  fullName: Microsoft.Health.InvertedIndex.PostingList<T>.GetIDs()
  nameWithType.vb: PostingList(Of T).GetIDs()
  fullName.vb: Microsoft.Health.InvertedIndex.PostingList(Of T).GetIDs()
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.PostingList`1.GetIDs
    name: GetIDs
    nameWithType: PostingList<T>.GetIDs
    fullName: Microsoft.Health.InvertedIndex.PostingList<T>.GetIDs
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.PostingList`1.GetIDs
    name: GetIDs
    nameWithType: PostingList(Of T).GetIDs
    fullName: Microsoft.Health.InvertedIndex.PostingList(Of T).GetIDs
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.PostingList{{T}}.GetSkipEnumerator
  commentId: M:Microsoft.Health.InvertedIndex.PostingList{`0}.GetSkipEnumerator
  parent: Microsoft.Health.InvertedIndex.PostingList{{T}}
  definition: Microsoft.Health.InvertedIndex.PostingList`1.GetSkipEnumerator
  name: GetSkipEnumerator()
  nameWithType: PostingList<T>.GetSkipEnumerator()
  fullName: Microsoft.Health.InvertedIndex.PostingList<T>.GetSkipEnumerator()
  nameWithType.vb: PostingList(Of T).GetSkipEnumerator()
  fullName.vb: Microsoft.Health.InvertedIndex.PostingList(Of T).GetSkipEnumerator()
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.PostingList`1.GetSkipEnumerator
    name: GetSkipEnumerator
    nameWithType: PostingList<T>.GetSkipEnumerator
    fullName: Microsoft.Health.InvertedIndex.PostingList<T>.GetSkipEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.PostingList`1.GetSkipEnumerator
    name: GetSkipEnumerator
    nameWithType: PostingList(Of T).GetSkipEnumerator
    fullName: Microsoft.Health.InvertedIndex.PostingList(Of T).GetSkipEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.PostingList{{T}}.GetEnumerator
  commentId: M:Microsoft.Health.InvertedIndex.PostingList{`0}.GetEnumerator
  parent: Microsoft.Health.InvertedIndex.PostingList{{T}}
  definition: Microsoft.Health.InvertedIndex.PostingList`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: PostingList<T>.GetEnumerator()
  fullName: Microsoft.Health.InvertedIndex.PostingList<T>.GetEnumerator()
  nameWithType.vb: PostingList(Of T).GetEnumerator()
  fullName.vb: Microsoft.Health.InvertedIndex.PostingList(Of T).GetEnumerator()
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.PostingList`1.GetEnumerator
    name: GetEnumerator
    nameWithType: PostingList<T>.GetEnumerator
    fullName: Microsoft.Health.InvertedIndex.PostingList<T>.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.PostingList`1.GetEnumerator
    name: GetEnumerator
    nameWithType: PostingList(Of T).GetEnumerator
    fullName: Microsoft.Health.InvertedIndex.PostingList(Of T).GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.PostingList{{T}}.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Microsoft.Health.InvertedIndex.PostingList{`0}.System#Collections#IEnumerable#GetEnumerator
  parent: Microsoft.Health.InvertedIndex.PostingList{{T}}
  definition: Microsoft.Health.InvertedIndex.PostingList`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  nameWithType: PostingList<T>.IEnumerable.GetEnumerator()
  fullName: Microsoft.Health.InvertedIndex.PostingList<T>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: PostingList(Of T).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: Microsoft.Health.InvertedIndex.PostingList(Of T).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.PostingList`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: PostingList<T>.IEnumerable.GetEnumerator
    fullName: Microsoft.Health.InvertedIndex.PostingList<T>.System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.PostingList`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: PostingList(Of T).System.Collections.IEnumerable.GetEnumerator
    fullName: Microsoft.Health.InvertedIndex.PostingList(Of T).System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.IndexList{Microsoft.Health.InvertedIndex.Posting{{T}}}.GrowBy
  commentId: P:Microsoft.Health.InvertedIndex.IndexList{Microsoft.Health.InvertedIndex.Posting{`0}}.GrowBy
  parent: Microsoft.Health.InvertedIndex.IndexList{Microsoft.Health.InvertedIndex.Posting{{T}}}
  definition: Microsoft.Health.InvertedIndex.IndexList`1.GrowBy
  name: GrowBy
  nameWithType: IndexList<Posting<T>>.GrowBy
  fullName: Microsoft.Health.InvertedIndex.IndexList<Microsoft.Health.InvertedIndex.Posting<T>>.GrowBy
  nameWithType.vb: IndexList(Of Posting(Of T)).GrowBy
  fullName.vb: Microsoft.Health.InvertedIndex.IndexList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).GrowBy
- uid: Microsoft.Health.InvertedIndex.IndexList{Microsoft.Health.InvertedIndex.Posting{{T}}}.PrepareForIndex
  commentId: M:Microsoft.Health.InvertedIndex.IndexList{Microsoft.Health.InvertedIndex.Posting{`0}}.PrepareForIndex
  parent: Microsoft.Health.InvertedIndex.IndexList{Microsoft.Health.InvertedIndex.Posting{{T}}}
  definition: Microsoft.Health.InvertedIndex.IndexList`1.PrepareForIndex
  name: PrepareForIndex()
  nameWithType: IndexList<Posting<T>>.PrepareForIndex()
  fullName: Microsoft.Health.InvertedIndex.IndexList<Microsoft.Health.InvertedIndex.Posting<T>>.PrepareForIndex()
  nameWithType.vb: IndexList(Of Posting(Of T)).PrepareForIndex()
  fullName.vb: Microsoft.Health.InvertedIndex.IndexList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).PrepareForIndex()
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.IndexList`1.PrepareForIndex
    name: PrepareForIndex
    nameWithType: IndexList<Posting<T>>.PrepareForIndex
    fullName: Microsoft.Health.InvertedIndex.IndexList<Microsoft.Health.InvertedIndex.Posting<T>>.PrepareForIndex
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.IndexList`1.PrepareForIndex
    name: PrepareForIndex
    nameWithType: IndexList(Of Posting(Of T)).PrepareForIndex
    fullName: Microsoft.Health.InvertedIndex.IndexList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).PrepareForIndex
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.IndexList{Microsoft.Health.InvertedIndex.Posting{{T}}}.CalculateNewSize(System.Int32)
  commentId: M:Microsoft.Health.InvertedIndex.IndexList{Microsoft.Health.InvertedIndex.Posting{`0}}.CalculateNewSize(System.Int32)
  parent: Microsoft.Health.InvertedIndex.IndexList{Microsoft.Health.InvertedIndex.Posting{{T}}}
  definition: Microsoft.Health.InvertedIndex.IndexList`1.CalculateNewSize(System.Int32)
  name: CalculateNewSize(Int32)
  nameWithType: IndexList<Posting<T>>.CalculateNewSize(Int32)
  fullName: Microsoft.Health.InvertedIndex.IndexList<Microsoft.Health.InvertedIndex.Posting<T>>.CalculateNewSize(System.Int32)
  nameWithType.vb: IndexList(Of Posting(Of T)).CalculateNewSize(Int32)
  fullName.vb: Microsoft.Health.InvertedIndex.IndexList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).CalculateNewSize(System.Int32)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.IndexList`1.CalculateNewSize(System.Int32)
    name: CalculateNewSize
    nameWithType: IndexList<Posting<T>>.CalculateNewSize
    fullName: Microsoft.Health.InvertedIndex.IndexList<Microsoft.Health.InvertedIndex.Posting<T>>.CalculateNewSize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.IndexList`1.CalculateNewSize(System.Int32)
    name: CalculateNewSize
    nameWithType: IndexList(Of Posting(Of T)).CalculateNewSize
    fullName: Microsoft.Health.InvertedIndex.IndexList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).CalculateNewSize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.Item(System.Int32)
  commentId: P:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{`0}}.Item(System.Int32)
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}
  definition: Microsoft.Health.FastList`1.Item(System.Int32)
  name: Item[Int32]
  nameWithType: FastList<Posting<T>>.Item[Int32]
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.Item[System.Int32]
  nameWithType.vb: FastList(Of Posting(Of T)).Item(Int32)
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.Item(System.Int32)
    name: Item
    nameWithType: FastList<Posting<T>>.Item
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: Microsoft.Health.FastList`1.Item(System.Int32)
    name: Item
    nameWithType: FastList(Of Posting(Of T)).Item
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.Buffer
  commentId: P:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{`0}}.Buffer
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}
  definition: Microsoft.Health.FastList`1.Buffer
  name: Buffer
  nameWithType: FastList<Posting<T>>.Buffer
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.Buffer
  nameWithType.vb: FastList(Of Posting(Of T)).Buffer
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).Buffer
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.Count
  commentId: P:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{`0}}.Count
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}
  definition: Microsoft.Health.FastList`1.Count
  name: Count
  nameWithType: FastList<Posting<T>>.Count
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.Count
  nameWithType.vb: FastList(Of Posting(Of T)).Count
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).Count
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.IsReadOnly
  commentId: P:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{`0}}.IsReadOnly
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}
  definition: Microsoft.Health.FastList`1.IsReadOnly
  name: IsReadOnly
  nameWithType: FastList<Posting<T>>.IsReadOnly
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.IsReadOnly
  nameWithType.vb: FastList(Of Posting(Of T)).IsReadOnly
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).IsReadOnly
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.Add(Microsoft.Health.InvertedIndex.Posting{{T}})
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{`0}}.Add(Microsoft.Health.InvertedIndex.Posting{`0})
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}
  definition: Microsoft.Health.FastList`1.Add(`0)
  name: Add(Posting<T>)
  nameWithType: FastList<Posting<T>>.Add(Posting<T>)
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.Add(Microsoft.Health.InvertedIndex.Posting<T>)
  nameWithType.vb: FastList(Of Posting(Of T)).Add(Posting(Of T))
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).Add(Microsoft.Health.InvertedIndex.Posting(Of T))
  name.vb: Add(Posting(Of T))
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.Add(`0)
    name: Add
    nameWithType: FastList<Posting<T>>.Add
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.Add(`0)
    name: Add
    nameWithType: FastList(Of Posting(Of T)).Add
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.AddNoCheck(Microsoft.Health.InvertedIndex.Posting{{T}})
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{`0}}.AddNoCheck(Microsoft.Health.InvertedIndex.Posting{`0})
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}
  definition: Microsoft.Health.FastList`1.AddNoCheck(`0)
  name: AddNoCheck(Posting<T>)
  nameWithType: FastList<Posting<T>>.AddNoCheck(Posting<T>)
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.AddNoCheck(Microsoft.Health.InvertedIndex.Posting<T>)
  nameWithType.vb: FastList(Of Posting(Of T)).AddNoCheck(Posting(Of T))
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).AddNoCheck(Microsoft.Health.InvertedIndex.Posting(Of T))
  name.vb: AddNoCheck(Posting(Of T))
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.AddNoCheck(`0)
    name: AddNoCheck
    nameWithType: FastList<Posting<T>>.AddNoCheck
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.AddNoCheck
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.AddNoCheck(`0)
    name: AddNoCheck
    nameWithType: FastList(Of Posting(Of T)).AddNoCheck
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).AddNoCheck
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.AddRange(System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.Posting{{T}}})
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{`0}}.AddRange(System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.Posting{`0}})
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}
  definition: Microsoft.Health.FastList`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  name: AddRange(IEnumerable<Posting<T>>)
  nameWithType: FastList<Posting<T>>.AddRange(IEnumerable<Posting<T>>)
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.AddRange(System.Collections.Generic.IEnumerable<Microsoft.Health.InvertedIndex.Posting<T>>)
  nameWithType.vb: FastList(Of Posting(Of T)).AddRange(IEnumerable(Of Posting(Of T)))
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).AddRange(System.Collections.Generic.IEnumerable(Of Microsoft.Health.InvertedIndex.Posting(Of T)))
  name.vb: AddRange(IEnumerable(Of Posting(Of T)))
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    nameWithType: FastList<Posting<T>>.AddRange
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.AddRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    nameWithType: FastList(Of Posting(Of T)).AddRange
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).AddRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.AddRange(System.Collections.Generic.IList{Microsoft.Health.InvertedIndex.Posting{{T}}})
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{`0}}.AddRange(System.Collections.Generic.IList{Microsoft.Health.InvertedIndex.Posting{`0}})
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}
  definition: Microsoft.Health.FastList`1.AddRange(System.Collections.Generic.IList{`0})
  name: AddRange(IList<Posting<T>>)
  nameWithType: FastList<Posting<T>>.AddRange(IList<Posting<T>>)
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.AddRange(System.Collections.Generic.IList<Microsoft.Health.InvertedIndex.Posting<T>>)
  nameWithType.vb: FastList(Of Posting(Of T)).AddRange(IList(Of Posting(Of T)))
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).AddRange(System.Collections.Generic.IList(Of Microsoft.Health.InvertedIndex.Posting(Of T)))
  name.vb: AddRange(IList(Of Posting(Of T)))
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.AddRange(System.Collections.Generic.IList{`0})
    name: AddRange
    nameWithType: FastList<Posting<T>>.AddRange
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.AddRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.AddRange(System.Collections.Generic.IList{`0})
    name: AddRange
    nameWithType: FastList(Of Posting(Of T)).AddRange
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).AddRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.AddRange(Microsoft.Health.InvertedIndex.Posting{{T}}[])
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{`0}}.AddRange(Microsoft.Health.InvertedIndex.Posting{`0}[])
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}
  definition: Microsoft.Health.FastList`1.AddRange(`0[])
  name: AddRange(Posting<T>[])
  nameWithType: FastList<Posting<T>>.AddRange(Posting<T>[])
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.AddRange(Microsoft.Health.InvertedIndex.Posting<T>[])
  nameWithType.vb: FastList(Of Posting(Of T)).AddRange(Posting(Of T)())
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).AddRange(Microsoft.Health.InvertedIndex.Posting(Of T)())
  name.vb: AddRange(Posting(Of T)())
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.AddRange(`0[])
    name: AddRange
    nameWithType: FastList<Posting<T>>.AddRange
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.AddRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.AddRange(`0[])
    name: AddRange
    nameWithType: FastList(Of Posting(Of T)).AddRange
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).AddRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.AddRange(Microsoft.Health.InvertedIndex.Posting{{T}}[],System.Int32,System.Int32)
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{`0}}.AddRange(Microsoft.Health.InvertedIndex.Posting{`0}[],System.Int32,System.Int32)
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}
  definition: Microsoft.Health.FastList`1.AddRange(`0[],System.Int32,System.Int32)
  name: AddRange(Posting<T>[], Int32, Int32)
  nameWithType: FastList<Posting<T>>.AddRange(Posting<T>[], Int32, Int32)
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.AddRange(Microsoft.Health.InvertedIndex.Posting<T>[], System.Int32, System.Int32)
  nameWithType.vb: FastList(Of Posting(Of T)).AddRange(Posting(Of T)(), Int32, Int32)
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).AddRange(Microsoft.Health.InvertedIndex.Posting(Of T)(), System.Int32, System.Int32)
  name.vb: AddRange(Posting(Of T)(), Int32, Int32)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.AddRange(`0[],System.Int32,System.Int32)
    name: AddRange
    nameWithType: FastList<Posting<T>>.AddRange
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.AddRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.AddRange(`0[],System.Int32,System.Int32)
    name: AddRange
    nameWithType: FastList(Of Posting(Of T)).AddRange
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).AddRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.Clear
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{`0}}.Clear
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}
  definition: Microsoft.Health.FastList`1.Clear
  name: Clear()
  nameWithType: FastList<Posting<T>>.Clear()
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.Clear()
  nameWithType.vb: FastList(Of Posting(Of T)).Clear()
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).Clear()
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.Clear
    name: Clear
    nameWithType: FastList<Posting<T>>.Clear
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.Clear
    name: Clear
    nameWithType: FastList(Of Posting(Of T)).Clear
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.Erase
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{`0}}.Erase
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}
  definition: Microsoft.Health.FastList`1.Erase
  name: Erase()
  nameWithType: FastList<Posting<T>>.Erase()
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.Erase()
  nameWithType.vb: FastList(Of Posting(Of T)).Erase()
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).Erase()
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.Erase
    name: Erase
    nameWithType: FastList<Posting<T>>.Erase
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.Erase
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.Erase
    name: Erase
    nameWithType: FastList(Of Posting(Of T)).Erase
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).Erase
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.GetAt(System.Int32)
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{`0}}.GetAt(System.Int32)
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}
  definition: Microsoft.Health.FastList`1.GetAt(System.Int32)
  name: GetAt(Int32)
  nameWithType: FastList<Posting<T>>.GetAt(Int32)
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.GetAt(System.Int32)
  nameWithType.vb: FastList(Of Posting(Of T)).GetAt(Int32)
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).GetAt(System.Int32)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.GetAt(System.Int32)
    name: GetAt
    nameWithType: FastList<Posting<T>>.GetAt
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.GetAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.GetAt(System.Int32)
    name: GetAt
    nameWithType: FastList(Of Posting(Of T)).GetAt
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).GetAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.Contains(Microsoft.Health.InvertedIndex.Posting{{T}})
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{`0}}.Contains(Microsoft.Health.InvertedIndex.Posting{`0})
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}
  definition: Microsoft.Health.FastList`1.Contains(`0)
  name: Contains(Posting<T>)
  nameWithType: FastList<Posting<T>>.Contains(Posting<T>)
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.Contains(Microsoft.Health.InvertedIndex.Posting<T>)
  nameWithType.vb: FastList(Of Posting(Of T)).Contains(Posting(Of T))
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).Contains(Microsoft.Health.InvertedIndex.Posting(Of T))
  name.vb: Contains(Posting(Of T))
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.Contains(`0)
    name: Contains
    nameWithType: FastList<Posting<T>>.Contains
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.Contains
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.Contains(`0)
    name: Contains
    nameWithType: FastList(Of Posting(Of T)).Contains
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).Contains
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.IndexOf(Microsoft.Health.InvertedIndex.Posting{{T}})
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{`0}}.IndexOf(Microsoft.Health.InvertedIndex.Posting{`0})
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}
  definition: Microsoft.Health.FastList`1.IndexOf(`0)
  name: IndexOf(Posting<T>)
  nameWithType: FastList<Posting<T>>.IndexOf(Posting<T>)
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.IndexOf(Microsoft.Health.InvertedIndex.Posting<T>)
  nameWithType.vb: FastList(Of Posting(Of T)).IndexOf(Posting(Of T))
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).IndexOf(Microsoft.Health.InvertedIndex.Posting(Of T))
  name.vb: IndexOf(Posting(Of T))
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: FastList<Posting<T>>.IndexOf
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.IndexOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: FastList(Of Posting(Of T)).IndexOf
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).IndexOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.Insert(System.Int32,Microsoft.Health.InvertedIndex.Posting{{T}})
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{`0}}.Insert(System.Int32,Microsoft.Health.InvertedIndex.Posting{`0})
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}
  definition: Microsoft.Health.FastList`1.Insert(System.Int32,`0)
  name: Insert(Int32, Posting<T>)
  nameWithType: FastList<Posting<T>>.Insert(Int32, Posting<T>)
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.Insert(System.Int32, Microsoft.Health.InvertedIndex.Posting<T>)
  nameWithType.vb: FastList(Of Posting(Of T)).Insert(Int32, Posting(Of T))
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).Insert(System.Int32, Microsoft.Health.InvertedIndex.Posting(Of T))
  name.vb: Insert(Int32, Posting(Of T))
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: FastList<Posting<T>>.Insert
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.Insert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: FastList(Of Posting(Of T)).Insert
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).Insert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.RemoveAt(System.Int32)
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{`0}}.RemoveAt(System.Int32)
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}
  definition: Microsoft.Health.FastList`1.RemoveAt(System.Int32)
  name: RemoveAt(Int32)
  nameWithType: FastList<Posting<T>>.RemoveAt(Int32)
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.RemoveAt(System.Int32)
  nameWithType.vb: FastList(Of Posting(Of T)).RemoveAt(Int32)
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).RemoveAt(System.Int32)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: FastList<Posting<T>>.RemoveAt
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.RemoveAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: FastList(Of Posting(Of T)).RemoveAt
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).RemoveAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.CopyTo(Microsoft.Health.InvertedIndex.Posting{{T}}[],System.Int32)
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{`0}}.CopyTo(Microsoft.Health.InvertedIndex.Posting{`0}[],System.Int32)
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}
  definition: Microsoft.Health.FastList`1.CopyTo(`0[],System.Int32)
  name: CopyTo(Posting<T>[], Int32)
  nameWithType: FastList<Posting<T>>.CopyTo(Posting<T>[], Int32)
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.CopyTo(Microsoft.Health.InvertedIndex.Posting<T>[], System.Int32)
  nameWithType.vb: FastList(Of Posting(Of T)).CopyTo(Posting(Of T)(), Int32)
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).CopyTo(Microsoft.Health.InvertedIndex.Posting(Of T)(), System.Int32)
  name.vb: CopyTo(Posting(Of T)(), Int32)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: FastList<Posting<T>>.CopyTo
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.CopyTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: FastList(Of Posting(Of T)).CopyTo
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).CopyTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.Remove(Microsoft.Health.InvertedIndex.Posting{{T}})
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{`0}}.Remove(Microsoft.Health.InvertedIndex.Posting{`0})
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}
  definition: Microsoft.Health.FastList`1.Remove(`0)
  name: Remove(Posting<T>)
  nameWithType: FastList<Posting<T>>.Remove(Posting<T>)
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.Remove(Microsoft.Health.InvertedIndex.Posting<T>)
  nameWithType.vb: FastList(Of Posting(Of T)).Remove(Posting(Of T))
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).Remove(Microsoft.Health.InvertedIndex.Posting(Of T))
  name.vb: Remove(Posting(Of T))
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.Remove(`0)
    name: Remove
    nameWithType: FastList<Posting<T>>.Remove
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.Remove(`0)
    name: Remove
    nameWithType: FastList(Of Posting(Of T)).Remove
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.Trim
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{`0}}.Trim
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}
  definition: Microsoft.Health.FastList`1.Trim
  name: Trim()
  nameWithType: FastList<Posting<T>>.Trim()
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.Trim()
  nameWithType.vb: FastList(Of Posting(Of T)).Trim()
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).Trim()
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.Trim
    name: Trim
    nameWithType: FastList<Posting<T>>.Trim
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.Trim
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.Trim
    name: Trim
    nameWithType: FastList(Of Posting(Of T)).Trim
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).Trim
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.Sort
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{`0}}.Sort
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}
  definition: Microsoft.Health.FastList`1.Sort
  name: Sort()
  nameWithType: FastList<Posting<T>>.Sort()
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.Sort()
  nameWithType.vb: FastList(Of Posting(Of T)).Sort()
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).Sort()
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.Sort
    name: Sort
    nameWithType: FastList<Posting<T>>.Sort
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.Sort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.Sort
    name: Sort
    nameWithType: FastList(Of Posting(Of T)).Sort
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).Sort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.Sort(System.Collections.Generic.IComparer{Microsoft.Health.InvertedIndex.Posting{{T}}})
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{`0}}.Sort(System.Collections.Generic.IComparer{Microsoft.Health.InvertedIndex.Posting{`0}})
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}
  definition: Microsoft.Health.FastList`1.Sort(System.Collections.Generic.IComparer{`0})
  name: Sort(IComparer<Posting<T>>)
  nameWithType: FastList<Posting<T>>.Sort(IComparer<Posting<T>>)
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.Sort(System.Collections.Generic.IComparer<Microsoft.Health.InvertedIndex.Posting<T>>)
  nameWithType.vb: FastList(Of Posting(Of T)).Sort(IComparer(Of Posting(Of T)))
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).Sort(System.Collections.Generic.IComparer(Of Microsoft.Health.InvertedIndex.Posting(Of T)))
  name.vb: Sort(IComparer(Of Posting(Of T)))
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.Sort(System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: FastList<Posting<T>>.Sort
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.Sort
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.Sort(System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: FastList(Of Posting(Of T)).Sort
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).Sort
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.BinarySearch(Microsoft.Health.InvertedIndex.Posting{{T}})
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{`0}}.BinarySearch(Microsoft.Health.InvertedIndex.Posting{`0})
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}
  definition: Microsoft.Health.FastList`1.BinarySearch(`0)
  name: BinarySearch(Posting<T>)
  nameWithType: FastList<Posting<T>>.BinarySearch(Posting<T>)
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.BinarySearch(Microsoft.Health.InvertedIndex.Posting<T>)
  nameWithType.vb: FastList(Of Posting(Of T)).BinarySearch(Posting(Of T))
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).BinarySearch(Microsoft.Health.InvertedIndex.Posting(Of T))
  name.vb: BinarySearch(Posting(Of T))
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.BinarySearch(`0)
    name: BinarySearch
    nameWithType: FastList<Posting<T>>.BinarySearch
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.BinarySearch
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.BinarySearch(`0)
    name: BinarySearch
    nameWithType: FastList(Of Posting(Of T)).BinarySearch
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).BinarySearch
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.BinarySearch(Microsoft.Health.InvertedIndex.Posting{{T}},System.Collections.Generic.IComparer{Microsoft.Health.InvertedIndex.Posting{{T}}})
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{`0}}.BinarySearch(Microsoft.Health.InvertedIndex.Posting{`0},System.Collections.Generic.IComparer{Microsoft.Health.InvertedIndex.Posting{`0}})
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}
  definition: Microsoft.Health.FastList`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
  name: BinarySearch(Posting<T>, IComparer<Posting<T>>)
  nameWithType: FastList<Posting<T>>.BinarySearch(Posting<T>, IComparer<Posting<T>>)
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.BinarySearch(Microsoft.Health.InvertedIndex.Posting<T>, System.Collections.Generic.IComparer<Microsoft.Health.InvertedIndex.Posting<T>>)
  nameWithType.vb: FastList(Of Posting(Of T)).BinarySearch(Posting(Of T), IComparer(Of Posting(Of T)))
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).BinarySearch(Microsoft.Health.InvertedIndex.Posting(Of T), System.Collections.Generic.IComparer(Of Microsoft.Health.InvertedIndex.Posting(Of T)))
  name.vb: BinarySearch(Posting(Of T), IComparer(Of Posting(Of T)))
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: FastList<Posting<T>>.BinarySearch
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.BinarySearch
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: FastList(Of Posting(Of T)).BinarySearch
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).BinarySearch
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.EnsureCapacity
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{`0}}.EnsureCapacity
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}
  definition: Microsoft.Health.FastList`1.EnsureCapacity
  name: EnsureCapacity()
  nameWithType: FastList<Posting<T>>.EnsureCapacity()
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.EnsureCapacity()
  nameWithType.vb: FastList(Of Posting(Of T)).EnsureCapacity()
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).EnsureCapacity()
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.EnsureCapacity
    name: EnsureCapacity
    nameWithType: FastList<Posting<T>>.EnsureCapacity
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.EnsureCapacity
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.EnsureCapacity
    name: EnsureCapacity
    nameWithType: FastList(Of Posting(Of T)).EnsureCapacity
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).EnsureCapacity
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.EnsureCapacity(System.Int32)
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{`0}}.EnsureCapacity(System.Int32)
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}
  definition: Microsoft.Health.FastList`1.EnsureCapacity(System.Int32)
  name: EnsureCapacity(Int32)
  nameWithType: FastList<Posting<T>>.EnsureCapacity(Int32)
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.EnsureCapacity(System.Int32)
  nameWithType.vb: FastList(Of Posting(Of T)).EnsureCapacity(Int32)
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).EnsureCapacity(System.Int32)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.EnsureCapacity(System.Int32)
    name: EnsureCapacity
    nameWithType: FastList<Posting<T>>.EnsureCapacity
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.EnsureCapacity
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.EnsureCapacity(System.Int32)
    name: EnsureCapacity
    nameWithType: FastList(Of Posting(Of T)).EnsureCapacity
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).EnsureCapacity
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.Init(System.Int32)
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{`0}}.Init(System.Int32)
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}
  definition: Microsoft.Health.FastList`1.Init(System.Int32)
  name: Init(Int32)
  nameWithType: FastList<Posting<T>>.Init(Int32)
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.Init(System.Int32)
  nameWithType.vb: FastList(Of Posting(Of T)).Init(Int32)
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).Init(System.Int32)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.Init(System.Int32)
    name: Init
    nameWithType: FastList<Posting<T>>.Init
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.Init(System.Int32)
    name: Init
    nameWithType: FastList(Of Posting(Of T)).Init
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.ToArray
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{`0}}.ToArray
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}
  definition: Microsoft.Health.FastList`1.ToArray
  name: ToArray()
  nameWithType: FastList<Posting<T>>.ToArray()
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.ToArray()
  nameWithType.vb: FastList(Of Posting(Of T)).ToArray()
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).ToArray()
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.ToArray
    name: ToArray
    nameWithType: FastList<Posting<T>>.ToArray
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.ToArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.ToArray
    name: ToArray
    nameWithType: FastList(Of Posting(Of T)).ToArray
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).ToArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}.GetTrimmedBuffer
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{`0}}.GetTrimmedBuffer
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.Posting{{T}}}
  definition: Microsoft.Health.FastList`1.GetTrimmedBuffer
  name: GetTrimmedBuffer()
  nameWithType: FastList<Posting<T>>.GetTrimmedBuffer()
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.GetTrimmedBuffer()
  nameWithType.vb: FastList(Of Posting(Of T)).GetTrimmedBuffer()
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).GetTrimmedBuffer()
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.GetTrimmedBuffer
    name: GetTrimmedBuffer
    nameWithType: FastList<Posting<T>>.GetTrimmedBuffer
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.Posting<T>>.GetTrimmedBuffer
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.GetTrimmedBuffer
    name: GetTrimmedBuffer
    nameWithType: FastList(Of Posting(Of T)).GetTrimmedBuffer
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.Posting(Of T)).GetTrimmedBuffer
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.WeightPostingList`1.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<WeightPostingList<T>>()
  nameWithType: TypeHelper.ValueOrDbNull<WeightPostingList<T>>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.InvertedIndex.WeightPostingList<T>>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of WeightPostingList(Of T))()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.InvertedIndex.WeightPostingList(Of T))()
  name.vb: ValueOrDbNull(Of WeightPostingList(Of T))()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<WeightPostingList<T>>
    nameWithType: TypeHelper.ValueOrDbNull<WeightPostingList<T>>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.InvertedIndex.WeightPostingList<T>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of WeightPostingList(Of T))
    nameWithType: TypeHelper.ValueOrDbNull(Of WeightPostingList(Of T))
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.InvertedIndex.WeightPostingList(Of T))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.FastList`1
  commentId: T:Microsoft.Health.FastList`1
  isExternal: false
  name: FastList<T>
  nameWithType: FastList<T>
  fullName: Microsoft.Health.FastList<T>
  nameWithType.vb: FastList(Of T)
  fullName.vb: Microsoft.Health.FastList(Of T)
  name.vb: FastList(Of T)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1
    name: FastList
    nameWithType: FastList
    fullName: Microsoft.Health.FastList
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.FastList`1
    name: FastList
    nameWithType: FastList
    fullName: Microsoft.Health.FastList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: Microsoft.Health.InvertedIndex.IndexList`1
  commentId: T:Microsoft.Health.InvertedIndex.IndexList`1
  isExternal: false
  name: IndexList<T>
  nameWithType: IndexList<T>
  fullName: Microsoft.Health.InvertedIndex.IndexList<T>
  nameWithType.vb: IndexList(Of T)
  fullName.vb: Microsoft.Health.InvertedIndex.IndexList(Of T)
  name.vb: IndexList(Of T)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.IndexList`1
    name: IndexList
    nameWithType: IndexList
    fullName: Microsoft.Health.InvertedIndex.IndexList
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.IndexList`1
    name: IndexList
    nameWithType: IndexList
    fullName: Microsoft.Health.InvertedIndex.IndexList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.PostingList`1
  commentId: T:Microsoft.Health.InvertedIndex.PostingList`1
  isExternal: false
  name: PostingList<T>
  nameWithType: PostingList<T>
  fullName: Microsoft.Health.InvertedIndex.PostingList<T>
  nameWithType.vb: PostingList(Of T)
  fullName.vb: Microsoft.Health.InvertedIndex.PostingList(Of T)
  name.vb: PostingList(Of T)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.PostingList`1
    name: PostingList
    nameWithType: PostingList
    fullName: Microsoft.Health.InvertedIndex.PostingList
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.PostingList`1
    name: PostingList
    nameWithType: PostingList
    fullName: Microsoft.Health.InvertedIndex.PostingList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.IRecordPropertyList`1
  commentId: T:Microsoft.Health.InvertedIndex.IRecordPropertyList`1
  isExternal: false
  name: IRecordPropertyList<T>
  nameWithType: IRecordPropertyList<T>
  fullName: Microsoft.Health.InvertedIndex.IRecordPropertyList<T>
  nameWithType.vb: IRecordPropertyList(Of T)
  fullName.vb: Microsoft.Health.InvertedIndex.IRecordPropertyList(Of T)
  name.vb: IRecordPropertyList(Of T)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.IRecordPropertyList`1
    name: IRecordPropertyList
    nameWithType: IRecordPropertyList
    fullName: Microsoft.Health.InvertedIndex.IRecordPropertyList
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.IRecordPropertyList`1
    name: IRecordPropertyList
    nameWithType: IRecordPropertyList
    fullName: Microsoft.Health.InvertedIndex.IRecordPropertyList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.ISkipEnumerable`1
  commentId: T:Microsoft.Health.InvertedIndex.ISkipEnumerable`1
  isExternal: false
  name: ISkipEnumerable<T>
  nameWithType: ISkipEnumerable<T>
  fullName: Microsoft.Health.InvertedIndex.ISkipEnumerable<T>
  nameWithType.vb: ISkipEnumerable(Of T)
  fullName.vb: Microsoft.Health.InvertedIndex.ISkipEnumerable(Of T)
  name.vb: ISkipEnumerable(Of T)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.ISkipEnumerable`1
    name: ISkipEnumerable
    nameWithType: ISkipEnumerable
    fullName: Microsoft.Health.InvertedIndex.ISkipEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.ISkipEnumerable`1
    name: ISkipEnumerable
    nameWithType: ISkipEnumerable
    fullName: Microsoft.Health.InvertedIndex.ISkipEnumerable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Microsoft.Health.InvertedIndex.PostingList`1.AddInOrder(Microsoft.Health.InvertedIndex.Posting{`0})
  commentId: M:Microsoft.Health.InvertedIndex.PostingList`1.AddInOrder(Microsoft.Health.InvertedIndex.Posting{`0})
  isExternal: false
  name: AddInOrder(Posting<T>)
  nameWithType: PostingList<T>.AddInOrder(Posting<T>)
  fullName: Microsoft.Health.InvertedIndex.PostingList<T>.AddInOrder(Microsoft.Health.InvertedIndex.Posting<T>)
  nameWithType.vb: PostingList(Of T).AddInOrder(Posting(Of T))
  fullName.vb: Microsoft.Health.InvertedIndex.PostingList(Of T).AddInOrder(Microsoft.Health.InvertedIndex.Posting(Of T))
  name.vb: AddInOrder(Posting(Of T))
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.PostingList`1.AddInOrder(Microsoft.Health.InvertedIndex.Posting{`0})
    name: AddInOrder
    nameWithType: PostingList<T>.AddInOrder
    fullName: Microsoft.Health.InvertedIndex.PostingList<T>.AddInOrder
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.PostingList`1.AddInOrder(Microsoft.Health.InvertedIndex.Posting{`0})
    name: AddInOrder
    nameWithType: PostingList(Of T).AddInOrder
    fullName: Microsoft.Health.InvertedIndex.PostingList(Of T).AddInOrder
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.PostingList`1.GetPropertyEnumerator
  commentId: M:Microsoft.Health.InvertedIndex.PostingList`1.GetPropertyEnumerator
  isExternal: false
  name: GetPropertyEnumerator()
  nameWithType: PostingList<T>.GetPropertyEnumerator()
  fullName: Microsoft.Health.InvertedIndex.PostingList<T>.GetPropertyEnumerator()
  nameWithType.vb: PostingList(Of T).GetPropertyEnumerator()
  fullName.vb: Microsoft.Health.InvertedIndex.PostingList(Of T).GetPropertyEnumerator()
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.PostingList`1.GetPropertyEnumerator
    name: GetPropertyEnumerator
    nameWithType: PostingList<T>.GetPropertyEnumerator
    fullName: Microsoft.Health.InvertedIndex.PostingList<T>.GetPropertyEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.PostingList`1.GetPropertyEnumerator
    name: GetPropertyEnumerator
    nameWithType: PostingList(Of T).GetPropertyEnumerator
    fullName: Microsoft.Health.InvertedIndex.PostingList(Of T).GetPropertyEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.PostingList`1.GetIDs
  commentId: M:Microsoft.Health.InvertedIndex.PostingList`1.GetIDs
  isExternal: false
  name: GetIDs()
  nameWithType: PostingList<T>.GetIDs()
  fullName: Microsoft.Health.InvertedIndex.PostingList<T>.GetIDs()
  nameWithType.vb: PostingList(Of T).GetIDs()
  fullName.vb: Microsoft.Health.InvertedIndex.PostingList(Of T).GetIDs()
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.PostingList`1.GetIDs
    name: GetIDs
    nameWithType: PostingList<T>.GetIDs
    fullName: Microsoft.Health.InvertedIndex.PostingList<T>.GetIDs
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.PostingList`1.GetIDs
    name: GetIDs
    nameWithType: PostingList(Of T).GetIDs
    fullName: Microsoft.Health.InvertedIndex.PostingList(Of T).GetIDs
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.PostingList`1.GetSkipEnumerator
  commentId: M:Microsoft.Health.InvertedIndex.PostingList`1.GetSkipEnumerator
  isExternal: false
  name: GetSkipEnumerator()
  nameWithType: PostingList<T>.GetSkipEnumerator()
  fullName: Microsoft.Health.InvertedIndex.PostingList<T>.GetSkipEnumerator()
  nameWithType.vb: PostingList(Of T).GetSkipEnumerator()
  fullName.vb: Microsoft.Health.InvertedIndex.PostingList(Of T).GetSkipEnumerator()
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.PostingList`1.GetSkipEnumerator
    name: GetSkipEnumerator
    nameWithType: PostingList<T>.GetSkipEnumerator
    fullName: Microsoft.Health.InvertedIndex.PostingList<T>.GetSkipEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.PostingList`1.GetSkipEnumerator
    name: GetSkipEnumerator
    nameWithType: PostingList(Of T).GetSkipEnumerator
    fullName: Microsoft.Health.InvertedIndex.PostingList(Of T).GetSkipEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.PostingList`1.GetEnumerator
  commentId: M:Microsoft.Health.InvertedIndex.PostingList`1.GetEnumerator
  isExternal: false
  name: GetEnumerator()
  nameWithType: PostingList<T>.GetEnumerator()
  fullName: Microsoft.Health.InvertedIndex.PostingList<T>.GetEnumerator()
  nameWithType.vb: PostingList(Of T).GetEnumerator()
  fullName.vb: Microsoft.Health.InvertedIndex.PostingList(Of T).GetEnumerator()
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.PostingList`1.GetEnumerator
    name: GetEnumerator
    nameWithType: PostingList<T>.GetEnumerator
    fullName: Microsoft.Health.InvertedIndex.PostingList<T>.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.PostingList`1.GetEnumerator
    name: GetEnumerator
    nameWithType: PostingList(Of T).GetEnumerator
    fullName: Microsoft.Health.InvertedIndex.PostingList(Of T).GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.PostingList`1.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Microsoft.Health.InvertedIndex.PostingList`1.System#Collections#IEnumerable#GetEnumerator
  isExternal: false
  name: IEnumerable.GetEnumerator()
  nameWithType: PostingList<T>.IEnumerable.GetEnumerator()
  fullName: Microsoft.Health.InvertedIndex.PostingList<T>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: PostingList(Of T).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: Microsoft.Health.InvertedIndex.PostingList(Of T).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.PostingList`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: PostingList<T>.IEnumerable.GetEnumerator
    fullName: Microsoft.Health.InvertedIndex.PostingList<T>.System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.PostingList`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: PostingList(Of T).System.Collections.IEnumerable.GetEnumerator
    fullName: Microsoft.Health.InvertedIndex.PostingList(Of T).System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.IndexList`1.GrowBy
  commentId: P:Microsoft.Health.InvertedIndex.IndexList`1.GrowBy
  isExternal: false
  name: GrowBy
  nameWithType: IndexList<T>.GrowBy
  fullName: Microsoft.Health.InvertedIndex.IndexList<T>.GrowBy
  nameWithType.vb: IndexList(Of T).GrowBy
  fullName.vb: Microsoft.Health.InvertedIndex.IndexList(Of T).GrowBy
- uid: Microsoft.Health.InvertedIndex.IndexList`1.PrepareForIndex
  commentId: M:Microsoft.Health.InvertedIndex.IndexList`1.PrepareForIndex
  isExternal: false
  name: PrepareForIndex()
  nameWithType: IndexList<T>.PrepareForIndex()
  fullName: Microsoft.Health.InvertedIndex.IndexList<T>.PrepareForIndex()
  nameWithType.vb: IndexList(Of T).PrepareForIndex()
  fullName.vb: Microsoft.Health.InvertedIndex.IndexList(Of T).PrepareForIndex()
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.IndexList`1.PrepareForIndex
    name: PrepareForIndex
    nameWithType: IndexList<T>.PrepareForIndex
    fullName: Microsoft.Health.InvertedIndex.IndexList<T>.PrepareForIndex
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.IndexList`1.PrepareForIndex
    name: PrepareForIndex
    nameWithType: IndexList(Of T).PrepareForIndex
    fullName: Microsoft.Health.InvertedIndex.IndexList(Of T).PrepareForIndex
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.IndexList`1.CalculateNewSize(System.Int32)
  commentId: M:Microsoft.Health.InvertedIndex.IndexList`1.CalculateNewSize(System.Int32)
  isExternal: true
  name: CalculateNewSize(Int32)
  nameWithType: IndexList<T>.CalculateNewSize(Int32)
  fullName: Microsoft.Health.InvertedIndex.IndexList<T>.CalculateNewSize(System.Int32)
  nameWithType.vb: IndexList(Of T).CalculateNewSize(Int32)
  fullName.vb: Microsoft.Health.InvertedIndex.IndexList(Of T).CalculateNewSize(System.Int32)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.IndexList`1.CalculateNewSize(System.Int32)
    name: CalculateNewSize
    nameWithType: IndexList<T>.CalculateNewSize
    fullName: Microsoft.Health.InvertedIndex.IndexList<T>.CalculateNewSize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.IndexList`1.CalculateNewSize(System.Int32)
    name: CalculateNewSize
    nameWithType: IndexList(Of T).CalculateNewSize
    fullName: Microsoft.Health.InvertedIndex.IndexList(Of T).CalculateNewSize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.Item(System.Int32)
  commentId: P:Microsoft.Health.FastList`1.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: FastList<T>.Item[Int32]
  fullName: Microsoft.Health.FastList<T>.Item[System.Int32]
  nameWithType.vb: FastList(Of T).Item(Int32)
  fullName.vb: Microsoft.Health.FastList(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.Item(System.Int32)
    name: Item
    nameWithType: FastList<T>.Item
    fullName: Microsoft.Health.FastList<T>.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: Microsoft.Health.FastList`1.Item(System.Int32)
    name: Item
    nameWithType: FastList(Of T).Item
    fullName: Microsoft.Health.FastList(Of T).Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.Buffer
  commentId: P:Microsoft.Health.FastList`1.Buffer
  isExternal: false
  name: Buffer
  nameWithType: FastList<T>.Buffer
  fullName: Microsoft.Health.FastList<T>.Buffer
  nameWithType.vb: FastList(Of T).Buffer
  fullName.vb: Microsoft.Health.FastList(Of T).Buffer
- uid: Microsoft.Health.FastList`1.Count
  commentId: P:Microsoft.Health.FastList`1.Count
  isExternal: false
  name: Count
  nameWithType: FastList<T>.Count
  fullName: Microsoft.Health.FastList<T>.Count
  nameWithType.vb: FastList(Of T).Count
  fullName.vb: Microsoft.Health.FastList(Of T).Count
- uid: Microsoft.Health.FastList`1.IsReadOnly
  commentId: P:Microsoft.Health.FastList`1.IsReadOnly
  isExternal: false
  name: IsReadOnly
  nameWithType: FastList<T>.IsReadOnly
  fullName: Microsoft.Health.FastList<T>.IsReadOnly
  nameWithType.vb: FastList(Of T).IsReadOnly
  fullName.vb: Microsoft.Health.FastList(Of T).IsReadOnly
- uid: Microsoft.Health.FastList`1.Add(`0)
  commentId: M:Microsoft.Health.FastList`1.Add(`0)
  isExternal: false
  name: Add(T)
  nameWithType: FastList<T>.Add(T)
  fullName: Microsoft.Health.FastList<T>.Add(T)
  nameWithType.vb: FastList(Of T).Add(T)
  fullName.vb: Microsoft.Health.FastList(Of T).Add(T)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.Add(`0)
    name: Add
    nameWithType: FastList<T>.Add
    fullName: Microsoft.Health.FastList<T>.Add
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.Add(`0)
    name: Add
    nameWithType: FastList(Of T).Add
    fullName: Microsoft.Health.FastList(Of T).Add
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.AddNoCheck(`0)
  commentId: M:Microsoft.Health.FastList`1.AddNoCheck(`0)
  isExternal: false
  name: AddNoCheck(T)
  nameWithType: FastList<T>.AddNoCheck(T)
  fullName: Microsoft.Health.FastList<T>.AddNoCheck(T)
  nameWithType.vb: FastList(Of T).AddNoCheck(T)
  fullName.vb: Microsoft.Health.FastList(Of T).AddNoCheck(T)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.AddNoCheck(`0)
    name: AddNoCheck
    nameWithType: FastList<T>.AddNoCheck
    fullName: Microsoft.Health.FastList<T>.AddNoCheck
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.AddNoCheck(`0)
    name: AddNoCheck
    nameWithType: FastList(Of T).AddNoCheck
    fullName: Microsoft.Health.FastList(Of T).AddNoCheck
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  commentId: M:Microsoft.Health.FastList`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: AddRange(IEnumerable<T>)
  nameWithType: FastList<T>.AddRange(IEnumerable<T>)
  fullName: Microsoft.Health.FastList<T>.AddRange(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: FastList(Of T).AddRange(IEnumerable(Of T))
  fullName.vb: Microsoft.Health.FastList(Of T).AddRange(System.Collections.Generic.IEnumerable(Of T))
  name.vb: AddRange(IEnumerable(Of T))
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    nameWithType: FastList<T>.AddRange
    fullName: Microsoft.Health.FastList<T>.AddRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    nameWithType: FastList(Of T).AddRange
    fullName: Microsoft.Health.FastList(Of T).AddRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.AddRange(System.Collections.Generic.IList{`0})
  commentId: M:Microsoft.Health.FastList`1.AddRange(System.Collections.Generic.IList{`0})
  isExternal: true
  name: AddRange(IList<T>)
  nameWithType: FastList<T>.AddRange(IList<T>)
  fullName: Microsoft.Health.FastList<T>.AddRange(System.Collections.Generic.IList<T>)
  nameWithType.vb: FastList(Of T).AddRange(IList(Of T))
  fullName.vb: Microsoft.Health.FastList(Of T).AddRange(System.Collections.Generic.IList(Of T))
  name.vb: AddRange(IList(Of T))
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.AddRange(System.Collections.Generic.IList{`0})
    name: AddRange
    nameWithType: FastList<T>.AddRange
    fullName: Microsoft.Health.FastList<T>.AddRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.AddRange(System.Collections.Generic.IList{`0})
    name: AddRange
    nameWithType: FastList(Of T).AddRange
    fullName: Microsoft.Health.FastList(Of T).AddRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.AddRange(`0[])
  commentId: M:Microsoft.Health.FastList`1.AddRange(`0[])
  isExternal: false
  name: AddRange(T[])
  nameWithType: FastList<T>.AddRange(T[])
  fullName: Microsoft.Health.FastList<T>.AddRange(T[])
  nameWithType.vb: FastList(Of T).AddRange(T())
  fullName.vb: Microsoft.Health.FastList(Of T).AddRange(T())
  name.vb: AddRange(T())
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.AddRange(`0[])
    name: AddRange
    nameWithType: FastList<T>.AddRange
    fullName: Microsoft.Health.FastList<T>.AddRange
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.AddRange(`0[])
    name: AddRange
    nameWithType: FastList(Of T).AddRange
    fullName: Microsoft.Health.FastList(Of T).AddRange
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.AddRange(`0[],System.Int32,System.Int32)
  commentId: M:Microsoft.Health.FastList`1.AddRange(`0[],System.Int32,System.Int32)
  isExternal: true
  name: AddRange(T[], Int32, Int32)
  nameWithType: FastList<T>.AddRange(T[], Int32, Int32)
  fullName: Microsoft.Health.FastList<T>.AddRange(T[], System.Int32, System.Int32)
  nameWithType.vb: FastList(Of T).AddRange(T(), Int32, Int32)
  fullName.vb: Microsoft.Health.FastList(Of T).AddRange(T(), System.Int32, System.Int32)
  name.vb: AddRange(T(), Int32, Int32)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.AddRange(`0[],System.Int32,System.Int32)
    name: AddRange
    nameWithType: FastList<T>.AddRange
    fullName: Microsoft.Health.FastList<T>.AddRange
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.AddRange(`0[],System.Int32,System.Int32)
    name: AddRange
    nameWithType: FastList(Of T).AddRange
    fullName: Microsoft.Health.FastList(Of T).AddRange
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.Clear
  commentId: M:Microsoft.Health.FastList`1.Clear
  isExternal: false
  name: Clear()
  nameWithType: FastList<T>.Clear()
  fullName: Microsoft.Health.FastList<T>.Clear()
  nameWithType.vb: FastList(Of T).Clear()
  fullName.vb: Microsoft.Health.FastList(Of T).Clear()
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.Clear
    name: Clear
    nameWithType: FastList<T>.Clear
    fullName: Microsoft.Health.FastList<T>.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.Clear
    name: Clear
    nameWithType: FastList(Of T).Clear
    fullName: Microsoft.Health.FastList(Of T).Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.Erase
  commentId: M:Microsoft.Health.FastList`1.Erase
  isExternal: false
  name: Erase()
  nameWithType: FastList<T>.Erase()
  fullName: Microsoft.Health.FastList<T>.Erase()
  nameWithType.vb: FastList(Of T).Erase()
  fullName.vb: Microsoft.Health.FastList(Of T).Erase()
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.Erase
    name: Erase
    nameWithType: FastList<T>.Erase
    fullName: Microsoft.Health.FastList<T>.Erase
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.Erase
    name: Erase
    nameWithType: FastList(Of T).Erase
    fullName: Microsoft.Health.FastList(Of T).Erase
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.GetAt(System.Int32)
  commentId: M:Microsoft.Health.FastList`1.GetAt(System.Int32)
  isExternal: true
  name: GetAt(Int32)
  nameWithType: FastList<T>.GetAt(Int32)
  fullName: Microsoft.Health.FastList<T>.GetAt(System.Int32)
  nameWithType.vb: FastList(Of T).GetAt(Int32)
  fullName.vb: Microsoft.Health.FastList(Of T).GetAt(System.Int32)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.GetAt(System.Int32)
    name: GetAt
    nameWithType: FastList<T>.GetAt
    fullName: Microsoft.Health.FastList<T>.GetAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.GetAt(System.Int32)
    name: GetAt
    nameWithType: FastList(Of T).GetAt
    fullName: Microsoft.Health.FastList(Of T).GetAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.Contains(`0)
  commentId: M:Microsoft.Health.FastList`1.Contains(`0)
  isExternal: false
  name: Contains(T)
  nameWithType: FastList<T>.Contains(T)
  fullName: Microsoft.Health.FastList<T>.Contains(T)
  nameWithType.vb: FastList(Of T).Contains(T)
  fullName.vb: Microsoft.Health.FastList(Of T).Contains(T)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.Contains(`0)
    name: Contains
    nameWithType: FastList<T>.Contains
    fullName: Microsoft.Health.FastList<T>.Contains
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.Contains(`0)
    name: Contains
    nameWithType: FastList(Of T).Contains
    fullName: Microsoft.Health.FastList(Of T).Contains
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.IndexOf(`0)
  commentId: M:Microsoft.Health.FastList`1.IndexOf(`0)
  isExternal: false
  name: IndexOf(T)
  nameWithType: FastList<T>.IndexOf(T)
  fullName: Microsoft.Health.FastList<T>.IndexOf(T)
  nameWithType.vb: FastList(Of T).IndexOf(T)
  fullName.vb: Microsoft.Health.FastList(Of T).IndexOf(T)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: FastList<T>.IndexOf
    fullName: Microsoft.Health.FastList<T>.IndexOf
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: FastList(Of T).IndexOf
    fullName: Microsoft.Health.FastList(Of T).IndexOf
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.Insert(System.Int32,`0)
  commentId: M:Microsoft.Health.FastList`1.Insert(System.Int32,`0)
  isExternal: true
  name: Insert(Int32, T)
  nameWithType: FastList<T>.Insert(Int32, T)
  fullName: Microsoft.Health.FastList<T>.Insert(System.Int32, T)
  nameWithType.vb: FastList(Of T).Insert(Int32, T)
  fullName.vb: Microsoft.Health.FastList(Of T).Insert(System.Int32, T)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: FastList<T>.Insert
    fullName: Microsoft.Health.FastList<T>.Insert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: FastList(Of T).Insert
    fullName: Microsoft.Health.FastList(Of T).Insert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.RemoveAt(System.Int32)
  commentId: M:Microsoft.Health.FastList`1.RemoveAt(System.Int32)
  isExternal: true
  name: RemoveAt(Int32)
  nameWithType: FastList<T>.RemoveAt(Int32)
  fullName: Microsoft.Health.FastList<T>.RemoveAt(System.Int32)
  nameWithType.vb: FastList(Of T).RemoveAt(Int32)
  fullName.vb: Microsoft.Health.FastList(Of T).RemoveAt(System.Int32)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: FastList<T>.RemoveAt
    fullName: Microsoft.Health.FastList<T>.RemoveAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: FastList(Of T).RemoveAt
    fullName: Microsoft.Health.FastList(Of T).RemoveAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.CopyTo(`0[],System.Int32)
  commentId: M:Microsoft.Health.FastList`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: FastList<T>.CopyTo(T[], Int32)
  fullName: Microsoft.Health.FastList<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: FastList(Of T).CopyTo(T(), Int32)
  fullName.vb: Microsoft.Health.FastList(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: FastList<T>.CopyTo
    fullName: Microsoft.Health.FastList<T>.CopyTo
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: FastList(Of T).CopyTo
    fullName: Microsoft.Health.FastList(Of T).CopyTo
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.Remove(`0)
  commentId: M:Microsoft.Health.FastList`1.Remove(`0)
  isExternal: false
  name: Remove(T)
  nameWithType: FastList<T>.Remove(T)
  fullName: Microsoft.Health.FastList<T>.Remove(T)
  nameWithType.vb: FastList(Of T).Remove(T)
  fullName.vb: Microsoft.Health.FastList(Of T).Remove(T)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.Remove(`0)
    name: Remove
    nameWithType: FastList<T>.Remove
    fullName: Microsoft.Health.FastList<T>.Remove
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.Remove(`0)
    name: Remove
    nameWithType: FastList(Of T).Remove
    fullName: Microsoft.Health.FastList(Of T).Remove
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.Trim
  commentId: M:Microsoft.Health.FastList`1.Trim
  isExternal: false
  name: Trim()
  nameWithType: FastList<T>.Trim()
  fullName: Microsoft.Health.FastList<T>.Trim()
  nameWithType.vb: FastList(Of T).Trim()
  fullName.vb: Microsoft.Health.FastList(Of T).Trim()
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.Trim
    name: Trim
    nameWithType: FastList<T>.Trim
    fullName: Microsoft.Health.FastList<T>.Trim
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.Trim
    name: Trim
    nameWithType: FastList(Of T).Trim
    fullName: Microsoft.Health.FastList(Of T).Trim
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.Sort
  commentId: M:Microsoft.Health.FastList`1.Sort
  isExternal: false
  name: Sort()
  nameWithType: FastList<T>.Sort()
  fullName: Microsoft.Health.FastList<T>.Sort()
  nameWithType.vb: FastList(Of T).Sort()
  fullName.vb: Microsoft.Health.FastList(Of T).Sort()
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.Sort
    name: Sort
    nameWithType: FastList<T>.Sort
    fullName: Microsoft.Health.FastList<T>.Sort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.Sort
    name: Sort
    nameWithType: FastList(Of T).Sort
    fullName: Microsoft.Health.FastList(Of T).Sort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.Sort(System.Collections.Generic.IComparer{`0})
  commentId: M:Microsoft.Health.FastList`1.Sort(System.Collections.Generic.IComparer{`0})
  isExternal: true
  name: Sort(IComparer<T>)
  nameWithType: FastList<T>.Sort(IComparer<T>)
  fullName: Microsoft.Health.FastList<T>.Sort(System.Collections.Generic.IComparer<T>)
  nameWithType.vb: FastList(Of T).Sort(IComparer(Of T))
  fullName.vb: Microsoft.Health.FastList(Of T).Sort(System.Collections.Generic.IComparer(Of T))
  name.vb: Sort(IComparer(Of T))
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.Sort(System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: FastList<T>.Sort
    fullName: Microsoft.Health.FastList<T>.Sort
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.Sort(System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: FastList(Of T).Sort
    fullName: Microsoft.Health.FastList(Of T).Sort
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.BinarySearch(`0)
  commentId: M:Microsoft.Health.FastList`1.BinarySearch(`0)
  isExternal: false
  name: BinarySearch(T)
  nameWithType: FastList<T>.BinarySearch(T)
  fullName: Microsoft.Health.FastList<T>.BinarySearch(T)
  nameWithType.vb: FastList(Of T).BinarySearch(T)
  fullName.vb: Microsoft.Health.FastList(Of T).BinarySearch(T)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.BinarySearch(`0)
    name: BinarySearch
    nameWithType: FastList<T>.BinarySearch
    fullName: Microsoft.Health.FastList<T>.BinarySearch
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.BinarySearch(`0)
    name: BinarySearch
    nameWithType: FastList(Of T).BinarySearch
    fullName: Microsoft.Health.FastList(Of T).BinarySearch
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
  commentId: M:Microsoft.Health.FastList`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
  isExternal: true
  name: BinarySearch(T, IComparer<T>)
  nameWithType: FastList<T>.BinarySearch(T, IComparer<T>)
  fullName: Microsoft.Health.FastList<T>.BinarySearch(T, System.Collections.Generic.IComparer<T>)
  nameWithType.vb: FastList(Of T).BinarySearch(T, IComparer(Of T))
  fullName.vb: Microsoft.Health.FastList(Of T).BinarySearch(T, System.Collections.Generic.IComparer(Of T))
  name.vb: BinarySearch(T, IComparer(Of T))
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: FastList<T>.BinarySearch
    fullName: Microsoft.Health.FastList<T>.BinarySearch
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: FastList(Of T).BinarySearch
    fullName: Microsoft.Health.FastList(Of T).BinarySearch
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.EnsureCapacity
  commentId: M:Microsoft.Health.FastList`1.EnsureCapacity
  isExternal: false
  name: EnsureCapacity()
  nameWithType: FastList<T>.EnsureCapacity()
  fullName: Microsoft.Health.FastList<T>.EnsureCapacity()
  nameWithType.vb: FastList(Of T).EnsureCapacity()
  fullName.vb: Microsoft.Health.FastList(Of T).EnsureCapacity()
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.EnsureCapacity
    name: EnsureCapacity
    nameWithType: FastList<T>.EnsureCapacity
    fullName: Microsoft.Health.FastList<T>.EnsureCapacity
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.EnsureCapacity
    name: EnsureCapacity
    nameWithType: FastList(Of T).EnsureCapacity
    fullName: Microsoft.Health.FastList(Of T).EnsureCapacity
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.EnsureCapacity(System.Int32)
  commentId: M:Microsoft.Health.FastList`1.EnsureCapacity(System.Int32)
  isExternal: true
  name: EnsureCapacity(Int32)
  nameWithType: FastList<T>.EnsureCapacity(Int32)
  fullName: Microsoft.Health.FastList<T>.EnsureCapacity(System.Int32)
  nameWithType.vb: FastList(Of T).EnsureCapacity(Int32)
  fullName.vb: Microsoft.Health.FastList(Of T).EnsureCapacity(System.Int32)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.EnsureCapacity(System.Int32)
    name: EnsureCapacity
    nameWithType: FastList<T>.EnsureCapacity
    fullName: Microsoft.Health.FastList<T>.EnsureCapacity
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.EnsureCapacity(System.Int32)
    name: EnsureCapacity
    nameWithType: FastList(Of T).EnsureCapacity
    fullName: Microsoft.Health.FastList(Of T).EnsureCapacity
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.Init(System.Int32)
  commentId: M:Microsoft.Health.FastList`1.Init(System.Int32)
  isExternal: true
  name: Init(Int32)
  nameWithType: FastList<T>.Init(Int32)
  fullName: Microsoft.Health.FastList<T>.Init(System.Int32)
  nameWithType.vb: FastList(Of T).Init(Int32)
  fullName.vb: Microsoft.Health.FastList(Of T).Init(System.Int32)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.Init(System.Int32)
    name: Init
    nameWithType: FastList<T>.Init
    fullName: Microsoft.Health.FastList<T>.Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.Init(System.Int32)
    name: Init
    nameWithType: FastList(Of T).Init
    fullName: Microsoft.Health.FastList(Of T).Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.ToArray
  commentId: M:Microsoft.Health.FastList`1.ToArray
  isExternal: false
  name: ToArray()
  nameWithType: FastList<T>.ToArray()
  fullName: Microsoft.Health.FastList<T>.ToArray()
  nameWithType.vb: FastList(Of T).ToArray()
  fullName.vb: Microsoft.Health.FastList(Of T).ToArray()
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.ToArray
    name: ToArray
    nameWithType: FastList<T>.ToArray
    fullName: Microsoft.Health.FastList<T>.ToArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.ToArray
    name: ToArray
    nameWithType: FastList(Of T).ToArray
    fullName: Microsoft.Health.FastList(Of T).ToArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.GetTrimmedBuffer
  commentId: M:Microsoft.Health.FastList`1.GetTrimmedBuffer
  isExternal: false
  name: GetTrimmedBuffer()
  nameWithType: FastList<T>.GetTrimmedBuffer()
  fullName: Microsoft.Health.FastList<T>.GetTrimmedBuffer()
  nameWithType.vb: FastList(Of T).GetTrimmedBuffer()
  fullName.vb: Microsoft.Health.FastList(Of T).GetTrimmedBuffer()
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.GetTrimmedBuffer
    name: GetTrimmedBuffer
    nameWithType: FastList<T>.GetTrimmedBuffer
    fullName: Microsoft.Health.FastList<T>.GetTrimmedBuffer
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.GetTrimmedBuffer
    name: GetTrimmedBuffer
    nameWithType: FastList(Of T).GetTrimmedBuffer
    fullName: Microsoft.Health.FastList(Of T).GetTrimmedBuffer
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.InvertedIndex.WeightPostingList`1.#ctor*
  commentId: Overload:Microsoft.Health.InvertedIndex.WeightPostingList`1.#ctor
  isExternal: false
  name: WeightPostingList
  nameWithType: WeightPostingList<T>.WeightPostingList
  fullName: Microsoft.Health.InvertedIndex.WeightPostingList<T>.WeightPostingList
  nameWithType.vb: WeightPostingList(Of T).WeightPostingList
  fullName.vb: Microsoft.Health.InvertedIndex.WeightPostingList(Of T).WeightPostingList
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Health.InvertedIndex.WeightPostingList`1.SerializationTokenName*
  commentId: Overload:Microsoft.Health.InvertedIndex.WeightPostingList`1.SerializationTokenName
  isExternal: false
  name: SerializationTokenName
  nameWithType: WeightPostingList<T>.SerializationTokenName
  fullName: Microsoft.Health.InvertedIndex.WeightPostingList<T>.SerializationTokenName
  nameWithType.vb: WeightPostingList(Of T).SerializationTokenName
  fullName.vb: Microsoft.Health.InvertedIndex.WeightPostingList(Of T).SerializationTokenName
- uid: Microsoft.Health.InvertedIndex.ISerializableIndexType.SerializationTokenName
  commentId: P:Microsoft.Health.InvertedIndex.ISerializableIndexType.SerializationTokenName
  parent: Microsoft.Health.InvertedIndex.ISerializableIndexType
  isExternal: false
  name: SerializationTokenName
  nameWithType: ISerializableIndexType.SerializationTokenName
  fullName: Microsoft.Health.InvertedIndex.ISerializableIndexType.SerializationTokenName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.InvertedIndex.PostingList{{T}}.CreatePostingEnumerator
  commentId: M:Microsoft.Health.InvertedIndex.PostingList{`0}.CreatePostingEnumerator
  parent: Microsoft.Health.InvertedIndex.PostingList{{T}}
  definition: Microsoft.Health.InvertedIndex.PostingList`1.CreatePostingEnumerator
  name: CreatePostingEnumerator()
  nameWithType: PostingList<T>.CreatePostingEnumerator()
  fullName: Microsoft.Health.InvertedIndex.PostingList<T>.CreatePostingEnumerator()
  nameWithType.vb: PostingList(Of T).CreatePostingEnumerator()
  fullName.vb: Microsoft.Health.InvertedIndex.PostingList(Of T).CreatePostingEnumerator()
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.PostingList`1.CreatePostingEnumerator
    name: CreatePostingEnumerator
    nameWithType: PostingList<T>.CreatePostingEnumerator
    fullName: Microsoft.Health.InvertedIndex.PostingList<T>.CreatePostingEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.PostingList`1.CreatePostingEnumerator
    name: CreatePostingEnumerator
    nameWithType: PostingList(Of T).CreatePostingEnumerator
    fullName: Microsoft.Health.InvertedIndex.PostingList(Of T).CreatePostingEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.WeightPostingList`1.CreatePostingEnumerator*
  commentId: Overload:Microsoft.Health.InvertedIndex.WeightPostingList`1.CreatePostingEnumerator
  isExternal: false
  name: CreatePostingEnumerator
  nameWithType: WeightPostingList<T>.CreatePostingEnumerator
  fullName: Microsoft.Health.InvertedIndex.WeightPostingList<T>.CreatePostingEnumerator
  nameWithType.vb: WeightPostingList(Of T).CreatePostingEnumerator
  fullName.vb: Microsoft.Health.InvertedIndex.WeightPostingList(Of T).CreatePostingEnumerator
- uid: Microsoft.Health.InvertedIndex.PostingArrayEnumerator{{T}}
  commentId: T:Microsoft.Health.InvertedIndex.PostingArrayEnumerator{`0}
  parent: Microsoft.Health.InvertedIndex
  definition: Microsoft.Health.InvertedIndex.PostingArrayEnumerator`1
  name: PostingArrayEnumerator<T>
  nameWithType: PostingArrayEnumerator<T>
  fullName: Microsoft.Health.InvertedIndex.PostingArrayEnumerator<T>
  nameWithType.vb: PostingArrayEnumerator(Of T)
  fullName.vb: Microsoft.Health.InvertedIndex.PostingArrayEnumerator(Of T)
  name.vb: PostingArrayEnumerator(Of T)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.PostingArrayEnumerator`1
    name: PostingArrayEnumerator
    nameWithType: PostingArrayEnumerator
    fullName: Microsoft.Health.InvertedIndex.PostingArrayEnumerator
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.PostingArrayEnumerator`1
    name: PostingArrayEnumerator
    nameWithType: PostingArrayEnumerator
    fullName: Microsoft.Health.InvertedIndex.PostingArrayEnumerator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.PostingList`1.CreatePostingEnumerator
  commentId: M:Microsoft.Health.InvertedIndex.PostingList`1.CreatePostingEnumerator
  isExternal: false
  name: CreatePostingEnumerator()
  nameWithType: PostingList<T>.CreatePostingEnumerator()
  fullName: Microsoft.Health.InvertedIndex.PostingList<T>.CreatePostingEnumerator()
  nameWithType.vb: PostingList(Of T).CreatePostingEnumerator()
  fullName.vb: Microsoft.Health.InvertedIndex.PostingList(Of T).CreatePostingEnumerator()
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.PostingList`1.CreatePostingEnumerator
    name: CreatePostingEnumerator
    nameWithType: PostingList<T>.CreatePostingEnumerator
    fullName: Microsoft.Health.InvertedIndex.PostingList<T>.CreatePostingEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.PostingList`1.CreatePostingEnumerator
    name: CreatePostingEnumerator
    nameWithType: PostingList(Of T).CreatePostingEnumerator
    fullName: Microsoft.Health.InvertedIndex.PostingList(Of T).CreatePostingEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.PostingArrayEnumerator`1
  commentId: T:Microsoft.Health.InvertedIndex.PostingArrayEnumerator`1
  isExternal: false
  name: PostingArrayEnumerator<T>
  nameWithType: PostingArrayEnumerator<T>
  fullName: Microsoft.Health.InvertedIndex.PostingArrayEnumerator<T>
  nameWithType.vb: PostingArrayEnumerator(Of T)
  fullName.vb: Microsoft.Health.InvertedIndex.PostingArrayEnumerator(Of T)
  name.vb: PostingArrayEnumerator(Of T)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.PostingArrayEnumerator`1
    name: PostingArrayEnumerator
    nameWithType: PostingArrayEnumerator
    fullName: Microsoft.Health.InvertedIndex.PostingArrayEnumerator
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.PostingArrayEnumerator`1
    name: PostingArrayEnumerator
    nameWithType: PostingArrayEnumerator
    fullName: Microsoft.Health.InvertedIndex.PostingArrayEnumerator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
