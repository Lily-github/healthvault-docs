### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Utility.UriExtensions
  commentId: T:Microsoft.Health.Utility.UriExtensions
  id: UriExtensions
  parent: Microsoft.Health.Utility
  children:
  - Microsoft.Health.Utility.UriExtensions.AddFragment(System.Uri,System.String)
  - Microsoft.Health.Utility.UriExtensions.AddFullQuery(System.Uri,System.String)
  - Microsoft.Health.Utility.UriExtensions.AddQueryParam(System.Uri,System.String,System.String)
  - Microsoft.Health.Utility.UriExtensions.AddQueryParam(System.Uri,System.String,System.String,System.Boolean)
  - Microsoft.Health.Utility.UriExtensions.GetQueryParam(System.Uri,System.String)
  - Microsoft.Health.Utility.UriExtensions.RemoveFragment(System.Uri)
  - Microsoft.Health.Utility.UriExtensions.RemoveQueryParam(System.Uri,System.String)
  langs:
  - csharp
  - vb
  name: UriExtensions
  nameWithType: UriExtensions
  fullName: Microsoft.Health.Utility.UriExtensions
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/UriExtensions.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: UriExtensions
    path: ../Microsoft.Health.Utility/utilities/UriExtensions.cs
    startLine: 10
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  syntax:
    content: public static class UriExtensions
    content.vb: Public Module UriExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Health.Utility.UriExtensions.GetQueryParam(System.Uri,System.String)
  commentId: M:Microsoft.Health.Utility.UriExtensions.GetQueryParam(System.Uri,System.String)
  id: GetQueryParam(System.Uri,System.String)
  isExtensionMethod: true
  parent: Microsoft.Health.Utility.UriExtensions
  langs:
  - csharp
  - vb
  name: GetQueryParam(Uri, String)
  nameWithType: UriExtensions.GetQueryParam(Uri, String)
  fullName: Microsoft.Health.Utility.UriExtensions.GetQueryParam(System.Uri, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/UriExtensions.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetQueryParam
    path: ../Microsoft.Health.Utility/utilities/UriExtensions.cs
    startLine: 12
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  syntax:
    content: public static string GetQueryParam(this Uri url, string name)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetQueryParam(url As Uri, name As String) As String
    parameters:
    - id: url
      type: System.Uri
    - id: name
      type: System.String
    return:
      type: System.String
  overload: Microsoft.Health.Utility.UriExtensions.GetQueryParam*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Utility.UriExtensions.AddQueryParam(System.Uri,System.String,System.String,System.Boolean)
  commentId: M:Microsoft.Health.Utility.UriExtensions.AddQueryParam(System.Uri,System.String,System.String,System.Boolean)
  id: AddQueryParam(System.Uri,System.String,System.String,System.Boolean)
  isExtensionMethod: true
  parent: Microsoft.Health.Utility.UriExtensions
  langs:
  - csharp
  - vb
  name: AddQueryParam(Uri, String, String, Boolean)
  nameWithType: UriExtensions.AddQueryParam(Uri, String, String, Boolean)
  fullName: Microsoft.Health.Utility.UriExtensions.AddQueryParam(System.Uri, System.String, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/UriExtensions.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AddQueryParam
    path: ../Microsoft.Health.Utility/utilities/UriExtensions.cs
    startLine: 18
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  syntax:
    content: public static SmartUriBuilder AddQueryParam(this Uri url, string key, string value, bool overwrite)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddQueryParam(url As Uri, key As String, value As String, overwrite As Boolean) As SmartUriBuilder
    parameters:
    - id: url
      type: System.Uri
    - id: key
      type: System.String
    - id: value
      type: System.String
    - id: overwrite
      type: System.Boolean
    return:
      type: Microsoft.Health.Utility.SmartUriBuilder
  overload: Microsoft.Health.Utility.UriExtensions.AddQueryParam*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Utility.UriExtensions.AddQueryParam(System.Uri,System.String,System.String)
  commentId: M:Microsoft.Health.Utility.UriExtensions.AddQueryParam(System.Uri,System.String,System.String)
  id: AddQueryParam(System.Uri,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Health.Utility.UriExtensions
  langs:
  - csharp
  - vb
  name: AddQueryParam(Uri, String, String)
  nameWithType: UriExtensions.AddQueryParam(Uri, String, String)
  fullName: Microsoft.Health.Utility.UriExtensions.AddQueryParam(System.Uri, System.String, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/UriExtensions.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AddQueryParam
    path: ../Microsoft.Health.Utility/utilities/UriExtensions.cs
    startLine: 24
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  syntax:
    content: public static SmartUriBuilder AddQueryParam(this Uri url, string key, string value)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddQueryParam(url As Uri, key As String, value As String) As SmartUriBuilder
    parameters:
    - id: url
      type: System.Uri
    - id: key
      type: System.String
    - id: value
      type: System.String
    return:
      type: Microsoft.Health.Utility.SmartUriBuilder
  overload: Microsoft.Health.Utility.UriExtensions.AddQueryParam*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Utility.UriExtensions.AddFullQuery(System.Uri,System.String)
  commentId: M:Microsoft.Health.Utility.UriExtensions.AddFullQuery(System.Uri,System.String)
  id: AddFullQuery(System.Uri,System.String)
  isExtensionMethod: true
  parent: Microsoft.Health.Utility.UriExtensions
  langs:
  - csharp
  - vb
  name: AddFullQuery(Uri, String)
  nameWithType: UriExtensions.AddFullQuery(Uri, String)
  fullName: Microsoft.Health.Utility.UriExtensions.AddFullQuery(System.Uri, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/UriExtensions.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AddFullQuery
    path: ../Microsoft.Health.Utility/utilities/UriExtensions.cs
    startLine: 29
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  syntax:
    content: public static SmartUriBuilder AddFullQuery(this Uri url, string query)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddFullQuery(url As Uri, query As String) As SmartUriBuilder
    parameters:
    - id: url
      type: System.Uri
    - id: query
      type: System.String
    return:
      type: Microsoft.Health.Utility.SmartUriBuilder
  overload: Microsoft.Health.Utility.UriExtensions.AddFullQuery*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Utility.UriExtensions.RemoveQueryParam(System.Uri,System.String)
  commentId: M:Microsoft.Health.Utility.UriExtensions.RemoveQueryParam(System.Uri,System.String)
  id: RemoveQueryParam(System.Uri,System.String)
  isExtensionMethod: true
  parent: Microsoft.Health.Utility.UriExtensions
  langs:
  - csharp
  - vb
  name: RemoveQueryParam(Uri, String)
  nameWithType: UriExtensions.RemoveQueryParam(Uri, String)
  fullName: Microsoft.Health.Utility.UriExtensions.RemoveQueryParam(System.Uri, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/UriExtensions.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: RemoveQueryParam
    path: ../Microsoft.Health.Utility/utilities/UriExtensions.cs
    startLine: 35
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  syntax:
    content: public static SmartUriBuilder RemoveQueryParam(this Uri url, string key)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function RemoveQueryParam(url As Uri, key As String) As SmartUriBuilder
    parameters:
    - id: url
      type: System.Uri
    - id: key
      type: System.String
    return:
      type: Microsoft.Health.Utility.SmartUriBuilder
  overload: Microsoft.Health.Utility.UriExtensions.RemoveQueryParam*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Utility.UriExtensions.AddFragment(System.Uri,System.String)
  commentId: M:Microsoft.Health.Utility.UriExtensions.AddFragment(System.Uri,System.String)
  id: AddFragment(System.Uri,System.String)
  isExtensionMethod: true
  parent: Microsoft.Health.Utility.UriExtensions
  langs:
  - csharp
  - vb
  name: AddFragment(Uri, String)
  nameWithType: UriExtensions.AddFragment(Uri, String)
  fullName: Microsoft.Health.Utility.UriExtensions.AddFragment(System.Uri, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/UriExtensions.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AddFragment
    path: ../Microsoft.Health.Utility/utilities/UriExtensions.cs
    startLine: 41
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  syntax:
    content: public static SmartUriBuilder AddFragment(this Uri url, string fragment)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddFragment(url As Uri, fragment As String) As SmartUriBuilder
    parameters:
    - id: url
      type: System.Uri
    - id: fragment
      type: System.String
    return:
      type: Microsoft.Health.Utility.SmartUriBuilder
  overload: Microsoft.Health.Utility.UriExtensions.AddFragment*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Utility.UriExtensions.RemoveFragment(System.Uri)
  commentId: M:Microsoft.Health.Utility.UriExtensions.RemoveFragment(System.Uri)
  id: RemoveFragment(System.Uri)
  isExtensionMethod: true
  parent: Microsoft.Health.Utility.UriExtensions
  langs:
  - csharp
  - vb
  name: RemoveFragment(Uri)
  nameWithType: UriExtensions.RemoveFragment(Uri)
  fullName: Microsoft.Health.Utility.UriExtensions.RemoveFragment(System.Uri)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/UriExtensions.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: RemoveFragment
    path: ../Microsoft.Health.Utility/utilities/UriExtensions.cs
    startLine: 47
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  syntax:
    content: public static SmartUriBuilder RemoveFragment(this Uri url)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function RemoveFragment(url As Uri) As SmartUriBuilder
    parameters:
    - id: url
      type: System.Uri
    return:
      type: Microsoft.Health.Utility.SmartUriBuilder
  overload: Microsoft.Health.Utility.UriExtensions.RemoveFragment*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Utility.UriExtensions.GetQueryParam*
  commentId: Overload:Microsoft.Health.Utility.UriExtensions.GetQueryParam
  isExternal: false
  name: GetQueryParam
  nameWithType: UriExtensions.GetQueryParam
  fullName: Microsoft.Health.Utility.UriExtensions.GetQueryParam
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.Utility.UriExtensions.AddQueryParam*
  commentId: Overload:Microsoft.Health.Utility.UriExtensions.AddQueryParam
  isExternal: false
  name: AddQueryParam
  nameWithType: UriExtensions.AddQueryParam
  fullName: Microsoft.Health.Utility.UriExtensions.AddQueryParam
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Health.Utility.SmartUriBuilder
  commentId: T:Microsoft.Health.Utility.SmartUriBuilder
  parent: Microsoft.Health.Utility
  isExternal: false
  name: SmartUriBuilder
  nameWithType: SmartUriBuilder
  fullName: Microsoft.Health.Utility.SmartUriBuilder
- uid: Microsoft.Health.Utility.UriExtensions.AddFullQuery*
  commentId: Overload:Microsoft.Health.Utility.UriExtensions.AddFullQuery
  isExternal: false
  name: AddFullQuery
  nameWithType: UriExtensions.AddFullQuery
  fullName: Microsoft.Health.Utility.UriExtensions.AddFullQuery
- uid: Microsoft.Health.Utility.UriExtensions.RemoveQueryParam*
  commentId: Overload:Microsoft.Health.Utility.UriExtensions.RemoveQueryParam
  isExternal: false
  name: RemoveQueryParam
  nameWithType: UriExtensions.RemoveQueryParam
  fullName: Microsoft.Health.Utility.UriExtensions.RemoveQueryParam
- uid: Microsoft.Health.Utility.UriExtensions.AddFragment*
  commentId: Overload:Microsoft.Health.Utility.UriExtensions.AddFragment
  isExternal: false
  name: AddFragment
  nameWithType: UriExtensions.AddFragment
  fullName: Microsoft.Health.Utility.UriExtensions.AddFragment
- uid: Microsoft.Health.Utility.UriExtensions.RemoveFragment*
  commentId: Overload:Microsoft.Health.Utility.UriExtensions.RemoveFragment
  isExternal: false
  name: RemoveFragment
  nameWithType: UriExtensions.RemoveFragment
  fullName: Microsoft.Health.Utility.UriExtensions.RemoveFragment
