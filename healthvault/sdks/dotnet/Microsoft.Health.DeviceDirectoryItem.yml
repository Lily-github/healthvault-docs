### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.DeviceDirectoryItem
  commentId: T:Microsoft.Health.DeviceDirectoryItem
  id: DeviceDirectoryItem
  parent: Microsoft.Health
  children:
  - Microsoft.Health.DeviceDirectoryItem.#ctor
  - Microsoft.Health.DeviceDirectoryItem.ApplicationId
  - Microsoft.Health.DeviceDirectoryItem.GetSchema
  - Microsoft.Health.DeviceDirectoryItem.Models
  - Microsoft.Health.DeviceDirectoryItem.ReadXml(System.Xml.XmlReader)
  - Microsoft.Health.DeviceDirectoryItem.WriteXml(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: DeviceDirectoryItem
  nameWithType: DeviceDirectoryItem
  fullName: Microsoft.Health.DeviceDirectoryItem
  type: Class
  source:
    remote:
      path: Microsoft.Health.Directory/devicedirectoryitem.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DeviceDirectoryItem
    path: ../Microsoft.Health.Directory/devicedirectoryitem.cs
    startLine: 26
  assemblies:
  - Microsoft.Health.Directory
  namespace: Microsoft.Health
  summary: "\nDefines the information for a HealthVault DeviceDirectoryItem.\nA device directory item contains directory information\nfor a device that works with HealthVault. \n"
  remarks: "\nDirectory information typically consists of short description of the device, and a detailed long description in html.\nSupplementary information like device model screenshots, supported platforms, company details, etc. are also available.\n"
  example: []
  syntax:
    content: 'public class DeviceDirectoryItem : DirectoryItem, IXmlSerializable'
    content.vb: >-
      Public Class DeviceDirectoryItem
          Inherits DirectoryItem
          Implements IXmlSerializable
  inheritance:
  - System.Object
  - Microsoft.Health.DirectoryItem
  implements:
  - System.Xml.Serialization.IXmlSerializable
  inheritedMembers:
  - Microsoft.Health.DirectoryItem.Id
  - Microsoft.Health.DirectoryItem.CreatedDate
  - Microsoft.Health.DirectoryItem.UpdatedDate
  - Microsoft.Health.DirectoryItem.Name
  - Microsoft.Health.DirectoryItem.CompanyLogoAlternativeText
  - Microsoft.Health.DirectoryItem.CompanyLogoImage
  - Microsoft.Health.DirectoryItem.CompanyLogoContentType
  - Microsoft.Health.DirectoryItem.CompanyName
  - Microsoft.Health.DirectoryItem.CompanyUrl
  - Microsoft.Health.DirectoryItem.Categories
  - Microsoft.Health.DirectoryItem.DataProviderCategories
  - Microsoft.Health.DirectoryItem.ShortDescription
  - Microsoft.Health.DirectoryItem.LongDescription
  - Microsoft.Health.DirectoryItem.ThingTypeIds
  - Microsoft.Health.DirectoryItem.InformationUrl
  - Microsoft.Health.DirectoryItem.FacebookLikeUrl
  - Microsoft.Health.DirectoryItem.MobilePlatformAppUrls
  - Microsoft.Health.DirectoryItem.Extensions
  - Microsoft.Health.DirectoryItem.SupportedRecordLocations
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.DeviceDirectoryItem.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.DeviceDirectoryItem.#ctor
  commentId: M:Microsoft.Health.DeviceDirectoryItem.#ctor
  id: '#ctor'
  parent: Microsoft.Health.DeviceDirectoryItem
  langs:
  - csharp
  - vb
  name: DeviceDirectoryItem()
  nameWithType: DeviceDirectoryItem.DeviceDirectoryItem()
  fullName: Microsoft.Health.DeviceDirectoryItem.DeviceDirectoryItem()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Directory/devicedirectoryitem.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.Directory/devicedirectoryitem.cs
    startLine: 32
  assemblies:
  - Microsoft.Health.Directory
  namespace: Microsoft.Health
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.DeviceDirectoryItem\" data-throw-if-not-resolved=\"false\"></xref> class with default parameters.\n"
  example: []
  syntax:
    content: public DeviceDirectoryItem()
    content.vb: Public Sub New
  overload: Microsoft.Health.DeviceDirectoryItem.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.DeviceDirectoryItem.Models
  commentId: P:Microsoft.Health.DeviceDirectoryItem.Models
  id: Models
  parent: Microsoft.Health.DeviceDirectoryItem
  langs:
  - csharp
  - vb
  name: Models
  nameWithType: DeviceDirectoryItem.Models
  fullName: Microsoft.Health.DeviceDirectoryItem.Models
  type: Property
  source:
    remote:
      path: Microsoft.Health.Directory/devicedirectoryitem.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Models
    path: ../Microsoft.Health.Directory/devicedirectoryitem.cs
    startLine: 41
  assemblies:
  - Microsoft.Health.Directory
  namespace: Microsoft.Health
  summary: "\nGets the collection of device models available for this device.\n"
  example: []
  syntax:
    content: public Collection<DeviceModel> Models { get; }
    content.vb: Public ReadOnly Property Models As Collection(Of DeviceModel)
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{Microsoft.Health.DeviceModel}
  overload: Microsoft.Health.DeviceDirectoryItem.Models*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.DeviceDirectoryItem.ApplicationId
  commentId: P:Microsoft.Health.DeviceDirectoryItem.ApplicationId
  id: ApplicationId
  parent: Microsoft.Health.DeviceDirectoryItem
  langs:
  - csharp
  - vb
  name: ApplicationId
  nameWithType: DeviceDirectoryItem.ApplicationId
  fullName: Microsoft.Health.DeviceDirectoryItem.ApplicationId
  type: Property
  source:
    remote:
      path: Microsoft.Health.Directory/devicedirectoryitem.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ApplicationId
    path: ../Microsoft.Health.Directory/devicedirectoryitem.cs
    startLine: 55
  assemblies:
  - Microsoft.Health.Directory
  namespace: Microsoft.Health
  summary: "\nUnique Id of the application which is associated with this device to connect to HealthVault ecosystem.\n"
  remarks: "\nDevice will have the same list of supported record locations as the associated application. HealthVault will always use\napplication's supported location list.\n"
  example: []
  syntax:
    content: public Guid ApplicationId { get; }
    content.vb: Public ReadOnly Property ApplicationId As Guid
    parameters: []
    return:
      type: System.Guid
  overload: Microsoft.Health.DeviceDirectoryItem.ApplicationId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.DeviceDirectoryItem.GetSchema
  commentId: M:Microsoft.Health.DeviceDirectoryItem.GetSchema
  id: GetSchema
  parent: Microsoft.Health.DeviceDirectoryItem
  langs:
  - csharp
  - vb
  name: GetSchema()
  nameWithType: DeviceDirectoryItem.GetSchema()
  fullName: Microsoft.Health.DeviceDirectoryItem.GetSchema()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Directory/devicedirectoryitem.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetSchema
    path: ../Microsoft.Health.Directory/devicedirectoryitem.cs
    startLine: 70
  assemblies:
  - Microsoft.Health.Directory
  namespace: Microsoft.Health
  summary: "\nGet the schema as per IXmlSerializable requirement.\nAlways returns null.\n"
  example: []
  syntax:
    content: public XmlSchema GetSchema()
    content.vb: Public Function GetSchema As XmlSchema
    return:
      type: System.Xml.Schema.XmlSchema
      description: "null"
  overload: Microsoft.Health.DeviceDirectoryItem.GetSchema*
  implements:
  - System.Xml.Serialization.IXmlSerializable.GetSchema
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.DeviceDirectoryItem.ReadXml(System.Xml.XmlReader)
  commentId: M:Microsoft.Health.DeviceDirectoryItem.ReadXml(System.Xml.XmlReader)
  id: ReadXml(System.Xml.XmlReader)
  parent: Microsoft.Health.DeviceDirectoryItem
  langs:
  - csharp
  - vb
  name: ReadXml(XmlReader)
  nameWithType: DeviceDirectoryItem.ReadXml(XmlReader)
  fullName: Microsoft.Health.DeviceDirectoryItem.ReadXml(System.Xml.XmlReader)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Directory/devicedirectoryitem.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ReadXml
    path: ../Microsoft.Health.Directory/devicedirectoryitem.cs
    startLine: 90
  assemblies:
  - Microsoft.Health.Directory
  namespace: Microsoft.Health
  summary: "\nGenerates an object from its XML representation.\n"
  remarks: "\nThe ReadXml method must reconstitute your object using the information that was written by the WriteXml method\n"
  example: []
  syntax:
    content: public void ReadXml(XmlReader reader)
    content.vb: Public Sub ReadXml(reader As XmlReader)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "\nThe XmlReader stream from which the object is deserialized.\n"
  overload: Microsoft.Health.DeviceDirectoryItem.ReadXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nIf the argument <span class=\"paramref\">reader</span> was <strong>null</strong>.\n"
  implements:
  - System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.DeviceDirectoryItem.WriteXml(System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.DeviceDirectoryItem.WriteXml(System.Xml.XmlWriter)
  id: WriteXml(System.Xml.XmlWriter)
  parent: Microsoft.Health.DeviceDirectoryItem
  langs:
  - csharp
  - vb
  name: WriteXml(XmlWriter)
  nameWithType: DeviceDirectoryItem.WriteXml(XmlWriter)
  fullName: Microsoft.Health.DeviceDirectoryItem.WriteXml(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Directory/devicedirectoryitem.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteXml
    path: ../Microsoft.Health.Directory/devicedirectoryitem.cs
    startLine: 124
  assemblies:
  - Microsoft.Health.Directory
  namespace: Microsoft.Health
  summary: "\nConverts an object into its XML representation.\n"
  remarks: "\nWrite sufficient information to the XmlWriter stream to allow the ReadXml method to reconstitute the object.\n"
  example: []
  syntax:
    content: public void WriteXml(XmlWriter writer)
    content.vb: Public Sub WriteXml(writer As XmlWriter)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "The XmlWriter stream to which the object is serialized. \n"
  overload: Microsoft.Health.DeviceDirectoryItem.WriteXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nIf the argument <span class=\"paramref\">writer</span> was <strong>null</strong>.\n"
  implements:
  - System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.DirectoryItem
  commentId: T:Microsoft.Health.DirectoryItem
  parent: Microsoft.Health
  isExternal: false
  name: DirectoryItem
  nameWithType: DirectoryItem
  fullName: Microsoft.Health.DirectoryItem
- uid: System.Xml.Serialization.IXmlSerializable
  commentId: T:System.Xml.Serialization.IXmlSerializable
  parent: System.Xml.Serialization
  isExternal: true
  name: IXmlSerializable
  nameWithType: IXmlSerializable
  fullName: System.Xml.Serialization.IXmlSerializable
- uid: Microsoft.Health.DirectoryItem.Id
  commentId: P:Microsoft.Health.DirectoryItem.Id
  parent: Microsoft.Health.DirectoryItem
  isExternal: false
  name: Id
  nameWithType: DirectoryItem.Id
  fullName: Microsoft.Health.DirectoryItem.Id
- uid: Microsoft.Health.DirectoryItem.CreatedDate
  commentId: P:Microsoft.Health.DirectoryItem.CreatedDate
  parent: Microsoft.Health.DirectoryItem
  isExternal: false
  name: CreatedDate
  nameWithType: DirectoryItem.CreatedDate
  fullName: Microsoft.Health.DirectoryItem.CreatedDate
- uid: Microsoft.Health.DirectoryItem.UpdatedDate
  commentId: P:Microsoft.Health.DirectoryItem.UpdatedDate
  parent: Microsoft.Health.DirectoryItem
  isExternal: false
  name: UpdatedDate
  nameWithType: DirectoryItem.UpdatedDate
  fullName: Microsoft.Health.DirectoryItem.UpdatedDate
- uid: Microsoft.Health.DirectoryItem.Name
  commentId: P:Microsoft.Health.DirectoryItem.Name
  parent: Microsoft.Health.DirectoryItem
  isExternal: false
  name: Name
  nameWithType: DirectoryItem.Name
  fullName: Microsoft.Health.DirectoryItem.Name
- uid: Microsoft.Health.DirectoryItem.CompanyLogoAlternativeText
  commentId: P:Microsoft.Health.DirectoryItem.CompanyLogoAlternativeText
  parent: Microsoft.Health.DirectoryItem
  isExternal: false
  name: CompanyLogoAlternativeText
  nameWithType: DirectoryItem.CompanyLogoAlternativeText
  fullName: Microsoft.Health.DirectoryItem.CompanyLogoAlternativeText
- uid: Microsoft.Health.DirectoryItem.CompanyLogoImage
  commentId: P:Microsoft.Health.DirectoryItem.CompanyLogoImage
  parent: Microsoft.Health.DirectoryItem
  isExternal: false
  name: CompanyLogoImage
  nameWithType: DirectoryItem.CompanyLogoImage
  fullName: Microsoft.Health.DirectoryItem.CompanyLogoImage
- uid: Microsoft.Health.DirectoryItem.CompanyLogoContentType
  commentId: P:Microsoft.Health.DirectoryItem.CompanyLogoContentType
  parent: Microsoft.Health.DirectoryItem
  isExternal: false
  name: CompanyLogoContentType
  nameWithType: DirectoryItem.CompanyLogoContentType
  fullName: Microsoft.Health.DirectoryItem.CompanyLogoContentType
- uid: Microsoft.Health.DirectoryItem.CompanyName
  commentId: P:Microsoft.Health.DirectoryItem.CompanyName
  parent: Microsoft.Health.DirectoryItem
  isExternal: false
  name: CompanyName
  nameWithType: DirectoryItem.CompanyName
  fullName: Microsoft.Health.DirectoryItem.CompanyName
- uid: Microsoft.Health.DirectoryItem.CompanyUrl
  commentId: P:Microsoft.Health.DirectoryItem.CompanyUrl
  parent: Microsoft.Health.DirectoryItem
  isExternal: false
  name: CompanyUrl
  nameWithType: DirectoryItem.CompanyUrl
  fullName: Microsoft.Health.DirectoryItem.CompanyUrl
- uid: Microsoft.Health.DirectoryItem.Categories
  commentId: P:Microsoft.Health.DirectoryItem.Categories
  parent: Microsoft.Health.DirectoryItem
  isExternal: false
  name: Categories
  nameWithType: DirectoryItem.Categories
  fullName: Microsoft.Health.DirectoryItem.Categories
- uid: Microsoft.Health.DirectoryItem.DataProviderCategories
  commentId: P:Microsoft.Health.DirectoryItem.DataProviderCategories
  parent: Microsoft.Health.DirectoryItem
  isExternal: false
  name: DataProviderCategories
  nameWithType: DirectoryItem.DataProviderCategories
  fullName: Microsoft.Health.DirectoryItem.DataProviderCategories
- uid: Microsoft.Health.DirectoryItem.ShortDescription
  commentId: P:Microsoft.Health.DirectoryItem.ShortDescription
  parent: Microsoft.Health.DirectoryItem
  isExternal: false
  name: ShortDescription
  nameWithType: DirectoryItem.ShortDescription
  fullName: Microsoft.Health.DirectoryItem.ShortDescription
- uid: Microsoft.Health.DirectoryItem.LongDescription
  commentId: P:Microsoft.Health.DirectoryItem.LongDescription
  parent: Microsoft.Health.DirectoryItem
  isExternal: false
  name: LongDescription
  nameWithType: DirectoryItem.LongDescription
  fullName: Microsoft.Health.DirectoryItem.LongDescription
- uid: Microsoft.Health.DirectoryItem.ThingTypeIds
  commentId: P:Microsoft.Health.DirectoryItem.ThingTypeIds
  parent: Microsoft.Health.DirectoryItem
  isExternal: false
  name: ThingTypeIds
  nameWithType: DirectoryItem.ThingTypeIds
  fullName: Microsoft.Health.DirectoryItem.ThingTypeIds
- uid: Microsoft.Health.DirectoryItem.InformationUrl
  commentId: P:Microsoft.Health.DirectoryItem.InformationUrl
  parent: Microsoft.Health.DirectoryItem
  isExternal: false
  name: InformationUrl
  nameWithType: DirectoryItem.InformationUrl
  fullName: Microsoft.Health.DirectoryItem.InformationUrl
- uid: Microsoft.Health.DirectoryItem.FacebookLikeUrl
  commentId: P:Microsoft.Health.DirectoryItem.FacebookLikeUrl
  parent: Microsoft.Health.DirectoryItem
  isExternal: false
  name: FacebookLikeUrl
  nameWithType: DirectoryItem.FacebookLikeUrl
  fullName: Microsoft.Health.DirectoryItem.FacebookLikeUrl
- uid: Microsoft.Health.DirectoryItem.MobilePlatformAppUrls
  commentId: P:Microsoft.Health.DirectoryItem.MobilePlatformAppUrls
  parent: Microsoft.Health.DirectoryItem
  isExternal: false
  name: MobilePlatformAppUrls
  nameWithType: DirectoryItem.MobilePlatformAppUrls
  fullName: Microsoft.Health.DirectoryItem.MobilePlatformAppUrls
- uid: Microsoft.Health.DirectoryItem.Extensions
  commentId: P:Microsoft.Health.DirectoryItem.Extensions
  parent: Microsoft.Health.DirectoryItem
  isExternal: false
  name: Extensions
  nameWithType: DirectoryItem.Extensions
  fullName: Microsoft.Health.DirectoryItem.Extensions
- uid: Microsoft.Health.DirectoryItem.SupportedRecordLocations
  commentId: P:Microsoft.Health.DirectoryItem.SupportedRecordLocations
  parent: Microsoft.Health.DirectoryItem
  isExternal: false
  name: SupportedRecordLocations
  nameWithType: DirectoryItem.SupportedRecordLocations
  fullName: Microsoft.Health.DirectoryItem.SupportedRecordLocations
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.DeviceDirectoryItem.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<DeviceDirectoryItem>()
  nameWithType: TypeHelper.ValueOrDbNull<DeviceDirectoryItem>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.DeviceDirectoryItem>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of DeviceDirectoryItem)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.DeviceDirectoryItem)()
  name.vb: ValueOrDbNull(Of DeviceDirectoryItem)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<DeviceDirectoryItem>
    nameWithType: TypeHelper.ValueOrDbNull<DeviceDirectoryItem>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.DeviceDirectoryItem>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of DeviceDirectoryItem)
    nameWithType: TypeHelper.ValueOrDbNull(Of DeviceDirectoryItem)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.DeviceDirectoryItem)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Xml.Serialization
  commentId: N:System.Xml.Serialization
  isExternal: false
  name: System.Xml.Serialization
  nameWithType: System.Xml.Serialization
  fullName: System.Xml.Serialization
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.DeviceDirectoryItem
  commentId: T:Microsoft.Health.DeviceDirectoryItem
  isExternal: false
  name: DeviceDirectoryItem
  nameWithType: DeviceDirectoryItem
  fullName: Microsoft.Health.DeviceDirectoryItem
- uid: Microsoft.Health.DeviceDirectoryItem.#ctor*
  commentId: Overload:Microsoft.Health.DeviceDirectoryItem.#ctor
  isExternal: false
  name: DeviceDirectoryItem
  nameWithType: DeviceDirectoryItem.DeviceDirectoryItem
  fullName: Microsoft.Health.DeviceDirectoryItem.DeviceDirectoryItem
- uid: Microsoft.Health.DeviceDirectoryItem.Models*
  commentId: Overload:Microsoft.Health.DeviceDirectoryItem.Models
  isExternal: false
  name: Models
  nameWithType: DeviceDirectoryItem.Models
  fullName: Microsoft.Health.DeviceDirectoryItem.Models
- uid: System.Collections.ObjectModel.Collection{Microsoft.Health.DeviceModel}
  commentId: T:System.Collections.ObjectModel.Collection{Microsoft.Health.DeviceModel}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<DeviceModel>
  nameWithType: Collection<DeviceModel>
  fullName: System.Collections.ObjectModel.Collection<Microsoft.Health.DeviceModel>
  nameWithType.vb: Collection(Of DeviceModel)
  fullName.vb: System.Collections.ObjectModel.Collection(Of Microsoft.Health.DeviceModel)
  name.vb: Collection(Of DeviceModel)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.DeviceModel
    name: DeviceModel
    nameWithType: DeviceModel
    fullName: Microsoft.Health.DeviceModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.DeviceModel
    name: DeviceModel
    nameWithType: DeviceModel
    fullName: Microsoft.Health.DeviceModel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1
  commentId: T:System.Collections.ObjectModel.Collection`1
  isExternal: true
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  nameWithType.vb: Collection(Of T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T)
  name.vb: Collection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: Microsoft.Health.DeviceDirectoryItem.ApplicationId*
  commentId: Overload:Microsoft.Health.DeviceDirectoryItem.ApplicationId
  isExternal: false
  name: ApplicationId
  nameWithType: DeviceDirectoryItem.ApplicationId
  fullName: Microsoft.Health.DeviceDirectoryItem.ApplicationId
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Microsoft.Health.DeviceDirectoryItem.GetSchema*
  commentId: Overload:Microsoft.Health.DeviceDirectoryItem.GetSchema
  isExternal: false
  name: GetSchema
  nameWithType: DeviceDirectoryItem.GetSchema
  fullName: Microsoft.Health.DeviceDirectoryItem.GetSchema
- uid: System.Xml.Serialization.IXmlSerializable.GetSchema
  commentId: M:System.Xml.Serialization.IXmlSerializable.GetSchema
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  name: GetSchema()
  nameWithType: IXmlSerializable.GetSchema()
  fullName: System.Xml.Serialization.IXmlSerializable.GetSchema()
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.GetSchema
    name: GetSchema
    nameWithType: IXmlSerializable.GetSchema
    fullName: System.Xml.Serialization.IXmlSerializable.GetSchema
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.GetSchema
    name: GetSchema
    nameWithType: IXmlSerializable.GetSchema
    fullName: System.Xml.Serialization.IXmlSerializable.GetSchema
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.Schema.XmlSchema
  commentId: T:System.Xml.Schema.XmlSchema
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema
- uid: System.Xml.Schema
  commentId: N:System.Xml.Schema
  isExternal: false
  name: System.Xml.Schema
  nameWithType: System.Xml.Schema
  fullName: System.Xml.Schema
- uid: Microsoft.Health.DeviceDirectoryItem.ReadXml*
  commentId: Overload:Microsoft.Health.DeviceDirectoryItem.ReadXml
  isExternal: false
  name: ReadXml
  nameWithType: DeviceDirectoryItem.ReadXml
  fullName: Microsoft.Health.DeviceDirectoryItem.ReadXml
- uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  commentId: M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  name: ReadXml(XmlReader)
  nameWithType: IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
    name: ReadXml
    nameWithType: IXmlSerializable.ReadXml
    fullName: System.Xml.Serialization.IXmlSerializable.ReadXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
    name: ReadXml
    nameWithType: IXmlSerializable.ReadXml
    fullName: System.Xml.Serialization.IXmlSerializable.ReadXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.Xml.XmlReader
  commentId: T:System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: Microsoft.Health.DeviceDirectoryItem.WriteXml*
  commentId: Overload:Microsoft.Health.DeviceDirectoryItem.WriteXml
  isExternal: false
  name: WriteXml
  nameWithType: DeviceDirectoryItem.WriteXml
  fullName: Microsoft.Health.DeviceDirectoryItem.WriteXml
- uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  commentId: M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  name: WriteXml(XmlWriter)
  nameWithType: IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: IXmlSerializable.WriteXml
    fullName: System.Xml.Serialization.IXmlSerializable.WriteXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: IXmlSerializable.WriteXml
    fullName: System.Xml.Serialization.IXmlSerializable.WriteXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
