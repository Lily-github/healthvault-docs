### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.HealthRecordItemExtension
  commentId: T:Microsoft.Health.HealthRecordItemExtension
  id: HealthRecordItemExtension
  parent: Microsoft.Health
  children:
  - Microsoft.Health.HealthRecordItemExtension.#ctor
  - Microsoft.Health.HealthRecordItemExtension.#ctor(System.String)
  - Microsoft.Health.HealthRecordItemExtension.ExtensionData
  - Microsoft.Health.HealthRecordItemExtension.Logo
  - Microsoft.Health.HealthRecordItemExtension.ParseXml(System.Xml.XPath.IXPathNavigable)
  - Microsoft.Health.HealthRecordItemExtension.Source
  - Microsoft.Health.HealthRecordItemExtension.Transform
  - Microsoft.Health.HealthRecordItemExtension.Version
  - Microsoft.Health.HealthRecordItemExtension.WriteXml(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: HealthRecordItemExtension
  nameWithType: HealthRecordItemExtension
  fullName: Microsoft.Health.HealthRecordItemExtension
  type: Class
  source:
    remote:
      path: Microsoft.Health/HealthRecordItemExtension.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: HealthRecordItemExtension
    path: ../Microsoft.Health/HealthRecordItemExtension.cs
    startLine: 32
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nRepresents an extension to a health record item.\n"
  remarks: "\nApplications can augment the HealthVault defined data for a \nhealth record item type with application or vendor specific data by \nimplementing item extensions.\n<br /><br />\nApplications that implement a health record item extension should \nderive from this class and register their extension by calling \n<xref href=\"Microsoft.Health.ItemTypeManager.RegisterExtensionHandler(System.String%2cSystem.Type)\" data-throw-if-not-resolved=\"false\"></xref>.\nWhenever the HealthVault SDK reads an extension with the specified\nextension source an instance of the derived HealthRecordItemExtension will be\ncreated and it's <xref href=\"Microsoft.Health.HealthRecordItemExtension.ParseXml(System.Xml.XPath.IXPathNavigable)\" data-throw-if-not-resolved=\"false\"></xref> \nmethod will be called to populate the data of the class from the \nweb-service XML.\nCommon portions of the item extension data will be parsed by the base\nclass and exposed as properties.\n"
  example: []
  syntax:
    content: public class HealthRecordItemExtension
    content.vb: Public Class HealthRecordItemExtension
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.HealthRecordItemExtension.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.HealthRecordItemExtension.#ctor(System.String)
  commentId: M:Microsoft.Health.HealthRecordItemExtension.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Health.HealthRecordItemExtension
  langs:
  - csharp
  - vb
  name: HealthRecordItemExtension(String)
  nameWithType: HealthRecordItemExtension.HealthRecordItemExtension(String)
  fullName: Microsoft.Health.HealthRecordItemExtension.HealthRecordItemExtension(System.String)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/HealthRecordItemExtension.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health/HealthRecordItemExtension.cs
    startLine: 49
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nConstructs a health record item extension for the specified source.\n"
  example: []
  syntax:
    content: public HealthRecordItemExtension(string source)
    content.vb: Public Sub New(source As String)
    parameters:
    - id: source
      type: System.String
      description: "\nThe source identifier for the extension. This is used to uniquely\nidentify the extension data.\n"
  overload: Microsoft.Health.HealthRecordItemExtension.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nIf <span class=\"paramref\">source</span> is null or empty.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthRecordItemExtension.#ctor
  commentId: M:Microsoft.Health.HealthRecordItemExtension.#ctor
  id: '#ctor'
  parent: Microsoft.Health.HealthRecordItemExtension
  langs:
  - csharp
  - vb
  name: HealthRecordItemExtension()
  nameWithType: HealthRecordItemExtension.HealthRecordItemExtension()
  fullName: Microsoft.Health.HealthRecordItemExtension.HealthRecordItemExtension()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/HealthRecordItemExtension.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health/HealthRecordItemExtension.cs
    startLine: 59
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nConstructor used when creating an instance for XML deserialization.\n"
  example: []
  syntax:
    content: public HealthRecordItemExtension()
    content.vb: Public Sub New
  overload: Microsoft.Health.HealthRecordItemExtension.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthRecordItemExtension.ParseXml(System.Xml.XPath.IXPathNavigable)
  commentId: M:Microsoft.Health.HealthRecordItemExtension.ParseXml(System.Xml.XPath.IXPathNavigable)
  id: ParseXml(System.Xml.XPath.IXPathNavigable)
  parent: Microsoft.Health.HealthRecordItemExtension
  langs:
  - csharp
  - vb
  name: ParseXml(IXPathNavigable)
  nameWithType: HealthRecordItemExtension.ParseXml(IXPathNavigable)
  fullName: Microsoft.Health.HealthRecordItemExtension.ParseXml(System.Xml.XPath.IXPathNavigable)
  type: Method
  source:
    remote:
      path: Microsoft.Health/HealthRecordItemExtension.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ParseXml
    path: ../Microsoft.Health/HealthRecordItemExtension.cs
    startLine: 121
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nPopulates the extension data from the specified XML.\n"
  remarks: "\nDerived classes should override this method to parse the extension\nXML and populate class members with the data. The common extension\nattributes are handled by the base class before this method is\ncalled.\n<br /><br />\nThe default implementation of this method does nothing.\n"
  example: []
  syntax:
    content: protected virtual void ParseXml(IXPathNavigable extensionData)
    content.vb: Protected Overridable Sub ParseXml(extensionData As IXPathNavigable)
    parameters:
    - id: extensionData
      type: System.Xml.XPath.IXPathNavigable
      description: "\nThe XML to retrieve the extension data from. Note, this may be\nan <xref href=\"System.Xml.XmlDocument\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  overload: Microsoft.Health.HealthRecordItemExtension.ParseXml*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.Health.HealthRecordItemExtension.WriteXml(System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.HealthRecordItemExtension.WriteXml(System.Xml.XmlWriter)
  id: WriteXml(System.Xml.XmlWriter)
  parent: Microsoft.Health.HealthRecordItemExtension
  langs:
  - csharp
  - vb
  name: WriteXml(XmlWriter)
  nameWithType: HealthRecordItemExtension.WriteXml(XmlWriter)
  fullName: Microsoft.Health.HealthRecordItemExtension.WriteXml(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health/HealthRecordItemExtension.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteXml
    path: ../Microsoft.Health/HealthRecordItemExtension.cs
    startLine: 189
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nWrites the data portion of the extension to the specified XML\nwriter.\n"
  remarks: "\nDerived classes should override this method to add extension \nspecific data to the extension XML for the item. Note, the base\nclass handles writing the extension node and it's attributes to\nthe writer. The derived class implementation should only write \nthe inner nodes of the extension.\n<br /><br />\nThe base implementation writes the contents of the \n<xref href=\"Microsoft.Health.HealthRecordItemExtension.ExtensionData\" data-throw-if-not-resolved=\"false\"></xref> to the writer and should not be called\nby the derived class.\n"
  example: []
  syntax:
    content: protected virtual void WriteXml(XmlWriter writer)
    content.vb: Protected Overridable Sub WriteXml(writer As XmlWriter)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "\nThe XML writer to write the data portion of the extension to.\n"
  overload: Microsoft.Health.HealthRecordItemExtension.WriteXml*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.Health.HealthRecordItemExtension.Source
  commentId: P:Microsoft.Health.HealthRecordItemExtension.Source
  id: Source
  parent: Microsoft.Health.HealthRecordItemExtension
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: HealthRecordItemExtension.Source
  fullName: Microsoft.Health.HealthRecordItemExtension.Source
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthRecordItemExtension.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Source
    path: ../Microsoft.Health/HealthRecordItemExtension.cs
    startLine: 217
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the extension source identifier.\n"
  remarks: "\nThe source is used to identify the extension. To register a class\nas a handler for a specific extension source see \n<xref href=\"Microsoft.Health.ItemTypeManager.RegisterExtensionHandler(System.String%2cSystem.Type)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public string Source { get; set; }
    content.vb: Public Property Source As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.HealthRecordItemExtension.Source*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nIf <span class=\"paramref\">value</span> is null or empty.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthRecordItemExtension.Version
  commentId: P:Microsoft.Health.HealthRecordItemExtension.Version
  id: Version
  parent: Microsoft.Health.HealthRecordItemExtension
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: HealthRecordItemExtension.Version
  fullName: Microsoft.Health.HealthRecordItemExtension.Version
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthRecordItemExtension.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Version
    path: ../Microsoft.Health/HealthRecordItemExtension.cs
    startLine: 236
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the version of the extension.\n"
  remarks: "\nThe version is optional and will be ignored if set to null.\n"
  example: []
  syntax:
    content: public string Version { get; set; }
    content.vb: Public Property Version As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.HealthRecordItemExtension.Version*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthRecordItemExtension.Logo
  commentId: P:Microsoft.Health.HealthRecordItemExtension.Logo
  id: Logo
  parent: Microsoft.Health.HealthRecordItemExtension
  langs:
  - csharp
  - vb
  name: Logo
  nameWithType: HealthRecordItemExtension.Logo
  fullName: Microsoft.Health.HealthRecordItemExtension.Logo
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthRecordItemExtension.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Logo
    path: ../Microsoft.Health/HealthRecordItemExtension.cs
    startLine: 257
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the URL to a logo for display use with the extension.\n"
  remarks: "\nThe logo is optional and will be ignored if set to null.\n<br /><br />\nIn some applications a generic view of the health record item will be\nshown. If a logo is provided on an extension those applications\ncan embed the logo in the user interface to show the user that\nthere is additional data. It can also be used along with the\n<xref href=\"Microsoft.Health.HealthRecordItemExtension.Transform\" data-throw-if-not-resolved=\"false\"></xref> to provide a link to the extension data.\n"
  example: []
  syntax:
    content: public Uri Logo { get; set; }
    content.vb: Public Property Logo As Uri
    parameters: []
    return:
      type: System.Uri
  overload: Microsoft.Health.HealthRecordItemExtension.Logo*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthRecordItemExtension.Transform
  commentId: P:Microsoft.Health.HealthRecordItemExtension.Transform
  id: Transform
  parent: Microsoft.Health.HealthRecordItemExtension
  langs:
  - csharp
  - vb
  name: Transform
  nameWithType: HealthRecordItemExtension.Transform
  fullName: Microsoft.Health.HealthRecordItemExtension.Transform
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthRecordItemExtension.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Transform
    path: ../Microsoft.Health/HealthRecordItemExtension.cs
    startLine: 281
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the URL to an XSL transform which can transform the\nXML of the extension into HTML suitable for display in a small\nform or popup.\n"
  remarks: "\nThe transform is optional and will be ignored if set to null.\n<br /><br />\nIn some applications a generic view of the health record item will be\nshown. In such applications the extension data can be rendered as \nHTML using the specified transform. Applications should consider the\nsecurity implications of running external transforms within the application\ncontext.\nHealthVault Shell does not render extensions using this transform.\n"
  example: []
  syntax:
    content: public Uri Transform { get; set; }
    content.vb: Public Property Transform As Uri
    parameters: []
    return:
      type: System.Uri
  overload: Microsoft.Health.HealthRecordItemExtension.Transform*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthRecordItemExtension.ExtensionData
  commentId: P:Microsoft.Health.HealthRecordItemExtension.ExtensionData
  id: ExtensionData
  parent: Microsoft.Health.HealthRecordItemExtension
  langs:
  - csharp
  - vb
  name: ExtensionData
  nameWithType: HealthRecordItemExtension.ExtensionData
  fullName: Microsoft.Health.HealthRecordItemExtension.ExtensionData
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthRecordItemExtension.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ExtensionData
    path: ../Microsoft.Health/HealthRecordItemExtension.cs
    startLine: 301
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets the extension data for the extension.\n"
  remarks: "\nTo modify the extension attributes use the other properties of this\nclass. To modify the extension data manipulate the returned\nXML document unless a derived type is available, in which case\nyou should use the properties and method of the derived type to\nmanipulate the data.\n<br /><br />\n"
  example: []
  syntax:
    content: public IXPathNavigable ExtensionData { get; }
    content.vb: Public ReadOnly Property ExtensionData As IXPathNavigable
    parameters: []
    return:
      type: System.Xml.XPath.IXPathNavigable
  overload: Microsoft.Health.HealthRecordItemExtension.ExtensionData*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Health.ItemTypeManager.RegisterExtensionHandler(System.String,System.Type)
  commentId: M:Microsoft.Health.ItemTypeManager.RegisterExtensionHandler(System.String,System.Type)
- uid: Microsoft.Health.HealthRecordItemExtension.ParseXml(System.Xml.XPath.IXPathNavigable)
  commentId: M:Microsoft.Health.HealthRecordItemExtension.ParseXml(System.Xml.XPath.IXPathNavigable)
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItemExtension.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<HealthRecordItemExtension>()
  nameWithType: TypeHelper.ValueOrDbNull<HealthRecordItemExtension>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.HealthRecordItemExtension>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of HealthRecordItemExtension)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.HealthRecordItemExtension)()
  name.vb: ValueOrDbNull(Of HealthRecordItemExtension)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<HealthRecordItemExtension>
    nameWithType: TypeHelper.ValueOrDbNull<HealthRecordItemExtension>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.HealthRecordItemExtension>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of HealthRecordItemExtension)
    nameWithType: TypeHelper.ValueOrDbNull(Of HealthRecordItemExtension)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.HealthRecordItemExtension)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.HealthRecordItemExtension.#ctor*
  commentId: Overload:Microsoft.Health.HealthRecordItemExtension.#ctor
  isExternal: false
  name: HealthRecordItemExtension
  nameWithType: HealthRecordItemExtension.HealthRecordItemExtension
  fullName: Microsoft.Health.HealthRecordItemExtension.HealthRecordItemExtension
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlDocument
  commentId: T:System.Xml.XmlDocument
  parent: System.Xml
  isExternal: true
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: Microsoft.Health.HealthRecordItemExtension.ParseXml*
  commentId: Overload:Microsoft.Health.HealthRecordItemExtension.ParseXml
  isExternal: false
  name: ParseXml
  nameWithType: HealthRecordItemExtension.ParseXml
  fullName: Microsoft.Health.HealthRecordItemExtension.ParseXml
- uid: System.Xml.XPath.IXPathNavigable
  commentId: T:System.Xml.XPath.IXPathNavigable
  parent: System.Xml.XPath
  isExternal: true
  name: IXPathNavigable
  nameWithType: IXPathNavigable
  fullName: System.Xml.XPath.IXPathNavigable
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: false
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: Microsoft.Health.HealthRecordItemExtension.ExtensionData
  commentId: P:Microsoft.Health.HealthRecordItemExtension.ExtensionData
- uid: Microsoft.Health.HealthRecordItemExtension.WriteXml*
  commentId: Overload:Microsoft.Health.HealthRecordItemExtension.WriteXml
  isExternal: false
  name: WriteXml
  nameWithType: HealthRecordItemExtension.WriteXml
  fullName: Microsoft.Health.HealthRecordItemExtension.WriteXml
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: Microsoft.Health.HealthRecordItemExtension.Source*
  commentId: Overload:Microsoft.Health.HealthRecordItemExtension.Source
  isExternal: false
  name: Source
  nameWithType: HealthRecordItemExtension.Source
  fullName: Microsoft.Health.HealthRecordItemExtension.Source
- uid: Microsoft.Health.HealthRecordItemExtension.Version*
  commentId: Overload:Microsoft.Health.HealthRecordItemExtension.Version
  isExternal: false
  name: Version
  nameWithType: HealthRecordItemExtension.Version
  fullName: Microsoft.Health.HealthRecordItemExtension.Version
- uid: Microsoft.Health.HealthRecordItemExtension.Transform
  commentId: P:Microsoft.Health.HealthRecordItemExtension.Transform
- uid: Microsoft.Health.HealthRecordItemExtension.Logo*
  commentId: Overload:Microsoft.Health.HealthRecordItemExtension.Logo
  isExternal: false
  name: Logo
  nameWithType: HealthRecordItemExtension.Logo
  fullName: Microsoft.Health.HealthRecordItemExtension.Logo
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Microsoft.Health.HealthRecordItemExtension.Transform*
  commentId: Overload:Microsoft.Health.HealthRecordItemExtension.Transform
  isExternal: false
  name: Transform
  nameWithType: HealthRecordItemExtension.Transform
  fullName: Microsoft.Health.HealthRecordItemExtension.Transform
- uid: Microsoft.Health.HealthRecordItemExtension.ExtensionData*
  commentId: Overload:Microsoft.Health.HealthRecordItemExtension.ExtensionData
  isExternal: false
  name: ExtensionData
  nameWithType: HealthRecordItemExtension.ExtensionData
  fullName: Microsoft.Health.HealthRecordItemExtension.ExtensionData
