### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.VocabularySearchHelper
  commentId: T:Microsoft.Health.VocabularySearchHelper
  id: VocabularySearchHelper
  parent: Microsoft.Health
  children:
  - Microsoft.Health.VocabularySearchHelper.CreateVocabularySearchRequestJsonAuthenticatedUrl(Microsoft.Health.VocabularySearchParameters,System.String,System.Int32)
  - Microsoft.Health.VocabularySearchHelper.CreateVocabularySearchRequestJsonUrl(Microsoft.Health.VocabularySearchParameters,System.String,System.Guid)
  langs:
  - csharp
  - vb
  name: VocabularySearchHelper
  nameWithType: VocabularySearchHelper
  fullName: Microsoft.Health.VocabularySearchHelper
  type: Class
  source:
    remote:
      path: Microsoft.Health/VocabularySearchHelper.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: VocabularySearchHelper
    path: ../Microsoft.Health/VocabularySearchHelper.cs
    startLine: 23
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nRepresents an API set to create URLs that will handle HTTP GET queries for searches on \na specified vocabulary.\n"
  remarks: "\nThe urls provide a means for browser based access to the vocabulary search in HealthVault.\nThe response is returned in JSON format.\n"
  example: []
  syntax:
    content: public static class VocabularySearchHelper
    content.vb: Public Module VocabularySearchHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Health.VocabularySearchHelper.CreateVocabularySearchRequestJsonUrl(Microsoft.Health.VocabularySearchParameters,System.String,System.Guid)
  commentId: M:Microsoft.Health.VocabularySearchHelper.CreateVocabularySearchRequestJsonUrl(Microsoft.Health.VocabularySearchParameters,System.String,System.Guid)
  id: CreateVocabularySearchRequestJsonUrl(Microsoft.Health.VocabularySearchParameters,System.String,System.Guid)
  parent: Microsoft.Health.VocabularySearchHelper
  langs:
  - csharp
  - vb
  name: CreateVocabularySearchRequestJsonUrl(VocabularySearchParameters, String, Guid)
  nameWithType: VocabularySearchHelper.CreateVocabularySearchRequestJsonUrl(VocabularySearchParameters, String, Guid)
  fullName: Microsoft.Health.VocabularySearchHelper.CreateVocabularySearchRequestJsonUrl(Microsoft.Health.VocabularySearchParameters, System.String, System.Guid)
  type: Method
  source:
    remote:
      path: Microsoft.Health/VocabularySearchHelper.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CreateVocabularySearchRequestJsonUrl
    path: ../Microsoft.Health/VocabularySearchHelper.cs
    startLine: 50
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nCreates a vocabulary search request URL in which the application is identified using \nits service token.\n"
  remarks: "\n1. This is a fast access mechanism to publicly available vocabularies in HealthVault.\n2. The service token is available at <xref href=\"Microsoft.Health.ApplicationInfo.ClientServiceToken\" data-throw-if-not-resolved=\"false\"></xref>\n3. Searches to restricted vocabularies that an application has access to will not succeed\nwith this method. For those searches please use \n<xref href=\"Microsoft.Health.VocabularySearchHelper.CreateVocabularySearchRequestJsonAuthenticatedUrl(Microsoft.Health.VocabularySearchParameters%2cSystem.String%2cSystem.Int32)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public static Uri CreateVocabularySearchRequestJsonUrl(VocabularySearchParameters searchParameters, string jsonCallbackName, Guid serviceToken)
    content.vb: Public Shared Function CreateVocabularySearchRequestJsonUrl(searchParameters As VocabularySearchParameters, jsonCallbackName As String, serviceToken As Guid) As Uri
    parameters:
    - id: searchParameters
      type: Microsoft.Health.VocabularySearchParameters
      description: "\nThe set of parameters that identify the vocabulary to search, maximum search results,\nthe culture, etc.\n"
    - id: jsonCallbackName
      type: System.String
      description: "\nThis is the name of the callback function that will be called to parse the JSON response.\n"
    - id: serviceToken
      type: System.Guid
      description: "\nA Guid token that is used to identify the application that is going to make the search call.\n"
    return:
      type: System.Uri
      description: "\nA URL which can be used in the browser to make AJAX calls to HealthVault vocabulary search.\n"
  overload: Microsoft.Health.VocabularySearchHelper.CreateVocabularySearchRequestJsonUrl*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.VocabularySearchHelper.CreateVocabularySearchRequestJsonAuthenticatedUrl(Microsoft.Health.VocabularySearchParameters,System.String,System.Int32)
  commentId: M:Microsoft.Health.VocabularySearchHelper.CreateVocabularySearchRequestJsonAuthenticatedUrl(Microsoft.Health.VocabularySearchParameters,System.String,System.Int32)
  id: CreateVocabularySearchRequestJsonAuthenticatedUrl(Microsoft.Health.VocabularySearchParameters,System.String,System.Int32)
  parent: Microsoft.Health.VocabularySearchHelper
  langs:
  - csharp
  - vb
  name: CreateVocabularySearchRequestJsonAuthenticatedUrl(VocabularySearchParameters, String, Int32)
  nameWithType: VocabularySearchHelper.CreateVocabularySearchRequestJsonAuthenticatedUrl(VocabularySearchParameters, String, Int32)
  fullName: Microsoft.Health.VocabularySearchHelper.CreateVocabularySearchRequestJsonAuthenticatedUrl(Microsoft.Health.VocabularySearchParameters, System.String, System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health/VocabularySearchHelper.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CreateVocabularySearchRequestJsonAuthenticatedUrl
    path: ../Microsoft.Health/VocabularySearchHelper.cs
    startLine: 103
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nCreates a vocabulary search request url in which the application is identified using \nthe application certificate as the authentication parameter.\n"
  remarks: "\n1. This is an authenticated access mechanism for public and restricted vocabularies in \nHealthVault.\n2. The call will require more processing on the HealthVault server and it is recommended, \nthat this mechanism be used to mainly access restricted vocabularies in HealthVault that\nrequire authenticated access.\n"
  example: []
  syntax:
    content: public static Uri CreateVocabularySearchRequestJsonAuthenticatedUrl(VocabularySearchParameters searchParameters, string jsonCallbackName, int timeToLiveMinutes)
    content.vb: Public Shared Function CreateVocabularySearchRequestJsonAuthenticatedUrl(searchParameters As VocabularySearchParameters, jsonCallbackName As String, timeToLiveMinutes As Integer) As Uri
    parameters:
    - id: searchParameters
      type: Microsoft.Health.VocabularySearchParameters
      description: "\nThe set of parameters that identify the vocabulary to search, maximum search results,\nthe culture etc.\n"
    - id: jsonCallbackName
      type: System.String
      description: "\nThis is the name of the callback function that will be called to parse the JSON response.\n"
    - id: timeToLiveMinutes
      type: System.Int32
      description: "\nThe amount of time in minutes that the URL will be valid for. \n"
    return:
      type: System.Uri
      description: "\nA URL which can be used in the browser to make AJAX calls to HealthVault vocabulary search.\n"
  overload: Microsoft.Health.VocabularySearchHelper.CreateVocabularySearchRequestJsonAuthenticatedUrl*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.ApplicationInfo.ClientServiceToken
  commentId: P:Microsoft.Health.ApplicationInfo.ClientServiceToken
- uid: Microsoft.Health.VocabularySearchHelper.CreateVocabularySearchRequestJsonAuthenticatedUrl(Microsoft.Health.VocabularySearchParameters,System.String,System.Int32)
  commentId: M:Microsoft.Health.VocabularySearchHelper.CreateVocabularySearchRequestJsonAuthenticatedUrl(Microsoft.Health.VocabularySearchParameters,System.String,System.Int32)
- uid: Microsoft.Health.VocabularySearchHelper.CreateVocabularySearchRequestJsonUrl*
  commentId: Overload:Microsoft.Health.VocabularySearchHelper.CreateVocabularySearchRequestJsonUrl
  isExternal: false
  name: CreateVocabularySearchRequestJsonUrl
  nameWithType: VocabularySearchHelper.CreateVocabularySearchRequestJsonUrl
  fullName: Microsoft.Health.VocabularySearchHelper.CreateVocabularySearchRequestJsonUrl
- uid: Microsoft.Health.VocabularySearchParameters
  commentId: T:Microsoft.Health.VocabularySearchParameters
  parent: Microsoft.Health
  isExternal: false
  name: VocabularySearchParameters
  nameWithType: VocabularySearchParameters
  fullName: Microsoft.Health.VocabularySearchParameters
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Microsoft.Health.VocabularySearchHelper.CreateVocabularySearchRequestJsonAuthenticatedUrl*
  commentId: Overload:Microsoft.Health.VocabularySearchHelper.CreateVocabularySearchRequestJsonAuthenticatedUrl
  isExternal: false
  name: CreateVocabularySearchRequestJsonAuthenticatedUrl
  nameWithType: VocabularySearchHelper.CreateVocabularySearchRequestJsonAuthenticatedUrl
  fullName: Microsoft.Health.VocabularySearchHelper.CreateVocabularySearchRequestJsonAuthenticatedUrl
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
