### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Web.Mvc.HealthVault.Shell
  commentId: T:Microsoft.Health.Web.Mvc.HealthVault.Shell
  id: HealthVault.Shell
  parent: Microsoft.Health.Web.Mvc
  children:
  - Microsoft.Health.Web.Mvc.HealthVault.Shell.Url(System.Web.Mvc.ControllerContext)
  - Microsoft.Health.Web.Mvc.HealthVault.Shell.Url(System.Web.Mvc.ControllerContext,System.String)
  - Microsoft.Health.Web.Mvc.HealthVault.Shell.Url(System.Web.Mvc.ControllerContext,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  - Microsoft.Health.Web.Mvc.HealthVault.Shell.Url(System.Web.Mvc.ControllerContext,System.String,System.Object)
  langs:
  - csharp
  - vb
  name: HealthVault.Shell
  nameWithType: HealthVault.Shell
  fullName: Microsoft.Health.Web.Mvc.HealthVault.Shell
  type: Class
  source:
    remote:
      path: Microsoft.Health.Web.Mvc/HealthVault.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Shell
    path: ../Microsoft.Health.Web.Mvc/HealthVault.cs
    startLine: 104
  assemblies:
  - Microsoft.Health.Web.Mvc
  namespace: Microsoft.Health.Web.Mvc
  summary: "\nUtility methods for creating various urls targetting HealthVault Shell\n"
  example: []
  syntax:
    content: public static class Shell
    content.vb: Public Module Shell
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Health.Web.Mvc.HealthVault.Shell.Url(System.Web.Mvc.ControllerContext)
  commentId: M:Microsoft.Health.Web.Mvc.HealthVault.Shell.Url(System.Web.Mvc.ControllerContext)
  id: Url(System.Web.Mvc.ControllerContext)
  parent: Microsoft.Health.Web.Mvc.HealthVault.Shell
  langs:
  - csharp
  - vb
  name: Url(ControllerContext)
  nameWithType: HealthVault.Shell.Url(ControllerContext)
  fullName: Microsoft.Health.Web.Mvc.HealthVault.Shell.Url(System.Web.Mvc.ControllerContext)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web.Mvc/HealthVault.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Url
    path: ../Microsoft.Health.Web.Mvc/HealthVault.cs
    startLine: 115
  assemblies:
  - Microsoft.Health.Web.Mvc
  namespace: Microsoft.Health.Web.Mvc
  summary: "\nCreates a url to the Shell homepage\n"
  example: []
  syntax:
    content: public static string Url(ControllerContext context)
    content.vb: Public Shared Function Url(context As ControllerContext) As String
    parameters:
    - id: context
      type: System.Web.Mvc.ControllerContext
      description: The current controller context
    return:
      type: System.String
      description: A string containing the Shell homepage url.
  overload: Microsoft.Health.Web.Mvc.HealthVault.Shell.Url*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.Mvc.HealthVault.Shell.Url(System.Web.Mvc.ControllerContext,System.String)
  commentId: M:Microsoft.Health.Web.Mvc.HealthVault.Shell.Url(System.Web.Mvc.ControllerContext,System.String)
  id: Url(System.Web.Mvc.ControllerContext,System.String)
  parent: Microsoft.Health.Web.Mvc.HealthVault.Shell
  langs:
  - csharp
  - vb
  name: Url(ControllerContext, String)
  nameWithType: HealthVault.Shell.Url(ControllerContext, String)
  fullName: Microsoft.Health.Web.Mvc.HealthVault.Shell.Url(System.Web.Mvc.ControllerContext, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web.Mvc/HealthVault.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Url
    path: ../Microsoft.Health.Web.Mvc/HealthVault.cs
    startLine: 126
  assemblies:
  - Microsoft.Health.Web.Mvc
  namespace: Microsoft.Health.Web.Mvc
  summary: "\nCreates a url to a specific Shell target\n"
  example: []
  syntax:
    content: public static string Url(ControllerContext context, string target)
    content.vb: Public Shared Function Url(context As ControllerContext, target As String) As String
    parameters:
    - id: context
      type: System.Web.Mvc.ControllerContext
      description: The current controller context
    - id: target
      type: System.String
      description: The name of the target
    return:
      type: System.String
      description: A string containing the Shell url for the given target
  overload: Microsoft.Health.Web.Mvc.HealthVault.Shell.Url*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.Mvc.HealthVault.Shell.Url(System.Web.Mvc.ControllerContext,System.String,System.Object)
  commentId: M:Microsoft.Health.Web.Mvc.HealthVault.Shell.Url(System.Web.Mvc.ControllerContext,System.String,System.Object)
  id: Url(System.Web.Mvc.ControllerContext,System.String,System.Object)
  parent: Microsoft.Health.Web.Mvc.HealthVault.Shell
  langs:
  - csharp
  - vb
  name: Url(ControllerContext, String, Object)
  nameWithType: HealthVault.Shell.Url(ControllerContext, String, Object)
  fullName: Microsoft.Health.Web.Mvc.HealthVault.Shell.Url(System.Web.Mvc.ControllerContext, System.String, System.Object)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web.Mvc/HealthVault.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Url
    path: ../Microsoft.Health.Web.Mvc/HealthVault.cs
    startLine: 138
  assemblies:
  - Microsoft.Health.Web.Mvc
  namespace: Microsoft.Health.Web.Mvc
  summary: "\nCreates a url to a specific Shell target\n"
  example: []
  syntax:
    content: public static string Url(ControllerContext context, string target, object parameters)
    content.vb: Public Shared Function Url(context As ControllerContext, target As String, parameters As Object) As String
    parameters:
    - id: context
      type: System.Web.Mvc.ControllerContext
      description: The current controller context
    - id: target
      type: System.String
      description: The name of the target
    - id: parameters
      type: System.Object
      description: Parameters to pass to the Shell page
    return:
      type: System.String
      description: A string containing the Shell url for the given target
  overload: Microsoft.Health.Web.Mvc.HealthVault.Shell.Url*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.Mvc.HealthVault.Shell.Url(System.Web.Mvc.ControllerContext,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Microsoft.Health.Web.Mvc.HealthVault.Shell.Url(System.Web.Mvc.ControllerContext,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  id: Url(System.Web.Mvc.ControllerContext,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Microsoft.Health.Web.Mvc.HealthVault.Shell
  langs:
  - csharp
  - vb
  name: Url(ControllerContext, String, IDictionary<String, Object>)
  nameWithType: HealthVault.Shell.Url(ControllerContext, String, IDictionary<String, Object>)
  fullName: Microsoft.Health.Web.Mvc.HealthVault.Shell.Url(System.Web.Mvc.ControllerContext, System.String, System.Collections.Generic.IDictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web.Mvc/HealthVault.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Url
    path: ../Microsoft.Health.Web.Mvc/HealthVault.cs
    startLine: 150
  assemblies:
  - Microsoft.Health.Web.Mvc
  namespace: Microsoft.Health.Web.Mvc
  summary: "\nCreates a url to a specific Shell target\n"
  example: []
  syntax:
    content: public static string Url(ControllerContext context, string target, IDictionary<string, object> parameters)
    content.vb: Public Shared Function Url(context As ControllerContext, target As String, parameters As IDictionary(Of String, Object)) As String
    parameters:
    - id: context
      type: System.Web.Mvc.ControllerContext
      description: The current controller context
    - id: target
      type: System.String
      description: The name of the target
    - id: parameters
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: Parameters to pass to the Shell page
    return:
      type: System.String
      description: A string containing the Shell url for the given target
  overload: Microsoft.Health.Web.Mvc.HealthVault.Shell.Url*
  nameWithType.vb: HealthVault.Shell.Url(ControllerContext, String, IDictionary(Of String, Object))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Health.Web.Mvc.HealthVault.Shell.Url(System.Web.Mvc.ControllerContext, System.String, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: Url(ControllerContext, String, IDictionary(Of String, Object))
references:
- uid: Microsoft.Health.Web.Mvc
  commentId: N:Microsoft.Health.Web.Mvc
  isExternal: false
  name: Microsoft.Health.Web.Mvc
  nameWithType: Microsoft.Health.Web.Mvc
  fullName: Microsoft.Health.Web.Mvc
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Web.Mvc.HealthVault.Shell.Url*
  commentId: Overload:Microsoft.Health.Web.Mvc.HealthVault.Shell.Url
  isExternal: false
  name: Url
  nameWithType: HealthVault.Shell.Url
  fullName: Microsoft.Health.Web.Mvc.HealthVault.Shell.Url
- uid: System.Web.Mvc.ControllerContext
  commentId: T:System.Web.Mvc.ControllerContext
  parent: System.Web.Mvc
  isExternal: true
  name: ControllerContext
  nameWithType: ControllerContext
  fullName: System.Web.Mvc.ControllerContext
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Mvc
  commentId: N:System.Web.Mvc
  isExternal: false
  name: System.Web.Mvc
  nameWithType: System.Web.Mvc
  fullName: System.Web.Mvc
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
