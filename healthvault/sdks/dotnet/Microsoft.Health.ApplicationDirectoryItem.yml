### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.ApplicationDirectoryItem
  commentId: T:Microsoft.Health.ApplicationDirectoryItem
  id: ApplicationDirectoryItem
  parent: Microsoft.Health
  children:
  - Microsoft.Health.ApplicationDirectoryItem.#ctor
  - Microsoft.Health.ApplicationDirectoryItem.ConnectionDescription
  - Microsoft.Health.ApplicationDirectoryItem.GetSchema
  - Microsoft.Health.ApplicationDirectoryItem.IsPopular
  - Microsoft.Health.ApplicationDirectoryItem.LargeLogo
  - Microsoft.Health.ApplicationDirectoryItem.PopularityRank
  - Microsoft.Health.ApplicationDirectoryItem.PrivacyStatementUrl
  - Microsoft.Health.ApplicationDirectoryItem.ReadXml(System.Xml.XmlReader)
  - Microsoft.Health.ApplicationDirectoryItem.Screenshots
  - Microsoft.Health.ApplicationDirectoryItem.TermsOfUseUrl
  - Microsoft.Health.ApplicationDirectoryItem.WriteXml(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: ApplicationDirectoryItem
  nameWithType: ApplicationDirectoryItem
  fullName: Microsoft.Health.ApplicationDirectoryItem
  type: Class
  source:
    remote:
      path: Microsoft.Health.Directory/applicationdirectoryitem.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ApplicationDirectoryItem
    path: ../Microsoft.Health.Directory/applicationdirectoryitem.cs
    startLine: 25
  assemblies:
  - Microsoft.Health.Directory
  namespace: Microsoft.Health
  summary: "\nDefines the information for a HealthVault ApplicationDirectoryItem.\nAn application directory item contains directory information\nfor an application that works with HealthVault. \n"
  remarks: "\nDirectory information typically consists of short description of the application, and a detailed long description in html.\nSupplementary information like application screenshots, company details, etc. are also available.\n"
  example: []
  syntax:
    content: 'public class ApplicationDirectoryItem : DirectoryItem, IXmlSerializable'
    content.vb: >-
      Public Class ApplicationDirectoryItem
          Inherits DirectoryItem
          Implements IXmlSerializable
  inheritance:
  - System.Object
  - Microsoft.Health.DirectoryItem
  implements:
  - System.Xml.Serialization.IXmlSerializable
  inheritedMembers:
  - Microsoft.Health.DirectoryItem.Id
  - Microsoft.Health.DirectoryItem.CreatedDate
  - Microsoft.Health.DirectoryItem.UpdatedDate
  - Microsoft.Health.DirectoryItem.Name
  - Microsoft.Health.DirectoryItem.CompanyLogoAlternativeText
  - Microsoft.Health.DirectoryItem.CompanyLogoImage
  - Microsoft.Health.DirectoryItem.CompanyLogoContentType
  - Microsoft.Health.DirectoryItem.CompanyName
  - Microsoft.Health.DirectoryItem.CompanyUrl
  - Microsoft.Health.DirectoryItem.Categories
  - Microsoft.Health.DirectoryItem.DataProviderCategories
  - Microsoft.Health.DirectoryItem.ShortDescription
  - Microsoft.Health.DirectoryItem.LongDescription
  - Microsoft.Health.DirectoryItem.ThingTypeIds
  - Microsoft.Health.DirectoryItem.InformationUrl
  - Microsoft.Health.DirectoryItem.FacebookLikeUrl
  - Microsoft.Health.DirectoryItem.MobilePlatformAppUrls
  - Microsoft.Health.DirectoryItem.Extensions
  - Microsoft.Health.DirectoryItem.SupportedRecordLocations
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.ApplicationDirectoryItem.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.ApplicationDirectoryItem.#ctor
  commentId: M:Microsoft.Health.ApplicationDirectoryItem.#ctor
  id: '#ctor'
  parent: Microsoft.Health.ApplicationDirectoryItem
  langs:
  - csharp
  - vb
  name: ApplicationDirectoryItem()
  nameWithType: ApplicationDirectoryItem.ApplicationDirectoryItem()
  fullName: Microsoft.Health.ApplicationDirectoryItem.ApplicationDirectoryItem()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Directory/applicationdirectoryitem.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.Directory/applicationdirectoryitem.cs
    startLine: 31
  assemblies:
  - Microsoft.Health.Directory
  namespace: Microsoft.Health
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ApplicationDirectoryItem\" data-throw-if-not-resolved=\"false\"></xref> class with default parameters.\n"
  example: []
  syntax:
    content: public ApplicationDirectoryItem()
    content.vb: Public Sub New
  overload: Microsoft.Health.ApplicationDirectoryItem.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ApplicationDirectoryItem.LargeLogo
  commentId: P:Microsoft.Health.ApplicationDirectoryItem.LargeLogo
  id: LargeLogo
  parent: Microsoft.Health.ApplicationDirectoryItem
  langs:
  - csharp
  - vb
  name: LargeLogo
  nameWithType: ApplicationDirectoryItem.LargeLogo
  fullName: Microsoft.Health.ApplicationDirectoryItem.LargeLogo
  type: Property
  source:
    remote:
      path: Microsoft.Health.Directory/applicationdirectoryitem.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: LargeLogo
    path: ../Microsoft.Health.Directory/applicationdirectoryitem.cs
    startLine: 50
  assemblies:
  - Microsoft.Health.Directory
  namespace: Microsoft.Health
  summary: "\nGets or sets the large logo for the application.\n"
  remarks: "\nThe large logo is shown at various times to the user when interacting with the\nHealthVault Shell. The large logo must be 120x60 pixels or smaller, and is limited \nto 160kb in size.\n\nOn updating an application configuration the large logo will only \nbe updated if the value is not null.\n"
  example: []
  syntax:
    content: public ApplicationBinaryConfiguration LargeLogo { get; }
    content.vb: Public ReadOnly Property LargeLogo As ApplicationBinaryConfiguration
    parameters: []
    return:
      type: Microsoft.Health.ApplicationBinaryConfiguration
  overload: Microsoft.Health.ApplicationDirectoryItem.LargeLogo*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.ApplicationDirectoryItem.PrivacyStatementUrl
  commentId: P:Microsoft.Health.ApplicationDirectoryItem.PrivacyStatementUrl
  id: PrivacyStatementUrl
  parent: Microsoft.Health.ApplicationDirectoryItem
  langs:
  - csharp
  - vb
  name: PrivacyStatementUrl
  nameWithType: ApplicationDirectoryItem.PrivacyStatementUrl
  fullName: Microsoft.Health.ApplicationDirectoryItem.PrivacyStatementUrl
  type: Property
  source:
    remote:
      path: Microsoft.Health.Directory/applicationdirectoryitem.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: PrivacyStatementUrl
    path: ../Microsoft.Health.Directory/applicationdirectoryitem.cs
    startLine: 63
  assemblies:
  - Microsoft.Health.Directory
  namespace: Microsoft.Health
  summary: "\nGets a dictionary of language specifiers and localized URL to retrieve the privacy statement URL on this item.\n"
  remarks: "\nThe key is the language-country string such as \"en-US\", and the value is the localized version of the URL.\n"
  example: []
  syntax:
    content: public CultureSpecificUrlDictionary PrivacyStatementUrl { get; }
    content.vb: Public ReadOnly Property PrivacyStatementUrl As CultureSpecificUrlDictionary
    parameters: []
    return:
      type: Microsoft.Health.CultureSpecificUrlDictionary
  overload: Microsoft.Health.ApplicationDirectoryItem.PrivacyStatementUrl*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.ApplicationDirectoryItem.TermsOfUseUrl
  commentId: P:Microsoft.Health.ApplicationDirectoryItem.TermsOfUseUrl
  id: TermsOfUseUrl
  parent: Microsoft.Health.ApplicationDirectoryItem
  langs:
  - csharp
  - vb
  name: TermsOfUseUrl
  nameWithType: ApplicationDirectoryItem.TermsOfUseUrl
  fullName: Microsoft.Health.ApplicationDirectoryItem.TermsOfUseUrl
  type: Property
  source:
    remote:
      path: Microsoft.Health.Directory/applicationdirectoryitem.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: TermsOfUseUrl
    path: ../Microsoft.Health.Directory/applicationdirectoryitem.cs
    startLine: 76
  assemblies:
  - Microsoft.Health.Directory
  namespace: Microsoft.Health
  summary: "\nGets dictionary of language specifiers and localized URL to retrieve terms of use URL on this item.\n"
  remarks: "\nThe key is the language-country string such as \"en-US\", and the value is the localized version of the string.\n"
  example: []
  syntax:
    content: public CultureSpecificUrlDictionary TermsOfUseUrl { get; }
    content.vb: Public ReadOnly Property TermsOfUseUrl As CultureSpecificUrlDictionary
    parameters: []
    return:
      type: Microsoft.Health.CultureSpecificUrlDictionary
  overload: Microsoft.Health.ApplicationDirectoryItem.TermsOfUseUrl*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.ApplicationDirectoryItem.ConnectionDescription
  commentId: P:Microsoft.Health.ApplicationDirectoryItem.ConnectionDescription
  id: ConnectionDescription
  parent: Microsoft.Health.ApplicationDirectoryItem
  langs:
  - csharp
  - vb
  name: ConnectionDescription
  nameWithType: ApplicationDirectoryItem.ConnectionDescription
  fullName: Microsoft.Health.ApplicationDirectoryItem.ConnectionDescription
  type: Property
  source:
    remote:
      path: Microsoft.Health.Directory/applicationdirectoryitem.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ConnectionDescription
    path: ../Microsoft.Health.Directory/applicationdirectoryitem.cs
    startLine: 89
  assemblies:
  - Microsoft.Health.Directory
  namespace: Microsoft.Health
  summary: "\nGets a dictionary of language specifiers and localized description of the connection process for the item.\n"
  remarks: "\nThe key is the language-country string such as \"en-US\", and the value is the localized version of the string.\n"
  example: []
  syntax:
    content: public CultureSpecificStringDictionary ConnectionDescription { get; }
    content.vb: Public ReadOnly Property ConnectionDescription As CultureSpecificStringDictionary
    parameters: []
    return:
      type: Microsoft.Health.CultureSpecificStringDictionary
  overload: Microsoft.Health.ApplicationDirectoryItem.ConnectionDescription*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.ApplicationDirectoryItem.Screenshots
  commentId: P:Microsoft.Health.ApplicationDirectoryItem.Screenshots
  id: Screenshots
  parent: Microsoft.Health.ApplicationDirectoryItem
  langs:
  - csharp
  - vb
  name: Screenshots
  nameWithType: ApplicationDirectoryItem.Screenshots
  fullName: Microsoft.Health.ApplicationDirectoryItem.Screenshots
  type: Property
  source:
    remote:
      path: Microsoft.Health.Directory/applicationdirectoryitem.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Screenshots
    path: ../Microsoft.Health.Directory/applicationdirectoryitem.cs
    startLine: 100
  assemblies:
  - Microsoft.Health.Directory
  namespace: Microsoft.Health
  summary: "\nGets a list of screenshots for this application.\nTypically showing consumer use cases.\n"
  example: []
  syntax:
    content: public Collection<Screenshot> Screenshots { get; }
    content.vb: Public ReadOnly Property Screenshots As Collection(Of Screenshot)
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{Microsoft.Health.Screenshot}
  overload: Microsoft.Health.ApplicationDirectoryItem.Screenshots*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.ApplicationDirectoryItem.IsPopular
  commentId: P:Microsoft.Health.ApplicationDirectoryItem.IsPopular
  id: IsPopular
  parent: Microsoft.Health.ApplicationDirectoryItem
  langs:
  - csharp
  - vb
  name: IsPopular
  nameWithType: ApplicationDirectoryItem.IsPopular
  fullName: Microsoft.Health.ApplicationDirectoryItem.IsPopular
  type: Property
  source:
    remote:
      path: Microsoft.Health.Directory/applicationdirectoryitem.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: IsPopular
    path: ../Microsoft.Health.Directory/applicationdirectoryitem.cs
    startLine: 113
  assemblies:
  - Microsoft.Health.Directory
  namespace: Microsoft.Health
  summary: "\nGets a value indicating whether this application is popular.\n"
  example: []
  syntax:
    content: public bool IsPopular { get; }
    content.vb: Public ReadOnly Property IsPopular As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this instance is popular; otherwise, <code>false</code>.\n"
  overload: Microsoft.Health.ApplicationDirectoryItem.IsPopular*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.ApplicationDirectoryItem.PopularityRank
  commentId: P:Microsoft.Health.ApplicationDirectoryItem.PopularityRank
  id: PopularityRank
  parent: Microsoft.Health.ApplicationDirectoryItem
  langs:
  - csharp
  - vb
  name: PopularityRank
  nameWithType: ApplicationDirectoryItem.PopularityRank
  fullName: Microsoft.Health.ApplicationDirectoryItem.PopularityRank
  type: Property
  source:
    remote:
      path: Microsoft.Health.Directory/applicationdirectoryitem.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: PopularityRank
    path: ../Microsoft.Health.Directory/applicationdirectoryitem.cs
    startLine: 124
  assemblies:
  - Microsoft.Health.Directory
  namespace: Microsoft.Health
  summary: "\nGets a number indicating this item's popularity rank.  The smaller the number,\nthe more popular the item.\n"
  example: []
  syntax:
    content: public int PopularityRank { get; }
    content.vb: Public ReadOnly Property PopularityRank As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Health.ApplicationDirectoryItem.PopularityRank*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.ApplicationDirectoryItem.GetSchema
  commentId: M:Microsoft.Health.ApplicationDirectoryItem.GetSchema
  id: GetSchema
  parent: Microsoft.Health.ApplicationDirectoryItem
  langs:
  - csharp
  - vb
  name: GetSchema()
  nameWithType: ApplicationDirectoryItem.GetSchema()
  fullName: Microsoft.Health.ApplicationDirectoryItem.GetSchema()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Directory/applicationdirectoryitem.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetSchema
    path: ../Microsoft.Health.Directory/applicationdirectoryitem.cs
    startLine: 140
  assemblies:
  - Microsoft.Health.Directory
  namespace: Microsoft.Health
  summary: "\nGet the schema as per IXmlSerializable requirement.\nAlways returns null.\n"
  example: []
  syntax:
    content: public XmlSchema GetSchema()
    content.vb: Public Function GetSchema As XmlSchema
    return:
      type: System.Xml.Schema.XmlSchema
      description: "null"
  overload: Microsoft.Health.ApplicationDirectoryItem.GetSchema*
  implements:
  - System.Xml.Serialization.IXmlSerializable.GetSchema
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ApplicationDirectoryItem.ReadXml(System.Xml.XmlReader)
  commentId: M:Microsoft.Health.ApplicationDirectoryItem.ReadXml(System.Xml.XmlReader)
  id: ReadXml(System.Xml.XmlReader)
  parent: Microsoft.Health.ApplicationDirectoryItem
  langs:
  - csharp
  - vb
  name: ReadXml(XmlReader)
  nameWithType: ApplicationDirectoryItem.ReadXml(XmlReader)
  fullName: Microsoft.Health.ApplicationDirectoryItem.ReadXml(System.Xml.XmlReader)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Directory/applicationdirectoryitem.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ReadXml
    path: ../Microsoft.Health.Directory/applicationdirectoryitem.cs
    startLine: 160
  assemblies:
  - Microsoft.Health.Directory
  namespace: Microsoft.Health
  summary: "\nGenerates an object from its XML representation.\n"
  remarks: "\nThe ReadXml method must reconstitute your object using the information that was written by the WriteXml method\n"
  example: []
  syntax:
    content: public void ReadXml(XmlReader reader)
    content.vb: Public Sub ReadXml(reader As XmlReader)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "\nThe XmlReader stream from which the object is deserialized.\n"
  overload: Microsoft.Health.ApplicationDirectoryItem.ReadXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nIf the argument <span class=\"paramref\">reader</span> was <strong>null</strong>.\n"
  implements:
  - System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ApplicationDirectoryItem.WriteXml(System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ApplicationDirectoryItem.WriteXml(System.Xml.XmlWriter)
  id: WriteXml(System.Xml.XmlWriter)
  parent: Microsoft.Health.ApplicationDirectoryItem
  langs:
  - csharp
  - vb
  name: WriteXml(XmlWriter)
  nameWithType: ApplicationDirectoryItem.WriteXml(XmlWriter)
  fullName: Microsoft.Health.ApplicationDirectoryItem.WriteXml(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Directory/applicationdirectoryitem.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteXml
    path: ../Microsoft.Health.Directory/applicationdirectoryitem.cs
    startLine: 186
  assemblies:
  - Microsoft.Health.Directory
  namespace: Microsoft.Health
  summary: "\nConverts an object into its XML representation.\n"
  remarks: "\nWrite sufficient information to the XmlWriter stream to allow the ReadXml method to reconstitute the object.\n"
  example: []
  syntax:
    content: public void WriteXml(XmlWriter writer)
    content.vb: Public Sub WriteXml(writer As XmlWriter)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "The XmlWriter stream to which the object is serialized. \n"
  overload: Microsoft.Health.ApplicationDirectoryItem.WriteXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nIf the argument <span class=\"paramref\">writer</span> was <strong>null</strong>.\n"
  implements:
  - System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.DirectoryItem
  commentId: T:Microsoft.Health.DirectoryItem
  parent: Microsoft.Health
  isExternal: false
  name: DirectoryItem
  nameWithType: DirectoryItem
  fullName: Microsoft.Health.DirectoryItem
- uid: System.Xml.Serialization.IXmlSerializable
  commentId: T:System.Xml.Serialization.IXmlSerializable
  parent: System.Xml.Serialization
  isExternal: true
  name: IXmlSerializable
  nameWithType: IXmlSerializable
  fullName: System.Xml.Serialization.IXmlSerializable
- uid: Microsoft.Health.DirectoryItem.Id
  commentId: P:Microsoft.Health.DirectoryItem.Id
  parent: Microsoft.Health.DirectoryItem
  isExternal: false
  name: Id
  nameWithType: DirectoryItem.Id
  fullName: Microsoft.Health.DirectoryItem.Id
- uid: Microsoft.Health.DirectoryItem.CreatedDate
  commentId: P:Microsoft.Health.DirectoryItem.CreatedDate
  parent: Microsoft.Health.DirectoryItem
  isExternal: false
  name: CreatedDate
  nameWithType: DirectoryItem.CreatedDate
  fullName: Microsoft.Health.DirectoryItem.CreatedDate
- uid: Microsoft.Health.DirectoryItem.UpdatedDate
  commentId: P:Microsoft.Health.DirectoryItem.UpdatedDate
  parent: Microsoft.Health.DirectoryItem
  isExternal: false
  name: UpdatedDate
  nameWithType: DirectoryItem.UpdatedDate
  fullName: Microsoft.Health.DirectoryItem.UpdatedDate
- uid: Microsoft.Health.DirectoryItem.Name
  commentId: P:Microsoft.Health.DirectoryItem.Name
  parent: Microsoft.Health.DirectoryItem
  isExternal: false
  name: Name
  nameWithType: DirectoryItem.Name
  fullName: Microsoft.Health.DirectoryItem.Name
- uid: Microsoft.Health.DirectoryItem.CompanyLogoAlternativeText
  commentId: P:Microsoft.Health.DirectoryItem.CompanyLogoAlternativeText
  parent: Microsoft.Health.DirectoryItem
  isExternal: false
  name: CompanyLogoAlternativeText
  nameWithType: DirectoryItem.CompanyLogoAlternativeText
  fullName: Microsoft.Health.DirectoryItem.CompanyLogoAlternativeText
- uid: Microsoft.Health.DirectoryItem.CompanyLogoImage
  commentId: P:Microsoft.Health.DirectoryItem.CompanyLogoImage
  parent: Microsoft.Health.DirectoryItem
  isExternal: false
  name: CompanyLogoImage
  nameWithType: DirectoryItem.CompanyLogoImage
  fullName: Microsoft.Health.DirectoryItem.CompanyLogoImage
- uid: Microsoft.Health.DirectoryItem.CompanyLogoContentType
  commentId: P:Microsoft.Health.DirectoryItem.CompanyLogoContentType
  parent: Microsoft.Health.DirectoryItem
  isExternal: false
  name: CompanyLogoContentType
  nameWithType: DirectoryItem.CompanyLogoContentType
  fullName: Microsoft.Health.DirectoryItem.CompanyLogoContentType
- uid: Microsoft.Health.DirectoryItem.CompanyName
  commentId: P:Microsoft.Health.DirectoryItem.CompanyName
  parent: Microsoft.Health.DirectoryItem
  isExternal: false
  name: CompanyName
  nameWithType: DirectoryItem.CompanyName
  fullName: Microsoft.Health.DirectoryItem.CompanyName
- uid: Microsoft.Health.DirectoryItem.CompanyUrl
  commentId: P:Microsoft.Health.DirectoryItem.CompanyUrl
  parent: Microsoft.Health.DirectoryItem
  isExternal: false
  name: CompanyUrl
  nameWithType: DirectoryItem.CompanyUrl
  fullName: Microsoft.Health.DirectoryItem.CompanyUrl
- uid: Microsoft.Health.DirectoryItem.Categories
  commentId: P:Microsoft.Health.DirectoryItem.Categories
  parent: Microsoft.Health.DirectoryItem
  isExternal: false
  name: Categories
  nameWithType: DirectoryItem.Categories
  fullName: Microsoft.Health.DirectoryItem.Categories
- uid: Microsoft.Health.DirectoryItem.DataProviderCategories
  commentId: P:Microsoft.Health.DirectoryItem.DataProviderCategories
  parent: Microsoft.Health.DirectoryItem
  isExternal: false
  name: DataProviderCategories
  nameWithType: DirectoryItem.DataProviderCategories
  fullName: Microsoft.Health.DirectoryItem.DataProviderCategories
- uid: Microsoft.Health.DirectoryItem.ShortDescription
  commentId: P:Microsoft.Health.DirectoryItem.ShortDescription
  parent: Microsoft.Health.DirectoryItem
  isExternal: false
  name: ShortDescription
  nameWithType: DirectoryItem.ShortDescription
  fullName: Microsoft.Health.DirectoryItem.ShortDescription
- uid: Microsoft.Health.DirectoryItem.LongDescription
  commentId: P:Microsoft.Health.DirectoryItem.LongDescription
  parent: Microsoft.Health.DirectoryItem
  isExternal: false
  name: LongDescription
  nameWithType: DirectoryItem.LongDescription
  fullName: Microsoft.Health.DirectoryItem.LongDescription
- uid: Microsoft.Health.DirectoryItem.ThingTypeIds
  commentId: P:Microsoft.Health.DirectoryItem.ThingTypeIds
  parent: Microsoft.Health.DirectoryItem
  isExternal: false
  name: ThingTypeIds
  nameWithType: DirectoryItem.ThingTypeIds
  fullName: Microsoft.Health.DirectoryItem.ThingTypeIds
- uid: Microsoft.Health.DirectoryItem.InformationUrl
  commentId: P:Microsoft.Health.DirectoryItem.InformationUrl
  parent: Microsoft.Health.DirectoryItem
  isExternal: false
  name: InformationUrl
  nameWithType: DirectoryItem.InformationUrl
  fullName: Microsoft.Health.DirectoryItem.InformationUrl
- uid: Microsoft.Health.DirectoryItem.FacebookLikeUrl
  commentId: P:Microsoft.Health.DirectoryItem.FacebookLikeUrl
  parent: Microsoft.Health.DirectoryItem
  isExternal: false
  name: FacebookLikeUrl
  nameWithType: DirectoryItem.FacebookLikeUrl
  fullName: Microsoft.Health.DirectoryItem.FacebookLikeUrl
- uid: Microsoft.Health.DirectoryItem.MobilePlatformAppUrls
  commentId: P:Microsoft.Health.DirectoryItem.MobilePlatformAppUrls
  parent: Microsoft.Health.DirectoryItem
  isExternal: false
  name: MobilePlatformAppUrls
  nameWithType: DirectoryItem.MobilePlatformAppUrls
  fullName: Microsoft.Health.DirectoryItem.MobilePlatformAppUrls
- uid: Microsoft.Health.DirectoryItem.Extensions
  commentId: P:Microsoft.Health.DirectoryItem.Extensions
  parent: Microsoft.Health.DirectoryItem
  isExternal: false
  name: Extensions
  nameWithType: DirectoryItem.Extensions
  fullName: Microsoft.Health.DirectoryItem.Extensions
- uid: Microsoft.Health.DirectoryItem.SupportedRecordLocations
  commentId: P:Microsoft.Health.DirectoryItem.SupportedRecordLocations
  parent: Microsoft.Health.DirectoryItem
  isExternal: false
  name: SupportedRecordLocations
  nameWithType: DirectoryItem.SupportedRecordLocations
  fullName: Microsoft.Health.DirectoryItem.SupportedRecordLocations
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ApplicationDirectoryItem.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<ApplicationDirectoryItem>()
  nameWithType: TypeHelper.ValueOrDbNull<ApplicationDirectoryItem>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.ApplicationDirectoryItem>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of ApplicationDirectoryItem)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.ApplicationDirectoryItem)()
  name.vb: ValueOrDbNull(Of ApplicationDirectoryItem)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<ApplicationDirectoryItem>
    nameWithType: TypeHelper.ValueOrDbNull<ApplicationDirectoryItem>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.ApplicationDirectoryItem>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of ApplicationDirectoryItem)
    nameWithType: TypeHelper.ValueOrDbNull(Of ApplicationDirectoryItem)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.ApplicationDirectoryItem)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Xml.Serialization
  commentId: N:System.Xml.Serialization
  isExternal: false
  name: System.Xml.Serialization
  nameWithType: System.Xml.Serialization
  fullName: System.Xml.Serialization
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.ApplicationDirectoryItem
  commentId: T:Microsoft.Health.ApplicationDirectoryItem
  isExternal: false
  name: ApplicationDirectoryItem
  nameWithType: ApplicationDirectoryItem
  fullName: Microsoft.Health.ApplicationDirectoryItem
- uid: Microsoft.Health.ApplicationDirectoryItem.#ctor*
  commentId: Overload:Microsoft.Health.ApplicationDirectoryItem.#ctor
  isExternal: false
  name: ApplicationDirectoryItem
  nameWithType: ApplicationDirectoryItem.ApplicationDirectoryItem
  fullName: Microsoft.Health.ApplicationDirectoryItem.ApplicationDirectoryItem
- uid: Microsoft.Health.ApplicationDirectoryItem.LargeLogo*
  commentId: Overload:Microsoft.Health.ApplicationDirectoryItem.LargeLogo
  isExternal: false
  name: LargeLogo
  nameWithType: ApplicationDirectoryItem.LargeLogo
  fullName: Microsoft.Health.ApplicationDirectoryItem.LargeLogo
- uid: Microsoft.Health.ApplicationBinaryConfiguration
  commentId: T:Microsoft.Health.ApplicationBinaryConfiguration
  parent: Microsoft.Health
  isExternal: false
  name: ApplicationBinaryConfiguration
  nameWithType: ApplicationBinaryConfiguration
  fullName: Microsoft.Health.ApplicationBinaryConfiguration
- uid: Microsoft.Health.ApplicationDirectoryItem.PrivacyStatementUrl*
  commentId: Overload:Microsoft.Health.ApplicationDirectoryItem.PrivacyStatementUrl
  isExternal: false
  name: PrivacyStatementUrl
  nameWithType: ApplicationDirectoryItem.PrivacyStatementUrl
  fullName: Microsoft.Health.ApplicationDirectoryItem.PrivacyStatementUrl
- uid: Microsoft.Health.CultureSpecificUrlDictionary
  commentId: T:Microsoft.Health.CultureSpecificUrlDictionary
  parent: Microsoft.Health
  isExternal: false
  name: CultureSpecificUrlDictionary
  nameWithType: CultureSpecificUrlDictionary
  fullName: Microsoft.Health.CultureSpecificUrlDictionary
- uid: Microsoft.Health.ApplicationDirectoryItem.TermsOfUseUrl*
  commentId: Overload:Microsoft.Health.ApplicationDirectoryItem.TermsOfUseUrl
  isExternal: false
  name: TermsOfUseUrl
  nameWithType: ApplicationDirectoryItem.TermsOfUseUrl
  fullName: Microsoft.Health.ApplicationDirectoryItem.TermsOfUseUrl
- uid: Microsoft.Health.ApplicationDirectoryItem.ConnectionDescription*
  commentId: Overload:Microsoft.Health.ApplicationDirectoryItem.ConnectionDescription
  isExternal: false
  name: ConnectionDescription
  nameWithType: ApplicationDirectoryItem.ConnectionDescription
  fullName: Microsoft.Health.ApplicationDirectoryItem.ConnectionDescription
- uid: Microsoft.Health.CultureSpecificStringDictionary
  commentId: T:Microsoft.Health.CultureSpecificStringDictionary
  parent: Microsoft.Health
  isExternal: false
  name: CultureSpecificStringDictionary
  nameWithType: CultureSpecificStringDictionary
  fullName: Microsoft.Health.CultureSpecificStringDictionary
- uid: Microsoft.Health.ApplicationDirectoryItem.Screenshots*
  commentId: Overload:Microsoft.Health.ApplicationDirectoryItem.Screenshots
  isExternal: false
  name: Screenshots
  nameWithType: ApplicationDirectoryItem.Screenshots
  fullName: Microsoft.Health.ApplicationDirectoryItem.Screenshots
- uid: System.Collections.ObjectModel.Collection{Microsoft.Health.Screenshot}
  commentId: T:System.Collections.ObjectModel.Collection{Microsoft.Health.Screenshot}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<Screenshot>
  nameWithType: Collection<Screenshot>
  fullName: System.Collections.ObjectModel.Collection<Microsoft.Health.Screenshot>
  nameWithType.vb: Collection(Of Screenshot)
  fullName.vb: System.Collections.ObjectModel.Collection(Of Microsoft.Health.Screenshot)
  name.vb: Collection(Of Screenshot)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.Screenshot
    name: Screenshot
    nameWithType: Screenshot
    fullName: Microsoft.Health.Screenshot
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.Screenshot
    name: Screenshot
    nameWithType: Screenshot
    fullName: Microsoft.Health.Screenshot
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1
  commentId: T:System.Collections.ObjectModel.Collection`1
  isExternal: true
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  nameWithType.vb: Collection(Of T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T)
  name.vb: Collection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: Microsoft.Health.ApplicationDirectoryItem.IsPopular*
  commentId: Overload:Microsoft.Health.ApplicationDirectoryItem.IsPopular
  isExternal: false
  name: IsPopular
  nameWithType: ApplicationDirectoryItem.IsPopular
  fullName: Microsoft.Health.ApplicationDirectoryItem.IsPopular
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Health.ApplicationDirectoryItem.PopularityRank*
  commentId: Overload:Microsoft.Health.ApplicationDirectoryItem.PopularityRank
  isExternal: false
  name: PopularityRank
  nameWithType: ApplicationDirectoryItem.PopularityRank
  fullName: Microsoft.Health.ApplicationDirectoryItem.PopularityRank
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Health.ApplicationDirectoryItem.GetSchema*
  commentId: Overload:Microsoft.Health.ApplicationDirectoryItem.GetSchema
  isExternal: false
  name: GetSchema
  nameWithType: ApplicationDirectoryItem.GetSchema
  fullName: Microsoft.Health.ApplicationDirectoryItem.GetSchema
- uid: System.Xml.Serialization.IXmlSerializable.GetSchema
  commentId: M:System.Xml.Serialization.IXmlSerializable.GetSchema
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  name: GetSchema()
  nameWithType: IXmlSerializable.GetSchema()
  fullName: System.Xml.Serialization.IXmlSerializable.GetSchema()
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.GetSchema
    name: GetSchema
    nameWithType: IXmlSerializable.GetSchema
    fullName: System.Xml.Serialization.IXmlSerializable.GetSchema
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.GetSchema
    name: GetSchema
    nameWithType: IXmlSerializable.GetSchema
    fullName: System.Xml.Serialization.IXmlSerializable.GetSchema
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.Schema.XmlSchema
  commentId: T:System.Xml.Schema.XmlSchema
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema
- uid: System.Xml.Schema
  commentId: N:System.Xml.Schema
  isExternal: false
  name: System.Xml.Schema
  nameWithType: System.Xml.Schema
  fullName: System.Xml.Schema
- uid: Microsoft.Health.ApplicationDirectoryItem.ReadXml*
  commentId: Overload:Microsoft.Health.ApplicationDirectoryItem.ReadXml
  isExternal: false
  name: ReadXml
  nameWithType: ApplicationDirectoryItem.ReadXml
  fullName: Microsoft.Health.ApplicationDirectoryItem.ReadXml
- uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  commentId: M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  name: ReadXml(XmlReader)
  nameWithType: IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
    name: ReadXml
    nameWithType: IXmlSerializable.ReadXml
    fullName: System.Xml.Serialization.IXmlSerializable.ReadXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
    name: ReadXml
    nameWithType: IXmlSerializable.ReadXml
    fullName: System.Xml.Serialization.IXmlSerializable.ReadXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.Xml.XmlReader
  commentId: T:System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: Microsoft.Health.ApplicationDirectoryItem.WriteXml*
  commentId: Overload:Microsoft.Health.ApplicationDirectoryItem.WriteXml
  isExternal: false
  name: WriteXml
  nameWithType: ApplicationDirectoryItem.WriteXml
  fullName: Microsoft.Health.ApplicationDirectoryItem.WriteXml
- uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  commentId: M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  name: WriteXml(XmlWriter)
  nameWithType: IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: IXmlSerializable.WriteXml
    fullName: System.Xml.Serialization.IXmlSerializable.WriteXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: IXmlSerializable.WriteXml
    fullName: System.Xml.Serialization.IXmlSerializable.WriteXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
