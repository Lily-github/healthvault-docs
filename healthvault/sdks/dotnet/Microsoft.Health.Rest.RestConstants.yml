### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Rest.RestConstants
  commentId: T:Microsoft.Health.Rest.RestConstants
  id: RestConstants
  parent: Microsoft.Health.Rest
  children:
  - Microsoft.Health.Rest.RestConstants.AppToken
  - Microsoft.Health.Rest.RestConstants.AuthorizationHeaderName
  - Microsoft.Health.Rest.RestConstants.CorrelationIdHeaderName
  - Microsoft.Health.Rest.RestConstants.DefaultMshhvRoot
  - Microsoft.Health.Rest.RestConstants.HmacHeaderName
  - Microsoft.Health.Rest.RestConstants.JsonContentType
  - Microsoft.Health.Rest.RestConstants.OfflinePersonId
  - Microsoft.Health.Rest.RestConstants.RecordId
  - Microsoft.Health.Rest.RestConstants.Sha256HeaderName
  - Microsoft.Health.Rest.RestConstants.UserToken
  langs:
  - csharp
  - vb
  name: RestConstants
  nameWithType: RestConstants
  fullName: Microsoft.Health.Rest.RestConstants
  type: Class
  source:
    remote:
      path: Microsoft.Health/Rest/RestConstants.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: RestConstants
    path: ../Microsoft.Health/Rest/RestConstants.cs
    startLine: 10
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Rest
  summary: "\nConstants used for Rest calls to the REST Health Vault endpoint.\n"
  example: []
  syntax:
    content: public static class RestConstants
    content.vb: Public Module RestConstants
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Health.Rest.RestConstants.RecordId
  commentId: F:Microsoft.Health.Rest.RestConstants.RecordId
  id: RecordId
  parent: Microsoft.Health.Rest.RestConstants
  langs:
  - csharp
  - vb
  name: RecordId
  nameWithType: RestConstants.RecordId
  fullName: Microsoft.Health.Rest.RestConstants.RecordId
  type: Field
  source:
    remote:
      path: Microsoft.Health/Rest/RestConstants.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: RecordId
    path: ../Microsoft.Health/Rest/RestConstants.cs
    startLine: 29
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Rest
  summary: "\nRecord Id entry in the Authorization Header\n"
  example: []
  syntax:
    content: public const string RecordId = "record-id"
    content.vb: Public Const RecordId As String = "record-id"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.Rest.RestConstants.OfflinePersonId
  commentId: F:Microsoft.Health.Rest.RestConstants.OfflinePersonId
  id: OfflinePersonId
  parent: Microsoft.Health.Rest.RestConstants
  langs:
  - csharp
  - vb
  name: OfflinePersonId
  nameWithType: RestConstants.OfflinePersonId
  fullName: Microsoft.Health.Rest.RestConstants.OfflinePersonId
  type: Field
  source:
    remote:
      path: Microsoft.Health/Rest/RestConstants.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: OfflinePersonId
    path: ../Microsoft.Health/Rest/RestConstants.cs
    startLine: 34
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Rest
  summary: "\nOffline Person ID entry in the Authorization Header\n"
  example: []
  syntax:
    content: public const string OfflinePersonId = "offline-person-id"
    content.vb: Public Const OfflinePersonId As String = "offline-person-id"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.Rest.RestConstants.AppToken
  commentId: F:Microsoft.Health.Rest.RestConstants.AppToken
  id: AppToken
  parent: Microsoft.Health.Rest.RestConstants
  langs:
  - csharp
  - vb
  name: AppToken
  nameWithType: RestConstants.AppToken
  fullName: Microsoft.Health.Rest.RestConstants.AppToken
  type: Field
  source:
    remote:
      path: Microsoft.Health/Rest/RestConstants.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AppToken
    path: ../Microsoft.Health/Rest/RestConstants.cs
    startLine: 39
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Rest
  summary: "\nApp Token entry in the Authorization Header\n"
  example: []
  syntax:
    content: public const string AppToken = "app-token"
    content.vb: Public Const AppToken As String = "app-token"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.Rest.RestConstants.UserToken
  commentId: F:Microsoft.Health.Rest.RestConstants.UserToken
  id: UserToken
  parent: Microsoft.Health.Rest.RestConstants
  langs:
  - csharp
  - vb
  name: UserToken
  nameWithType: RestConstants.UserToken
  fullName: Microsoft.Health.Rest.RestConstants.UserToken
  type: Field
  source:
    remote:
      path: Microsoft.Health/Rest/RestConstants.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: UserToken
    path: ../Microsoft.Health/Rest/RestConstants.cs
    startLine: 44
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Rest
  summary: "\nUser Token entry in the Authorization Header\n"
  example: []
  syntax:
    content: public const string UserToken = "user-token"
    content.vb: Public Const UserToken As String = "user-token"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.Rest.RestConstants.HmacHeaderName
  commentId: F:Microsoft.Health.Rest.RestConstants.HmacHeaderName
  id: HmacHeaderName
  parent: Microsoft.Health.Rest.RestConstants
  langs:
  - csharp
  - vb
  name: HmacHeaderName
  nameWithType: RestConstants.HmacHeaderName
  fullName: Microsoft.Health.Rest.RestConstants.HmacHeaderName
  type: Field
  source:
    remote:
      path: Microsoft.Health/Rest/RestConstants.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: HmacHeaderName
    path: ../Microsoft.Health/Rest/RestConstants.cs
    startLine: 53
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Rest
  summary: "\nHmac Custom Header Name\n"
  example: []
  syntax:
    content: public const string HmacHeaderName = "x-msh-hmac"
    content.vb: Public Const HmacHeaderName As String = "x-msh-hmac"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.Rest.RestConstants.Sha256HeaderName
  commentId: F:Microsoft.Health.Rest.RestConstants.Sha256HeaderName
  id: Sha256HeaderName
  parent: Microsoft.Health.Rest.RestConstants
  langs:
  - csharp
  - vb
  name: Sha256HeaderName
  nameWithType: RestConstants.Sha256HeaderName
  fullName: Microsoft.Health.Rest.RestConstants.Sha256HeaderName
  type: Field
  source:
    remote:
      path: Microsoft.Health/Rest/RestConstants.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Sha256HeaderName
    path: ../Microsoft.Health/Rest/RestConstants.cs
    startLine: 58
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Rest
  summary: "\nSha256 Custom Header Name\n"
  example: []
  syntax:
    content: public const string Sha256HeaderName = "x-msh-sha256"
    content.vb: Public Const Sha256HeaderName As String = "x-msh-sha256"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.Rest.RestConstants.CorrelationIdHeaderName
  commentId: F:Microsoft.Health.Rest.RestConstants.CorrelationIdHeaderName
  id: CorrelationIdHeaderName
  parent: Microsoft.Health.Rest.RestConstants
  langs:
  - csharp
  - vb
  name: CorrelationIdHeaderName
  nameWithType: RestConstants.CorrelationIdHeaderName
  fullName: Microsoft.Health.Rest.RestConstants.CorrelationIdHeaderName
  type: Field
  source:
    remote:
      path: Microsoft.Health/Rest/RestConstants.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CorrelationIdHeaderName
    path: ../Microsoft.Health/Rest/RestConstants.cs
    startLine: 63
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Rest
  summary: "\nCorrelation Id Custom Header Name\n"
  example: []
  syntax:
    content: public const string CorrelationIdHeaderName = "x-msh-correlation-id"
    content.vb: Public Const CorrelationIdHeaderName As String = "x-msh-correlation-id"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.Rest.RestConstants.AuthorizationHeaderName
  commentId: F:Microsoft.Health.Rest.RestConstants.AuthorizationHeaderName
  id: AuthorizationHeaderName
  parent: Microsoft.Health.Rest.RestConstants
  langs:
  - csharp
  - vb
  name: AuthorizationHeaderName
  nameWithType: RestConstants.AuthorizationHeaderName
  fullName: Microsoft.Health.Rest.RestConstants.AuthorizationHeaderName
  type: Field
  source:
    remote:
      path: Microsoft.Health/Rest/RestConstants.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AuthorizationHeaderName
    path: ../Microsoft.Health/Rest/RestConstants.cs
    startLine: 68
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Rest
  summary: "\nstandard authorization header Name\n"
  example: []
  syntax:
    content: public const string AuthorizationHeaderName = "Authorization"
    content.vb: Public Const AuthorizationHeaderName As String = "Authorization"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.Rest.RestConstants.JsonContentType
  commentId: F:Microsoft.Health.Rest.RestConstants.JsonContentType
  id: JsonContentType
  parent: Microsoft.Health.Rest.RestConstants
  langs:
  - csharp
  - vb
  name: JsonContentType
  nameWithType: RestConstants.JsonContentType
  fullName: Microsoft.Health.Rest.RestConstants.JsonContentType
  type: Field
  source:
    remote:
      path: Microsoft.Health/Rest/RestConstants.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: JsonContentType
    path: ../Microsoft.Health/Rest/RestConstants.cs
    startLine: 74
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Rest
  summary: "\nContent Type for Json\n"
  example: []
  syntax:
    content: public const string JsonContentType = "application/json; charset=utf-8"
    content.vb: Public Const JsonContentType As String = "application/json; charset=utf-8"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.Rest.RestConstants.DefaultMshhvRoot
  commentId: F:Microsoft.Health.Rest.RestConstants.DefaultMshhvRoot
  id: DefaultMshhvRoot
  parent: Microsoft.Health.Rest.RestConstants
  langs:
  - csharp
  - vb
  name: DefaultMshhvRoot
  nameWithType: RestConstants.DefaultMshhvRoot
  fullName: Microsoft.Health.Rest.RestConstants.DefaultMshhvRoot
  type: Field
  source:
    remote:
      path: Microsoft.Health/Rest/RestConstants.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DefaultMshhvRoot
    path: ../Microsoft.Health/Rest/RestConstants.cs
    startLine: 79
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Rest
  summary: "\nMSHHV default root\n"
  example: []
  syntax:
    content: public const string DefaultMshhvRoot = "https://api.microsofthealth.net"
    content.vb: Public Const DefaultMshhvRoot As String = "https://api.microsofthealth.net"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Microsoft.Health.Rest
  commentId: N:Microsoft.Health.Rest
  isExternal: false
  name: Microsoft.Health.Rest
  nameWithType: Microsoft.Health.Rest
  fullName: Microsoft.Health.Rest
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
