### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.MailRecipient
  commentId: T:Microsoft.Health.MailRecipient
  id: MailRecipient
  parent: Microsoft.Health
  children:
  - Microsoft.Health.MailRecipient.#ctor(System.String,System.String)
  - Microsoft.Health.MailRecipient.DisplayName
  - Microsoft.Health.MailRecipient.EmailAddress
  - Microsoft.Health.MailRecipient.ToString
  - Microsoft.Health.MailRecipient.WriteXml(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: MailRecipient
  nameWithType: MailRecipient
  fullName: Microsoft.Health.MailRecipient
  type: Class
  source:
    remote:
      path: Microsoft.Health/MailRecipient.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: MailRecipient
    path: MailRecipient.cs
    startLine: 23
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nRepresents an email address that can be used when calling\nSendInsecureMessageFromApplication.\n"
  remarks: "\nThe <xref href=\"Microsoft.Health.MailRecipient\" data-throw-if-not-resolved=\"false\"></xref> class contains the email address and \nthe display name of the person to whom the mail is being sent. It \nprovides the methods to get the XML representation that adheres to the \nschema for the SendInsecureMessageFromApplication method.\n"
  example: []
  syntax:
    content: public class MailRecipient
    content.vb: Public Class MailRecipient
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.MailRecipient.#ctor(System.String,System.String)
  commentId: M:Microsoft.Health.MailRecipient.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Microsoft.Health.MailRecipient
  langs:
  - csharp
  - vb
  name: MailRecipient(String, String)
  nameWithType: MailRecipient.MailRecipient(String, String)
  fullName: Microsoft.Health.MailRecipient.MailRecipient(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/MailRecipient.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: MailRecipient.cs
    startLine: 46
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.MailRecipient\" data-throw-if-not-resolved=\"false\"></xref> class \nwith the specified email address and display name.\n"
  remarks: "\n"
  example: []
  syntax:
    content: public MailRecipient(string emailAddress, string displayName)
    content.vb: Public Sub New(emailAddress As String, displayName As String)
    parameters:
    - id: emailAddress
      type: System.String
      description: "\nThe email address of the person who is to receive the email.\n"
    - id: displayName
      type: System.String
      description: "\nThe display name of the person who is to receive the email.\n"
  overload: Microsoft.Health.MailRecipient.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">emailAddress</span> or \n<span class=\"paramref\">displayName</span> parameter is <strong>null</strong> or empty.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.MailRecipient.EmailAddress
  commentId: P:Microsoft.Health.MailRecipient.EmailAddress
  id: EmailAddress
  parent: Microsoft.Health.MailRecipient
  langs:
  - csharp
  - vb
  name: EmailAddress
  nameWithType: MailRecipient.EmailAddress
  fullName: Microsoft.Health.MailRecipient.EmailAddress
  type: Property
  source:
    remote:
      path: Microsoft.Health/MailRecipient.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: EmailAddress
    path: MailRecipient.cs
    startLine: 69
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the email address of the person who receives the email.\n"
  example: []
  syntax:
    content: public string EmailAddress { get; set; }
    content.vb: Public Property EmailAddress As String
    parameters: []
    return:
      type: System.String
      description: "\nA string representing the email address who receives the email.\n"
  overload: Microsoft.Health.MailRecipient.EmailAddress*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe value is <strong>null</strong> or empty.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.MailRecipient.DisplayName
  commentId: P:Microsoft.Health.MailRecipient.DisplayName
  id: DisplayName
  parent: Microsoft.Health.MailRecipient
  langs:
  - csharp
  - vb
  name: DisplayName
  nameWithType: MailRecipient.DisplayName
  fullName: Microsoft.Health.MailRecipient.DisplayName
  type: Property
  source:
    remote:
      path: Microsoft.Health/MailRecipient.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DisplayName
    path: MailRecipient.cs
    startLine: 94
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the display name of the person to which the email \nwill be sent.\n"
  example: []
  syntax:
    content: public string DisplayName { get; set; }
    content.vb: Public Property DisplayName As String
    parameters: []
    return:
      type: System.String
      description: "\nThe display name of the person to which the message will be sent.\nThis gets displayed in the To field of the message.\n"
  overload: Microsoft.Health.MailRecipient.DisplayName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe value is <strong>null</strong> or empty.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.MailRecipient.WriteXml(System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.MailRecipient.WriteXml(System.Xml.XmlWriter)
  id: WriteXml(System.Xml.XmlWriter)
  parent: Microsoft.Health.MailRecipient
  langs:
  - csharp
  - vb
  name: WriteXml(XmlWriter)
  nameWithType: MailRecipient.WriteXml(XmlWriter)
  fullName: Microsoft.Health.MailRecipient.WriteXml(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health/MailRecipient.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteXml
    path: MailRecipient.cs
    startLine: 124
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nWrites the XML representation of the email recipient into the\nspecified XML writer.\n"
  remarks: "\nThe XML written by this method adheres to the schema for the\nSendInsecureMessageFromApplication method.\n"
  example: []
  syntax:
    content: public void WriteXml(XmlWriter writer)
    content.vb: Public Sub WriteXml(writer As XmlWriter)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "\nThe XML writer that receives the XML representation of the email\nrecipient.\n"
  overload: Microsoft.Health.MailRecipient.WriteXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">writer</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.MailRecipient.ToString
  commentId: M:Microsoft.Health.MailRecipient.ToString
  id: ToString
  parent: Microsoft.Health.MailRecipient
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: MailRecipient.ToString()
  fullName: Microsoft.Health.MailRecipient.ToString()
  type: Method
  source:
    remote:
      path: Microsoft.Health/MailRecipient.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ToString
    path: MailRecipient.cs
    startLine: 154
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets the XML representation of the email recipient as a string.\n"
  remarks: "\nThe XML written by this method adheres to the schema for the\nSendInsecureMessageFromApplication method.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\nA string containing the XML representation of the email recipient.\n"
  overridden: System.Object.ToString
  overload: Microsoft.Health.MailRecipient.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Health.MailRecipient
  commentId: T:Microsoft.Health.MailRecipient
  isExternal: false
  name: MailRecipient
  nameWithType: MailRecipient
  fullName: Microsoft.Health.MailRecipient
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.MailRecipient.#ctor*
  commentId: Overload:Microsoft.Health.MailRecipient.#ctor
  isExternal: false
  name: MailRecipient
  nameWithType: MailRecipient.MailRecipient
  fullName: Microsoft.Health.MailRecipient.MailRecipient
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.MailRecipient.EmailAddress*
  commentId: Overload:Microsoft.Health.MailRecipient.EmailAddress
  isExternal: false
  name: EmailAddress
  nameWithType: MailRecipient.EmailAddress
  fullName: Microsoft.Health.MailRecipient.EmailAddress
- uid: Microsoft.Health.MailRecipient.DisplayName*
  commentId: Overload:Microsoft.Health.MailRecipient.DisplayName
  isExternal: false
  name: DisplayName
  nameWithType: MailRecipient.DisplayName
  fullName: Microsoft.Health.MailRecipient.DisplayName
- uid: Microsoft.Health.MailRecipient.WriteXml*
  commentId: Overload:Microsoft.Health.MailRecipient.WriteXml
  isExternal: false
  name: WriteXml
  nameWithType: MailRecipient.WriteXml
  fullName: Microsoft.Health.MailRecipient.WriteXml
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.MailRecipient.ToString*
  commentId: Overload:Microsoft.Health.MailRecipient.ToString
  isExternal: false
  name: ToString
  nameWithType: MailRecipient.ToString
  fullName: Microsoft.Health.MailRecipient.ToString
