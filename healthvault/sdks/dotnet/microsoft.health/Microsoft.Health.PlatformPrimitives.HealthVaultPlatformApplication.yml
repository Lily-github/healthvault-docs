### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication
  commentId: T:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication
  id: HealthVaultPlatformApplication
  parent: Microsoft.Health.PlatformPrimitives
  children:
  - Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.DisableMock
  - Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.EnableMock(Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication)
  - Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.GetApplicationInfo(Microsoft.Health.HealthServiceConnection,System.Boolean)
  - Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.GetAuthorizedPeople(Microsoft.Health.ApplicationConnection,Microsoft.Health.GetAuthorizedPeopleSettings)
  - Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.GetUpdatedRecordInfoForApplication(Microsoft.Health.HealthServiceConnection,System.Nullable{System.DateTime})
  - Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.GetUpdatedRecordsForApplication(Microsoft.Health.HealthServiceConnection,System.Nullable{System.DateTime})
  - Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.NewSignupCode(Microsoft.Health.HealthServiceConnection)
  langs:
  - csharp
  - vb
  name: HealthVaultPlatformApplication
  nameWithType: HealthVaultPlatformApplication
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication
  type: Class
  source:
    remote:
      path: Microsoft.Health/HealthVaultPlatformApplication.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: HealthVaultPlatformApplication
    path: HealthVaultPlatformApplication.cs
    startLine: 23
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.PlatformPrimitives
  summary: "\nProvides low-level access to the HealthVault message operations.\n"
  remarks: "\n<xref href=\"Microsoft.Health.HealthVaultPlatform\" data-throw-if-not-resolved=\"false\"></xref> uses this class to perform operations. Set \nHealthVaultPlatformApplication.Current to a derived class to intercept all message calls.\n"
  example: []
  syntax:
    content: public class HealthVaultPlatformApplication
    content.vb: Public Class HealthVaultPlatformApplication
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.EnableMock(Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication)
  commentId: M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.EnableMock(Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication)
  id: EnableMock(Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication)
  parent: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication
  langs:
  - csharp
  - vb
  name: EnableMock(HealthVaultPlatformApplication)
  nameWithType: HealthVaultPlatformApplication.EnableMock(HealthVaultPlatformApplication)
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.EnableMock(Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication)
  type: Method
  source:
    remote:
      path: Microsoft.Health/HealthVaultPlatformApplication.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: EnableMock
    path: HealthVaultPlatformApplication.cs
    startLine: 40
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.PlatformPrimitives
  summary: "\nEnables mocking of calls to this class.\n"
  remarks: "\nThe calling class should pass in a class that derives from this\nclass and overrides the calls to be mocked. \n"
  example: []
  syntax:
    content: public static void EnableMock(HealthVaultPlatformApplication mock)
    content.vb: Public Shared Sub EnableMock(mock As HealthVaultPlatformApplication)
    parameters:
    - id: mock
      type: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication
      description: The mocking class.
  overload: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.EnableMock*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nThere is already a mock registered for this class.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.DisableMock
  commentId: M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.DisableMock
  id: DisableMock
  parent: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication
  langs:
  - csharp
  - vb
  name: DisableMock()
  nameWithType: HealthVaultPlatformApplication.DisableMock()
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.DisableMock()
  type: Method
  source:
    remote:
      path: Microsoft.Health/HealthVaultPlatformApplication.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DisableMock
    path: HealthVaultPlatformApplication.cs
    startLine: 56
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.PlatformPrimitives
  summary: "\nRemoves mocking of calls to this class.\n"
  example: []
  syntax:
    content: public static void DisableMock()
    content.vb: Public Shared Sub DisableMock
  overload: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.DisableMock*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nThere is no mock registered for this class.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.GetAuthorizedPeople(Microsoft.Health.ApplicationConnection,Microsoft.Health.GetAuthorizedPeopleSettings)
  commentId: M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.GetAuthorizedPeople(Microsoft.Health.ApplicationConnection,Microsoft.Health.GetAuthorizedPeopleSettings)
  id: GetAuthorizedPeople(Microsoft.Health.ApplicationConnection,Microsoft.Health.GetAuthorizedPeopleSettings)
  parent: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication
  langs:
  - csharp
  - vb
  name: GetAuthorizedPeople(ApplicationConnection, GetAuthorizedPeopleSettings)
  nameWithType: HealthVaultPlatformApplication.GetAuthorizedPeople(ApplicationConnection, GetAuthorizedPeopleSettings)
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.GetAuthorizedPeople(Microsoft.Health.ApplicationConnection, Microsoft.Health.GetAuthorizedPeopleSettings)
  type: Method
  source:
    remote:
      path: Microsoft.Health/HealthVaultPlatformApplication.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetAuthorizedPeople
    path: HealthVaultPlatformApplication.cs
    startLine: 105
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.PlatformPrimitives
  summary: "\nGets information about people authorized for an application.\n"
  remarks: "\nThe returned IEnumerable iterator will access the HealthVault service \nacross the network. See <xref href=\"Microsoft.Health.GetAuthorizedPeopleSettings\" data-throw-if-not-resolved=\"false\"></xref> for applicable \nsettings.\n"
  example: []
  syntax:
    content: public virtual IEnumerable<PersonInfo> GetAuthorizedPeople(ApplicationConnection connection, GetAuthorizedPeopleSettings settings)
    content.vb: Public Overridable Function GetAuthorizedPeople(connection As ApplicationConnection, settings As GetAuthorizedPeopleSettings) As IEnumerable(Of PersonInfo)
    parameters:
    - id: connection
      type: Microsoft.Health.ApplicationConnection
      description: "The connection to use to perform the operation. This connection\nmust be application-level. "
    - id: settings
      type: Microsoft.Health.GetAuthorizedPeopleSettings
      description: "\nThe <xref href=\"Microsoft.Health.GetAuthorizedPeopleSettings\" data-throw-if-not-resolved=\"false\"></xref> object used to configure the \nIEnumerable iterator returned by this method.\n"
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.Health.PersonInfo}
      description: "\nAn IEnumerable iterator of <xref href=\"Microsoft.Health.PersonInfo\" data-throw-if-not-resolved=\"false\"></xref> objects representing \npeople authorized for the application.\n"
  overload: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.GetAuthorizedPeople*
  exceptions:
  - type: Microsoft.Health.HealthServiceException
    commentId: T:Microsoft.Health.HealthServiceException
    description: "\nThe HealthVault service returned an error. The retrieval can be retried from the \ncurrent position by calling this method again and using the last successfully \nretrieved person Id for <xref href=\"Microsoft.Health.GetAuthorizedPeopleSettings.StartingPersonId\" data-throw-if-not-resolved=\"false\"></xref>.        \n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<span class=\"paramref\">settings</span> is null.\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.GetApplicationInfo(Microsoft.Health.HealthServiceConnection,System.Boolean)
  commentId: M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.GetApplicationInfo(Microsoft.Health.HealthServiceConnection,System.Boolean)
  id: GetApplicationInfo(Microsoft.Health.HealthServiceConnection,System.Boolean)
  parent: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication
  langs:
  - csharp
  - vb
  name: GetApplicationInfo(HealthServiceConnection, Boolean)
  nameWithType: HealthVaultPlatformApplication.GetApplicationInfo(HealthServiceConnection, Boolean)
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.GetApplicationInfo(Microsoft.Health.HealthServiceConnection, System.Boolean)
  type: Method
  source:
    remote:
      path: Microsoft.Health/HealthVaultPlatformApplication.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetApplicationInfo
    path: HealthVaultPlatformApplication.cs
    startLine: 252
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.PlatformPrimitives
  summary: "\nGets the application configuration information for the calling application.\n"
  remarks: "\nThis method always calls the HealthVault service to get the latest \ninformation. It returns installation configuration about the calling \napplication.\n"
  example: []
  syntax:
    content: public virtual ApplicationInfo GetApplicationInfo(HealthServiceConnection connection, bool allLanguages)
    content.vb: Public Overridable Function GetApplicationInfo(connection As HealthServiceConnection, allLanguages As Boolean) As ApplicationInfo
    parameters:
    - id: connection
      type: Microsoft.Health.HealthServiceConnection
      description: "The connection to use to perform the operation. This connection\nmust be application level. "
    - id: allLanguages
      type: System.Boolean
      description: "\nA boolean value indicating whether the localized values all languages should be \nreturned, just one language. This affects all properties which can have multiple \nlocalized values, including <xref href=\"Microsoft.Health.ApplicationInfo.CultureSpecificNames\" data-throw-if-not-resolved=\"false\"></xref>, \n<xref href=\"Microsoft.Health.ApplicationInfo.CultureSpecificDescriptions\" data-throw-if-not-resolved=\"false\"></xref>,\n<xref href=\"Microsoft.Health.ApplicationInfo.CultureSpecificAuthorizationReasons\" data-throw-if-not-resolved=\"false\"></xref>, \n<xref href=\"Microsoft.Health.ApplicationInfo.LargeLogo\" data-throw-if-not-resolved=\"false\"></xref>,\n<xref href=\"Microsoft.Health.ApplicationInfo.SmallLogo\" data-throw-if-not-resolved=\"false\"></xref>,\n<xref href=\"Microsoft.Health.ApplicationInfo.PrivacyStatement\" data-throw-if-not-resolved=\"false\"></xref>,\n<xref href=\"Microsoft.Health.ApplicationInfo.TermsOfUse\" data-throw-if-not-resolved=\"false\"></xref>,\nand <xref href=\"Microsoft.Health.ApplicationInfo.DtcSuccessMessage\" data-throw-if-not-resolved=\"false\"></xref>\n"
    return:
      type: Microsoft.Health.ApplicationInfo
      description: "\nAn ApplicationInfo object for the calling application.\n"
  overload: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.GetApplicationInfo*
  exceptions:
  - type: Microsoft.Health.HealthServiceException
    commentId: T:Microsoft.Health.HealthServiceException
    description: "\nThe HealthVault service returned an error.\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.GetUpdatedRecordsForApplication(Microsoft.Health.HealthServiceConnection,System.Nullable{System.DateTime})
  commentId: M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.GetUpdatedRecordsForApplication(Microsoft.Health.HealthServiceConnection,System.Nullable{System.DateTime})
  id: GetUpdatedRecordsForApplication(Microsoft.Health.HealthServiceConnection,System.Nullable{System.DateTime})
  parent: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication
  langs:
  - csharp
  - vb
  name: GetUpdatedRecordsForApplication(HealthServiceConnection, Nullable<DateTime>)
  nameWithType: HealthVaultPlatformApplication.GetUpdatedRecordsForApplication(HealthServiceConnection, Nullable<DateTime>)
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.GetUpdatedRecordsForApplication(Microsoft.Health.HealthServiceConnection, System.Nullable<System.DateTime>)
  type: Method
  source:
    remote:
      path: Microsoft.Health/HealthVaultPlatformApplication.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetUpdatedRecordsForApplication
    path: HealthVaultPlatformApplication.cs
    startLine: 305
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.PlatformPrimitives
  summary: "\nGets a list of health record IDs for the current application, \nthat optionally have been updated since a specified date.\n"
  example: []
  syntax:
    content: public virtual IList<Guid> GetUpdatedRecordsForApplication(HealthServiceConnection connection, DateTime? updatedDate)
    content.vb: Public Overridable Function GetUpdatedRecordsForApplication(connection As HealthServiceConnection, updatedDate As Date?) As IList(Of Guid)
    parameters:
    - id: connection
      type: Microsoft.Health.HealthServiceConnection
      description: "The connection to use to perform the operation. This connection\nmust be application level. "
    - id: updatedDate
      type: System.Nullable{System.DateTime}
      description: "\nDate that is used to filter health record IDs according to whether or not they have\nbeen updated since the specified date.\n"
    return:
      type: System.Collections.Generic.IList{System.Guid}
      description: "\nList of health record IDs filtered by any specified input parameters.\n"
  overload: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.GetUpdatedRecordsForApplication*
  nameWithType.vb: HealthVaultPlatformApplication.GetUpdatedRecordsForApplication(HealthServiceConnection, Nullable(Of DateTime))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.GetUpdatedRecordsForApplication(Microsoft.Health.HealthServiceConnection, System.Nullable(Of System.DateTime))
  name.vb: GetUpdatedRecordsForApplication(HealthServiceConnection, Nullable(Of DateTime))
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.GetUpdatedRecordInfoForApplication(Microsoft.Health.HealthServiceConnection,System.Nullable{System.DateTime})
  commentId: M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.GetUpdatedRecordInfoForApplication(Microsoft.Health.HealthServiceConnection,System.Nullable{System.DateTime})
  id: GetUpdatedRecordInfoForApplication(Microsoft.Health.HealthServiceConnection,System.Nullable{System.DateTime})
  parent: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication
  langs:
  - csharp
  - vb
  name: GetUpdatedRecordInfoForApplication(HealthServiceConnection, Nullable<DateTime>)
  nameWithType: HealthVaultPlatformApplication.GetUpdatedRecordInfoForApplication(HealthServiceConnection, Nullable<DateTime>)
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.GetUpdatedRecordInfoForApplication(Microsoft.Health.HealthServiceConnection, System.Nullable<System.DateTime>)
  type: Method
  source:
    remote:
      path: Microsoft.Health/HealthVaultPlatformApplication.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetUpdatedRecordInfoForApplication
    path: HealthVaultPlatformApplication.cs
    startLine: 334
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.PlatformPrimitives
  summary: "\nGets a list of <xref href=\"Microsoft.Health.HealthRecordUpdateInfo\" data-throw-if-not-resolved=\"false\"></xref> objects for the current application, \nthat optionally have been updated since a specified date.\n"
  example: []
  syntax:
    content: public virtual IList<HealthRecordUpdateInfo> GetUpdatedRecordInfoForApplication(HealthServiceConnection connection, DateTime? updatedDate)
    content.vb: Public Overridable Function GetUpdatedRecordInfoForApplication(connection As HealthServiceConnection, updatedDate As Date?) As IList(Of HealthRecordUpdateInfo)
    parameters:
    - id: connection
      type: Microsoft.Health.HealthServiceConnection
      description: "The connection to use to perform the operation. This connection\nmust be application level. "
    - id: updatedDate
      type: System.Nullable{System.DateTime}
      description: "\nDate that is used to filter health record IDs according to whether or not they have\nbeen updated since the specified date.\n"
    return:
      type: System.Collections.Generic.IList{Microsoft.Health.HealthRecordUpdateInfo}
      description: "\nList of <xref href=\"Microsoft.Health.HealthRecordUpdateInfo\" data-throw-if-not-resolved=\"false\"></xref> objects filtered by any specified input parameters.\n"
  overload: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.GetUpdatedRecordInfoForApplication*
  nameWithType.vb: HealthVaultPlatformApplication.GetUpdatedRecordInfoForApplication(HealthServiceConnection, Nullable(Of DateTime))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.GetUpdatedRecordInfoForApplication(Microsoft.Health.HealthServiceConnection, System.Nullable(Of System.DateTime))
  name.vb: GetUpdatedRecordInfoForApplication(HealthServiceConnection, Nullable(Of DateTime))
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.NewSignupCode(Microsoft.Health.HealthServiceConnection)
  commentId: M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.NewSignupCode(Microsoft.Health.HealthServiceConnection)
  id: NewSignupCode(Microsoft.Health.HealthServiceConnection)
  parent: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication
  langs:
  - csharp
  - vb
  name: NewSignupCode(HealthServiceConnection)
  nameWithType: HealthVaultPlatformApplication.NewSignupCode(HealthServiceConnection)
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.NewSignupCode(Microsoft.Health.HealthServiceConnection)
  type: Method
  source:
    remote:
      path: Microsoft.Health/HealthVaultPlatformApplication.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: NewSignupCode
    path: HealthVaultPlatformApplication.cs
    startLine: 424
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.PlatformPrimitives
  summary: "\nGenerates a new signup code that should be passed to HealthVault Shell in order\nto create a new user account.\n"
  example: []
  syntax:
    content: public virtual string NewSignupCode(HealthServiceConnection connection)
    content.vb: Public Overridable Function NewSignupCode(connection As HealthServiceConnection) As String
    parameters:
    - id: connection
      type: Microsoft.Health.HealthServiceConnection
      description: "The connection to use to perform the operation. This connection\nmust be application level. "
    return:
      type: System.String
      description: "\nA signup code that can be used to create an account.\n"
  overload: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.NewSignupCode*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Health.HealthVaultPlatform
  commentId: T:Microsoft.Health.HealthVaultPlatform
  isExternal: false
  name: HealthVaultPlatform
  nameWithType: HealthVaultPlatform
  fullName: Microsoft.Health.HealthVaultPlatform
- uid: Microsoft.Health.PlatformPrimitives
  commentId: N:Microsoft.Health.PlatformPrimitives
  isExternal: false
  name: Microsoft.Health.PlatformPrimitives
  nameWithType: Microsoft.Health.PlatformPrimitives
  fullName: Microsoft.Health.PlatformPrimitives
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.EnableMock*
  commentId: Overload:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.EnableMock
  isExternal: false
  name: EnableMock
  nameWithType: HealthVaultPlatformApplication.EnableMock
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.EnableMock
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication
  commentId: T:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication
  parent: Microsoft.Health.PlatformPrimitives
  isExternal: false
  name: HealthVaultPlatformApplication
  nameWithType: HealthVaultPlatformApplication
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.DisableMock*
  commentId: Overload:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.DisableMock
  isExternal: false
  name: DisableMock
  nameWithType: HealthVaultPlatformApplication.DisableMock
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.DisableMock
- uid: Microsoft.Health.GetAuthorizedPeopleSettings
  commentId: T:Microsoft.Health.GetAuthorizedPeopleSettings
  parent: Microsoft.Health
  isExternal: false
  name: GetAuthorizedPeopleSettings
  nameWithType: GetAuthorizedPeopleSettings
  fullName: Microsoft.Health.GetAuthorizedPeopleSettings
- uid: Microsoft.Health.PersonInfo
  commentId: T:Microsoft.Health.PersonInfo
  parent: Microsoft.Health
  isExternal: false
  name: PersonInfo
  nameWithType: PersonInfo
  fullName: Microsoft.Health.PersonInfo
- uid: Microsoft.Health.GetAuthorizedPeopleSettings.StartingPersonId
  commentId: P:Microsoft.Health.GetAuthorizedPeopleSettings.StartingPersonId
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.GetAuthorizedPeople*
  commentId: Overload:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.GetAuthorizedPeople
  isExternal: false
  name: GetAuthorizedPeople
  nameWithType: HealthVaultPlatformApplication.GetAuthorizedPeople
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.GetAuthorizedPeople
- uid: Microsoft.Health.HealthServiceException
  commentId: T:Microsoft.Health.HealthServiceException
  parent: Microsoft.Health
  isExternal: false
  name: HealthServiceException
  nameWithType: HealthServiceException
  fullName: Microsoft.Health.HealthServiceException
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: Microsoft.Health.ApplicationConnection
  commentId: T:Microsoft.Health.ApplicationConnection
  parent: Microsoft.Health
  isExternal: false
  name: ApplicationConnection
  nameWithType: ApplicationConnection
  fullName: Microsoft.Health.ApplicationConnection
- uid: System.Collections.Generic.IEnumerable{Microsoft.Health.PersonInfo}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.Health.PersonInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<PersonInfo>
  nameWithType: IEnumerable<PersonInfo>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Health.PersonInfo>
  nameWithType.vb: IEnumerable(Of PersonInfo)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Health.PersonInfo)
  name.vb: IEnumerable(Of PersonInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.PersonInfo
    name: PersonInfo
    nameWithType: PersonInfo
    fullName: Microsoft.Health.PersonInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.PersonInfo
    name: PersonInfo
    nameWithType: PersonInfo
    fullName: Microsoft.Health.PersonInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Health.ApplicationInfo.CultureSpecificNames
  commentId: P:Microsoft.Health.ApplicationInfo.CultureSpecificNames
- uid: Microsoft.Health.ApplicationInfo.CultureSpecificDescriptions
  commentId: P:Microsoft.Health.ApplicationInfo.CultureSpecificDescriptions
- uid: Microsoft.Health.ApplicationInfo.CultureSpecificAuthorizationReasons
  commentId: P:Microsoft.Health.ApplicationInfo.CultureSpecificAuthorizationReasons
- uid: Microsoft.Health.ApplicationInfo.LargeLogo
  commentId: P:Microsoft.Health.ApplicationInfo.LargeLogo
- uid: Microsoft.Health.ApplicationInfo.SmallLogo
  commentId: P:Microsoft.Health.ApplicationInfo.SmallLogo
- uid: Microsoft.Health.ApplicationInfo.PrivacyStatement
  commentId: P:Microsoft.Health.ApplicationInfo.PrivacyStatement
- uid: Microsoft.Health.ApplicationInfo.TermsOfUse
  commentId: P:Microsoft.Health.ApplicationInfo.TermsOfUse
- uid: Microsoft.Health.ApplicationInfo.DtcSuccessMessage
  commentId: P:Microsoft.Health.ApplicationInfo.DtcSuccessMessage
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.GetApplicationInfo*
  commentId: Overload:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.GetApplicationInfo
  isExternal: false
  name: GetApplicationInfo
  nameWithType: HealthVaultPlatformApplication.GetApplicationInfo
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.GetApplicationInfo
- uid: Microsoft.Health.HealthServiceConnection
  commentId: T:Microsoft.Health.HealthServiceConnection
  parent: Microsoft.Health
  isExternal: false
  name: HealthServiceConnection
  nameWithType: HealthServiceConnection
  fullName: Microsoft.Health.HealthServiceConnection
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Health.ApplicationInfo
  commentId: T:Microsoft.Health.ApplicationInfo
  parent: Microsoft.Health
  isExternal: false
  name: ApplicationInfo
  nameWithType: ApplicationInfo
  fullName: Microsoft.Health.ApplicationInfo
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.GetUpdatedRecordsForApplication*
  commentId: Overload:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.GetUpdatedRecordsForApplication
  isExternal: false
  name: GetUpdatedRecordsForApplication
  nameWithType: HealthVaultPlatformApplication.GetUpdatedRecordsForApplication
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.GetUpdatedRecordsForApplication
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{System.Guid}
  commentId: T:System.Collections.Generic.IList{System.Guid}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Guid>
  nameWithType: IList<Guid>
  fullName: System.Collections.Generic.IList<System.Guid>
  nameWithType.vb: IList(Of Guid)
  fullName.vb: System.Collections.Generic.IList(Of System.Guid)
  name.vb: IList(Of Guid)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordUpdateInfo
  commentId: T:Microsoft.Health.HealthRecordUpdateInfo
  isExternal: false
  name: HealthRecordUpdateInfo
  nameWithType: HealthRecordUpdateInfo
  fullName: Microsoft.Health.HealthRecordUpdateInfo
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.GetUpdatedRecordInfoForApplication*
  commentId: Overload:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.GetUpdatedRecordInfoForApplication
  isExternal: false
  name: GetUpdatedRecordInfoForApplication
  nameWithType: HealthVaultPlatformApplication.GetUpdatedRecordInfoForApplication
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.GetUpdatedRecordInfoForApplication
- uid: System.Collections.Generic.IList{Microsoft.Health.HealthRecordUpdateInfo}
  commentId: T:System.Collections.Generic.IList{Microsoft.Health.HealthRecordUpdateInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<HealthRecordUpdateInfo>
  nameWithType: IList<HealthRecordUpdateInfo>
  fullName: System.Collections.Generic.IList<Microsoft.Health.HealthRecordUpdateInfo>
  nameWithType.vb: IList(Of HealthRecordUpdateInfo)
  fullName.vb: System.Collections.Generic.IList(Of Microsoft.Health.HealthRecordUpdateInfo)
  name.vb: IList(Of HealthRecordUpdateInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.HealthRecordUpdateInfo
    name: HealthRecordUpdateInfo
    nameWithType: HealthRecordUpdateInfo
    fullName: Microsoft.Health.HealthRecordUpdateInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.HealthRecordUpdateInfo
    name: HealthRecordUpdateInfo
    nameWithType: HealthRecordUpdateInfo
    fullName: Microsoft.Health.HealthRecordUpdateInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.NewSignupCode*
  commentId: Overload:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.NewSignupCode
  isExternal: false
  name: NewSignupCode
  nameWithType: HealthVaultPlatformApplication.NewSignupCode
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformApplication.NewSignupCode
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
