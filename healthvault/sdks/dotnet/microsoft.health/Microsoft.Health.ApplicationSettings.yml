### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.ApplicationSettings
  commentId: T:Microsoft.Health.ApplicationSettings
  id: ApplicationSettings
  parent: Microsoft.Health
  children:
  - Microsoft.Health.ApplicationSettings.#ctor
  - Microsoft.Health.ApplicationSettings.SelectedRecordId
  - Microsoft.Health.ApplicationSettings.XmlSettings
  langs:
  - csharp
  - vb
  name: ApplicationSettings
  nameWithType: ApplicationSettings
  fullName: Microsoft.Health.ApplicationSettings
  type: Class
  source:
    remote:
      path: Microsoft.Health/ApplicationSettings.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ApplicationSettings
    path: ApplicationSettings.cs
    startLine: 23
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nApplication specific settings for the user.\n"
  remarks: "\nHealthVault can maintain settings for a specific user and application on behalf of the \napplication. You may think of this like the HKEY_CURRENT_USER part of the Windows Registry\nfor HealthVault.\n"
  example: []
  syntax:
    content: public class ApplicationSettings
    content.vb: Public Class ApplicationSettings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.ApplicationSettings.#ctor
  commentId: M:Microsoft.Health.ApplicationSettings.#ctor
  id: '#ctor'
  parent: Microsoft.Health.ApplicationSettings
  langs:
  - csharp
  - vb
  name: ApplicationSettings()
  nameWithType: ApplicationSettings.ApplicationSettings()
  fullName: Microsoft.Health.ApplicationSettings.ApplicationSettings()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/ApplicationSettings.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ApplicationSettings.cs
    startLine: 29
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nConstructs an ApplicationSettings instance with default values.\n"
  example: []
  syntax:
    content: public ApplicationSettings()
    content.vb: Public Sub New
  overload: Microsoft.Health.ApplicationSettings.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ApplicationSettings.XmlSettings
  commentId: P:Microsoft.Health.ApplicationSettings.XmlSettings
  id: XmlSettings
  parent: Microsoft.Health.ApplicationSettings
  langs:
  - csharp
  - vb
  name: XmlSettings
  nameWithType: ApplicationSettings.XmlSettings
  fullName: Microsoft.Health.ApplicationSettings.XmlSettings
  type: Property
  source:
    remote:
      path: Microsoft.Health/ApplicationSettings.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: XmlSettings
    path: ApplicationSettings.cs
    startLine: 57
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the application specific XML settings that the application has set for the user.\n"
  example: []
  syntax:
    content: public IXPathNavigable XmlSettings { get; set; }
    content.vb: Public Property XmlSettings As IXPathNavigable
    parameters: []
    return:
      type: System.Xml.XPath.IXPathNavigable
  overload: Microsoft.Health.ApplicationSettings.XmlSettings*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ApplicationSettings.SelectedRecordId
  commentId: P:Microsoft.Health.ApplicationSettings.SelectedRecordId
  id: SelectedRecordId
  parent: Microsoft.Health.ApplicationSettings
  langs:
  - csharp
  - vb
  name: SelectedRecordId
  nameWithType: ApplicationSettings.SelectedRecordId
  fullName: Microsoft.Health.ApplicationSettings.SelectedRecordId
  type: Property
  source:
    remote:
      path: Microsoft.Health/ApplicationSettings.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SelectedRecordId
    path: ApplicationSettings.cs
    startLine: 69
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the selected health record identifier that the user has chosen to use with this\napplication.\n"
  example: []
  syntax:
    content: public Guid SelectedRecordId { get; set; }
    content.vb: Public Property SelectedRecordId As Guid
    parameters: []
    return:
      type: System.Guid
  overload: Microsoft.Health.ApplicationSettings.SelectedRecordId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.ApplicationSettings.#ctor*
  commentId: Overload:Microsoft.Health.ApplicationSettings.#ctor
  isExternal: false
  name: ApplicationSettings
  nameWithType: ApplicationSettings.ApplicationSettings
  fullName: Microsoft.Health.ApplicationSettings.ApplicationSettings
- uid: Microsoft.Health.ApplicationSettings.XmlSettings*
  commentId: Overload:Microsoft.Health.ApplicationSettings.XmlSettings
  isExternal: false
  name: XmlSettings
  nameWithType: ApplicationSettings.XmlSettings
  fullName: Microsoft.Health.ApplicationSettings.XmlSettings
- uid: System.Xml.XPath.IXPathNavigable
  commentId: T:System.Xml.XPath.IXPathNavigable
  parent: System.Xml.XPath
  isExternal: true
  name: IXPathNavigable
  nameWithType: IXPathNavigable
  fullName: System.Xml.XPath.IXPathNavigable
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: false
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: Microsoft.Health.ApplicationSettings.SelectedRecordId*
  commentId: Overload:Microsoft.Health.ApplicationSettings.SelectedRecordId
  isExternal: false
  name: SelectedRecordId
  nameWithType: ApplicationSettings.SelectedRecordId
  fullName: Microsoft.Health.ApplicationSettings.SelectedRecordId
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
