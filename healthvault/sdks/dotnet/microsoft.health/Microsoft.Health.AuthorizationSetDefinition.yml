### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.AuthorizationSetDefinition
  commentId: T:Microsoft.Health.AuthorizationSetDefinition
  id: AuthorizationSetDefinition
  parent: Microsoft.Health
  children:
  - Microsoft.Health.AuthorizationSetDefinition.GetXml
  - Microsoft.Health.AuthorizationSetDefinition.ToString
  langs:
  - csharp
  - vb
  name: AuthorizationSetDefinition
  nameWithType: AuthorizationSetDefinition
  fullName: Microsoft.Health.AuthorizationSetDefinition
  type: Class
  source:
    remote:
      path: Microsoft.Health/AuthorizationSetDefinition.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AuthorizationSetDefinition
    path: AuthorizationSetDefinition.cs
    startLine: 26
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nDefines the interface for interacting with sets of health record items \nfor authorization purposes. This class is abstract.\n"
  remarks: "\nPermissions on data in a person's health records are always included\nin an authorization set (whether implicitly via their type or \neffective date, or explicitly by setting the system set). \n<xref href=\"Microsoft.Health.AuthorizationSetDefinition\" data-throw-if-not-resolved=\"false\"></xref> is the base class for the \ndifferent types of authorization sets.\nThe concrete class definitions that define the sets are\n<xref href=\"Microsoft.Health.DateRangeSetDefinition\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Microsoft.Health.TypeIdSetDefinition\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public abstract class AuthorizationSetDefinition
    content.vb: Public MustInherit Class AuthorizationSetDefinition
  seealso:
  - linkId: Microsoft.Health.DateRangeSetDefinition
    commentId: T:Microsoft.Health.DateRangeSetDefinition
  - linkId: Microsoft.Health.TypeIdSetDefinition
    commentId: T:Microsoft.Health.TypeIdSetDefinition
  inheritance:
  - System.Object
  derivedClasses:
  - Microsoft.Health.DateRangeSetDefinition
  - Microsoft.Health.TypeIdSetDefinition
  - Microsoft.Health.UserTagSetDefinition
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.Health.AuthorizationSetDefinition.GetXml
  commentId: M:Microsoft.Health.AuthorizationSetDefinition.GetXml
  id: GetXml
  parent: Microsoft.Health.AuthorizationSetDefinition
  langs:
  - csharp
  - vb
  name: GetXml()
  nameWithType: AuthorizationSetDefinition.GetXml()
  fullName: Microsoft.Health.AuthorizationSetDefinition.GetXml()
  type: Method
  source:
    remote:
      path: Microsoft.Health/AuthorizationSetDefinition.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetXml
    path: AuthorizationSetDefinition.cs
    startLine: 52
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nRetrieves the XML representation of the set. This method is abstract.\n"
  remarks: "\nThe XML representation adheres to the schema required by the\nHealthVault methods.\n"
  example: []
  syntax:
    content: public abstract string GetXml()
    content.vb: Public MustOverride Function GetXml As String
    return:
      type: System.String
      description: "\nThe XML representation of the set as a string.\n"
  overload: Microsoft.Health.AuthorizationSetDefinition.GetXml*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Microsoft.Health.AuthorizationSetDefinition.ToString
  commentId: M:Microsoft.Health.AuthorizationSetDefinition.ToString
  id: ToString
  parent: Microsoft.Health.AuthorizationSetDefinition
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: AuthorizationSetDefinition.ToString()
  fullName: Microsoft.Health.AuthorizationSetDefinition.ToString()
  type: Method
  source:
    remote:
      path: Microsoft.Health/AuthorizationSetDefinition.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ToString
    path: AuthorizationSetDefinition.cs
    startLine: 67
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nRetrieves the XML representation of the set as a string.\n"
  remarks: "\nThe XML representation adheres to the schema required by the\nHealthVault methods.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\nA string containing the XML representation of the set.\n"
  overridden: System.Object.ToString
  overload: Microsoft.Health.AuthorizationSetDefinition.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Health.AuthorizationSetDefinition
  commentId: T:Microsoft.Health.AuthorizationSetDefinition
  parent: Microsoft.Health
  isExternal: false
  name: AuthorizationSetDefinition
  nameWithType: AuthorizationSetDefinition
  fullName: Microsoft.Health.AuthorizationSetDefinition
- uid: Microsoft.Health.DateRangeSetDefinition
  commentId: T:Microsoft.Health.DateRangeSetDefinition
  isExternal: false
  name: DateRangeSetDefinition
  nameWithType: DateRangeSetDefinition
  fullName: Microsoft.Health.DateRangeSetDefinition
- uid: Microsoft.Health.TypeIdSetDefinition
  commentId: T:Microsoft.Health.TypeIdSetDefinition
  isExternal: false
  name: TypeIdSetDefinition
  nameWithType: TypeIdSetDefinition
  fullName: Microsoft.Health.TypeIdSetDefinition
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.AuthorizationSetDefinition.GetXml*
  commentId: Overload:Microsoft.Health.AuthorizationSetDefinition.GetXml
  isExternal: false
  name: GetXml
  nameWithType: AuthorizationSetDefinition.GetXml
  fullName: Microsoft.Health.AuthorizationSetDefinition.GetXml
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.AuthorizationSetDefinition.ToString*
  commentId: Overload:Microsoft.Health.AuthorizationSetDefinition.ToString
  isExternal: false
  name: ToString
  nameWithType: AuthorizationSetDefinition.ToString
  fullName: Microsoft.Health.AuthorizationSetDefinition.ToString
