### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.HealthRecordUpdateInfo
  commentId: T:Microsoft.Health.HealthRecordUpdateInfo
  id: HealthRecordUpdateInfo
  parent: Microsoft.Health
  children:
  - Microsoft.Health.HealthRecordUpdateInfo.#ctor
  - Microsoft.Health.HealthRecordUpdateInfo.LastUpdateDate
  - Microsoft.Health.HealthRecordUpdateInfo.LatestOperationSequenceNumber
  - Microsoft.Health.HealthRecordUpdateInfo.PersonId
  - Microsoft.Health.HealthRecordUpdateInfo.RecordId
  langs:
  - csharp
  - vb
  name: HealthRecordUpdateInfo
  nameWithType: HealthRecordUpdateInfo
  fullName: Microsoft.Health.HealthRecordUpdateInfo
  type: Class
  source:
    remote:
      path: Microsoft.Health/HealthRecordUpdateInfo.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: HealthRecordUpdateInfo
    path: HealthRecordUpdateInfo.cs
    startLine: 12
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nEncapsulates information about an updated record and the person associated with that record.\n"
  example: []
  syntax:
    content: public class HealthRecordUpdateInfo
    content.vb: Public Class HealthRecordUpdateInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.HealthRecordUpdateInfo.#ctor
  commentId: M:Microsoft.Health.HealthRecordUpdateInfo.#ctor
  id: '#ctor'
  parent: Microsoft.Health.HealthRecordUpdateInfo
  langs:
  - csharp
  - vb
  name: HealthRecordUpdateInfo()
  nameWithType: HealthRecordUpdateInfo.HealthRecordUpdateInfo()
  fullName: Microsoft.Health.HealthRecordUpdateInfo.HealthRecordUpdateInfo()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/HealthRecordUpdateInfo.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: HealthRecordUpdateInfo.cs
    startLine: 17
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nCreate a new instance of the <xref href=\"Microsoft.Health.HealthRecordUpdateInfo\" data-throw-if-not-resolved=\"false\"></xref> class for testing purposes. \n"
  example: []
  syntax:
    content: protected HealthRecordUpdateInfo()
    content.vb: Protected Sub New
  overload: Microsoft.Health.HealthRecordUpdateInfo.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.Health.HealthRecordUpdateInfo.RecordId
  commentId: P:Microsoft.Health.HealthRecordUpdateInfo.RecordId
  id: RecordId
  parent: Microsoft.Health.HealthRecordUpdateInfo
  langs:
  - csharp
  - vb
  name: RecordId
  nameWithType: HealthRecordUpdateInfo.RecordId
  fullName: Microsoft.Health.HealthRecordUpdateInfo.RecordId
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthRecordUpdateInfo.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: RecordId
    path: HealthRecordUpdateInfo.cs
    startLine: 36
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the ID of the <xref href=\"Microsoft.Health.HealthRecordAccessor\" data-throw-if-not-resolved=\"false\"></xref> updated.\n"
  example: []
  syntax:
    content: public Guid RecordId { get; protected set; }
    content.vb: Public Property RecordId As Guid
    parameters: []
    return:
      type: System.Guid
  overload: Microsoft.Health.HealthRecordUpdateInfo.RecordId*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Health.HealthRecordUpdateInfo.LastUpdateDate
  commentId: P:Microsoft.Health.HealthRecordUpdateInfo.LastUpdateDate
  id: LastUpdateDate
  parent: Microsoft.Health.HealthRecordUpdateInfo
  langs:
  - csharp
  - vb
  name: LastUpdateDate
  nameWithType: HealthRecordUpdateInfo.LastUpdateDate
  fullName: Microsoft.Health.HealthRecordUpdateInfo.LastUpdateDate
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthRecordUpdateInfo.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: LastUpdateDate
    path: HealthRecordUpdateInfo.cs
    startLine: 47
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the timestamp when an addition, deletion or update occured to the \n<xref href=\"Microsoft.Health.HealthRecordItem\" data-throw-if-not-resolved=\"false\"></xref>s in the <xref href=\"Microsoft.Health.HealthRecordAccessor\" data-throw-if-not-resolved=\"false\"></xref> \n"
  example: []
  syntax:
    content: public DateTime LastUpdateDate { get; protected set; }
    content.vb: Public Property LastUpdateDate As Date
    parameters: []
    return:
      type: System.DateTime
  overload: Microsoft.Health.HealthRecordUpdateInfo.LastUpdateDate*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Health.HealthRecordUpdateInfo.PersonId
  commentId: P:Microsoft.Health.HealthRecordUpdateInfo.PersonId
  id: PersonId
  parent: Microsoft.Health.HealthRecordUpdateInfo
  langs:
  - csharp
  - vb
  name: PersonId
  nameWithType: HealthRecordUpdateInfo.PersonId
  fullName: Microsoft.Health.HealthRecordUpdateInfo.PersonId
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthRecordUpdateInfo.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: PersonId
    path: HealthRecordUpdateInfo.cs
    startLine: 57
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the person ID of the updated record.\n"
  example: []
  syntax:
    content: public Guid PersonId { get; protected set; }
    content.vb: Public Property PersonId As Guid
    parameters: []
    return:
      type: System.Guid
  overload: Microsoft.Health.HealthRecordUpdateInfo.PersonId*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Health.HealthRecordUpdateInfo.LatestOperationSequenceNumber
  commentId: P:Microsoft.Health.HealthRecordUpdateInfo.LatestOperationSequenceNumber
  id: LatestOperationSequenceNumber
  parent: Microsoft.Health.HealthRecordUpdateInfo
  langs:
  - csharp
  - vb
  name: LatestOperationSequenceNumber
  nameWithType: HealthRecordUpdateInfo.LatestOperationSequenceNumber
  fullName: Microsoft.Health.HealthRecordUpdateInfo.LatestOperationSequenceNumber
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthRecordUpdateInfo.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: LatestOperationSequenceNumber
    path: HealthRecordUpdateInfo.cs
    startLine: 78
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets the record's latest operation sequence number.\n"
  remarks: "\nThe record's operation sequence number is used when sync'ing data from a \nrecord. Anytime an operation is performed against a health record item HealthVault\nstamps it with the next increment of the operation sequence number for the record.\nFor example, the first item added to the record would be stamped with the sequence\nnumber 1, the next operation would stamp the thing with 2, etc. Applications can\ndetermine all operations that have occurred since a known point by calling \nGetRecordOperations and passing the sequence number of the known point.\n"
  example: []
  syntax:
    content: public long LatestOperationSequenceNumber { get; }
    content.vb: Public ReadOnly Property LatestOperationSequenceNumber As Long
    parameters: []
    return:
      type: System.Int64
  overload: Microsoft.Health.HealthRecordUpdateInfo.LatestOperationSequenceNumber*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.HealthRecordUpdateInfo
  commentId: T:Microsoft.Health.HealthRecordUpdateInfo
  isExternal: false
  name: HealthRecordUpdateInfo
  nameWithType: HealthRecordUpdateInfo
  fullName: Microsoft.Health.HealthRecordUpdateInfo
- uid: Microsoft.Health.HealthRecordUpdateInfo.#ctor*
  commentId: Overload:Microsoft.Health.HealthRecordUpdateInfo.#ctor
  isExternal: false
  name: HealthRecordUpdateInfo
  nameWithType: HealthRecordUpdateInfo.HealthRecordUpdateInfo
  fullName: Microsoft.Health.HealthRecordUpdateInfo.HealthRecordUpdateInfo
- uid: Microsoft.Health.HealthRecordAccessor
  commentId: T:Microsoft.Health.HealthRecordAccessor
  parent: Microsoft.Health
  isExternal: false
  name: HealthRecordAccessor
  nameWithType: HealthRecordAccessor
  fullName: Microsoft.Health.HealthRecordAccessor
- uid: Microsoft.Health.HealthRecordUpdateInfo.RecordId*
  commentId: Overload:Microsoft.Health.HealthRecordUpdateInfo.RecordId
  isExternal: false
  name: RecordId
  nameWithType: HealthRecordUpdateInfo.RecordId
  fullName: Microsoft.Health.HealthRecordUpdateInfo.RecordId
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Microsoft.Health.HealthRecordItem
  commentId: T:Microsoft.Health.HealthRecordItem
  parent: Microsoft.Health
  isExternal: false
  name: HealthRecordItem
  nameWithType: HealthRecordItem
  fullName: Microsoft.Health.HealthRecordItem
- uid: Microsoft.Health.HealthRecordUpdateInfo.LastUpdateDate*
  commentId: Overload:Microsoft.Health.HealthRecordUpdateInfo.LastUpdateDate
  isExternal: false
  name: LastUpdateDate
  nameWithType: HealthRecordUpdateInfo.LastUpdateDate
  fullName: Microsoft.Health.HealthRecordUpdateInfo.LastUpdateDate
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Microsoft.Health.HealthRecordUpdateInfo.PersonId*
  commentId: Overload:Microsoft.Health.HealthRecordUpdateInfo.PersonId
  isExternal: false
  name: PersonId
  nameWithType: HealthRecordUpdateInfo.PersonId
  fullName: Microsoft.Health.HealthRecordUpdateInfo.PersonId
- uid: Microsoft.Health.HealthRecordUpdateInfo.LatestOperationSequenceNumber*
  commentId: Overload:Microsoft.Health.HealthRecordUpdateInfo.LatestOperationSequenceNumber
  isExternal: false
  name: LatestOperationSequenceNumber
  nameWithType: HealthRecordUpdateInfo.LatestOperationSequenceNumber
  fullName: Microsoft.Health.HealthRecordUpdateInfo.LatestOperationSequenceNumber
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
