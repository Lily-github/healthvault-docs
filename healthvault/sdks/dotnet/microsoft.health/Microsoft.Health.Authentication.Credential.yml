### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Authentication.Credential
  commentId: T:Microsoft.Health.Authentication.Credential
  id: Credential
  parent: Microsoft.Health.Authentication
  children:
  - Microsoft.Health.Authentication.Credential.CreateAuthenticatedSessionToken(Microsoft.Health.HealthServiceConnection,System.Guid)
  - Microsoft.Health.Authentication.Credential.GetAuthenticationResult(System.Guid)
  - Microsoft.Health.Authentication.Credential.SharedSecret
  - Microsoft.Health.Authentication.Credential.WriteInfoXml(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: Credential
  nameWithType: Credential
  fullName: Microsoft.Health.Authentication.Credential
  type: Class
  source:
    remote:
      path: Microsoft.Health/Authentication/Credential.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Credential
    path: Authentication/Credential.cs
    startLine: 31
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Authentication
  summary: "\nProvides base functionality for all Microsoft HealthVault service \nauthentication credential types. This class is abstract.\n"
  remarks: "\nCredentials serve as the basis for all authentication with the \nMicrosoft HealthVault service. Each credential class implements a specific\ncredential type. As more credential types are required, a new \ncredential is required for each.\nYou should inherit from this class only if support for a new \nHealthVault authentication credential type is required.\n"
  example: []
  syntax:
    content: public abstract class Credential
    content.vb: Public MustInherit Class Credential
  inheritance:
  - System.Object
  derivedClasses:
  - Microsoft.Health.Web.Authentication.WebApplicationCredential
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.Health.Authentication.Credential.SharedSecret
  commentId: P:Microsoft.Health.Authentication.Credential.SharedSecret
  id: SharedSecret
  parent: Microsoft.Health.Authentication.Credential
  langs:
  - csharp
  - vb
  name: SharedSecret
  nameWithType: Credential.SharedSecret
  fullName: Microsoft.Health.Authentication.Credential.SharedSecret
  type: Property
  source:
    remote:
      path: Microsoft.Health/Authentication/Credential.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SharedSecret
    path: Authentication/Credential.cs
    startLine: 55
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Authentication
  summary: "\nGets or sets the credential's shared secret.\n"
  remarks: "\nWhen a credential is used to establish an authenticated session\nwith the Microsoft HealthVault service, it uses a shared secret\nto authenticate data transmissions. If the credential does not\nsupport an authenticated session, this property will be <strong>null</strong>.\n"
  example: []
  syntax:
    content: public CryptoHash SharedSecret { get; set; }
    content.vb: Public Property SharedSecret As CryptoHash
    parameters: []
    return:
      type: Microsoft.Health.Authentication.CryptoHash
      description: "\nAn instance of <xref href=\"Microsoft.Health.Authentication.CryptoHash\" data-throw-if-not-resolved=\"false\"></xref> representing the shared \nsecret.\n"
  overload: Microsoft.Health.Authentication.Credential.SharedSecret*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe value is set to <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Authentication.Credential.GetAuthenticationResult(System.Guid)
  commentId: M:Microsoft.Health.Authentication.Credential.GetAuthenticationResult(System.Guid)
  id: GetAuthenticationResult(System.Guid)
  parent: Microsoft.Health.Authentication.Credential
  langs:
  - csharp
  - vb
  name: GetAuthenticationResult(Guid)
  nameWithType: Credential.GetAuthenticationResult(Guid)
  fullName: Microsoft.Health.Authentication.Credential.GetAuthenticationResult(System.Guid)
  type: Method
  source:
    remote:
      path: Microsoft.Health/Authentication/Credential.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetAuthenticationResult
    path: Authentication/Credential.cs
    startLine: 96
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Authentication
  summary: "\nGets the credential's authentication results from prior successful \nauthentications with the Microsoft HealthVault service.\n"
  remarks: "\nThe key of the dictionary is the application id of the application\nfor which the authentication request was made. If an application ID\nis not present in the dictionary, then an authentication request\nhas not been made for this application, and this method therefore \nreturns <strong>null</strong>.\n"
  example: []
  syntax:
    content: public virtual CreateAuthenticationTokenResult GetAuthenticationResult(Guid applicationId)
    content.vb: Public Overridable Function GetAuthenticationResult(applicationId As Guid) As CreateAuthenticationTokenResult
    parameters:
    - id: applicationId
      type: System.Guid
      description: "\nThe application that was previously authenticated.\n"
    return:
      type: Microsoft.Health.Authentication.CreateAuthenticationTokenResult
      description: "\nAn instance of <xref href=\"Microsoft.Health.Authentication.CreateAuthenticationTokenResult\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  overload: Microsoft.Health.Authentication.Credential.GetAuthenticationResult*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.Health.Authentication.Credential.CreateAuthenticatedSessionToken(Microsoft.Health.HealthServiceConnection,System.Guid)
  commentId: M:Microsoft.Health.Authentication.Credential.CreateAuthenticatedSessionToken(Microsoft.Health.HealthServiceConnection,System.Guid)
  id: CreateAuthenticatedSessionToken(Microsoft.Health.HealthServiceConnection,System.Guid)
  parent: Microsoft.Health.Authentication.Credential
  langs:
  - csharp
  - vb
  name: CreateAuthenticatedSessionToken(HealthServiceConnection, Guid)
  nameWithType: Credential.CreateAuthenticatedSessionToken(HealthServiceConnection, Guid)
  fullName: Microsoft.Health.Authentication.Credential.CreateAuthenticatedSessionToken(Microsoft.Health.HealthServiceConnection, System.Guid)
  type: Method
  source:
    remote:
      path: Microsoft.Health/Authentication/Credential.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CreateAuthenticatedSessionToken
    path: Authentication/Credential.cs
    startLine: 367
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Authentication
  summary: "\nGets an authentication token in the context of the credential.\n"
  remarks: "\nThe resulting authentication result is inserted into \n<xref href=\"Microsoft.Health.Authentication.Credential.GetAuthenticationResult(System.Guid)\" data-throw-if-not-resolved=\"false\"></xref>.\nThis method accesses the HealthVault service across the network.\nIf the application ID specified is already in the dictionary,\nthen the authentication attempt is not made and the cached \nauthentication result is used.\n"
  example: []
  syntax:
    content: public void CreateAuthenticatedSessionToken(HealthServiceConnection connection, Guid appId)
    content.vb: Public Sub CreateAuthenticatedSessionToken(connection As HealthServiceConnection, appId As Guid)
    parameters:
    - id: connection
      type: Microsoft.Health.HealthServiceConnection
      description: "\nThe client-side representation of the HealthVault service.\n"
    - id: appId
      type: System.Guid
      description: "\nThe HealthVault application identifier for which the request is \nmade.\n"
  overload: Microsoft.Health.Authentication.Credential.CreateAuthenticatedSessionToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">connection</span> parameter is <strong>null</strong>.\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">appId</span> parameter is <strong>null</strong> or empty.\n"
  seealso:
  - linkId: Microsoft.Health.HealthServiceConnection
    commentId: T:Microsoft.Health.HealthServiceConnection
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Authentication.Credential.WriteInfoXml(System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.Authentication.Credential.WriteInfoXml(System.Xml.XmlWriter)
  id: WriteInfoXml(System.Xml.XmlWriter)
  parent: Microsoft.Health.Authentication.Credential
  langs:
  - csharp
  - vb
  name: WriteInfoXml(XmlWriter)
  nameWithType: Credential.WriteInfoXml(XmlWriter)
  fullName: Microsoft.Health.Authentication.Credential.WriteInfoXml(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health/Authentication/Credential.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteInfoXml
    path: Authentication/Credential.cs
    startLine: 1096
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Authentication
  summary: "\nGenerates the credential-specific XML that is sent \nto the HealthVault service.\n"
  remarks: "\nWhen an inherited class implements WriteInfoXml, the method should\nproduce XML in accordance with the HealthVault XML schema for the \nspecific credential type.\nThis method is only called internally and is subject to change.\n"
  example: []
  syntax:
    content: public abstract void WriteInfoXml(XmlWriter writer)
    content.vb: Public MustOverride Sub WriteInfoXml(writer As XmlWriter)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "\nThe XmlWriter receiving the credentials.\n"
  overload: Microsoft.Health.Authentication.Credential.WriteInfoXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">writer</span> parameter is <strong>null</strong>. \n"
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
references:
- uid: Microsoft.Health.Authentication
  commentId: N:Microsoft.Health.Authentication
  isExternal: false
  name: Microsoft.Health.Authentication
  nameWithType: Microsoft.Health.Authentication
  fullName: Microsoft.Health.Authentication
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Authentication.CryptoHash
  commentId: T:Microsoft.Health.Authentication.CryptoHash
  parent: Microsoft.Health.Authentication
  isExternal: false
  name: CryptoHash
  nameWithType: CryptoHash
  fullName: Microsoft.Health.Authentication.CryptoHash
- uid: Microsoft.Health.Authentication.Credential.SharedSecret*
  commentId: Overload:Microsoft.Health.Authentication.Credential.SharedSecret
  isExternal: false
  name: SharedSecret
  nameWithType: Credential.SharedSecret
  fullName: Microsoft.Health.Authentication.Credential.SharedSecret
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: Microsoft.Health.Authentication.CreateAuthenticationTokenResult
  commentId: T:Microsoft.Health.Authentication.CreateAuthenticationTokenResult
  parent: Microsoft.Health.Authentication
  isExternal: false
  name: CreateAuthenticationTokenResult
  nameWithType: CreateAuthenticationTokenResult
  fullName: Microsoft.Health.Authentication.CreateAuthenticationTokenResult
- uid: Microsoft.Health.Authentication.Credential.GetAuthenticationResult*
  commentId: Overload:Microsoft.Health.Authentication.Credential.GetAuthenticationResult
  isExternal: false
  name: GetAuthenticationResult
  nameWithType: Credential.GetAuthenticationResult
  fullName: Microsoft.Health.Authentication.Credential.GetAuthenticationResult
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Microsoft.Health.Authentication.Credential.GetAuthenticationResult(System.Guid)
  commentId: M:Microsoft.Health.Authentication.Credential.GetAuthenticationResult(System.Guid)
  parent: Microsoft.Health.Authentication.Credential
  isExternal: true
  name: GetAuthenticationResult(Guid)
  nameWithType: Credential.GetAuthenticationResult(Guid)
  fullName: Microsoft.Health.Authentication.Credential.GetAuthenticationResult(System.Guid)
  spec.csharp:
  - uid: Microsoft.Health.Authentication.Credential.GetAuthenticationResult(System.Guid)
    name: GetAuthenticationResult
    nameWithType: Credential.GetAuthenticationResult
    fullName: Microsoft.Health.Authentication.Credential.GetAuthenticationResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Authentication.Credential.GetAuthenticationResult(System.Guid)
    name: GetAuthenticationResult
    nameWithType: Credential.GetAuthenticationResult
    fullName: Microsoft.Health.Authentication.Credential.GetAuthenticationResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthServiceConnection
  commentId: T:Microsoft.Health.HealthServiceConnection
  parent: Microsoft.Health
  isExternal: false
  name: HealthServiceConnection
  nameWithType: HealthServiceConnection
  fullName: Microsoft.Health.HealthServiceConnection
- uid: Microsoft.Health.Authentication.Credential.CreateAuthenticatedSessionToken*
  commentId: Overload:Microsoft.Health.Authentication.Credential.CreateAuthenticatedSessionToken
  isExternal: false
  name: CreateAuthenticatedSessionToken
  nameWithType: Credential.CreateAuthenticatedSessionToken
  fullName: Microsoft.Health.Authentication.Credential.CreateAuthenticatedSessionToken
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: Microsoft.Health.Authentication.Credential
  commentId: T:Microsoft.Health.Authentication.Credential
  parent: Microsoft.Health.Authentication
  isExternal: false
  name: Credential
  nameWithType: Credential
  fullName: Microsoft.Health.Authentication.Credential
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: Microsoft.Health.Authentication.Credential.WriteInfoXml*
  commentId: Overload:Microsoft.Health.Authentication.Credential.WriteInfoXml
  isExternal: false
  name: WriteInfoXml
  nameWithType: Credential.WriteInfoXml
  fullName: Microsoft.Health.Authentication.Credential.WriteInfoXml
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
