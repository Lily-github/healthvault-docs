### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Events.HealthRecordItemChangedSubscription
  commentId: T:Microsoft.Health.Events.HealthRecordItemChangedSubscription
  id: HealthRecordItemChangedSubscription
  parent: Microsoft.Health.Events
  children:
  - Microsoft.Health.Events.HealthRecordItemChangedSubscription.#ctor(Microsoft.Health.Events.CommonSubscriptionData,System.Collections.Generic.IList{System.Guid})
  - Microsoft.Health.Events.HealthRecordItemChangedSubscription.#ctor(Microsoft.Health.Events.CommonSubscriptionData,System.Guid[])
  - Microsoft.Health.Events.HealthRecordItemChangedSubscription.Filters
  - Microsoft.Health.Events.HealthRecordItemChangedSubscription.ToString
  langs:
  - csharp
  - vb
  name: HealthRecordItemChangedSubscription
  nameWithType: HealthRecordItemChangedSubscription
  fullName: Microsoft.Health.Events.HealthRecordItemChangedSubscription
  type: Class
  source:
    remote:
      path: Microsoft.Health/Eventing/HealthRecordItemChangedSubscription.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: HealthRecordItemChangedSubscription
    path: Eventing/HealthRecordItemChangedSubscription.cs
    startLine: 24
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Events
  summary: "\nA subscription that sends notifications when an item in a record changes.\n"
  remarks: "\nThis subscription enables application notification when an item of a specific data type in a record\nchanges. \n\nA notification will be sent when any of the filters in the <xref href=\"Microsoft.Health.Events.HealthRecordItemChangedSubscription.Filters\" data-throw-if-not-resolved=\"false\"></xref> collection match a \nrecord item change on the HealthVault platform. \n"
  example: []
  syntax:
    content: 'public class HealthRecordItemChangedSubscription : Subscription'
    content.vb: >-
      Public Class HealthRecordItemChangedSubscription
          Inherits Subscription
  inheritance:
  - System.Object
  - Microsoft.Health.Events.Subscription
  inheritedMembers:
  - Microsoft.Health.Events.Subscription.Deserialize(System.Xml.XPath.XPathNavigator)
  - Microsoft.Health.Events.Subscription.Serialize(System.Xml.XmlWriter)
  - Microsoft.Health.Events.Subscription.CommonSubscriptionData
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.Events.HealthRecordItemChangedSubscription.#ctor(Microsoft.Health.Events.CommonSubscriptionData,System.Guid[])
  commentId: M:Microsoft.Health.Events.HealthRecordItemChangedSubscription.#ctor(Microsoft.Health.Events.CommonSubscriptionData,System.Guid[])
  id: '#ctor(Microsoft.Health.Events.CommonSubscriptionData,System.Guid[])'
  parent: Microsoft.Health.Events.HealthRecordItemChangedSubscription
  langs:
  - csharp
  - vb
  name: HealthRecordItemChangedSubscription(CommonSubscriptionData, Guid[])
  nameWithType: HealthRecordItemChangedSubscription.HealthRecordItemChangedSubscription(CommonSubscriptionData, Guid[])
  fullName: Microsoft.Health.Events.HealthRecordItemChangedSubscription.HealthRecordItemChangedSubscription(Microsoft.Health.Events.CommonSubscriptionData, System.Guid[])
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/Eventing/HealthRecordItemChangedSubscription.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: Eventing/HealthRecordItemChangedSubscription.cs
    startLine: 32
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Events
  summary: "\nCreate an instance of the HealthHealthRecordItemChangedSubscription class, specifying the delivery mechanism and the \nset of type ids on which to send event notifications.\n"
  example: []
  syntax:
    content: public HealthRecordItemChangedSubscription(CommonSubscriptionData commonSubscriptionData, params Guid[] typeIds)
    content.vb: Public Sub New(commonSubscriptionData As CommonSubscriptionData, ParamArray typeIds As Guid())
    parameters:
    - id: commonSubscriptionData
      type: Microsoft.Health.Events.CommonSubscriptionData
      description: The common subscription data to associate with this subscription.
    - id: typeIds
      type: System.Guid[]
      description: The type ids on which to send event notifications
  overload: Microsoft.Health.Events.HealthRecordItemChangedSubscription.#ctor*
  nameWithType.vb: HealthRecordItemChangedSubscription.HealthRecordItemChangedSubscription(CommonSubscriptionData, Guid())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Events.HealthRecordItemChangedSubscription.HealthRecordItemChangedSubscription(Microsoft.Health.Events.CommonSubscriptionData, System.Guid())
  name.vb: HealthRecordItemChangedSubscription(CommonSubscriptionData, Guid())
- uid: Microsoft.Health.Events.HealthRecordItemChangedSubscription.#ctor(Microsoft.Health.Events.CommonSubscriptionData,System.Collections.Generic.IList{System.Guid})
  commentId: M:Microsoft.Health.Events.HealthRecordItemChangedSubscription.#ctor(Microsoft.Health.Events.CommonSubscriptionData,System.Collections.Generic.IList{System.Guid})
  id: '#ctor(Microsoft.Health.Events.CommonSubscriptionData,System.Collections.Generic.IList{System.Guid})'
  parent: Microsoft.Health.Events.HealthRecordItemChangedSubscription
  langs:
  - csharp
  - vb
  name: HealthRecordItemChangedSubscription(CommonSubscriptionData, IList<Guid>)
  nameWithType: HealthRecordItemChangedSubscription.HealthRecordItemChangedSubscription(CommonSubscriptionData, IList<Guid>)
  fullName: Microsoft.Health.Events.HealthRecordItemChangedSubscription.HealthRecordItemChangedSubscription(Microsoft.Health.Events.CommonSubscriptionData, System.Collections.Generic.IList<System.Guid>)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/Eventing/HealthRecordItemChangedSubscription.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: Eventing/HealthRecordItemChangedSubscription.cs
    startLine: 48
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Events
  summary: "\nCreate an instance of the HealthRecordItemChangedSubscription class, specifying the delivery mechanism and the \nset of type ids on which to send event notifications.\n"
  example: []
  syntax:
    content: public HealthRecordItemChangedSubscription(CommonSubscriptionData commonSubscriptionData, IList<Guid> typeIds)
    content.vb: Public Sub New(commonSubscriptionData As CommonSubscriptionData, typeIds As IList(Of Guid))
    parameters:
    - id: commonSubscriptionData
      type: Microsoft.Health.Events.CommonSubscriptionData
      description: The common subscription data to associate with this subscription.
    - id: typeIds
      type: System.Collections.Generic.IList{System.Guid}
      description: The type ids on which to send event notifications
  overload: Microsoft.Health.Events.HealthRecordItemChangedSubscription.#ctor*
  nameWithType.vb: HealthRecordItemChangedSubscription.HealthRecordItemChangedSubscription(CommonSubscriptionData, IList(Of Guid))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Events.HealthRecordItemChangedSubscription.HealthRecordItemChangedSubscription(Microsoft.Health.Events.CommonSubscriptionData, System.Collections.Generic.IList(Of System.Guid))
  name.vb: HealthRecordItemChangedSubscription(CommonSubscriptionData, IList(Of Guid))
- uid: Microsoft.Health.Events.HealthRecordItemChangedSubscription.Filters
  commentId: P:Microsoft.Health.Events.HealthRecordItemChangedSubscription.Filters
  id: Filters
  parent: Microsoft.Health.Events.HealthRecordItemChangedSubscription
  langs:
  - csharp
  - vb
  name: Filters
  nameWithType: HealthRecordItemChangedSubscription.Filters
  fullName: Microsoft.Health.Events.HealthRecordItemChangedSubscription.Filters
  type: Property
  source:
    remote:
      path: Microsoft.Health/Eventing/HealthRecordItemChangedSubscription.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Filters
    path: Eventing/HealthRecordItemChangedSubscription.cs
    startLine: 100
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Events
  summary: "\nGets the collection of <xref href=\"Microsoft.Health.Events.HealthRecordItemChangedFilter\" data-throw-if-not-resolved=\"false\"></xref> instances that \ndefine when a notification is sent for this subscription.\n"
  example: []
  syntax:
    content: public Collection<HealthRecordItemChangedFilter> Filters { get; }
    content.vb: Public ReadOnly Property Filters As Collection(Of HealthRecordItemChangedFilter)
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{Microsoft.Health.Events.HealthRecordItemChangedFilter}
  overload: Microsoft.Health.Events.HealthRecordItemChangedSubscription.Filters*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Events.HealthRecordItemChangedSubscription.ToString
  commentId: M:Microsoft.Health.Events.HealthRecordItemChangedSubscription.ToString
  id: ToString
  parent: Microsoft.Health.Events.HealthRecordItemChangedSubscription
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: HealthRecordItemChangedSubscription.ToString()
  fullName: Microsoft.Health.Events.HealthRecordItemChangedSubscription.ToString()
  type: Method
  source:
    remote:
      path: Microsoft.Health/Eventing/HealthRecordItemChangedSubscription.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ToString
    path: Eventing/HealthRecordItemChangedSubscription.cs
    startLine: 110
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Events
  summary: "\nReturn a string representation of the subscription.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: A string.
  overridden: System.Object.ToString
  overload: Microsoft.Health.Events.HealthRecordItemChangedSubscription.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Health.Events.HealthRecordItemChangedSubscription.Filters
  commentId: P:Microsoft.Health.Events.HealthRecordItemChangedSubscription.Filters
- uid: Microsoft.Health.Events
  commentId: N:Microsoft.Health.Events
  isExternal: false
  name: Microsoft.Health.Events
  nameWithType: Microsoft.Health.Events
  fullName: Microsoft.Health.Events
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.Events.Subscription
  commentId: T:Microsoft.Health.Events.Subscription
  parent: Microsoft.Health.Events
  isExternal: false
  name: Subscription
  nameWithType: Subscription
  fullName: Microsoft.Health.Events.Subscription
- uid: Microsoft.Health.Events.Subscription.Deserialize(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.Events.Subscription.Deserialize(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.Events.Subscription
  isExternal: true
  name: Deserialize(XPathNavigator)
  nameWithType: Subscription.Deserialize(XPathNavigator)
  fullName: Microsoft.Health.Events.Subscription.Deserialize(System.Xml.XPath.XPathNavigator)
  spec.csharp:
  - uid: Microsoft.Health.Events.Subscription.Deserialize(System.Xml.XPath.XPathNavigator)
    name: Deserialize
    nameWithType: Subscription.Deserialize
    fullName: Microsoft.Health.Events.Subscription.Deserialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Events.Subscription.Deserialize(System.Xml.XPath.XPathNavigator)
    name: Deserialize
    nameWithType: Subscription.Deserialize
    fullName: Microsoft.Health.Events.Subscription.Deserialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Events.Subscription.Serialize(System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.Events.Subscription.Serialize(System.Xml.XmlWriter)
  parent: Microsoft.Health.Events.Subscription
  isExternal: true
  name: Serialize(XmlWriter)
  nameWithType: Subscription.Serialize(XmlWriter)
  fullName: Microsoft.Health.Events.Subscription.Serialize(System.Xml.XmlWriter)
  spec.csharp:
  - uid: Microsoft.Health.Events.Subscription.Serialize(System.Xml.XmlWriter)
    name: Serialize
    nameWithType: Subscription.Serialize
    fullName: Microsoft.Health.Events.Subscription.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Events.Subscription.Serialize(System.Xml.XmlWriter)
    name: Serialize
    nameWithType: Subscription.Serialize
    fullName: Microsoft.Health.Events.Subscription.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Events.Subscription.CommonSubscriptionData
  commentId: P:Microsoft.Health.Events.Subscription.CommonSubscriptionData
  parent: Microsoft.Health.Events.Subscription
  isExternal: false
  name: CommonSubscriptionData
  nameWithType: Subscription.CommonSubscriptionData
  fullName: Microsoft.Health.Events.Subscription.CommonSubscriptionData
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Events.HealthRecordItemChangedSubscription.#ctor*
  commentId: Overload:Microsoft.Health.Events.HealthRecordItemChangedSubscription.#ctor
  isExternal: false
  name: HealthRecordItemChangedSubscription
  nameWithType: HealthRecordItemChangedSubscription.HealthRecordItemChangedSubscription
  fullName: Microsoft.Health.Events.HealthRecordItemChangedSubscription.HealthRecordItemChangedSubscription
- uid: Microsoft.Health.Events.CommonSubscriptionData
  commentId: T:Microsoft.Health.Events.CommonSubscriptionData
  parent: Microsoft.Health.Events
  isExternal: false
  name: CommonSubscriptionData
  nameWithType: CommonSubscriptionData
  fullName: Microsoft.Health.Events.CommonSubscriptionData
- uid: System.Guid[]
  name: Guid[]
  nameWithType: Guid[]
  fullName: System.Guid[]
  nameWithType.vb: Guid()
  fullName.vb: System.Guid()
  name.vb: Guid()
  spec.csharp:
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.IList{System.Guid}
  commentId: T:System.Collections.Generic.IList{System.Guid}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Guid>
  nameWithType: IList<Guid>
  fullName: System.Collections.Generic.IList<System.Guid>
  nameWithType.vb: IList(Of Guid)
  fullName.vb: System.Collections.Generic.IList(Of System.Guid)
  name.vb: IList(Of Guid)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Health.Events.HealthRecordItemChangedFilter
  commentId: T:Microsoft.Health.Events.HealthRecordItemChangedFilter
  isExternal: false
  name: HealthRecordItemChangedFilter
  nameWithType: HealthRecordItemChangedFilter
  fullName: Microsoft.Health.Events.HealthRecordItemChangedFilter
- uid: Microsoft.Health.Events.HealthRecordItemChangedSubscription.Filters*
  commentId: Overload:Microsoft.Health.Events.HealthRecordItemChangedSubscription.Filters
  isExternal: false
  name: Filters
  nameWithType: HealthRecordItemChangedSubscription.Filters
  fullName: Microsoft.Health.Events.HealthRecordItemChangedSubscription.Filters
- uid: System.Collections.ObjectModel.Collection{Microsoft.Health.Events.HealthRecordItemChangedFilter}
  commentId: T:System.Collections.ObjectModel.Collection{Microsoft.Health.Events.HealthRecordItemChangedFilter}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<HealthRecordItemChangedFilter>
  nameWithType: Collection<HealthRecordItemChangedFilter>
  fullName: System.Collections.ObjectModel.Collection<Microsoft.Health.Events.HealthRecordItemChangedFilter>
  nameWithType.vb: Collection(Of HealthRecordItemChangedFilter)
  fullName.vb: System.Collections.ObjectModel.Collection(Of Microsoft.Health.Events.HealthRecordItemChangedFilter)
  name.vb: Collection(Of HealthRecordItemChangedFilter)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.Events.HealthRecordItemChangedFilter
    name: HealthRecordItemChangedFilter
    nameWithType: HealthRecordItemChangedFilter
    fullName: Microsoft.Health.Events.HealthRecordItemChangedFilter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.Events.HealthRecordItemChangedFilter
    name: HealthRecordItemChangedFilter
    nameWithType: HealthRecordItemChangedFilter
    fullName: Microsoft.Health.Events.HealthRecordItemChangedFilter
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1
  commentId: T:System.Collections.ObjectModel.Collection`1
  isExternal: true
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  nameWithType.vb: Collection(Of T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T)
  name.vb: Collection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Events.HealthRecordItemChangedSubscription.ToString*
  commentId: Overload:Microsoft.Health.Events.HealthRecordItemChangedSubscription.ToString
  isExternal: false
  name: ToString
  nameWithType: HealthRecordItemChangedSubscription.ToString
  fullName: Microsoft.Health.Events.HealthRecordItemChangedSubscription.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
