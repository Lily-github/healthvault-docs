### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Events.Subscription
  commentId: T:Microsoft.Health.Events.Subscription
  id: Subscription
  parent: Microsoft.Health.Events
  children:
  - Microsoft.Health.Events.Subscription.CommonSubscriptionData
  - Microsoft.Health.Events.Subscription.Deserialize(System.Xml.XPath.XPathNavigator)
  - Microsoft.Health.Events.Subscription.Serialize(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: Subscription
  nameWithType: Subscription
  fullName: Microsoft.Health.Events.Subscription
  type: Class
  source:
    remote:
      path: Microsoft.Health/Eventing/Subscription.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Subscription
    path: Eventing/Subscription.cs
    startLine: 16
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Events
  summary: "\nThe base class for all subscriptions.\n"
  example: []
  syntax:
    content: public abstract class Subscription
    content.vb: Public MustInherit Class Subscription
  inheritance:
  - System.Object
  derivedClasses:
  - Microsoft.Health.Events.HealthRecordItemChangedSubscription
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.Health.Events.Subscription.Deserialize(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.Events.Subscription.Deserialize(System.Xml.XPath.XPathNavigator)
  id: Deserialize(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.Events.Subscription
  langs:
  - csharp
  - vb
  name: Deserialize(XPathNavigator)
  nameWithType: Subscription.Deserialize(XPathNavigator)
  fullName: Microsoft.Health.Events.Subscription.Deserialize(System.Xml.XPath.XPathNavigator)
  type: Method
  source:
    remote:
      path: Microsoft.Health/Eventing/Subscription.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Deserialize
    path: Eventing/Subscription.cs
    startLine: 53
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Events
  summary: "\nCreate an instance of a Subscription by deserializing the subscription XML.\n"
  remarks: "\nThe returned type will be a type derived from Subscription, such as the <xref href=\"Microsoft.Health.Events.HealthRecordItemChangedSubscription\" data-throw-if-not-resolved=\"false\"></xref> class. \n"
  example: []
  syntax:
    content: public static Subscription Deserialize(XPathNavigator subscriptionNavigator)
    content.vb: Public Shared Function Deserialize(subscriptionNavigator As XPathNavigator) As Subscription
    parameters:
    - id: subscriptionNavigator
      type: System.Xml.XPath.XPathNavigator
      description: The xml representation to deserialize.
    return:
      type: Microsoft.Health.Events.Subscription
      description: The subscription.
  overload: Microsoft.Health.Events.Subscription.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">subscriptionNavigator</span> parameter is <strong>null</strong>.\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">subscriptionNavigator</span> parameter XML does not contain \na subscription node.\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nThe <span class=\"paramref\">subscriptionNavigator</span> parameter XML has an unrecognized \nsubscription type.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Events.Subscription.Serialize(System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.Events.Subscription.Serialize(System.Xml.XmlWriter)
  id: Serialize(System.Xml.XmlWriter)
  parent: Microsoft.Health.Events.Subscription
  langs:
  - csharp
  - vb
  name: Serialize(XmlWriter)
  nameWithType: Subscription.Serialize(XmlWriter)
  fullName: Microsoft.Health.Events.Subscription.Serialize(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health/Eventing/Subscription.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Serialize
    path: Eventing/Subscription.cs
    startLine: 102
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Events
  summary: "\nSave the subscription to XML.\n"
  example: []
  syntax:
    content: public void Serialize(XmlWriter xmlWriter)
    content.vb: Public Sub Serialize(xmlWriter As XmlWriter)
    parameters:
    - id: xmlWriter
      type: System.Xml.XmlWriter
      description: The XmlWriter to write the data to.
  overload: Microsoft.Health.Events.Subscription.Serialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">xmlWriter</span> parameter is <strong>null</strong>.\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nThe <seealso name=\"CommonItemSubscriptionData\"></seealso> property is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Events.Subscription.CommonSubscriptionData
  commentId: P:Microsoft.Health.Events.Subscription.CommonSubscriptionData
  id: CommonSubscriptionData
  parent: Microsoft.Health.Events.Subscription
  langs:
  - csharp
  - vb
  name: CommonSubscriptionData
  nameWithType: Subscription.CommonSubscriptionData
  fullName: Microsoft.Health.Events.Subscription.CommonSubscriptionData
  type: Property
  source:
    remote:
      path: Microsoft.Health/Eventing/Subscription.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CommonSubscriptionData
    path: Eventing/Subscription.cs
    startLine: 118
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Events
  summary: "\nGets or sets the <xref href=\"Microsoft.Health.Events.Subscription.CommonSubscriptionData\" data-throw-if-not-resolved=\"false\"></xref> that is associated with this subscription.\n"
  example: []
  syntax:
    content: public CommonSubscriptionData CommonSubscriptionData { get; set; }
    content.vb: Public Property CommonSubscriptionData As CommonSubscriptionData
    parameters: []
    return:
      type: Microsoft.Health.Events.CommonSubscriptionData
  overload: Microsoft.Health.Events.Subscription.CommonSubscriptionData*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Health.Events
  commentId: N:Microsoft.Health.Events
  isExternal: false
  name: Microsoft.Health.Events
  nameWithType: Microsoft.Health.Events
  fullName: Microsoft.Health.Events
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Events.HealthRecordItemChangedSubscription
  commentId: T:Microsoft.Health.Events.HealthRecordItemChangedSubscription
  isExternal: false
  name: HealthRecordItemChangedSubscription
  nameWithType: HealthRecordItemChangedSubscription
  fullName: Microsoft.Health.Events.HealthRecordItemChangedSubscription
- uid: Microsoft.Health.Events.Subscription.Deserialize*
  commentId: Overload:Microsoft.Health.Events.Subscription.Deserialize
  isExternal: false
  name: Deserialize
  nameWithType: Subscription.Deserialize
  fullName: Microsoft.Health.Events.Subscription.Deserialize
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
- uid: System.Xml.XPath.XPathNavigator
  commentId: T:System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: true
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: Microsoft.Health.Events.Subscription
  commentId: T:Microsoft.Health.Events.Subscription
  parent: Microsoft.Health.Events
  isExternal: false
  name: Subscription
  nameWithType: Subscription
  fullName: Microsoft.Health.Events.Subscription
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: false
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: Microsoft.Health.Events.Subscription.Serialize*
  commentId: Overload:Microsoft.Health.Events.Subscription.Serialize
  isExternal: false
  name: Serialize
  nameWithType: Subscription.Serialize
  fullName: Microsoft.Health.Events.Subscription.Serialize
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: Microsoft.Health.Events.Subscription.CommonSubscriptionData
  commentId: P:Microsoft.Health.Events.Subscription.CommonSubscriptionData
  parent: Microsoft.Health.Events.Subscription
  isExternal: false
  name: CommonSubscriptionData
  nameWithType: Subscription.CommonSubscriptionData
  fullName: Microsoft.Health.Events.Subscription.CommonSubscriptionData
- uid: Microsoft.Health.Events.Subscription.CommonSubscriptionData*
  commentId: Overload:Microsoft.Health.Events.Subscription.CommonSubscriptionData
  isExternal: false
  name: CommonSubscriptionData
  nameWithType: Subscription.CommonSubscriptionData
  fullName: Microsoft.Health.Events.Subscription.CommonSubscriptionData
- uid: Microsoft.Health.Events.CommonSubscriptionData
  commentId: T:Microsoft.Health.Events.CommonSubscriptionData
  parent: Microsoft.Health.Events
  isExternal: false
  name: CommonSubscriptionData
  nameWithType: CommonSubscriptionData
  fullName: Microsoft.Health.Events.CommonSubscriptionData
