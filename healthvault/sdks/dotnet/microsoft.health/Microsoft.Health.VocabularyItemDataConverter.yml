### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.VocabularyItemDataConverter
  commentId: T:Microsoft.Health.VocabularyItemDataConverter
  id: VocabularyItemDataConverter
  parent: Microsoft.Health
  children:
  - Microsoft.Health.VocabularyItemDataConverter.ConvertToBaseUnits(Microsoft.Health.VocabularyItem,System.Double)
  langs:
  - csharp
  - vb
  name: VocabularyItemDataConverter
  nameWithType: VocabularyItemDataConverter
  fullName: Microsoft.Health.VocabularyItemDataConverter
  type: Class
  source:
    remote:
      path: Microsoft.Health/VocabularyItemDataConverter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: VocabularyItemDataConverter
    path: VocabularyItemDataConverter.cs
    startLine: 15
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nRepresents the converter class that converts values \nbetween different vocabulary items.\n"
  example: []
  syntax:
    content: public static class VocabularyItemDataConverter
    content.vb: Public Module VocabularyItemDataConverter
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Health.VocabularyItemDataConverter.ConvertToBaseUnits(Microsoft.Health.VocabularyItem,System.Double)
  commentId: M:Microsoft.Health.VocabularyItemDataConverter.ConvertToBaseUnits(Microsoft.Health.VocabularyItem,System.Double)
  id: ConvertToBaseUnits(Microsoft.Health.VocabularyItem,System.Double)
  parent: Microsoft.Health.VocabularyItemDataConverter
  langs:
  - csharp
  - vb
  name: ConvertToBaseUnits(VocabularyItem, Double)
  nameWithType: VocabularyItemDataConverter.ConvertToBaseUnits(VocabularyItem, Double)
  fullName: Microsoft.Health.VocabularyItemDataConverter.ConvertToBaseUnits(Microsoft.Health.VocabularyItem, System.Double)
  type: Method
  source:
    remote:
      path: Microsoft.Health/VocabularyItemDataConverter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ConvertToBaseUnits
    path: VocabularyItemDataConverter.cs
    startLine: 52
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nConverts a value from the source vocabulary item units to \nthe base units of the vocabulary. \n"
  remarks: "\nThis method does not check the sign of the value. The caller\nis responsible for ensuring the input data value make sense for\nthe input vocabulary item.\n"
  example: []
  syntax:
    content: public static double ConvertToBaseUnits(VocabularyItem vocabularyItem, double value)
    content.vb: Public Shared Function ConvertToBaseUnits(vocabularyItem As VocabularyItem, value As Double) As Double
    parameters:
    - id: vocabularyItem
      type: Microsoft.Health.VocabularyItem
      description: "The vocabulary item of the data \nvalue to convert to base units."
    - id: value
      type: System.Double
      description: >
        The data value to convert to base units.
    return:
      type: System.Double
      description: "The converted data value in the base units for the  \nvocabulary.\n"
  overload: Microsoft.Health.VocabularyItemDataConverter.ConvertToBaseUnits*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">vocabularyItem</span> parameter is <strong>null</strong>. \n"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\nThe <span class=\"paramref\">vocabularyItem</span> parameter does not \nsupport conversions to base units.\n"
  - type: Microsoft.Health.ConversionFailureException
    commentId: T:Microsoft.Health.ConversionFailureException
    description: "\nAn unknown or unsupported conversion is encountered or\nan error occurs during the conversion to base units. \n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.VocabularyItemDataConverter.ConvertToBaseUnits*
  commentId: Overload:Microsoft.Health.VocabularyItemDataConverter.ConvertToBaseUnits
  isExternal: false
  name: ConvertToBaseUnits
  nameWithType: VocabularyItemDataConverter.ConvertToBaseUnits
  fullName: Microsoft.Health.VocabularyItemDataConverter.ConvertToBaseUnits
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.NotSupportedException
  commentId: T:System.NotSupportedException
- uid: Microsoft.Health.ConversionFailureException
  commentId: T:Microsoft.Health.ConversionFailureException
  isExternal: false
  name: ConversionFailureException
  nameWithType: ConversionFailureException
  fullName: Microsoft.Health.ConversionFailureException
- uid: Microsoft.Health.VocabularyItem
  commentId: T:Microsoft.Health.VocabularyItem
  parent: Microsoft.Health
  isExternal: false
  name: VocabularyItem
  nameWithType: VocabularyItem
  fullName: Microsoft.Health.VocabularyItem
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
