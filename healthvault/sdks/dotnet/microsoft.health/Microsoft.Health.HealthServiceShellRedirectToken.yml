### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.HealthServiceShellRedirectToken
  commentId: T:Microsoft.Health.HealthServiceShellRedirectToken
  id: HealthServiceShellRedirectToken
  parent: Microsoft.Health
  children:
  - Microsoft.Health.HealthServiceShellRedirectToken.Description
  - Microsoft.Health.HealthServiceShellRedirectToken.QueryStringParameters
  - Microsoft.Health.HealthServiceShellRedirectToken.Token
  langs:
  - csharp
  - vb
  name: HealthServiceShellRedirectToken
  nameWithType: HealthServiceShellRedirectToken
  fullName: Microsoft.Health.HealthServiceShellRedirectToken
  type: Class
  source:
    remote:
      path: Microsoft.Health/HealthServiceShellRedirectToken.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: HealthServiceShellRedirectToken
    path: HealthServiceShellRedirectToken.cs
    startLine: 15
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nRepresents the redirect information that can be supplied along with the Shell redirect \nURL to access specific functionalities in the Shell.\n"
  example: []
  syntax:
    content: public class HealthServiceShellRedirectToken
    content.vb: Public Class HealthServiceShellRedirectToken
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.HealthServiceShellRedirectToken.Token
  commentId: P:Microsoft.Health.HealthServiceShellRedirectToken.Token
  id: Token
  parent: Microsoft.Health.HealthServiceShellRedirectToken
  langs:
  - csharp
  - vb
  name: Token
  nameWithType: HealthServiceShellRedirectToken.Token
  fullName: Microsoft.Health.HealthServiceShellRedirectToken.Token
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthServiceShellRedirectToken.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Token
    path: HealthServiceShellRedirectToken.cs
    startLine: 36
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets a string token used to redirect to specific parts within the \nShell, accessing specific functions. \n"
  example: []
  syntax:
    content: public string Token { get; }
    content.vb: Public ReadOnly Property Token As String
    parameters: []
    return:
      type: System.String
      description: "\nA string representing the redirect token.\n"
  overload: Microsoft.Health.HealthServiceShellRedirectToken.Token*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.HealthServiceShellRedirectToken.Description
  commentId: P:Microsoft.Health.HealthServiceShellRedirectToken.Description
  id: Description
  parent: Microsoft.Health.HealthServiceShellRedirectToken
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: HealthServiceShellRedirectToken.Description
  fullName: Microsoft.Health.HealthServiceShellRedirectToken.Description
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthServiceShellRedirectToken.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Description
    path: HealthServiceShellRedirectToken.cs
    startLine: 51
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets a localized text description of the Shell functionality  \naccessible by using the token. \n"
  example: []
  syntax:
    content: public string Description { get; }
    content.vb: Public ReadOnly Property Description As String
    parameters: []
    return:
      type: System.String
      description: "\nA string representing the Shell functionality description.\n"
  overload: Microsoft.Health.HealthServiceShellRedirectToken.Description*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.HealthServiceShellRedirectToken.QueryStringParameters
  commentId: P:Microsoft.Health.HealthServiceShellRedirectToken.QueryStringParameters
  id: QueryStringParameters
  parent: Microsoft.Health.HealthServiceShellRedirectToken
  langs:
  - csharp
  - vb
  name: QueryStringParameters
  nameWithType: HealthServiceShellRedirectToken.QueryStringParameters
  fullName: Microsoft.Health.HealthServiceShellRedirectToken.QueryStringParameters
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthServiceShellRedirectToken.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: QueryStringParameters
    path: HealthServiceShellRedirectToken.cs
    startLine: 66
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets a collection of parameters that must be supplied in the query \nstring in addition to the redirect token.\n"
  example: []
  syntax:
    content: public ReadOnlyCollection<string> QueryStringParameters { get; }
    content.vb: Public ReadOnly Property QueryStringParameters As ReadOnlyCollection(Of String)
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "\nA read-only collection containing the parameters.\n"
  overload: Microsoft.Health.HealthServiceShellRedirectToken.QueryStringParameters*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.HealthServiceShellRedirectToken.Token*
  commentId: Overload:Microsoft.Health.HealthServiceShellRedirectToken.Token
  isExternal: false
  name: Token
  nameWithType: HealthServiceShellRedirectToken.Token
  fullName: Microsoft.Health.HealthServiceShellRedirectToken.Token
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.HealthServiceShellRedirectToken.Description*
  commentId: Overload:Microsoft.Health.HealthServiceShellRedirectToken.Description
  isExternal: false
  name: Description
  nameWithType: HealthServiceShellRedirectToken.Description
  fullName: Microsoft.Health.HealthServiceShellRedirectToken.Description
- uid: Microsoft.Health.HealthServiceShellRedirectToken.QueryStringParameters*
  commentId: Overload:Microsoft.Health.HealthServiceShellRedirectToken.QueryStringParameters
  isExternal: false
  name: QueryStringParameters
  nameWithType: HealthServiceShellRedirectToken.QueryStringParameters
  fullName: Microsoft.Health.HealthServiceShellRedirectToken.QueryStringParameters
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection{System.String}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<String>
  nameWithType: ReadOnlyCollection<String>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.String>
  nameWithType.vb: ReadOnlyCollection(Of String)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of System.String)
  name.vb: ReadOnlyCollection(Of String)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  nameWithType.vb: ReadOnlyCollection(Of T)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)
  name.vb: ReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
