### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation
  commentId: T:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation
  id: HealthVaultPlatformInformation
  parent: Microsoft.Health.PlatformPrimitives
  children:
  - Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.ClearItemTypeCache
  - Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.DisableMock
  - Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.EnableMock(Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation)
  - Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.GetHealthRecordItemTypeDefinition(System.Collections.Generic.IList{System.Guid},Microsoft.Health.HealthRecordItemTypeSections,System.Collections.Generic.IList{System.String},System.Nullable{System.DateTime},Microsoft.Health.HealthServiceConnection)
  - Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.GetServiceDefinition(Microsoft.Health.HealthServiceConnection)
  - Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.GetServiceDefinition(Microsoft.Health.HealthServiceConnection,Microsoft.Health.ServiceInfoSections)
  - Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.GetServiceDefinition(Microsoft.Health.HealthServiceConnection,Microsoft.Health.ServiceInfoSections,System.DateTime)
  - Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.GetServiceDefinition(Microsoft.Health.HealthServiceConnection,System.DateTime)
  - Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.SelectInstance(Microsoft.Health.HealthServiceConnection,Microsoft.Health.Location)
  langs:
  - csharp
  - vb
  name: HealthVaultPlatformInformation
  nameWithType: HealthVaultPlatformInformation
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation
  type: Class
  source:
    remote:
      path: Microsoft.Health/HealthVaultPlatformInformation.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: HealthVaultPlatformInformation
    path: HealthVaultPlatformInformation.cs
    startLine: 22
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.PlatformPrimitives
  summary: "\nProvides low-level access to the HealthVault message operations.\n"
  remarks: "\n<xref href=\"Microsoft.Health.HealthVaultPlatform\" data-throw-if-not-resolved=\"false\"></xref> uses this class to perform operations. Set \nHealthVaultPlatformInformation.Current to a derived class to intercept all message calls.\n"
  example: []
  syntax:
    content: public class HealthVaultPlatformInformation
    content.vb: Public Class HealthVaultPlatformInformation
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.EnableMock(Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation)
  commentId: M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.EnableMock(Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation)
  id: EnableMock(Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation)
  parent: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation
  langs:
  - csharp
  - vb
  name: EnableMock(HealthVaultPlatformInformation)
  nameWithType: HealthVaultPlatformInformation.EnableMock(HealthVaultPlatformInformation)
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.EnableMock(Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation)
  type: Method
  source:
    remote:
      path: Microsoft.Health/HealthVaultPlatformInformation.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: EnableMock
    path: HealthVaultPlatformInformation.cs
    startLine: 39
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.PlatformPrimitives
  summary: "\nEnables mocking of calls to this class.\n"
  remarks: "\nThe calling class should pass in a class that derives from this\nclass and overrides the calls to be mocked. \n"
  example: []
  syntax:
    content: public static void EnableMock(HealthVaultPlatformInformation mock)
    content.vb: Public Shared Sub EnableMock(mock As HealthVaultPlatformInformation)
    parameters:
    - id: mock
      type: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation
      description: The mocking class.
  overload: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.EnableMock*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nThere is already a mock registered for this class.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.DisableMock
  commentId: M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.DisableMock
  id: DisableMock
  parent: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation
  langs:
  - csharp
  - vb
  name: DisableMock()
  nameWithType: HealthVaultPlatformInformation.DisableMock()
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.DisableMock()
  type: Method
  source:
    remote:
      path: Microsoft.Health/HealthVaultPlatformInformation.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DisableMock
    path: HealthVaultPlatformInformation.cs
    startLine: 55
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.PlatformPrimitives
  summary: "\nRemoves mocking of calls to this class.\n"
  example: []
  syntax:
    content: public static void DisableMock()
    content.vb: Public Shared Sub DisableMock
  overload: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.DisableMock*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nThere is no mock registered for this class.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.GetServiceDefinition(Microsoft.Health.HealthServiceConnection)
  commentId: M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.GetServiceDefinition(Microsoft.Health.HealthServiceConnection)
  id: GetServiceDefinition(Microsoft.Health.HealthServiceConnection)
  parent: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation
  langs:
  - csharp
  - vb
  name: GetServiceDefinition(HealthServiceConnection)
  nameWithType: HealthVaultPlatformInformation.GetServiceDefinition(HealthServiceConnection)
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.GetServiceDefinition(Microsoft.Health.HealthServiceConnection)
  type: Method
  source:
    remote:
      path: Microsoft.Health/HealthVaultPlatformInformation.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetServiceDefinition
    path: HealthVaultPlatformInformation.cs
    startLine: 109
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.PlatformPrimitives
  summary: "\nGets information about the HealthVault service.\n"
  remarks: "\nGets the latest information about the HealthVault service. This \nincludes:<br />\n- The version of the service.<br />\n- The SDK assembly URLs.<br />\n- The SDK assembly versions.<br />\n- The SDK documentation URL.<br />\n- The URL to the HealthVault Shell.<br />\n- The schema definition for the HealthVault method's request and \nresponse.<br />\n- The common schema definitions for types that the HealthVault methods\nuse.<br />\n- Information about all available HealthVault instances.<br />\n"
  example: []
  syntax:
    content: public virtual ServiceInfo GetServiceDefinition(HealthServiceConnection connection)
    content.vb: Public Overridable Function GetServiceDefinition(connection As HealthServiceConnection) As ServiceInfo
    parameters:
    - id: connection
      type: Microsoft.Health.HealthServiceConnection
      description: 'The connection to use to perform the operation. '
    return:
      type: Microsoft.Health.ServiceInfo
      description: "\nA <xref href=\"Microsoft.Health.ServiceInfo\" data-throw-if-not-resolved=\"false\"></xref> instance that contains the service version, SDK\nassemblies versions and URLs, method information, and so on.\n"
  overload: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.GetServiceDefinition*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<span class=\"paramref\">connection</span> is <strong>null</strong>.\n"
  - type: Microsoft.Health.HealthServiceException
    commentId: T:Microsoft.Health.HealthServiceException
    description: "\nThe HealthVault service returned an error.\n"
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "\nOne or more URL strings returned by HealthVault is invalid.\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.GetServiceDefinition(Microsoft.Health.HealthServiceConnection,System.DateTime)
  commentId: M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.GetServiceDefinition(Microsoft.Health.HealthServiceConnection,System.DateTime)
  id: GetServiceDefinition(Microsoft.Health.HealthServiceConnection,System.DateTime)
  parent: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation
  langs:
  - csharp
  - vb
  name: GetServiceDefinition(HealthServiceConnection, DateTime)
  nameWithType: HealthVaultPlatformInformation.GetServiceDefinition(HealthServiceConnection, DateTime)
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.GetServiceDefinition(Microsoft.Health.HealthServiceConnection, System.DateTime)
  type: Method
  source:
    remote:
      path: Microsoft.Health/HealthVaultPlatformInformation.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetServiceDefinition
    path: HealthVaultPlatformInformation.cs
    startLine: 162
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.PlatformPrimitives
  summary: "\nGets information about the HealthVault service only if it has been updated since\nthe specified update time.\n"
  remarks: "\nGets the latest information about the HealthVault service, if there were updates\nsince the specified <span class=\"paramref\">lastUpdatedTime</span>.  If there were no updates\nthe method returns <strong>null</strong>.\nThis includes:<br />\n- The version of the service.<br />\n- The SDK assembly URLs.<br />\n- The SDK assembly versions.<br />\n- The SDK documentation URL.<br />\n- The URL to the HealthVault Shell.<br />\n- The schema definition for the HealthVault method's request and \nresponse.<br />\n- The common schema definitions for types that the HealthVault methods\nuse.<br />\n- Information about all available HealthVault instances.<br />\n"
  example: []
  syntax:
    content: public virtual ServiceInfo GetServiceDefinition(HealthServiceConnection connection, DateTime lastUpdatedTime)
    content.vb: Public Overridable Function GetServiceDefinition(connection As HealthServiceConnection, lastUpdatedTime As Date) As ServiceInfo
    parameters:
    - id: connection
      type: Microsoft.Health.HealthServiceConnection
      description: The connection to use to perform the operation.
    - id: lastUpdatedTime
      type: System.DateTime
      description: "\nThe time of the last update to an existing cached copy of <xref href=\"Microsoft.Health.ServiceInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    return:
      type: Microsoft.Health.ServiceInfo
      description: "\nIf there were updates to the service information since the specified <span class=\"paramref\">lastUpdatedTime</span>,\na <xref href=\"Microsoft.Health.ServiceInfo\" data-throw-if-not-resolved=\"false\"></xref> instance that contains the service version, SDK\nassemblies versions and URLs, method information, and so on.  Otherwise, if there were no updates,\nreturns <strong>null</strong>.\n"
  overload: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.GetServiceDefinition*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<span class=\"paramref\">connection</span> is <strong>null</strong>.\n"
  - type: Microsoft.Health.HealthServiceException
    commentId: T:Microsoft.Health.HealthServiceException
    description: "\nThe HealthVault service returned an error.\n"
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "\nOne or more URL strings returned by HealthVault is invalid.\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.GetServiceDefinition(Microsoft.Health.HealthServiceConnection,Microsoft.Health.ServiceInfoSections)
  commentId: M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.GetServiceDefinition(Microsoft.Health.HealthServiceConnection,Microsoft.Health.ServiceInfoSections)
  id: GetServiceDefinition(Microsoft.Health.HealthServiceConnection,Microsoft.Health.ServiceInfoSections)
  parent: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation
  langs:
  - csharp
  - vb
  name: GetServiceDefinition(HealthServiceConnection, ServiceInfoSections)
  nameWithType: HealthVaultPlatformInformation.GetServiceDefinition(HealthServiceConnection, ServiceInfoSections)
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.GetServiceDefinition(Microsoft.Health.HealthServiceConnection, Microsoft.Health.ServiceInfoSections)
  type: Method
  source:
    remote:
      path: Microsoft.Health/HealthVaultPlatformInformation.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetServiceDefinition
    path: HealthVaultPlatformInformation.cs
    startLine: 228
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.PlatformPrimitives
  summary: "\nGets information about the HealthVault service corresponding to the specified\ncategories.\n"
  remarks: "\nGets the latest information about the HealthVault service. Depending on the specified\n<span class=\"paramref\">responseSections</span>, this will include some or all of:<br />\n- The version of the service.<br />\n- The SDK assembly URLs.<br />\n- The SDK assembly versions.<br />\n- The SDK documentation URL.<br />\n- The URL to the HealthVault Shell.<br />\n- The schema definition for the HealthVault method's request and \n  response.<br />\n- The common schema definitions for types that the HealthVault methods\n  use.<br />\n- Information about all available HealthVault instances.<br />\n\nRetrieving only the sections you need will give a faster response time than\ndownloading the full response.\n"
  example: []
  syntax:
    content: public virtual ServiceInfo GetServiceDefinition(HealthServiceConnection connection, ServiceInfoSections responseSections)
    content.vb: Public Overridable Function GetServiceDefinition(connection As HealthServiceConnection, responseSections As ServiceInfoSections) As ServiceInfo
    parameters:
    - id: connection
      type: Microsoft.Health.HealthServiceConnection
      description: The connection to use to perform the operation.
    - id: responseSections
      type: Microsoft.Health.ServiceInfoSections
      description: "\nA bitmask of one or more <xref href=\"Microsoft.Health.ServiceInfoSections\" data-throw-if-not-resolved=\"false\"></xref> which specify the\ncategories of information to be populated in the <xref href=\"Microsoft.Health.ServiceInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    return:
      type: Microsoft.Health.ServiceInfo
      description: "\nA <xref href=\"Microsoft.Health.ServiceInfo\" data-throw-if-not-resolved=\"false\"></xref> instance that contains some or all of the service version,\nSDK assemblies versions and URLs, method information, and so on, depending on which\ninformation categories were specified.\n"
  overload: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.GetServiceDefinition*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<span class=\"paramref\">connection</span> is <strong>null</strong>.\n"
  - type: Microsoft.Health.HealthServiceException
    commentId: T:Microsoft.Health.HealthServiceException
    description: "\nThe HealthVault service returned an error.\n"
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "\nOne or more URL strings returned by HealthVault is invalid.\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.GetServiceDefinition(Microsoft.Health.HealthServiceConnection,Microsoft.Health.ServiceInfoSections,System.DateTime)
  commentId: M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.GetServiceDefinition(Microsoft.Health.HealthServiceConnection,Microsoft.Health.ServiceInfoSections,System.DateTime)
  id: GetServiceDefinition(Microsoft.Health.HealthServiceConnection,Microsoft.Health.ServiceInfoSections,System.DateTime)
  parent: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation
  langs:
  - csharp
  - vb
  name: GetServiceDefinition(HealthServiceConnection, ServiceInfoSections, DateTime)
  nameWithType: HealthVaultPlatformInformation.GetServiceDefinition(HealthServiceConnection, ServiceInfoSections, DateTime)
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.GetServiceDefinition(Microsoft.Health.HealthServiceConnection, Microsoft.Health.ServiceInfoSections, System.DateTime)
  type: Method
  source:
    remote:
      path: Microsoft.Health/HealthVaultPlatformInformation.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetServiceDefinition
    path: HealthVaultPlatformInformation.cs
    startLine: 295
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.PlatformPrimitives
  summary: "\nGets information about the HealthVault service corresponding to the specified\ncategories if the requested information has been updated since the specified\nupdate time.\n"
  remarks: "\nGets the latest information about the HealthVault service, if there were updates\nsince the specified <span class=\"paramref\">lastUpdatedTime</span>.  If there were no updates\nthe method returns <strong>null</strong>.\nDepending on the specified\n<span class=\"paramref\">responseSections</span>, this will include some or all of:<br />\n- The version of the service.<br />\n- The SDK assembly URLs.<br />\n- The SDK assembly versions.<br />\n- The SDK documentation URL.<br />\n- The URL to the HealthVault Shell.<br />\n- The schema definition for the HealthVault method's request and \n  response.<br />\n- The common schema definitions for types that the HealthVault methods\n  use.<br />\n- Information about all available HealthVault instances.<br />\n\nRetrieving only the sections you need will give a faster response time than\ndownloading the full response.\n"
  example: []
  syntax:
    content: public virtual ServiceInfo GetServiceDefinition(HealthServiceConnection connection, ServiceInfoSections responseSections, DateTime lastUpdatedTime)
    content.vb: Public Overridable Function GetServiceDefinition(connection As HealthServiceConnection, responseSections As ServiceInfoSections, lastUpdatedTime As Date) As ServiceInfo
    parameters:
    - id: connection
      type: Microsoft.Health.HealthServiceConnection
      description: The connection to use to perform the operation.
    - id: responseSections
      type: Microsoft.Health.ServiceInfoSections
      description: "\nA bitmask of one or more <xref href=\"Microsoft.Health.ServiceInfoSections\" data-throw-if-not-resolved=\"false\"></xref> which specify the\ncategories of information to be populated in the <xref href=\"Microsoft.Health.ServiceInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    - id: lastUpdatedTime
      type: System.DateTime
      description: "\nThe time of the last update to an existing cached copy of <xref href=\"Microsoft.Health.ServiceInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    return:
      type: Microsoft.Health.ServiceInfo
      description: "\nIf there were updates to the service information since the specified <span class=\"paramref\">lastUpdatedTime</span>,\na <xref href=\"Microsoft.Health.ServiceInfo\" data-throw-if-not-resolved=\"false\"></xref> instance that contains some or all of the service version,\nSDK  assemblies versions and URLs, method information, and so on, depending on which\ninformation categories were specified.  Otherwise, if there were no updates, returns\n<strong>null</strong>.\n"
  overload: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.GetServiceDefinition*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<span class=\"paramref\">connection</span> is <strong>null</strong>.\n"
  - type: Microsoft.Health.HealthServiceException
    commentId: T:Microsoft.Health.HealthServiceException
    description: "\nThe HealthVault service returned an error.\n"
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "\nOne or more URL strings returned by HealthVault is invalid.\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.ClearItemTypeCache
  commentId: M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.ClearItemTypeCache
  id: ClearItemTypeCache
  parent: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation
  langs:
  - csharp
  - vb
  name: ClearItemTypeCache()
  nameWithType: HealthVaultPlatformInformation.ClearItemTypeCache()
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.ClearItemTypeCache()
  type: Method
  source:
    remote:
      path: Microsoft.Health/HealthVaultPlatformInformation.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ClearItemTypeCache
    path: HealthVaultPlatformInformation.cs
    startLine: 385
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.PlatformPrimitives
  summary: "\nRemoves all item type definitions from the client-side cache.\n"
  example: []
  syntax:
    content: public virtual void ClearItemTypeCache()
    content.vb: Public Overridable Sub ClearItemTypeCache
  overload: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.ClearItemTypeCache*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.GetHealthRecordItemTypeDefinition(System.Collections.Generic.IList{System.Guid},Microsoft.Health.HealthRecordItemTypeSections,System.Collections.Generic.IList{System.String},System.Nullable{System.DateTime},Microsoft.Health.HealthServiceConnection)
  commentId: M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.GetHealthRecordItemTypeDefinition(System.Collections.Generic.IList{System.Guid},Microsoft.Health.HealthRecordItemTypeSections,System.Collections.Generic.IList{System.String},System.Nullable{System.DateTime},Microsoft.Health.HealthServiceConnection)
  id: GetHealthRecordItemTypeDefinition(System.Collections.Generic.IList{System.Guid},Microsoft.Health.HealthRecordItemTypeSections,System.Collections.Generic.IList{System.String},System.Nullable{System.DateTime},Microsoft.Health.HealthServiceConnection)
  parent: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation
  langs:
  - csharp
  - vb
  name: GetHealthRecordItemTypeDefinition(IList<Guid>, HealthRecordItemTypeSections, IList<String>, Nullable<DateTime>, HealthServiceConnection)
  nameWithType: HealthVaultPlatformInformation.GetHealthRecordItemTypeDefinition(IList<Guid>, HealthRecordItemTypeSections, IList<String>, Nullable<DateTime>, HealthServiceConnection)
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.GetHealthRecordItemTypeDefinition(System.Collections.Generic.IList<System.Guid>, Microsoft.Health.HealthRecordItemTypeSections, System.Collections.Generic.IList<System.String>, System.Nullable<System.DateTime>, Microsoft.Health.HealthServiceConnection)
  type: Method
  source:
    remote:
      path: Microsoft.Health/HealthVaultPlatformInformation.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetHealthRecordItemTypeDefinition
    path: HealthVaultPlatformInformation.cs
    startLine: 453
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.PlatformPrimitives
  summary: "\nGets the definitions for one or more health record item type definitions\nsupported by HealthVault.\n"
  remarks: "\nThis method calls the HealthVault service if the types are not\nalready in the client-side cache.\n"
  example: []
  syntax:
    content: public virtual IDictionary<Guid, HealthRecordItemTypeDefinition> GetHealthRecordItemTypeDefinition(IList<Guid> typeIds, HealthRecordItemTypeSections sections, IList<string> imageTypes, DateTime? lastClientRefreshDate, HealthServiceConnection connection)
    content.vb: Public Overridable Function GetHealthRecordItemTypeDefinition(typeIds As IList(Of Guid), sections As HealthRecordItemTypeSections, imageTypes As IList(Of String), lastClientRefreshDate As Date?, connection As HealthServiceConnection) As IDictionary(Of Guid, HealthRecordItemTypeDefinition)
    parameters:
    - id: typeIds
      type: System.Collections.Generic.IList{System.Guid}
      description: "\nA collection of health item type IDs whose details are being requested. Null \nindicates that all health item types should be returned.\n"
    - id: sections
      type: Microsoft.Health.HealthRecordItemTypeSections
      description: "\nA collection of HealthRecordItemTypeSections enumeration values that indicate the type \nof details to be returned for the specified health item records(s).\n"
    - id: imageTypes
      type: System.Collections.Generic.IList{System.String}
      description: "\nA collection of strings that identify which health item record images should be \nretrieved.\n\nThis requests an image of the specified mime type should be returned. For example, \nto request a GIF image, \"image/gif\" should be specified. For icons, \"image/vnd.microsoft.icon\" \nshould be specified. Note, not all health item records will have all image types and \nsome may not have any images at all.\n\nIf '*' is specified, all image types will be returned.\n"
    - id: lastClientRefreshDate
      type: System.Nullable{System.DateTime}
      description: "\nA <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> instance that specifies the time of the last refresh\nmade by the client.\n"
    - id: connection
      type: Microsoft.Health.HealthServiceConnection
      description: "\nA connection to the HealthVault service.\n"
    return:
      type: System.Collections.Generic.IDictionary{System.Guid,Microsoft.Health.HealthRecordItemTypeDefinition}
      description: "\nThe type definitions for the specified types, or empty if the\n<span class=\"paramref\">typeIds</span> parameter does not represent a known unique\ntype identifier.\n"
  overload: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.GetHealthRecordItemTypeDefinition*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nIf <span class=\"paramref\">typeIds</span> is <strong>null</strong> and empty, or \n<span class=\"paramref\">typeIds</span> is <strong>null</strong> and member in <span class=\"paramref\">typeIds</span> is \n<xref href=\"System.Guid.Empty\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nIf <span class=\"paramref\">connection</span> parameter is <strong>null</strong>.\n"
  nameWithType.vb: HealthVaultPlatformInformation.GetHealthRecordItemTypeDefinition(IList(Of Guid), HealthRecordItemTypeSections, IList(Of String), Nullable(Of DateTime), HealthServiceConnection)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.GetHealthRecordItemTypeDefinition(System.Collections.Generic.IList(Of System.Guid), Microsoft.Health.HealthRecordItemTypeSections, System.Collections.Generic.IList(Of System.String), System.Nullable(Of System.DateTime), Microsoft.Health.HealthServiceConnection)
  name.vb: GetHealthRecordItemTypeDefinition(IList(Of Guid), HealthRecordItemTypeSections, IList(Of String), Nullable(Of DateTime), HealthServiceConnection)
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.SelectInstance(Microsoft.Health.HealthServiceConnection,Microsoft.Health.Location)
  commentId: M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.SelectInstance(Microsoft.Health.HealthServiceConnection,Microsoft.Health.Location)
  id: SelectInstance(Microsoft.Health.HealthServiceConnection,Microsoft.Health.Location)
  parent: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation
  langs:
  - csharp
  - vb
  name: SelectInstance(HealthServiceConnection, Location)
  nameWithType: HealthVaultPlatformInformation.SelectInstance(HealthServiceConnection, Location)
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.SelectInstance(Microsoft.Health.HealthServiceConnection, Microsoft.Health.Location)
  type: Method
  source:
    remote:
      path: Microsoft.Health/HealthVaultPlatformInformation.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SelectInstance
    path: HealthVaultPlatformInformation.cs
    startLine: 826
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.PlatformPrimitives
  summary: "\nGets the instance where a HealthVault account should be created\nfor the specified account location.\n"
  remarks: "\nIf no suitable instance can be found, a null value is returned. This can happen,\nfor example, if the account location is not supported by HealthVault.\n\nCurrently the returned instance IDs all parse to integers, but that is not\nguaranteed and should not be relied upon.\n"
  example: []
  syntax:
    content: public virtual HealthServiceInstance SelectInstance(HealthServiceConnection connection, Location preferredLocation)
    content.vb: Public Overridable Function SelectInstance(connection As HealthServiceConnection, preferredLocation As Location) As HealthServiceInstance
    parameters:
    - id: connection
      type: Microsoft.Health.HealthServiceConnection
      description: "\nThe connection to use to perform the operation.\n"
    - id: preferredLocation
      type: Microsoft.Health.Location
      description: "\nA user's preferred geographical location, used to select the best instance\nin which to create a new HealthVault account. If there is a location associated\nwith the credential that will be used to log into the account, that location\nshould be used.\n"
    return:
      type: Microsoft.Health.HealthServiceInstance
      description: "\nA <xref href=\"Microsoft.Health.HealthServiceInstance\" data-throw-if-not-resolved=\"false\"></xref> object represents the selected instance,\nor null if no suitable instance exists.\n"
  overload: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.SelectInstance*
  exceptions:
  - type: Microsoft.Health.HealthServiceException
    commentId: T:Microsoft.Health.HealthServiceException
    description: "\nThe HealthVault service returned an error.\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nIf <span class=\"paramref\">preferredLocation</span> is <strong>null</strong>.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nIf <span class=\"paramref\">connection</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Health.HealthVaultPlatform
  commentId: T:Microsoft.Health.HealthVaultPlatform
  isExternal: false
  name: HealthVaultPlatform
  nameWithType: HealthVaultPlatform
  fullName: Microsoft.Health.HealthVaultPlatform
- uid: Microsoft.Health.PlatformPrimitives
  commentId: N:Microsoft.Health.PlatformPrimitives
  isExternal: false
  name: Microsoft.Health.PlatformPrimitives
  nameWithType: Microsoft.Health.PlatformPrimitives
  fullName: Microsoft.Health.PlatformPrimitives
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.EnableMock*
  commentId: Overload:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.EnableMock
  isExternal: false
  name: EnableMock
  nameWithType: HealthVaultPlatformInformation.EnableMock
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.EnableMock
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation
  commentId: T:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation
  parent: Microsoft.Health.PlatformPrimitives
  isExternal: false
  name: HealthVaultPlatformInformation
  nameWithType: HealthVaultPlatformInformation
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.DisableMock*
  commentId: Overload:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.DisableMock
  isExternal: false
  name: DisableMock
  nameWithType: HealthVaultPlatformInformation.DisableMock
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.DisableMock
- uid: Microsoft.Health.ServiceInfo
  commentId: T:Microsoft.Health.ServiceInfo
  parent: Microsoft.Health
  isExternal: false
  name: ServiceInfo
  nameWithType: ServiceInfo
  fullName: Microsoft.Health.ServiceInfo
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.GetServiceDefinition*
  commentId: Overload:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.GetServiceDefinition
  isExternal: false
  name: GetServiceDefinition
  nameWithType: HealthVaultPlatformInformation.GetServiceDefinition
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.GetServiceDefinition
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: Microsoft.Health.HealthServiceException
  commentId: T:Microsoft.Health.HealthServiceException
  parent: Microsoft.Health
  isExternal: false
  name: HealthServiceException
  nameWithType: HealthServiceException
  fullName: Microsoft.Health.HealthServiceException
- uid: System.UriFormatException
  commentId: T:System.UriFormatException
- uid: Microsoft.Health.HealthServiceConnection
  commentId: T:Microsoft.Health.HealthServiceConnection
  parent: Microsoft.Health
  isExternal: false
  name: HealthServiceConnection
  nameWithType: HealthServiceConnection
  fullName: Microsoft.Health.HealthServiceConnection
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Microsoft.Health.ServiceInfoSections
  commentId: T:Microsoft.Health.ServiceInfoSections
  parent: Microsoft.Health
  isExternal: false
  name: ServiceInfoSections
  nameWithType: ServiceInfoSections
  fullName: Microsoft.Health.ServiceInfoSections
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.ClearItemTypeCache*
  commentId: Overload:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.ClearItemTypeCache
  isExternal: false
  name: ClearItemTypeCache
  nameWithType: HealthVaultPlatformInformation.ClearItemTypeCache
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.ClearItemTypeCache
- uid: System.Guid.Empty
  commentId: F:System.Guid.Empty
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.GetHealthRecordItemTypeDefinition*
  commentId: Overload:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.GetHealthRecordItemTypeDefinition
  isExternal: false
  name: GetHealthRecordItemTypeDefinition
  nameWithType: HealthVaultPlatformInformation.GetHealthRecordItemTypeDefinition
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.GetHealthRecordItemTypeDefinition
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: System.Collections.Generic.IList{System.Guid}
  commentId: T:System.Collections.Generic.IList{System.Guid}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Guid>
  nameWithType: IList<Guid>
  fullName: System.Collections.Generic.IList<System.Guid>
  nameWithType.vb: IList(Of Guid)
  fullName.vb: System.Collections.Generic.IList(Of System.Guid)
  name.vb: IList(Of Guid)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItemTypeSections
  commentId: T:Microsoft.Health.HealthRecordItemTypeSections
  parent: Microsoft.Health
  isExternal: false
  name: HealthRecordItemTypeSections
  nameWithType: HealthRecordItemTypeSections
  fullName: Microsoft.Health.HealthRecordItemTypeSections
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.Guid,Microsoft.Health.HealthRecordItemTypeDefinition}
  commentId: T:System.Collections.Generic.IDictionary{System.Guid,Microsoft.Health.HealthRecordItemTypeDefinition}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<Guid, HealthRecordItemTypeDefinition>
  nameWithType: IDictionary<Guid, HealthRecordItemTypeDefinition>
  fullName: System.Collections.Generic.IDictionary<System.Guid, Microsoft.Health.HealthRecordItemTypeDefinition>
  nameWithType.vb: IDictionary(Of Guid, HealthRecordItemTypeDefinition)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.Guid, Microsoft.Health.HealthRecordItemTypeDefinition)
  name.vb: IDictionary(Of Guid, HealthRecordItemTypeDefinition)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.HealthRecordItemTypeDefinition
    name: HealthRecordItemTypeDefinition
    nameWithType: HealthRecordItemTypeDefinition
    fullName: Microsoft.Health.HealthRecordItemTypeDefinition
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.HealthRecordItemTypeDefinition
    name: HealthRecordItemTypeDefinition
    nameWithType: HealthRecordItemTypeDefinition
    fullName: Microsoft.Health.HealthRecordItemTypeDefinition
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthServiceInstance
  commentId: T:Microsoft.Health.HealthServiceInstance
  parent: Microsoft.Health
  isExternal: false
  name: HealthServiceInstance
  nameWithType: HealthServiceInstance
  fullName: Microsoft.Health.HealthServiceInstance
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.SelectInstance*
  commentId: Overload:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.SelectInstance
  isExternal: false
  name: SelectInstance
  nameWithType: HealthVaultPlatformInformation.SelectInstance
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformInformation.SelectInstance
- uid: Microsoft.Health.Location
  commentId: T:Microsoft.Health.Location
  parent: Microsoft.Health
  isExternal: false
  name: Location
  nameWithType: Location
  fullName: Microsoft.Health.Location
