### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv
  commentId: T:Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv
  id: OtherItemDataCsv
  parent: Microsoft.Health.ItemTypes.Csv
  children:
  - Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.#ctor
  - Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.#ctor(System.String,System.String,System.String)
  - Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.GetAsDouble
  - Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.GetAsString
  - Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.SetOtherData(System.Collections.Generic.IList{Microsoft.Health.ItemTypes.Csv.OtherItemDataCsvItem})
  langs:
  - csharp
  - vb
  name: OtherItemDataCsv
  nameWithType: OtherItemDataCsv
  fullName: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv
  type: Class
  source:
    remote:
      path: Microsoft.Health/OtherItemDataCSV.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: OtherItemDataCsv
    path: OtherItemDataCSV.cs
    startLine: 21
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.ItemTypes.Csv
  summary: "\nThe OtherItemDataCSV class is used to store and retrieve data stored in the HealthVault\ncomma-separated format.\n"
  remarks: "\nIt is not used directly but through a derived class that is specific to a health record item type -\nfor example, the ExerciseSamplesData class. \n"
  example: []
  syntax:
    content: 'public abstract class OtherItemDataCsv : OtherItemData'
    content.vb: >-
      Public MustInherit Class OtherItemDataCsv
          Inherits OtherItemData
  inheritance:
  - System.Object
  - Microsoft.Health.OtherItemData
  inheritedMembers:
  - Microsoft.Health.OtherItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  - Microsoft.Health.OtherItemData.WriteXml(System.Xml.XmlWriter)
  - Microsoft.Health.OtherItemData.Data
  - Microsoft.Health.OtherItemData.ContentType
  - Microsoft.Health.OtherItemData.ContentEncoding
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.#ctor
  commentId: M:Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.#ctor
  id: '#ctor'
  parent: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv
  langs:
  - csharp
  - vb
  name: OtherItemDataCsv()
  nameWithType: OtherItemDataCsv.OtherItemDataCsv()
  fullName: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.OtherItemDataCsv()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/OtherItemDataCSV.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: OtherItemDataCSV.cs
    startLine: 26
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.ItemTypes.Csv
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv\" data-throw-if-not-resolved=\"false\"></xref> class \n"
  example: []
  syntax:
    content: protected OtherItemDataCsv()
    content.vb: Protected Sub New
  overload: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.#ctor(System.String,System.String,System.String)
  commentId: M:Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv
  langs:
  - csharp
  - vb
  name: OtherItemDataCsv(String, String, String)
  nameWithType: OtherItemDataCsv.OtherItemDataCsv(String, String, String)
  fullName: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.OtherItemDataCsv(System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/OtherItemDataCSV.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: OtherItemDataCSV.cs
    startLine: 49
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.ItemTypes.Csv
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv\" data-throw-if-not-resolved=\"false\"></xref> class \nwith the specified data, encoding, and content type.\n"
  example: []
  syntax:
    content: protected OtherItemDataCsv(string data, string contentEncoding, string contentType)
    content.vb: Protected Sub New(data As String, contentEncoding As String, contentType As String)
    parameters:
    - id: data
      type: System.String
      description: "\nThe data to store in the other data section of the health record\nitem.\n"
    - id: contentEncoding
      type: System.String
      description: "\nThe type of encoding that was done on the data. Usually this will\nbe \"base64\" but other encodings are acceptable.\n"
    - id: contentType
      type: System.String
      description: "\nThe MIME-content type of the data.\n"
  overload: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.GetAsString
  commentId: M:Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.GetAsString
  id: GetAsString
  parent: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv
  langs:
  - csharp
  - vb
  name: GetAsString()
  nameWithType: OtherItemDataCsv.GetAsString()
  fullName: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.GetAsString()
  type: Method
  source:
    remote:
      path: Microsoft.Health/OtherItemDataCSV.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetAsString
    path: OtherItemDataCSV.cs
    startLine: 116
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.ItemTypes.Csv
  summary: "\nParse the comma-separated representation into an array of strings.\n"
  remarks: "\nWhen this method returns, the Escapes collection will contain any \nescapes encountered during the parsing. \n"
  example: []
  syntax:
    content: protected Collection<OtherItemDataCsvItem> GetAsString()
    content.vb: Protected Function GetAsString As Collection(Of OtherItemDataCsvItem)
    return:
      type: System.Collections.ObjectModel.Collection{Microsoft.Health.ItemTypes.Csv.OtherItemDataCsvItem}
      description: A collection of the strings.
  overload: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.GetAsString*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nIf the content type is not \"text/csv\".\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nIf the Data section is null.\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.GetAsDouble
  commentId: M:Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.GetAsDouble
  id: GetAsDouble
  parent: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv
  langs:
  - csharp
  - vb
  name: GetAsDouble()
  nameWithType: OtherItemDataCsv.GetAsDouble()
  fullName: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.GetAsDouble()
  type: Method
  source:
    remote:
      path: Microsoft.Health/OtherItemDataCSV.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetAsDouble
    path: OtherItemDataCSV.cs
    startLine: 167
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.ItemTypes.Csv
  summary: "\nParses the comma-delimited data into a series of double values. \n"
  remarks: "\nThe collection contains two kinds of values.\nOtherItemDataCsvDouble items contain double values\nOtherItemDataCsvEscape items contain escapes\n"
  example: []
  syntax:
    content: protected Collection<OtherItemDataCsvItem> GetAsDouble()
    content.vb: Protected Function GetAsDouble As Collection(Of OtherItemDataCsvItem)
    return:
      type: System.Collections.ObjectModel.Collection{Microsoft.Health.ItemTypes.Csv.OtherItemDataCsvItem}
      description: A collection of OtherItemDataCsvItem
  overload: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.GetAsDouble*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.SetOtherData(System.Collections.Generic.IList{Microsoft.Health.ItemTypes.Csv.OtherItemDataCsvItem})
  commentId: M:Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.SetOtherData(System.Collections.Generic.IList{Microsoft.Health.ItemTypes.Csv.OtherItemDataCsvItem})
  id: SetOtherData(System.Collections.Generic.IList{Microsoft.Health.ItemTypes.Csv.OtherItemDataCsvItem})
  parent: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv
  langs:
  - csharp
  - vb
  name: SetOtherData(IList<OtherItemDataCsvItem>)
  nameWithType: OtherItemDataCsv.SetOtherData(IList<OtherItemDataCsvItem>)
  fullName: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.SetOtherData(System.Collections.Generic.IList<Microsoft.Health.ItemTypes.Csv.OtherItemDataCsvItem>)
  type: Method
  source:
    remote:
      path: Microsoft.Health/OtherItemDataCSV.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SetOtherData
    path: OtherItemDataCSV.cs
    startLine: 208
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.ItemTypes.Csv
  summary: "\nCreate the comma-delimited representation of a set of data and escapes. \n"
  remarks: "\nThe escapes are inserted into the comma-delimited list in the appropriate places. \nAny escape that occurs after the last element is ignored.\n"
  example: []
  syntax:
    content: protected void SetOtherData(IList<OtherItemDataCsvItem> values)
    content.vb: Protected Sub SetOtherData(values As IList(Of OtherItemDataCsvItem))
    parameters:
    - id: values
      type: System.Collections.Generic.IList{Microsoft.Health.ItemTypes.Csv.OtherItemDataCsvItem}
      description: The collection of values to store.
  overload: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.SetOtherData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nIf the parameter <span class=\"paramref\">values</span> is null.\n"
  nameWithType.vb: OtherItemDataCsv.SetOtherData(IList(Of OtherItemDataCsvItem))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.SetOtherData(System.Collections.Generic.IList(Of Microsoft.Health.ItemTypes.Csv.OtherItemDataCsvItem))
  name.vb: SetOtherData(IList(Of OtherItemDataCsvItem))
references:
- uid: Microsoft.Health.ItemTypes.Csv
  commentId: N:Microsoft.Health.ItemTypes.Csv
  isExternal: false
  name: Microsoft.Health.ItemTypes.Csv
  nameWithType: Microsoft.Health.ItemTypes.Csv
  fullName: Microsoft.Health.ItemTypes.Csv
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.OtherItemData
  commentId: T:Microsoft.Health.OtherItemData
  parent: Microsoft.Health
  isExternal: false
  name: OtherItemData
  nameWithType: OtherItemData
  fullName: Microsoft.Health.OtherItemData
- uid: Microsoft.Health.OtherItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.OtherItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.OtherItemData
  isExternal: true
  name: ParseXml(XPathNavigator)
  nameWithType: OtherItemData.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.OtherItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  spec.csharp:
  - uid: Microsoft.Health.OtherItemData.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: OtherItemData.ParseXml
    fullName: Microsoft.Health.OtherItemData.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.OtherItemData.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: OtherItemData.ParseXml
    fullName: Microsoft.Health.OtherItemData.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.OtherItemData.WriteXml(System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.OtherItemData.WriteXml(System.Xml.XmlWriter)
  parent: Microsoft.Health.OtherItemData
  isExternal: true
  name: WriteXml(XmlWriter)
  nameWithType: OtherItemData.WriteXml(XmlWriter)
  fullName: Microsoft.Health.OtherItemData.WriteXml(System.Xml.XmlWriter)
  spec.csharp:
  - uid: Microsoft.Health.OtherItemData.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: OtherItemData.WriteXml
    fullName: Microsoft.Health.OtherItemData.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.OtherItemData.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: OtherItemData.WriteXml
    fullName: Microsoft.Health.OtherItemData.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.OtherItemData.Data
  commentId: P:Microsoft.Health.OtherItemData.Data
  parent: Microsoft.Health.OtherItemData
  isExternal: false
  name: Data
  nameWithType: OtherItemData.Data
  fullName: Microsoft.Health.OtherItemData.Data
- uid: Microsoft.Health.OtherItemData.ContentType
  commentId: P:Microsoft.Health.OtherItemData.ContentType
  parent: Microsoft.Health.OtherItemData
  isExternal: false
  name: ContentType
  nameWithType: OtherItemData.ContentType
  fullName: Microsoft.Health.OtherItemData.ContentType
- uid: Microsoft.Health.OtherItemData.ContentEncoding
  commentId: P:Microsoft.Health.OtherItemData.ContentEncoding
  parent: Microsoft.Health.OtherItemData
  isExternal: false
  name: ContentEncoding
  nameWithType: OtherItemData.ContentEncoding
  fullName: Microsoft.Health.OtherItemData.ContentEncoding
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv
  commentId: T:Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv
  isExternal: false
  name: OtherItemDataCsv
  nameWithType: OtherItemDataCsv
  fullName: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv
- uid: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.#ctor*
  commentId: Overload:Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.#ctor
  isExternal: false
  name: OtherItemDataCsv
  nameWithType: OtherItemDataCsv.OtherItemDataCsv
  fullName: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.OtherItemDataCsv
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.GetAsString*
  commentId: Overload:Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.GetAsString
  isExternal: false
  name: GetAsString
  nameWithType: OtherItemDataCsv.GetAsString
  fullName: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.GetAsString
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.Collections.ObjectModel.Collection{Microsoft.Health.ItemTypes.Csv.OtherItemDataCsvItem}
  commentId: T:System.Collections.ObjectModel.Collection{Microsoft.Health.ItemTypes.Csv.OtherItemDataCsvItem}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<OtherItemDataCsvItem>
  nameWithType: Collection<OtherItemDataCsvItem>
  fullName: System.Collections.ObjectModel.Collection<Microsoft.Health.ItemTypes.Csv.OtherItemDataCsvItem>
  nameWithType.vb: Collection(Of OtherItemDataCsvItem)
  fullName.vb: System.Collections.ObjectModel.Collection(Of Microsoft.Health.ItemTypes.Csv.OtherItemDataCsvItem)
  name.vb: Collection(Of OtherItemDataCsvItem)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsvItem
    name: OtherItemDataCsvItem
    nameWithType: OtherItemDataCsvItem
    fullName: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsvItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsvItem
    name: OtherItemDataCsvItem
    nameWithType: OtherItemDataCsvItem
    fullName: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsvItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1
  commentId: T:System.Collections.ObjectModel.Collection`1
  isExternal: true
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  nameWithType.vb: Collection(Of T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T)
  name.vb: Collection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.GetAsDouble*
  commentId: Overload:Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.GetAsDouble
  isExternal: false
  name: GetAsDouble
  nameWithType: OtherItemDataCsv.GetAsDouble
  fullName: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.GetAsDouble
- uid: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.SetOtherData*
  commentId: Overload:Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.SetOtherData
  isExternal: false
  name: SetOtherData
  nameWithType: OtherItemDataCsv.SetOtherData
  fullName: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsv.SetOtherData
- uid: System.Collections.Generic.IList{Microsoft.Health.ItemTypes.Csv.OtherItemDataCsvItem}
  commentId: T:System.Collections.Generic.IList{Microsoft.Health.ItemTypes.Csv.OtherItemDataCsvItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<OtherItemDataCsvItem>
  nameWithType: IList<OtherItemDataCsvItem>
  fullName: System.Collections.Generic.IList<Microsoft.Health.ItemTypes.Csv.OtherItemDataCsvItem>
  nameWithType.vb: IList(Of OtherItemDataCsvItem)
  fullName.vb: System.Collections.Generic.IList(Of Microsoft.Health.ItemTypes.Csv.OtherItemDataCsvItem)
  name.vb: IList(Of OtherItemDataCsvItem)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsvItem
    name: OtherItemDataCsvItem
    nameWithType: OtherItemDataCsvItem
    fullName: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsvItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsvItem
    name: OtherItemDataCsvItem
    nameWithType: OtherItemDataCsvItem
    fullName: Microsoft.Health.ItemTypes.Csv.OtherItemDataCsvItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
