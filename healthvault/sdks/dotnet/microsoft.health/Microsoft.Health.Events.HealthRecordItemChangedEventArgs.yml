### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Events.HealthRecordItemChangedEventArgs
  commentId: T:Microsoft.Health.Events.HealthRecordItemChangedEventArgs
  id: HealthRecordItemChangedEventArgs
  parent: Microsoft.Health.Events
  children:
  - Microsoft.Health.Events.HealthRecordItemChangedEventArgs.ChangedItems
  - Microsoft.Health.Events.HealthRecordItemChangedEventArgs.Common
  - Microsoft.Health.Events.HealthRecordItemChangedEventArgs.GetItems
  - Microsoft.Health.Events.HealthRecordItemChangedEventArgs.GetItems(Microsoft.Health.HealthServiceConnection)
  - Microsoft.Health.Events.HealthRecordItemChangedEventArgs.GetItems(System.Guid,System.String)
  - Microsoft.Health.Events.HealthRecordItemChangedEventArgs.PersonId
  - Microsoft.Health.Events.HealthRecordItemChangedEventArgs.RecordId
  langs:
  - csharp
  - vb
  name: HealthRecordItemChangedEventArgs
  nameWithType: HealthRecordItemChangedEventArgs
  fullName: Microsoft.Health.Events.HealthRecordItemChangedEventArgs
  type: Class
  source:
    remote:
      path: Microsoft.Health/Eventing/HealthRecordItemChangedEventArgs.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: HealthRecordItemChangedEventArgs
    path: Eventing/HealthRecordItemChangedEventArgs.cs
    startLine: 16
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Events
  summary: "\nInformation describing a health record item changed notification.\n"
  example: []
  syntax:
    content: 'public class HealthRecordItemChangedEventArgs : EventArgs'
    content.vb: >-
      Public Class HealthRecordItemChangedEventArgs
          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.Events.HealthRecordItemChangedEventArgs.Common
  commentId: P:Microsoft.Health.Events.HealthRecordItemChangedEventArgs.Common
  id: Common
  parent: Microsoft.Health.Events.HealthRecordItemChangedEventArgs
  langs:
  - csharp
  - vb
  name: Common
  nameWithType: HealthRecordItemChangedEventArgs.Common
  fullName: Microsoft.Health.Events.HealthRecordItemChangedEventArgs.Common
  type: Property
  source:
    remote:
      path: Microsoft.Health/Eventing/HealthRecordItemChangedEventArgs.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Common
    path: Eventing/HealthRecordItemChangedEventArgs.cs
    startLine: 21
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Events
  summary: "\nThe <xref href=\"Microsoft.Health.Events.CommonNotificationData\" data-throw-if-not-resolved=\"false\"></xref> instance associated with this notification.\n"
  example: []
  syntax:
    content: public CommonNotificationData Common { get; set; }
    content.vb: Public Property Common As CommonNotificationData
    parameters: []
    return:
      type: Microsoft.Health.Events.CommonNotificationData
  overload: Microsoft.Health.Events.HealthRecordItemChangedEventArgs.Common*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Events.HealthRecordItemChangedEventArgs.PersonId
  commentId: P:Microsoft.Health.Events.HealthRecordItemChangedEventArgs.PersonId
  id: PersonId
  parent: Microsoft.Health.Events.HealthRecordItemChangedEventArgs
  langs:
  - csharp
  - vb
  name: PersonId
  nameWithType: HealthRecordItemChangedEventArgs.PersonId
  fullName: Microsoft.Health.Events.HealthRecordItemChangedEventArgs.PersonId
  type: Property
  source:
    remote:
      path: Microsoft.Health/Eventing/HealthRecordItemChangedEventArgs.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: PersonId
    path: Eventing/HealthRecordItemChangedEventArgs.cs
    startLine: 31
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Events
  summary: "\nThe person id associated with this notification.\n"
  example: []
  syntax:
    content: public Guid PersonId { get; set; }
    content.vb: Public Property PersonId As Guid
    parameters: []
    return:
      type: System.Guid
  overload: Microsoft.Health.Events.HealthRecordItemChangedEventArgs.PersonId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Events.HealthRecordItemChangedEventArgs.RecordId
  commentId: P:Microsoft.Health.Events.HealthRecordItemChangedEventArgs.RecordId
  id: RecordId
  parent: Microsoft.Health.Events.HealthRecordItemChangedEventArgs
  langs:
  - csharp
  - vb
  name: RecordId
  nameWithType: HealthRecordItemChangedEventArgs.RecordId
  fullName: Microsoft.Health.Events.HealthRecordItemChangedEventArgs.RecordId
  type: Property
  source:
    remote:
      path: Microsoft.Health/Eventing/HealthRecordItemChangedEventArgs.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: RecordId
    path: Eventing/HealthRecordItemChangedEventArgs.cs
    startLine: 41
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Events
  summary: "\nThe record id associated with this notification.\n"
  example: []
  syntax:
    content: public Guid RecordId { get; set; }
    content.vb: Public Property RecordId As Guid
    parameters: []
    return:
      type: System.Guid
  overload: Microsoft.Health.Events.HealthRecordItemChangedEventArgs.RecordId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Events.HealthRecordItemChangedEventArgs.ChangedItems
  commentId: P:Microsoft.Health.Events.HealthRecordItemChangedEventArgs.ChangedItems
  id: ChangedItems
  parent: Microsoft.Health.Events.HealthRecordItemChangedEventArgs
  langs:
  - csharp
  - vb
  name: ChangedItems
  nameWithType: HealthRecordItemChangedEventArgs.ChangedItems
  fullName: Microsoft.Health.Events.HealthRecordItemChangedEventArgs.ChangedItems
  type: Property
  source:
    remote:
      path: Microsoft.Health/Eventing/HealthRecordItemChangedEventArgs.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ChangedItems
    path: Eventing/HealthRecordItemChangedEventArgs.cs
    startLine: 51
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Events
  summary: "\nGets the collection of items that were changed.\n"
  example: []
  syntax:
    content: public Collection<HealthRecordItemChangedItem> ChangedItems { get; }
    content.vb: Public ReadOnly Property ChangedItems As Collection(Of HealthRecordItemChangedItem)
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{Microsoft.Health.Events.HealthRecordItemChangedItem}
  overload: Microsoft.Health.Events.HealthRecordItemChangedEventArgs.ChangedItems*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Events.HealthRecordItemChangedEventArgs.GetItems
  commentId: M:Microsoft.Health.Events.HealthRecordItemChangedEventArgs.GetItems
  id: GetItems
  parent: Microsoft.Health.Events.HealthRecordItemChangedEventArgs
  langs:
  - csharp
  - vb
  name: GetItems()
  nameWithType: HealthRecordItemChangedEventArgs.GetItems()
  fullName: Microsoft.Health.Events.HealthRecordItemChangedEventArgs.GetItems()
  type: Method
  source:
    remote:
      path: Microsoft.Health/Eventing/HealthRecordItemChangedEventArgs.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetItems
    path: Eventing/HealthRecordItemChangedEventArgs.cs
    startLine: 69
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Events
  summary: "\nFetch the <xref href=\"Microsoft.Health.HealthRecordItem\" data-throw-if-not-resolved=\"false\"></xref> instances that are specified\nin the ChangedItems collection.\n"
  remarks: "\nAfter the operation has completed, see <xref href=\"Microsoft.Health.Events.HealthRecordItemChangedItem.Item\" data-throw-if-not-resolved=\"false\"></xref> \nto ues the fetched <xref href=\"Microsoft.Health.HealthRecordItem\" data-throw-if-not-resolved=\"false\"></xref>\n\nItems that have been removed from a record or are otherwise unaccessible will\nhave a <xref href=\"Microsoft.Health.Events.HealthRecordItemChangedItem.Item\" data-throw-if-not-resolved=\"false\"></xref> value of null.\n"
  example: []
  syntax:
    content: public void GetItems()
    content.vb: Public Sub GetItems
  overload: Microsoft.Health.Events.HealthRecordItemChangedEventArgs.GetItems*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Events.HealthRecordItemChangedEventArgs.GetItems(Microsoft.Health.HealthServiceConnection)
  commentId: M:Microsoft.Health.Events.HealthRecordItemChangedEventArgs.GetItems(Microsoft.Health.HealthServiceConnection)
  id: GetItems(Microsoft.Health.HealthServiceConnection)
  parent: Microsoft.Health.Events.HealthRecordItemChangedEventArgs
  langs:
  - csharp
  - vb
  name: GetItems(HealthServiceConnection)
  nameWithType: HealthRecordItemChangedEventArgs.GetItems(HealthServiceConnection)
  fullName: Microsoft.Health.Events.HealthRecordItemChangedEventArgs.GetItems(Microsoft.Health.HealthServiceConnection)
  type: Method
  source:
    remote:
      path: Microsoft.Health/Eventing/HealthRecordItemChangedEventArgs.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetItems
    path: Eventing/HealthRecordItemChangedEventArgs.cs
    startLine: 92
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Events
  summary: "\nFetch the <xref href=\"Microsoft.Health.HealthRecordItem\" data-throw-if-not-resolved=\"false\"></xref> instances that are specified\nin the ChangedItems collection.\n"
  remarks: "\nAfter the operation has completed, see <xref href=\"Microsoft.Health.Events.HealthRecordItemChangedItem.Item\" data-throw-if-not-resolved=\"false\"></xref> \nto use the fetched <xref href=\"Microsoft.Health.HealthRecordItem\" data-throw-if-not-resolved=\"false\"></xref>\n\nItems that have been removed from a record or are otherwise inaccessible will\nhave a <xref href=\"Microsoft.Health.Events.HealthRecordItemChangedItem.Item\" data-throw-if-not-resolved=\"false\"></xref> value of null.\n"
  example: []
  syntax:
    content: public void GetItems(HealthServiceConnection connection)
    content.vb: Public Sub GetItems(connection As HealthServiceConnection)
    parameters:
    - id: connection
      type: Microsoft.Health.HealthServiceConnection
      description: The connection to use to fetch the instances.
  overload: Microsoft.Health.Events.HealthRecordItemChangedEventArgs.GetItems*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">connection</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Events.HealthRecordItemChangedEventArgs.GetItems(System.Guid,System.String)
  commentId: M:Microsoft.Health.Events.HealthRecordItemChangedEventArgs.GetItems(System.Guid,System.String)
  id: GetItems(System.Guid,System.String)
  parent: Microsoft.Health.Events.HealthRecordItemChangedEventArgs
  langs:
  - csharp
  - vb
  name: GetItems(Guid, String)
  nameWithType: HealthRecordItemChangedEventArgs.GetItems(Guid, String)
  fullName: Microsoft.Health.Events.HealthRecordItemChangedEventArgs.GetItems(System.Guid, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health/Eventing/HealthRecordItemChangedEventArgs.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetItems
    path: Eventing/HealthRecordItemChangedEventArgs.cs
    startLine: 117
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Events
  summary: "\nFetch the <xref href=\"Microsoft.Health.HealthRecordItem\" data-throw-if-not-resolved=\"false\"></xref> instances that are specified\nin the ChangedItems collection.\n"
  remarks: "\nAfter the operation has completed, see <xref href=\"Microsoft.Health.Events.HealthRecordItemChangedItem.Item\" data-throw-if-not-resolved=\"false\"></xref> \nto use the fetched <xref href=\"Microsoft.Health.HealthRecordItem\" data-throw-if-not-resolved=\"false\"></xref>\n\nItems that have been removed from a record or are otherwise inaccessible will\nhave a <xref href=\"Microsoft.Health.Events.HealthRecordItemChangedItem.Item\" data-throw-if-not-resolved=\"false\"></xref> value of null.\n"
  example: []
  syntax:
    content: public void GetItems(Guid applicationId, string healthServiceUrl)
    content.vb: Public Sub GetItems(applicationId As Guid, healthServiceUrl As String)
    parameters:
    - id: applicationId
      type: System.Guid
      description: The application id to use.
    - id: healthServiceUrl
      type: System.String
      description: The health service URL to use.
  overload: Microsoft.Health.Events.HealthRecordItemChangedEventArgs.GetItems*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">healthServiceUrl</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Health.Events
  commentId: N:Microsoft.Health.Events
  isExternal: false
  name: Microsoft.Health.Events
  nameWithType: Microsoft.Health.Events
  fullName: Microsoft.Health.Events
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Events.CommonNotificationData
  commentId: T:Microsoft.Health.Events.CommonNotificationData
  parent: Microsoft.Health.Events
  isExternal: false
  name: CommonNotificationData
  nameWithType: CommonNotificationData
  fullName: Microsoft.Health.Events.CommonNotificationData
- uid: Microsoft.Health.Events.HealthRecordItemChangedEventArgs.Common*
  commentId: Overload:Microsoft.Health.Events.HealthRecordItemChangedEventArgs.Common
  isExternal: false
  name: Common
  nameWithType: HealthRecordItemChangedEventArgs.Common
  fullName: Microsoft.Health.Events.HealthRecordItemChangedEventArgs.Common
- uid: Microsoft.Health.Events.HealthRecordItemChangedEventArgs.PersonId*
  commentId: Overload:Microsoft.Health.Events.HealthRecordItemChangedEventArgs.PersonId
  isExternal: false
  name: PersonId
  nameWithType: HealthRecordItemChangedEventArgs.PersonId
  fullName: Microsoft.Health.Events.HealthRecordItemChangedEventArgs.PersonId
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Microsoft.Health.Events.HealthRecordItemChangedEventArgs.RecordId*
  commentId: Overload:Microsoft.Health.Events.HealthRecordItemChangedEventArgs.RecordId
  isExternal: false
  name: RecordId
  nameWithType: HealthRecordItemChangedEventArgs.RecordId
  fullName: Microsoft.Health.Events.HealthRecordItemChangedEventArgs.RecordId
- uid: Microsoft.Health.Events.HealthRecordItemChangedEventArgs.ChangedItems*
  commentId: Overload:Microsoft.Health.Events.HealthRecordItemChangedEventArgs.ChangedItems
  isExternal: false
  name: ChangedItems
  nameWithType: HealthRecordItemChangedEventArgs.ChangedItems
  fullName: Microsoft.Health.Events.HealthRecordItemChangedEventArgs.ChangedItems
- uid: System.Collections.ObjectModel.Collection{Microsoft.Health.Events.HealthRecordItemChangedItem}
  commentId: T:System.Collections.ObjectModel.Collection{Microsoft.Health.Events.HealthRecordItemChangedItem}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<HealthRecordItemChangedItem>
  nameWithType: Collection<HealthRecordItemChangedItem>
  fullName: System.Collections.ObjectModel.Collection<Microsoft.Health.Events.HealthRecordItemChangedItem>
  nameWithType.vb: Collection(Of HealthRecordItemChangedItem)
  fullName.vb: System.Collections.ObjectModel.Collection(Of Microsoft.Health.Events.HealthRecordItemChangedItem)
  name.vb: Collection(Of HealthRecordItemChangedItem)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.Events.HealthRecordItemChangedItem
    name: HealthRecordItemChangedItem
    nameWithType: HealthRecordItemChangedItem
    fullName: Microsoft.Health.Events.HealthRecordItemChangedItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.Events.HealthRecordItemChangedItem
    name: HealthRecordItemChangedItem
    nameWithType: HealthRecordItemChangedItem
    fullName: Microsoft.Health.Events.HealthRecordItemChangedItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1
  commentId: T:System.Collections.ObjectModel.Collection`1
  isExternal: true
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  nameWithType.vb: Collection(Of T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T)
  name.vb: Collection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: Microsoft.Health.HealthRecordItem
  commentId: T:Microsoft.Health.HealthRecordItem
  parent: Microsoft.Health
  isExternal: false
  name: HealthRecordItem
  nameWithType: HealthRecordItem
  fullName: Microsoft.Health.HealthRecordItem
- uid: Microsoft.Health.Events.HealthRecordItemChangedItem.Item
  commentId: P:Microsoft.Health.Events.HealthRecordItemChangedItem.Item
- uid: Microsoft.Health.Events.HealthRecordItemChangedEventArgs.GetItems*
  commentId: Overload:Microsoft.Health.Events.HealthRecordItemChangedEventArgs.GetItems
  isExternal: false
  name: GetItems
  nameWithType: HealthRecordItemChangedEventArgs.GetItems
  fullName: Microsoft.Health.Events.HealthRecordItemChangedEventArgs.GetItems
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: Microsoft.Health.HealthServiceConnection
  commentId: T:Microsoft.Health.HealthServiceConnection
  parent: Microsoft.Health
  isExternal: false
  name: HealthServiceConnection
  nameWithType: HealthServiceConnection
  fullName: Microsoft.Health.HealthServiceConnection
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
