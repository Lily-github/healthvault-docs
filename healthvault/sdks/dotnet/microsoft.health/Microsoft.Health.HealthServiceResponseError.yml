### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.HealthServiceResponseError
  commentId: T:Microsoft.Health.HealthServiceResponseError
  id: HealthServiceResponseError
  parent: Microsoft.Health
  children:
  - Microsoft.Health.HealthServiceResponseError.ErrorInfo
  - Microsoft.Health.HealthServiceResponseError.Message
  - Microsoft.Health.HealthServiceResponseError.ToString
  langs:
  - csharp
  - vb
  name: HealthServiceResponseError
  nameWithType: HealthServiceResponseError
  fullName: Microsoft.Health.HealthServiceResponseError
  type: Class
  source:
    remote:
      path: Microsoft.Health/HealthServiceResponseError.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: HealthServiceResponseError
    path: HealthServiceResponseError.cs
    startLine: 14
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nContains error information for a response that has a code other\nthan <xref href=\"Microsoft.Health.HealthServiceStatusCode.Ok\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public class HealthServiceResponseError
    content.vb: >-
      <Serializable>

      Public Class HealthServiceResponseError
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.HealthServiceResponseError.Message
  commentId: P:Microsoft.Health.HealthServiceResponseError.Message
  id: Message
  parent: Microsoft.Health.HealthServiceResponseError
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: HealthServiceResponseError.Message
  fullName: Microsoft.Health.HealthServiceResponseError.Message
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthServiceResponseError.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Message
    path: HealthServiceResponseError.cs
    startLine: 31
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets the error message. \n"
  remarks: "\nThe message contains localized text of why the request failed. \nThis text should be added to application context information\nand suggestions of what to do before displaying it to the user.\n"
  example: []
  syntax:
    content: public string Message { get; }
    content.vb: Public ReadOnly Property Message As String
    parameters: []
    return:
      type: System.String
      description: "\nA string representing the error message.\n"
  overload: Microsoft.Health.HealthServiceResponseError.Message*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.HealthServiceResponseError.ErrorInfo
  commentId: P:Microsoft.Health.HealthServiceResponseError.ErrorInfo
  id: ErrorInfo
  parent: Microsoft.Health.HealthServiceResponseError
  langs:
  - csharp
  - vb
  name: ErrorInfo
  nameWithType: HealthServiceResponseError.ErrorInfo
  fullName: Microsoft.Health.HealthServiceResponseError.ErrorInfo
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthServiceResponseError.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ErrorInfo
    path: HealthServiceResponseError.cs
    startLine: 74
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets the additional information specific to the method failure.\n"
  remarks: "\nThe text contains specific actionable information related to the failed request.\nIt may be used in determining possible actions to circumvent the error condition\nbefore displaying an error to the user.\n"
  example: []
  syntax:
    content: public string ErrorInfo { get; }
    content.vb: Public ReadOnly Property ErrorInfo As String
    parameters: []
    return:
      type: System.String
      description: "\nA string representing the additional error information.\n"
  overload: Microsoft.Health.HealthServiceResponseError.ErrorInfo*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.HealthServiceResponseError.ToString
  commentId: M:Microsoft.Health.HealthServiceResponseError.ToString
  id: ToString
  parent: Microsoft.Health.HealthServiceResponseError
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: HealthServiceResponseError.ToString()
  fullName: Microsoft.Health.HealthServiceResponseError.ToString()
  type: Method
  source:
    remote:
      path: Microsoft.Health/HealthServiceResponseError.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ToString
    path: HealthServiceResponseError.cs
    startLine: 91
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets the string representation of the <xref href=\"Microsoft.Health.HealthServiceErrorContext\" data-throw-if-not-resolved=\"false\"></xref> \nobject.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\nA string representing the contents of the <xref href=\"Microsoft.Health.HealthServiceErrorContext\" data-throw-if-not-resolved=\"false\"></xref> \nobject.\n"
  overridden: System.Object.ToString
  overload: Microsoft.Health.HealthServiceResponseError.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Health.HealthServiceStatusCode.Ok
  commentId: F:Microsoft.Health.HealthServiceStatusCode.Ok
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.HealthServiceResponseError.Message*
  commentId: Overload:Microsoft.Health.HealthServiceResponseError.Message
  isExternal: false
  name: Message
  nameWithType: HealthServiceResponseError.Message
  fullName: Microsoft.Health.HealthServiceResponseError.Message
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.HealthServiceResponseError.ErrorInfo*
  commentId: Overload:Microsoft.Health.HealthServiceResponseError.ErrorInfo
  isExternal: false
  name: ErrorInfo
  nameWithType: HealthServiceResponseError.ErrorInfo
  fullName: Microsoft.Health.HealthServiceResponseError.ErrorInfo
- uid: Microsoft.Health.HealthServiceErrorContext
  commentId: T:Microsoft.Health.HealthServiceErrorContext
  isExternal: false
  name: HealthServiceErrorContext
  nameWithType: HealthServiceErrorContext
  fullName: Microsoft.Health.HealthServiceErrorContext
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthServiceResponseError.ToString*
  commentId: Overload:Microsoft.Health.HealthServiceResponseError.ToString
  isExternal: false
  name: ToString
  nameWithType: HealthServiceResponseError.ToString
  fullName: Microsoft.Health.HealthServiceResponseError.ToString
