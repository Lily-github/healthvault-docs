### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.HealthRecordItemsOrderByClause
  commentId: T:Microsoft.Health.HealthRecordItemsOrderByClause
  id: HealthRecordItemsOrderByClause
  parent: Microsoft.Health
  children:
  - Microsoft.Health.HealthRecordItemsOrderByClause.Direction
  - Microsoft.Health.HealthRecordItemsOrderByClause.Name
  - Microsoft.Health.HealthRecordItemsOrderByClause.ThingTypeId
  langs:
  - csharp
  - vb
  name: HealthRecordItemsOrderByClause
  nameWithType: HealthRecordItemsOrderByClause
  fullName: Microsoft.Health.HealthRecordItemsOrderByClause
  type: Class
  source:
    remote:
      path: Microsoft.Health/HealthRecordItemsOrderByClause.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: HealthRecordItemsOrderByClause
    path: HealthRecordItemsOrderByClause.cs
    startLine: 39
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nSpecifies the order in which data is returned in GetThings request.\n"
  example: []
  syntax:
    content: public class HealthRecordItemsOrderByClause
    content.vb: Public Class HealthRecordItemsOrderByClause
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.HealthRecordItemsOrderByClause.ThingTypeId
  commentId: P:Microsoft.Health.HealthRecordItemsOrderByClause.ThingTypeId
  id: ThingTypeId
  parent: Microsoft.Health.HealthRecordItemsOrderByClause
  langs:
  - csharp
  - vb
  name: ThingTypeId
  nameWithType: HealthRecordItemsOrderByClause.ThingTypeId
  fullName: Microsoft.Health.HealthRecordItemsOrderByClause.ThingTypeId
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthRecordItemsOrderByClause.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ThingTypeId
    path: HealthRecordItemsOrderByClause.cs
    startLine: 45
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the unique item type identifiers that the order by clause is set for.\n"
  example: []
  syntax:
    content: public Guid ThingTypeId { get; set; }
    content.vb: Public Property ThingTypeId As Guid
    parameters: []
    return:
      type: System.Guid
  overload: Microsoft.Health.HealthRecordItemsOrderByClause.ThingTypeId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthRecordItemsOrderByClause.Name
  commentId: P:Microsoft.Health.HealthRecordItemsOrderByClause.Name
  id: Name
  parent: Microsoft.Health.HealthRecordItemsOrderByClause
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: HealthRecordItemsOrderByClause.Name
  fullName: Microsoft.Health.HealthRecordItemsOrderByClause.Name
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthRecordItemsOrderByClause.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Name
    path: HealthRecordItemsOrderByClause.cs
    startLine: 50
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the name of the item property to sort on.\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.HealthRecordItemsOrderByClause.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthRecordItemsOrderByClause.Direction
  commentId: P:Microsoft.Health.HealthRecordItemsOrderByClause.Direction
  id: Direction
  parent: Microsoft.Health.HealthRecordItemsOrderByClause
  langs:
  - csharp
  - vb
  name: Direction
  nameWithType: HealthRecordItemsOrderByClause.Direction
  fullName: Microsoft.Health.HealthRecordItemsOrderByClause.Direction
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthRecordItemsOrderByClause.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Direction
    path: HealthRecordItemsOrderByClause.cs
    startLine: 55
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nSpecifies that the values in the specified property should be sorted in ascending or descending order.\n"
  example: []
  syntax:
    content: public OrderByDirection Direction { get; set; }
    content.vb: Public Property Direction As OrderByDirection
    parameters: []
    return:
      type: Microsoft.Health.OrderByDirection
  overload: Microsoft.Health.HealthRecordItemsOrderByClause.Direction*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.HealthRecordItemsOrderByClause.ThingTypeId*
  commentId: Overload:Microsoft.Health.HealthRecordItemsOrderByClause.ThingTypeId
  isExternal: false
  name: ThingTypeId
  nameWithType: HealthRecordItemsOrderByClause.ThingTypeId
  fullName: Microsoft.Health.HealthRecordItemsOrderByClause.ThingTypeId
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Microsoft.Health.HealthRecordItemsOrderByClause.Name*
  commentId: Overload:Microsoft.Health.HealthRecordItemsOrderByClause.Name
  isExternal: false
  name: Name
  nameWithType: HealthRecordItemsOrderByClause.Name
  fullName: Microsoft.Health.HealthRecordItemsOrderByClause.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.HealthRecordItemsOrderByClause.Direction*
  commentId: Overload:Microsoft.Health.HealthRecordItemsOrderByClause.Direction
  isExternal: false
  name: Direction
  nameWithType: HealthRecordItemsOrderByClause.Direction
  fullName: Microsoft.Health.HealthRecordItemsOrderByClause.Direction
- uid: Microsoft.Health.OrderByDirection
  commentId: T:Microsoft.Health.OrderByDirection
  parent: Microsoft.Health
  isExternal: false
  name: OrderByDirection
  nameWithType: OrderByDirection
  fullName: Microsoft.Health.OrderByDirection
