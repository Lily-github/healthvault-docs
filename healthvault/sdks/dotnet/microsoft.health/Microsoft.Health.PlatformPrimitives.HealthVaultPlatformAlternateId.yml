### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId
  commentId: T:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId
  id: HealthVaultPlatformAlternateId
  parent: Microsoft.Health.PlatformPrimitives
  children:
  - Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.AssociateAlternateId(Microsoft.Health.ApplicationConnection,Microsoft.Health.HealthRecordAccessor,System.String)
  - Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.DisableMock
  - Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.DisassociateAlternateId(Microsoft.Health.ApplicationConnection,Microsoft.Health.HealthRecordAccessor,System.String)
  - Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.DisassociateAlternateId(Microsoft.Health.ApplicationConnection,System.String)
  - Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.EnableMock(Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId)
  - Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.GetAlternateIds(Microsoft.Health.ApplicationConnection,Microsoft.Health.HealthRecordAccessor)
  - Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.GetPersonAndRecordForAlternateId(Microsoft.Health.ApplicationConnection,System.String)
  langs:
  - csharp
  - vb
  name: HealthVaultPlatformAlternateId
  nameWithType: HealthVaultPlatformAlternateId
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId
  type: Class
  source:
    remote:
      path: Microsoft.Health/HealthVaultPlatformAlternateId.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: HealthVaultPlatformAlternateId
    path: HealthVaultPlatformAlternateId.cs
    startLine: 20
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.PlatformPrimitives
  summary: "\nProvides low-level access to the HealthVault alternate id operations.\n"
  remarks: "\n<xref href=\"Microsoft.Health.HealthVaultPlatform\" data-throw-if-not-resolved=\"false\"></xref> uses this class to perform operations. Set \nHealthVaultPlatformAlternateId.Current to a derived class to intercept all message calls.\n"
  example: []
  syntax:
    content: public class HealthVaultPlatformAlternateId
    content.vb: Public Class HealthVaultPlatformAlternateId
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.EnableMock(Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId)
  commentId: M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.EnableMock(Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId)
  id: EnableMock(Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId)
  parent: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId
  langs:
  - csharp
  - vb
  name: EnableMock(HealthVaultPlatformAlternateId)
  nameWithType: HealthVaultPlatformAlternateId.EnableMock(HealthVaultPlatformAlternateId)
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.EnableMock(Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId)
  type: Method
  source:
    remote:
      path: Microsoft.Health/HealthVaultPlatformAlternateId.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: EnableMock
    path: HealthVaultPlatformAlternateId.cs
    startLine: 37
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.PlatformPrimitives
  summary: "\nEnables mocking of calls to this class.\n"
  remarks: "\nThe calling class should pass in a class that derives from this\nclass and overrides the calls to be mocked. \n"
  example: []
  syntax:
    content: public static void EnableMock(HealthVaultPlatformAlternateId mock)
    content.vb: Public Shared Sub EnableMock(mock As HealthVaultPlatformAlternateId)
    parameters:
    - id: mock
      type: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId
      description: The mocking class.
  overload: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.EnableMock*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nThere is already a mock registered for this class.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.DisableMock
  commentId: M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.DisableMock
  id: DisableMock
  parent: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId
  langs:
  - csharp
  - vb
  name: DisableMock()
  nameWithType: HealthVaultPlatformAlternateId.DisableMock()
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.DisableMock()
  type: Method
  source:
    remote:
      path: Microsoft.Health/HealthVaultPlatformAlternateId.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DisableMock
    path: HealthVaultPlatformAlternateId.cs
    startLine: 53
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.PlatformPrimitives
  summary: "\nRemoves mocking of calls to this class.\n"
  example: []
  syntax:
    content: public static void DisableMock()
    content.vb: Public Shared Sub DisableMock
  overload: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.DisableMock*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nThere is no mock registered for this class.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.AssociateAlternateId(Microsoft.Health.ApplicationConnection,Microsoft.Health.HealthRecordAccessor,System.String)
  commentId: M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.AssociateAlternateId(Microsoft.Health.ApplicationConnection,Microsoft.Health.HealthRecordAccessor,System.String)
  id: AssociateAlternateId(Microsoft.Health.ApplicationConnection,Microsoft.Health.HealthRecordAccessor,System.String)
  parent: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId
  langs:
  - csharp
  - vb
  name: AssociateAlternateId(ApplicationConnection, HealthRecordAccessor, String)
  nameWithType: HealthVaultPlatformAlternateId.AssociateAlternateId(ApplicationConnection, HealthRecordAccessor, String)
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.AssociateAlternateId(Microsoft.Health.ApplicationConnection, Microsoft.Health.HealthRecordAccessor, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health/HealthVaultPlatformAlternateId.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AssociateAlternateId
    path: HealthVaultPlatformAlternateId.cs
    startLine: 103
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.PlatformPrimitives
  summary: "\nAssociates an alternate ID with a record.\n"
  remarks: "\nThis method accesses the HealthVault service across the network.\n"
  example: []
  syntax:
    content: public virtual void AssociateAlternateId(ApplicationConnection connection, HealthRecordAccessor accessor, string alternateId)
    content.vb: Public Overridable Sub AssociateAlternateId(connection As ApplicationConnection, accessor As HealthRecordAccessor, alternateId As String)
    parameters:
    - id: connection
      type: Microsoft.Health.ApplicationConnection
      description: "\nThe connection to use to access the data.\n"
    - id: accessor
      type: Microsoft.Health.HealthRecordAccessor
      description: "\nThe record to use.\n"
    - id: alternateId
      type: System.String
      description: "\nThe alternate ID.\n"
  overload: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.AssociateAlternateId*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe connection, accessor, or alternateId parameters are null\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe alternateId parameter is empty, all whitespace, or more than 255 characters in length.\n"
  - type: Microsoft.Health.HealthServiceException
    commentId: T:Microsoft.Health.HealthServiceException
    description: "\nThe HealthVault service returned an error. \nIf the alternate ID is already associated by this application, the ErrorCode property\nwill be set to DuplicateAlternateId.\nIf the number of alternate IDs associated with a record exceeds the limit, the ErrorCode\nproperty will be set to AlternateIdsLimitExceeded.\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.DisassociateAlternateId(Microsoft.Health.ApplicationConnection,Microsoft.Health.HealthRecordAccessor,System.String)
  commentId: M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.DisassociateAlternateId(Microsoft.Health.ApplicationConnection,Microsoft.Health.HealthRecordAccessor,System.String)
  id: DisassociateAlternateId(Microsoft.Health.ApplicationConnection,Microsoft.Health.HealthRecordAccessor,System.String)
  parent: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId
  langs:
  - csharp
  - vb
  name: DisassociateAlternateId(ApplicationConnection, HealthRecordAccessor, String)
  nameWithType: HealthVaultPlatformAlternateId.DisassociateAlternateId(ApplicationConnection, HealthRecordAccessor, String)
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.DisassociateAlternateId(Microsoft.Health.ApplicationConnection, Microsoft.Health.HealthRecordAccessor, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health/HealthVaultPlatformAlternateId.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DisassociateAlternateId
    path: HealthVaultPlatformAlternateId.cs
    startLine: 156
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.PlatformPrimitives
  summary: "\nDisassociates an alternate ID with a record.\n"
  remarks: "\nThis method accesses the HealthVault service across the network.\n"
  example: []
  syntax:
    content: public virtual void DisassociateAlternateId(ApplicationConnection connection, HealthRecordAccessor accessor, string alternateId)
    content.vb: Public Overridable Sub DisassociateAlternateId(connection As ApplicationConnection, accessor As HealthRecordAccessor, alternateId As String)
    parameters:
    - id: connection
      type: Microsoft.Health.ApplicationConnection
      description: "\nThe connection to use to access the data.\n"
    - id: accessor
      type: Microsoft.Health.HealthRecordAccessor
      description: "\nThe record to use.\n"
    - id: alternateId
      type: System.String
      description: "\nThe alternate ID.\n"
  overload: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.DisassociateAlternateId*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe connection, accessor, or alternateId parameters are null.\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe alternateId parameter is empty, all whitespace, or more than 255 characters in length.\n"
  - type: Microsoft.Health.HealthServiceException
    commentId: T:Microsoft.Health.HealthServiceException
    description: "\nThe HealthVault service returned an error. \nIf the alternate Id is not associated with a person and record id, the ErrorCode property\nwill be set to AlternateIdNotFound.\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.DisassociateAlternateId(Microsoft.Health.ApplicationConnection,System.String)
  commentId: M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.DisassociateAlternateId(Microsoft.Health.ApplicationConnection,System.String)
  id: DisassociateAlternateId(Microsoft.Health.ApplicationConnection,System.String)
  parent: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId
  langs:
  - csharp
  - vb
  name: DisassociateAlternateId(ApplicationConnection, String)
  nameWithType: HealthVaultPlatformAlternateId.DisassociateAlternateId(ApplicationConnection, String)
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.DisassociateAlternateId(Microsoft.Health.ApplicationConnection, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health/HealthVaultPlatformAlternateId.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DisassociateAlternateId
    path: HealthVaultPlatformAlternateId.cs
    startLine: 205
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.PlatformPrimitives
  summary: "\nDisassociates an alternate ID with a record.\n"
  remarks: "\nThis method accesses the HealthVault service across the network.\n"
  example: []
  syntax:
    content: public virtual void DisassociateAlternateId(ApplicationConnection connection, string alternateId)
    content.vb: Public Overridable Sub DisassociateAlternateId(connection As ApplicationConnection, alternateId As String)
    parameters:
    - id: connection
      type: Microsoft.Health.ApplicationConnection
      description: "\nThe connection to use to access the data.\n"
    - id: alternateId
      type: System.String
      description: "\nThe alternate ID.\n"
  overload: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.DisassociateAlternateId*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe connection, or alternateId parameters are null.\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe alternateId parameter is empty, all whitespace, or more than 255 characters in length.\n"
  - type: Microsoft.Health.HealthServiceException
    commentId: T:Microsoft.Health.HealthServiceException
    description: "\nThe HealthVault service returned an error. \nIf the alternate Id is not associated with a person and record id, the ErrorCode property\nwill be set to AlternateIdNotFound.\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.GetAlternateIds(Microsoft.Health.ApplicationConnection,Microsoft.Health.HealthRecordAccessor)
  commentId: M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.GetAlternateIds(Microsoft.Health.ApplicationConnection,Microsoft.Health.HealthRecordAccessor)
  id: GetAlternateIds(Microsoft.Health.ApplicationConnection,Microsoft.Health.HealthRecordAccessor)
  parent: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId
  langs:
  - csharp
  - vb
  name: GetAlternateIds(ApplicationConnection, HealthRecordAccessor)
  nameWithType: HealthVaultPlatformAlternateId.GetAlternateIds(ApplicationConnection, HealthRecordAccessor)
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.GetAlternateIds(Microsoft.Health.ApplicationConnection, Microsoft.Health.HealthRecordAccessor)
  type: Method
  source:
    remote:
      path: Microsoft.Health/HealthVaultPlatformAlternateId.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetAlternateIds
    path: HealthVaultPlatformAlternateId.cs
    startLine: 244
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.PlatformPrimitives
  summary: "\nGets the list of alternate IDs that are associated with a record.\n"
  remarks: "\nThis method accesses the HealthVault service across the network.\n"
  example: []
  syntax:
    content: public virtual Collection<string> GetAlternateIds(ApplicationConnection connection, HealthRecordAccessor accessor)
    content.vb: Public Overridable Function GetAlternateIds(connection As ApplicationConnection, accessor As HealthRecordAccessor) As Collection(Of String)
    parameters:
    - id: connection
      type: Microsoft.Health.ApplicationConnection
      description: "\nThe connection to use to access the data.\n"
    - id: accessor
      type: Microsoft.Health.HealthRecordAccessor
      description: "\nThe record to use.\n"
    return:
      type: System.Collections.ObjectModel.Collection{System.String}
  overload: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.GetAlternateIds*
  exceptions:
  - type: Microsoft.Health.HealthServiceException
    commentId: T:Microsoft.Health.HealthServiceException
    description: "\nThe HealthVault service returned an error. \nIf the alternate Id is not associated with a person and record id, the ErrorCode property\nwill be set to AlternateIdNotFound.\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.GetPersonAndRecordForAlternateId(Microsoft.Health.ApplicationConnection,System.String)
  commentId: M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.GetPersonAndRecordForAlternateId(Microsoft.Health.ApplicationConnection,System.String)
  id: GetPersonAndRecordForAlternateId(Microsoft.Health.ApplicationConnection,System.String)
  parent: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId
  langs:
  - csharp
  - vb
  name: GetPersonAndRecordForAlternateId(ApplicationConnection, String)
  nameWithType: HealthVaultPlatformAlternateId.GetPersonAndRecordForAlternateId(ApplicationConnection, String)
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.GetPersonAndRecordForAlternateId(Microsoft.Health.ApplicationConnection, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health/HealthVaultPlatformAlternateId.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetPersonAndRecordForAlternateId
    path: HealthVaultPlatformAlternateId.cs
    startLine: 302
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.PlatformPrimitives
  summary: "\nGets the person and record IDs that were previosly associated\nwith an alternate ID.\n"
  remarks: "\nThis method accesses the HealthVault service across the network.\n"
  example: []
  syntax:
    content: public virtual PersonInfo GetPersonAndRecordForAlternateId(ApplicationConnection connection, string alternateId)
    content.vb: Public Overridable Function GetPersonAndRecordForAlternateId(connection As ApplicationConnection, alternateId As String) As PersonInfo
    parameters:
    - id: connection
      type: Microsoft.Health.ApplicationConnection
      description: "\nThe connection to use to access the data.\n"
    - id: alternateId
      type: System.String
      description: "\nThe alternate ID.\n"
    return:
      type: Microsoft.Health.PersonInfo
  overload: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.GetPersonAndRecordForAlternateId*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe connection, accessor, or alternateId parameters are null\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe alternateId parameter is empty, all whitespace, or more than 255 characters in length.\n"
  - type: Microsoft.Health.HealthServiceException
    commentId: T:Microsoft.Health.HealthServiceException
    description: "\nThe HealthVault service returned an error. \nIf the alternate Id is not associated with a person and record id, the ErrorCode property\nwill be set to AlternateIdNotFound.\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Health.HealthVaultPlatform
  commentId: T:Microsoft.Health.HealthVaultPlatform
  isExternal: false
  name: HealthVaultPlatform
  nameWithType: HealthVaultPlatform
  fullName: Microsoft.Health.HealthVaultPlatform
- uid: Microsoft.Health.PlatformPrimitives
  commentId: N:Microsoft.Health.PlatformPrimitives
  isExternal: false
  name: Microsoft.Health.PlatformPrimitives
  nameWithType: Microsoft.Health.PlatformPrimitives
  fullName: Microsoft.Health.PlatformPrimitives
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.EnableMock*
  commentId: Overload:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.EnableMock
  isExternal: false
  name: EnableMock
  nameWithType: HealthVaultPlatformAlternateId.EnableMock
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.EnableMock
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId
  commentId: T:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId
  parent: Microsoft.Health.PlatformPrimitives
  isExternal: false
  name: HealthVaultPlatformAlternateId
  nameWithType: HealthVaultPlatformAlternateId
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.DisableMock*
  commentId: Overload:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.DisableMock
  isExternal: false
  name: DisableMock
  nameWithType: HealthVaultPlatformAlternateId.DisableMock
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.DisableMock
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.AssociateAlternateId*
  commentId: Overload:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.AssociateAlternateId
  isExternal: false
  name: AssociateAlternateId
  nameWithType: HealthVaultPlatformAlternateId.AssociateAlternateId
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.AssociateAlternateId
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: Microsoft.Health.HealthServiceException
  commentId: T:Microsoft.Health.HealthServiceException
  parent: Microsoft.Health
  isExternal: false
  name: HealthServiceException
  nameWithType: HealthServiceException
  fullName: Microsoft.Health.HealthServiceException
- uid: Microsoft.Health.ApplicationConnection
  commentId: T:Microsoft.Health.ApplicationConnection
  parent: Microsoft.Health
  isExternal: false
  name: ApplicationConnection
  nameWithType: ApplicationConnection
  fullName: Microsoft.Health.ApplicationConnection
- uid: Microsoft.Health.HealthRecordAccessor
  commentId: T:Microsoft.Health.HealthRecordAccessor
  parent: Microsoft.Health
  isExternal: false
  name: HealthRecordAccessor
  nameWithType: HealthRecordAccessor
  fullName: Microsoft.Health.HealthRecordAccessor
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.DisassociateAlternateId*
  commentId: Overload:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.DisassociateAlternateId
  isExternal: false
  name: DisassociateAlternateId
  nameWithType: HealthVaultPlatformAlternateId.DisassociateAlternateId
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.DisassociateAlternateId
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.GetAlternateIds*
  commentId: Overload:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.GetAlternateIds
  isExternal: false
  name: GetAlternateIds
  nameWithType: HealthVaultPlatformAlternateId.GetAlternateIds
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.GetAlternateIds
- uid: System.Collections.ObjectModel.Collection{System.String}
  commentId: T:System.Collections.ObjectModel.Collection{System.String}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<String>
  nameWithType: Collection<String>
  fullName: System.Collections.ObjectModel.Collection<System.String>
  nameWithType.vb: Collection(Of String)
  fullName.vb: System.Collections.ObjectModel.Collection(Of System.String)
  name.vb: Collection(Of String)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1
  commentId: T:System.Collections.ObjectModel.Collection`1
  isExternal: true
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  nameWithType.vb: Collection(Of T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T)
  name.vb: Collection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.GetPersonAndRecordForAlternateId*
  commentId: Overload:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.GetPersonAndRecordForAlternateId
  isExternal: false
  name: GetPersonAndRecordForAlternateId
  nameWithType: HealthVaultPlatformAlternateId.GetPersonAndRecordForAlternateId
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformAlternateId.GetPersonAndRecordForAlternateId
- uid: Microsoft.Health.PersonInfo
  commentId: T:Microsoft.Health.PersonInfo
  parent: Microsoft.Health
  isExternal: false
  name: PersonInfo
  nameWithType: PersonInfo
  fullName: Microsoft.Health.PersonInfo
