### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.VocabularyItem
  commentId: T:Microsoft.Health.VocabularyItem
  id: VocabularyItem
  parent: Microsoft.Health
  children:
  - Microsoft.Health.VocabularyItem.#ctor
  - Microsoft.Health.VocabularyItem.#ctor(System.String)
  - Microsoft.Health.VocabularyItem.#ctor(System.String,System.String)
  - Microsoft.Health.VocabularyItem.#ctor(System.String,System.String,System.String)
  - Microsoft.Health.VocabularyItem.AbbreviationText
  - Microsoft.Health.VocabularyItem.DisplayText
  - Microsoft.Health.VocabularyItem.Family
  - Microsoft.Health.VocabularyItem.GetSchema
  - Microsoft.Health.VocabularyItem.InfoXml
  - Microsoft.Health.VocabularyItem.ParseXml(System.Xml.XPath.XPathNavigator)
  - Microsoft.Health.VocabularyItem.ReadXml(System.Xml.XmlReader)
  - Microsoft.Health.VocabularyItem.SetInfoXml(System.String)
  - Microsoft.Health.VocabularyItem.ToString
  - Microsoft.Health.VocabularyItem.Value
  - Microsoft.Health.VocabularyItem.Version
  - Microsoft.Health.VocabularyItem.Vocabulary
  - Microsoft.Health.VocabularyItem.VocabularyName
  - Microsoft.Health.VocabularyItem.WriteXml(System.String,System.Xml.XmlWriter)
  - Microsoft.Health.VocabularyItem.WriteXml(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: VocabularyItem
  nameWithType: VocabularyItem
  fullName: Microsoft.Health.VocabularyItem
  type: Class
  source:
    remote:
      path: Microsoft.Health/VocabularyItem.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: VocabularyItem
    path: VocabularyItem.cs
    startLine: 18
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nRepresents an item in the HealthVault <xref href=\"Microsoft.Health.VocabularyItem.Vocabulary\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class VocabularyItem : HealthRecordItemData, IXmlSerializable'
    content.vb: >-
      Public Class VocabularyItem
          Inherits HealthRecordItemData
          Implements IXmlSerializable
  inheritance:
  - System.Object
  - Microsoft.Health.ItemTypes.HealthRecordItemData
  implements:
  - System.Xml.Serialization.IXmlSerializable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.VocabularyItem.#ctor
  commentId: M:Microsoft.Health.VocabularyItem.#ctor
  id: '#ctor'
  parent: Microsoft.Health.VocabularyItem
  langs:
  - csharp
  - vb
  name: VocabularyItem()
  nameWithType: VocabularyItem.VocabularyItem()
  fullName: Microsoft.Health.VocabularyItem.VocabularyItem()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/VocabularyItem.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: VocabularyItem.cs
    startLine: 24
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nCreate an instance of the <xref href=\"Microsoft.Health.VocabularyItem\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public VocabularyItem()
    content.vb: Public Sub New
  overload: Microsoft.Health.VocabularyItem.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.VocabularyItem.#ctor(System.String)
  commentId: M:Microsoft.Health.VocabularyItem.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Health.VocabularyItem
  langs:
  - csharp
  - vb
  name: VocabularyItem(String)
  nameWithType: VocabularyItem.VocabularyItem(String)
  fullName: Microsoft.Health.VocabularyItem.VocabularyItem(System.String)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/VocabularyItem.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: VocabularyItem.cs
    startLine: 33
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nCreate an instance of the <xref href=\"Microsoft.Health.VocabularyItem\" data-throw-if-not-resolved=\"false\"></xref> class\nwith the specified code value.\n"
  example: []
  syntax:
    content: public VocabularyItem(string value)
    content.vb: Public Sub New(value As String)
    parameters:
    - id: value
      type: System.String
      description: The code value for the item
  overload: Microsoft.Health.VocabularyItem.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.VocabularyItem.#ctor(System.String,System.String)
  commentId: M:Microsoft.Health.VocabularyItem.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Microsoft.Health.VocabularyItem
  langs:
  - csharp
  - vb
  name: VocabularyItem(String, String)
  nameWithType: VocabularyItem.VocabularyItem(String, String)
  fullName: Microsoft.Health.VocabularyItem.VocabularyItem(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/VocabularyItem.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: VocabularyItem.cs
    startLine: 44
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nCreate an instance of the <xref href=\"Microsoft.Health.VocabularyItem\" data-throw-if-not-resolved=\"false\"></xref> class\nwith the specified code value and display value\n"
  example: []
  syntax:
    content: public VocabularyItem(string value, string displayText)
    content.vb: Public Sub New(value As String, displayText As String)
    parameters:
    - id: value
      type: System.String
      description: The code value for the item
    - id: displayText
      type: System.String
      description: The display text for the item
  overload: Microsoft.Health.VocabularyItem.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.VocabularyItem.#ctor(System.String,System.String,System.String)
  commentId: M:Microsoft.Health.VocabularyItem.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: Microsoft.Health.VocabularyItem
  langs:
  - csharp
  - vb
  name: VocabularyItem(String, String, String)
  nameWithType: VocabularyItem.VocabularyItem(String, String, String)
  fullName: Microsoft.Health.VocabularyItem.VocabularyItem(System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/VocabularyItem.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: VocabularyItem.cs
    startLine: 57
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nCreate an instance of the <xref href=\"Microsoft.Health.VocabularyItem\" data-throw-if-not-resolved=\"false\"></xref> class\nwith the specified code value and display value\n"
  example: []
  syntax:
    content: public VocabularyItem(string value, string displayText, string abbreviationText)
    content.vb: Public Sub New(value As String, displayText As String, abbreviationText As String)
    parameters:
    - id: value
      type: System.String
      description: The code value for the item
    - id: displayText
      type: System.String
      description: The display text for the item
    - id: abbreviationText
      type: System.String
      description: The abbreviation text for the item
  overload: Microsoft.Health.VocabularyItem.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.VocabularyItem.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.VocabularyItem.ParseXml(System.Xml.XPath.XPathNavigator)
  id: ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.VocabularyItem
  langs:
  - csharp
  - vb
  name: ParseXml(XPathNavigator)
  nameWithType: VocabularyItem.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.VocabularyItem.ParseXml(System.Xml.XPath.XPathNavigator)
  type: Method
  source:
    remote:
      path: Microsoft.Health/VocabularyItem.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ParseXml
    path: VocabularyItem.cs
    startLine: 76
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nPopulates the description of the code from the XML.\n"
  example: []
  syntax:
    content: public override void ParseXml(XPathNavigator navigator)
    content.vb: Public Overrides Sub ParseXml(navigator As XPathNavigator)
    parameters:
    - id: navigator
      type: System.Xml.XPath.XPathNavigator
      description: "\nThe XML node representing the coded item.\n"
  overridden: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  overload: Microsoft.Health.VocabularyItem.ParseXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">navigator</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.VocabularyItem.WriteXml(System.String,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.VocabularyItem.WriteXml(System.String,System.Xml.XmlWriter)
  id: WriteXml(System.String,System.Xml.XmlWriter)
  parent: Microsoft.Health.VocabularyItem
  langs:
  - csharp
  - vb
  name: WriteXml(String, XmlWriter)
  nameWithType: VocabularyItem.WriteXml(String, XmlWriter)
  fullName: Microsoft.Health.VocabularyItem.WriteXml(System.String, System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health/VocabularyItem.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteXml
    path: VocabularyItem.cs
    startLine: 189
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nWrites the vocabulary item to the specified XML writer.\n"
  example: []
  syntax:
    content: public override void WriteXml(string nodeName, XmlWriter writer)
    content.vb: Public Overrides Sub WriteXml(nodeName As String, writer As XmlWriter)
    parameters:
    - id: nodeName
      type: System.String
      description: "\nThe name of the outer element for the code value.\n"
    - id: writer
      type: System.Xml.XmlWriter
      description: "\nThe XmlWriter to write the vocabulary item to.\n"
  overridden: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  overload: Microsoft.Health.VocabularyItem.WriteXml*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">nodeName</span> parameter is <strong>null</strong> or empty.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">writer</span> parameter is <strong>null</strong>.\n"
  - type: Microsoft.Health.HealthRecordItemSerializationException
    commentId: T:Microsoft.Health.HealthRecordItemSerializationException
    description: "\nThe <xref href=\"Microsoft.Health.VocabularyItem.Value\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"Microsoft.Health.VocabularyItem.VocabularyName\" data-throw-if-not-resolved=\"false\"></xref> property \nis <strong>null</strong> or empty.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.VocabularyItem.DisplayText
  commentId: P:Microsoft.Health.VocabularyItem.DisplayText
  id: DisplayText
  parent: Microsoft.Health.VocabularyItem
  langs:
  - csharp
  - vb
  name: DisplayText
  nameWithType: VocabularyItem.DisplayText
  fullName: Microsoft.Health.VocabularyItem.DisplayText
  type: Property
  source:
    remote:
      path: Microsoft.Health/VocabularyItem.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DisplayText
    path: VocabularyItem.cs
    startLine: 223
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets a localized display text. \n"
  example: []
  syntax:
    content: public string DisplayText { get; }
    content.vb: Public ReadOnly Property DisplayText As String
    parameters: []
    return:
      type: System.String
      description: "\nA string representing the display text.\n"
  overload: Microsoft.Health.VocabularyItem.DisplayText*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.VocabularyItem.AbbreviationText
  commentId: P:Microsoft.Health.VocabularyItem.AbbreviationText
  id: AbbreviationText
  parent: Microsoft.Health.VocabularyItem
  langs:
  - csharp
  - vb
  name: AbbreviationText
  nameWithType: VocabularyItem.AbbreviationText
  fullName: Microsoft.Health.VocabularyItem.AbbreviationText
  type: Property
  source:
    remote:
      path: Microsoft.Health/VocabularyItem.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AbbreviationText
    path: VocabularyItem.cs
    startLine: 238
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets a localized and abbreviated representation \nof the display text.\n"
  example: []
  syntax:
    content: public string AbbreviationText { get; }
    content.vb: Public ReadOnly Property AbbreviationText As String
    parameters: []
    return:
      type: System.String
      description: "\nA string representing the abbreviation text.\n"
  overload: Microsoft.Health.VocabularyItem.AbbreviationText*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.VocabularyItem.InfoXml
  commentId: P:Microsoft.Health.VocabularyItem.InfoXml
  id: InfoXml
  parent: Microsoft.Health.VocabularyItem
  langs:
  - csharp
  - vb
  name: InfoXml
  nameWithType: VocabularyItem.InfoXml
  fullName: Microsoft.Health.VocabularyItem.InfoXml
  type: Property
  source:
    remote:
      path: Microsoft.Health/VocabularyItem.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: InfoXml
    path: VocabularyItem.cs
    startLine: 252
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets any extra information associated with the code item.\n"
  example: []
  syntax:
    content: public IXPathNavigable InfoXml { get; }
    content.vb: Public ReadOnly Property InfoXml As IXPathNavigable
    parameters: []
    return:
      type: System.Xml.XPath.IXPathNavigable
      description: "\nAn IXPathNavigable object representing the extra information.\n"
  overload: Microsoft.Health.VocabularyItem.InfoXml*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.VocabularyItem.SetInfoXml(System.String)
  commentId: M:Microsoft.Health.VocabularyItem.SetInfoXml(System.String)
  id: SetInfoXml(System.String)
  parent: Microsoft.Health.VocabularyItem
  langs:
  - csharp
  - vb
  name: SetInfoXml(String)
  nameWithType: VocabularyItem.SetInfoXml(String)
  fullName: Microsoft.Health.VocabularyItem.SetInfoXml(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health/VocabularyItem.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SetInfoXml
    path: VocabularyItem.cs
    startLine: 266
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nSet the InfoXml for this instance.\n"
  remarks: "\nThe info xml is a place where additional xml information can\nbe stored in an XML item. \n"
  example: []
  syntax:
    content: public void SetInfoXml(string infoXml)
    content.vb: Public Sub SetInfoXml(infoXml As String)
    parameters:
    - id: infoXml
      type: System.String
      description: ''
  overload: Microsoft.Health.VocabularyItem.SetInfoXml*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.VocabularyItem.ToString
  commentId: M:Microsoft.Health.VocabularyItem.ToString
  id: ToString
  parent: Microsoft.Health.VocabularyItem
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: VocabularyItem.ToString()
  fullName: Microsoft.Health.VocabularyItem.ToString()
  type: Method
  source:
    remote:
      path: Microsoft.Health/VocabularyItem.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ToString
    path: VocabularyItem.cs
    startLine: 295
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nRetrieves the code item as a string.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\nThe display text associated with this code item. \n"
  overridden: System.Object.ToString
  overload: Microsoft.Health.VocabularyItem.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.VocabularyItem.Vocabulary
  commentId: P:Microsoft.Health.VocabularyItem.Vocabulary
  id: Vocabulary
  parent: Microsoft.Health.VocabularyItem
  langs:
  - csharp
  - vb
  name: Vocabulary
  nameWithType: VocabularyItem.Vocabulary
  fullName: Microsoft.Health.VocabularyItem.Vocabulary
  type: Property
  source:
    remote:
      path: Microsoft.Health/VocabularyItem.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Vocabulary
    path: VocabularyItem.cs
    startLine: 304
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nThe <xref href=\"Microsoft.Health.VocabularyItem.Vocabulary\" data-throw-if-not-resolved=\"false\"></xref> to which this item belongs.\n"
  example: []
  syntax:
    content: public Vocabulary Vocabulary { get; set; }
    content.vb: Public Property Vocabulary As Vocabulary
    parameters: []
    return:
      type: Microsoft.Health.Vocabulary
  overload: Microsoft.Health.VocabularyItem.Vocabulary*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.VocabularyItem.GetSchema
  commentId: M:Microsoft.Health.VocabularyItem.GetSchema
  id: GetSchema
  parent: Microsoft.Health.VocabularyItem
  langs:
  - csharp
  - vb
  name: GetSchema()
  nameWithType: VocabularyItem.GetSchema()
  fullName: Microsoft.Health.VocabularyItem.GetSchema()
  type: Method
  source:
    remote:
      path: Microsoft.Health/VocabularyItem.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetSchema
    path: VocabularyItem.cs
    startLine: 337
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets the schema.\n"
  example: []
  syntax:
    content: public XmlSchema GetSchema()
    content.vb: Public Function GetSchema As XmlSchema
    return:
      type: System.Xml.Schema.XmlSchema
      description: The schema
  overload: Microsoft.Health.VocabularyItem.GetSchema*
  implements:
  - System.Xml.Serialization.IXmlSerializable.GetSchema
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.VocabularyItem.ReadXml(System.Xml.XmlReader)
  commentId: M:Microsoft.Health.VocabularyItem.ReadXml(System.Xml.XmlReader)
  id: ReadXml(System.Xml.XmlReader)
  parent: Microsoft.Health.VocabularyItem
  langs:
  - csharp
  - vb
  name: ReadXml(XmlReader)
  nameWithType: VocabularyItem.ReadXml(XmlReader)
  fullName: Microsoft.Health.VocabularyItem.ReadXml(System.Xml.XmlReader)
  type: Method
  source:
    remote:
      path: Microsoft.Health/VocabularyItem.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ReadXml
    path: VocabularyItem.cs
    startLine: 346
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nSet the instance values from the specified reader.\n"
  example: []
  syntax:
    content: public void ReadXml(XmlReader reader)
    content.vb: Public Sub ReadXml(reader As XmlReader)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: The reader
  overload: Microsoft.Health.VocabularyItem.ReadXml*
  implements:
  - System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.VocabularyItem.WriteXml(System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.VocabularyItem.WriteXml(System.Xml.XmlWriter)
  id: WriteXml(System.Xml.XmlWriter)
  parent: Microsoft.Health.VocabularyItem
  langs:
  - csharp
  - vb
  name: WriteXml(XmlWriter)
  nameWithType: VocabularyItem.WriteXml(XmlWriter)
  fullName: Microsoft.Health.VocabularyItem.WriteXml(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health/VocabularyItem.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteXml
    path: VocabularyItem.cs
    startLine: 358
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nWrite the instance values to the specified writer.\n"
  example: []
  syntax:
    content: public void WriteXml(XmlWriter writer)
    content.vb: Public Sub WriteXml(writer As XmlWriter)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: The writer
  overload: Microsoft.Health.VocabularyItem.WriteXml*
  implements:
  - System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.VocabularyItem.Value
  commentId: P:Microsoft.Health.VocabularyItem.Value
  id: Value
  parent: Microsoft.Health.VocabularyItem
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: VocabularyItem.Value
  fullName: Microsoft.Health.VocabularyItem.Value
  type: Property
  source:
    remote:
      path: Microsoft.Health/VocabularyItem.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Value
    path: VocabularyItem.cs
    startLine: 383
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the code value.\n"
  remarks: "\nThe code value is the identifier for the code in the specified\nvocabulary and family.\n"
  example: []
  syntax:
    content: public string Value { get; set; }
    content.vb: Public Property Value As String
    parameters: []
    return:
      type: System.String
      description: "\nA string representing the code value.\n"
  overload: Microsoft.Health.VocabularyItem.Value*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">value</span> parameter is <strong>null</strong>, empty, or contains only\nwhitespace during set.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.VocabularyItem.Family
  commentId: P:Microsoft.Health.VocabularyItem.Family
  id: Family
  parent: Microsoft.Health.VocabularyItem
  langs:
  - csharp
  - vb
  name: Family
  nameWithType: VocabularyItem.Family
  fullName: Microsoft.Health.VocabularyItem.Family
  type: Property
  source:
    remote:
      path: Microsoft.Health/VocabularyItem.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Family
    path: VocabularyItem.cs
    startLine: 413
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the code family.\n"
  remarks: "\nSet the value to <strong>null</strong> if the property should not be stored.\n<br /><br />\nThe family represents the NCPDP value for a code.\n"
  example: []
  syntax:
    content: public string Family { get; set; }
    content.vb: Public Property Family As String
    parameters: []
    return:
      type: System.String
      description: "\nA string representing the code family.\n"
  overload: Microsoft.Health.VocabularyItem.Family*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nIf <span class=\"paramref\">value</span> contains only whitespace.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.VocabularyItem.VocabularyName
  commentId: P:Microsoft.Health.VocabularyItem.VocabularyName
  id: VocabularyName
  parent: Microsoft.Health.VocabularyItem
  langs:
  - csharp
  - vb
  name: VocabularyName
  nameWithType: VocabularyItem.VocabularyName
  fullName: Microsoft.Health.VocabularyItem.VocabularyName
  type: Property
  source:
    remote:
      path: Microsoft.Health/VocabularyItem.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: VocabularyName
    path: VocabularyItem.cs
    startLine: 440
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the vocabulary name.\n"
  example: []
  syntax:
    content: public string VocabularyName { get; set; }
    content.vb: Public Property VocabularyName As String
    parameters: []
    return:
      type: System.String
      description: "\nA string representing the vocabulary name.\n"
  overload: Microsoft.Health.VocabularyItem.VocabularyName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">value</span> set is <strong>null</strong>, empty, or contains only\nwhitespace during set.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.VocabularyItem.Version
  commentId: P:Microsoft.Health.VocabularyItem.Version
  id: Version
  parent: Microsoft.Health.VocabularyItem
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: VocabularyItem.Version
  fullName: Microsoft.Health.VocabularyItem.Version
  type: Property
  source:
    remote:
      path: Microsoft.Health/VocabularyItem.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Version
    path: VocabularyItem.cs
    startLine: 468
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the code version.\n"
  remarks: "\nSet the value to <strong>null</strong> if the property should not be stored.\n"
  example: []
  syntax:
    content: public string Version { get; set; }
    content.vb: Public Property Version As String
    parameters: []
    return:
      type: System.String
      description: "\nA string representing the code version.\n"
  overload: Microsoft.Health.VocabularyItem.Version*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nIf <span class=\"paramref\">value</span> contains only whitespace.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Health.VocabularyItem.Vocabulary
  commentId: P:Microsoft.Health.VocabularyItem.Vocabulary
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData
  commentId: T:Microsoft.Health.ItemTypes.HealthRecordItemData
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: HealthRecordItemData
  nameWithType: HealthRecordItemData
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData
- uid: System.Xml.Serialization.IXmlSerializable
  commentId: T:System.Xml.Serialization.IXmlSerializable
  parent: System.Xml.Serialization
  isExternal: true
  name: IXmlSerializable
  nameWithType: IXmlSerializable
  fullName: System.Xml.Serialization.IXmlSerializable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.ItemTypes
  commentId: N:Microsoft.Health.ItemTypes
  isExternal: false
  name: Microsoft.Health.ItemTypes
  nameWithType: Microsoft.Health.ItemTypes
  fullName: Microsoft.Health.ItemTypes
- uid: System.Xml.Serialization
  commentId: N:System.Xml.Serialization
  isExternal: false
  name: System.Xml.Serialization
  nameWithType: System.Xml.Serialization
  fullName: System.Xml.Serialization
- uid: Microsoft.Health.VocabularyItem
  commentId: T:Microsoft.Health.VocabularyItem
  parent: Microsoft.Health
  isExternal: false
  name: VocabularyItem
  nameWithType: VocabularyItem
  fullName: Microsoft.Health.VocabularyItem
- uid: Microsoft.Health.VocabularyItem.#ctor*
  commentId: Overload:Microsoft.Health.VocabularyItem.#ctor
  isExternal: false
  name: VocabularyItem
  nameWithType: VocabularyItem.VocabularyItem
  fullName: Microsoft.Health.VocabularyItem.VocabularyItem
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.HealthRecordItemData
  isExternal: true
  name: ParseXml(XPathNavigator)
  nameWithType: HealthRecordItemData.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: HealthRecordItemData.ParseXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: HealthRecordItemData.ParseXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.VocabularyItem.ParseXml*
  commentId: Overload:Microsoft.Health.VocabularyItem.ParseXml
  isExternal: false
  name: ParseXml
  nameWithType: VocabularyItem.ParseXml
  fullName: Microsoft.Health.VocabularyItem.ParseXml
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.Xml.XPath.XPathNavigator
  commentId: T:System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: true
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: false
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: Microsoft.Health.VocabularyItem.Value
  commentId: P:Microsoft.Health.VocabularyItem.Value
- uid: Microsoft.Health.VocabularyItem.VocabularyName
  commentId: P:Microsoft.Health.VocabularyItem.VocabularyName
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.HealthRecordItemData
  isExternal: true
  name: WriteXml(String, XmlWriter)
  nameWithType: HealthRecordItemData.WriteXml(String, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String, System.Xml.XmlWriter)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItemData.WriteXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItemData.WriteXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.VocabularyItem.WriteXml*
  commentId: Overload:Microsoft.Health.VocabularyItem.WriteXml
  isExternal: false
  name: WriteXml
  nameWithType: VocabularyItem.WriteXml
  fullName: Microsoft.Health.VocabularyItem.WriteXml
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: Microsoft.Health.HealthRecordItemSerializationException
  commentId: T:Microsoft.Health.HealthRecordItemSerializationException
  isExternal: false
  name: HealthRecordItemSerializationException
  nameWithType: HealthRecordItemSerializationException
  fullName: Microsoft.Health.HealthRecordItemSerializationException
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: Microsoft.Health.VocabularyItem.DisplayText*
  commentId: Overload:Microsoft.Health.VocabularyItem.DisplayText
  isExternal: false
  name: DisplayText
  nameWithType: VocabularyItem.DisplayText
  fullName: Microsoft.Health.VocabularyItem.DisplayText
- uid: Microsoft.Health.VocabularyItem.AbbreviationText*
  commentId: Overload:Microsoft.Health.VocabularyItem.AbbreviationText
  isExternal: false
  name: AbbreviationText
  nameWithType: VocabularyItem.AbbreviationText
  fullName: Microsoft.Health.VocabularyItem.AbbreviationText
- uid: Microsoft.Health.VocabularyItem.InfoXml*
  commentId: Overload:Microsoft.Health.VocabularyItem.InfoXml
  isExternal: false
  name: InfoXml
  nameWithType: VocabularyItem.InfoXml
  fullName: Microsoft.Health.VocabularyItem.InfoXml
- uid: System.Xml.XPath.IXPathNavigable
  commentId: T:System.Xml.XPath.IXPathNavigable
  parent: System.Xml.XPath
  isExternal: true
  name: IXPathNavigable
  nameWithType: IXPathNavigable
  fullName: System.Xml.XPath.IXPathNavigable
- uid: Microsoft.Health.VocabularyItem.SetInfoXml*
  commentId: Overload:Microsoft.Health.VocabularyItem.SetInfoXml
  isExternal: false
  name: SetInfoXml
  nameWithType: VocabularyItem.SetInfoXml
  fullName: Microsoft.Health.VocabularyItem.SetInfoXml
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.VocabularyItem.ToString*
  commentId: Overload:Microsoft.Health.VocabularyItem.ToString
  isExternal: false
  name: ToString
  nameWithType: VocabularyItem.ToString
  fullName: Microsoft.Health.VocabularyItem.ToString
- uid: Microsoft.Health.VocabularyItem.Vocabulary*
  commentId: Overload:Microsoft.Health.VocabularyItem.Vocabulary
  isExternal: false
  name: Vocabulary
  nameWithType: VocabularyItem.Vocabulary
  fullName: Microsoft.Health.VocabularyItem.Vocabulary
- uid: Microsoft.Health.Vocabulary
  commentId: T:Microsoft.Health.Vocabulary
  parent: Microsoft.Health
  isExternal: false
  name: Vocabulary
  nameWithType: Vocabulary
  fullName: Microsoft.Health.Vocabulary
- uid: Microsoft.Health.VocabularyItem.GetSchema*
  commentId: Overload:Microsoft.Health.VocabularyItem.GetSchema
  isExternal: false
  name: GetSchema
  nameWithType: VocabularyItem.GetSchema
  fullName: Microsoft.Health.VocabularyItem.GetSchema
- uid: System.Xml.Serialization.IXmlSerializable.GetSchema
  commentId: M:System.Xml.Serialization.IXmlSerializable.GetSchema
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  name: GetSchema()
  nameWithType: IXmlSerializable.GetSchema()
  fullName: System.Xml.Serialization.IXmlSerializable.GetSchema()
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.GetSchema
    name: GetSchema
    nameWithType: IXmlSerializable.GetSchema
    fullName: System.Xml.Serialization.IXmlSerializable.GetSchema
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.GetSchema
    name: GetSchema
    nameWithType: IXmlSerializable.GetSchema
    fullName: System.Xml.Serialization.IXmlSerializable.GetSchema
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.Schema.XmlSchema
  commentId: T:System.Xml.Schema.XmlSchema
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema
- uid: System.Xml.Schema
  commentId: N:System.Xml.Schema
  isExternal: false
  name: System.Xml.Schema
  nameWithType: System.Xml.Schema
  fullName: System.Xml.Schema
- uid: Microsoft.Health.VocabularyItem.ReadXml*
  commentId: Overload:Microsoft.Health.VocabularyItem.ReadXml
  isExternal: false
  name: ReadXml
  nameWithType: VocabularyItem.ReadXml
  fullName: Microsoft.Health.VocabularyItem.ReadXml
- uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  commentId: M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  name: ReadXml(XmlReader)
  nameWithType: IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
    name: ReadXml
    nameWithType: IXmlSerializable.ReadXml
    fullName: System.Xml.Serialization.IXmlSerializable.ReadXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
    name: ReadXml
    nameWithType: IXmlSerializable.ReadXml
    fullName: System.Xml.Serialization.IXmlSerializable.ReadXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlReader
  commentId: T:System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  commentId: M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  name: WriteXml(XmlWriter)
  nameWithType: IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: IXmlSerializable.WriteXml
    fullName: System.Xml.Serialization.IXmlSerializable.WriteXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: IXmlSerializable.WriteXml
    fullName: System.Xml.Serialization.IXmlSerializable.WriteXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.VocabularyItem.Value*
  commentId: Overload:Microsoft.Health.VocabularyItem.Value
  isExternal: false
  name: Value
  nameWithType: VocabularyItem.Value
  fullName: Microsoft.Health.VocabularyItem.Value
- uid: Microsoft.Health.VocabularyItem.Family*
  commentId: Overload:Microsoft.Health.VocabularyItem.Family
  isExternal: false
  name: Family
  nameWithType: VocabularyItem.Family
  fullName: Microsoft.Health.VocabularyItem.Family
- uid: Microsoft.Health.VocabularyItem.VocabularyName*
  commentId: Overload:Microsoft.Health.VocabularyItem.VocabularyName
  isExternal: false
  name: VocabularyName
  nameWithType: VocabularyItem.VocabularyName
  fullName: Microsoft.Health.VocabularyItem.VocabularyName
- uid: Microsoft.Health.VocabularyItem.Version*
  commentId: Overload:Microsoft.Health.VocabularyItem.Version
  isExternal: false
  name: Version
  nameWithType: VocabularyItem.Version
  fullName: Microsoft.Health.VocabularyItem.Version
