### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Authentication.CryptoHmacFinalized
  commentId: T:Microsoft.Health.Authentication.CryptoHmacFinalized
  id: CryptoHmacFinalized
  parent: Microsoft.Health.Authentication
  children:
  - Microsoft.Health.Authentication.CryptoHmacFinalized.#ctor(System.String,System.Byte[])
  langs:
  - csharp
  - vb
  name: CryptoHmacFinalized
  nameWithType: CryptoHmacFinalized
  fullName: Microsoft.Health.Authentication.CryptoHmacFinalized
  type: Class
  source:
    remote:
      path: Microsoft.Health/Authentication/CryptoHMACFinalized.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CryptoHmacFinalized
    path: Authentication/CryptoHMACFinalized.cs
    startLine: 17
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Authentication
  summary: "\nRepresents finalized Hash Message Authentication Code (HMAC) states \nthat are sent via XML requests.\n"
  remarks: "\nHealthVault verifies the hash against this object's digest.\n"
  example: []
  syntax:
    content: 'public sealed class CryptoHmacFinalized : CryptoHashFinalized'
    content.vb: >-
      Public NotInheritable Class CryptoHmacFinalized
          Inherits CryptoHashFinalized
  inheritance:
  - System.Object
  - Microsoft.Health.Authentication.CryptoHashFinalized
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Health.Authentication.CryptoHmacFinalized.#ctor(System.String,System.Byte[])
  commentId: M:Microsoft.Health.Authentication.CryptoHmacFinalized.#ctor(System.String,System.Byte[])
  id: '#ctor(System.String,System.Byte[])'
  parent: Microsoft.Health.Authentication.CryptoHmacFinalized
  langs:
  - csharp
  - vb
  name: CryptoHmacFinalized(String, Byte[])
  nameWithType: CryptoHmacFinalized.CryptoHmacFinalized(String, Byte[])
  fullName: Microsoft.Health.Authentication.CryptoHmacFinalized.CryptoHmacFinalized(System.String, System.Byte[])
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/Authentication/CryptoHMACFinalized.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: Authentication/CryptoHMACFinalized.cs
    startLine: 43
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Authentication
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.Authentication.CryptoHmacFinalized\" data-throw-if-not-resolved=\"false\"></xref> \nclass with a known algorithm identifier and finalized \nHash Message Authentication Code (HMAC) digest.\n"
  example: []
  syntax:
    content: public CryptoHmacFinalized(string algorithmName, byte[] digest)
    content.vb: Public Sub New(algorithmName As String, digest As Byte())
    parameters:
    - id: algorithmName
      type: System.String
      description: "\nA string representing the algorithm name.\n"
    - id: digest
      type: System.Byte[]
      description: "\nAn array of bytes representing the HMAC digest.\n"
  overload: Microsoft.Health.Authentication.CryptoHmacFinalized.#ctor*
  nameWithType.vb: CryptoHmacFinalized.CryptoHmacFinalized(String, Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Authentication.CryptoHmacFinalized.CryptoHmacFinalized(System.String, System.Byte())
  name.vb: CryptoHmacFinalized(String, Byte())
references:
- uid: Microsoft.Health.Authentication
  commentId: N:Microsoft.Health.Authentication
  isExternal: false
  name: Microsoft.Health.Authentication
  nameWithType: Microsoft.Health.Authentication
  fullName: Microsoft.Health.Authentication
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.Authentication.CryptoHashFinalized
  commentId: T:Microsoft.Health.Authentication.CryptoHashFinalized
  parent: Microsoft.Health.Authentication
  isExternal: false
  name: CryptoHashFinalized
  nameWithType: CryptoHashFinalized
  fullName: Microsoft.Health.Authentication.CryptoHashFinalized
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Authentication.CryptoHmacFinalized
  commentId: T:Microsoft.Health.Authentication.CryptoHmacFinalized
  isExternal: false
  name: CryptoHmacFinalized
  nameWithType: CryptoHmacFinalized
  fullName: Microsoft.Health.Authentication.CryptoHmacFinalized
- uid: Microsoft.Health.Authentication.CryptoHmacFinalized.#ctor*
  commentId: Overload:Microsoft.Health.Authentication.CryptoHmacFinalized.#ctor
  isExternal: false
  name: CryptoHmacFinalized
  nameWithType: CryptoHmacFinalized.CryptoHmacFinalized
  fullName: Microsoft.Health.Authentication.CryptoHmacFinalized.CryptoHmacFinalized
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
