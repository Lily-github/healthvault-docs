### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.DateRange
  commentId: T:Microsoft.Health.DateRange
  id: DateRange
  parent: Microsoft.Health
  children:
  - Microsoft.Health.DateRange.#ctor(System.DateTime,System.DateTime)
  - Microsoft.Health.DateRange.End
  - Microsoft.Health.DateRange.Start
  langs:
  - csharp
  - vb
  name: DateRange
  nameWithType: DateRange
  fullName: Microsoft.Health.DateRange
  type: Class
  source:
    remote:
      path: Microsoft.Health/DateRange.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DateRange
    path: DateRange.cs
    startLine: 12
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nRepresents the range of time between two dates.\n"
  example: []
  syntax:
    content: public class DateRange
    content.vb: Public Class DateRange
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.DateRange.#ctor(System.DateTime,System.DateTime)
  commentId: M:Microsoft.Health.DateRange.#ctor(System.DateTime,System.DateTime)
  id: '#ctor(System.DateTime,System.DateTime)'
  parent: Microsoft.Health.DateRange
  langs:
  - csharp
  - vb
  name: DateRange(DateTime, DateTime)
  nameWithType: DateRange.DateRange(DateTime, DateTime)
  fullName: Microsoft.Health.DateRange.DateRange(System.DateTime, System.DateTime)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/DateRange.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: DateRange.cs
    startLine: 32
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.DateRange\" data-throw-if-not-resolved=\"false\"></xref> class \nwith the specified start and end dates.\n"
  example: []
  syntax:
    content: public DateRange(DateTime start, DateTime end)
    content.vb: Public Sub New(start As Date, end As Date)
    parameters:
    - id: start
      type: System.DateTime
      description: "\nThe start date of the date range.\n"
    - id: end
      type: System.DateTime
      description: "\nThe end date of the date range.\n"
  overload: Microsoft.Health.DateRange.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">start</span> parameter is greater than the \n<span class=\"paramref\">end</span> parameter.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.DateRange.Start
  commentId: P:Microsoft.Health.DateRange.Start
  id: Start
  parent: Microsoft.Health.DateRange
  langs:
  - csharp
  - vb
  name: Start
  nameWithType: DateRange.Start
  fullName: Microsoft.Health.DateRange.Start
  type: Property
  source:
    remote:
      path: Microsoft.Health/DateRange.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Start
    path: DateRange.cs
    startLine: 51
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets the minimum date of the range.\n"
  example: []
  syntax:
    content: public DateTime Start { get; }
    content.vb: Public ReadOnly Property Start As Date
    parameters: []
    return:
      type: System.DateTime
      description: "\nA DateTime value.\n"
  overload: Microsoft.Health.DateRange.Start*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.DateRange.End
  commentId: P:Microsoft.Health.DateRange.End
  id: End
  parent: Microsoft.Health.DateRange
  langs:
  - csharp
  - vb
  name: End
  nameWithType: DateRange.End
  fullName: Microsoft.Health.DateRange.End
  type: Property
  source:
    remote:
      path: Microsoft.Health/DateRange.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: End
    path: DateRange.cs
    startLine: 66
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets the maximum date of the range.\n"
  example: []
  syntax:
    content: public DateTime End { get; }
    content.vb: Public ReadOnly Property End As Date
    parameters: []
    return:
      type: System.DateTime
      description: "\nA DateTime value.\n"
  overload: Microsoft.Health.DateRange.End*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.DateRange
  commentId: T:Microsoft.Health.DateRange
  parent: Microsoft.Health
  isExternal: false
  name: DateRange
  nameWithType: DateRange
  fullName: Microsoft.Health.DateRange
- uid: Microsoft.Health.DateRange.#ctor*
  commentId: Overload:Microsoft.Health.DateRange.#ctor
  isExternal: false
  name: DateRange
  nameWithType: DateRange.DateRange
  fullName: Microsoft.Health.DateRange.DateRange
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Microsoft.Health.DateRange.Start*
  commentId: Overload:Microsoft.Health.DateRange.Start
  isExternal: false
  name: Start
  nameWithType: DateRange.Start
  fullName: Microsoft.Health.DateRange.Start
- uid: Microsoft.Health.DateRange.End*
  commentId: Overload:Microsoft.Health.DateRange.End
  isExternal: false
  name: End
  nameWithType: DateRange.End
  fullName: Microsoft.Health.DateRange.End
