### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.RecordAuthorization
  commentId: T:Microsoft.Health.RecordAuthorization
  id: RecordAuthorization
  parent: Microsoft.Health
  children:
  - Microsoft.Health.RecordAuthorization.AccessRights
  - Microsoft.Health.RecordAuthorization.CanAccessAuditInformation
  - Microsoft.Health.RecordAuthorization.DateAuthorizationChanged
  - Microsoft.Health.RecordAuthorization.DateAuthorizationExpires
  - Microsoft.Health.RecordAuthorization.DateAuthorizationFirstAccepted
  - Microsoft.Health.RecordAuthorization.Email
  - Microsoft.Health.RecordAuthorization.IsRecordCustodian
  - Microsoft.Health.RecordAuthorization.RecordAuthorizationState
  - Microsoft.Health.RecordAuthorization.RecordDisplayName
  - Microsoft.Health.RecordAuthorization.RelationshipType
  langs:
  - csharp
  - vb
  name: RecordAuthorization
  nameWithType: RecordAuthorization
  fullName: Microsoft.Health.RecordAuthorization
  type: Class
  source:
    remote:
      path: Microsoft.Health/RecordAuthorization.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: RecordAuthorization
    path: RecordAuthorization.cs
    startLine: 17
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nProvides information about a person who has access or who has been invited to share a \nHealthVault record.\n"
  example: []
  syntax:
    content: public abstract class RecordAuthorization
    content.vb: Public MustInherit Class RecordAuthorization
  inheritance:
  - System.Object
  derivedClasses:
  - Microsoft.Health.ActiveRecordAuthorization
  - Microsoft.Health.InactiveRecordAuthorization
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.Health.RecordAuthorization.IsRecordCustodian
  commentId: P:Microsoft.Health.RecordAuthorization.IsRecordCustodian
  id: IsRecordCustodian
  parent: Microsoft.Health.RecordAuthorization
  langs:
  - csharp
  - vb
  name: IsRecordCustodian
  nameWithType: RecordAuthorization.IsRecordCustodian
  fullName: Microsoft.Health.RecordAuthorization.IsRecordCustodian
  type: Property
  source:
    remote:
      path: Microsoft.Health/RecordAuthorization.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: IsRecordCustodian
    path: RecordAuthorization.cs
    startLine: 57
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets whether or not the person is a custodian of the HealthVault record.\n"
  example: []
  syntax:
    content: public bool IsRecordCustodian { get; }
    content.vb: Public ReadOnly Property IsRecordCustodian As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.Health.RecordAuthorization.IsRecordCustodian*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.RecordAuthorization.Email
  commentId: P:Microsoft.Health.RecordAuthorization.Email
  id: Email
  parent: Microsoft.Health.RecordAuthorization
  langs:
  - csharp
  - vb
  name: Email
  nameWithType: RecordAuthorization.Email
  fullName: Microsoft.Health.RecordAuthorization.Email
  type: Property
  source:
    remote:
      path: Microsoft.Health/RecordAuthorization.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Email
    path: RecordAuthorization.cs
    startLine: 67
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets the person's email address.\n"
  example: []
  syntax:
    content: public string Email { get; }
    content.vb: Public ReadOnly Property Email As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.RecordAuthorization.Email*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.RecordAuthorization.RecordDisplayName
  commentId: P:Microsoft.Health.RecordAuthorization.RecordDisplayName
  id: RecordDisplayName
  parent: Microsoft.Health.RecordAuthorization
  langs:
  - csharp
  - vb
  name: RecordDisplayName
  nameWithType: RecordAuthorization.RecordDisplayName
  fullName: Microsoft.Health.RecordAuthorization.RecordDisplayName
  type: Property
  source:
    remote:
      path: Microsoft.Health/RecordAuthorization.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: RecordDisplayName
    path: RecordAuthorization.cs
    startLine: 78
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets the display name of the HealthVault record that the person has access to.\n"
  example: []
  syntax:
    content: public string RecordDisplayName { get; }
    content.vb: Public ReadOnly Property RecordDisplayName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.RecordAuthorization.RecordDisplayName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.RecordAuthorization.RecordAuthorizationState
  commentId: P:Microsoft.Health.RecordAuthorization.RecordAuthorizationState
  id: RecordAuthorizationState
  parent: Microsoft.Health.RecordAuthorization
  langs:
  - csharp
  - vb
  name: RecordAuthorizationState
  nameWithType: RecordAuthorization.RecordAuthorizationState
  fullName: Microsoft.Health.RecordAuthorization.RecordAuthorizationState
  type: Property
  source:
    remote:
      path: Microsoft.Health/RecordAuthorization.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: RecordAuthorizationState
    path: RecordAuthorization.cs
    startLine: 97
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets the state of the sharing request for a HealthVault record.\n"
  remarks: "\nWhen a HealthVault record is shared by its custodian, a record authorization is created\nin the <xref href=\"Microsoft.Health.AuthorizedRecordState.ActivationPending\" data-throw-if-not-resolved=\"false\"></xref> state. If the person to\nwhom the record is being shared accepts the invitation the record authorization moves\nto the <xref href=\"Microsoft.Health.AuthorizedRecordState.Active\" data-throw-if-not-resolved=\"false\"></xref> state. If the person rejects the\ninvitation, the record authorization moves to the \n<xref href=\"Microsoft.Health.AuthorizedRecordState.ActivationRejected\" data-throw-if-not-resolved=\"false\"></xref> state.\n"
  example: []
  syntax:
    content: public AuthorizedRecordState RecordAuthorizationState { get; }
    content.vb: Public ReadOnly Property RecordAuthorizationState As AuthorizedRecordState
    parameters: []
    return:
      type: Microsoft.Health.AuthorizedRecordState
  overload: Microsoft.Health.RecordAuthorization.RecordAuthorizationState*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.RecordAuthorization.DateAuthorizationExpires
  commentId: P:Microsoft.Health.RecordAuthorization.DateAuthorizationExpires
  id: DateAuthorizationExpires
  parent: Microsoft.Health.RecordAuthorization
  langs:
  - csharp
  - vb
  name: DateAuthorizationExpires
  nameWithType: RecordAuthorization.DateAuthorizationExpires
  fullName: Microsoft.Health.RecordAuthorization.DateAuthorizationExpires
  type: Property
  source:
    remote:
      path: Microsoft.Health/RecordAuthorization.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DateAuthorizationExpires
    path: RecordAuthorization.cs
    startLine: 108
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets the date when authorization to the HealthVault record expires.\n"
  example: []
  syntax:
    content: public DateTime DateAuthorizationExpires { get; }
    content.vb: Public ReadOnly Property DateAuthorizationExpires As Date
    parameters: []
    return:
      type: System.DateTime
  overload: Microsoft.Health.RecordAuthorization.DateAuthorizationExpires*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.RecordAuthorization.AccessRights
  commentId: P:Microsoft.Health.RecordAuthorization.AccessRights
  id: AccessRights
  parent: Microsoft.Health.RecordAuthorization
  langs:
  - csharp
  - vb
  name: AccessRights
  nameWithType: RecordAuthorization.AccessRights
  fullName: Microsoft.Health.RecordAuthorization.AccessRights
  type: Property
  source:
    remote:
      path: Microsoft.Health/RecordAuthorization.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AccessRights
    path: RecordAuthorization.cs
    startLine: 118
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets the permissions the person has to the HealthVault record.\n"
  example: []
  syntax:
    content: public ReadOnlyCollection<AuthorizationRule> AccessRights { get; }
    content.vb: Public ReadOnly Property AccessRights As ReadOnlyCollection(Of AuthorizationRule)
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.Health.AuthorizationRule}
  overload: Microsoft.Health.RecordAuthorization.AccessRights*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.RecordAuthorization.RelationshipType
  commentId: P:Microsoft.Health.RecordAuthorization.RelationshipType
  id: RelationshipType
  parent: Microsoft.Health.RecordAuthorization
  langs:
  - csharp
  - vb
  name: RelationshipType
  nameWithType: RecordAuthorization.RelationshipType
  fullName: Microsoft.Health.RecordAuthorization.RelationshipType
  type: Property
  source:
    remote:
      path: Microsoft.Health/RecordAuthorization.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: RelationshipType
    path: RecordAuthorization.cs
    startLine: 139
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets the relationship the person authorized to view this record\nhas with the \"owner\" of the record.\n"
  remarks: "\nSee <xref href=\"Microsoft.Health.RecordAuthorization.RelationshipType\" data-throw-if-not-resolved=\"false\"></xref> for more information on the\nrelationships and what they mean.\n"
  example: []
  syntax:
    content: public RelationshipType RelationshipType { get; }
    content.vb: Public ReadOnly Property RelationshipType As RelationshipType
    parameters: []
    return:
      type: Microsoft.Health.RelationshipType
      description: "\nAn enumeration value indicating the relationship between the \nrecord owner and the person authorized to use the record.\n"
  overload: Microsoft.Health.RecordAuthorization.RelationshipType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.RecordAuthorization.DateAuthorizationFirstAccepted
  commentId: P:Microsoft.Health.RecordAuthorization.DateAuthorizationFirstAccepted
  id: DateAuthorizationFirstAccepted
  parent: Microsoft.Health.RecordAuthorization
  langs:
  - csharp
  - vb
  name: DateAuthorizationFirstAccepted
  nameWithType: RecordAuthorization.DateAuthorizationFirstAccepted
  fullName: Microsoft.Health.RecordAuthorization.DateAuthorizationFirstAccepted
  type: Property
  source:
    remote:
      path: Microsoft.Health/RecordAuthorization.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DateAuthorizationFirstAccepted
    path: RecordAuthorization.cs
    startLine: 155
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets the date when the person first accepted access to the HealthVault record.\n"
  remarks: "\nIf the authorized person is the record owner, this date will be the date when the\nrecord was created. If the authorized person is not the record owner, the date will be\nwhen the person first accepted the sharing invitation.\n"
  example: []
  syntax:
    content: public DateTime DateAuthorizationFirstAccepted { get; }
    content.vb: Public ReadOnly Property DateAuthorizationFirstAccepted As Date
    parameters: []
    return:
      type: System.DateTime
  overload: Microsoft.Health.RecordAuthorization.DateAuthorizationFirstAccepted*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.RecordAuthorization.DateAuthorizationChanged
  commentId: P:Microsoft.Health.RecordAuthorization.DateAuthorizationChanged
  id: DateAuthorizationChanged
  parent: Microsoft.Health.RecordAuthorization
  langs:
  - csharp
  - vb
  name: DateAuthorizationChanged
  nameWithType: RecordAuthorization.DateAuthorizationChanged
  fullName: Microsoft.Health.RecordAuthorization.DateAuthorizationChanged
  type: Property
  source:
    remote:
      path: Microsoft.Health/RecordAuthorization.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DateAuthorizationChanged
    path: RecordAuthorization.cs
    startLine: 166
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets the date when the person accepted changes to their access to the HealthVault\nrecord.\n"
  example: []
  syntax:
    content: public DateTime DateAuthorizationChanged { get; }
    content.vb: Public ReadOnly Property DateAuthorizationChanged As Date
    parameters: []
    return:
      type: System.DateTime
  overload: Microsoft.Health.RecordAuthorization.DateAuthorizationChanged*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.RecordAuthorization.CanAccessAuditInformation
  commentId: P:Microsoft.Health.RecordAuthorization.CanAccessAuditInformation
  id: CanAccessAuditInformation
  parent: Microsoft.Health.RecordAuthorization
  langs:
  - csharp
  - vb
  name: CanAccessAuditInformation
  nameWithType: RecordAuthorization.CanAccessAuditInformation
  fullName: Microsoft.Health.RecordAuthorization.CanAccessAuditInformation
  type: Property
  source:
    remote:
      path: Microsoft.Health/RecordAuthorization.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CanAccessAuditInformation
    path: RecordAuthorization.cs
    startLine: 177
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets whether the authorized person can access audit information in the HealthVault\nrecord.\n"
  example: []
  syntax:
    content: public bool CanAccessAuditInformation { get; }
    content.vb: Public ReadOnly Property CanAccessAuditInformation As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.Health.RecordAuthorization.CanAccessAuditInformation*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.RecordAuthorization.IsRecordCustodian*
  commentId: Overload:Microsoft.Health.RecordAuthorization.IsRecordCustodian
  isExternal: false
  name: IsRecordCustodian
  nameWithType: RecordAuthorization.IsRecordCustodian
  fullName: Microsoft.Health.RecordAuthorization.IsRecordCustodian
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Health.RecordAuthorization.Email*
  commentId: Overload:Microsoft.Health.RecordAuthorization.Email
  isExternal: false
  name: Email
  nameWithType: RecordAuthorization.Email
  fullName: Microsoft.Health.RecordAuthorization.Email
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.RecordAuthorization.RecordDisplayName*
  commentId: Overload:Microsoft.Health.RecordAuthorization.RecordDisplayName
  isExternal: false
  name: RecordDisplayName
  nameWithType: RecordAuthorization.RecordDisplayName
  fullName: Microsoft.Health.RecordAuthorization.RecordDisplayName
- uid: Microsoft.Health.AuthorizedRecordState.ActivationPending
  commentId: F:Microsoft.Health.AuthorizedRecordState.ActivationPending
- uid: Microsoft.Health.AuthorizedRecordState.Active
  commentId: F:Microsoft.Health.AuthorizedRecordState.Active
- uid: Microsoft.Health.AuthorizedRecordState.ActivationRejected
  commentId: F:Microsoft.Health.AuthorizedRecordState.ActivationRejected
- uid: Microsoft.Health.RecordAuthorization.RecordAuthorizationState*
  commentId: Overload:Microsoft.Health.RecordAuthorization.RecordAuthorizationState
  isExternal: false
  name: RecordAuthorizationState
  nameWithType: RecordAuthorization.RecordAuthorizationState
  fullName: Microsoft.Health.RecordAuthorization.RecordAuthorizationState
- uid: Microsoft.Health.AuthorizedRecordState
  commentId: T:Microsoft.Health.AuthorizedRecordState
  parent: Microsoft.Health
  isExternal: false
  name: AuthorizedRecordState
  nameWithType: AuthorizedRecordState
  fullName: Microsoft.Health.AuthorizedRecordState
- uid: Microsoft.Health.RecordAuthorization.DateAuthorizationExpires*
  commentId: Overload:Microsoft.Health.RecordAuthorization.DateAuthorizationExpires
  isExternal: false
  name: DateAuthorizationExpires
  nameWithType: RecordAuthorization.DateAuthorizationExpires
  fullName: Microsoft.Health.RecordAuthorization.DateAuthorizationExpires
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Microsoft.Health.RecordAuthorization.AccessRights*
  commentId: Overload:Microsoft.Health.RecordAuthorization.AccessRights
  isExternal: false
  name: AccessRights
  nameWithType: RecordAuthorization.AccessRights
  fullName: Microsoft.Health.RecordAuthorization.AccessRights
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.Health.AuthorizationRule}
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.Health.AuthorizationRule}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<AuthorizationRule>
  nameWithType: ReadOnlyCollection<AuthorizationRule>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.Health.AuthorizationRule>
  nameWithType.vb: ReadOnlyCollection(Of AuthorizationRule)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.Health.AuthorizationRule)
  name.vb: ReadOnlyCollection(Of AuthorizationRule)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.AuthorizationRule
    name: AuthorizationRule
    nameWithType: AuthorizationRule
    fullName: Microsoft.Health.AuthorizationRule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.AuthorizationRule
    name: AuthorizationRule
    nameWithType: AuthorizationRule
    fullName: Microsoft.Health.AuthorizationRule
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  nameWithType.vb: ReadOnlyCollection(Of T)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)
  name.vb: ReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: Microsoft.Health.RecordAuthorization.RelationshipType
  commentId: P:Microsoft.Health.RecordAuthorization.RelationshipType
  parent: Microsoft.Health.RecordAuthorization
  isExternal: false
  name: RelationshipType
  nameWithType: RecordAuthorization.RelationshipType
  fullName: Microsoft.Health.RecordAuthorization.RelationshipType
- uid: Microsoft.Health.RecordAuthorization.RelationshipType*
  commentId: Overload:Microsoft.Health.RecordAuthorization.RelationshipType
  isExternal: false
  name: RelationshipType
  nameWithType: RecordAuthorization.RelationshipType
  fullName: Microsoft.Health.RecordAuthorization.RelationshipType
- uid: Microsoft.Health.RelationshipType
  commentId: T:Microsoft.Health.RelationshipType
  parent: Microsoft.Health
  isExternal: false
  name: RelationshipType
  nameWithType: RelationshipType
  fullName: Microsoft.Health.RelationshipType
- uid: Microsoft.Health.RecordAuthorization
  commentId: T:Microsoft.Health.RecordAuthorization
  parent: Microsoft.Health
  isExternal: false
  name: RecordAuthorization
  nameWithType: RecordAuthorization
  fullName: Microsoft.Health.RecordAuthorization
- uid: Microsoft.Health.RecordAuthorization.DateAuthorizationFirstAccepted*
  commentId: Overload:Microsoft.Health.RecordAuthorization.DateAuthorizationFirstAccepted
  isExternal: false
  name: DateAuthorizationFirstAccepted
  nameWithType: RecordAuthorization.DateAuthorizationFirstAccepted
  fullName: Microsoft.Health.RecordAuthorization.DateAuthorizationFirstAccepted
- uid: Microsoft.Health.RecordAuthorization.DateAuthorizationChanged*
  commentId: Overload:Microsoft.Health.RecordAuthorization.DateAuthorizationChanged
  isExternal: false
  name: DateAuthorizationChanged
  nameWithType: RecordAuthorization.DateAuthorizationChanged
  fullName: Microsoft.Health.RecordAuthorization.DateAuthorizationChanged
- uid: Microsoft.Health.RecordAuthorization.CanAccessAuditInformation*
  commentId: Overload:Microsoft.Health.RecordAuthorization.CanAccessAuditInformation
  isExternal: false
  name: CanAccessAuditInformation
  nameWithType: RecordAuthorization.CanAccessAuditInformation
  fullName: Microsoft.Health.RecordAuthorization.CanAccessAuditInformation
