### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.HealthRecordFilter
  commentId: T:Microsoft.Health.HealthRecordFilter
  id: HealthRecordFilter
  parent: Microsoft.Health
  children:
  - Microsoft.Health.HealthRecordFilter.#ctor
  - Microsoft.Health.HealthRecordFilter.#ctor(System.Guid[])
  - Microsoft.Health.HealthRecordFilter.#ctor(System.Int32)
  - Microsoft.Health.HealthRecordFilter.#ctor(System.String)
  - Microsoft.Health.HealthRecordFilter.#ctor(System.String,System.Int32)
  - Microsoft.Health.HealthRecordFilter.ClientItemIds
  - Microsoft.Health.HealthRecordFilter.CreatedApplication
  - Microsoft.Health.HealthRecordFilter.CreatedDateMax
  - Microsoft.Health.HealthRecordFilter.CreatedDateMin
  - Microsoft.Health.HealthRecordFilter.CreatedPerson
  - Microsoft.Health.HealthRecordFilter.CurrentVersionOnly
  - Microsoft.Health.HealthRecordFilter.EffectiveDateMax
  - Microsoft.Health.HealthRecordFilter.EffectiveDateMin
  - Microsoft.Health.HealthRecordFilter.Intentions
  - Microsoft.Health.HealthRecordFilter.ItemIds
  - Microsoft.Health.HealthRecordFilter.ItemKeys
  - Microsoft.Health.HealthRecordFilter.MaxFullItemsReturnedPerRequest
  - Microsoft.Health.HealthRecordFilter.MaxItemsReturned
  - Microsoft.Health.HealthRecordFilter.Name
  - Microsoft.Health.HealthRecordFilter.OrderByClauses
  - Microsoft.Health.HealthRecordFilter.States
  - Microsoft.Health.HealthRecordFilter.ToString
  - Microsoft.Health.HealthRecordFilter.TypeIds
  - Microsoft.Health.HealthRecordFilter.UpdatedApplication
  - Microsoft.Health.HealthRecordFilter.UpdatedDateMax
  - Microsoft.Health.HealthRecordFilter.UpdatedDateMin
  - Microsoft.Health.HealthRecordFilter.UpdatedEndDateMax
  - Microsoft.Health.HealthRecordFilter.UpdatedEndDateMin
  - Microsoft.Health.HealthRecordFilter.UpdatedPerson
  - Microsoft.Health.HealthRecordFilter.View
  - Microsoft.Health.HealthRecordFilter.XPath
  langs:
  - csharp
  - vb
  name: HealthRecordFilter
  nameWithType: HealthRecordFilter
  fullName: Microsoft.Health.HealthRecordFilter
  type: Class
  source:
    remote:
      path: Microsoft.Health/HealthRecordFilter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: HealthRecordFilter
    path: HealthRecordFilter.cs
    startLine: 28
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nDefines a filter for use with <xref href=\"Microsoft.Health.HealthRecordSearcher\" data-throw-if-not-resolved=\"false\"></xref>\nsearches.\n"
  remarks: "\nThis class generates the XML for a single filter group for querying \nhealth record items with the \"GetThings\" method.\n"
  example: []
  syntax:
    content: public class HealthRecordFilter
    content.vb: Public Class HealthRecordFilter
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.HealthRecordFilter.#ctor
  commentId: M:Microsoft.Health.HealthRecordFilter.#ctor
  id: '#ctor'
  parent: Microsoft.Health.HealthRecordFilter
  langs:
  - csharp
  - vb
  name: HealthRecordFilter()
  nameWithType: HealthRecordFilter.HealthRecordFilter()
  fullName: Microsoft.Health.HealthRecordFilter.HealthRecordFilter()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/HealthRecordFilter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: HealthRecordFilter.cs
    startLine: 36
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.HealthRecordFilter\" data-throw-if-not-resolved=\"false\"></xref> \nclass using default values.\n"
  example: []
  syntax:
    content: public HealthRecordFilter()
    content.vb: Public Sub New
  overload: Microsoft.Health.HealthRecordFilter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthRecordFilter.#ctor(System.String)
  commentId: M:Microsoft.Health.HealthRecordFilter.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Health.HealthRecordFilter
  langs:
  - csharp
  - vb
  name: HealthRecordFilter(String)
  nameWithType: HealthRecordFilter.HealthRecordFilter(String)
  fullName: Microsoft.Health.HealthRecordFilter.HealthRecordFilter(System.String)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/HealthRecordFilter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: HealthRecordFilter.cs
    startLine: 60
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.HealthRecordFilter\" data-throw-if-not-resolved=\"false\"></xref> \nclass with the specified name.\n"
  remarks: "\nThe name is used to distinguish results matching this filter as\nopposed to results matching other filters when multiple filters \nare applied to the same search.\n"
  example: []
  syntax:
    content: public HealthRecordFilter(string name)
    content.vb: Public Sub New(name As String)
    parameters:
    - id: name
      type: System.String
      description: "\nThe name of the filter.\n"
  overload: Microsoft.Health.HealthRecordFilter.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">name</span> parameter is <strong>null</strong> or empty.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthRecordFilter.#ctor(System.Int32)
  commentId: M:Microsoft.Health.HealthRecordFilter.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: Microsoft.Health.HealthRecordFilter
  langs:
  - csharp
  - vb
  name: HealthRecordFilter(Int32)
  nameWithType: HealthRecordFilter.HealthRecordFilter(Int32)
  fullName: Microsoft.Health.HealthRecordFilter.HealthRecordFilter(System.Int32)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/HealthRecordFilter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: HealthRecordFilter.cs
    startLine: 79
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.HealthRecordFilter\" data-throw-if-not-resolved=\"false\"></xref> \nclass with the specified maximum number of items to return.\n"
  example: []
  syntax:
    content: public HealthRecordFilter(int maxItemsReturned)
    content.vb: Public Sub New(maxItemsReturned As Integer)
    parameters:
    - id: maxItemsReturned
      type: System.Int32
      description: "\nThe maximum number of items to return that match the filter.\n"
  overload: Microsoft.Health.HealthRecordFilter.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nThe <span class=\"paramref\">maxItemsReturned</span> parameter is negative.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthRecordFilter.#ctor(System.String,System.Int32)
  commentId: M:Microsoft.Health.HealthRecordFilter.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: Microsoft.Health.HealthRecordFilter
  langs:
  - csharp
  - vb
  name: HealthRecordFilter(String, Int32)
  nameWithType: HealthRecordFilter.HealthRecordFilter(String, Int32)
  fullName: Microsoft.Health.HealthRecordFilter.HealthRecordFilter(System.String, System.Int32)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/HealthRecordFilter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: HealthRecordFilter.cs
    startLine: 112
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.HealthRecordFilter\" data-throw-if-not-resolved=\"false\"></xref> \nclass with the specified name and maximum number of items to return.\n"
  remarks: "\nThe name is used to distinguish results matching this filter as\nopposed to results matching other filters when multiple filters \nare applied to the same search.\n"
  example: []
  syntax:
    content: public HealthRecordFilter(string name, int maxItemsReturned)
    content.vb: Public Sub New(name As String, maxItemsReturned As Integer)
    parameters:
    - id: name
      type: System.String
      description: "\nThe name of the filter.\n"
    - id: maxItemsReturned
      type: System.Int32
      description: "\nThe maximum number of items to return that match the filter.\n"
  overload: Microsoft.Health.HealthRecordFilter.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">name</span> parameter is <strong>null</strong> or empty.\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nThe <span class=\"paramref\">maxItemsReturned</span> parameter is negative.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthRecordFilter.#ctor(System.Guid[])
  commentId: M:Microsoft.Health.HealthRecordFilter.#ctor(System.Guid[])
  id: '#ctor(System.Guid[])'
  parent: Microsoft.Health.HealthRecordFilter
  langs:
  - csharp
  - vb
  name: HealthRecordFilter(Guid[])
  nameWithType: HealthRecordFilter.HealthRecordFilter(Guid[])
  fullName: Microsoft.Health.HealthRecordFilter.HealthRecordFilter(System.Guid[])
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/HealthRecordFilter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: HealthRecordFilter.cs
    startLine: 129
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.HealthRecordFilter\" data-throw-if-not-resolved=\"false\"></xref> \nclass with the specified unique item type identifiers as filters.\n"
  example: []
  syntax:
    content: public HealthRecordFilter(params Guid[] typeIds)
    content.vb: Public Sub New(ParamArray typeIds As Guid())
    parameters:
    - id: typeIds
      type: System.Guid[]
      description: "\nThe unique item type identifiers limiting the scope of the search to\nonly the specified item types.\n"
  overload: Microsoft.Health.HealthRecordFilter.#ctor*
  nameWithType.vb: HealthRecordFilter.HealthRecordFilter(Guid())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.HealthRecordFilter.HealthRecordFilter(System.Guid())
  name.vb: HealthRecordFilter(Guid())
- uid: Microsoft.Health.HealthRecordFilter.Name
  commentId: P:Microsoft.Health.HealthRecordFilter.Name
  id: Name
  parent: Microsoft.Health.HealthRecordFilter
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: HealthRecordFilter.Name
  fullName: Microsoft.Health.HealthRecordFilter.Name
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthRecordFilter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Name
    path: HealthRecordFilter.cs
    startLine: 226
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the name of the filter.\n"
  remarks: "\nThe name is used to distinguish results matching this filter as\nopposed to results matching other filters when multiple filters \nare applied to the same search.\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.HealthRecordFilter.Name*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">value</span> parameter is <strong>null</strong> or empty.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthRecordFilter.MaxItemsReturned
  commentId: P:Microsoft.Health.HealthRecordFilter.MaxItemsReturned
  id: MaxItemsReturned
  parent: Microsoft.Health.HealthRecordFilter
  langs:
  - csharp
  - vb
  name: MaxItemsReturned
  nameWithType: HealthRecordFilter.MaxItemsReturned
  fullName: Microsoft.Health.HealthRecordFilter.MaxItemsReturned
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthRecordFilter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: MaxItemsReturned
    path: HealthRecordFilter.cs
    startLine: 249
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the maximum number of health record items to return.\n"
  remarks: "\nThe default value returns all items that match the filter.\n"
  example: []
  syntax:
    content: public int MaxItemsReturned { get; set; }
    content.vb: Public Property MaxItemsReturned As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Health.HealthRecordFilter.MaxItemsReturned*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nThe <span class=\"paramref\">value</span> is set to less than zero.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthRecordFilter.MaxFullItemsReturnedPerRequest
  commentId: P:Microsoft.Health.HealthRecordFilter.MaxFullItemsReturnedPerRequest
  id: MaxFullItemsReturnedPerRequest
  parent: Microsoft.Health.HealthRecordFilter
  langs:
  - csharp
  - vb
  name: MaxFullItemsReturnedPerRequest
  nameWithType: HealthRecordFilter.MaxFullItemsReturnedPerRequest
  fullName: Microsoft.Health.HealthRecordFilter.MaxFullItemsReturnedPerRequest
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthRecordFilter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: MaxFullItemsReturnedPerRequest
    path: HealthRecordFilter.cs
    startLine: 286
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the maximum number of full health record items returned per request to\nHealthVault.\n"
  remarks: "\nBy default HealthVault will only return a certain number of \"full\" health record items\nfor any query. It then returns the \"keys\" for the remaining items that matched the\nquery which can then be queried for by ID. <xref href=\"Microsoft.Health.HealthRecordItemCollection\" data-throw-if-not-resolved=\"false\"></xref>\nautomatically manages this paging for you. However, if you want further control over\nthe count of full items retrieved on each request, \n<xref href=\"Microsoft.Health.HealthRecordFilter.MaxFullItemsReturnedPerRequest\" data-throw-if-not-resolved=\"false\"></xref> can be set to optimize for smaller sets\nof data. For example, let's say the data being retrieved is being displayed in a\nGridView and the results are shown 10 items per page.  Rather than get the default\nnumber of full things, you can request 10 full items per request.  Then only if the\nuser clicks to the second page would you need to get the next 10 items.\n"
  example: []
  syntax:
    content: public int MaxFullItemsReturnedPerRequest { get; set; }
    content.vb: Public Property MaxFullItemsReturnedPerRequest As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Health.HealthRecordFilter.MaxFullItemsReturnedPerRequest*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nThe <span class=\"paramref\">value</span> is set to less than zero.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthRecordFilter.View
  commentId: P:Microsoft.Health.HealthRecordFilter.View
  id: View
  parent: Microsoft.Health.HealthRecordFilter
  langs:
  - csharp
  - vb
  name: View
  nameWithType: HealthRecordFilter.View
  fullName: Microsoft.Health.HealthRecordFilter.View
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthRecordFilter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: View
    path: HealthRecordFilter.cs
    startLine: 314
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the view for the filter group.\n"
  remarks: "\nThe default view retrieves the \"Core\" and data\nsections (\"Xml\").\n"
  example: []
  syntax:
    content: public HealthRecordView View { get; set; }
    content.vb: Public Property View As HealthRecordView
    parameters: []
    return:
      type: Microsoft.Health.HealthRecordView
  overload: Microsoft.Health.HealthRecordFilter.View*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">value</span> is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthRecordFilter.ItemIds
  commentId: P:Microsoft.Health.HealthRecordFilter.ItemIds
  id: ItemIds
  parent: Microsoft.Health.HealthRecordFilter
  langs:
  - csharp
  - vb
  name: ItemIds
  nameWithType: HealthRecordFilter.ItemIds
  fullName: Microsoft.Health.HealthRecordFilter.ItemIds
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthRecordFilter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ItemIds
    path: HealthRecordFilter.cs
    startLine: 337
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the ids identifying health record items for \nthe search filter.\n"
  remarks: "\nEach specified ID is AND'd with any other filter parameter. The \nfilter limits the search to the specified health record items.\nIt is illegal to specify both ItemIds and ItemKeys in a single\nfilter.\n"
  example: []
  syntax:
    content: public IList<Guid> ItemIds { get; }
    content.vb: Public ReadOnly Property ItemIds As IList(Of Guid)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Guid}
  overload: Microsoft.Health.HealthRecordFilter.ItemIds*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.HealthRecordFilter.ItemKeys
  commentId: P:Microsoft.Health.HealthRecordFilter.ItemKeys
  id: ItemKeys
  parent: Microsoft.Health.HealthRecordFilter
  langs:
  - csharp
  - vb
  name: ItemKeys
  nameWithType: HealthRecordFilter.ItemKeys
  fullName: Microsoft.Health.HealthRecordFilter.ItemKeys
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthRecordFilter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ItemKeys
    path: HealthRecordFilter.cs
    startLine: 355
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the keys uniquely identifying health record items for \nthe search filter.\n"
  remarks: "\nEach specified ItemKey is AND'd with any other filter parameter. The \nfilter limits the search to the specified health record items.\nIt is illegal to specify more than one of ItemIds, ClientItemIds or ItemKeys in a \nsingle filter.\n"
  example: []
  syntax:
    content: public IList<HealthRecordItemKey> ItemKeys { get; }
    content.vb: Public ReadOnly Property ItemKeys As IList(Of HealthRecordItemKey)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Health.HealthRecordItemKey}
  overload: Microsoft.Health.HealthRecordFilter.ItemKeys*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.HealthRecordFilter.ClientItemIds
  commentId: P:Microsoft.Health.HealthRecordFilter.ClientItemIds
  id: ClientItemIds
  parent: Microsoft.Health.HealthRecordFilter
  langs:
  - csharp
  - vb
  name: ClientItemIds
  nameWithType: HealthRecordFilter.ClientItemIds
  fullName: Microsoft.Health.HealthRecordFilter.ClientItemIds
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthRecordFilter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ClientItemIds
    path: HealthRecordFilter.cs
    startLine: 373
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the client assigned IDs identifying health record items for \nthe search filter.\n"
  remarks: "\nEach specified ID is AND'd with any other filter parameter. The \nfilter limits the search to the specified health record items.\nIt is illegal to specify more than one of ItemIds, ClientItemIds or ItemKeys in a \nsingle filter.\n"
  example: []
  syntax:
    content: public IList<string> ClientItemIds { get; }
    content.vb: Public ReadOnly Property ClientItemIds As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  overload: Microsoft.Health.HealthRecordFilter.ClientItemIds*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.HealthRecordFilter.OrderByClauses
  commentId: P:Microsoft.Health.HealthRecordFilter.OrderByClauses
  id: OrderByClauses
  parent: Microsoft.Health.HealthRecordFilter
  langs:
  - csharp
  - vb
  name: OrderByClauses
  nameWithType: HealthRecordFilter.OrderByClauses
  fullName: Microsoft.Health.HealthRecordFilter.OrderByClauses
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthRecordFilter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: OrderByClauses
    path: HealthRecordFilter.cs
    startLine: 392
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets a collection of the order by clauses which orders the data returned from GetThings request.\n"
  remarks: "\nCurrently only one order by clause is supported per request.\nMultiple clauses may be supported in the future.\n\nIf an order by clause is present, then only things of the type\nspecified in the order by clause will be returned, even if additional\ntype IDs are listed in the filter spec.\n"
  example: []
  syntax:
    content: public IList<HealthRecordItemsOrderByClause> OrderByClauses { get; }
    content.vb: Public ReadOnly Property OrderByClauses As IList(Of HealthRecordItemsOrderByClause)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Health.HealthRecordItemsOrderByClause}
  overload: Microsoft.Health.HealthRecordFilter.OrderByClauses*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.HealthRecordFilter.TypeIds
  commentId: P:Microsoft.Health.HealthRecordFilter.TypeIds
  id: TypeIds
  parent: Microsoft.Health.HealthRecordFilter
  langs:
  - csharp
  - vb
  name: TypeIds
  nameWithType: HealthRecordFilter.TypeIds
  fullName: Microsoft.Health.HealthRecordFilter.TypeIds
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthRecordFilter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: TypeIds
    path: HealthRecordFilter.cs
    startLine: 416
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets a collection of the unique item type identifiers to search\nfor.\n"
  remarks: "\nEach health record item is associated with a type through a\ntype identifier. If set, these values are combined in an OR \noperation. The group is then combined in an AND operation with \nany other filter value in the search for matching health record \nitems. This AND operation excludes ItemId as a filter value, \nbecause ItemId results are obtained by an OR operation.\nTo add a type ID, use the Add method of the returned collection.\n"
  example: []
  syntax:
    content: public IList<Guid> TypeIds { get; }
    content.vb: Public ReadOnly Property TypeIds As IList(Of Guid)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Guid}
  overload: Microsoft.Health.HealthRecordFilter.TypeIds*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.HealthRecordFilter.States
  commentId: P:Microsoft.Health.HealthRecordFilter.States
  id: States
  parent: Microsoft.Health.HealthRecordFilter
  langs:
  - csharp
  - vb
  name: States
  nameWithType: HealthRecordFilter.States
  fullName: Microsoft.Health.HealthRecordFilter.States
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthRecordFilter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: States
    path: HealthRecordFilter.cs
    startLine: 433
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets a set of flags representing the health record item  \nstates to search for.\n"
  example: []
  syntax:
    content: public HealthRecordItemStates States { get; set; }
    content.vb: Public Property States As HealthRecordItemStates
    parameters: []
    return:
      type: Microsoft.Health.HealthRecordItemStates
      description: "\nThe set of flags. If not specified, health record items with state \n<xref href=\"Microsoft.Health.HealthRecordItemState.Active\" data-throw-if-not-resolved=\"false\"></xref>  \nare returned.\n"
  overload: Microsoft.Health.HealthRecordFilter.States*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthRecordFilter.CurrentVersionOnly
  commentId: P:Microsoft.Health.HealthRecordFilter.CurrentVersionOnly
  id: CurrentVersionOnly
  parent: Microsoft.Health.HealthRecordFilter
  langs:
  - csharp
  - vb
  name: CurrentVersionOnly
  nameWithType: HealthRecordFilter.CurrentVersionOnly
  fullName: Microsoft.Health.HealthRecordFilter.CurrentVersionOnly
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthRecordFilter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CurrentVersionOnly
    path: HealthRecordFilter.cs
    startLine: 452
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets a value indicating whether to return only the flag \nspecifying the current versions of the health record items that \nsatisfy the filter restrictions. \n"
  example: []
  syntax:
    content: public bool CurrentVersionOnly { get; set; }
    content.vb: Public Property CurrentVersionOnly As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<strong>true</strong> to return only current versions of health record items;\n<strong>false</strong> to return all versions of the health record items that \nsatisfy the filter restrictions. \n"
  overload: Microsoft.Health.HealthRecordFilter.CurrentVersionOnly*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthRecordFilter.UpdatedDateMin
  commentId: P:Microsoft.Health.HealthRecordFilter.UpdatedDateMin
  id: UpdatedDateMin
  parent: Microsoft.Health.HealthRecordFilter
  langs:
  - csharp
  - vb
  name: UpdatedDateMin
  nameWithType: HealthRecordFilter.UpdatedDateMin
  fullName: Microsoft.Health.HealthRecordFilter.UpdatedDateMin
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthRecordFilter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: UpdatedDateMin
    path: HealthRecordFilter.cs
    startLine: 485
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the minimum date of an updated item to return.\n"
  remarks: "\nIf this property is not set, DateTime.MaxValue is returned.\n<br /><br />\nThe application is responsible for converting from local time to \nUTC, if applicable.\n"
  example: []
  syntax:
    content: public DateTime UpdatedDateMin { get; set; }
    content.vb: Public Property UpdatedDateMin As Date
    parameters: []
    return:
      type: System.DateTime
      description: "\nThe DateTime in UTC of the minimum date of an updated item to\nreturn.\n"
  overload: Microsoft.Health.HealthRecordFilter.UpdatedDateMin*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthRecordFilter.UpdatedDateMax
  commentId: P:Microsoft.Health.HealthRecordFilter.UpdatedDateMax
  id: UpdatedDateMax
  parent: Microsoft.Health.HealthRecordFilter
  langs:
  - csharp
  - vb
  name: UpdatedDateMax
  nameWithType: HealthRecordFilter.UpdatedDateMax
  fullName: Microsoft.Health.HealthRecordFilter.UpdatedDateMax
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthRecordFilter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: UpdatedDateMax
    path: HealthRecordFilter.cs
    startLine: 515
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the maximum date of a returned updated item to return.\n"
  remarks: "\nIf this property is not set, DateTime.MinValue is returned.\n<br /><br />\nThe application is responsible for converting from local time to \nUTC, if applicable.\n"
  example: []
  syntax:
    content: public DateTime UpdatedDateMax { get; set; }
    content.vb: Public Property UpdatedDateMax As Date
    parameters: []
    return:
      type: System.DateTime
      description: "\nThe DateTime in UTC of the maximum date of an updated item \nto return.\n"
  overload: Microsoft.Health.HealthRecordFilter.UpdatedDateMax*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthRecordFilter.UpdatedPerson
  commentId: P:Microsoft.Health.HealthRecordFilter.UpdatedPerson
  id: UpdatedPerson
  parent: Microsoft.Health.HealthRecordFilter
  langs:
  - csharp
  - vb
  name: UpdatedPerson
  nameWithType: HealthRecordFilter.UpdatedPerson
  fullName: Microsoft.Health.HealthRecordFilter.UpdatedPerson
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthRecordFilter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: UpdatedPerson
    path: HealthRecordFilter.cs
    startLine: 538
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the search filter to filter on the person who\nlast updated the health record item.\n"
  remarks: "\nIf the property is not set, Guid.Empty is returned.\n"
  example: []
  syntax:
    content: public Guid UpdatedPerson { get; set; }
    content.vb: Public Property UpdatedPerson As Guid
    parameters: []
    return:
      type: System.Guid
  overload: Microsoft.Health.HealthRecordFilter.UpdatedPerson*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthRecordFilter.UpdatedApplication
  commentId: P:Microsoft.Health.HealthRecordFilter.UpdatedApplication
  id: UpdatedApplication
  parent: Microsoft.Health.HealthRecordFilter
  langs:
  - csharp
  - vb
  name: UpdatedApplication
  nameWithType: HealthRecordFilter.UpdatedApplication
  fullName: Microsoft.Health.HealthRecordFilter.UpdatedApplication
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthRecordFilter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: UpdatedApplication
    path: HealthRecordFilter.cs
    startLine: 561
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the search filter to filter on the application that\nlast updated the health record item.\n"
  remarks: "\nIf this property is not set, Guid.Empty is returned.\n"
  example: []
  syntax:
    content: public Guid UpdatedApplication { get; set; }
    content.vb: Public Property UpdatedApplication As Guid
    parameters: []
    return:
      type: System.Guid
  overload: Microsoft.Health.HealthRecordFilter.UpdatedApplication*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthRecordFilter.CreatedDateMin
  commentId: P:Microsoft.Health.HealthRecordFilter.CreatedDateMin
  id: CreatedDateMin
  parent: Microsoft.Health.HealthRecordFilter
  langs:
  - csharp
  - vb
  name: CreatedDateMin
  nameWithType: HealthRecordFilter.CreatedDateMin
  fullName: Microsoft.Health.HealthRecordFilter.CreatedDateMin
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthRecordFilter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CreatedDateMin
    path: HealthRecordFilter.cs
    startLine: 590
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the minimum date the item was created.\n"
  remarks: "\nIf this property has not been set, DateTime.MaxValue is returned.\n<br /><br />\nThe application is responsible for converting from local time to \nUTC, if applicable.\n"
  example: []
  syntax:
    content: public DateTime CreatedDateMin { get; set; }
    content.vb: Public Property CreatedDateMin As Date
    parameters: []
    return:
      type: System.DateTime
      description: "\nThe DateTime in UTC of the minimum date a item was created.\n"
  overload: Microsoft.Health.HealthRecordFilter.CreatedDateMin*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthRecordFilter.CreatedDateMax
  commentId: P:Microsoft.Health.HealthRecordFilter.CreatedDateMax
  id: CreatedDateMax
  parent: Microsoft.Health.HealthRecordFilter
  langs:
  - csharp
  - vb
  name: CreatedDateMax
  nameWithType: HealthRecordFilter.CreatedDateMax
  fullName: Microsoft.Health.HealthRecordFilter.CreatedDateMax
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthRecordFilter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CreatedDateMax
    path: HealthRecordFilter.cs
    startLine: 619
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the maximum date the item was created.\n"
  remarks: "\nIf this property has not been set, DateTime.MinValue is returned.\n<br /><br />\nThe application is responsible for converting from local time to \nUTC  if applicable.\n"
  example: []
  syntax:
    content: public DateTime CreatedDateMax { get; set; }
    content.vb: Public Property CreatedDateMax As Date
    parameters: []
    return:
      type: System.DateTime
      description: "\nThe DateTime in UTC of the maximum date a item was created.\n"
  overload: Microsoft.Health.HealthRecordFilter.CreatedDateMax*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthRecordFilter.CreatedPerson
  commentId: P:Microsoft.Health.HealthRecordFilter.CreatedPerson
  id: CreatedPerson
  parent: Microsoft.Health.HealthRecordFilter
  langs:
  - csharp
  - vb
  name: CreatedPerson
  nameWithType: HealthRecordFilter.CreatedPerson
  fullName: Microsoft.Health.HealthRecordFilter.CreatedPerson
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthRecordFilter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CreatedPerson
    path: HealthRecordFilter.cs
    startLine: 642
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the search filter to filter on the person who\ncreated the health record item.\n"
  remarks: "\nIf this property has not been set, Guid.Empty is returned.\n"
  example: []
  syntax:
    content: public Guid CreatedPerson { get; set; }
    content.vb: Public Property CreatedPerson As Guid
    parameters: []
    return:
      type: System.Guid
  overload: Microsoft.Health.HealthRecordFilter.CreatedPerson*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthRecordFilter.CreatedApplication
  commentId: P:Microsoft.Health.HealthRecordFilter.CreatedApplication
  id: CreatedApplication
  parent: Microsoft.Health.HealthRecordFilter
  langs:
  - csharp
  - vb
  name: CreatedApplication
  nameWithType: HealthRecordFilter.CreatedApplication
  fullName: Microsoft.Health.HealthRecordFilter.CreatedApplication
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthRecordFilter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CreatedApplication
    path: HealthRecordFilter.cs
    startLine: 665
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the search filter to filter on the application that\ncreated the health record item.\n"
  remarks: "\nIf this property has not been set, Guid.Empty is returned.\n"
  example: []
  syntax:
    content: public Guid CreatedApplication { get; set; }
    content.vb: Public Property CreatedApplication As Guid
    parameters: []
    return:
      type: System.Guid
  overload: Microsoft.Health.HealthRecordFilter.CreatedApplication*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthRecordFilter.EffectiveDateMin
  commentId: P:Microsoft.Health.HealthRecordFilter.EffectiveDateMin
  id: EffectiveDateMin
  parent: Microsoft.Health.HealthRecordFilter
  langs:
  - csharp
  - vb
  name: EffectiveDateMin
  nameWithType: HealthRecordFilter.EffectiveDateMin
  fullName: Microsoft.Health.HealthRecordFilter.EffectiveDateMin
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthRecordFilter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: EffectiveDateMin
    path: HealthRecordFilter.cs
    startLine: 694
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the minimum date the item pertains to.\n"
  remarks: "\nIf this property has not been set, DateTime.MaxValue is returned.\n<br /><br />\nThe application is responsible for converting from local time to \nUTC, if applicable.\n"
  example: []
  syntax:
    content: public DateTime EffectiveDateMin { get; set; }
    content.vb: Public Property EffectiveDateMin As Date
    parameters: []
    return:
      type: System.DateTime
      description: "\nThe DateTime in UTC of the minimum effective date of a item.\n"
  overload: Microsoft.Health.HealthRecordFilter.EffectiveDateMin*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthRecordFilter.EffectiveDateMax
  commentId: P:Microsoft.Health.HealthRecordFilter.EffectiveDateMax
  id: EffectiveDateMax
  parent: Microsoft.Health.HealthRecordFilter
  langs:
  - csharp
  - vb
  name: EffectiveDateMax
  nameWithType: HealthRecordFilter.EffectiveDateMax
  fullName: Microsoft.Health.HealthRecordFilter.EffectiveDateMax
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthRecordFilter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: EffectiveDateMax
    path: HealthRecordFilter.cs
    startLine: 723
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the maximum date the item was pertains to.\n"
  remarks: "\nIf this property has not been set, DateTime.MinValue is returned.\n<br /><br />\nThe application is responsible for converting from local time to \nUTC, if applicable.\n"
  example: []
  syntax:
    content: public DateTime EffectiveDateMax { get; set; }
    content.vb: Public Property EffectiveDateMax As Date
    parameters: []
    return:
      type: System.DateTime
      description: "\nThe DateTime in UTC of the maximum effective date of a item.\n"
  overload: Microsoft.Health.HealthRecordFilter.EffectiveDateMax*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthRecordFilter.XPath
  commentId: P:Microsoft.Health.HealthRecordFilter.XPath
  id: XPath
  parent: Microsoft.Health.HealthRecordFilter
  langs:
  - csharp
  - vb
  name: XPath
  nameWithType: HealthRecordFilter.XPath
  fullName: Microsoft.Health.HealthRecordFilter.XPath
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthRecordFilter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: XPath
    path: HealthRecordFilter.cs
    startLine: 754
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the search filter to filter on the existence\nof data in an XML (structured data) item.\n"
  remarks: "\nThe HealthVault XPath Explorer can be used to create these XPath queries.\n\nIf this property has not been set, <strong>null</strong> is returned.\n<br /><br />\nThis can only be an existence check. It cannot be used for \ncalculations or to return only specific values.\n"
  example: []
  syntax:
    content: public string XPath { get; set; }
    content.vb: Public Property XPath As String
    parameters: []
    return:
      type: System.String
      description: "\nA string representing the filter.\n"
  overload: Microsoft.Health.HealthRecordFilter.XPath*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthRecordFilter.UpdatedEndDateMin
  commentId: P:Microsoft.Health.HealthRecordFilter.UpdatedEndDateMin
  id: UpdatedEndDateMin
  parent: Microsoft.Health.HealthRecordFilter
  langs:
  - csharp
  - vb
  name: UpdatedEndDateMin
  nameWithType: HealthRecordFilter.UpdatedEndDateMin
  fullName: Microsoft.Health.HealthRecordFilter.UpdatedEndDateMin
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthRecordFilter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: UpdatedEndDateMin
    path: HealthRecordFilter.cs
    startLine: 776
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the minimum updated end date of the item.\n"
  remarks: "\nIf this property has not been set, DateTime.MaxValue is returned.\n<br /><br />\nThe application is responsible for converting from local time to \nUTC, if applicable.\n"
  example: []
  syntax:
    content: public DateTime UpdatedEndDateMin { get; set; }
    content.vb: Public Property UpdatedEndDateMin As Date
    parameters: []
    return:
      type: System.DateTime
      description: "\nThe DateTime of the minimum updated end date of a item.\n"
  overload: Microsoft.Health.HealthRecordFilter.UpdatedEndDateMin*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthRecordFilter.UpdatedEndDateMax
  commentId: P:Microsoft.Health.HealthRecordFilter.UpdatedEndDateMax
  id: UpdatedEndDateMax
  parent: Microsoft.Health.HealthRecordFilter
  langs:
  - csharp
  - vb
  name: UpdatedEndDateMax
  nameWithType: HealthRecordFilter.UpdatedEndDateMax
  fullName: Microsoft.Health.HealthRecordFilter.UpdatedEndDateMax
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthRecordFilter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: UpdatedEndDateMax
    path: HealthRecordFilter.cs
    startLine: 805
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the maximum updated end date of the item.\n"
  remarks: "\nIf this property has not been set, DateTime.MinValue is returned.\n<br /><br />\nThe application is responsible for converting from local time to \nUTC, if applicable.\n"
  example: []
  syntax:
    content: public DateTime UpdatedEndDateMax { get; set; }
    content.vb: Public Property UpdatedEndDateMax As Date
    parameters: []
    return:
      type: System.DateTime
      description: "\nThe DateTime of the maximum updated end date of a item.\n"
  overload: Microsoft.Health.HealthRecordFilter.UpdatedEndDateMax*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthRecordFilter.Intentions
  commentId: P:Microsoft.Health.HealthRecordFilter.Intentions
  id: Intentions
  parent: Microsoft.Health.HealthRecordFilter
  langs:
  - csharp
  - vb
  name: Intentions
  nameWithType: HealthRecordFilter.Intentions
  fullName: Microsoft.Health.HealthRecordFilter.Intentions
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthRecordFilter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Intentions
    path: HealthRecordFilter.cs
    startLine: 828
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nThe usage intentions for items that will be retrieved in\nthis filter group.\n"
  remarks: "\nIf not set, the default value will be\n<xref href=\"Microsoft.Health.ItemRetrievalIntentions.Unspecified\" data-throw-if-not-resolved=\"false\"></xref>.\nThis property is reserved for future use.\n"
  example: []
  syntax:
    content: public ItemRetrievalIntentions Intentions { get; set; }
    content.vb: Public Property Intentions As ItemRetrievalIntentions
    parameters: []
    return:
      type: Microsoft.Health.ItemRetrievalIntentions
  overload: Microsoft.Health.HealthRecordFilter.Intentions*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthRecordFilter.ToString
  commentId: M:Microsoft.Health.HealthRecordFilter.ToString
  id: ToString
  parent: Microsoft.Health.HealthRecordFilter
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: HealthRecordFilter.ToString()
  fullName: Microsoft.Health.HealthRecordFilter.ToString()
  type: Method
  source:
    remote:
      path: Microsoft.Health/HealthRecordFilter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ToString
    path: HealthRecordFilter.cs
    startLine: 850
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets a string representation of the instance.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\nThe XML that is used as the group portion of the\nXML request for a \"GetThings\" method call.\n"
  overridden: System.Object.ToString
  overload: Microsoft.Health.HealthRecordFilter.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Health.HealthRecordSearcher
  commentId: T:Microsoft.Health.HealthRecordSearcher
  parent: Microsoft.Health
  isExternal: false
  name: HealthRecordSearcher
  nameWithType: HealthRecordSearcher
  fullName: Microsoft.Health.HealthRecordSearcher
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.HealthRecordFilter
  commentId: T:Microsoft.Health.HealthRecordFilter
  parent: Microsoft.Health
  isExternal: false
  name: HealthRecordFilter
  nameWithType: HealthRecordFilter
  fullName: Microsoft.Health.HealthRecordFilter
- uid: Microsoft.Health.HealthRecordFilter.#ctor*
  commentId: Overload:Microsoft.Health.HealthRecordFilter.#ctor
  isExternal: false
  name: HealthRecordFilter
  nameWithType: HealthRecordFilter.HealthRecordFilter
  fullName: Microsoft.Health.HealthRecordFilter.HealthRecordFilter
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Guid[]
  name: Guid[]
  nameWithType: Guid[]
  fullName: System.Guid[]
  nameWithType.vb: Guid()
  fullName.vb: System.Guid()
  name.vb: Guid()
  spec.csharp:
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.Health.HealthRecordFilter.Name*
  commentId: Overload:Microsoft.Health.HealthRecordFilter.Name
  isExternal: false
  name: Name
  nameWithType: HealthRecordFilter.Name
  fullName: Microsoft.Health.HealthRecordFilter.Name
- uid: Microsoft.Health.HealthRecordFilter.MaxItemsReturned*
  commentId: Overload:Microsoft.Health.HealthRecordFilter.MaxItemsReturned
  isExternal: false
  name: MaxItemsReturned
  nameWithType: HealthRecordFilter.MaxItemsReturned
  fullName: Microsoft.Health.HealthRecordFilter.MaxItemsReturned
- uid: Microsoft.Health.HealthRecordItemCollection
  commentId: T:Microsoft.Health.HealthRecordItemCollection
  parent: Microsoft.Health
  isExternal: false
  name: HealthRecordItemCollection
  nameWithType: HealthRecordItemCollection
  fullName: Microsoft.Health.HealthRecordItemCollection
- uid: Microsoft.Health.HealthRecordFilter.MaxFullItemsReturnedPerRequest
  commentId: P:Microsoft.Health.HealthRecordFilter.MaxFullItemsReturnedPerRequest
- uid: Microsoft.Health.HealthRecordFilter.MaxFullItemsReturnedPerRequest*
  commentId: Overload:Microsoft.Health.HealthRecordFilter.MaxFullItemsReturnedPerRequest
  isExternal: false
  name: MaxFullItemsReturnedPerRequest
  nameWithType: HealthRecordFilter.MaxFullItemsReturnedPerRequest
  fullName: Microsoft.Health.HealthRecordFilter.MaxFullItemsReturnedPerRequest
- uid: Microsoft.Health.HealthRecordFilter.View*
  commentId: Overload:Microsoft.Health.HealthRecordFilter.View
  isExternal: false
  name: View
  nameWithType: HealthRecordFilter.View
  fullName: Microsoft.Health.HealthRecordFilter.View
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: Microsoft.Health.HealthRecordView
  commentId: T:Microsoft.Health.HealthRecordView
  parent: Microsoft.Health
  isExternal: false
  name: HealthRecordView
  nameWithType: HealthRecordView
  fullName: Microsoft.Health.HealthRecordView
- uid: Microsoft.Health.HealthRecordFilter.ItemIds*
  commentId: Overload:Microsoft.Health.HealthRecordFilter.ItemIds
  isExternal: false
  name: ItemIds
  nameWithType: HealthRecordFilter.ItemIds
  fullName: Microsoft.Health.HealthRecordFilter.ItemIds
- uid: System.Collections.Generic.IList{System.Guid}
  commentId: T:System.Collections.Generic.IList{System.Guid}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Guid>
  nameWithType: IList<Guid>
  fullName: System.Collections.Generic.IList<System.Guid>
  nameWithType.vb: IList(Of Guid)
  fullName.vb: System.Collections.Generic.IList(Of System.Guid)
  name.vb: IList(Of Guid)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Health.HealthRecordFilter.ItemKeys*
  commentId: Overload:Microsoft.Health.HealthRecordFilter.ItemKeys
  isExternal: false
  name: ItemKeys
  nameWithType: HealthRecordFilter.ItemKeys
  fullName: Microsoft.Health.HealthRecordFilter.ItemKeys
- uid: System.Collections.Generic.IList{Microsoft.Health.HealthRecordItemKey}
  commentId: T:System.Collections.Generic.IList{Microsoft.Health.HealthRecordItemKey}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<HealthRecordItemKey>
  nameWithType: IList<HealthRecordItemKey>
  fullName: System.Collections.Generic.IList<Microsoft.Health.HealthRecordItemKey>
  nameWithType.vb: IList(Of HealthRecordItemKey)
  fullName.vb: System.Collections.Generic.IList(Of Microsoft.Health.HealthRecordItemKey)
  name.vb: IList(Of HealthRecordItemKey)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.HealthRecordItemKey
    name: HealthRecordItemKey
    nameWithType: HealthRecordItemKey
    fullName: Microsoft.Health.HealthRecordItemKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.HealthRecordItemKey
    name: HealthRecordItemKey
    nameWithType: HealthRecordItemKey
    fullName: Microsoft.Health.HealthRecordItemKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordFilter.ClientItemIds*
  commentId: Overload:Microsoft.Health.HealthRecordFilter.ClientItemIds
  isExternal: false
  name: ClientItemIds
  nameWithType: HealthRecordFilter.ClientItemIds
  fullName: Microsoft.Health.HealthRecordFilter.ClientItemIds
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordFilter.OrderByClauses*
  commentId: Overload:Microsoft.Health.HealthRecordFilter.OrderByClauses
  isExternal: false
  name: OrderByClauses
  nameWithType: HealthRecordFilter.OrderByClauses
  fullName: Microsoft.Health.HealthRecordFilter.OrderByClauses
- uid: System.Collections.Generic.IList{Microsoft.Health.HealthRecordItemsOrderByClause}
  commentId: T:System.Collections.Generic.IList{Microsoft.Health.HealthRecordItemsOrderByClause}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<HealthRecordItemsOrderByClause>
  nameWithType: IList<HealthRecordItemsOrderByClause>
  fullName: System.Collections.Generic.IList<Microsoft.Health.HealthRecordItemsOrderByClause>
  nameWithType.vb: IList(Of HealthRecordItemsOrderByClause)
  fullName.vb: System.Collections.Generic.IList(Of Microsoft.Health.HealthRecordItemsOrderByClause)
  name.vb: IList(Of HealthRecordItemsOrderByClause)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.HealthRecordItemsOrderByClause
    name: HealthRecordItemsOrderByClause
    nameWithType: HealthRecordItemsOrderByClause
    fullName: Microsoft.Health.HealthRecordItemsOrderByClause
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.HealthRecordItemsOrderByClause
    name: HealthRecordItemsOrderByClause
    nameWithType: HealthRecordItemsOrderByClause
    fullName: Microsoft.Health.HealthRecordItemsOrderByClause
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordFilter.TypeIds*
  commentId: Overload:Microsoft.Health.HealthRecordFilter.TypeIds
  isExternal: false
  name: TypeIds
  nameWithType: HealthRecordFilter.TypeIds
  fullName: Microsoft.Health.HealthRecordFilter.TypeIds
- uid: Microsoft.Health.HealthRecordItemState.Active
  commentId: F:Microsoft.Health.HealthRecordItemState.Active
- uid: Microsoft.Health.HealthRecordFilter.States*
  commentId: Overload:Microsoft.Health.HealthRecordFilter.States
  isExternal: false
  name: States
  nameWithType: HealthRecordFilter.States
  fullName: Microsoft.Health.HealthRecordFilter.States
- uid: Microsoft.Health.HealthRecordItemStates
  commentId: T:Microsoft.Health.HealthRecordItemStates
  parent: Microsoft.Health
  isExternal: false
  name: HealthRecordItemStates
  nameWithType: HealthRecordItemStates
  fullName: Microsoft.Health.HealthRecordItemStates
- uid: Microsoft.Health.HealthRecordFilter.CurrentVersionOnly*
  commentId: Overload:Microsoft.Health.HealthRecordFilter.CurrentVersionOnly
  isExternal: false
  name: CurrentVersionOnly
  nameWithType: HealthRecordFilter.CurrentVersionOnly
  fullName: Microsoft.Health.HealthRecordFilter.CurrentVersionOnly
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Health.HealthRecordFilter.UpdatedDateMin*
  commentId: Overload:Microsoft.Health.HealthRecordFilter.UpdatedDateMin
  isExternal: false
  name: UpdatedDateMin
  nameWithType: HealthRecordFilter.UpdatedDateMin
  fullName: Microsoft.Health.HealthRecordFilter.UpdatedDateMin
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Microsoft.Health.HealthRecordFilter.UpdatedDateMax*
  commentId: Overload:Microsoft.Health.HealthRecordFilter.UpdatedDateMax
  isExternal: false
  name: UpdatedDateMax
  nameWithType: HealthRecordFilter.UpdatedDateMax
  fullName: Microsoft.Health.HealthRecordFilter.UpdatedDateMax
- uid: Microsoft.Health.HealthRecordFilter.UpdatedPerson*
  commentId: Overload:Microsoft.Health.HealthRecordFilter.UpdatedPerson
  isExternal: false
  name: UpdatedPerson
  nameWithType: HealthRecordFilter.UpdatedPerson
  fullName: Microsoft.Health.HealthRecordFilter.UpdatedPerson
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Microsoft.Health.HealthRecordFilter.UpdatedApplication*
  commentId: Overload:Microsoft.Health.HealthRecordFilter.UpdatedApplication
  isExternal: false
  name: UpdatedApplication
  nameWithType: HealthRecordFilter.UpdatedApplication
  fullName: Microsoft.Health.HealthRecordFilter.UpdatedApplication
- uid: Microsoft.Health.HealthRecordFilter.CreatedDateMin*
  commentId: Overload:Microsoft.Health.HealthRecordFilter.CreatedDateMin
  isExternal: false
  name: CreatedDateMin
  nameWithType: HealthRecordFilter.CreatedDateMin
  fullName: Microsoft.Health.HealthRecordFilter.CreatedDateMin
- uid: Microsoft.Health.HealthRecordFilter.CreatedDateMax*
  commentId: Overload:Microsoft.Health.HealthRecordFilter.CreatedDateMax
  isExternal: false
  name: CreatedDateMax
  nameWithType: HealthRecordFilter.CreatedDateMax
  fullName: Microsoft.Health.HealthRecordFilter.CreatedDateMax
- uid: Microsoft.Health.HealthRecordFilter.CreatedPerson*
  commentId: Overload:Microsoft.Health.HealthRecordFilter.CreatedPerson
  isExternal: false
  name: CreatedPerson
  nameWithType: HealthRecordFilter.CreatedPerson
  fullName: Microsoft.Health.HealthRecordFilter.CreatedPerson
- uid: Microsoft.Health.HealthRecordFilter.CreatedApplication*
  commentId: Overload:Microsoft.Health.HealthRecordFilter.CreatedApplication
  isExternal: false
  name: CreatedApplication
  nameWithType: HealthRecordFilter.CreatedApplication
  fullName: Microsoft.Health.HealthRecordFilter.CreatedApplication
- uid: Microsoft.Health.HealthRecordFilter.EffectiveDateMin*
  commentId: Overload:Microsoft.Health.HealthRecordFilter.EffectiveDateMin
  isExternal: false
  name: EffectiveDateMin
  nameWithType: HealthRecordFilter.EffectiveDateMin
  fullName: Microsoft.Health.HealthRecordFilter.EffectiveDateMin
- uid: Microsoft.Health.HealthRecordFilter.EffectiveDateMax*
  commentId: Overload:Microsoft.Health.HealthRecordFilter.EffectiveDateMax
  isExternal: false
  name: EffectiveDateMax
  nameWithType: HealthRecordFilter.EffectiveDateMax
  fullName: Microsoft.Health.HealthRecordFilter.EffectiveDateMax
- uid: Microsoft.Health.HealthRecordFilter.XPath*
  commentId: Overload:Microsoft.Health.HealthRecordFilter.XPath
  isExternal: false
  name: XPath
  nameWithType: HealthRecordFilter.XPath
  fullName: Microsoft.Health.HealthRecordFilter.XPath
- uid: Microsoft.Health.HealthRecordFilter.UpdatedEndDateMin*
  commentId: Overload:Microsoft.Health.HealthRecordFilter.UpdatedEndDateMin
  isExternal: false
  name: UpdatedEndDateMin
  nameWithType: HealthRecordFilter.UpdatedEndDateMin
  fullName: Microsoft.Health.HealthRecordFilter.UpdatedEndDateMin
- uid: Microsoft.Health.HealthRecordFilter.UpdatedEndDateMax*
  commentId: Overload:Microsoft.Health.HealthRecordFilter.UpdatedEndDateMax
  isExternal: false
  name: UpdatedEndDateMax
  nameWithType: HealthRecordFilter.UpdatedEndDateMax
  fullName: Microsoft.Health.HealthRecordFilter.UpdatedEndDateMax
- uid: Microsoft.Health.ItemRetrievalIntentions.Unspecified
  commentId: F:Microsoft.Health.ItemRetrievalIntentions.Unspecified
- uid: Microsoft.Health.HealthRecordFilter.Intentions*
  commentId: Overload:Microsoft.Health.HealthRecordFilter.Intentions
  isExternal: false
  name: Intentions
  nameWithType: HealthRecordFilter.Intentions
  fullName: Microsoft.Health.HealthRecordFilter.Intentions
- uid: Microsoft.Health.ItemRetrievalIntentions
  commentId: T:Microsoft.Health.ItemRetrievalIntentions
  parent: Microsoft.Health
  isExternal: false
  name: ItemRetrievalIntentions
  nameWithType: ItemRetrievalIntentions
  fullName: Microsoft.Health.ItemRetrievalIntentions
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordFilter.ToString*
  commentId: Overload:Microsoft.Health.HealthRecordFilter.ToString
  isExternal: false
  name: ToString
  nameWithType: HealthRecordFilter.ToString
  fullName: Microsoft.Health.HealthRecordFilter.ToString
