### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.HealthServiceAudit
  commentId: T:Microsoft.Health.HealthServiceAudit
  id: HealthServiceAudit
  parent: Microsoft.Health
  children:
  - Microsoft.Health.HealthServiceAudit.#ctor
  - Microsoft.Health.HealthServiceAudit.AccessAvenue
  - Microsoft.Health.HealthServiceAudit.ApplicationId
  - Microsoft.Health.HealthServiceAudit.ApplicationName
  - Microsoft.Health.HealthServiceAudit.AuditAction
  - Microsoft.Health.HealthServiceAudit.ImpersonatorId
  - Microsoft.Health.HealthServiceAudit.ImpersonatorName
  - Microsoft.Health.HealthServiceAudit.MasterApplicationId
  - Microsoft.Health.HealthServiceAudit.PersonId
  - Microsoft.Health.HealthServiceAudit.PersonName
  - Microsoft.Health.HealthServiceAudit.Timestamp
  - Microsoft.Health.HealthServiceAudit.ToString
  langs:
  - csharp
  - vb
  name: HealthServiceAudit
  nameWithType: HealthServiceAudit
  fullName: Microsoft.Health.HealthServiceAudit
  type: Class
  source:
    remote:
      path: Microsoft.Health/HealthServiceAudit.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: HealthServiceAudit
    path: HealthServiceAudit.cs
    startLine: 21
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nRepresents an audit trail of creations or updates to\ninformation in the HealthVault service.\n"
  remarks: "\nThe audit records when the operation\nhappened, by which application, and by which person.\n"
  example: []
  syntax:
    content: public class HealthServiceAudit
    content.vb: Public Class HealthServiceAudit
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.HealthServiceAudit.#ctor
  commentId: M:Microsoft.Health.HealthServiceAudit.#ctor
  id: '#ctor'
  parent: Microsoft.Health.HealthServiceAudit
  langs:
  - csharp
  - vb
  name: HealthServiceAudit()
  nameWithType: HealthServiceAudit.HealthServiceAudit()
  fullName: Microsoft.Health.HealthServiceAudit.HealthServiceAudit()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/HealthServiceAudit.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: HealthServiceAudit.cs
    startLine: 28
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.HealthServiceAudit\" data-throw-if-not-resolved=\"false\"></xref>\nclass using default values.\n"
  example: []
  syntax:
    content: public HealthServiceAudit()
    content.vb: Public Sub New
  overload: Microsoft.Health.HealthServiceAudit.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthServiceAudit.Timestamp
  commentId: P:Microsoft.Health.HealthServiceAudit.Timestamp
  id: Timestamp
  parent: Microsoft.Health.HealthServiceAudit
  langs:
  - csharp
  - vb
  name: Timestamp
  nameWithType: HealthServiceAudit.Timestamp
  fullName: Microsoft.Health.HealthServiceAudit.Timestamp
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthServiceAudit.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Timestamp
    path: HealthServiceAudit.cs
    startLine: 141
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets the time stamp of the audit.\n"
  remarks: "\nThe application must convert the value to local time\nif needed.\n"
  example: []
  syntax:
    content: public DateTime Timestamp { get; }
    content.vb: Public ReadOnly Property Timestamp As Date
    parameters: []
    return:
      type: System.DateTime
      description: "\nA DateTime in UTC representing when the operation happened.\n"
  overload: Microsoft.Health.HealthServiceAudit.Timestamp*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.HealthServiceAudit.ApplicationId
  commentId: P:Microsoft.Health.HealthServiceAudit.ApplicationId
  id: ApplicationId
  parent: Microsoft.Health.HealthServiceAudit
  langs:
  - csharp
  - vb
  name: ApplicationId
  nameWithType: HealthServiceAudit.ApplicationId
  fullName: Microsoft.Health.HealthServiceAudit.ApplicationId
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthServiceAudit.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ApplicationId
    path: HealthServiceAudit.cs
    startLine: 155
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets the unique identifier of the application.\n"
  example: []
  syntax:
    content: public Guid ApplicationId { get; }
    content.vb: Public ReadOnly Property ApplicationId As Guid
    parameters: []
    return:
      type: System.Guid
      description: "\nA Guid representing the unique identifier of the application.\n"
  overload: Microsoft.Health.HealthServiceAudit.ApplicationId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.HealthServiceAudit.ApplicationName
  commentId: P:Microsoft.Health.HealthServiceAudit.ApplicationName
  id: ApplicationName
  parent: Microsoft.Health.HealthServiceAudit
  langs:
  - csharp
  - vb
  name: ApplicationName
  nameWithType: HealthServiceAudit.ApplicationName
  fullName: Microsoft.Health.HealthServiceAudit.ApplicationName
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthServiceAudit.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ApplicationName
    path: HealthServiceAudit.cs
    startLine: 169
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets the name of the application.\n"
  example: []
  syntax:
    content: public string ApplicationName { get; }
    content.vb: Public ReadOnly Property ApplicationName As String
    parameters: []
    return:
      type: System.String
      description: "\nA string representing the name of the application.\n"
  overload: Microsoft.Health.HealthServiceAudit.ApplicationName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.HealthServiceAudit.PersonId
  commentId: P:Microsoft.Health.HealthServiceAudit.PersonId
  id: PersonId
  parent: Microsoft.Health.HealthServiceAudit
  langs:
  - csharp
  - vb
  name: PersonId
  nameWithType: HealthServiceAudit.PersonId
  fullName: Microsoft.Health.HealthServiceAudit.PersonId
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthServiceAudit.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: PersonId
    path: HealthServiceAudit.cs
    startLine: 183
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets the unique identifier of the person.\n"
  example: []
  syntax:
    content: public Guid PersonId { get; }
    content.vb: Public ReadOnly Property PersonId As Guid
    parameters: []
    return:
      type: System.Guid
      description: "\nA Guid representing the unique identifier of the person.\n"
  overload: Microsoft.Health.HealthServiceAudit.PersonId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.HealthServiceAudit.PersonName
  commentId: P:Microsoft.Health.HealthServiceAudit.PersonName
  id: PersonName
  parent: Microsoft.Health.HealthServiceAudit
  langs:
  - csharp
  - vb
  name: PersonName
  nameWithType: HealthServiceAudit.PersonName
  fullName: Microsoft.Health.HealthServiceAudit.PersonName
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthServiceAudit.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: PersonName
    path: HealthServiceAudit.cs
    startLine: 193
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets the name of the person.\n"
  example: []
  syntax:
    content: public string PersonName { get; }
    content.vb: Public ReadOnly Property PersonName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.HealthServiceAudit.PersonName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.HealthServiceAudit.ImpersonatorId
  commentId: P:Microsoft.Health.HealthServiceAudit.ImpersonatorId
  id: ImpersonatorId
  parent: Microsoft.Health.HealthServiceAudit
  langs:
  - csharp
  - vb
  name: ImpersonatorId
  nameWithType: HealthServiceAudit.ImpersonatorId
  fullName: Microsoft.Health.HealthServiceAudit.ImpersonatorId
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthServiceAudit.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ImpersonatorId
    path: HealthServiceAudit.cs
    startLine: 212
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets the unique identifier of the impersonator. \n"
  remarks: "\nThe value is <strong>null</strong> if impersonation was not used to create, \nchange, or delete the <xref href=\"Microsoft.Health.HealthRecordItem\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Guid? ImpersonatorId { get; }
    content.vb: Public ReadOnly Property ImpersonatorId As Guid?
    parameters: []
    return:
      type: System.Nullable{System.Guid}
      description: "\nA Guid representing the identifier of the impersonator.\n"
  overload: Microsoft.Health.HealthServiceAudit.ImpersonatorId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.HealthServiceAudit.ImpersonatorName
  commentId: P:Microsoft.Health.HealthServiceAudit.ImpersonatorName
  id: ImpersonatorName
  parent: Microsoft.Health.HealthServiceAudit
  langs:
  - csharp
  - vb
  name: ImpersonatorName
  nameWithType: HealthServiceAudit.ImpersonatorName
  fullName: Microsoft.Health.HealthServiceAudit.ImpersonatorName
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthServiceAudit.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ImpersonatorName
    path: HealthServiceAudit.cs
    startLine: 231
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets the name of the impersonator. \n"
  remarks: "\nThe value is <strong>null</strong> if impersonation was not used to create, \nchange, or delete the <xref href=\"Microsoft.Health.HealthRecordItem\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public string ImpersonatorName { get; }
    content.vb: Public ReadOnly Property ImpersonatorName As String
    parameters: []
    return:
      type: System.String
      description: "\nA string representing the name of the impersonator.\n"
  overload: Microsoft.Health.HealthServiceAudit.ImpersonatorName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.HealthServiceAudit.AccessAvenue
  commentId: P:Microsoft.Health.HealthServiceAudit.AccessAvenue
  id: AccessAvenue
  parent: Microsoft.Health.HealthServiceAudit
  langs:
  - csharp
  - vb
  name: AccessAvenue
  nameWithType: HealthServiceAudit.AccessAvenue
  fullName: Microsoft.Health.HealthServiceAudit.AccessAvenue
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthServiceAudit.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AccessAvenue
    path: HealthServiceAudit.cs
    startLine: 246
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets the access avenue used to create, change, or delete the \n<xref href=\"Microsoft.Health.HealthRecordItem\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public HealthServiceAuditAccessAvenue AccessAvenue { get; }
    content.vb: Public ReadOnly Property AccessAvenue As HealthServiceAuditAccessAvenue
    parameters: []
    return:
      type: Microsoft.Health.HealthServiceAuditAccessAvenue
      description: "\nA <xref href=\"Microsoft.Health.HealthServiceAuditAccessAvenue\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  overload: Microsoft.Health.HealthServiceAudit.AccessAvenue*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.HealthServiceAudit.AuditAction
  commentId: P:Microsoft.Health.HealthServiceAudit.AuditAction
  id: AuditAction
  parent: Microsoft.Health.HealthServiceAudit
  langs:
  - csharp
  - vb
  name: AuditAction
  nameWithType: HealthServiceAudit.AuditAction
  fullName: Microsoft.Health.HealthServiceAudit.AuditAction
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthServiceAudit.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AuditAction
    path: HealthServiceAudit.cs
    startLine: 257
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets the action performed.\n"
  example: []
  syntax:
    content: public HealthServiceAuditAction AuditAction { get; }
    content.vb: Public ReadOnly Property AuditAction As HealthServiceAuditAction
    parameters: []
    return:
      type: Microsoft.Health.HealthServiceAuditAction
  overload: Microsoft.Health.HealthServiceAudit.AuditAction*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.HealthServiceAudit.MasterApplicationId
  commentId: P:Microsoft.Health.HealthServiceAudit.MasterApplicationId
  id: MasterApplicationId
  parent: Microsoft.Health.HealthServiceAudit
  langs:
  - csharp
  - vb
  name: MasterApplicationId
  nameWithType: HealthServiceAudit.MasterApplicationId
  fullName: Microsoft.Health.HealthServiceAudit.MasterApplicationId
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthServiceAudit.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: MasterApplicationId
    path: HealthServiceAudit.cs
    startLine: 280
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nThe unique application identifier for the code base of the\napplication that created the audit.\n"
  remarks: "\nWhen an application performs a write action on an item the audit\nis stamped with the applications unique identifier. In the case of\nmaster/child applications, or SODA applications, the <xref href=\"Microsoft.Health.HealthServiceAudit.ApplicationId\" data-throw-if-not-resolved=\"false\"></xref>\nis the identifier of the child or installation of the application.\nThe <xref href=\"Microsoft.Health.HealthServiceAudit.MasterApplicationId\" data-throw-if-not-resolved=\"false\"></xref> is the application identifier for the root of \nthe configuration for that application. In the case of master/child\napplications, this is the application identifier of the master. For\nSODA applications, this is the application identifier for the root\nconfiguration of the application.        \n"
  example: []
  syntax:
    content: public Guid MasterApplicationId { get; }
    content.vb: Public ReadOnly Property MasterApplicationId As Guid
    parameters: []
    return:
      type: System.Guid
  overload: Microsoft.Health.HealthServiceAudit.MasterApplicationId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.HealthServiceAudit.ToString
  commentId: M:Microsoft.Health.HealthServiceAudit.ToString
  id: ToString
  parent: Microsoft.Health.HealthServiceAudit
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: HealthServiceAudit.ToString()
  fullName: Microsoft.Health.HealthServiceAudit.ToString()
  type: Method
  source:
    remote:
      path: Microsoft.Health/HealthServiceAudit.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ToString
    path: HealthServiceAudit.cs
    startLine: 296
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets a string representation of the object.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\nA string in the following format:\n\n\"&lt;timestamp&gt;, &lt;app-id&gt;, &lt;person-id&gt;\"\n"
  overridden: System.Object.ToString
  overload: Microsoft.Health.HealthServiceAudit.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.HealthServiceAudit
  commentId: T:Microsoft.Health.HealthServiceAudit
  parent: Microsoft.Health
  isExternal: false
  name: HealthServiceAudit
  nameWithType: HealthServiceAudit
  fullName: Microsoft.Health.HealthServiceAudit
- uid: Microsoft.Health.HealthServiceAudit.#ctor*
  commentId: Overload:Microsoft.Health.HealthServiceAudit.#ctor
  isExternal: false
  name: HealthServiceAudit
  nameWithType: HealthServiceAudit.HealthServiceAudit
  fullName: Microsoft.Health.HealthServiceAudit.HealthServiceAudit
- uid: Microsoft.Health.HealthServiceAudit.Timestamp*
  commentId: Overload:Microsoft.Health.HealthServiceAudit.Timestamp
  isExternal: false
  name: Timestamp
  nameWithType: HealthServiceAudit.Timestamp
  fullName: Microsoft.Health.HealthServiceAudit.Timestamp
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Microsoft.Health.HealthServiceAudit.ApplicationId*
  commentId: Overload:Microsoft.Health.HealthServiceAudit.ApplicationId
  isExternal: false
  name: ApplicationId
  nameWithType: HealthServiceAudit.ApplicationId
  fullName: Microsoft.Health.HealthServiceAudit.ApplicationId
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Microsoft.Health.HealthServiceAudit.ApplicationName*
  commentId: Overload:Microsoft.Health.HealthServiceAudit.ApplicationName
  isExternal: false
  name: ApplicationName
  nameWithType: HealthServiceAudit.ApplicationName
  fullName: Microsoft.Health.HealthServiceAudit.ApplicationName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.HealthServiceAudit.PersonId*
  commentId: Overload:Microsoft.Health.HealthServiceAudit.PersonId
  isExternal: false
  name: PersonId
  nameWithType: HealthServiceAudit.PersonId
  fullName: Microsoft.Health.HealthServiceAudit.PersonId
- uid: Microsoft.Health.HealthServiceAudit.PersonName*
  commentId: Overload:Microsoft.Health.HealthServiceAudit.PersonName
  isExternal: false
  name: PersonName
  nameWithType: HealthServiceAudit.PersonName
  fullName: Microsoft.Health.HealthServiceAudit.PersonName
- uid: Microsoft.Health.HealthRecordItem
  commentId: T:Microsoft.Health.HealthRecordItem
  parent: Microsoft.Health
  isExternal: false
  name: HealthRecordItem
  nameWithType: HealthRecordItem
  fullName: Microsoft.Health.HealthRecordItem
- uid: Microsoft.Health.HealthServiceAudit.ImpersonatorId*
  commentId: Overload:Microsoft.Health.HealthServiceAudit.ImpersonatorId
  isExternal: false
  name: ImpersonatorId
  nameWithType: HealthServiceAudit.ImpersonatorId
  fullName: Microsoft.Health.HealthServiceAudit.ImpersonatorId
- uid: System.Nullable{System.Guid}
  commentId: T:System.Nullable{System.Guid}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Guid>
  nameWithType: Nullable<Guid>
  fullName: System.Nullable<System.Guid>
  nameWithType.vb: Nullable(Of Guid)
  fullName.vb: System.Nullable(Of System.Guid)
  name.vb: Nullable(Of Guid)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthServiceAudit.ImpersonatorName*
  commentId: Overload:Microsoft.Health.HealthServiceAudit.ImpersonatorName
  isExternal: false
  name: ImpersonatorName
  nameWithType: HealthServiceAudit.ImpersonatorName
  fullName: Microsoft.Health.HealthServiceAudit.ImpersonatorName
- uid: Microsoft.Health.HealthServiceAuditAccessAvenue
  commentId: T:Microsoft.Health.HealthServiceAuditAccessAvenue
  parent: Microsoft.Health
  isExternal: false
  name: HealthServiceAuditAccessAvenue
  nameWithType: HealthServiceAuditAccessAvenue
  fullName: Microsoft.Health.HealthServiceAuditAccessAvenue
- uid: Microsoft.Health.HealthServiceAudit.AccessAvenue*
  commentId: Overload:Microsoft.Health.HealthServiceAudit.AccessAvenue
  isExternal: false
  name: AccessAvenue
  nameWithType: HealthServiceAudit.AccessAvenue
  fullName: Microsoft.Health.HealthServiceAudit.AccessAvenue
- uid: Microsoft.Health.HealthServiceAudit.AuditAction*
  commentId: Overload:Microsoft.Health.HealthServiceAudit.AuditAction
  isExternal: false
  name: AuditAction
  nameWithType: HealthServiceAudit.AuditAction
  fullName: Microsoft.Health.HealthServiceAudit.AuditAction
- uid: Microsoft.Health.HealthServiceAuditAction
  commentId: T:Microsoft.Health.HealthServiceAuditAction
  parent: Microsoft.Health
  isExternal: false
  name: HealthServiceAuditAction
  nameWithType: HealthServiceAuditAction
  fullName: Microsoft.Health.HealthServiceAuditAction
- uid: Microsoft.Health.HealthServiceAudit.ApplicationId
  commentId: P:Microsoft.Health.HealthServiceAudit.ApplicationId
- uid: Microsoft.Health.HealthServiceAudit.MasterApplicationId
  commentId: P:Microsoft.Health.HealthServiceAudit.MasterApplicationId
- uid: Microsoft.Health.HealthServiceAudit.MasterApplicationId*
  commentId: Overload:Microsoft.Health.HealthServiceAudit.MasterApplicationId
  isExternal: false
  name: MasterApplicationId
  nameWithType: HealthServiceAudit.MasterApplicationId
  fullName: Microsoft.Health.HealthServiceAudit.MasterApplicationId
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthServiceAudit.ToString*
  commentId: Overload:Microsoft.Health.HealthServiceAudit.ToString
  isExternal: false
  name: ToString
  nameWithType: HealthServiceAudit.ToString
  fullName: Microsoft.Health.HealthServiceAudit.ToString
