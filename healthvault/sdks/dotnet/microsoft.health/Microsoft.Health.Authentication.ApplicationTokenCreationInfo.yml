### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Authentication.ApplicationTokenCreationInfo
  commentId: T:Microsoft.Health.Authentication.ApplicationTokenCreationInfo
  id: ApplicationTokenCreationInfo
  parent: Microsoft.Health.Authentication
  children:
  - Microsoft.Health.Authentication.ApplicationTokenCreationInfo.#ctor(System.Guid,System.Boolean)
  - Microsoft.Health.Authentication.ApplicationTokenCreationInfo.ApplicationId
  - Microsoft.Health.Authentication.ApplicationTokenCreationInfo.IsMRA
  langs:
  - csharp
  - vb
  name: ApplicationTokenCreationInfo
  nameWithType: ApplicationTokenCreationInfo
  fullName: Microsoft.Health.Authentication.ApplicationTokenCreationInfo
  type: Class
  source:
    remote:
      path: Microsoft.Health/Authentication/ApplicationTokenCreationInfo.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ApplicationTokenCreationInfo
    path: Authentication/ApplicationTokenCreationInfo.cs
    startLine: 14
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Authentication
  summary: "\nContains the information about an application needed to construct a user's credential for\nthat application.\n"
  example: []
  syntax:
    content: public class ApplicationTokenCreationInfo
    content.vb: Public Class ApplicationTokenCreationInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.Authentication.ApplicationTokenCreationInfo.#ctor(System.Guid,System.Boolean)
  commentId: M:Microsoft.Health.Authentication.ApplicationTokenCreationInfo.#ctor(System.Guid,System.Boolean)
  id: '#ctor(System.Guid,System.Boolean)'
  parent: Microsoft.Health.Authentication.ApplicationTokenCreationInfo
  langs:
  - csharp
  - vb
  name: ApplicationTokenCreationInfo(Guid, Boolean)
  nameWithType: ApplicationTokenCreationInfo.ApplicationTokenCreationInfo(Guid, Boolean)
  fullName: Microsoft.Health.Authentication.ApplicationTokenCreationInfo.ApplicationTokenCreationInfo(System.Guid, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/Authentication/ApplicationTokenCreationInfo.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: Authentication/ApplicationTokenCreationInfo.cs
    startLine: 29
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Authentication
  summary: "\nConstructs an <xref href=\"Microsoft.Health.Authentication.ApplicationTokenCreationInfo\" data-throw-if-not-resolved=\"false\"></xref> instance with the specified\napplication identifier and whether the application supports multiple records.\n"
  example: []
  syntax:
    content: public ApplicationTokenCreationInfo(Guid appId, bool isMra)
    content.vb: Public Sub New(appId As Guid, isMra As Boolean)
    parameters:
    - id: appId
      type: System.Guid
      description: "\nThe unique application identifier.\n"
    - id: isMra
      type: System.Boolean
      description: "\nStates whether the application is a multi-record app.\n"
  overload: Microsoft.Health.Authentication.ApplicationTokenCreationInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Authentication.ApplicationTokenCreationInfo.ApplicationId
  commentId: P:Microsoft.Health.Authentication.ApplicationTokenCreationInfo.ApplicationId
  id: ApplicationId
  parent: Microsoft.Health.Authentication.ApplicationTokenCreationInfo
  langs:
  - csharp
  - vb
  name: ApplicationId
  nameWithType: ApplicationTokenCreationInfo.ApplicationId
  fullName: Microsoft.Health.Authentication.ApplicationTokenCreationInfo.ApplicationId
  type: Property
  source:
    remote:
      path: Microsoft.Health/Authentication/ApplicationTokenCreationInfo.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ApplicationId
    path: Authentication/ApplicationTokenCreationInfo.cs
    startLine: 39
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Authentication
  summary: "\nGets the unique application identifier.\n"
  example: []
  syntax:
    content: public Guid ApplicationId { get; }
    content.vb: Public ReadOnly Property ApplicationId As Guid
    parameters: []
    return:
      type: System.Guid
  overload: Microsoft.Health.Authentication.ApplicationTokenCreationInfo.ApplicationId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Authentication.ApplicationTokenCreationInfo.IsMRA
  commentId: P:Microsoft.Health.Authentication.ApplicationTokenCreationInfo.IsMRA
  id: IsMRA
  parent: Microsoft.Health.Authentication.ApplicationTokenCreationInfo
  langs:
  - csharp
  - vb
  name: IsMRA
  nameWithType: ApplicationTokenCreationInfo.IsMRA
  fullName: Microsoft.Health.Authentication.ApplicationTokenCreationInfo.IsMRA
  type: Property
  source:
    remote:
      path: Microsoft.Health/Authentication/ApplicationTokenCreationInfo.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: IsMRA
    path: Authentication/ApplicationTokenCreationInfo.cs
    startLine: 49
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Authentication
  summary: "\nGets whether the application supports multiple records.\n"
  example: []
  syntax:
    content: public bool IsMRA { get; }
    content.vb: Public ReadOnly Property IsMRA As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.Health.Authentication.ApplicationTokenCreationInfo.IsMRA*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Health.Authentication
  commentId: N:Microsoft.Health.Authentication
  isExternal: false
  name: Microsoft.Health.Authentication
  nameWithType: Microsoft.Health.Authentication
  fullName: Microsoft.Health.Authentication
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Authentication.ApplicationTokenCreationInfo
  commentId: T:Microsoft.Health.Authentication.ApplicationTokenCreationInfo
  isExternal: false
  name: ApplicationTokenCreationInfo
  nameWithType: ApplicationTokenCreationInfo
  fullName: Microsoft.Health.Authentication.ApplicationTokenCreationInfo
- uid: Microsoft.Health.Authentication.ApplicationTokenCreationInfo.#ctor*
  commentId: Overload:Microsoft.Health.Authentication.ApplicationTokenCreationInfo.#ctor
  isExternal: false
  name: ApplicationTokenCreationInfo
  nameWithType: ApplicationTokenCreationInfo.ApplicationTokenCreationInfo
  fullName: Microsoft.Health.Authentication.ApplicationTokenCreationInfo.ApplicationTokenCreationInfo
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Health.Authentication.ApplicationTokenCreationInfo.ApplicationId*
  commentId: Overload:Microsoft.Health.Authentication.ApplicationTokenCreationInfo.ApplicationId
  isExternal: false
  name: ApplicationId
  nameWithType: ApplicationTokenCreationInfo.ApplicationId
  fullName: Microsoft.Health.Authentication.ApplicationTokenCreationInfo.ApplicationId
- uid: Microsoft.Health.Authentication.ApplicationTokenCreationInfo.IsMRA*
  commentId: Overload:Microsoft.Health.Authentication.ApplicationTokenCreationInfo.IsMRA
  isExternal: false
  name: IsMRA
  nameWithType: ApplicationTokenCreationInfo.IsMRA
  fullName: Microsoft.Health.Authentication.ApplicationTokenCreationInfo.IsMRA
