### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Web.WebApplicationConnection
  commentId: T:Microsoft.Health.Web.WebApplicationConnection
  id: WebApplicationConnection
  parent: Microsoft.Health.Web
  children:
  - Microsoft.Health.Web.WebApplicationConnection.#ctor(Microsoft.Health.Authentication.Credential)
  - Microsoft.Health.Web.WebApplicationConnection.#ctor(Microsoft.Health.HealthServiceInstance,Microsoft.Health.Authentication.Credential)
  - Microsoft.Health.Web.WebApplicationConnection.#ctor(System.Guid,Microsoft.Health.Authentication.Credential)
  - Microsoft.Health.Web.WebApplicationConnection.#ctor(System.Guid,Microsoft.Health.HealthServiceInstance,Microsoft.Health.Authentication.Credential)
  - Microsoft.Health.Web.WebApplicationConnection.#ctor(System.Guid,System.String,Microsoft.Health.Authentication.Credential)
  - Microsoft.Health.Web.WebApplicationConnection.#ctor(System.Guid,System.Uri,Microsoft.Health.Authentication.Credential)
  - Microsoft.Health.Web.WebApplicationConnection.SendInsecureMessage(System.Collections.Generic.IList{Microsoft.Health.MailRecipient},System.String,System.String,System.String)
  - Microsoft.Health.Web.WebApplicationConnection.SendInsecureMessage(System.Collections.Generic.IList{System.Guid},System.Boolean,System.String,System.String,System.String)
  - Microsoft.Health.Web.WebApplicationConnection.SendInsecureMessageToCustodians(System.Guid,System.Boolean,System.String,System.String,System.String)
  langs:
  - csharp
  - vb
  name: WebApplicationConnection
  nameWithType: WebApplicationConnection
  fullName: Microsoft.Health.Web.WebApplicationConnection
  type: Class
  source:
    remote:
      path: Microsoft.Health/WebApplicationConnection.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WebApplicationConnection
    path: WebApplicationConnection.cs
    startLine: 35
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Web
  summary: "\nRepresents an authenticated interface to HealthVault. \n"
  remarks: "\nMost operations performed against the service require authentication. \nA connection must be made to HealthVault to access the\nweb methods that the service exposes. The class does not maintain\nan open connection to the service. It uses XML over HTTP to \nmake requests and receive responses from the service. The connection\njust maintains the data necessary to make the request.\n<br /><br />\nAn authenticated connection takes the user name and password, and\nauthenticates against HealthVault and then stores an \nauthentication token which is then passed to the service on each \nsubsequent request. An authenticated connection is required for \naccessing a person's health record. \n<br /><br />\nFor operations that do not require authentication, the \n<xref href=\"Microsoft.Health.AnonymousConnection\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"Microsoft.Health.ApplicationConnection\" data-throw-if-not-resolved=\"false\"></xref>\nclass can be used.\n"
  example: []
  syntax:
    content: 'public class WebApplicationConnection : AuthenticatedConnection'
    content.vb: >-
      Public Class WebApplicationConnection
          Inherits AuthenticatedConnection
  inheritance:
  - System.Object
  - Microsoft.Health.HealthServiceConnection
  - Microsoft.Health.ApplicationConnection
  - Microsoft.Health.AuthenticatedConnection
  inheritedMembers:
  - Microsoft.Health.AuthenticatedConnection.LogOn(System.String)
  - Microsoft.Health.AuthenticatedConnection.LogOn(System.String,System.Boolean)
  - Microsoft.Health.AuthenticatedConnection.LogOn(System.String,System.Boolean,System.Threading.ManualResetEvent)
  - Microsoft.Health.AuthenticatedConnection.LogOn(System.String,System.Boolean,System.Threading.ManualResetEvent,System.Guid,System.Uri,System.Uri)
  - Microsoft.Health.AuthenticatedConnection.LogOn(System.String,System.Boolean,System.Boolean,System.Threading.ManualResetEvent,System.Guid,System.Uri,System.Uri)
  - Microsoft.Health.AuthenticatedConnection.Authenticate
  - Microsoft.Health.AuthenticatedConnection.Impersonate(System.Guid)
  - Microsoft.Health.AuthenticatedConnection.StopImpersonating
  - Microsoft.Health.AuthenticatedConnection.IsImpersonating
  - Microsoft.Health.AuthenticatedConnection.GetAllApplicationSettings
  - Microsoft.Health.AuthenticatedConnection.GetApplicationSettings
  - Microsoft.Health.AuthenticatedConnection.SetApplicationSettings(System.Xml.XPath.IXPathNavigable)
  - Microsoft.Health.ApplicationConnection.CreateRequest(Microsoft.Health.HealthRecordAccessor,System.String,System.Int32)
  - Microsoft.Health.ApplicationConnection.GetVocabulary(System.String)
  - Microsoft.Health.ApplicationConnection.GetVocabulary(Microsoft.Health.VocabularyKey,System.Boolean)
  - Microsoft.Health.ApplicationConnection.GetVocabulary(System.Collections.Generic.IList{Microsoft.Health.VocabularyKey},System.Boolean)
  - Microsoft.Health.ApplicationConnection.GetVocabularyKeys
  - Microsoft.Health.ApplicationConnection.SearchVocabularyKeys(System.String,Microsoft.Health.VocabularySearchType,System.Nullable{System.Int32})
  - Microsoft.Health.ApplicationConnection.SearchVocabulary(Microsoft.Health.VocabularyKey,System.String,Microsoft.Health.VocabularySearchType,System.Nullable{System.Int32})
  - Microsoft.Health.ApplicationConnection.SendInsecureMessageFromApplication(System.Collections.Generic.IList{Microsoft.Health.MailRecipient},System.String,System.String,System.String,System.String,System.String)
  - Microsoft.Health.ApplicationConnection.SendInsecureMessageFromApplication(System.Collections.Generic.IList{System.Guid},System.Boolean,System.String,System.String,System.String,System.String,System.String)
  - Microsoft.Health.ApplicationConnection.SendInsecureMessageToCustodiansFromApplication(System.Guid,System.Boolean,System.String,System.String,System.String,System.String,System.String)
  - Microsoft.Health.ApplicationConnection.GetPersonInfo
  - Microsoft.Health.ApplicationConnection.GetAuthorizedPeople
  - Microsoft.Health.ApplicationConnection.GetAuthorizedPeople(Microsoft.Health.GetAuthorizedPeopleSettings)
  - Microsoft.Health.ApplicationConnection.GetAuthorizedRecords(System.Collections.Generic.IList{System.Guid})
  - Microsoft.Health.ApplicationConnection.GetApplicationInfo
  - Microsoft.Health.ApplicationConnection.GetApplicationInfo(System.Boolean)
  - Microsoft.Health.ApplicationConnection.GetUpdatedRecordsForApplication(System.Nullable{System.DateTime})
  - Microsoft.Health.ApplicationConnection.GetUpdatedRecordInfoForApplication(System.Nullable{System.DateTime})
  - Microsoft.Health.ApplicationConnection.NewSignupCode
  - Microsoft.Health.ApplicationConnection.SelectInstance(Microsoft.Health.Location)
  - Microsoft.Health.ApplicationConnection.GetMeaningfulUseVDTReport(Microsoft.Health.DateRange)
  - Microsoft.Health.ApplicationConnection.GetMeaningfulUseTimelyAccessDocumentReport(Microsoft.Health.DateRange)
  - Microsoft.Health.ApplicationConnection.GetMeaningfulUseTimelyAccessDOPUDocumentReport(Microsoft.Health.DateRange)
  - Microsoft.Health.HealthServiceConnection.CreateRequest(System.String,System.Int32)
  - Microsoft.Health.HealthServiceConnection.CancelAllRequests
  - Microsoft.Health.HealthServiceConnection.GetServiceDefinition
  - Microsoft.Health.HealthServiceConnection.GetServiceDefinition(System.DateTime)
  - Microsoft.Health.HealthServiceConnection.GetServiceDefinition(Microsoft.Health.ServiceInfoSections)
  - Microsoft.Health.HealthServiceConnection.GetServiceDefinition(Microsoft.Health.ServiceInfoSections,System.DateTime)
  - Microsoft.Health.HealthServiceConnection.WebProxy
  - Microsoft.Health.HealthServiceConnection.ApplicationId
  - Microsoft.Health.HealthServiceConnection.RequestUrl
  - Microsoft.Health.HealthServiceConnection.ServiceInstance
  - Microsoft.Health.HealthServiceConnection.RequestTimeoutSeconds
  - Microsoft.Health.HealthServiceConnection.RequestTimeToLive
  - Microsoft.Health.HealthServiceConnection.Culture
  - Microsoft.Health.HealthServiceConnection.RequestCompressionMethod
  - Microsoft.Health.HealthServiceConnection.ResponseCompressionMethods
  - Microsoft.Health.HealthServiceConnection.AuthenticationToken
  - Microsoft.Health.HealthServiceConnection.Credential
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.Web.WebApplicationConnection.#ctor(Microsoft.Health.Authentication.Credential)
  commentId: M:Microsoft.Health.Web.WebApplicationConnection.#ctor(Microsoft.Health.Authentication.Credential)
  id: '#ctor(Microsoft.Health.Authentication.Credential)'
  parent: Microsoft.Health.Web.WebApplicationConnection
  langs:
  - csharp
  - vb
  name: WebApplicationConnection(Credential)
  nameWithType: WebApplicationConnection.WebApplicationConnection(Credential)
  fullName: Microsoft.Health.Web.WebApplicationConnection.WebApplicationConnection(Microsoft.Health.Authentication.Credential)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/WebApplicationConnection.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: WebApplicationConnection.cs
    startLine: 57
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Web
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.Web.WebApplicationConnection\" data-throw-if-not-resolved=\"false\"></xref> class with \ndefault values from the application or web configuration file.\n"
  example: []
  syntax:
    content: public WebApplicationConnection(Credential credential)
    content.vb: Public Sub New(credential As Credential)
    parameters:
    - id: credential
      type: Microsoft.Health.Authentication.Credential
      description: "\nThe credential of the user to authenticate for access to\nHealthVault.\n"
  overload: Microsoft.Health.Web.WebApplicationConnection.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">credential</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Web.WebApplicationConnection.#ctor(Microsoft.Health.HealthServiceInstance,Microsoft.Health.Authentication.Credential)
  commentId: M:Microsoft.Health.Web.WebApplicationConnection.#ctor(Microsoft.Health.HealthServiceInstance,Microsoft.Health.Authentication.Credential)
  id: '#ctor(Microsoft.Health.HealthServiceInstance,Microsoft.Health.Authentication.Credential)'
  parent: Microsoft.Health.Web.WebApplicationConnection
  langs:
  - csharp
  - vb
  name: WebApplicationConnection(HealthServiceInstance, Credential)
  nameWithType: WebApplicationConnection.WebApplicationConnection(HealthServiceInstance, Credential)
  fullName: Microsoft.Health.Web.WebApplicationConnection.WebApplicationConnection(Microsoft.Health.HealthServiceInstance, Microsoft.Health.Authentication.Credential)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/WebApplicationConnection.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: WebApplicationConnection.cs
    startLine: 81
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Web
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.Web.WebApplicationConnection\" data-throw-if-not-resolved=\"false\"></xref> class \nwith the HealthVault web-service instance and credential.\n"
  remarks: "\nIf <span class=\"paramref\">serviceInstance</span> is <strong>null</strong>, the URL for the configured\ndefault HealthVault web-service instance is used.\n"
  example: []
  syntax:
    content: public WebApplicationConnection(HealthServiceInstance serviceInstance, Credential credential)
    content.vb: Public Sub New(serviceInstance As HealthServiceInstance, credential As Credential)
    parameters:
    - id: serviceInstance
      type: Microsoft.Health.HealthServiceInstance
      description: "\nThe HealthVault web-service instance.\n"
    - id: credential
      type: Microsoft.Health.Authentication.Credential
      description: "\nThe credential of the user to authenticate for access to \nHealthVault.\n"
  overload: Microsoft.Health.Web.WebApplicationConnection.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Web.WebApplicationConnection.#ctor(System.Guid,Microsoft.Health.Authentication.Credential)
  commentId: M:Microsoft.Health.Web.WebApplicationConnection.#ctor(System.Guid,Microsoft.Health.Authentication.Credential)
  id: '#ctor(System.Guid,Microsoft.Health.Authentication.Credential)'
  parent: Microsoft.Health.Web.WebApplicationConnection
  langs:
  - csharp
  - vb
  name: WebApplicationConnection(Guid, Credential)
  nameWithType: WebApplicationConnection.WebApplicationConnection(Guid, Credential)
  fullName: Microsoft.Health.Web.WebApplicationConnection.WebApplicationConnection(System.Guid, Microsoft.Health.Authentication.Credential)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/WebApplicationConnection.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: WebApplicationConnection.cs
    startLine: 108
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Web
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.Web.WebApplicationConnection\" data-throw-if-not-resolved=\"false\"></xref> class \nwith the specified app-ID, and credential.\n"
  example: []
  syntax:
    content: public WebApplicationConnection(Guid callingApplicationId, Credential credential)
    content.vb: Public Sub New(callingApplicationId As Guid, credential As Credential)
    parameters:
    - id: callingApplicationId
      type: System.Guid
      description: "\nThe HealthVault application identifier.\n"
    - id: credential
      type: Microsoft.Health.Authentication.Credential
      description: "\nThe credential of the user to authenticate for access to \nHealthVault.\n"
  overload: Microsoft.Health.Web.WebApplicationConnection.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">credential</span> is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Web.WebApplicationConnection.#ctor(System.Guid,Microsoft.Health.HealthServiceInstance,Microsoft.Health.Authentication.Credential)
  commentId: M:Microsoft.Health.Web.WebApplicationConnection.#ctor(System.Guid,Microsoft.Health.HealthServiceInstance,Microsoft.Health.Authentication.Credential)
  id: '#ctor(System.Guid,Microsoft.Health.HealthServiceInstance,Microsoft.Health.Authentication.Credential)'
  parent: Microsoft.Health.Web.WebApplicationConnection
  langs:
  - csharp
  - vb
  name: WebApplicationConnection(Guid, HealthServiceInstance, Credential)
  nameWithType: WebApplicationConnection.WebApplicationConnection(Guid, HealthServiceInstance, Credential)
  fullName: Microsoft.Health.Web.WebApplicationConnection.WebApplicationConnection(System.Guid, Microsoft.Health.HealthServiceInstance, Microsoft.Health.Authentication.Credential)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/WebApplicationConnection.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: WebApplicationConnection.cs
    startLine: 140
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Web
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.Web.WebApplicationConnection\" data-throw-if-not-resolved=\"false\"></xref> class \nwith the specified app-ID, HealthVault web-service instance, and credential.\n"
  remarks: "\nIf <span class=\"paramref\">serviceInstance</span> is <strong>null</strong>, the URL for the configured\ndefault HealthVault web-service instance is used.\n"
  example: []
  syntax:
    content: public WebApplicationConnection(Guid callingApplicationId, HealthServiceInstance serviceInstance, Credential credential)
    content.vb: Public Sub New(callingApplicationId As Guid, serviceInstance As HealthServiceInstance, credential As Credential)
    parameters:
    - id: callingApplicationId
      type: System.Guid
      description: "\nThe HealthVault application identifier.\n"
    - id: serviceInstance
      type: Microsoft.Health.HealthServiceInstance
      description: "\nThe HealthVault web-service instance.\n"
    - id: credential
      type: Microsoft.Health.Authentication.Credential
      description: "\nThe credential of the user to authenticate for access to \nHealthVault.\n"
  overload: Microsoft.Health.Web.WebApplicationConnection.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Web.WebApplicationConnection.#ctor(System.Guid,System.Uri,Microsoft.Health.Authentication.Credential)
  commentId: M:Microsoft.Health.Web.WebApplicationConnection.#ctor(System.Guid,System.Uri,Microsoft.Health.Authentication.Credential)
  id: '#ctor(System.Guid,System.Uri,Microsoft.Health.Authentication.Credential)'
  parent: Microsoft.Health.Web.WebApplicationConnection
  langs:
  - csharp
  - vb
  name: WebApplicationConnection(Guid, Uri, Credential)
  nameWithType: WebApplicationConnection.WebApplicationConnection(Guid, Uri, Credential)
  fullName: Microsoft.Health.Web.WebApplicationConnection.WebApplicationConnection(System.Guid, System.Uri, Microsoft.Health.Authentication.Credential)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/WebApplicationConnection.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: WebApplicationConnection.cs
    startLine: 174
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Web
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.Web.WebApplicationConnection\" data-throw-if-not-resolved=\"false\"></xref> class \nwith the specified app-ID, URL, and credential.\n"
  example: []
  syntax:
    content: public WebApplicationConnection(Guid callingApplicationId, Uri healthServiceUrl, Credential credential)
    content.vb: Public Sub New(callingApplicationId As Guid, healthServiceUrl As Uri, credential As Credential)
    parameters:
    - id: callingApplicationId
      type: System.Guid
      description: "\nThe HealthVault application identifier.\n"
    - id: healthServiceUrl
      type: System.Uri
      description: "\nThe URL of the HealthVault service.\n"
    - id: credential
      type: Microsoft.Health.Authentication.Credential
      description: "\nThe credential of the user to authenticate for access to \nHealthVault.\n"
  overload: Microsoft.Health.Web.WebApplicationConnection.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">healthServiceUrl</span> parameter or\n<span class=\"paramref\">credential</span> is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Web.WebApplicationConnection.#ctor(System.Guid,System.String,Microsoft.Health.Authentication.Credential)
  commentId: M:Microsoft.Health.Web.WebApplicationConnection.#ctor(System.Guid,System.String,Microsoft.Health.Authentication.Credential)
  id: '#ctor(System.Guid,System.String,Microsoft.Health.Authentication.Credential)'
  parent: Microsoft.Health.Web.WebApplicationConnection
  langs:
  - csharp
  - vb
  name: WebApplicationConnection(Guid, String, Credential)
  nameWithType: WebApplicationConnection.WebApplicationConnection(Guid, String, Credential)
  fullName: Microsoft.Health.Web.WebApplicationConnection.WebApplicationConnection(System.Guid, System.String, Microsoft.Health.Authentication.Credential)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/WebApplicationConnection.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: WebApplicationConnection.cs
    startLine: 208
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Web
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.Web.WebApplicationConnection\" data-throw-if-not-resolved=\"false\"></xref> class \nwith the specified app-ID, string-formatted URL, and credential.\n"
  example: []
  syntax:
    content: public WebApplicationConnection(Guid callingApplicationId, string healthServiceUrl, Credential credential)
    content.vb: Public Sub New(callingApplicationId As Guid, healthServiceUrl As String, credential As Credential)
    parameters:
    - id: callingApplicationId
      type: System.Guid
      description: "\nThe HealthVault application identifier.\n"
    - id: healthServiceUrl
      type: System.String
      description: "\nThe URL of the HealthVault service.\n"
    - id: credential
      type: Microsoft.Health.Authentication.Credential
      description: "\nThe credential of the user to authenticate for access to \nHealthVault.\n"
  overload: Microsoft.Health.Web.WebApplicationConnection.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">healthServiceUrl</span> parameter or\n<span class=\"paramref\">credential</span> is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Web.WebApplicationConnection.SendInsecureMessage(System.Collections.Generic.IList{Microsoft.Health.MailRecipient},System.String,System.String,System.String)
  commentId: M:Microsoft.Health.Web.WebApplicationConnection.SendInsecureMessage(System.Collections.Generic.IList{Microsoft.Health.MailRecipient},System.String,System.String,System.String)
  id: SendInsecureMessage(System.Collections.Generic.IList{Microsoft.Health.MailRecipient},System.String,System.String,System.String)
  parent: Microsoft.Health.Web.WebApplicationConnection
  langs:
  - csharp
  - vb
  name: SendInsecureMessage(IList<MailRecipient>, String, String, String)
  nameWithType: WebApplicationConnection.SendInsecureMessage(IList<MailRecipient>, String, String, String)
  fullName: Microsoft.Health.Web.WebApplicationConnection.SendInsecureMessage(System.Collections.Generic.IList<Microsoft.Health.MailRecipient>, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health/WebApplicationConnection.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SendInsecureMessage
    path: WebApplicationConnection.cs
    startLine: 263
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Web
  summary: "\nSends an insecure message to the specified message recipients.\n"
  remarks: "\nIf both the <span class=\"paramref\">textBody</span> and \n<span class=\"paramref\">htmlBody</span> of the message is specified then a\nmulti-part message will be sent so that the html body will be used\nand fallback to text if not supported by the client.\n"
  example: []
  syntax:
    content: public void SendInsecureMessage(IList<MailRecipient> mailRecipient, string subject, string textBody, string htmlBody)
    content.vb: Public Sub SendInsecureMessage(mailRecipient As IList(Of MailRecipient), subject As String, textBody As String, htmlBody As String)
    parameters:
    - id: mailRecipient
      type: System.Collections.Generic.IList{Microsoft.Health.MailRecipient}
      description: "\nThe addresses and display names of the people to send the \nmessage to.\n"
    - id: subject
      type: System.String
      description: "\nThe subject of the message.\n"
    - id: textBody
      type: System.String
      description: "\nThe text body of the message.\n"
    - id: htmlBody
      type: System.String
      description: "\nThe HTML body of the message.\n"
  overload: Microsoft.Health.Web.WebApplicationConnection.SendInsecureMessage*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">mailRecipient</span> property is <strong>null</strong> or empty, \nor the <span class=\"paramref\">subject</span> parameter is <strong>null</strong> or empty, or \nthe <span class=\"paramref\">textBody</span> and <span class=\"paramref\">htmlBody</span> \nparameters are both <strong>null</strong> or empty.\n"
  - type: Microsoft.Health.HealthServiceException
    commentId: T:Microsoft.Health.HealthServiceException
    description: "\nThe server returned a failure when making the request.\n"
  nameWithType.vb: WebApplicationConnection.SendInsecureMessage(IList(Of MailRecipient), String, String, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Web.WebApplicationConnection.SendInsecureMessage(System.Collections.Generic.IList(Of Microsoft.Health.MailRecipient), System.String, System.String, System.String)
  name.vb: SendInsecureMessage(IList(Of MailRecipient), String, String, String)
- uid: Microsoft.Health.Web.WebApplicationConnection.SendInsecureMessage(System.Collections.Generic.IList{System.Guid},System.Boolean,System.String,System.String,System.String)
  commentId: M:Microsoft.Health.Web.WebApplicationConnection.SendInsecureMessage(System.Collections.Generic.IList{System.Guid},System.Boolean,System.String,System.String,System.String)
  id: SendInsecureMessage(System.Collections.Generic.IList{System.Guid},System.Boolean,System.String,System.String,System.String)
  parent: Microsoft.Health.Web.WebApplicationConnection
  langs:
  - csharp
  - vb
  name: SendInsecureMessage(IList<Guid>, Boolean, String, String, String)
  nameWithType: WebApplicationConnection.SendInsecureMessage(IList<Guid>, Boolean, String, String, String)
  fullName: Microsoft.Health.Web.WebApplicationConnection.SendInsecureMessage(System.Collections.Generic.IList<System.Guid>, System.Boolean, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health/WebApplicationConnection.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SendInsecureMessage
    path: WebApplicationConnection.cs
    startLine: 322
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Web
  summary: "\nSends an insecure message to the specified message recipients.\n"
  remarks: "\nIf both the <span class=\"paramref\">textBody</span> and \n<span class=\"paramref\">htmlBody</span> of the message is specified then a\nmulti-part message will be sent so that the html body will be used\nand fallback to text if not supported by the client.\n"
  example: []
  syntax:
    content: public void SendInsecureMessage(IList<Guid> personIds, bool addressMustBeValidated, string subject, string textBody, string htmlBody)
    content.vb: Public Sub SendInsecureMessage(personIds As IList(Of Guid), addressMustBeValidated As Boolean, subject As String, textBody As String, htmlBody As String)
    parameters:
    - id: personIds
      type: System.Collections.Generic.IList{System.Guid}
      description: "\nThe unique identifiers of the people to which the message should be\nsent.\n"
    - id: addressMustBeValidated
      type: System.Boolean
      description: "\n<strong>true</strong> if HealthVault ensures that the person has validated \ntheir message address before sending the mail; <strong>false</strong> if the \nmessage will be sent even if the person's address has not been \nvalidated.\n"
    - id: subject
      type: System.String
      description: "\nThe subject of the message.\n"
    - id: textBody
      type: System.String
      description: "\nThe text body of the message.\n"
    - id: htmlBody
      type: System.String
      description: "\nThe HTML body of the message.\n"
  overload: Microsoft.Health.Web.WebApplicationConnection.SendInsecureMessage*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">personIds</span> or <span class=\"paramref\">subject</span>, \n<span class=\"paramref\">textBody</span>  or <span class=\"paramref\">htmlBody</span> parameters \nare <strong>null</strong> or empty.\n"
  - type: Microsoft.Health.HealthServiceException
    commentId: T:Microsoft.Health.HealthServiceException
    description: "\nThe server returned a failure when making the request.        \n"
  nameWithType.vb: WebApplicationConnection.SendInsecureMessage(IList(Of Guid), Boolean, String, String, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Web.WebApplicationConnection.SendInsecureMessage(System.Collections.Generic.IList(Of System.Guid), System.Boolean, System.String, System.String, System.String)
  name.vb: SendInsecureMessage(IList(Of Guid), Boolean, String, String, String)
- uid: Microsoft.Health.Web.WebApplicationConnection.SendInsecureMessageToCustodians(System.Guid,System.Boolean,System.String,System.String,System.String)
  commentId: M:Microsoft.Health.Web.WebApplicationConnection.SendInsecureMessageToCustodians(System.Guid,System.Boolean,System.String,System.String,System.String)
  id: SendInsecureMessageToCustodians(System.Guid,System.Boolean,System.String,System.String,System.String)
  parent: Microsoft.Health.Web.WebApplicationConnection
  langs:
  - csharp
  - vb
  name: SendInsecureMessageToCustodians(Guid, Boolean, String, String, String)
  nameWithType: WebApplicationConnection.SendInsecureMessageToCustodians(Guid, Boolean, String, String, String)
  fullName: Microsoft.Health.Web.WebApplicationConnection.SendInsecureMessageToCustodians(System.Guid, System.Boolean, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health/WebApplicationConnection.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SendInsecureMessageToCustodians
    path: WebApplicationConnection.cs
    startLine: 387
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Web
  summary: "\nSends an insecure message to custodians of the specified health \nrecord.\n"
  remarks: "\nIf both the <span class=\"paramref\">textBody</span> and \n<span class=\"paramref\">htmlBody</span> of the message is specified, then a\nmulti-part message is sent so that the HTML body will be used\nand falls back to text if not supported by the client.\n"
  example: []
  syntax:
    content: public void SendInsecureMessageToCustodians(Guid recordId, bool addressMustBeValidated, string subject, string textBody, string htmlBody)
    content.vb: Public Sub SendInsecureMessageToCustodians(recordId As Guid, addressMustBeValidated As Boolean, subject As String, textBody As String, htmlBody As String)
    parameters:
    - id: recordId
      type: System.Guid
      description: "\nThe unique identifier of the health record for which the \ncustodians should be sent the message.\n"
    - id: addressMustBeValidated
      type: System.Boolean
      description: "\n<strong>true</strong> if HealthVault ensures that the person has validated \ntheir message address before sending the mail; <strong>false</strong> if the \nmessage will be sent even if the person's address has not been \nvalidated.\n"
    - id: subject
      type: System.String
      description: "\nThe subject of the message.\n"
    - id: textBody
      type: System.String
      description: "\nThe text body of the message.\n"
    - id: htmlBody
      type: System.String
      description: "\nThe HTML body of the message.\n"
  overload: Microsoft.Health.Web.WebApplicationConnection.SendInsecureMessageToCustodians*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">recordId</span> parameter is <xref href=\"System.Guid.Empty\" data-throw-if-not-resolved=\"false\"></xref>\n-or-\nThe <span class=\"paramref\">subject</span> parameter is <strong>null</strong> or empty,\n-or-\nThe <span class=\"paramref\">textBody</span> and <span class=\"paramref\">htmlBody</span> parameters \nare both <strong>null</strong> or empty.\n"
  - type: Microsoft.Health.HealthServiceException
    commentId: T:Microsoft.Health.HealthServiceException
    description: "\nThe server returned a failure when making the request.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Health.AnonymousConnection
  commentId: T:Microsoft.Health.AnonymousConnection
  isExternal: false
  name: AnonymousConnection
  nameWithType: AnonymousConnection
  fullName: Microsoft.Health.AnonymousConnection
- uid: Microsoft.Health.ApplicationConnection
  commentId: T:Microsoft.Health.ApplicationConnection
  parent: Microsoft.Health
  isExternal: false
  name: ApplicationConnection
  nameWithType: ApplicationConnection
  fullName: Microsoft.Health.ApplicationConnection
- uid: Microsoft.Health.Web
  commentId: N:Microsoft.Health.Web
  isExternal: false
  name: Microsoft.Health.Web
  nameWithType: Microsoft.Health.Web
  fullName: Microsoft.Health.Web
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.HealthServiceConnection
  commentId: T:Microsoft.Health.HealthServiceConnection
  parent: Microsoft.Health
  isExternal: false
  name: HealthServiceConnection
  nameWithType: HealthServiceConnection
  fullName: Microsoft.Health.HealthServiceConnection
- uid: Microsoft.Health.AuthenticatedConnection
  commentId: T:Microsoft.Health.AuthenticatedConnection
  parent: Microsoft.Health
  isExternal: false
  name: AuthenticatedConnection
  nameWithType: AuthenticatedConnection
  fullName: Microsoft.Health.AuthenticatedConnection
- uid: Microsoft.Health.AuthenticatedConnection.LogOn(System.String)
  commentId: M:Microsoft.Health.AuthenticatedConnection.LogOn(System.String)
  parent: Microsoft.Health.AuthenticatedConnection
  isExternal: true
  name: LogOn(String)
  nameWithType: AuthenticatedConnection.LogOn(String)
  fullName: Microsoft.Health.AuthenticatedConnection.LogOn(System.String)
  spec.csharp:
  - uid: Microsoft.Health.AuthenticatedConnection.LogOn(System.String)
    name: LogOn
    nameWithType: AuthenticatedConnection.LogOn
    fullName: Microsoft.Health.AuthenticatedConnection.LogOn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.AuthenticatedConnection.LogOn(System.String)
    name: LogOn
    nameWithType: AuthenticatedConnection.LogOn
    fullName: Microsoft.Health.AuthenticatedConnection.LogOn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.AuthenticatedConnection.LogOn(System.String,System.Boolean)
  commentId: M:Microsoft.Health.AuthenticatedConnection.LogOn(System.String,System.Boolean)
  parent: Microsoft.Health.AuthenticatedConnection
  isExternal: true
  name: LogOn(String, Boolean)
  nameWithType: AuthenticatedConnection.LogOn(String, Boolean)
  fullName: Microsoft.Health.AuthenticatedConnection.LogOn(System.String, System.Boolean)
  spec.csharp:
  - uid: Microsoft.Health.AuthenticatedConnection.LogOn(System.String,System.Boolean)
    name: LogOn
    nameWithType: AuthenticatedConnection.LogOn
    fullName: Microsoft.Health.AuthenticatedConnection.LogOn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.AuthenticatedConnection.LogOn(System.String,System.Boolean)
    name: LogOn
    nameWithType: AuthenticatedConnection.LogOn
    fullName: Microsoft.Health.AuthenticatedConnection.LogOn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.AuthenticatedConnection.LogOn(System.String,System.Boolean,System.Threading.ManualResetEvent)
  commentId: M:Microsoft.Health.AuthenticatedConnection.LogOn(System.String,System.Boolean,System.Threading.ManualResetEvent)
  parent: Microsoft.Health.AuthenticatedConnection
  isExternal: true
  name: LogOn(String, Boolean, ManualResetEvent)
  nameWithType: AuthenticatedConnection.LogOn(String, Boolean, ManualResetEvent)
  fullName: Microsoft.Health.AuthenticatedConnection.LogOn(System.String, System.Boolean, System.Threading.ManualResetEvent)
  spec.csharp:
  - uid: Microsoft.Health.AuthenticatedConnection.LogOn(System.String,System.Boolean,System.Threading.ManualResetEvent)
    name: LogOn
    nameWithType: AuthenticatedConnection.LogOn
    fullName: Microsoft.Health.AuthenticatedConnection.LogOn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.ManualResetEvent
    name: ManualResetEvent
    nameWithType: ManualResetEvent
    fullName: System.Threading.ManualResetEvent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.AuthenticatedConnection.LogOn(System.String,System.Boolean,System.Threading.ManualResetEvent)
    name: LogOn
    nameWithType: AuthenticatedConnection.LogOn
    fullName: Microsoft.Health.AuthenticatedConnection.LogOn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.ManualResetEvent
    name: ManualResetEvent
    nameWithType: ManualResetEvent
    fullName: System.Threading.ManualResetEvent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.AuthenticatedConnection.LogOn(System.String,System.Boolean,System.Threading.ManualResetEvent,System.Guid,System.Uri,System.Uri)
  commentId: M:Microsoft.Health.AuthenticatedConnection.LogOn(System.String,System.Boolean,System.Threading.ManualResetEvent,System.Guid,System.Uri,System.Uri)
  parent: Microsoft.Health.AuthenticatedConnection
  isExternal: true
  name: LogOn(String, Boolean, ManualResetEvent, Guid, Uri, Uri)
  nameWithType: AuthenticatedConnection.LogOn(String, Boolean, ManualResetEvent, Guid, Uri, Uri)
  fullName: Microsoft.Health.AuthenticatedConnection.LogOn(System.String, System.Boolean, System.Threading.ManualResetEvent, System.Guid, System.Uri, System.Uri)
  spec.csharp:
  - uid: Microsoft.Health.AuthenticatedConnection.LogOn(System.String,System.Boolean,System.Threading.ManualResetEvent,System.Guid,System.Uri,System.Uri)
    name: LogOn
    nameWithType: AuthenticatedConnection.LogOn
    fullName: Microsoft.Health.AuthenticatedConnection.LogOn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.ManualResetEvent
    name: ManualResetEvent
    nameWithType: ManualResetEvent
    fullName: System.Threading.ManualResetEvent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.AuthenticatedConnection.LogOn(System.String,System.Boolean,System.Threading.ManualResetEvent,System.Guid,System.Uri,System.Uri)
    name: LogOn
    nameWithType: AuthenticatedConnection.LogOn
    fullName: Microsoft.Health.AuthenticatedConnection.LogOn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.ManualResetEvent
    name: ManualResetEvent
    nameWithType: ManualResetEvent
    fullName: System.Threading.ManualResetEvent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.AuthenticatedConnection.LogOn(System.String,System.Boolean,System.Boolean,System.Threading.ManualResetEvent,System.Guid,System.Uri,System.Uri)
  commentId: M:Microsoft.Health.AuthenticatedConnection.LogOn(System.String,System.Boolean,System.Boolean,System.Threading.ManualResetEvent,System.Guid,System.Uri,System.Uri)
  parent: Microsoft.Health.AuthenticatedConnection
  isExternal: true
  name: LogOn(String, Boolean, Boolean, ManualResetEvent, Guid, Uri, Uri)
  nameWithType: AuthenticatedConnection.LogOn(String, Boolean, Boolean, ManualResetEvent, Guid, Uri, Uri)
  fullName: Microsoft.Health.AuthenticatedConnection.LogOn(System.String, System.Boolean, System.Boolean, System.Threading.ManualResetEvent, System.Guid, System.Uri, System.Uri)
  spec.csharp:
  - uid: Microsoft.Health.AuthenticatedConnection.LogOn(System.String,System.Boolean,System.Boolean,System.Threading.ManualResetEvent,System.Guid,System.Uri,System.Uri)
    name: LogOn
    nameWithType: AuthenticatedConnection.LogOn
    fullName: Microsoft.Health.AuthenticatedConnection.LogOn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.ManualResetEvent
    name: ManualResetEvent
    nameWithType: ManualResetEvent
    fullName: System.Threading.ManualResetEvent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.AuthenticatedConnection.LogOn(System.String,System.Boolean,System.Boolean,System.Threading.ManualResetEvent,System.Guid,System.Uri,System.Uri)
    name: LogOn
    nameWithType: AuthenticatedConnection.LogOn
    fullName: Microsoft.Health.AuthenticatedConnection.LogOn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.ManualResetEvent
    name: ManualResetEvent
    nameWithType: ManualResetEvent
    fullName: System.Threading.ManualResetEvent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.AuthenticatedConnection.Authenticate
  commentId: M:Microsoft.Health.AuthenticatedConnection.Authenticate
  parent: Microsoft.Health.AuthenticatedConnection
  isExternal: false
  name: Authenticate()
  nameWithType: AuthenticatedConnection.Authenticate()
  fullName: Microsoft.Health.AuthenticatedConnection.Authenticate()
  spec.csharp:
  - uid: Microsoft.Health.AuthenticatedConnection.Authenticate
    name: Authenticate
    nameWithType: AuthenticatedConnection.Authenticate
    fullName: Microsoft.Health.AuthenticatedConnection.Authenticate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.AuthenticatedConnection.Authenticate
    name: Authenticate
    nameWithType: AuthenticatedConnection.Authenticate
    fullName: Microsoft.Health.AuthenticatedConnection.Authenticate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.AuthenticatedConnection.Impersonate(System.Guid)
  commentId: M:Microsoft.Health.AuthenticatedConnection.Impersonate(System.Guid)
  parent: Microsoft.Health.AuthenticatedConnection
  isExternal: true
  name: Impersonate(Guid)
  nameWithType: AuthenticatedConnection.Impersonate(Guid)
  fullName: Microsoft.Health.AuthenticatedConnection.Impersonate(System.Guid)
  spec.csharp:
  - uid: Microsoft.Health.AuthenticatedConnection.Impersonate(System.Guid)
    name: Impersonate
    nameWithType: AuthenticatedConnection.Impersonate
    fullName: Microsoft.Health.AuthenticatedConnection.Impersonate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.AuthenticatedConnection.Impersonate(System.Guid)
    name: Impersonate
    nameWithType: AuthenticatedConnection.Impersonate
    fullName: Microsoft.Health.AuthenticatedConnection.Impersonate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.AuthenticatedConnection.StopImpersonating
  commentId: M:Microsoft.Health.AuthenticatedConnection.StopImpersonating
  parent: Microsoft.Health.AuthenticatedConnection
  isExternal: false
  name: StopImpersonating()
  nameWithType: AuthenticatedConnection.StopImpersonating()
  fullName: Microsoft.Health.AuthenticatedConnection.StopImpersonating()
  spec.csharp:
  - uid: Microsoft.Health.AuthenticatedConnection.StopImpersonating
    name: StopImpersonating
    nameWithType: AuthenticatedConnection.StopImpersonating
    fullName: Microsoft.Health.AuthenticatedConnection.StopImpersonating
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.AuthenticatedConnection.StopImpersonating
    name: StopImpersonating
    nameWithType: AuthenticatedConnection.StopImpersonating
    fullName: Microsoft.Health.AuthenticatedConnection.StopImpersonating
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.AuthenticatedConnection.IsImpersonating
  commentId: P:Microsoft.Health.AuthenticatedConnection.IsImpersonating
  parent: Microsoft.Health.AuthenticatedConnection
  isExternal: false
  name: IsImpersonating
  nameWithType: AuthenticatedConnection.IsImpersonating
  fullName: Microsoft.Health.AuthenticatedConnection.IsImpersonating
- uid: Microsoft.Health.AuthenticatedConnection.GetAllApplicationSettings
  commentId: M:Microsoft.Health.AuthenticatedConnection.GetAllApplicationSettings
  parent: Microsoft.Health.AuthenticatedConnection
  isExternal: false
  name: GetAllApplicationSettings()
  nameWithType: AuthenticatedConnection.GetAllApplicationSettings()
  fullName: Microsoft.Health.AuthenticatedConnection.GetAllApplicationSettings()
  spec.csharp:
  - uid: Microsoft.Health.AuthenticatedConnection.GetAllApplicationSettings
    name: GetAllApplicationSettings
    nameWithType: AuthenticatedConnection.GetAllApplicationSettings
    fullName: Microsoft.Health.AuthenticatedConnection.GetAllApplicationSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.AuthenticatedConnection.GetAllApplicationSettings
    name: GetAllApplicationSettings
    nameWithType: AuthenticatedConnection.GetAllApplicationSettings
    fullName: Microsoft.Health.AuthenticatedConnection.GetAllApplicationSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.AuthenticatedConnection.GetApplicationSettings
  commentId: M:Microsoft.Health.AuthenticatedConnection.GetApplicationSettings
  parent: Microsoft.Health.AuthenticatedConnection
  isExternal: false
  name: GetApplicationSettings()
  nameWithType: AuthenticatedConnection.GetApplicationSettings()
  fullName: Microsoft.Health.AuthenticatedConnection.GetApplicationSettings()
  spec.csharp:
  - uid: Microsoft.Health.AuthenticatedConnection.GetApplicationSettings
    name: GetApplicationSettings
    nameWithType: AuthenticatedConnection.GetApplicationSettings
    fullName: Microsoft.Health.AuthenticatedConnection.GetApplicationSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.AuthenticatedConnection.GetApplicationSettings
    name: GetApplicationSettings
    nameWithType: AuthenticatedConnection.GetApplicationSettings
    fullName: Microsoft.Health.AuthenticatedConnection.GetApplicationSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.AuthenticatedConnection.SetApplicationSettings(System.Xml.XPath.IXPathNavigable)
  commentId: M:Microsoft.Health.AuthenticatedConnection.SetApplicationSettings(System.Xml.XPath.IXPathNavigable)
  parent: Microsoft.Health.AuthenticatedConnection
  isExternal: true
  name: SetApplicationSettings(IXPathNavigable)
  nameWithType: AuthenticatedConnection.SetApplicationSettings(IXPathNavigable)
  fullName: Microsoft.Health.AuthenticatedConnection.SetApplicationSettings(System.Xml.XPath.IXPathNavigable)
  spec.csharp:
  - uid: Microsoft.Health.AuthenticatedConnection.SetApplicationSettings(System.Xml.XPath.IXPathNavigable)
    name: SetApplicationSettings
    nameWithType: AuthenticatedConnection.SetApplicationSettings
    fullName: Microsoft.Health.AuthenticatedConnection.SetApplicationSettings
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.IXPathNavigable
    name: IXPathNavigable
    nameWithType: IXPathNavigable
    fullName: System.Xml.XPath.IXPathNavigable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.AuthenticatedConnection.SetApplicationSettings(System.Xml.XPath.IXPathNavigable)
    name: SetApplicationSettings
    nameWithType: AuthenticatedConnection.SetApplicationSettings
    fullName: Microsoft.Health.AuthenticatedConnection.SetApplicationSettings
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.IXPathNavigable
    name: IXPathNavigable
    nameWithType: IXPathNavigable
    fullName: System.Xml.XPath.IXPathNavigable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ApplicationConnection.CreateRequest(Microsoft.Health.HealthRecordAccessor,System.String,System.Int32)
  commentId: M:Microsoft.Health.ApplicationConnection.CreateRequest(Microsoft.Health.HealthRecordAccessor,System.String,System.Int32)
  parent: Microsoft.Health.ApplicationConnection
  isExternal: true
  name: CreateRequest(HealthRecordAccessor, String, Int32)
  nameWithType: ApplicationConnection.CreateRequest(HealthRecordAccessor, String, Int32)
  fullName: Microsoft.Health.ApplicationConnection.CreateRequest(Microsoft.Health.HealthRecordAccessor, System.String, System.Int32)
  spec.csharp:
  - uid: Microsoft.Health.ApplicationConnection.CreateRequest(Microsoft.Health.HealthRecordAccessor,System.String,System.Int32)
    name: CreateRequest
    nameWithType: ApplicationConnection.CreateRequest
    fullName: Microsoft.Health.ApplicationConnection.CreateRequest
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.HealthRecordAccessor
    name: HealthRecordAccessor
    nameWithType: HealthRecordAccessor
    fullName: Microsoft.Health.HealthRecordAccessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ApplicationConnection.CreateRequest(Microsoft.Health.HealthRecordAccessor,System.String,System.Int32)
    name: CreateRequest
    nameWithType: ApplicationConnection.CreateRequest
    fullName: Microsoft.Health.ApplicationConnection.CreateRequest
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.HealthRecordAccessor
    name: HealthRecordAccessor
    nameWithType: HealthRecordAccessor
    fullName: Microsoft.Health.HealthRecordAccessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ApplicationConnection.GetVocabulary(System.String)
  commentId: M:Microsoft.Health.ApplicationConnection.GetVocabulary(System.String)
  parent: Microsoft.Health.ApplicationConnection
  isExternal: true
  name: GetVocabulary(String)
  nameWithType: ApplicationConnection.GetVocabulary(String)
  fullName: Microsoft.Health.ApplicationConnection.GetVocabulary(System.String)
  spec.csharp:
  - uid: Microsoft.Health.ApplicationConnection.GetVocabulary(System.String)
    name: GetVocabulary
    nameWithType: ApplicationConnection.GetVocabulary
    fullName: Microsoft.Health.ApplicationConnection.GetVocabulary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ApplicationConnection.GetVocabulary(System.String)
    name: GetVocabulary
    nameWithType: ApplicationConnection.GetVocabulary
    fullName: Microsoft.Health.ApplicationConnection.GetVocabulary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ApplicationConnection.GetVocabulary(Microsoft.Health.VocabularyKey,System.Boolean)
  commentId: M:Microsoft.Health.ApplicationConnection.GetVocabulary(Microsoft.Health.VocabularyKey,System.Boolean)
  parent: Microsoft.Health.ApplicationConnection
  isExternal: true
  name: GetVocabulary(VocabularyKey, Boolean)
  nameWithType: ApplicationConnection.GetVocabulary(VocabularyKey, Boolean)
  fullName: Microsoft.Health.ApplicationConnection.GetVocabulary(Microsoft.Health.VocabularyKey, System.Boolean)
  spec.csharp:
  - uid: Microsoft.Health.ApplicationConnection.GetVocabulary(Microsoft.Health.VocabularyKey,System.Boolean)
    name: GetVocabulary
    nameWithType: ApplicationConnection.GetVocabulary
    fullName: Microsoft.Health.ApplicationConnection.GetVocabulary
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.VocabularyKey
    name: VocabularyKey
    nameWithType: VocabularyKey
    fullName: Microsoft.Health.VocabularyKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ApplicationConnection.GetVocabulary(Microsoft.Health.VocabularyKey,System.Boolean)
    name: GetVocabulary
    nameWithType: ApplicationConnection.GetVocabulary
    fullName: Microsoft.Health.ApplicationConnection.GetVocabulary
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.VocabularyKey
    name: VocabularyKey
    nameWithType: VocabularyKey
    fullName: Microsoft.Health.VocabularyKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ApplicationConnection.GetVocabulary(System.Collections.Generic.IList{Microsoft.Health.VocabularyKey},System.Boolean)
  commentId: M:Microsoft.Health.ApplicationConnection.GetVocabulary(System.Collections.Generic.IList{Microsoft.Health.VocabularyKey},System.Boolean)
  parent: Microsoft.Health.ApplicationConnection
  isExternal: true
  name: GetVocabulary(IList<VocabularyKey>, Boolean)
  nameWithType: ApplicationConnection.GetVocabulary(IList<VocabularyKey>, Boolean)
  fullName: Microsoft.Health.ApplicationConnection.GetVocabulary(System.Collections.Generic.IList<Microsoft.Health.VocabularyKey>, System.Boolean)
  nameWithType.vb: ApplicationConnection.GetVocabulary(IList(Of VocabularyKey), Boolean)
  fullName.vb: Microsoft.Health.ApplicationConnection.GetVocabulary(System.Collections.Generic.IList(Of Microsoft.Health.VocabularyKey), System.Boolean)
  name.vb: GetVocabulary(IList(Of VocabularyKey), Boolean)
  spec.csharp:
  - uid: Microsoft.Health.ApplicationConnection.GetVocabulary(System.Collections.Generic.IList{Microsoft.Health.VocabularyKey},System.Boolean)
    name: GetVocabulary
    nameWithType: ApplicationConnection.GetVocabulary
    fullName: Microsoft.Health.ApplicationConnection.GetVocabulary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.VocabularyKey
    name: VocabularyKey
    nameWithType: VocabularyKey
    fullName: Microsoft.Health.VocabularyKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ApplicationConnection.GetVocabulary(System.Collections.Generic.IList{Microsoft.Health.VocabularyKey},System.Boolean)
    name: GetVocabulary
    nameWithType: ApplicationConnection.GetVocabulary
    fullName: Microsoft.Health.ApplicationConnection.GetVocabulary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.VocabularyKey
    name: VocabularyKey
    nameWithType: VocabularyKey
    fullName: Microsoft.Health.VocabularyKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ApplicationConnection.GetVocabularyKeys
  commentId: M:Microsoft.Health.ApplicationConnection.GetVocabularyKeys
  parent: Microsoft.Health.ApplicationConnection
  isExternal: false
  name: GetVocabularyKeys()
  nameWithType: ApplicationConnection.GetVocabularyKeys()
  fullName: Microsoft.Health.ApplicationConnection.GetVocabularyKeys()
  spec.csharp:
  - uid: Microsoft.Health.ApplicationConnection.GetVocabularyKeys
    name: GetVocabularyKeys
    nameWithType: ApplicationConnection.GetVocabularyKeys
    fullName: Microsoft.Health.ApplicationConnection.GetVocabularyKeys
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ApplicationConnection.GetVocabularyKeys
    name: GetVocabularyKeys
    nameWithType: ApplicationConnection.GetVocabularyKeys
    fullName: Microsoft.Health.ApplicationConnection.GetVocabularyKeys
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ApplicationConnection.SearchVocabularyKeys(System.String,Microsoft.Health.VocabularySearchType,System.Nullable{System.Int32})
  commentId: M:Microsoft.Health.ApplicationConnection.SearchVocabularyKeys(System.String,Microsoft.Health.VocabularySearchType,System.Nullable{System.Int32})
  parent: Microsoft.Health.ApplicationConnection
  isExternal: true
  name: SearchVocabularyKeys(String, VocabularySearchType, Nullable<Int32>)
  nameWithType: ApplicationConnection.SearchVocabularyKeys(String, VocabularySearchType, Nullable<Int32>)
  fullName: Microsoft.Health.ApplicationConnection.SearchVocabularyKeys(System.String, Microsoft.Health.VocabularySearchType, System.Nullable<System.Int32>)
  nameWithType.vb: ApplicationConnection.SearchVocabularyKeys(String, VocabularySearchType, Nullable(Of Int32))
  fullName.vb: Microsoft.Health.ApplicationConnection.SearchVocabularyKeys(System.String, Microsoft.Health.VocabularySearchType, System.Nullable(Of System.Int32))
  name.vb: SearchVocabularyKeys(String, VocabularySearchType, Nullable(Of Int32))
  spec.csharp:
  - uid: Microsoft.Health.ApplicationConnection.SearchVocabularyKeys(System.String,Microsoft.Health.VocabularySearchType,System.Nullable{System.Int32})
    name: SearchVocabularyKeys
    nameWithType: ApplicationConnection.SearchVocabularyKeys
    fullName: Microsoft.Health.ApplicationConnection.SearchVocabularyKeys
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.VocabularySearchType
    name: VocabularySearchType
    nameWithType: VocabularySearchType
    fullName: Microsoft.Health.VocabularySearchType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ApplicationConnection.SearchVocabularyKeys(System.String,Microsoft.Health.VocabularySearchType,System.Nullable{System.Int32})
    name: SearchVocabularyKeys
    nameWithType: ApplicationConnection.SearchVocabularyKeys
    fullName: Microsoft.Health.ApplicationConnection.SearchVocabularyKeys
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.VocabularySearchType
    name: VocabularySearchType
    nameWithType: VocabularySearchType
    fullName: Microsoft.Health.VocabularySearchType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ApplicationConnection.SearchVocabulary(Microsoft.Health.VocabularyKey,System.String,Microsoft.Health.VocabularySearchType,System.Nullable{System.Int32})
  commentId: M:Microsoft.Health.ApplicationConnection.SearchVocabulary(Microsoft.Health.VocabularyKey,System.String,Microsoft.Health.VocabularySearchType,System.Nullable{System.Int32})
  parent: Microsoft.Health.ApplicationConnection
  isExternal: true
  name: SearchVocabulary(VocabularyKey, String, VocabularySearchType, Nullable<Int32>)
  nameWithType: ApplicationConnection.SearchVocabulary(VocabularyKey, String, VocabularySearchType, Nullable<Int32>)
  fullName: Microsoft.Health.ApplicationConnection.SearchVocabulary(Microsoft.Health.VocabularyKey, System.String, Microsoft.Health.VocabularySearchType, System.Nullable<System.Int32>)
  nameWithType.vb: ApplicationConnection.SearchVocabulary(VocabularyKey, String, VocabularySearchType, Nullable(Of Int32))
  fullName.vb: Microsoft.Health.ApplicationConnection.SearchVocabulary(Microsoft.Health.VocabularyKey, System.String, Microsoft.Health.VocabularySearchType, System.Nullable(Of System.Int32))
  name.vb: SearchVocabulary(VocabularyKey, String, VocabularySearchType, Nullable(Of Int32))
  spec.csharp:
  - uid: Microsoft.Health.ApplicationConnection.SearchVocabulary(Microsoft.Health.VocabularyKey,System.String,Microsoft.Health.VocabularySearchType,System.Nullable{System.Int32})
    name: SearchVocabulary
    nameWithType: ApplicationConnection.SearchVocabulary
    fullName: Microsoft.Health.ApplicationConnection.SearchVocabulary
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.VocabularyKey
    name: VocabularyKey
    nameWithType: VocabularyKey
    fullName: Microsoft.Health.VocabularyKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.VocabularySearchType
    name: VocabularySearchType
    nameWithType: VocabularySearchType
    fullName: Microsoft.Health.VocabularySearchType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ApplicationConnection.SearchVocabulary(Microsoft.Health.VocabularyKey,System.String,Microsoft.Health.VocabularySearchType,System.Nullable{System.Int32})
    name: SearchVocabulary
    nameWithType: ApplicationConnection.SearchVocabulary
    fullName: Microsoft.Health.ApplicationConnection.SearchVocabulary
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.VocabularyKey
    name: VocabularyKey
    nameWithType: VocabularyKey
    fullName: Microsoft.Health.VocabularyKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.VocabularySearchType
    name: VocabularySearchType
    nameWithType: VocabularySearchType
    fullName: Microsoft.Health.VocabularySearchType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ApplicationConnection.SendInsecureMessageFromApplication(System.Collections.Generic.IList{Microsoft.Health.MailRecipient},System.String,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Health.ApplicationConnection.SendInsecureMessageFromApplication(System.Collections.Generic.IList{Microsoft.Health.MailRecipient},System.String,System.String,System.String,System.String,System.String)
  parent: Microsoft.Health.ApplicationConnection
  isExternal: true
  name: SendInsecureMessageFromApplication(IList<MailRecipient>, String, String, String, String, String)
  nameWithType: ApplicationConnection.SendInsecureMessageFromApplication(IList<MailRecipient>, String, String, String, String, String)
  fullName: Microsoft.Health.ApplicationConnection.SendInsecureMessageFromApplication(System.Collections.Generic.IList<Microsoft.Health.MailRecipient>, System.String, System.String, System.String, System.String, System.String)
  nameWithType.vb: ApplicationConnection.SendInsecureMessageFromApplication(IList(Of MailRecipient), String, String, String, String, String)
  fullName.vb: Microsoft.Health.ApplicationConnection.SendInsecureMessageFromApplication(System.Collections.Generic.IList(Of Microsoft.Health.MailRecipient), System.String, System.String, System.String, System.String, System.String)
  name.vb: SendInsecureMessageFromApplication(IList(Of MailRecipient), String, String, String, String, String)
  spec.csharp:
  - uid: Microsoft.Health.ApplicationConnection.SendInsecureMessageFromApplication(System.Collections.Generic.IList{Microsoft.Health.MailRecipient},System.String,System.String,System.String,System.String,System.String)
    name: SendInsecureMessageFromApplication
    nameWithType: ApplicationConnection.SendInsecureMessageFromApplication
    fullName: Microsoft.Health.ApplicationConnection.SendInsecureMessageFromApplication
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.MailRecipient
    name: MailRecipient
    nameWithType: MailRecipient
    fullName: Microsoft.Health.MailRecipient
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ApplicationConnection.SendInsecureMessageFromApplication(System.Collections.Generic.IList{Microsoft.Health.MailRecipient},System.String,System.String,System.String,System.String,System.String)
    name: SendInsecureMessageFromApplication
    nameWithType: ApplicationConnection.SendInsecureMessageFromApplication
    fullName: Microsoft.Health.ApplicationConnection.SendInsecureMessageFromApplication
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.MailRecipient
    name: MailRecipient
    nameWithType: MailRecipient
    fullName: Microsoft.Health.MailRecipient
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ApplicationConnection.SendInsecureMessageFromApplication(System.Collections.Generic.IList{System.Guid},System.Boolean,System.String,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Health.ApplicationConnection.SendInsecureMessageFromApplication(System.Collections.Generic.IList{System.Guid},System.Boolean,System.String,System.String,System.String,System.String,System.String)
  parent: Microsoft.Health.ApplicationConnection
  isExternal: true
  name: SendInsecureMessageFromApplication(IList<Guid>, Boolean, String, String, String, String, String)
  nameWithType: ApplicationConnection.SendInsecureMessageFromApplication(IList<Guid>, Boolean, String, String, String, String, String)
  fullName: Microsoft.Health.ApplicationConnection.SendInsecureMessageFromApplication(System.Collections.Generic.IList<System.Guid>, System.Boolean, System.String, System.String, System.String, System.String, System.String)
  nameWithType.vb: ApplicationConnection.SendInsecureMessageFromApplication(IList(Of Guid), Boolean, String, String, String, String, String)
  fullName.vb: Microsoft.Health.ApplicationConnection.SendInsecureMessageFromApplication(System.Collections.Generic.IList(Of System.Guid), System.Boolean, System.String, System.String, System.String, System.String, System.String)
  name.vb: SendInsecureMessageFromApplication(IList(Of Guid), Boolean, String, String, String, String, String)
  spec.csharp:
  - uid: Microsoft.Health.ApplicationConnection.SendInsecureMessageFromApplication(System.Collections.Generic.IList{System.Guid},System.Boolean,System.String,System.String,System.String,System.String,System.String)
    name: SendInsecureMessageFromApplication
    nameWithType: ApplicationConnection.SendInsecureMessageFromApplication
    fullName: Microsoft.Health.ApplicationConnection.SendInsecureMessageFromApplication
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ApplicationConnection.SendInsecureMessageFromApplication(System.Collections.Generic.IList{System.Guid},System.Boolean,System.String,System.String,System.String,System.String,System.String)
    name: SendInsecureMessageFromApplication
    nameWithType: ApplicationConnection.SendInsecureMessageFromApplication
    fullName: Microsoft.Health.ApplicationConnection.SendInsecureMessageFromApplication
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ApplicationConnection.SendInsecureMessageToCustodiansFromApplication(System.Guid,System.Boolean,System.String,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Health.ApplicationConnection.SendInsecureMessageToCustodiansFromApplication(System.Guid,System.Boolean,System.String,System.String,System.String,System.String,System.String)
  parent: Microsoft.Health.ApplicationConnection
  isExternal: true
  name: SendInsecureMessageToCustodiansFromApplication(Guid, Boolean, String, String, String, String, String)
  nameWithType: ApplicationConnection.SendInsecureMessageToCustodiansFromApplication(Guid, Boolean, String, String, String, String, String)
  fullName: Microsoft.Health.ApplicationConnection.SendInsecureMessageToCustodiansFromApplication(System.Guid, System.Boolean, System.String, System.String, System.String, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.Health.ApplicationConnection.SendInsecureMessageToCustodiansFromApplication(System.Guid,System.Boolean,System.String,System.String,System.String,System.String,System.String)
    name: SendInsecureMessageToCustodiansFromApplication
    nameWithType: ApplicationConnection.SendInsecureMessageToCustodiansFromApplication
    fullName: Microsoft.Health.ApplicationConnection.SendInsecureMessageToCustodiansFromApplication
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ApplicationConnection.SendInsecureMessageToCustodiansFromApplication(System.Guid,System.Boolean,System.String,System.String,System.String,System.String,System.String)
    name: SendInsecureMessageToCustodiansFromApplication
    nameWithType: ApplicationConnection.SendInsecureMessageToCustodiansFromApplication
    fullName: Microsoft.Health.ApplicationConnection.SendInsecureMessageToCustodiansFromApplication
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ApplicationConnection.GetPersonInfo
  commentId: M:Microsoft.Health.ApplicationConnection.GetPersonInfo
  parent: Microsoft.Health.ApplicationConnection
  isExternal: false
  name: GetPersonInfo()
  nameWithType: ApplicationConnection.GetPersonInfo()
  fullName: Microsoft.Health.ApplicationConnection.GetPersonInfo()
  spec.csharp:
  - uid: Microsoft.Health.ApplicationConnection.GetPersonInfo
    name: GetPersonInfo
    nameWithType: ApplicationConnection.GetPersonInfo
    fullName: Microsoft.Health.ApplicationConnection.GetPersonInfo
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ApplicationConnection.GetPersonInfo
    name: GetPersonInfo
    nameWithType: ApplicationConnection.GetPersonInfo
    fullName: Microsoft.Health.ApplicationConnection.GetPersonInfo
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ApplicationConnection.GetAuthorizedPeople
  commentId: M:Microsoft.Health.ApplicationConnection.GetAuthorizedPeople
  parent: Microsoft.Health.ApplicationConnection
  isExternal: false
  name: GetAuthorizedPeople()
  nameWithType: ApplicationConnection.GetAuthorizedPeople()
  fullName: Microsoft.Health.ApplicationConnection.GetAuthorizedPeople()
  spec.csharp:
  - uid: Microsoft.Health.ApplicationConnection.GetAuthorizedPeople
    name: GetAuthorizedPeople
    nameWithType: ApplicationConnection.GetAuthorizedPeople
    fullName: Microsoft.Health.ApplicationConnection.GetAuthorizedPeople
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ApplicationConnection.GetAuthorizedPeople
    name: GetAuthorizedPeople
    nameWithType: ApplicationConnection.GetAuthorizedPeople
    fullName: Microsoft.Health.ApplicationConnection.GetAuthorizedPeople
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ApplicationConnection.GetAuthorizedPeople(Microsoft.Health.GetAuthorizedPeopleSettings)
  commentId: M:Microsoft.Health.ApplicationConnection.GetAuthorizedPeople(Microsoft.Health.GetAuthorizedPeopleSettings)
  parent: Microsoft.Health.ApplicationConnection
  isExternal: false
  name: GetAuthorizedPeople(GetAuthorizedPeopleSettings)
  nameWithType: ApplicationConnection.GetAuthorizedPeople(GetAuthorizedPeopleSettings)
  fullName: Microsoft.Health.ApplicationConnection.GetAuthorizedPeople(Microsoft.Health.GetAuthorizedPeopleSettings)
  spec.csharp:
  - uid: Microsoft.Health.ApplicationConnection.GetAuthorizedPeople(Microsoft.Health.GetAuthorizedPeopleSettings)
    name: GetAuthorizedPeople
    nameWithType: ApplicationConnection.GetAuthorizedPeople
    fullName: Microsoft.Health.ApplicationConnection.GetAuthorizedPeople
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.GetAuthorizedPeopleSettings
    name: GetAuthorizedPeopleSettings
    nameWithType: GetAuthorizedPeopleSettings
    fullName: Microsoft.Health.GetAuthorizedPeopleSettings
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ApplicationConnection.GetAuthorizedPeople(Microsoft.Health.GetAuthorizedPeopleSettings)
    name: GetAuthorizedPeople
    nameWithType: ApplicationConnection.GetAuthorizedPeople
    fullName: Microsoft.Health.ApplicationConnection.GetAuthorizedPeople
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.GetAuthorizedPeopleSettings
    name: GetAuthorizedPeopleSettings
    nameWithType: GetAuthorizedPeopleSettings
    fullName: Microsoft.Health.GetAuthorizedPeopleSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ApplicationConnection.GetAuthorizedRecords(System.Collections.Generic.IList{System.Guid})
  commentId: M:Microsoft.Health.ApplicationConnection.GetAuthorizedRecords(System.Collections.Generic.IList{System.Guid})
  parent: Microsoft.Health.ApplicationConnection
  isExternal: true
  name: GetAuthorizedRecords(IList<Guid>)
  nameWithType: ApplicationConnection.GetAuthorizedRecords(IList<Guid>)
  fullName: Microsoft.Health.ApplicationConnection.GetAuthorizedRecords(System.Collections.Generic.IList<System.Guid>)
  nameWithType.vb: ApplicationConnection.GetAuthorizedRecords(IList(Of Guid))
  fullName.vb: Microsoft.Health.ApplicationConnection.GetAuthorizedRecords(System.Collections.Generic.IList(Of System.Guid))
  name.vb: GetAuthorizedRecords(IList(Of Guid))
  spec.csharp:
  - uid: Microsoft.Health.ApplicationConnection.GetAuthorizedRecords(System.Collections.Generic.IList{System.Guid})
    name: GetAuthorizedRecords
    nameWithType: ApplicationConnection.GetAuthorizedRecords
    fullName: Microsoft.Health.ApplicationConnection.GetAuthorizedRecords
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ApplicationConnection.GetAuthorizedRecords(System.Collections.Generic.IList{System.Guid})
    name: GetAuthorizedRecords
    nameWithType: ApplicationConnection.GetAuthorizedRecords
    fullName: Microsoft.Health.ApplicationConnection.GetAuthorizedRecords
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ApplicationConnection.GetApplicationInfo
  commentId: M:Microsoft.Health.ApplicationConnection.GetApplicationInfo
  parent: Microsoft.Health.ApplicationConnection
  isExternal: false
  name: GetApplicationInfo()
  nameWithType: ApplicationConnection.GetApplicationInfo()
  fullName: Microsoft.Health.ApplicationConnection.GetApplicationInfo()
  spec.csharp:
  - uid: Microsoft.Health.ApplicationConnection.GetApplicationInfo
    name: GetApplicationInfo
    nameWithType: ApplicationConnection.GetApplicationInfo
    fullName: Microsoft.Health.ApplicationConnection.GetApplicationInfo
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ApplicationConnection.GetApplicationInfo
    name: GetApplicationInfo
    nameWithType: ApplicationConnection.GetApplicationInfo
    fullName: Microsoft.Health.ApplicationConnection.GetApplicationInfo
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ApplicationConnection.GetApplicationInfo(System.Boolean)
  commentId: M:Microsoft.Health.ApplicationConnection.GetApplicationInfo(System.Boolean)
  parent: Microsoft.Health.ApplicationConnection
  isExternal: true
  name: GetApplicationInfo(Boolean)
  nameWithType: ApplicationConnection.GetApplicationInfo(Boolean)
  fullName: Microsoft.Health.ApplicationConnection.GetApplicationInfo(System.Boolean)
  spec.csharp:
  - uid: Microsoft.Health.ApplicationConnection.GetApplicationInfo(System.Boolean)
    name: GetApplicationInfo
    nameWithType: ApplicationConnection.GetApplicationInfo
    fullName: Microsoft.Health.ApplicationConnection.GetApplicationInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ApplicationConnection.GetApplicationInfo(System.Boolean)
    name: GetApplicationInfo
    nameWithType: ApplicationConnection.GetApplicationInfo
    fullName: Microsoft.Health.ApplicationConnection.GetApplicationInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ApplicationConnection.GetUpdatedRecordsForApplication(System.Nullable{System.DateTime})
  commentId: M:Microsoft.Health.ApplicationConnection.GetUpdatedRecordsForApplication(System.Nullable{System.DateTime})
  parent: Microsoft.Health.ApplicationConnection
  isExternal: true
  name: GetUpdatedRecordsForApplication(Nullable<DateTime>)
  nameWithType: ApplicationConnection.GetUpdatedRecordsForApplication(Nullable<DateTime>)
  fullName: Microsoft.Health.ApplicationConnection.GetUpdatedRecordsForApplication(System.Nullable<System.DateTime>)
  nameWithType.vb: ApplicationConnection.GetUpdatedRecordsForApplication(Nullable(Of DateTime))
  fullName.vb: Microsoft.Health.ApplicationConnection.GetUpdatedRecordsForApplication(System.Nullable(Of System.DateTime))
  name.vb: GetUpdatedRecordsForApplication(Nullable(Of DateTime))
  spec.csharp:
  - uid: Microsoft.Health.ApplicationConnection.GetUpdatedRecordsForApplication(System.Nullable{System.DateTime})
    name: GetUpdatedRecordsForApplication
    nameWithType: ApplicationConnection.GetUpdatedRecordsForApplication
    fullName: Microsoft.Health.ApplicationConnection.GetUpdatedRecordsForApplication
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ApplicationConnection.GetUpdatedRecordsForApplication(System.Nullable{System.DateTime})
    name: GetUpdatedRecordsForApplication
    nameWithType: ApplicationConnection.GetUpdatedRecordsForApplication
    fullName: Microsoft.Health.ApplicationConnection.GetUpdatedRecordsForApplication
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ApplicationConnection.GetUpdatedRecordInfoForApplication(System.Nullable{System.DateTime})
  commentId: M:Microsoft.Health.ApplicationConnection.GetUpdatedRecordInfoForApplication(System.Nullable{System.DateTime})
  parent: Microsoft.Health.ApplicationConnection
  isExternal: true
  name: GetUpdatedRecordInfoForApplication(Nullable<DateTime>)
  nameWithType: ApplicationConnection.GetUpdatedRecordInfoForApplication(Nullable<DateTime>)
  fullName: Microsoft.Health.ApplicationConnection.GetUpdatedRecordInfoForApplication(System.Nullable<System.DateTime>)
  nameWithType.vb: ApplicationConnection.GetUpdatedRecordInfoForApplication(Nullable(Of DateTime))
  fullName.vb: Microsoft.Health.ApplicationConnection.GetUpdatedRecordInfoForApplication(System.Nullable(Of System.DateTime))
  name.vb: GetUpdatedRecordInfoForApplication(Nullable(Of DateTime))
  spec.csharp:
  - uid: Microsoft.Health.ApplicationConnection.GetUpdatedRecordInfoForApplication(System.Nullable{System.DateTime})
    name: GetUpdatedRecordInfoForApplication
    nameWithType: ApplicationConnection.GetUpdatedRecordInfoForApplication
    fullName: Microsoft.Health.ApplicationConnection.GetUpdatedRecordInfoForApplication
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ApplicationConnection.GetUpdatedRecordInfoForApplication(System.Nullable{System.DateTime})
    name: GetUpdatedRecordInfoForApplication
    nameWithType: ApplicationConnection.GetUpdatedRecordInfoForApplication
    fullName: Microsoft.Health.ApplicationConnection.GetUpdatedRecordInfoForApplication
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ApplicationConnection.NewSignupCode
  commentId: M:Microsoft.Health.ApplicationConnection.NewSignupCode
  parent: Microsoft.Health.ApplicationConnection
  isExternal: false
  name: NewSignupCode()
  nameWithType: ApplicationConnection.NewSignupCode()
  fullName: Microsoft.Health.ApplicationConnection.NewSignupCode()
  spec.csharp:
  - uid: Microsoft.Health.ApplicationConnection.NewSignupCode
    name: NewSignupCode
    nameWithType: ApplicationConnection.NewSignupCode
    fullName: Microsoft.Health.ApplicationConnection.NewSignupCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ApplicationConnection.NewSignupCode
    name: NewSignupCode
    nameWithType: ApplicationConnection.NewSignupCode
    fullName: Microsoft.Health.ApplicationConnection.NewSignupCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ApplicationConnection.SelectInstance(Microsoft.Health.Location)
  commentId: M:Microsoft.Health.ApplicationConnection.SelectInstance(Microsoft.Health.Location)
  parent: Microsoft.Health.ApplicationConnection
  isExternal: false
  name: SelectInstance(Location)
  nameWithType: ApplicationConnection.SelectInstance(Location)
  fullName: Microsoft.Health.ApplicationConnection.SelectInstance(Microsoft.Health.Location)
  spec.csharp:
  - uid: Microsoft.Health.ApplicationConnection.SelectInstance(Microsoft.Health.Location)
    name: SelectInstance
    nameWithType: ApplicationConnection.SelectInstance
    fullName: Microsoft.Health.ApplicationConnection.SelectInstance
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.Location
    name: Location
    nameWithType: Location
    fullName: Microsoft.Health.Location
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ApplicationConnection.SelectInstance(Microsoft.Health.Location)
    name: SelectInstance
    nameWithType: ApplicationConnection.SelectInstance
    fullName: Microsoft.Health.ApplicationConnection.SelectInstance
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.Location
    name: Location
    nameWithType: Location
    fullName: Microsoft.Health.Location
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ApplicationConnection.GetMeaningfulUseVDTReport(Microsoft.Health.DateRange)
  commentId: M:Microsoft.Health.ApplicationConnection.GetMeaningfulUseVDTReport(Microsoft.Health.DateRange)
  parent: Microsoft.Health.ApplicationConnection
  isExternal: false
  name: GetMeaningfulUseVDTReport(DateRange)
  nameWithType: ApplicationConnection.GetMeaningfulUseVDTReport(DateRange)
  fullName: Microsoft.Health.ApplicationConnection.GetMeaningfulUseVDTReport(Microsoft.Health.DateRange)
  spec.csharp:
  - uid: Microsoft.Health.ApplicationConnection.GetMeaningfulUseVDTReport(Microsoft.Health.DateRange)
    name: GetMeaningfulUseVDTReport
    nameWithType: ApplicationConnection.GetMeaningfulUseVDTReport
    fullName: Microsoft.Health.ApplicationConnection.GetMeaningfulUseVDTReport
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.DateRange
    name: DateRange
    nameWithType: DateRange
    fullName: Microsoft.Health.DateRange
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ApplicationConnection.GetMeaningfulUseVDTReport(Microsoft.Health.DateRange)
    name: GetMeaningfulUseVDTReport
    nameWithType: ApplicationConnection.GetMeaningfulUseVDTReport
    fullName: Microsoft.Health.ApplicationConnection.GetMeaningfulUseVDTReport
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.DateRange
    name: DateRange
    nameWithType: DateRange
    fullName: Microsoft.Health.DateRange
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ApplicationConnection.GetMeaningfulUseTimelyAccessDocumentReport(Microsoft.Health.DateRange)
  commentId: M:Microsoft.Health.ApplicationConnection.GetMeaningfulUseTimelyAccessDocumentReport(Microsoft.Health.DateRange)
  parent: Microsoft.Health.ApplicationConnection
  isExternal: false
  name: GetMeaningfulUseTimelyAccessDocumentReport(DateRange)
  nameWithType: ApplicationConnection.GetMeaningfulUseTimelyAccessDocumentReport(DateRange)
  fullName: Microsoft.Health.ApplicationConnection.GetMeaningfulUseTimelyAccessDocumentReport(Microsoft.Health.DateRange)
  spec.csharp:
  - uid: Microsoft.Health.ApplicationConnection.GetMeaningfulUseTimelyAccessDocumentReport(Microsoft.Health.DateRange)
    name: GetMeaningfulUseTimelyAccessDocumentReport
    nameWithType: ApplicationConnection.GetMeaningfulUseTimelyAccessDocumentReport
    fullName: Microsoft.Health.ApplicationConnection.GetMeaningfulUseTimelyAccessDocumentReport
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.DateRange
    name: DateRange
    nameWithType: DateRange
    fullName: Microsoft.Health.DateRange
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ApplicationConnection.GetMeaningfulUseTimelyAccessDocumentReport(Microsoft.Health.DateRange)
    name: GetMeaningfulUseTimelyAccessDocumentReport
    nameWithType: ApplicationConnection.GetMeaningfulUseTimelyAccessDocumentReport
    fullName: Microsoft.Health.ApplicationConnection.GetMeaningfulUseTimelyAccessDocumentReport
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.DateRange
    name: DateRange
    nameWithType: DateRange
    fullName: Microsoft.Health.DateRange
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ApplicationConnection.GetMeaningfulUseTimelyAccessDOPUDocumentReport(Microsoft.Health.DateRange)
  commentId: M:Microsoft.Health.ApplicationConnection.GetMeaningfulUseTimelyAccessDOPUDocumentReport(Microsoft.Health.DateRange)
  parent: Microsoft.Health.ApplicationConnection
  isExternal: false
  name: GetMeaningfulUseTimelyAccessDOPUDocumentReport(DateRange)
  nameWithType: ApplicationConnection.GetMeaningfulUseTimelyAccessDOPUDocumentReport(DateRange)
  fullName: Microsoft.Health.ApplicationConnection.GetMeaningfulUseTimelyAccessDOPUDocumentReport(Microsoft.Health.DateRange)
  spec.csharp:
  - uid: Microsoft.Health.ApplicationConnection.GetMeaningfulUseTimelyAccessDOPUDocumentReport(Microsoft.Health.DateRange)
    name: GetMeaningfulUseTimelyAccessDOPUDocumentReport
    nameWithType: ApplicationConnection.GetMeaningfulUseTimelyAccessDOPUDocumentReport
    fullName: Microsoft.Health.ApplicationConnection.GetMeaningfulUseTimelyAccessDOPUDocumentReport
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.DateRange
    name: DateRange
    nameWithType: DateRange
    fullName: Microsoft.Health.DateRange
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ApplicationConnection.GetMeaningfulUseTimelyAccessDOPUDocumentReport(Microsoft.Health.DateRange)
    name: GetMeaningfulUseTimelyAccessDOPUDocumentReport
    nameWithType: ApplicationConnection.GetMeaningfulUseTimelyAccessDOPUDocumentReport
    fullName: Microsoft.Health.ApplicationConnection.GetMeaningfulUseTimelyAccessDOPUDocumentReport
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.DateRange
    name: DateRange
    nameWithType: DateRange
    fullName: Microsoft.Health.DateRange
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthServiceConnection.CreateRequest(System.String,System.Int32)
  commentId: M:Microsoft.Health.HealthServiceConnection.CreateRequest(System.String,System.Int32)
  parent: Microsoft.Health.HealthServiceConnection
  isExternal: true
  name: CreateRequest(String, Int32)
  nameWithType: HealthServiceConnection.CreateRequest(String, Int32)
  fullName: Microsoft.Health.HealthServiceConnection.CreateRequest(System.String, System.Int32)
  spec.csharp:
  - uid: Microsoft.Health.HealthServiceConnection.CreateRequest(System.String,System.Int32)
    name: CreateRequest
    nameWithType: HealthServiceConnection.CreateRequest
    fullName: Microsoft.Health.HealthServiceConnection.CreateRequest
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthServiceConnection.CreateRequest(System.String,System.Int32)
    name: CreateRequest
    nameWithType: HealthServiceConnection.CreateRequest
    fullName: Microsoft.Health.HealthServiceConnection.CreateRequest
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthServiceConnection.CancelAllRequests
  commentId: P:Microsoft.Health.HealthServiceConnection.CancelAllRequests
  parent: Microsoft.Health.HealthServiceConnection
  isExternal: false
  name: CancelAllRequests
  nameWithType: HealthServiceConnection.CancelAllRequests
  fullName: Microsoft.Health.HealthServiceConnection.CancelAllRequests
- uid: Microsoft.Health.HealthServiceConnection.GetServiceDefinition
  commentId: M:Microsoft.Health.HealthServiceConnection.GetServiceDefinition
  parent: Microsoft.Health.HealthServiceConnection
  isExternal: false
  name: GetServiceDefinition()
  nameWithType: HealthServiceConnection.GetServiceDefinition()
  fullName: Microsoft.Health.HealthServiceConnection.GetServiceDefinition()
  spec.csharp:
  - uid: Microsoft.Health.HealthServiceConnection.GetServiceDefinition
    name: GetServiceDefinition
    nameWithType: HealthServiceConnection.GetServiceDefinition
    fullName: Microsoft.Health.HealthServiceConnection.GetServiceDefinition
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthServiceConnection.GetServiceDefinition
    name: GetServiceDefinition
    nameWithType: HealthServiceConnection.GetServiceDefinition
    fullName: Microsoft.Health.HealthServiceConnection.GetServiceDefinition
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthServiceConnection.GetServiceDefinition(System.DateTime)
  commentId: M:Microsoft.Health.HealthServiceConnection.GetServiceDefinition(System.DateTime)
  parent: Microsoft.Health.HealthServiceConnection
  isExternal: true
  name: GetServiceDefinition(DateTime)
  nameWithType: HealthServiceConnection.GetServiceDefinition(DateTime)
  fullName: Microsoft.Health.HealthServiceConnection.GetServiceDefinition(System.DateTime)
  spec.csharp:
  - uid: Microsoft.Health.HealthServiceConnection.GetServiceDefinition(System.DateTime)
    name: GetServiceDefinition
    nameWithType: HealthServiceConnection.GetServiceDefinition
    fullName: Microsoft.Health.HealthServiceConnection.GetServiceDefinition
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthServiceConnection.GetServiceDefinition(System.DateTime)
    name: GetServiceDefinition
    nameWithType: HealthServiceConnection.GetServiceDefinition
    fullName: Microsoft.Health.HealthServiceConnection.GetServiceDefinition
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthServiceConnection.GetServiceDefinition(Microsoft.Health.ServiceInfoSections)
  commentId: M:Microsoft.Health.HealthServiceConnection.GetServiceDefinition(Microsoft.Health.ServiceInfoSections)
  parent: Microsoft.Health.HealthServiceConnection
  isExternal: false
  name: GetServiceDefinition(ServiceInfoSections)
  nameWithType: HealthServiceConnection.GetServiceDefinition(ServiceInfoSections)
  fullName: Microsoft.Health.HealthServiceConnection.GetServiceDefinition(Microsoft.Health.ServiceInfoSections)
  spec.csharp:
  - uid: Microsoft.Health.HealthServiceConnection.GetServiceDefinition(Microsoft.Health.ServiceInfoSections)
    name: GetServiceDefinition
    nameWithType: HealthServiceConnection.GetServiceDefinition
    fullName: Microsoft.Health.HealthServiceConnection.GetServiceDefinition
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.ServiceInfoSections
    name: ServiceInfoSections
    nameWithType: ServiceInfoSections
    fullName: Microsoft.Health.ServiceInfoSections
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthServiceConnection.GetServiceDefinition(Microsoft.Health.ServiceInfoSections)
    name: GetServiceDefinition
    nameWithType: HealthServiceConnection.GetServiceDefinition
    fullName: Microsoft.Health.HealthServiceConnection.GetServiceDefinition
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.ServiceInfoSections
    name: ServiceInfoSections
    nameWithType: ServiceInfoSections
    fullName: Microsoft.Health.ServiceInfoSections
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthServiceConnection.GetServiceDefinition(Microsoft.Health.ServiceInfoSections,System.DateTime)
  commentId: M:Microsoft.Health.HealthServiceConnection.GetServiceDefinition(Microsoft.Health.ServiceInfoSections,System.DateTime)
  parent: Microsoft.Health.HealthServiceConnection
  isExternal: true
  name: GetServiceDefinition(ServiceInfoSections, DateTime)
  nameWithType: HealthServiceConnection.GetServiceDefinition(ServiceInfoSections, DateTime)
  fullName: Microsoft.Health.HealthServiceConnection.GetServiceDefinition(Microsoft.Health.ServiceInfoSections, System.DateTime)
  spec.csharp:
  - uid: Microsoft.Health.HealthServiceConnection.GetServiceDefinition(Microsoft.Health.ServiceInfoSections,System.DateTime)
    name: GetServiceDefinition
    nameWithType: HealthServiceConnection.GetServiceDefinition
    fullName: Microsoft.Health.HealthServiceConnection.GetServiceDefinition
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.ServiceInfoSections
    name: ServiceInfoSections
    nameWithType: ServiceInfoSections
    fullName: Microsoft.Health.ServiceInfoSections
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthServiceConnection.GetServiceDefinition(Microsoft.Health.ServiceInfoSections,System.DateTime)
    name: GetServiceDefinition
    nameWithType: HealthServiceConnection.GetServiceDefinition
    fullName: Microsoft.Health.HealthServiceConnection.GetServiceDefinition
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.ServiceInfoSections
    name: ServiceInfoSections
    nameWithType: ServiceInfoSections
    fullName: Microsoft.Health.ServiceInfoSections
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthServiceConnection.WebProxy
  commentId: P:Microsoft.Health.HealthServiceConnection.WebProxy
  parent: Microsoft.Health.HealthServiceConnection
  isExternal: false
  name: WebProxy
  nameWithType: HealthServiceConnection.WebProxy
  fullName: Microsoft.Health.HealthServiceConnection.WebProxy
- uid: Microsoft.Health.HealthServiceConnection.ApplicationId
  commentId: P:Microsoft.Health.HealthServiceConnection.ApplicationId
  parent: Microsoft.Health.HealthServiceConnection
  isExternal: false
  name: ApplicationId
  nameWithType: HealthServiceConnection.ApplicationId
  fullName: Microsoft.Health.HealthServiceConnection.ApplicationId
- uid: Microsoft.Health.HealthServiceConnection.RequestUrl
  commentId: P:Microsoft.Health.HealthServiceConnection.RequestUrl
  parent: Microsoft.Health.HealthServiceConnection
  isExternal: false
  name: RequestUrl
  nameWithType: HealthServiceConnection.RequestUrl
  fullName: Microsoft.Health.HealthServiceConnection.RequestUrl
- uid: Microsoft.Health.HealthServiceConnection.ServiceInstance
  commentId: P:Microsoft.Health.HealthServiceConnection.ServiceInstance
  parent: Microsoft.Health.HealthServiceConnection
  isExternal: false
  name: ServiceInstance
  nameWithType: HealthServiceConnection.ServiceInstance
  fullName: Microsoft.Health.HealthServiceConnection.ServiceInstance
- uid: Microsoft.Health.HealthServiceConnection.RequestTimeoutSeconds
  commentId: P:Microsoft.Health.HealthServiceConnection.RequestTimeoutSeconds
  parent: Microsoft.Health.HealthServiceConnection
  isExternal: false
  name: RequestTimeoutSeconds
  nameWithType: HealthServiceConnection.RequestTimeoutSeconds
  fullName: Microsoft.Health.HealthServiceConnection.RequestTimeoutSeconds
- uid: Microsoft.Health.HealthServiceConnection.RequestTimeToLive
  commentId: P:Microsoft.Health.HealthServiceConnection.RequestTimeToLive
  parent: Microsoft.Health.HealthServiceConnection
  isExternal: false
  name: RequestTimeToLive
  nameWithType: HealthServiceConnection.RequestTimeToLive
  fullName: Microsoft.Health.HealthServiceConnection.RequestTimeToLive
- uid: Microsoft.Health.HealthServiceConnection.Culture
  commentId: P:Microsoft.Health.HealthServiceConnection.Culture
  parent: Microsoft.Health.HealthServiceConnection
  isExternal: false
  name: Culture
  nameWithType: HealthServiceConnection.Culture
  fullName: Microsoft.Health.HealthServiceConnection.Culture
- uid: Microsoft.Health.HealthServiceConnection.RequestCompressionMethod
  commentId: P:Microsoft.Health.HealthServiceConnection.RequestCompressionMethod
  parent: Microsoft.Health.HealthServiceConnection
  isExternal: false
  name: RequestCompressionMethod
  nameWithType: HealthServiceConnection.RequestCompressionMethod
  fullName: Microsoft.Health.HealthServiceConnection.RequestCompressionMethod
- uid: Microsoft.Health.HealthServiceConnection.ResponseCompressionMethods
  commentId: P:Microsoft.Health.HealthServiceConnection.ResponseCompressionMethods
  parent: Microsoft.Health.HealthServiceConnection
  isExternal: false
  name: ResponseCompressionMethods
  nameWithType: HealthServiceConnection.ResponseCompressionMethods
  fullName: Microsoft.Health.HealthServiceConnection.ResponseCompressionMethods
- uid: Microsoft.Health.HealthServiceConnection.AuthenticationToken
  commentId: P:Microsoft.Health.HealthServiceConnection.AuthenticationToken
  parent: Microsoft.Health.HealthServiceConnection
  isExternal: false
  name: AuthenticationToken
  nameWithType: HealthServiceConnection.AuthenticationToken
  fullName: Microsoft.Health.HealthServiceConnection.AuthenticationToken
- uid: Microsoft.Health.HealthServiceConnection.Credential
  commentId: P:Microsoft.Health.HealthServiceConnection.Credential
  parent: Microsoft.Health.HealthServiceConnection
  isExternal: false
  name: Credential
  nameWithType: HealthServiceConnection.Credential
  fullName: Microsoft.Health.HealthServiceConnection.Credential
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Web.WebApplicationConnection
  commentId: T:Microsoft.Health.Web.WebApplicationConnection
  isExternal: false
  name: WebApplicationConnection
  nameWithType: WebApplicationConnection
  fullName: Microsoft.Health.Web.WebApplicationConnection
- uid: Microsoft.Health.Web.WebApplicationConnection.#ctor*
  commentId: Overload:Microsoft.Health.Web.WebApplicationConnection.#ctor
  isExternal: false
  name: WebApplicationConnection
  nameWithType: WebApplicationConnection.WebApplicationConnection
  fullName: Microsoft.Health.Web.WebApplicationConnection.WebApplicationConnection
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: Microsoft.Health.Authentication.Credential
  commentId: T:Microsoft.Health.Authentication.Credential
  parent: Microsoft.Health.Authentication
  isExternal: false
  name: Credential
  nameWithType: Credential
  fullName: Microsoft.Health.Authentication.Credential
- uid: Microsoft.Health.Authentication
  commentId: N:Microsoft.Health.Authentication
  isExternal: false
  name: Microsoft.Health.Authentication
  nameWithType: Microsoft.Health.Authentication
  fullName: Microsoft.Health.Authentication
- uid: Microsoft.Health.HealthServiceInstance
  commentId: T:Microsoft.Health.HealthServiceInstance
  parent: Microsoft.Health
  isExternal: false
  name: HealthServiceInstance
  nameWithType: HealthServiceInstance
  fullName: Microsoft.Health.HealthServiceInstance
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.Web.WebApplicationConnection.SendInsecureMessage*
  commentId: Overload:Microsoft.Health.Web.WebApplicationConnection.SendInsecureMessage
  isExternal: false
  name: SendInsecureMessage
  nameWithType: WebApplicationConnection.SendInsecureMessage
  fullName: Microsoft.Health.Web.WebApplicationConnection.SendInsecureMessage
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: Microsoft.Health.HealthServiceException
  commentId: T:Microsoft.Health.HealthServiceException
  parent: Microsoft.Health
  isExternal: false
  name: HealthServiceException
  nameWithType: HealthServiceException
  fullName: Microsoft.Health.HealthServiceException
- uid: System.Collections.Generic.IList{Microsoft.Health.MailRecipient}
  commentId: T:System.Collections.Generic.IList{Microsoft.Health.MailRecipient}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<MailRecipient>
  nameWithType: IList<MailRecipient>
  fullName: System.Collections.Generic.IList<Microsoft.Health.MailRecipient>
  nameWithType.vb: IList(Of MailRecipient)
  fullName.vb: System.Collections.Generic.IList(Of Microsoft.Health.MailRecipient)
  name.vb: IList(Of MailRecipient)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.MailRecipient
    name: MailRecipient
    nameWithType: MailRecipient
    fullName: Microsoft.Health.MailRecipient
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.MailRecipient
    name: MailRecipient
    nameWithType: MailRecipient
    fullName: Microsoft.Health.MailRecipient
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IList{System.Guid}
  commentId: T:System.Collections.Generic.IList{System.Guid}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Guid>
  nameWithType: IList<Guid>
  fullName: System.Collections.Generic.IList<System.Guid>
  nameWithType.vb: IList(Of Guid)
  fullName.vb: System.Collections.Generic.IList(Of System.Guid)
  name.vb: IList(Of Guid)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Guid.Empty
  commentId: F:System.Guid.Empty
- uid: Microsoft.Health.Web.WebApplicationConnection.SendInsecureMessageToCustodians*
  commentId: Overload:Microsoft.Health.Web.WebApplicationConnection.SendInsecureMessageToCustodians
  isExternal: false
  name: SendInsecureMessageToCustodians
  nameWithType: WebApplicationConnection.SendInsecureMessageToCustodians
  fullName: Microsoft.Health.Web.WebApplicationConnection.SendInsecureMessageToCustodians
