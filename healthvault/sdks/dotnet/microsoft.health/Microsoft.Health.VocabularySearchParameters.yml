### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.VocabularySearchParameters
  commentId: T:Microsoft.Health.VocabularySearchParameters
  id: VocabularySearchParameters
  parent: Microsoft.Health
  children:
  - Microsoft.Health.VocabularySearchParameters.#ctor(Microsoft.Health.VocabularyKey)
  - Microsoft.Health.VocabularySearchParameters.Culture
  - Microsoft.Health.VocabularySearchParameters.MaxResults
  - Microsoft.Health.VocabularySearchParameters.Vocabulary
  langs:
  - csharp
  - vb
  name: VocabularySearchParameters
  nameWithType: VocabularySearchParameters
  fullName: Microsoft.Health.VocabularySearchParameters
  type: Class
  source:
    remote:
      path: Microsoft.Health/VocabularySearchParameters.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: VocabularySearchParameters
    path: VocabularySearchParameters.cs
    startLine: 14
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nThe set of search parameters are used with the Vocabulary Search feature to specify the \nvocabulary etc.\n"
  example: []
  syntax:
    content: public class VocabularySearchParameters
    content.vb: Public Class VocabularySearchParameters
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.VocabularySearchParameters.#ctor(Microsoft.Health.VocabularyKey)
  commentId: M:Microsoft.Health.VocabularySearchParameters.#ctor(Microsoft.Health.VocabularyKey)
  id: '#ctor(Microsoft.Health.VocabularyKey)'
  parent: Microsoft.Health.VocabularySearchParameters
  langs:
  - csharp
  - vb
  name: VocabularySearchParameters(VocabularyKey)
  nameWithType: VocabularySearchParameters.VocabularySearchParameters(VocabularyKey)
  fullName: Microsoft.Health.VocabularySearchParameters.VocabularySearchParameters(Microsoft.Health.VocabularyKey)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/VocabularySearchParameters.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: VocabularySearchParameters.cs
    startLine: 26
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nCreates a vocabulary search parameter set with the <xref href=\"Microsoft.Health.VocabularyKey\" data-throw-if-not-resolved=\"false\"></xref> that is\nused to identify the vocabulary to search.\n"
  example: []
  syntax:
    content: public VocabularySearchParameters(VocabularyKey vocabulary)
    content.vb: Public Sub New(vocabulary As VocabularyKey)
    parameters:
    - id: vocabulary
      type: Microsoft.Health.VocabularyKey
      description: "\nA key to identify the vocabulary that is searched.\n"
  overload: Microsoft.Health.VocabularySearchParameters.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nIf <span class=\"paramref\">vocabulary</span> is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.VocabularySearchParameters.Vocabulary
  commentId: P:Microsoft.Health.VocabularySearchParameters.Vocabulary
  id: Vocabulary
  parent: Microsoft.Health.VocabularySearchParameters
  langs:
  - csharp
  - vb
  name: Vocabulary
  nameWithType: VocabularySearchParameters.Vocabulary
  fullName: Microsoft.Health.VocabularySearchParameters.Vocabulary
  type: Property
  source:
    remote:
      path: Microsoft.Health/VocabularySearchParameters.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Vocabulary
    path: VocabularySearchParameters.cs
    startLine: 35
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets the vocabulary key used to identify the vocabulary to be searched.\n"
  example: []
  syntax:
    content: public VocabularyKey Vocabulary { get; }
    content.vb: Public ReadOnly Property Vocabulary As VocabularyKey
    parameters: []
    return:
      type: Microsoft.Health.VocabularyKey
  overload: Microsoft.Health.VocabularySearchParameters.Vocabulary*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.VocabularySearchParameters.Culture
  commentId: P:Microsoft.Health.VocabularySearchParameters.Culture
  id: Culture
  parent: Microsoft.Health.VocabularySearchParameters
  langs:
  - csharp
  - vb
  name: Culture
  nameWithType: VocabularySearchParameters.Culture
  fullName: Microsoft.Health.VocabularySearchParameters.Culture
  type: Property
  source:
    remote:
      path: Microsoft.Health/VocabularySearchParameters.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Culture
    path: VocabularySearchParameters.cs
    startLine: 47
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the culture in which the vocabulary will be searched. \n"
  remarks: "\nIf the culture is not set, the current UI culture will be used by default.\n"
  example: []
  syntax:
    content: public CultureInfo Culture { get; set; }
    content.vb: Public Property Culture As CultureInfo
    parameters: []
    return:
      type: System.Globalization.CultureInfo
  overload: Microsoft.Health.VocabularySearchParameters.Culture*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.VocabularySearchParameters.MaxResults
  commentId: P:Microsoft.Health.VocabularySearchParameters.MaxResults
  id: MaxResults
  parent: Microsoft.Health.VocabularySearchParameters
  langs:
  - csharp
  - vb
  name: MaxResults
  nameWithType: VocabularySearchParameters.MaxResults
  fullName: Microsoft.Health.VocabularySearchParameters.MaxResults
  type: Property
  source:
    remote:
      path: Microsoft.Health/VocabularySearchParameters.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: MaxResults
    path: VocabularySearchParameters.cs
    startLine: 64
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the maximum number of results to be returned from the search.\n"
  example: []
  syntax:
    content: public int ? MaxResults { get; set; }
    content.vb: Public Property MaxResults As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Health.VocabularySearchParameters.MaxResults*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nIf <span class=\"paramref\">value</span> is a negative number.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.VocabularyKey
  commentId: T:Microsoft.Health.VocabularyKey
  parent: Microsoft.Health
  isExternal: false
  name: VocabularyKey
  nameWithType: VocabularyKey
  fullName: Microsoft.Health.VocabularyKey
- uid: Microsoft.Health.VocabularySearchParameters.#ctor*
  commentId: Overload:Microsoft.Health.VocabularySearchParameters.#ctor
  isExternal: false
  name: VocabularySearchParameters
  nameWithType: VocabularySearchParameters.VocabularySearchParameters
  fullName: Microsoft.Health.VocabularySearchParameters.VocabularySearchParameters
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: Microsoft.Health.VocabularySearchParameters.Vocabulary*
  commentId: Overload:Microsoft.Health.VocabularySearchParameters.Vocabulary
  isExternal: false
  name: Vocabulary
  nameWithType: VocabularySearchParameters.Vocabulary
  fullName: Microsoft.Health.VocabularySearchParameters.Vocabulary
- uid: Microsoft.Health.VocabularySearchParameters.Culture*
  commentId: Overload:Microsoft.Health.VocabularySearchParameters.Culture
  isExternal: false
  name: Culture
  nameWithType: VocabularySearchParameters.Culture
  fullName: Microsoft.Health.VocabularySearchParameters.Culture
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: false
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
- uid: Microsoft.Health.VocabularySearchParameters.MaxResults*
  commentId: Overload:Microsoft.Health.VocabularySearchParameters.MaxResults
  isExternal: false
  name: MaxResults
  nameWithType: VocabularySearchParameters.MaxResults
  fullName: Microsoft.Health.VocabularySearchParameters.MaxResults
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
