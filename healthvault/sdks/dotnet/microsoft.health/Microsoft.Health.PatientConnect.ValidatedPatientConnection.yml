### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.PatientConnect.ValidatedPatientConnection
  commentId: T:Microsoft.Health.PatientConnect.ValidatedPatientConnection
  id: ValidatedPatientConnection
  parent: Microsoft.Health.PatientConnect
  children:
  - Microsoft.Health.PatientConnect.ValidatedPatientConnection.#ctor
  - Microsoft.Health.PatientConnect.ValidatedPatientConnection.ApplicationId
  - Microsoft.Health.PatientConnect.ValidatedPatientConnection.ApplicationPatientId
  - Microsoft.Health.PatientConnect.ValidatedPatientConnection.ApplicationSpecificRecordId
  - Microsoft.Health.PatientConnect.ValidatedPatientConnection.PersonId
  - Microsoft.Health.PatientConnect.ValidatedPatientConnection.RecordId
  langs:
  - csharp
  - vb
  name: ValidatedPatientConnection
  nameWithType: ValidatedPatientConnection
  fullName: Microsoft.Health.PatientConnect.ValidatedPatientConnection
  type: Class
  source:
    remote:
      path: Microsoft.Health/PatientConnect/ValidatedPatientConnection.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ValidatedPatientConnection
    path: PatientConnect/ValidatedPatientConnection.cs
    startLine: 26
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.PatientConnect
  summary: "\nInformation about a validated patient connection.\n"
  remarks: "\nSome HealthVault applications maintain some of their own data storage but need a way to\nlink their account/person identifier to a HealthVault identifier. The application can do\nthis by calling <xref href=\"Microsoft.Health.PatientConnect.PatientConnection.Create(Microsoft.Health.Web.OfflineWebApplicationConnection%2cSystem.String%2cSystem.String%2cSystem.String%2cSystem.Uri%2cSystem.String)\" data-throw-if-not-resolved=\"false\"></xref> and passing the application's \nidentifier and some information that is specific to the user. The user can then go to \nHealthVault Shell and validate the connection with their appropriate health record. The\napplication can then query for all validated connections (usually on a daily basis) by\ncalling <xref href=\"Microsoft.Health.PatientConnect.PatientConnection.GetValidatedConnections(Microsoft.Health.Web.OfflineWebApplicationConnection)\" data-throw-if-not-resolved=\"false\"></xref>\nor <xref href=\"Microsoft.Health.PatientConnect.PatientConnection.GetValidatedConnections(Microsoft.Health.Web.OfflineWebApplicationConnection%2cSystem.DateTime)\" data-throw-if-not-resolved=\"false\"></xref> \nwhich returns instances of <xref href=\"Microsoft.Health.PatientConnect.ValidatedPatientConnection\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public class ValidatedPatientConnection
    content.vb: Public Class ValidatedPatientConnection
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.PatientConnect.ValidatedPatientConnection.#ctor
  commentId: M:Microsoft.Health.PatientConnect.ValidatedPatientConnection.#ctor
  id: '#ctor'
  parent: Microsoft.Health.PatientConnect.ValidatedPatientConnection
  langs:
  - csharp
  - vb
  name: ValidatedPatientConnection()
  nameWithType: ValidatedPatientConnection.ValidatedPatientConnection()
  fullName: Microsoft.Health.PatientConnect.ValidatedPatientConnection.ValidatedPatientConnection()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/PatientConnect/ValidatedPatientConnection.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: PatientConnect/ValidatedPatientConnection.cs
    startLine: 32
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.PatientConnect
  summary: "\nConstructs a <xref href=\"Microsoft.Health.PatientConnect.ValidatedPatientConnection\" data-throw-if-not-resolved=\"false\"></xref> with default values.\n"
  example: []
  syntax:
    content: public ValidatedPatientConnection()
    content.vb: Public Sub New
  overload: Microsoft.Health.PatientConnect.ValidatedPatientConnection.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.PatientConnect.ValidatedPatientConnection.ApplicationSpecificRecordId
  commentId: P:Microsoft.Health.PatientConnect.ValidatedPatientConnection.ApplicationSpecificRecordId
  id: ApplicationSpecificRecordId
  parent: Microsoft.Health.PatientConnect.ValidatedPatientConnection
  langs:
  - csharp
  - vb
  name: ApplicationSpecificRecordId
  nameWithType: ValidatedPatientConnection.ApplicationSpecificRecordId
  fullName: Microsoft.Health.PatientConnect.ValidatedPatientConnection.ApplicationSpecificRecordId
  type: Property
  source:
    remote:
      path: Microsoft.Health/PatientConnect/ValidatedPatientConnection.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ApplicationSpecificRecordId
    path: PatientConnect/ValidatedPatientConnection.cs
    startLine: 82
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.PatientConnect
  summary: "\nGets or sets the Application specific record id. \n"
  example: []
  syntax:
    content: public string ApplicationSpecificRecordId { get; set; }
    content.vb: Public Property ApplicationSpecificRecordId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.PatientConnect.ValidatedPatientConnection.ApplicationSpecificRecordId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.PatientConnect.ValidatedPatientConnection.PersonId
  commentId: P:Microsoft.Health.PatientConnect.ValidatedPatientConnection.PersonId
  id: PersonId
  parent: Microsoft.Health.PatientConnect.ValidatedPatientConnection
  langs:
  - csharp
  - vb
  name: PersonId
  nameWithType: ValidatedPatientConnection.PersonId
  fullName: Microsoft.Health.PatientConnect.ValidatedPatientConnection.PersonId
  type: Property
  source:
    remote:
      path: Microsoft.Health/PatientConnect/ValidatedPatientConnection.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: PersonId
    path: PatientConnect/ValidatedPatientConnection.cs
    startLine: 93
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.PatientConnect
  summary: "\nGets or sets the person identifier for the patient that has validated their connection.\n"
  example: []
  syntax:
    content: public Guid PersonId { get; set; }
    content.vb: Public Property PersonId As Guid
    parameters: []
    return:
      type: System.Guid
  overload: Microsoft.Health.PatientConnect.ValidatedPatientConnection.PersonId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.PatientConnect.ValidatedPatientConnection.RecordId
  commentId: P:Microsoft.Health.PatientConnect.ValidatedPatientConnection.RecordId
  id: RecordId
  parent: Microsoft.Health.PatientConnect.ValidatedPatientConnection
  langs:
  - csharp
  - vb
  name: RecordId
  nameWithType: ValidatedPatientConnection.RecordId
  fullName: Microsoft.Health.PatientConnect.ValidatedPatientConnection.RecordId
  type: Property
  source:
    remote:
      path: Microsoft.Health/PatientConnect/ValidatedPatientConnection.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: RecordId
    path: PatientConnect/ValidatedPatientConnection.cs
    startLine: 104
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.PatientConnect
  summary: "\nGets or sets the record identifier that the patient chose when validating their connection.\n"
  example: []
  syntax:
    content: public Guid RecordId { get; set; }
    content.vb: Public Property RecordId As Guid
    parameters: []
    return:
      type: System.Guid
  overload: Microsoft.Health.PatientConnect.ValidatedPatientConnection.RecordId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.PatientConnect.ValidatedPatientConnection.ApplicationId
  commentId: P:Microsoft.Health.PatientConnect.ValidatedPatientConnection.ApplicationId
  id: ApplicationId
  parent: Microsoft.Health.PatientConnect.ValidatedPatientConnection
  langs:
  - csharp
  - vb
  name: ApplicationId
  nameWithType: ValidatedPatientConnection.ApplicationId
  fullName: Microsoft.Health.PatientConnect.ValidatedPatientConnection.ApplicationId
  type: Property
  source:
    remote:
      path: Microsoft.Health/PatientConnect/ValidatedPatientConnection.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ApplicationId
    path: PatientConnect/ValidatedPatientConnection.cs
    startLine: 115
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.PatientConnect
  summary: "\nGets or sets the application identifier for which the patient validated their connection.\n"
  example: []
  syntax:
    content: public Guid ApplicationId { get; set; }
    content.vb: Public Property ApplicationId As Guid
    parameters: []
    return:
      type: System.Guid
  overload: Microsoft.Health.PatientConnect.ValidatedPatientConnection.ApplicationId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.PatientConnect.ValidatedPatientConnection.ApplicationPatientId
  commentId: P:Microsoft.Health.PatientConnect.ValidatedPatientConnection.ApplicationPatientId
  id: ApplicationPatientId
  parent: Microsoft.Health.PatientConnect.ValidatedPatientConnection
  langs:
  - csharp
  - vb
  name: ApplicationPatientId
  nameWithType: ValidatedPatientConnection.ApplicationPatientId
  fullName: Microsoft.Health.PatientConnect.ValidatedPatientConnection.ApplicationPatientId
  type: Property
  source:
    remote:
      path: Microsoft.Health/PatientConnect/ValidatedPatientConnection.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ApplicationPatientId
    path: PatientConnect/ValidatedPatientConnection.cs
    startLine: 132
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.PatientConnect
  summary: "\nGets or sets the application specific identifier that the application uses to connect the\napplication data with the person's HealthVault record.\n"
  remarks: "\nThis identifier was provided by the application when the original connection request\nwas made.\n"
  example: []
  syntax:
    content: public string ApplicationPatientId { get; set; }
    content.vb: Public Property ApplicationPatientId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.PatientConnect.ValidatedPatientConnection.ApplicationPatientId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Health.PatientConnect.PatientConnection.Create(Microsoft.Health.Web.OfflineWebApplicationConnection,System.String,System.String,System.String,System.Uri,System.String)
  commentId: M:Microsoft.Health.PatientConnect.PatientConnection.Create(Microsoft.Health.Web.OfflineWebApplicationConnection,System.String,System.String,System.String,System.Uri,System.String)
- uid: Microsoft.Health.PatientConnect.PatientConnection.GetValidatedConnections(Microsoft.Health.Web.OfflineWebApplicationConnection)
  commentId: M:Microsoft.Health.PatientConnect.PatientConnection.GetValidatedConnections(Microsoft.Health.Web.OfflineWebApplicationConnection)
- uid: Microsoft.Health.PatientConnect.PatientConnection.GetValidatedConnections(Microsoft.Health.Web.OfflineWebApplicationConnection,System.DateTime)
  commentId: M:Microsoft.Health.PatientConnect.PatientConnection.GetValidatedConnections(Microsoft.Health.Web.OfflineWebApplicationConnection,System.DateTime)
- uid: Microsoft.Health.PatientConnect.ValidatedPatientConnection
  commentId: T:Microsoft.Health.PatientConnect.ValidatedPatientConnection
  isExternal: false
  name: ValidatedPatientConnection
  nameWithType: ValidatedPatientConnection
  fullName: Microsoft.Health.PatientConnect.ValidatedPatientConnection
- uid: Microsoft.Health.PatientConnect
  commentId: N:Microsoft.Health.PatientConnect
  isExternal: false
  name: Microsoft.Health.PatientConnect
  nameWithType: Microsoft.Health.PatientConnect
  fullName: Microsoft.Health.PatientConnect
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.PatientConnect.ValidatedPatientConnection.#ctor*
  commentId: Overload:Microsoft.Health.PatientConnect.ValidatedPatientConnection.#ctor
  isExternal: false
  name: ValidatedPatientConnection
  nameWithType: ValidatedPatientConnection.ValidatedPatientConnection
  fullName: Microsoft.Health.PatientConnect.ValidatedPatientConnection.ValidatedPatientConnection
- uid: Microsoft.Health.PatientConnect.ValidatedPatientConnection.ApplicationSpecificRecordId*
  commentId: Overload:Microsoft.Health.PatientConnect.ValidatedPatientConnection.ApplicationSpecificRecordId
  isExternal: false
  name: ApplicationSpecificRecordId
  nameWithType: ValidatedPatientConnection.ApplicationSpecificRecordId
  fullName: Microsoft.Health.PatientConnect.ValidatedPatientConnection.ApplicationSpecificRecordId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.PatientConnect.ValidatedPatientConnection.PersonId*
  commentId: Overload:Microsoft.Health.PatientConnect.ValidatedPatientConnection.PersonId
  isExternal: false
  name: PersonId
  nameWithType: ValidatedPatientConnection.PersonId
  fullName: Microsoft.Health.PatientConnect.ValidatedPatientConnection.PersonId
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Microsoft.Health.PatientConnect.ValidatedPatientConnection.RecordId*
  commentId: Overload:Microsoft.Health.PatientConnect.ValidatedPatientConnection.RecordId
  isExternal: false
  name: RecordId
  nameWithType: ValidatedPatientConnection.RecordId
  fullName: Microsoft.Health.PatientConnect.ValidatedPatientConnection.RecordId
- uid: Microsoft.Health.PatientConnect.ValidatedPatientConnection.ApplicationId*
  commentId: Overload:Microsoft.Health.PatientConnect.ValidatedPatientConnection.ApplicationId
  isExternal: false
  name: ApplicationId
  nameWithType: ValidatedPatientConnection.ApplicationId
  fullName: Microsoft.Health.PatientConnect.ValidatedPatientConnection.ApplicationId
- uid: Microsoft.Health.PatientConnect.ValidatedPatientConnection.ApplicationPatientId*
  commentId: Overload:Microsoft.Health.PatientConnect.ValidatedPatientConnection.ApplicationPatientId
  isExternal: false
  name: ApplicationPatientId
  nameWithType: ValidatedPatientConnection.ApplicationPatientId
  fullName: Microsoft.Health.PatientConnect.ValidatedPatientConnection.ApplicationPatientId
