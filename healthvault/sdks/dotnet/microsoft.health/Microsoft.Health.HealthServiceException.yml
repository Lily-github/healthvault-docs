### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.HealthServiceException
  commentId: T:Microsoft.Health.HealthServiceException
  id: HealthServiceException
  parent: Microsoft.Health
  children:
  - Microsoft.Health.HealthServiceException.#ctor
  - Microsoft.Health.HealthServiceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - Microsoft.Health.HealthServiceException.#ctor(System.String)
  - Microsoft.Health.HealthServiceException.#ctor(System.String,System.Exception)
  - Microsoft.Health.HealthServiceException.Error
  - Microsoft.Health.HealthServiceException.ErrorCode
  - Microsoft.Health.HealthServiceException.ErrorCodeId
  - Microsoft.Health.HealthServiceException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - Microsoft.Health.HealthServiceException.Response
  - Microsoft.Health.HealthServiceException.ToString
  langs:
  - csharp
  - vb
  name: HealthServiceException
  nameWithType: HealthServiceException
  fullName: Microsoft.Health.HealthServiceException
  type: Class
  source:
    remote:
      path: Microsoft.Health/HealthServiceException.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: HealthServiceException
    path: HealthServiceException.cs
    startLine: 18
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nRepresents the base class for all HealthVault exceptions \nthrown by the SDK.\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public class HealthServiceException : Exception, ISerializable, _Exception
    content.vb: >-
      <Serializable>

      Public Class HealthServiceException
          Inherits Exception
          Implements ISerializable, _Exception
  inheritance:
  - System.Object
  - System.Exception
  derivedClasses:
  - Microsoft.Health.HealthRecordAuthorizationNotPossible
  - Microsoft.Health.HealthRecordAuthorizationRequiredException
  - Microsoft.Health.HealthRecordReauthorizationRequired
  - Microsoft.Health.HealthServiceAccessDeniedException
  - Microsoft.Health.HealthServiceApplicationDuplicateCredentialException
  - Microsoft.Health.HealthServiceAuthenticatedSessionTokenExpiredException
  - Microsoft.Health.HealthServiceCredentialTokenExpiredException
  - Microsoft.Health.HealthServiceEmailNotValidatedException
  - Microsoft.Health.HealthServiceInvalidApplicationAuthorizationException
  - Microsoft.Health.HealthServiceInvalidPersonException
  - Microsoft.Health.HealthServiceInvalidRecordException
  - Microsoft.Health.HealthServiceMailAddressMalformedException
  - Microsoft.Health.HealthServiceOtherDataSizeLimitExceededException
  - Microsoft.Health.HealthServicePasswordNotStrongException
  - Microsoft.Health.HealthServiceRecordQuotaExceededException
  - Microsoft.Health.HealthServiceRequestCancelledException
  implements:
  - System.Runtime.Serialization.ISerializable
  - System.Runtime.InteropServices._Exception
  inheritedMembers:
  - System.Exception.GetBaseException
  - System.Exception.GetType
  - System.Exception.Message
  - System.Exception.Data
  - System.Exception.InnerException
  - System.Exception.TargetSite
  - System.Exception.StackTrace
  - System.Exception.HelpLink
  - System.Exception.Source
  - System.Exception.HResult
  - System.Exception.SerializeObjectState
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.HealthServiceException.#ctor
  commentId: M:Microsoft.Health.HealthServiceException.#ctor
  id: '#ctor'
  parent: Microsoft.Health.HealthServiceException
  langs:
  - csharp
  - vb
  name: HealthServiceException()
  nameWithType: HealthServiceException.HealthServiceException()
  fullName: Microsoft.Health.HealthServiceException.HealthServiceException()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/HealthServiceException.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: HealthServiceException.cs
    startLine: 123
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nCreates an instance of the <xref href=\"Microsoft.Health.HealthServiceException\" data-throw-if-not-resolved=\"false\"></xref> \nclass with default values.\n"
  example: []
  syntax:
    content: public HealthServiceException()
    content.vb: Public Sub New
  overload: Microsoft.Health.HealthServiceException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthServiceException.#ctor(System.String)
  commentId: M:Microsoft.Health.HealthServiceException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Health.HealthServiceException
  langs:
  - csharp
  - vb
  name: HealthServiceException(String)
  nameWithType: HealthServiceException.HealthServiceException(String)
  fullName: Microsoft.Health.HealthServiceException.HealthServiceException(System.String)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/HealthServiceException.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: HealthServiceException.cs
    startLine: 137
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nCreates an instance of the <xref href=\"Microsoft.Health.HealthServiceException\" data-throw-if-not-resolved=\"false\"></xref> \nclass having the specified error message.\n"
  example: []
  syntax:
    content: public HealthServiceException(string message)
    content.vb: Public Sub New(message As String)
    parameters:
    - id: message
      type: System.String
      description: "\nA string representing the error message.\n"
  overload: Microsoft.Health.HealthServiceException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthServiceException.#ctor(System.String,System.Exception)
  commentId: M:Microsoft.Health.HealthServiceException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: Microsoft.Health.HealthServiceException
  langs:
  - csharp
  - vb
  name: HealthServiceException(String, Exception)
  nameWithType: HealthServiceException.HealthServiceException(String, Exception)
  fullName: Microsoft.Health.HealthServiceException.HealthServiceException(System.String, System.Exception)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/HealthServiceException.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: HealthServiceException.cs
    startLine: 155
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nCreates an instance of the <xref href=\"Microsoft.Health.HealthServiceException\" data-throw-if-not-resolved=\"false\"></xref> \nclass having the specified error message and inner exception.\n"
  example: []
  syntax:
    content: public HealthServiceException(string message, Exception innerException)
    content.vb: Public Sub New(message As String, innerException As Exception)
    parameters:
    - id: message
      type: System.String
      description: "\nA string representing the error message.\n"
    - id: innerException
      type: System.Exception
      description: "\nThe inner exception.\n"
  overload: Microsoft.Health.HealthServiceException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthServiceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:Microsoft.Health.HealthServiceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: Microsoft.Health.HealthServiceException
  langs:
  - csharp
  - vb
  name: HealthServiceException(SerializationInfo, StreamingContext)
  nameWithType: HealthServiceException.HealthServiceException(SerializationInfo, StreamingContext)
  fullName: Microsoft.Health.HealthServiceException.HealthServiceException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/HealthServiceException.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: HealthServiceException.cs
    startLine: 179
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nCreates an instance of the <xref href=\"Microsoft.Health.HealthServiceException\" data-throw-if-not-resolved=\"false\"></xref> \nclass with the specified serialization information.\n"
  example: []
  syntax:
    content: protected HealthServiceException(SerializationInfo info, StreamingContext context)
    content.vb: Protected Sub New(info As SerializationInfo, context As StreamingContext)
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "\nSerialized information about this exception.\n"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "\nThe source and destination of the serialized information.\n"
  overload: Microsoft.Health.HealthServiceException.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">info</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.Health.HealthServiceException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:Microsoft.Health.HealthServiceException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: Microsoft.Health.HealthServiceException
  langs:
  - csharp
  - vb
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: HealthServiceException.GetObjectData(SerializationInfo, StreamingContext)
  fullName: Microsoft.Health.HealthServiceException.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  type: Method
  source:
    remote:
      path: Microsoft.Health/HealthServiceException.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetObjectData
    path: HealthServiceException.cs
    startLine: 210
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nSerializes the exception.\n"
  example: []
  syntax:
    content: >-
      [SecurityCritical]

      [SecurityPermission(SecurityAction.LinkDemand, SerializationFormatter = true)]

      public override void GetObjectData(SerializationInfo info, StreamingContext context)
    content.vb: >-
      <SecurityCritical>

      <SecurityPermission(SecurityAction.LinkDemand, SerializationFormatter:=True)>

      Public Overrides Sub GetObjectData(info As SerializationInfo, context As StreamingContext)
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "\nSerialized information about this exception.\n"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "\nThe source and destination of the serialized information.\n"
  overridden: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  overload: Microsoft.Health.HealthServiceException.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">info</span> parameter is <strong>null</strong>.\n"
  attributes:
  - type: System.Security.SecurityCriticalAttribute
    ctor: System.Security.SecurityCriticalAttribute.#ctor
    arguments: []
  - type: System.Security.Permissions.SecurityPermissionAttribute
    ctor: System.Security.Permissions.SecurityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
    arguments:
    - type: System.Security.Permissions.SecurityAction
      value: 6
    namedArguments:
    - name: SerializationFormatter
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.HealthServiceException.ErrorCode
  commentId: P:Microsoft.Health.HealthServiceException.ErrorCode
  id: ErrorCode
  parent: Microsoft.Health.HealthServiceException
  langs:
  - csharp
  - vb
  name: ErrorCode
  nameWithType: HealthServiceException.ErrorCode
  fullName: Microsoft.Health.HealthServiceException.ErrorCode
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthServiceException.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ErrorCode
    path: HealthServiceException.cs
    startLine: 241
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets the status code returned by HealthVault to indicate the type\nof error that causes this exception.\n"
  example: []
  syntax:
    content: public HealthServiceStatusCode ErrorCode { get; }
    content.vb: Public ReadOnly Property ErrorCode As HealthServiceStatusCode
    parameters: []
    return:
      type: Microsoft.Health.HealthServiceStatusCode
  overload: Microsoft.Health.HealthServiceException.ErrorCode*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.HealthServiceException.ErrorCodeId
  commentId: P:Microsoft.Health.HealthServiceException.ErrorCodeId
  id: ErrorCodeId
  parent: Microsoft.Health.HealthServiceException
  langs:
  - csharp
  - vb
  name: ErrorCodeId
  nameWithType: HealthServiceException.ErrorCodeId
  fullName: Microsoft.Health.HealthServiceException.ErrorCodeId
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthServiceException.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ErrorCodeId
    path: HealthServiceException.cs
    startLine: 265
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets the identifier of the status code in the HealthVault response.\n"
  remarks: "\nThis property is useful when the SDK is out of sync with the \nHealthVault status code set. The actual integer value of the \nstatus code can be looked up for further investigation.\n"
  example: []
  syntax:
    content: public int ErrorCodeId { get; }
    content.vb: Public ReadOnly Property ErrorCodeId As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\nAn integer representing the identifier.\n"
  overload: Microsoft.Health.HealthServiceException.ErrorCodeId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.HealthServiceException.Error
  commentId: P:Microsoft.Health.HealthServiceException.Error
  id: Error
  parent: Microsoft.Health.HealthServiceException
  langs:
  - csharp
  - vb
  name: Error
  nameWithType: HealthServiceException.Error
  fullName: Microsoft.Health.HealthServiceException.Error
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthServiceException.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Error
    path: HealthServiceException.cs
    startLine: 287
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets the information about an error that occurred while processing\nthe request.  \n"
  remarks: "\nThis value can be <strong>null</strong> for those exceptions that \noccurred in the SDK rather than in HealthVault.\n"
  example: []
  syntax:
    content: public HealthServiceResponseError Error { get; }
    content.vb: Public ReadOnly Property Error As HealthServiceResponseError
    parameters: []
    return:
      type: Microsoft.Health.HealthServiceResponseError
      description: "\nA <xref href=\"Microsoft.Health.HealthServiceResponseError\" data-throw-if-not-resolved=\"false\"></xref> object representing the\nerror information.\n"
  overload: Microsoft.Health.HealthServiceException.Error*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.HealthServiceException.Response
  commentId: P:Microsoft.Health.HealthServiceException.Response
  id: Response
  parent: Microsoft.Health.HealthServiceException
  langs:
  - csharp
  - vb
  name: Response
  nameWithType: HealthServiceException.Response
  fullName: Microsoft.Health.HealthServiceException.Response
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthServiceException.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Response
    path: HealthServiceException.cs
    startLine: 300
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nContains the response information from the HealthVault service after\nprocessing a request.\n"
  example: []
  syntax:
    content: public HealthServiceResponseData Response { get; }
    content.vb: Public ReadOnly Property Response As HealthServiceResponseData
    parameters: []
    return:
      type: Microsoft.Health.HealthServiceResponseData
  overload: Microsoft.Health.HealthServiceException.Response*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.HealthServiceException.ToString
  commentId: M:Microsoft.Health.HealthServiceException.ToString
  id: ToString
  parent: Microsoft.Health.HealthServiceException
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: HealthServiceException.ToString()
  fullName: Microsoft.Health.HealthServiceException.ToString()
  type: Method
  source:
    remote:
      path: Microsoft.Health/HealthServiceException.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ToString
    path: HealthServiceException.cs
    startLine: 325
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nRetrieves the string representing the \n<xref href=\"Microsoft.Health.HealthServiceException\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\nA string representing the contents of the \n<xref href=\"Microsoft.Health.HealthServiceException\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  overridden: System.Exception.ToString
  overload: Microsoft.Health.HealthServiceException.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: System.Runtime.InteropServices._Exception
  commentId: T:System.Runtime.InteropServices._Exception
  parent: System.Runtime.InteropServices
  isExternal: true
  name: _Exception
  nameWithType: _Exception
  fullName: System.Runtime.InteropServices._Exception
- uid: System.Exception.GetBaseException
  commentId: M:System.Exception.GetBaseException
  parent: System.Exception
  isExternal: true
  name: GetBaseException()
  nameWithType: Exception.GetBaseException()
  fullName: System.Exception.GetBaseException()
  spec.csharp:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    nameWithType: Exception.GetBaseException
    fullName: System.Exception.GetBaseException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    nameWithType: Exception.GetBaseException
    fullName: System.Exception.GetBaseException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.GetType
  commentId: M:System.Exception.GetType
  parent: System.Exception
  isExternal: true
  name: GetType()
  nameWithType: Exception.GetType()
  fullName: System.Exception.GetType()
  spec.csharp:
  - uid: System.Exception.GetType
    name: GetType
    nameWithType: Exception.GetType
    fullName: System.Exception.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetType
    name: GetType
    nameWithType: Exception.GetType
    fullName: System.Exception.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.Message
  commentId: P:System.Exception.Message
  parent: System.Exception
  isExternal: true
  name: Message
  nameWithType: Exception.Message
  fullName: System.Exception.Message
- uid: System.Exception.Data
  commentId: P:System.Exception.Data
  parent: System.Exception
  isExternal: true
  name: Data
  nameWithType: Exception.Data
  fullName: System.Exception.Data
- uid: System.Exception.InnerException
  commentId: P:System.Exception.InnerException
  parent: System.Exception
  isExternal: true
  name: InnerException
  nameWithType: Exception.InnerException
  fullName: System.Exception.InnerException
- uid: System.Exception.TargetSite
  commentId: P:System.Exception.TargetSite
  parent: System.Exception
  isExternal: true
  name: TargetSite
  nameWithType: Exception.TargetSite
  fullName: System.Exception.TargetSite
- uid: System.Exception.StackTrace
  commentId: P:System.Exception.StackTrace
  parent: System.Exception
  isExternal: true
  name: StackTrace
  nameWithType: Exception.StackTrace
  fullName: System.Exception.StackTrace
- uid: System.Exception.HelpLink
  commentId: P:System.Exception.HelpLink
  parent: System.Exception
  isExternal: true
  name: HelpLink
  nameWithType: Exception.HelpLink
  fullName: System.Exception.HelpLink
- uid: System.Exception.Source
  commentId: P:System.Exception.Source
  parent: System.Exception
  isExternal: true
  name: Source
  nameWithType: Exception.Source
  fullName: System.Exception.Source
- uid: System.Exception.HResult
  commentId: P:System.Exception.HResult
  parent: System.Exception
  isExternal: true
  name: HResult
  nameWithType: Exception.HResult
  fullName: System.Exception.HResult
- uid: System.Exception.SerializeObjectState
  commentId: E:System.Exception.SerializeObjectState
  parent: System.Exception
  isExternal: true
  name: SerializeObjectState
  nameWithType: Exception.SerializeObjectState
  fullName: System.Exception.SerializeObjectState
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: false
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: System.Runtime.InteropServices
  commentId: N:System.Runtime.InteropServices
  isExternal: false
  name: System.Runtime.InteropServices
  nameWithType: System.Runtime.InteropServices
  fullName: System.Runtime.InteropServices
- uid: Microsoft.Health.HealthServiceException
  commentId: T:Microsoft.Health.HealthServiceException
  parent: Microsoft.Health
  isExternal: false
  name: HealthServiceException
  nameWithType: HealthServiceException
  fullName: Microsoft.Health.HealthServiceException
- uid: Microsoft.Health.HealthServiceException.#ctor*
  commentId: Overload:Microsoft.Health.HealthServiceException.#ctor
  isExternal: false
  name: HealthServiceException
  nameWithType: HealthServiceException.HealthServiceException
  fullName: Microsoft.Health.HealthServiceException.HealthServiceException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.Runtime.Serialization.SerializationInfo
  commentId: T:System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: true
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  commentId: T:System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Exception
  isExternal: true
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: Exception.GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: Exception.GetObjectData
    fullName: System.Exception.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: Exception.GetObjectData
    fullName: System.Exception.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthServiceException.GetObjectData*
  commentId: Overload:Microsoft.Health.HealthServiceException.GetObjectData
  isExternal: false
  name: GetObjectData
  nameWithType: HealthServiceException.GetObjectData
  fullName: Microsoft.Health.HealthServiceException.GetObjectData
- uid: Microsoft.Health.HealthServiceException.ErrorCode*
  commentId: Overload:Microsoft.Health.HealthServiceException.ErrorCode
  isExternal: false
  name: ErrorCode
  nameWithType: HealthServiceException.ErrorCode
  fullName: Microsoft.Health.HealthServiceException.ErrorCode
- uid: Microsoft.Health.HealthServiceStatusCode
  commentId: T:Microsoft.Health.HealthServiceStatusCode
  parent: Microsoft.Health
  isExternal: false
  name: HealthServiceStatusCode
  nameWithType: HealthServiceStatusCode
  fullName: Microsoft.Health.HealthServiceStatusCode
- uid: Microsoft.Health.HealthServiceException.ErrorCodeId*
  commentId: Overload:Microsoft.Health.HealthServiceException.ErrorCodeId
  isExternal: false
  name: ErrorCodeId
  nameWithType: HealthServiceException.ErrorCodeId
  fullName: Microsoft.Health.HealthServiceException.ErrorCodeId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Health.HealthServiceResponseError
  commentId: T:Microsoft.Health.HealthServiceResponseError
  parent: Microsoft.Health
  isExternal: false
  name: HealthServiceResponseError
  nameWithType: HealthServiceResponseError
  fullName: Microsoft.Health.HealthServiceResponseError
- uid: Microsoft.Health.HealthServiceException.Error*
  commentId: Overload:Microsoft.Health.HealthServiceException.Error
  isExternal: false
  name: Error
  nameWithType: HealthServiceException.Error
  fullName: Microsoft.Health.HealthServiceException.Error
- uid: Microsoft.Health.HealthServiceException.Response*
  commentId: Overload:Microsoft.Health.HealthServiceException.Response
  isExternal: false
  name: Response
  nameWithType: HealthServiceException.Response
  fullName: Microsoft.Health.HealthServiceException.Response
- uid: Microsoft.Health.HealthServiceResponseData
  commentId: T:Microsoft.Health.HealthServiceResponseData
  parent: Microsoft.Health
  isExternal: false
  name: HealthServiceResponseData
  nameWithType: HealthServiceResponseData
  fullName: Microsoft.Health.HealthServiceResponseData
- uid: System.Exception.ToString
  commentId: M:System.Exception.ToString
  parent: System.Exception
  isExternal: true
  name: ToString()
  nameWithType: Exception.ToString()
  fullName: System.Exception.ToString()
  spec.csharp:
  - uid: System.Exception.ToString
    name: ToString
    nameWithType: Exception.ToString
    fullName: System.Exception.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.ToString
    name: ToString
    nameWithType: Exception.ToString
    fullName: System.Exception.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthServiceException.ToString*
  commentId: Overload:Microsoft.Health.HealthServiceException.ToString
  isExternal: false
  name: ToString
  nameWithType: HealthServiceException.ToString
  fullName: Microsoft.Health.HealthServiceException.ToString
