### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Events.CommonNotificationData
  commentId: T:Microsoft.Health.Events.CommonNotificationData
  id: CommonNotificationData
  parent: Microsoft.Health.Events
  children:
  - Microsoft.Health.Events.CommonNotificationData.#ctor
  - Microsoft.Health.Events.CommonNotificationData.#ctor(System.Guid)
  - Microsoft.Health.Events.CommonNotificationData.ParseXml(System.Xml.XPath.XPathNavigator)
  - Microsoft.Health.Events.CommonNotificationData.SubscriptionId
  langs:
  - csharp
  - vb
  name: CommonNotificationData
  nameWithType: CommonNotificationData
  fullName: Microsoft.Health.Events.CommonNotificationData
  type: Class
  source:
    remote:
      path: Microsoft.Health/Eventing/CommonNotificationData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CommonNotificationData
    path: Eventing/CommonNotificationData.cs
    startLine: 14
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Events
  summary: "\nRepresents data that is common across all event notification.\n"
  example: []
  syntax:
    content: public class CommonNotificationData
    content.vb: Public Class CommonNotificationData
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.Events.CommonNotificationData.#ctor
  commentId: M:Microsoft.Health.Events.CommonNotificationData.#ctor
  id: '#ctor'
  parent: Microsoft.Health.Events.CommonNotificationData
  langs:
  - csharp
  - vb
  name: CommonNotificationData()
  nameWithType: CommonNotificationData.CommonNotificationData()
  fullName: Microsoft.Health.Events.CommonNotificationData.CommonNotificationData()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/Eventing/CommonNotificationData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: Eventing/CommonNotificationData.cs
    startLine: 19
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Events
  summary: "\nCreates an empty instance of the CommonNotificationData class. \n"
  example: []
  syntax:
    content: public CommonNotificationData()
    content.vb: Public Sub New
  overload: Microsoft.Health.Events.CommonNotificationData.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Events.CommonNotificationData.#ctor(System.Guid)
  commentId: M:Microsoft.Health.Events.CommonNotificationData.#ctor(System.Guid)
  id: '#ctor(System.Guid)'
  parent: Microsoft.Health.Events.CommonNotificationData
  langs:
  - csharp
  - vb
  name: CommonNotificationData(Guid)
  nameWithType: CommonNotificationData.CommonNotificationData(Guid)
  fullName: Microsoft.Health.Events.CommonNotificationData.CommonNotificationData(System.Guid)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/Eventing/CommonNotificationData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: Eventing/CommonNotificationData.cs
    startLine: 31
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Events
  summary: "\nCreates an instance of the CommonNotificationData class and sets\nthe unique identifier for the subscription.\n"
  example: []
  syntax:
    content: public CommonNotificationData(Guid subscriptionId)
    content.vb: Public Sub New(subscriptionId As Guid)
    parameters:
    - id: subscriptionId
      type: System.Guid
  overload: Microsoft.Health.Events.CommonNotificationData.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">subscriptionId</span> is equal to Guid.Empty.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Events.CommonNotificationData.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.Events.CommonNotificationData.ParseXml(System.Xml.XPath.XPathNavigator)
  id: ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.Events.CommonNotificationData
  langs:
  - csharp
  - vb
  name: ParseXml(XPathNavigator)
  nameWithType: CommonNotificationData.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.Events.CommonNotificationData.ParseXml(System.Xml.XPath.XPathNavigator)
  type: Method
  source:
    remote:
      path: Microsoft.Health/Eventing/CommonNotificationData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ParseXml
    path: Eventing/CommonNotificationData.cs
    startLine: 50
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Events
  summary: "\nPopulate the CommonNotificationData instance from XML.\n"
  example: []
  syntax:
    content: public void ParseXml(XPathNavigator navigator)
    content.vb: Public Sub ParseXml(navigator As XPathNavigator)
    parameters:
    - id: navigator
      type: System.Xml.XPath.XPathNavigator
      description: The XPathNavigator.
  overload: Microsoft.Health.Events.CommonNotificationData.ParseXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">navigator</span> parameter is <strong>null</strong>.\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">navigator</span> parameter does not contain a common node or a subscription-id node.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Events.CommonNotificationData.SubscriptionId
  commentId: P:Microsoft.Health.Events.CommonNotificationData.SubscriptionId
  id: SubscriptionId
  parent: Microsoft.Health.Events.CommonNotificationData
  langs:
  - csharp
  - vb
  name: SubscriptionId
  nameWithType: CommonNotificationData.SubscriptionId
  fullName: Microsoft.Health.Events.CommonNotificationData.SubscriptionId
  type: Property
  source:
    remote:
      path: Microsoft.Health/Eventing/CommonNotificationData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SubscriptionId
    path: Eventing/CommonNotificationData.cs
    startLine: 66
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Events
  summary: "\nGets or sets the unique identifier for the subscription.\n"
  example: []
  syntax:
    content: public Guid SubscriptionId { get; set; }
    content.vb: Public Property SubscriptionId As Guid
    parameters: []
    return:
      type: System.Guid
  overload: Microsoft.Health.Events.CommonNotificationData.SubscriptionId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Health.Events
  commentId: N:Microsoft.Health.Events
  isExternal: false
  name: Microsoft.Health.Events
  nameWithType: Microsoft.Health.Events
  fullName: Microsoft.Health.Events
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Events.CommonNotificationData.#ctor*
  commentId: Overload:Microsoft.Health.Events.CommonNotificationData.#ctor
  isExternal: false
  name: CommonNotificationData
  nameWithType: CommonNotificationData.CommonNotificationData
  fullName: Microsoft.Health.Events.CommonNotificationData.CommonNotificationData
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Microsoft.Health.Events.CommonNotificationData.ParseXml*
  commentId: Overload:Microsoft.Health.Events.CommonNotificationData.ParseXml
  isExternal: false
  name: ParseXml
  nameWithType: CommonNotificationData.ParseXml
  fullName: Microsoft.Health.Events.CommonNotificationData.ParseXml
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.Xml.XPath.XPathNavigator
  commentId: T:System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: true
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: false
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: Microsoft.Health.Events.CommonNotificationData.SubscriptionId*
  commentId: Overload:Microsoft.Health.Events.CommonNotificationData.SubscriptionId
  isExternal: false
  name: SubscriptionId
  nameWithType: CommonNotificationData.SubscriptionId
  fullName: Microsoft.Health.Events.CommonNotificationData.SubscriptionId
