### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.BlobSignatureItem
  commentId: T:Microsoft.Health.BlobSignatureItem
  id: BlobSignatureItem
  parent: Microsoft.Health
  children:
  - Microsoft.Health.BlobSignatureItem.ContentType
  - Microsoft.Health.BlobSignatureItem.HashInfo
  - Microsoft.Health.BlobSignatureItem.Name
  langs:
  - csharp
  - vb
  name: BlobSignatureItem
  nameWithType: BlobSignatureItem
  fullName: Microsoft.Health.BlobSignatureItem
  type: Class
  source:
    remote:
      path: Microsoft.Health/BlobSignatureItem.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: BlobSignatureItem
    path: BlobSignatureItem.cs
    startLine: 16
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nRepresents information about a BLOB that is part of a digital signature.\n"
  remarks: "\nFor more details please see <xref href=\"Microsoft.Health.HealthRecordItemSignature\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public class BlobSignatureItem
    content.vb: Public Class BlobSignatureItem
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.BlobSignatureItem.Name
  commentId: P:Microsoft.Health.BlobSignatureItem.Name
  id: Name
  parent: Microsoft.Health.BlobSignatureItem
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: BlobSignatureItem.Name
  fullName: Microsoft.Health.BlobSignatureItem.Name
  type: Property
  source:
    remote:
      path: Microsoft.Health/BlobSignatureItem.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Name
    path: BlobSignatureItem.cs
    startLine: 41
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets the name of the BLOB.\n"
  example: []
  syntax:
    content: public string Name { get; }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.BlobSignatureItem.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.BlobSignatureItem.ContentType
  commentId: P:Microsoft.Health.BlobSignatureItem.ContentType
  id: ContentType
  parent: Microsoft.Health.BlobSignatureItem
  langs:
  - csharp
  - vb
  name: ContentType
  nameWithType: BlobSignatureItem.ContentType
  fullName: Microsoft.Health.BlobSignatureItem.ContentType
  type: Property
  source:
    remote:
      path: Microsoft.Health/BlobSignatureItem.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ContentType
    path: BlobSignatureItem.cs
    startLine: 50
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets the content type of the BLOB. \n"
  example: []
  syntax:
    content: public string ContentType { get; }
    content.vb: Public ReadOnly Property ContentType As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.BlobSignatureItem.ContentType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.BlobSignatureItem.HashInfo
  commentId: P:Microsoft.Health.BlobSignatureItem.HashInfo
  id: HashInfo
  parent: Microsoft.Health.BlobSignatureItem
  langs:
  - csharp
  - vb
  name: HashInfo
  nameWithType: BlobSignatureItem.HashInfo
  fullName: Microsoft.Health.BlobSignatureItem.HashInfo
  type: Property
  source:
    remote:
      path: Microsoft.Health/BlobSignatureItem.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: HashInfo
    path: BlobSignatureItem.cs
    startLine: 59
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGet the hash information for the BLOB.\n"
  example: []
  syntax:
    content: public BlobHashInfo HashInfo { get; }
    content.vb: Public ReadOnly Property HashInfo As BlobHashInfo
    parameters: []
    return:
      type: Microsoft.Health.BlobHashInfo
  overload: Microsoft.Health.BlobSignatureItem.HashInfo*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Health.HealthRecordItemSignature
  commentId: T:Microsoft.Health.HealthRecordItemSignature
  isExternal: false
  name: HealthRecordItemSignature
  nameWithType: HealthRecordItemSignature
  fullName: Microsoft.Health.HealthRecordItemSignature
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.BlobSignatureItem.Name*
  commentId: Overload:Microsoft.Health.BlobSignatureItem.Name
  isExternal: false
  name: Name
  nameWithType: BlobSignatureItem.Name
  fullName: Microsoft.Health.BlobSignatureItem.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.BlobSignatureItem.ContentType*
  commentId: Overload:Microsoft.Health.BlobSignatureItem.ContentType
  isExternal: false
  name: ContentType
  nameWithType: BlobSignatureItem.ContentType
  fullName: Microsoft.Health.BlobSignatureItem.ContentType
- uid: Microsoft.Health.BlobSignatureItem.HashInfo*
  commentId: Overload:Microsoft.Health.BlobSignatureItem.HashInfo
  isExternal: false
  name: HashInfo
  nameWithType: BlobSignatureItem.HashInfo
  fullName: Microsoft.Health.BlobSignatureItem.HashInfo
- uid: Microsoft.Health.BlobHashInfo
  commentId: T:Microsoft.Health.BlobHashInfo
  parent: Microsoft.Health
  isExternal: false
  name: BlobHashInfo
  nameWithType: BlobHashInfo
  fullName: Microsoft.Health.BlobHashInfo
