### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.HealthRecordItemTypeVersionInfo
  commentId: T:Microsoft.Health.HealthRecordItemTypeVersionInfo
  id: HealthRecordItemTypeVersionInfo
  parent: Microsoft.Health
  children:
  - Microsoft.Health.HealthRecordItemTypeVersionInfo.Name
  - Microsoft.Health.HealthRecordItemTypeVersionInfo.OrderByProperties
  - Microsoft.Health.HealthRecordItemTypeVersionInfo.VersionSequence
  - Microsoft.Health.HealthRecordItemTypeVersionInfo.VersionTypeId
  langs:
  - csharp
  - vb
  name: HealthRecordItemTypeVersionInfo
  nameWithType: HealthRecordItemTypeVersionInfo
  fullName: Microsoft.Health.HealthRecordItemTypeVersionInfo
  type: Class
  source:
    remote:
      path: Microsoft.Health/HealthRecordItemTypeVersionInfo.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: HealthRecordItemTypeVersionInfo
    path: HealthRecordItemTypeVersionInfo.cs
    startLine: 12
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nRepresents the version information for a health record item type.\n"
  example: []
  syntax:
    content: public class HealthRecordItemTypeVersionInfo
    content.vb: Public Class HealthRecordItemTypeVersionInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.HealthRecordItemTypeVersionInfo.VersionTypeId
  commentId: P:Microsoft.Health.HealthRecordItemTypeVersionInfo.VersionTypeId
  id: VersionTypeId
  parent: Microsoft.Health.HealthRecordItemTypeVersionInfo
  langs:
  - csharp
  - vb
  name: VersionTypeId
  nameWithType: HealthRecordItemTypeVersionInfo.VersionTypeId
  fullName: Microsoft.Health.HealthRecordItemTypeVersionInfo.VersionTypeId
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthRecordItemTypeVersionInfo.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: VersionTypeId
    path: HealthRecordItemTypeVersionInfo.cs
    startLine: 31
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets the unique identifier for the versioned health record item type.\n"
  example: []
  syntax:
    content: public Guid VersionTypeId { get; }
    content.vb: Public ReadOnly Property VersionTypeId As Guid
    parameters: []
    return:
      type: System.Guid
  overload: Microsoft.Health.HealthRecordItemTypeVersionInfo.VersionTypeId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.HealthRecordItemTypeVersionInfo.Name
  commentId: P:Microsoft.Health.HealthRecordItemTypeVersionInfo.Name
  id: Name
  parent: Microsoft.Health.HealthRecordItemTypeVersionInfo
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: HealthRecordItemTypeVersionInfo.Name
  fullName: Microsoft.Health.HealthRecordItemTypeVersionInfo.Name
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthRecordItemTypeVersionInfo.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Name
    path: HealthRecordItemTypeVersionInfo.cs
    startLine: 40
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets the name for this version of the health record item type.\n"
  example: []
  syntax:
    content: public string Name { get; }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.HealthRecordItemTypeVersionInfo.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.HealthRecordItemTypeVersionInfo.VersionSequence
  commentId: P:Microsoft.Health.HealthRecordItemTypeVersionInfo.VersionSequence
  id: VersionSequence
  parent: Microsoft.Health.HealthRecordItemTypeVersionInfo
  langs:
  - csharp
  - vb
  name: VersionSequence
  nameWithType: HealthRecordItemTypeVersionInfo.VersionSequence
  fullName: Microsoft.Health.HealthRecordItemTypeVersionInfo.VersionSequence
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthRecordItemTypeVersionInfo.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: VersionSequence
    path: HealthRecordItemTypeVersionInfo.cs
    startLine: 53
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets the sequence number for the health record item type version.\n"
  remarks: "\nThe sequence number starts at one and is incremented for each new version\nof the type that gets added.\n"
  example: []
  syntax:
    content: public int VersionSequence { get; }
    content.vb: Public ReadOnly Property VersionSequence As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Health.HealthRecordItemTypeVersionInfo.VersionSequence*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.HealthRecordItemTypeVersionInfo.OrderByProperties
  commentId: P:Microsoft.Health.HealthRecordItemTypeVersionInfo.OrderByProperties
  id: OrderByProperties
  parent: Microsoft.Health.HealthRecordItemTypeVersionInfo
  langs:
  - csharp
  - vb
  name: OrderByProperties
  nameWithType: HealthRecordItemTypeVersionInfo.OrderByProperties
  fullName: Microsoft.Health.HealthRecordItemTypeVersionInfo.OrderByProperties
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthRecordItemTypeVersionInfo.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: OrderByProperties
    path: HealthRecordItemTypeVersionInfo.cs
    startLine: 63
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nThe set of properties that the thing-type can be \nordered by in the result.\n"
  example: []
  syntax:
    content: public HealthRecordItemTypeOrderByProperties OrderByProperties { get; }
    content.vb: Public ReadOnly Property OrderByProperties As HealthRecordItemTypeOrderByProperties
    parameters: []
    return:
      type: Microsoft.Health.HealthRecordItemTypeOrderByProperties
  overload: Microsoft.Health.HealthRecordItemTypeVersionInfo.OrderByProperties*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.HealthRecordItemTypeVersionInfo.VersionTypeId*
  commentId: Overload:Microsoft.Health.HealthRecordItemTypeVersionInfo.VersionTypeId
  isExternal: false
  name: VersionTypeId
  nameWithType: HealthRecordItemTypeVersionInfo.VersionTypeId
  fullName: Microsoft.Health.HealthRecordItemTypeVersionInfo.VersionTypeId
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Microsoft.Health.HealthRecordItemTypeVersionInfo.Name*
  commentId: Overload:Microsoft.Health.HealthRecordItemTypeVersionInfo.Name
  isExternal: false
  name: Name
  nameWithType: HealthRecordItemTypeVersionInfo.Name
  fullName: Microsoft.Health.HealthRecordItemTypeVersionInfo.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.HealthRecordItemTypeVersionInfo.VersionSequence*
  commentId: Overload:Microsoft.Health.HealthRecordItemTypeVersionInfo.VersionSequence
  isExternal: false
  name: VersionSequence
  nameWithType: HealthRecordItemTypeVersionInfo.VersionSequence
  fullName: Microsoft.Health.HealthRecordItemTypeVersionInfo.VersionSequence
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Health.HealthRecordItemTypeVersionInfo.OrderByProperties*
  commentId: Overload:Microsoft.Health.HealthRecordItemTypeVersionInfo.OrderByProperties
  isExternal: false
  name: OrderByProperties
  nameWithType: HealthRecordItemTypeVersionInfo.OrderByProperties
  fullName: Microsoft.Health.HealthRecordItemTypeVersionInfo.OrderByProperties
- uid: Microsoft.Health.HealthRecordItemTypeOrderByProperties
  commentId: T:Microsoft.Health.HealthRecordItemTypeOrderByProperties
  parent: Microsoft.Health
  isExternal: false
  name: HealthRecordItemTypeOrderByProperties
  nameWithType: HealthRecordItemTypeOrderByProperties
  fullName: Microsoft.Health.HealthRecordItemTypeOrderByProperties
