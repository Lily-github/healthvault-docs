### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformMessage
  commentId: T:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformMessage
  id: HealthVaultPlatformMessage
  parent: Microsoft.Health.PlatformPrimitives
  children:
  - Microsoft.Health.PlatformPrimitives.HealthVaultPlatformMessage.DisableMock
  - Microsoft.Health.PlatformPrimitives.HealthVaultPlatformMessage.EnableMock(Microsoft.Health.PlatformPrimitives.HealthVaultPlatformMessage)
  - Microsoft.Health.PlatformPrimitives.HealthVaultPlatformMessage.SendInsecureMessage(Microsoft.Health.HealthServiceConnection,System.Collections.Generic.IList{Microsoft.Health.MailRecipient},System.Collections.Generic.IList{System.Guid},System.Nullable{System.Guid},System.Boolean,System.String,System.String,System.String)
  - Microsoft.Health.PlatformPrimitives.HealthVaultPlatformMessage.SendInsecureMessageFromApplication(Microsoft.Health.HealthServiceConnection,System.Collections.Generic.IList{Microsoft.Health.MailRecipient},System.Collections.Generic.IList{System.Guid},System.Nullable{System.Guid},System.Boolean,System.String,System.String,System.String,System.String,System.String)
  langs:
  - csharp
  - vb
  name: HealthVaultPlatformMessage
  nameWithType: HealthVaultPlatformMessage
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformMessage
  type: Class
  source:
    remote:
      path: Microsoft.Health/HealthVaultPlatformMessage.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: HealthVaultPlatformMessage
    path: HealthVaultPlatformMessage.cs
    startLine: 20
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.PlatformPrimitives
  summary: "\nProvides low-level access to the HealthVault message operations.\n"
  remarks: "\n<xref href=\"Microsoft.Health.HealthVaultPlatform\" data-throw-if-not-resolved=\"false\"></xref> uses this class to perform operations. Set \nHealthVaultPlatformMessage.Current to a derived class to intercept all message calls.\n"
  example: []
  syntax:
    content: public class HealthVaultPlatformMessage
    content.vb: Public Class HealthVaultPlatformMessage
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformMessage.EnableMock(Microsoft.Health.PlatformPrimitives.HealthVaultPlatformMessage)
  commentId: M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformMessage.EnableMock(Microsoft.Health.PlatformPrimitives.HealthVaultPlatformMessage)
  id: EnableMock(Microsoft.Health.PlatformPrimitives.HealthVaultPlatformMessage)
  parent: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformMessage
  langs:
  - csharp
  - vb
  name: EnableMock(HealthVaultPlatformMessage)
  nameWithType: HealthVaultPlatformMessage.EnableMock(HealthVaultPlatformMessage)
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformMessage.EnableMock(Microsoft.Health.PlatformPrimitives.HealthVaultPlatformMessage)
  type: Method
  source:
    remote:
      path: Microsoft.Health/HealthVaultPlatformMessage.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: EnableMock
    path: HealthVaultPlatformMessage.cs
    startLine: 37
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.PlatformPrimitives
  summary: "\nEnables mocking of calls to this class.\n"
  remarks: "\nThe calling class should pass in a class that derives from this\nclass and overrides the calls to be mocked. \n"
  example: []
  syntax:
    content: public static void EnableMock(HealthVaultPlatformMessage mock)
    content.vb: Public Shared Sub EnableMock(mock As HealthVaultPlatformMessage)
    parameters:
    - id: mock
      type: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformMessage
      description: The mocking class.
  overload: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformMessage.EnableMock*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nThere is already a mock registered for this class.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformMessage.DisableMock
  commentId: M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformMessage.DisableMock
  id: DisableMock
  parent: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformMessage
  langs:
  - csharp
  - vb
  name: DisableMock()
  nameWithType: HealthVaultPlatformMessage.DisableMock()
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformMessage.DisableMock()
  type: Method
  source:
    remote:
      path: Microsoft.Health/HealthVaultPlatformMessage.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DisableMock
    path: HealthVaultPlatformMessage.cs
    startLine: 53
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.PlatformPrimitives
  summary: "\nRemoves mocking of calls to this class.\n"
  example: []
  syntax:
    content: public static void DisableMock()
    content.vb: Public Shared Sub DisableMock
  overload: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformMessage.DisableMock*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nThere is no mock registered for this class.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformMessage.SendInsecureMessage(Microsoft.Health.HealthServiceConnection,System.Collections.Generic.IList{Microsoft.Health.MailRecipient},System.Collections.Generic.IList{System.Guid},System.Nullable{System.Guid},System.Boolean,System.String,System.String,System.String)
  commentId: M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformMessage.SendInsecureMessage(Microsoft.Health.HealthServiceConnection,System.Collections.Generic.IList{Microsoft.Health.MailRecipient},System.Collections.Generic.IList{System.Guid},System.Nullable{System.Guid},System.Boolean,System.String,System.String,System.String)
  id: SendInsecureMessage(Microsoft.Health.HealthServiceConnection,System.Collections.Generic.IList{Microsoft.Health.MailRecipient},System.Collections.Generic.IList{System.Guid},System.Nullable{System.Guid},System.Boolean,System.String,System.String,System.String)
  parent: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformMessage
  langs:
  - csharp
  - vb
  name: SendInsecureMessage(HealthServiceConnection, IList<MailRecipient>, IList<Guid>, Nullable<Guid>, Boolean, String, String, String)
  nameWithType: HealthVaultPlatformMessage.SendInsecureMessage(HealthServiceConnection, IList<MailRecipient>, IList<Guid>, Nullable<Guid>, Boolean, String, String, String)
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformMessage.SendInsecureMessage(Microsoft.Health.HealthServiceConnection, System.Collections.Generic.IList<Microsoft.Health.MailRecipient>, System.Collections.Generic.IList<System.Guid>, System.Nullable<System.Guid>, System.Boolean, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health/HealthVaultPlatformMessage.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SendInsecureMessage
    path: HealthVaultPlatformMessage.cs
    startLine: 128
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.PlatformPrimitives
  summary: "\nSends an insecure message to the specified message recipients.\n"
  remarks: "\nIf both the <span class=\"paramref\">textBody</span> and \n<span class=\"paramref\">htmlBody</span> of the message is specified then a\nmulti-part message will be sent so that the html body will be used\nand fallback to text if not supported by the client.\n"
  example: []
  syntax:
    content: public virtual void SendInsecureMessage(HealthServiceConnection connection, IList<MailRecipient> mailRecipient, IList<Guid> personIds, Guid? recordId, bool addressMustBeValidated, string subject, string textBody, string htmlBody)
    content.vb: Public Overridable Sub SendInsecureMessage(connection As HealthServiceConnection, mailRecipient As IList(Of MailRecipient), personIds As IList(Of Guid), recordId As Guid?, addressMustBeValidated As Boolean, subject As String, textBody As String, htmlBody As String)
    parameters:
    - id: connection
      type: Microsoft.Health.HealthServiceConnection
      description: "\nThe connection to use for this operation. The connection must\nhave application capabilities.\n"
    - id: mailRecipient
      type: System.Collections.Generic.IList{Microsoft.Health.MailRecipient}
      description: "\nThe addresses and display names of the people to send the \nmessage to.\n"
    - id: personIds
      type: System.Collections.Generic.IList{System.Guid}
      description: "\nThe unique identifiers of the people to which the message should be\nsent.\n"
    - id: recordId
      type: System.Nullable{System.Guid}
      description: "\nThe unique identifier of the health record for which the \ncustodians should be sent the message.\n"
    - id: addressMustBeValidated
      type: System.Boolean
      description: "\n<strong>true</strong> if HealthVault ensures that the person has validated \ntheir message address before sending the mail; <strong>false</strong> if the \nmessage will be sent even if the person's address has not been \nvalidated.\n"
    - id: subject
      type: System.String
      description: "\nThe subject of the message.\n"
    - id: textBody
      type: System.String
      description: "\nThe text body of the message.\n"
    - id: htmlBody
      type: System.String
      description: "\nThe HTML body of the message.\n"
  overload: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformMessage.SendInsecureMessage*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">mailRecipient</span> property is <strong>null</strong> or empty, \nor the <span class=\"paramref\">subject</span> parameter is <strong>null</strong> or empty, or \nthe <span class=\"paramref\">textBody</span> and <span class=\"paramref\">htmlBody</span> \nparameters are both <strong>null</strong> or empty.\n"
  - type: Microsoft.Health.HealthServiceException
    commentId: T:Microsoft.Health.HealthServiceException
    description: "\nThe server returned a failure when making the request.\n"
  nameWithType.vb: HealthVaultPlatformMessage.SendInsecureMessage(HealthServiceConnection, IList(Of MailRecipient), IList(Of Guid), Nullable(Of Guid), Boolean, String, String, String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformMessage.SendInsecureMessage(Microsoft.Health.HealthServiceConnection, System.Collections.Generic.IList(Of Microsoft.Health.MailRecipient), System.Collections.Generic.IList(Of System.Guid), System.Nullable(Of System.Guid), System.Boolean, System.String, System.String, System.String)
  name.vb: SendInsecureMessage(HealthServiceConnection, IList(Of MailRecipient), IList(Of Guid), Nullable(Of Guid), Boolean, String, String, String)
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformMessage.SendInsecureMessageFromApplication(Microsoft.Health.HealthServiceConnection,System.Collections.Generic.IList{Microsoft.Health.MailRecipient},System.Collections.Generic.IList{System.Guid},System.Nullable{System.Guid},System.Boolean,System.String,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformMessage.SendInsecureMessageFromApplication(Microsoft.Health.HealthServiceConnection,System.Collections.Generic.IList{Microsoft.Health.MailRecipient},System.Collections.Generic.IList{System.Guid},System.Nullable{System.Guid},System.Boolean,System.String,System.String,System.String,System.String,System.String)
  id: SendInsecureMessageFromApplication(Microsoft.Health.HealthServiceConnection,System.Collections.Generic.IList{Microsoft.Health.MailRecipient},System.Collections.Generic.IList{System.Guid},System.Nullable{System.Guid},System.Boolean,System.String,System.String,System.String,System.String,System.String)
  parent: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformMessage
  langs:
  - csharp
  - vb
  name: SendInsecureMessageFromApplication(HealthServiceConnection, IList<MailRecipient>, IList<Guid>, Nullable<Guid>, Boolean, String, String, String, String, String)
  nameWithType: HealthVaultPlatformMessage.SendInsecureMessageFromApplication(HealthServiceConnection, IList<MailRecipient>, IList<Guid>, Nullable<Guid>, Boolean, String, String, String, String, String)
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformMessage.SendInsecureMessageFromApplication(Microsoft.Health.HealthServiceConnection, System.Collections.Generic.IList<Microsoft.Health.MailRecipient>, System.Collections.Generic.IList<System.Guid>, System.Nullable<System.Guid>, System.Boolean, System.String, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health/HealthVaultPlatformMessage.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SendInsecureMessageFromApplication
    path: HealthVaultPlatformMessage.cs
    startLine: 250
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.PlatformPrimitives
  summary: "\nSends an insecure message to the specified message recipients.\n"
  remarks: "\nIf both the <span class=\"paramref\">textBody</span> and \n<span class=\"paramref\">htmlBody</span> of the message is specified then a\nmulti-part message will be sent so that the html body will be used\nand fallback to text if not supported by the client.\n"
  example: []
  syntax:
    content: public virtual void SendInsecureMessageFromApplication(HealthServiceConnection connection, IList<MailRecipient> mailRecipient, IList<Guid> personIds, Guid? recordId, bool addressMustBeValidated, string senderMailboxName, string senderDisplayName, string subject, string textBody, string htmlBody)
    content.vb: Public Overridable Sub SendInsecureMessageFromApplication(connection As HealthServiceConnection, mailRecipient As IList(Of MailRecipient), personIds As IList(Of Guid), recordId As Guid?, addressMustBeValidated As Boolean, senderMailboxName As String, senderDisplayName As String, subject As String, textBody As String, htmlBody As String)
    parameters:
    - id: connection
      type: Microsoft.Health.HealthServiceConnection
      description: "\nThe connection to use for this operation. The connection must\nhave application capabilities.\n"
    - id: mailRecipient
      type: System.Collections.Generic.IList{Microsoft.Health.MailRecipient}
      description: "\nThe addresses and display names of the people to send the \nmessage to.\n"
    - id: personIds
      type: System.Collections.Generic.IList{System.Guid}
      description: "\nThe unique identifiers of the people to which the message should be\nsent.\n"
    - id: recordId
      type: System.Nullable{System.Guid}
      description: "\nThe unique identifier of the health record for which the \ncustodians should be sent the message.\n"
    - id: addressMustBeValidated
      type: System.Boolean
      description: "\n<strong>true</strong> if HealthVault ensures that the person has validated \ntheir message address before sending the mail; <strong>false</strong> if the \nmessage will be sent even if the person's address has not been \nvalidated.\n"
    - id: senderMailboxName
      type: System.String
      description: "\nAn application specified mailbox name that's sending the message.\nThe mailbox name is appended to the application's domain name to \nform the From email address of the message. This parameter should\nonly contain the characters before the @ symbol of the email \naddress.\n"
    - id: senderDisplayName
      type: System.String
      description: "\nThe message sender's display name.\n"
    - id: subject
      type: System.String
      description: "\nThe subject of the message.\n"
    - id: textBody
      type: System.String
      description: "\nThe text body of the message.\n"
    - id: htmlBody
      type: System.String
      description: "\nThe HTML body of the message.\n"
  overload: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformMessage.SendInsecureMessageFromApplication*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">mailRecipient</span> property is <strong>null</strong> or empty, \nor the <span class=\"paramref\">subject</span> parameter is <strong>null</strong> or empty, or \nthe <span class=\"paramref\">textBody</span> and <span class=\"paramref\">htmlBody</span> \nparameters are both <strong>null</strong> or empty.\n"
  - type: Microsoft.Health.HealthServiceException
    commentId: T:Microsoft.Health.HealthServiceException
    description: "\nThe server returned a failure when making the request.\n"
  nameWithType.vb: HealthVaultPlatformMessage.SendInsecureMessageFromApplication(HealthServiceConnection, IList(Of MailRecipient), IList(Of Guid), Nullable(Of Guid), Boolean, String, String, String, String, String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformMessage.SendInsecureMessageFromApplication(Microsoft.Health.HealthServiceConnection, System.Collections.Generic.IList(Of Microsoft.Health.MailRecipient), System.Collections.Generic.IList(Of System.Guid), System.Nullable(Of System.Guid), System.Boolean, System.String, System.String, System.String, System.String, System.String)
  name.vb: SendInsecureMessageFromApplication(HealthServiceConnection, IList(Of MailRecipient), IList(Of Guid), Nullable(Of Guid), Boolean, String, String, String, String, String)
references:
- uid: Microsoft.Health.HealthVaultPlatform
  commentId: T:Microsoft.Health.HealthVaultPlatform
  isExternal: false
  name: HealthVaultPlatform
  nameWithType: HealthVaultPlatform
  fullName: Microsoft.Health.HealthVaultPlatform
- uid: Microsoft.Health.PlatformPrimitives
  commentId: N:Microsoft.Health.PlatformPrimitives
  isExternal: false
  name: Microsoft.Health.PlatformPrimitives
  nameWithType: Microsoft.Health.PlatformPrimitives
  fullName: Microsoft.Health.PlatformPrimitives
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformMessage.EnableMock*
  commentId: Overload:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformMessage.EnableMock
  isExternal: false
  name: EnableMock
  nameWithType: HealthVaultPlatformMessage.EnableMock
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformMessage.EnableMock
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformMessage
  commentId: T:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformMessage
  parent: Microsoft.Health.PlatformPrimitives
  isExternal: false
  name: HealthVaultPlatformMessage
  nameWithType: HealthVaultPlatformMessage
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformMessage
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformMessage.DisableMock*
  commentId: Overload:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformMessage.DisableMock
  isExternal: false
  name: DisableMock
  nameWithType: HealthVaultPlatformMessage.DisableMock
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformMessage.DisableMock
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformMessage.SendInsecureMessage*
  commentId: Overload:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformMessage.SendInsecureMessage
  isExternal: false
  name: SendInsecureMessage
  nameWithType: HealthVaultPlatformMessage.SendInsecureMessage
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformMessage.SendInsecureMessage
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: Microsoft.Health.HealthServiceException
  commentId: T:Microsoft.Health.HealthServiceException
  parent: Microsoft.Health
  isExternal: false
  name: HealthServiceException
  nameWithType: HealthServiceException
  fullName: Microsoft.Health.HealthServiceException
- uid: Microsoft.Health.HealthServiceConnection
  commentId: T:Microsoft.Health.HealthServiceConnection
  parent: Microsoft.Health
  isExternal: false
  name: HealthServiceConnection
  nameWithType: HealthServiceConnection
  fullName: Microsoft.Health.HealthServiceConnection
- uid: System.Collections.Generic.IList{Microsoft.Health.MailRecipient}
  commentId: T:System.Collections.Generic.IList{Microsoft.Health.MailRecipient}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<MailRecipient>
  nameWithType: IList<MailRecipient>
  fullName: System.Collections.Generic.IList<Microsoft.Health.MailRecipient>
  nameWithType.vb: IList(Of MailRecipient)
  fullName.vb: System.Collections.Generic.IList(Of Microsoft.Health.MailRecipient)
  name.vb: IList(Of MailRecipient)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.MailRecipient
    name: MailRecipient
    nameWithType: MailRecipient
    fullName: Microsoft.Health.MailRecipient
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.MailRecipient
    name: MailRecipient
    nameWithType: MailRecipient
    fullName: Microsoft.Health.MailRecipient
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{System.Guid}
  commentId: T:System.Collections.Generic.IList{System.Guid}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Guid>
  nameWithType: IList<Guid>
  fullName: System.Collections.Generic.IList<System.Guid>
  nameWithType.vb: IList(Of Guid)
  fullName.vb: System.Collections.Generic.IList(Of System.Guid)
  name.vb: IList(Of Guid)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Guid}
  commentId: T:System.Nullable{System.Guid}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Guid>
  nameWithType: Nullable<Guid>
  fullName: System.Nullable<System.Guid>
  nameWithType.vb: Nullable(Of Guid)
  fullName.vb: System.Nullable(Of System.Guid)
  name.vb: Nullable(Of Guid)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformMessage.SendInsecureMessageFromApplication*
  commentId: Overload:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformMessage.SendInsecureMessageFromApplication
  isExternal: false
  name: SendInsecureMessageFromApplication
  nameWithType: HealthVaultPlatformMessage.SendInsecureMessageFromApplication
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformMessage.SendInsecureMessageFromApplication
