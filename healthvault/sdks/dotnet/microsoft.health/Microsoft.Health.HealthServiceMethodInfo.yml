### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.HealthServiceMethodInfo
  commentId: T:Microsoft.Health.HealthServiceMethodInfo
  id: HealthServiceMethodInfo
  parent: Microsoft.Health
  children:
  - Microsoft.Health.HealthServiceMethodInfo.#ctor
  - Microsoft.Health.HealthServiceMethodInfo.#ctor(System.String,System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.Health.HealthServiceMethodVersionInfo})
  - Microsoft.Health.HealthServiceMethodInfo.Name
  - Microsoft.Health.HealthServiceMethodInfo.Versions
  langs:
  - csharp
  - vb
  name: HealthServiceMethodInfo
  nameWithType: HealthServiceMethodInfo
  fullName: Microsoft.Health.HealthServiceMethodInfo
  type: Class
  source:
    remote:
      path: Microsoft.Health/HealthServiceMethodInfo.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: HealthServiceMethodInfo
    path: HealthServiceMethodInfo.cs
    startLine: 14
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nProvides information about the HealthVault methods.\n"
  example: []
  syntax:
    content: public class HealthServiceMethodInfo
    content.vb: Public Class HealthServiceMethodInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.HealthServiceMethodInfo.#ctor
  commentId: M:Microsoft.Health.HealthServiceMethodInfo.#ctor
  id: '#ctor'
  parent: Microsoft.Health.HealthServiceMethodInfo
  langs:
  - csharp
  - vb
  name: HealthServiceMethodInfo()
  nameWithType: HealthServiceMethodInfo.HealthServiceMethodInfo()
  fullName: Microsoft.Health.HealthServiceMethodInfo.HealthServiceMethodInfo()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/HealthServiceMethodInfo.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: HealthServiceMethodInfo.cs
    startLine: 50
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.HealthServiceMethodInfo\" data-throw-if-not-resolved=\"false\"></xref> class with default values.\n"
  example: []
  syntax:
    content: public HealthServiceMethodInfo()
    content.vb: Public Sub New
  overload: Microsoft.Health.HealthServiceMethodInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthServiceMethodInfo.#ctor(System.String,System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.Health.HealthServiceMethodVersionInfo})
  commentId: M:Microsoft.Health.HealthServiceMethodInfo.#ctor(System.String,System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.Health.HealthServiceMethodVersionInfo})
  id: '#ctor(System.String,System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.Health.HealthServiceMethodVersionInfo})'
  parent: Microsoft.Health.HealthServiceMethodInfo
  langs:
  - csharp
  - vb
  name: HealthServiceMethodInfo(String, ReadOnlyCollection<HealthServiceMethodVersionInfo>)
  nameWithType: HealthServiceMethodInfo.HealthServiceMethodInfo(String, ReadOnlyCollection<HealthServiceMethodVersionInfo>)
  fullName: Microsoft.Health.HealthServiceMethodInfo.HealthServiceMethodInfo(System.String, System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.Health.HealthServiceMethodVersionInfo>)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/HealthServiceMethodInfo.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: HealthServiceMethodInfo.cs
    startLine: 60
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.HealthServiceMethodInfo\" data-throw-if-not-resolved=\"false\"></xref> class and sets\nthe name and version information.\n"
  example: []
  syntax:
    content: public HealthServiceMethodInfo(string name, ReadOnlyCollection<HealthServiceMethodVersionInfo> versions)
    content.vb: Public Sub New(name As String, versions As ReadOnlyCollection(Of HealthServiceMethodVersionInfo))
    parameters:
    - id: name
      type: System.String
      description: The name of the method.
    - id: versions
      type: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.Health.HealthServiceMethodVersionInfo}
      description: A collection of version information.
  overload: Microsoft.Health.HealthServiceMethodInfo.#ctor*
  nameWithType.vb: HealthServiceMethodInfo.HealthServiceMethodInfo(String, ReadOnlyCollection(Of HealthServiceMethodVersionInfo))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.HealthServiceMethodInfo.HealthServiceMethodInfo(System.String, System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.Health.HealthServiceMethodVersionInfo))
  name.vb: HealthServiceMethodInfo(String, ReadOnlyCollection(Of HealthServiceMethodVersionInfo))
- uid: Microsoft.Health.HealthServiceMethodInfo.Name
  commentId: P:Microsoft.Health.HealthServiceMethodInfo.Name
  id: Name
  parent: Microsoft.Health.HealthServiceMethodInfo
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: HealthServiceMethodInfo.Name
  fullName: Microsoft.Health.HealthServiceMethodInfo.Name
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthServiceMethodInfo.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Name
    path: HealthServiceMethodInfo.cs
    startLine: 76
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets the name of the method.\n"
  example: []
  syntax:
    content: public string Name { get; }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: "\nA string representing the method name.\n"
  overload: Microsoft.Health.HealthServiceMethodInfo.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.HealthServiceMethodInfo.Versions
  commentId: P:Microsoft.Health.HealthServiceMethodInfo.Versions
  id: Versions
  parent: Microsoft.Health.HealthServiceMethodInfo
  langs:
  - csharp
  - vb
  name: Versions
  nameWithType: HealthServiceMethodInfo.Versions
  fullName: Microsoft.Health.HealthServiceMethodInfo.Versions
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthServiceMethodInfo.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Versions
    path: HealthServiceMethodInfo.cs
    startLine: 90
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets the information about the supported versions of the method.\n"
  example: []
  syntax:
    content: public ReadOnlyCollection<HealthServiceMethodVersionInfo> Versions { get; }
    content.vb: Public ReadOnly Property Versions As ReadOnlyCollection(Of HealthServiceMethodVersionInfo)
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.Health.HealthServiceMethodVersionInfo}
      description: "\nA read-only collection containing version information.\n"
  overload: Microsoft.Health.HealthServiceMethodInfo.Versions*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.HealthServiceMethodInfo
  commentId: T:Microsoft.Health.HealthServiceMethodInfo
  parent: Microsoft.Health
  isExternal: false
  name: HealthServiceMethodInfo
  nameWithType: HealthServiceMethodInfo
  fullName: Microsoft.Health.HealthServiceMethodInfo
- uid: Microsoft.Health.HealthServiceMethodInfo.#ctor*
  commentId: Overload:Microsoft.Health.HealthServiceMethodInfo.#ctor
  isExternal: false
  name: HealthServiceMethodInfo
  nameWithType: HealthServiceMethodInfo.HealthServiceMethodInfo
  fullName: Microsoft.Health.HealthServiceMethodInfo.HealthServiceMethodInfo
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.Health.HealthServiceMethodVersionInfo}
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.Health.HealthServiceMethodVersionInfo}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<HealthServiceMethodVersionInfo>
  nameWithType: ReadOnlyCollection<HealthServiceMethodVersionInfo>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.Health.HealthServiceMethodVersionInfo>
  nameWithType.vb: ReadOnlyCollection(Of HealthServiceMethodVersionInfo)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.Health.HealthServiceMethodVersionInfo)
  name.vb: ReadOnlyCollection(Of HealthServiceMethodVersionInfo)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.HealthServiceMethodVersionInfo
    name: HealthServiceMethodVersionInfo
    nameWithType: HealthServiceMethodVersionInfo
    fullName: Microsoft.Health.HealthServiceMethodVersionInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.HealthServiceMethodVersionInfo
    name: HealthServiceMethodVersionInfo
    nameWithType: HealthServiceMethodVersionInfo
    fullName: Microsoft.Health.HealthServiceMethodVersionInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  nameWithType.vb: ReadOnlyCollection(Of T)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)
  name.vb: ReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: Microsoft.Health.HealthServiceMethodInfo.Name*
  commentId: Overload:Microsoft.Health.HealthServiceMethodInfo.Name
  isExternal: false
  name: Name
  nameWithType: HealthServiceMethodInfo.Name
  fullName: Microsoft.Health.HealthServiceMethodInfo.Name
- uid: Microsoft.Health.HealthServiceMethodInfo.Versions*
  commentId: Overload:Microsoft.Health.HealthServiceMethodInfo.Versions
  isExternal: false
  name: Versions
  nameWithType: HealthServiceMethodInfo.Versions
  fullName: Microsoft.Health.HealthServiceMethodInfo.Versions
