### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.HealthRecordItemRelationship
  commentId: T:Microsoft.Health.HealthRecordItemRelationship
  id: HealthRecordItemRelationship
  parent: Microsoft.Health
  children:
  - Microsoft.Health.HealthRecordItemRelationship.#ctor
  - Microsoft.Health.HealthRecordItemRelationship.#ctor(Microsoft.Health.HealthRecordItemKey)
  - Microsoft.Health.HealthRecordItemRelationship.#ctor(Microsoft.Health.HealthRecordItemKey,System.String)
  - Microsoft.Health.HealthRecordItemRelationship.#ctor(System.Guid)
  - Microsoft.Health.HealthRecordItemRelationship.#ctor(System.String)
  - Microsoft.Health.HealthRecordItemRelationship.#ctor(System.String,System.String)
  - Microsoft.Health.HealthRecordItemRelationship.ClientId
  - Microsoft.Health.HealthRecordItemRelationship.ItemKey
  - Microsoft.Health.HealthRecordItemRelationship.RelationshipType
  langs:
  - csharp
  - vb
  name: HealthRecordItemRelationship
  nameWithType: HealthRecordItemRelationship
  fullName: Microsoft.Health.HealthRecordItemRelationship
  type: Class
  source:
    remote:
      path: Microsoft.Health/HealthRecordItemRelationship.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: HealthRecordItemRelationship
    path: HealthRecordItemRelationship.cs
    startLine: 21
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nRepresents a loose relationship between health record item instances.\n"
  remarks: "\nThe relationship defined is not maintained by HealthVault. It is completely up to the \napplication defining and consuming the relationship to ensure the related item exists\nand is in the same health record.\n"
  example: []
  syntax:
    content: public class HealthRecordItemRelationship
    content.vb: Public Class HealthRecordItemRelationship
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.HealthRecordItemRelationship.#ctor
  commentId: M:Microsoft.Health.HealthRecordItemRelationship.#ctor
  id: '#ctor'
  parent: Microsoft.Health.HealthRecordItemRelationship
  langs:
  - csharp
  - vb
  name: HealthRecordItemRelationship()
  nameWithType: HealthRecordItemRelationship.HealthRecordItemRelationship()
  fullName: Microsoft.Health.HealthRecordItemRelationship.HealthRecordItemRelationship()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/HealthRecordItemRelationship.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: HealthRecordItemRelationship.cs
    startLine: 28
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.HealthRecordItemRelationship\" data-throw-if-not-resolved=\"false\"></xref>\ninstance with default values.\n"
  example: []
  syntax:
    content: public HealthRecordItemRelationship()
    content.vb: Public Sub New
  overload: Microsoft.Health.HealthRecordItemRelationship.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthRecordItemRelationship.#ctor(System.Guid)
  commentId: M:Microsoft.Health.HealthRecordItemRelationship.#ctor(System.Guid)
  id: '#ctor(System.Guid)'
  parent: Microsoft.Health.HealthRecordItemRelationship
  langs:
  - csharp
  - vb
  name: HealthRecordItemRelationship(Guid)
  nameWithType: HealthRecordItemRelationship.HealthRecordItemRelationship(Guid)
  fullName: Microsoft.Health.HealthRecordItemRelationship.HealthRecordItemRelationship(System.Guid)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/HealthRecordItemRelationship.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: HealthRecordItemRelationship.cs
    startLine: 45
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nConstructs a <xref href=\"Microsoft.Health.HealthRecordItemRelationship\" data-throw-if-not-resolved=\"false\"></xref> instance for a relationship\nto the item with the specified ID.\n"
  example: []
  syntax:
    content: public HealthRecordItemRelationship(Guid itemId)
    content.vb: Public Sub New(itemId As Guid)
    parameters:
    - id: itemId
      type: System.Guid
      description: "\nThe unique identifier of the health record item to related to.\n"
  overload: Microsoft.Health.HealthRecordItemRelationship.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nIf <span class=\"paramref\">itemId</span> is <xref href=\"System.Guid.Empty\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthRecordItemRelationship.#ctor(Microsoft.Health.HealthRecordItemKey)
  commentId: M:Microsoft.Health.HealthRecordItemRelationship.#ctor(Microsoft.Health.HealthRecordItemKey)
  id: '#ctor(Microsoft.Health.HealthRecordItemKey)'
  parent: Microsoft.Health.HealthRecordItemRelationship
  langs:
  - csharp
  - vb
  name: HealthRecordItemRelationship(HealthRecordItemKey)
  nameWithType: HealthRecordItemRelationship.HealthRecordItemRelationship(HealthRecordItemKey)
  fullName: Microsoft.Health.HealthRecordItemRelationship.HealthRecordItemRelationship(Microsoft.Health.HealthRecordItemKey)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/HealthRecordItemRelationship.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: HealthRecordItemRelationship.cs
    startLine: 69
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nConstructs a <xref href=\"Microsoft.Health.HealthRecordItemRelationship\" data-throw-if-not-resolved=\"false\"></xref> instance for a relationship\nto the item with the specified key.\n"
  example: []
  syntax:
    content: public HealthRecordItemRelationship(HealthRecordItemKey itemKey)
    content.vb: Public Sub New(itemKey As HealthRecordItemKey)
    parameters:
    - id: itemKey
      type: Microsoft.Health.HealthRecordItemKey
      description: "\nThe unique key of the health record item to related to, including the item ID and\noptionally the item version stamp.\n"
  overload: Microsoft.Health.HealthRecordItemRelationship.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nIf <span class=\"paramref\">itemKey</span> is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthRecordItemRelationship.#ctor(System.String)
  commentId: M:Microsoft.Health.HealthRecordItemRelationship.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Health.HealthRecordItemRelationship
  langs:
  - csharp
  - vb
  name: HealthRecordItemRelationship(String)
  nameWithType: HealthRecordItemRelationship.HealthRecordItemRelationship(String)
  fullName: Microsoft.Health.HealthRecordItemRelationship.HealthRecordItemRelationship(System.String)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/HealthRecordItemRelationship.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: HealthRecordItemRelationship.cs
    startLine: 89
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nConstructs a <xref href=\"Microsoft.Health.HealthRecordItemRelationship\" data-throw-if-not-resolved=\"false\"></xref> instance for a relationship\nto the item with the specified key.\n"
  example: []
  syntax:
    content: public HealthRecordItemRelationship(string clientId)
    content.vb: Public Sub New(clientId As String)
    parameters:
    - id: clientId
      type: System.String
      description: "\nA client assigned ID for the health record item to relate to.\n"
  overload: Microsoft.Health.HealthRecordItemRelationship.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nIf <span class=\"paramref\">clientId</span> is <strong>null</strong> or <strong>empty</strong>.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthRecordItemRelationship.#ctor(Microsoft.Health.HealthRecordItemKey,System.String)
  commentId: M:Microsoft.Health.HealthRecordItemRelationship.#ctor(Microsoft.Health.HealthRecordItemKey,System.String)
  id: '#ctor(Microsoft.Health.HealthRecordItemKey,System.String)'
  parent: Microsoft.Health.HealthRecordItemRelationship
  langs:
  - csharp
  - vb
  name: HealthRecordItemRelationship(HealthRecordItemKey, String)
  nameWithType: HealthRecordItemRelationship.HealthRecordItemRelationship(HealthRecordItemKey, String)
  fullName: Microsoft.Health.HealthRecordItemRelationship.HealthRecordItemRelationship(Microsoft.Health.HealthRecordItemKey, System.String)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/HealthRecordItemRelationship.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: HealthRecordItemRelationship.cs
    startLine: 115
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nConstructs a <xref href=\"Microsoft.Health.HealthRecordItemRelationship\" data-throw-if-not-resolved=\"false\"></xref> instance for a relationship\nto the item with the specified key and relationship type.\n"
  example: []
  syntax:
    content: public HealthRecordItemRelationship(HealthRecordItemKey itemKey, string relationshipType)
    content.vb: Public Sub New(itemKey As HealthRecordItemKey, relationshipType As String)
    parameters:
    - id: itemKey
      type: Microsoft.Health.HealthRecordItemKey
      description: "\nThe unique key of the health record item to related to, including the item ID and\noptionally the item version stamp.\n"
    - id: relationshipType
      type: System.String
      description: "\nThe application defined type for the relationship. This is usually a descriptive tagging\nfor the relationship. For example, a Annotation item may have a\n\"annotation\" relationship with a Problem item.\n"
  overload: Microsoft.Health.HealthRecordItemRelationship.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nIf <span class=\"paramref\">itemKey</span> is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthRecordItemRelationship.#ctor(System.String,System.String)
  commentId: M:Microsoft.Health.HealthRecordItemRelationship.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Microsoft.Health.HealthRecordItemRelationship
  langs:
  - csharp
  - vb
  name: HealthRecordItemRelationship(String, String)
  nameWithType: HealthRecordItemRelationship.HealthRecordItemRelationship(String, String)
  fullName: Microsoft.Health.HealthRecordItemRelationship.HealthRecordItemRelationship(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/HealthRecordItemRelationship.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: HealthRecordItemRelationship.cs
    startLine: 140
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nConstructs a <xref href=\"Microsoft.Health.HealthRecordItemRelationship\" data-throw-if-not-resolved=\"false\"></xref> instance for a relationship\nto the item with the specified client ID and relationship type.\n"
  example: []
  syntax:
    content: public HealthRecordItemRelationship(string clientId, string relationshipType)
    content.vb: Public Sub New(clientId As String, relationshipType As String)
    parameters:
    - id: clientId
      type: System.String
      description: "\nA client assigned ID of the health record item to be related to.\n"
    - id: relationshipType
      type: System.String
      description: "\nThe application defined type for the relationship. This is usually a descriptive tagging\nfor the relationship. For example, an Annotation item may have a\n\"annotation\" relationship with a Problem item.\n"
  overload: Microsoft.Health.HealthRecordItemRelationship.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nIf <span class=\"paramref\">clientId</span> is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthRecordItemRelationship.ItemKey
  commentId: P:Microsoft.Health.HealthRecordItemRelationship.ItemKey
  id: ItemKey
  parent: Microsoft.Health.HealthRecordItemRelationship
  langs:
  - csharp
  - vb
  name: ItemKey
  nameWithType: HealthRecordItemRelationship.ItemKey
  fullName: Microsoft.Health.HealthRecordItemRelationship.ItemKey
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthRecordItemRelationship.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ItemKey
    path: HealthRecordItemRelationship.cs
    startLine: 212
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the key for the related <xref href=\"Microsoft.Health.HealthRecordItem\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public HealthRecordItemKey ItemKey { get; set; }
    content.vb: Public Property ItemKey As HealthRecordItemKey
    parameters: []
    return:
      type: Microsoft.Health.HealthRecordItemKey
      description: "\nAn instance of the <xref href=\"Microsoft.Health.HealthRecordItemKey\" data-throw-if-not-resolved=\"false\"></xref> class with the item ID specified\nand optionally the item version stamp.\n"
  overload: Microsoft.Health.HealthRecordItemRelationship.ItemKey*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthRecordItemRelationship.ClientId
  commentId: P:Microsoft.Health.HealthRecordItemRelationship.ClientId
  id: ClientId
  parent: Microsoft.Health.HealthRecordItemRelationship
  langs:
  - csharp
  - vb
  name: ClientId
  nameWithType: HealthRecordItemRelationship.ClientId
  fullName: Microsoft.Health.HealthRecordItemRelationship.ClientId
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthRecordItemRelationship.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ClientId
    path: HealthRecordItemRelationship.cs
    startLine: 222
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets and sets a client assigned identifier for the related <xref href=\"Microsoft.Health.HealthRecordItem\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public string ClientId { get; set; }
    content.vb: Public Property ClientId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.HealthRecordItemRelationship.ClientId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthRecordItemRelationship.RelationshipType
  commentId: P:Microsoft.Health.HealthRecordItemRelationship.RelationshipType
  id: RelationshipType
  parent: Microsoft.Health.HealthRecordItemRelationship
  langs:
  - csharp
  - vb
  name: RelationshipType
  nameWithType: HealthRecordItemRelationship.RelationshipType
  fullName: Microsoft.Health.HealthRecordItemRelationship.RelationshipType
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthRecordItemRelationship.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: RelationshipType
    path: HealthRecordItemRelationship.cs
    startLine: 240
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets or sets the type of relationship between the items.\n"
  remarks: "\nThis property is optional.\nA relationship type is application defined and should be somewhat descriptive about the\nrelationship. For example, an Annotation item may have an\n\"annotation\" relationship to a Problem item.\n"
  example: []
  syntax:
    content: public string RelationshipType { get; set; }
    content.vb: Public Property RelationshipType As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.HealthRecordItemRelationship.RelationshipType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.HealthRecordItemRelationship
  commentId: T:Microsoft.Health.HealthRecordItemRelationship
  isExternal: false
  name: HealthRecordItemRelationship
  nameWithType: HealthRecordItemRelationship
  fullName: Microsoft.Health.HealthRecordItemRelationship
- uid: Microsoft.Health.HealthRecordItemRelationship.#ctor*
  commentId: Overload:Microsoft.Health.HealthRecordItemRelationship.#ctor
  isExternal: false
  name: HealthRecordItemRelationship
  nameWithType: HealthRecordItemRelationship.HealthRecordItemRelationship
  fullName: Microsoft.Health.HealthRecordItemRelationship.HealthRecordItemRelationship
- uid: System.Guid.Empty
  commentId: F:System.Guid.Empty
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: Microsoft.Health.HealthRecordItemKey
  commentId: T:Microsoft.Health.HealthRecordItemKey
  parent: Microsoft.Health
  isExternal: false
  name: HealthRecordItemKey
  nameWithType: HealthRecordItemKey
  fullName: Microsoft.Health.HealthRecordItemKey
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.HealthRecordItem
  commentId: T:Microsoft.Health.HealthRecordItem
  parent: Microsoft.Health
  isExternal: false
  name: HealthRecordItem
  nameWithType: HealthRecordItem
  fullName: Microsoft.Health.HealthRecordItem
- uid: Microsoft.Health.HealthRecordItemRelationship.ItemKey*
  commentId: Overload:Microsoft.Health.HealthRecordItemRelationship.ItemKey
  isExternal: false
  name: ItemKey
  nameWithType: HealthRecordItemRelationship.ItemKey
  fullName: Microsoft.Health.HealthRecordItemRelationship.ItemKey
- uid: Microsoft.Health.HealthRecordItemRelationship.ClientId*
  commentId: Overload:Microsoft.Health.HealthRecordItemRelationship.ClientId
  isExternal: false
  name: ClientId
  nameWithType: HealthRecordItemRelationship.ClientId
  fullName: Microsoft.Health.HealthRecordItemRelationship.ClientId
- uid: Microsoft.Health.HealthRecordItemRelationship.RelationshipType*
  commentId: Overload:Microsoft.Health.HealthRecordItemRelationship.RelationshipType
  isExternal: false
  name: RelationshipType
  nameWithType: HealthRecordItemRelationship.RelationshipType
  fullName: Microsoft.Health.HealthRecordItemRelationship.RelationshipType
