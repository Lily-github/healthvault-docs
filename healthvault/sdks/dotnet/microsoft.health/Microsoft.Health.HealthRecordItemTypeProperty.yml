### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.HealthRecordItemTypeProperty
  commentId: T:Microsoft.Health.HealthRecordItemTypeProperty
  id: HealthRecordItemTypeProperty
  parent: Microsoft.Health
  children:
  - Microsoft.Health.HealthRecordItemTypeProperty.#ctor(System.String,System.String,System.String,Microsoft.Health.IItemTypePropertyConversion)
  - Microsoft.Health.HealthRecordItemTypeProperty.Conversion
  - Microsoft.Health.HealthRecordItemTypeProperty.CreateFromXml(System.Xml.XPath.XPathNavigator)
  - Microsoft.Health.HealthRecordItemTypeProperty.Name
  - Microsoft.Health.HealthRecordItemTypeProperty.Type
  - Microsoft.Health.HealthRecordItemTypeProperty.Xpath
  langs:
  - csharp
  - vb
  name: HealthRecordItemTypeProperty
  nameWithType: HealthRecordItemTypeProperty
  fullName: Microsoft.Health.HealthRecordItemTypeProperty
  type: Class
  source:
    remote:
      path: Microsoft.Health/HealthRecordItemTypeProperty.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: HealthRecordItemTypeProperty
    path: HealthRecordItemTypeProperty.cs
    startLine: 15
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nThe property that the thing-type can be \nordered by in the result.\n"
  example: []
  syntax:
    content: public class HealthRecordItemTypeProperty
    content.vb: Public Class HealthRecordItemTypeProperty
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.HealthRecordItemTypeProperty.#ctor(System.String,System.String,System.String,Microsoft.Health.IItemTypePropertyConversion)
  commentId: M:Microsoft.Health.HealthRecordItemTypeProperty.#ctor(System.String,System.String,System.String,Microsoft.Health.IItemTypePropertyConversion)
  id: '#ctor(System.String,System.String,System.String,Microsoft.Health.IItemTypePropertyConversion)'
  parent: Microsoft.Health.HealthRecordItemTypeProperty
  langs:
  - csharp
  - vb
  name: HealthRecordItemTypeProperty(String, String, String, IItemTypePropertyConversion)
  nameWithType: HealthRecordItemTypeProperty.HealthRecordItemTypeProperty(String, String, String, IItemTypePropertyConversion)
  fullName: Microsoft.Health.HealthRecordItemTypeProperty.HealthRecordItemTypeProperty(System.String, System.String, System.String, Microsoft.Health.IItemTypePropertyConversion)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/HealthRecordItemTypeProperty.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: HealthRecordItemTypeProperty.cs
    startLine: 20
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nThe property that the thing-type can be ordered by in the result.\n"
  example: []
  syntax:
    content: public HealthRecordItemTypeProperty(string name, string type, string xpath, IItemTypePropertyConversion conversion = null)
    content.vb: Public Sub New(name As String, type As String, xpath As String, conversion As IItemTypePropertyConversion = Nothing)
    parameters:
    - id: name
      type: System.String
    - id: type
      type: System.String
    - id: xpath
      type: System.String
    - id: conversion
      type: Microsoft.Health.IItemTypePropertyConversion
  overload: Microsoft.Health.HealthRecordItemTypeProperty.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthRecordItemTypeProperty.Name
  commentId: P:Microsoft.Health.HealthRecordItemTypeProperty.Name
  id: Name
  parent: Microsoft.Health.HealthRecordItemTypeProperty
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: HealthRecordItemTypeProperty.Name
  fullName: Microsoft.Health.HealthRecordItemTypeProperty.Name
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthRecordItemTypeProperty.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Name
    path: HealthRecordItemTypeProperty.cs
    startLine: 35
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nThe name of the property.\n"
  example: []
  syntax:
    content: public string Name { get; }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.HealthRecordItemTypeProperty.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.HealthRecordItemTypeProperty.Type
  commentId: P:Microsoft.Health.HealthRecordItemTypeProperty.Type
  id: Type
  parent: Microsoft.Health.HealthRecordItemTypeProperty
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: HealthRecordItemTypeProperty.Type
  fullName: Microsoft.Health.HealthRecordItemTypeProperty.Type
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthRecordItemTypeProperty.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Type
    path: HealthRecordItemTypeProperty.cs
    startLine: 45
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nThe data type for the property.\n"
  example: []
  syntax:
    content: public string Type { get; }
    content.vb: Public ReadOnly Property Type As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.HealthRecordItemTypeProperty.Type*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.HealthRecordItemTypeProperty.Xpath
  commentId: P:Microsoft.Health.HealthRecordItemTypeProperty.Xpath
  id: Xpath
  parent: Microsoft.Health.HealthRecordItemTypeProperty
  langs:
  - csharp
  - vb
  name: Xpath
  nameWithType: HealthRecordItemTypeProperty.Xpath
  fullName: Microsoft.Health.HealthRecordItemTypeProperty.Xpath
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthRecordItemTypeProperty.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Xpath
    path: HealthRecordItemTypeProperty.cs
    startLine: 59
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nThe xpath for the property.\n"
  example: []
  syntax:
    content: public string Xpath { get; }
    content.vb: Public ReadOnly Property Xpath As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.HealthRecordItemTypeProperty.Xpath*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.HealthRecordItemTypeProperty.Conversion
  commentId: P:Microsoft.Health.HealthRecordItemTypeProperty.Conversion
  id: Conversion
  parent: Microsoft.Health.HealthRecordItemTypeProperty
  langs:
  - csharp
  - vb
  name: Conversion
  nameWithType: HealthRecordItemTypeProperty.Conversion
  fullName: Microsoft.Health.HealthRecordItemTypeProperty.Conversion
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthRecordItemTypeProperty.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Conversion
    path: HealthRecordItemTypeProperty.cs
    startLine: 77
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nA units conversion to apply to the value of a property of numeric type.\n"
  remarks: "\nWhen a thing type has multiple versions that store the same data with different units,\na conversion between units may be required to ensure that values are ordered correctly\nacross versions.\n"
  example: []
  syntax:
    content: public IItemTypePropertyConversion Conversion { get; }
    content.vb: Public ReadOnly Property Conversion As IItemTypePropertyConversion
    parameters: []
    return:
      type: Microsoft.Health.IItemTypePropertyConversion
  overload: Microsoft.Health.HealthRecordItemTypeProperty.Conversion*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.HealthRecordItemTypeProperty.CreateFromXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.HealthRecordItemTypeProperty.CreateFromXml(System.Xml.XPath.XPathNavigator)
  id: CreateFromXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.HealthRecordItemTypeProperty
  langs:
  - csharp
  - vb
  name: CreateFromXml(XPathNavigator)
  nameWithType: HealthRecordItemTypeProperty.CreateFromXml(XPathNavigator)
  fullName: Microsoft.Health.HealthRecordItemTypeProperty.CreateFromXml(System.Xml.XPath.XPathNavigator)
  type: Method
  source:
    remote:
      path: Microsoft.Health/HealthRecordItemTypeProperty.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CreateFromXml
    path: HealthRecordItemTypeProperty.cs
    startLine: 91
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nThis method converts the Property xml to the\nHealthRecordItemTypeProperty object.\n"
  example: []
  syntax:
    content: public static HealthRecordItemTypeProperty CreateFromXml(XPathNavigator propertyNav)
    content.vb: Public Shared Function CreateFromXml(propertyNav As XPathNavigator) As HealthRecordItemTypeProperty
    parameters:
    - id: propertyNav
      type: System.Xml.XPath.XPathNavigator
    return:
      type: Microsoft.Health.HealthRecordItemTypeProperty
  overload: Microsoft.Health.HealthRecordItemTypeProperty.CreateFromXml*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.HealthRecordItemTypeProperty.#ctor*
  commentId: Overload:Microsoft.Health.HealthRecordItemTypeProperty.#ctor
  isExternal: false
  name: HealthRecordItemTypeProperty
  nameWithType: HealthRecordItemTypeProperty.HealthRecordItemTypeProperty
  fullName: Microsoft.Health.HealthRecordItemTypeProperty.HealthRecordItemTypeProperty
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.IItemTypePropertyConversion
  commentId: T:Microsoft.Health.IItemTypePropertyConversion
  parent: Microsoft.Health
  isExternal: false
  name: IItemTypePropertyConversion
  nameWithType: IItemTypePropertyConversion
  fullName: Microsoft.Health.IItemTypePropertyConversion
- uid: Microsoft.Health.HealthRecordItemTypeProperty.Name*
  commentId: Overload:Microsoft.Health.HealthRecordItemTypeProperty.Name
  isExternal: false
  name: Name
  nameWithType: HealthRecordItemTypeProperty.Name
  fullName: Microsoft.Health.HealthRecordItemTypeProperty.Name
- uid: Microsoft.Health.HealthRecordItemTypeProperty.Type*
  commentId: Overload:Microsoft.Health.HealthRecordItemTypeProperty.Type
  isExternal: false
  name: Type
  nameWithType: HealthRecordItemTypeProperty.Type
  fullName: Microsoft.Health.HealthRecordItemTypeProperty.Type
- uid: Microsoft.Health.HealthRecordItemTypeProperty.Xpath*
  commentId: Overload:Microsoft.Health.HealthRecordItemTypeProperty.Xpath
  isExternal: false
  name: Xpath
  nameWithType: HealthRecordItemTypeProperty.Xpath
  fullName: Microsoft.Health.HealthRecordItemTypeProperty.Xpath
- uid: Microsoft.Health.HealthRecordItemTypeProperty.Conversion*
  commentId: Overload:Microsoft.Health.HealthRecordItemTypeProperty.Conversion
  isExternal: false
  name: Conversion
  nameWithType: HealthRecordItemTypeProperty.Conversion
  fullName: Microsoft.Health.HealthRecordItemTypeProperty.Conversion
- uid: Microsoft.Health.HealthRecordItemTypeProperty.CreateFromXml*
  commentId: Overload:Microsoft.Health.HealthRecordItemTypeProperty.CreateFromXml
  isExternal: false
  name: CreateFromXml
  nameWithType: HealthRecordItemTypeProperty.CreateFromXml
  fullName: Microsoft.Health.HealthRecordItemTypeProperty.CreateFromXml
- uid: System.Xml.XPath.XPathNavigator
  commentId: T:System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: true
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: Microsoft.Health.HealthRecordItemTypeProperty
  commentId: T:Microsoft.Health.HealthRecordItemTypeProperty
  parent: Microsoft.Health
  isExternal: false
  name: HealthRecordItemTypeProperty
  nameWithType: HealthRecordItemTypeProperty
  fullName: Microsoft.Health.HealthRecordItemTypeProperty
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: false
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
