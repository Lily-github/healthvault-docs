### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Utility.Diagnostics.StatisticsElement
  commentId: T:Microsoft.Health.Utility.Diagnostics.StatisticsElement
  id: StatisticsElement
  parent: Microsoft.Health.Utility.Diagnostics
  children:
  - Microsoft.Health.Utility.Diagnostics.StatisticsElement.#ctor(System.String,System.String)
  - Microsoft.Health.Utility.Diagnostics.StatisticsElement.CompareTo(Microsoft.Health.Utility.Diagnostics.StatisticsElement)
  - Microsoft.Health.Utility.Diagnostics.StatisticsElement.Group
  - Microsoft.Health.Utility.Diagnostics.StatisticsElement.Name
  - Microsoft.Health.Utility.Diagnostics.StatisticsElement.Value
  - Microsoft.Health.Utility.Diagnostics.StatisticsElement.WriteXml(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: StatisticsElement
  nameWithType: StatisticsElement
  fullName: Microsoft.Health.Utility.Diagnostics.StatisticsElement
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Statistics/StatisticsCollector.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: StatisticsElement
    path: ../Microsoft.Health.Utility/Diagnostics/Statistics/StatisticsCollector.cs
    startLine: 20
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nProvides a base implementation for elements that the StatisticsCollector will track and \ndisplay.\n"
  example: []
  syntax:
    content: 'public abstract class StatisticsElement : IComparable<StatisticsElement>'
    content.vb: >-
      Public MustInherit Class StatisticsElement
          Implements IComparable(Of StatisticsElement)
  inheritance:
  - System.Object
  derivedClasses:
  - Microsoft.Health.Utility.Diagnostics.ConfigElement
  - Microsoft.Health.Utility.Diagnostics.CounterElement
  implements:
  - System.IComparable{Microsoft.Health.Utility.Diagnostics.StatisticsElement}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.Utility.Diagnostics.StatisticsElement.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.Health.Utility.Diagnostics.StatisticsElement.#ctor(System.String,System.String)
  commentId: M:Microsoft.Health.Utility.Diagnostics.StatisticsElement.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Microsoft.Health.Utility.Diagnostics.StatisticsElement
  langs:
  - csharp
  - vb
  name: StatisticsElement(String, String)
  nameWithType: StatisticsElement.StatisticsElement(String, String)
  fullName: Microsoft.Health.Utility.Diagnostics.StatisticsElement.StatisticsElement(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Statistics/StatisticsCollector.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.Utility/Diagnostics/Statistics/StatisticsCollector.cs
    startLine: 31
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nCreates the base element. The name passed in will be the enclosed within the \napplication's name element. The group parameter specifies which tag the element will be \nenclosed by. If the group element is null or blank, the element will be enclosed by \nthe root tag.\n"
  example: []
  syntax:
    content: protected StatisticsElement(string name, string group)
    content.vb: Protected Sub New(name As String, group As String)
    parameters:
    - id: name
      type: System.String
    - id: group
      type: System.String
  overload: Microsoft.Health.Utility.Diagnostics.StatisticsElement.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.Health.Utility.Diagnostics.StatisticsElement.Name
  commentId: P:Microsoft.Health.Utility.Diagnostics.StatisticsElement.Name
  id: Name
  parent: Microsoft.Health.Utility.Diagnostics.StatisticsElement
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: StatisticsElement.Name
  fullName: Microsoft.Health.Utility.Diagnostics.StatisticsElement.Name
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Statistics/StatisticsCollector.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Name
    path: ../Microsoft.Health.Utility/Diagnostics/Statistics/StatisticsCollector.cs
    startLine: 41
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nReturns the element's name. This value is used as the key to the dictionaries as well\nas the contents of the name tag.\n"
  example: []
  syntax:
    content: public string Name { get; }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.Utility.Diagnostics.StatisticsElement.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.Diagnostics.StatisticsElement.Value
  commentId: P:Microsoft.Health.Utility.Diagnostics.StatisticsElement.Value
  id: Value
  parent: Microsoft.Health.Utility.Diagnostics.StatisticsElement
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: StatisticsElement.Value
  fullName: Microsoft.Health.Utility.Diagnostics.StatisticsElement.Value
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Statistics/StatisticsCollector.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Value
    path: ../Microsoft.Health.Utility/Diagnostics/Statistics/StatisticsCollector.cs
    startLine: 49
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nReturn's the element's value. This string is used as the contents of the value tag.\n"
  example: []
  syntax:
    content: public abstract string Value { get; }
    content.vb: Public MustOverride ReadOnly Property Value As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.Utility.Diagnostics.StatisticsElement.Value*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.Health.Utility.Diagnostics.StatisticsElement.Group
  commentId: P:Microsoft.Health.Utility.Diagnostics.StatisticsElement.Group
  id: Group
  parent: Microsoft.Health.Utility.Diagnostics.StatisticsElement
  langs:
  - csharp
  - vb
  name: Group
  nameWithType: StatisticsElement.Group
  fullName: Microsoft.Health.Utility.Diagnostics.StatisticsElement.Group
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Statistics/StatisticsCollector.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Group
    path: ../Microsoft.Health.Utility/Diagnostics/Statistics/StatisticsCollector.cs
    startLine: 57
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nReturns the element's group. An empty string indicates the element belongs to the root.\n"
  example: []
  syntax:
    content: public virtual string Group { get; }
    content.vb: Public Overridable ReadOnly Property Group As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.Utility.Diagnostics.StatisticsElement.Group*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.Health.Utility.Diagnostics.StatisticsElement.WriteXml(System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.Utility.Diagnostics.StatisticsElement.WriteXml(System.Xml.XmlWriter)
  id: WriteXml(System.Xml.XmlWriter)
  parent: Microsoft.Health.Utility.Diagnostics.StatisticsElement
  langs:
  - csharp
  - vb
  name: WriteXml(XmlWriter)
  nameWithType: StatisticsElement.WriteXml(XmlWriter)
  fullName: Microsoft.Health.Utility.Diagnostics.StatisticsElement.WriteXml(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Statistics/StatisticsCollector.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteXml
    path: ../Microsoft.Health.Utility/Diagnostics/Statistics/StatisticsCollector.cs
    startLine: 65
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nThis method writes the elements Xml.\n"
  example: []
  syntax:
    content: public abstract void WriteXml(XmlWriter writer)
    content.vb: Public MustOverride Sub WriteXml(writer As XmlWriter)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
  overload: Microsoft.Health.Utility.Diagnostics.StatisticsElement.WriteXml*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Microsoft.Health.Utility.Diagnostics.StatisticsElement.CompareTo(Microsoft.Health.Utility.Diagnostics.StatisticsElement)
  commentId: M:Microsoft.Health.Utility.Diagnostics.StatisticsElement.CompareTo(Microsoft.Health.Utility.Diagnostics.StatisticsElement)
  id: CompareTo(Microsoft.Health.Utility.Diagnostics.StatisticsElement)
  parent: Microsoft.Health.Utility.Diagnostics.StatisticsElement
  langs:
  - csharp
  - vb
  name: CompareTo(StatisticsElement)
  nameWithType: StatisticsElement.CompareTo(StatisticsElement)
  fullName: Microsoft.Health.Utility.Diagnostics.StatisticsElement.CompareTo(Microsoft.Health.Utility.Diagnostics.StatisticsElement)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Statistics/StatisticsCollector.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CompareTo
    path: ../Microsoft.Health.Utility/Diagnostics/Statistics/StatisticsCollector.cs
    startLine: 73
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nThis method is used for sorting. The element's are sorted by group first, and then by \nname.\n"
  example: []
  syntax:
    content: public int CompareTo(StatisticsElement other)
    content.vb: Public Function CompareTo(other As StatisticsElement) As Integer
    parameters:
    - id: other
      type: Microsoft.Health.Utility.Diagnostics.StatisticsElement
    return:
      type: System.Int32
  overload: Microsoft.Health.Utility.Diagnostics.StatisticsElement.CompareTo*
  implements:
  - System.IComparable{Microsoft.Health.Utility.Diagnostics.StatisticsElement}.CompareTo(Microsoft.Health.Utility.Diagnostics.StatisticsElement)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Health.Utility.Diagnostics
  commentId: N:Microsoft.Health.Utility.Diagnostics
  isExternal: false
  name: Microsoft.Health.Utility.Diagnostics
  nameWithType: Microsoft.Health.Utility.Diagnostics
  fullName: Microsoft.Health.Utility.Diagnostics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IComparable{Microsoft.Health.Utility.Diagnostics.StatisticsElement}
  commentId: T:System.IComparable{Microsoft.Health.Utility.Diagnostics.StatisticsElement}
  parent: System
  definition: System.IComparable`1
  name: IComparable<StatisticsElement>
  nameWithType: IComparable<StatisticsElement>
  fullName: System.IComparable<Microsoft.Health.Utility.Diagnostics.StatisticsElement>
  nameWithType.vb: IComparable(Of StatisticsElement)
  fullName.vb: System.IComparable(Of Microsoft.Health.Utility.Diagnostics.StatisticsElement)
  name.vb: IComparable(Of StatisticsElement)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.Utility.Diagnostics.StatisticsElement
    name: StatisticsElement
    nameWithType: StatisticsElement
    fullName: Microsoft.Health.Utility.Diagnostics.StatisticsElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.Utility.Diagnostics.StatisticsElement
    name: StatisticsElement
    nameWithType: StatisticsElement
    fullName: Microsoft.Health.Utility.Diagnostics.StatisticsElement
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.StatisticsElement.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<StatisticsElement>()
  nameWithType: TypeHelper.ValueOrDbNull<StatisticsElement>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Utility.Diagnostics.StatisticsElement>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of StatisticsElement)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Utility.Diagnostics.StatisticsElement)()
  name.vb: ValueOrDbNull(Of StatisticsElement)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<StatisticsElement>
    nameWithType: TypeHelper.ValueOrDbNull<StatisticsElement>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Utility.Diagnostics.StatisticsElement>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of StatisticsElement)
    nameWithType: TypeHelper.ValueOrDbNull(Of StatisticsElement)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Utility.Diagnostics.StatisticsElement)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullName.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.Utility.Diagnostics.StatisticsElement.#ctor*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.StatisticsElement.#ctor
  isExternal: false
  name: StatisticsElement
  nameWithType: StatisticsElement.StatisticsElement
  fullName: Microsoft.Health.Utility.Diagnostics.StatisticsElement.StatisticsElement
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.Utility.Diagnostics.StatisticsElement.Name*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.StatisticsElement.Name
  isExternal: false
  name: Name
  nameWithType: StatisticsElement.Name
  fullName: Microsoft.Health.Utility.Diagnostics.StatisticsElement.Name
- uid: Microsoft.Health.Utility.Diagnostics.StatisticsElement.Value*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.StatisticsElement.Value
  isExternal: false
  name: Value
  nameWithType: StatisticsElement.Value
  fullName: Microsoft.Health.Utility.Diagnostics.StatisticsElement.Value
- uid: Microsoft.Health.Utility.Diagnostics.StatisticsElement.Group*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.StatisticsElement.Group
  isExternal: false
  name: Group
  nameWithType: StatisticsElement.Group
  fullName: Microsoft.Health.Utility.Diagnostics.StatisticsElement.Group
- uid: Microsoft.Health.Utility.Diagnostics.StatisticsElement.WriteXml*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.StatisticsElement.WriteXml
  isExternal: false
  name: WriteXml
  nameWithType: StatisticsElement.WriteXml
  fullName: Microsoft.Health.Utility.Diagnostics.StatisticsElement.WriteXml
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: Microsoft.Health.Utility.Diagnostics.StatisticsElement.CompareTo*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.StatisticsElement.CompareTo
  isExternal: false
  name: CompareTo
  nameWithType: StatisticsElement.CompareTo
  fullName: Microsoft.Health.Utility.Diagnostics.StatisticsElement.CompareTo
- uid: System.IComparable{Microsoft.Health.Utility.Diagnostics.StatisticsElement}.CompareTo(Microsoft.Health.Utility.Diagnostics.StatisticsElement)
  commentId: M:System.IComparable{Microsoft.Health.Utility.Diagnostics.StatisticsElement}.CompareTo(Microsoft.Health.Utility.Diagnostics.StatisticsElement)
  parent: System.IComparable{Microsoft.Health.Utility.Diagnostics.StatisticsElement}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(StatisticsElement)
  nameWithType: IComparable<StatisticsElement>.CompareTo(StatisticsElement)
  fullName: System.IComparable<Microsoft.Health.Utility.Diagnostics.StatisticsElement>.CompareTo(Microsoft.Health.Utility.Diagnostics.StatisticsElement)
  nameWithType.vb: IComparable(Of StatisticsElement).CompareTo(StatisticsElement)
  fullName.vb: System.IComparable(Of Microsoft.Health.Utility.Diagnostics.StatisticsElement).CompareTo(Microsoft.Health.Utility.Diagnostics.StatisticsElement)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<StatisticsElement>.CompareTo
    fullName: System.IComparable<Microsoft.Health.Utility.Diagnostics.StatisticsElement>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.Utility.Diagnostics.StatisticsElement
    name: StatisticsElement
    nameWithType: StatisticsElement
    fullName: Microsoft.Health.Utility.Diagnostics.StatisticsElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of StatisticsElement).CompareTo
    fullName: System.IComparable(Of Microsoft.Health.Utility.Diagnostics.StatisticsElement).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.Utility.Diagnostics.StatisticsElement
    name: StatisticsElement
    nameWithType: StatisticsElement
    fullName: Microsoft.Health.Utility.Diagnostics.StatisticsElement
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.StatisticsElement
  commentId: T:Microsoft.Health.Utility.Diagnostics.StatisticsElement
  parent: Microsoft.Health.Utility.Diagnostics
  isExternal: false
  name: StatisticsElement
  nameWithType: StatisticsElement
  fullName: Microsoft.Health.Utility.Diagnostics.StatisticsElement
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IComparable`1.CompareTo(`0)
  commentId: M:System.IComparable`1.CompareTo(`0)
  isExternal: true
  name: CompareTo(T)
  nameWithType: IComparable<T>.CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  fullName.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<T>.CompareTo
    fullName: System.IComparable<T>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of T).CompareTo
    fullName: System.IComparable(Of T).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
