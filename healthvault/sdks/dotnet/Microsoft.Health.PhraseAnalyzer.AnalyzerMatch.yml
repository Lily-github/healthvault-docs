### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
  commentId: T:Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
  id: AnalyzerMatch
  parent: Microsoft.Health.PhraseAnalyzer
  children:
  - Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.Attributes
  - Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.CompareTo(Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  - Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.GetData``1
  - Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.HasSegment
  - Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.Segment
  - Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.StartAt
  - Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.WordCount
  langs:
  - csharp
  - vb
  name: AnalyzerMatch
  nameWithType: AnalyzerMatch
  fullName: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
  type: Struct
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/Matches.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AnalyzerMatch
    path: ../Microsoft.Health.Utility/search/PhraseAnalyzer/Matches.cs
    startLine: 11
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  syntax:
    content: 'public struct AnalyzerMatch : IComparable<AnalyzerMatch>'
    content.vb: >-
      Public Structure AnalyzerMatch
          Implements IComparable(Of AnalyzerMatch)
  implements:
  - System.IComparable{Microsoft.Health.PhraseAnalyzer.AnalyzerMatch}
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.Microsoft.Health.Utility.TypeHelper.DefaultAsNullable``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.Segment
  commentId: P:Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.Segment
  id: Segment
  parent: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
  langs:
  - csharp
  - vb
  name: Segment
  nameWithType: AnalyzerMatch.Segment
  fullName: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.Segment
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/Matches.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Segment
    path: ../Microsoft.Health.Utility/search/PhraseAnalyzer/Matches.cs
    startLine: 39
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: public string Segment { get; }
    content.vb: Public ReadOnly Property Segment As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.Segment*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.Attributes
  commentId: P:Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.Attributes
  id: Attributes
  parent: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
  langs:
  - csharp
  - vb
  name: Attributes
  nameWithType: AnalyzerMatch.Attributes
  fullName: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.Attributes
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/Matches.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Attributes
    path: ../Microsoft.Health.Utility/search/PhraseAnalyzer/Matches.cs
    startLine: 54
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: public ExpressionAttributes Attributes { get; }
    content.vb: Public ReadOnly Property Attributes As ExpressionAttributes
    parameters: []
    return:
      type: Microsoft.Health.PhraseAnalyzer.ExpressionAttributes
  overload: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.Attributes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.StartAt
  commentId: P:Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.StartAt
  id: StartAt
  parent: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
  langs:
  - csharp
  - vb
  name: StartAt
  nameWithType: AnalyzerMatch.StartAt
  fullName: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.StartAt
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/Matches.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: StartAt
    path: ../Microsoft.Health.Utility/search/PhraseAnalyzer/Matches.cs
    startLine: 65
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: public int StartAt { get; }
    content.vb: Public ReadOnly Property StartAt As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.StartAt*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.WordCount
  commentId: P:Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.WordCount
  id: WordCount
  parent: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
  langs:
  - csharp
  - vb
  name: WordCount
  nameWithType: AnalyzerMatch.WordCount
  fullName: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.WordCount
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/Matches.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WordCount
    path: ../Microsoft.Health.Utility/search/PhraseAnalyzer/Matches.cs
    startLine: 76
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: public int WordCount { get; }
    content.vb: Public ReadOnly Property WordCount As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.WordCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.HasSegment
  commentId: P:Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.HasSegment
  id: HasSegment
  parent: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
  langs:
  - csharp
  - vb
  name: HasSegment
  nameWithType: AnalyzerMatch.HasSegment
  fullName: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.HasSegment
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/Matches.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: HasSegment
    path: ../Microsoft.Health.Utility/search/PhraseAnalyzer/Matches.cs
    startLine: 87
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: public bool HasSegment { get; }
    content.vb: Public ReadOnly Property HasSegment As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.HasSegment*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.GetData``1
  commentId: M:Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.GetData``1
  id: GetData``1
  parent: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
  langs:
  - csharp
  - vb
  name: GetData<T>()
  nameWithType: AnalyzerMatch.GetData<T>()
  fullName: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.GetData<T>()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/Matches.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetData
    path: ../Microsoft.Health.Utility/search/PhraseAnalyzer/Matches.cs
    startLine: 100
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: public T GetData<T>()
    content.vb: Public Function GetData(Of T) As T
    typeParameters:
    - id: T
      description: ''
    return:
      type: '{T}'
      description: ''
  overload: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.GetData*
  nameWithType.vb: AnalyzerMatch.GetData(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.GetData(Of T)()
  name.vb: GetData(Of T)()
- uid: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.CompareTo(Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  commentId: M:Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.CompareTo(Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  id: CompareTo(Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  parent: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
  langs:
  - csharp
  - vb
  name: CompareTo(AnalyzerMatch)
  nameWithType: AnalyzerMatch.CompareTo(AnalyzerMatch)
  fullName: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.CompareTo(Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/Matches.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CompareTo
    path: ../Microsoft.Health.Utility/search/PhraseAnalyzer/Matches.cs
    startLine: 110
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: public int CompareTo(AnalyzerMatch other)
    content.vb: Public Function CompareTo(other As AnalyzerMatch) As Integer
    parameters:
    - id: other
      type: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
      description: ''
    return:
      type: System.Int32
      description: ''
  overload: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.CompareTo*
  implements:
  - System.IComparable{Microsoft.Health.PhraseAnalyzer.AnalyzerMatch}.CompareTo(Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Health.PhraseAnalyzer
  commentId: N:Microsoft.Health.PhraseAnalyzer
  isExternal: false
  name: Microsoft.Health.PhraseAnalyzer
  nameWithType: Microsoft.Health.PhraseAnalyzer
  fullName: Microsoft.Health.PhraseAnalyzer
- uid: System.IComparable{Microsoft.Health.PhraseAnalyzer.AnalyzerMatch}
  commentId: T:System.IComparable{Microsoft.Health.PhraseAnalyzer.AnalyzerMatch}
  parent: System
  definition: System.IComparable`1
  name: IComparable<AnalyzerMatch>
  nameWithType: IComparable<AnalyzerMatch>
  fullName: System.IComparable<Microsoft.Health.PhraseAnalyzer.AnalyzerMatch>
  nameWithType.vb: IComparable(Of AnalyzerMatch)
  fullName.vb: System.IComparable(Of Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  name.vb: IComparable(Of AnalyzerMatch)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
    name: AnalyzerMatch
    nameWithType: AnalyzerMatch
    fullName: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
    name: AnalyzerMatch
    nameWithType: AnalyzerMatch
    fullName: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.Microsoft.Health.Utility.TypeHelper.DefaultAsNullable``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.DefaultAsNullable``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable``1(``0)
  name: DefaultAsNullable<AnalyzerMatch>()
  nameWithType: TypeHelper.DefaultAsNullable<AnalyzerMatch>()
  fullName: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable<Microsoft.Health.PhraseAnalyzer.AnalyzerMatch>()
  nameWithType.vb: TypeHelper.DefaultAsNullable(Of AnalyzerMatch)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable(Of Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)()
  name.vb: DefaultAsNullable(Of AnalyzerMatch)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable``1
    name: DefaultAsNullable<AnalyzerMatch>
    nameWithType: TypeHelper.DefaultAsNullable<AnalyzerMatch>
    fullName: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable<Microsoft.Health.PhraseAnalyzer.AnalyzerMatch>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable``1
    name: DefaultAsNullable(Of AnalyzerMatch)
    nameWithType: TypeHelper.DefaultAsNullable(Of AnalyzerMatch)
    fullName: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable(Of Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullName.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.DefaultAsNullable``1(``0)
  isExternal: false
  name: DefaultAsNullable<T>(T)
  nameWithType: TypeHelper.DefaultAsNullable<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable<T>(T)
  nameWithType.vb: TypeHelper.DefaultAsNullable(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable(Of T)(T)
  name.vb: DefaultAsNullable(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable``1(``0)
    name: DefaultAsNullable<T>
    nameWithType: TypeHelper.DefaultAsNullable<T>
    fullName: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable``1(``0)
    name: DefaultAsNullable(Of T)
    nameWithType: TypeHelper.DefaultAsNullable(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.Segment*
  commentId: Overload:Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.Segment
  isExternal: false
  name: Segment
  nameWithType: AnalyzerMatch.Segment
  fullName: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.Segment
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.Attributes*
  commentId: Overload:Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.Attributes
  isExternal: false
  name: Attributes
  nameWithType: AnalyzerMatch.Attributes
  fullName: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.Attributes
- uid: Microsoft.Health.PhraseAnalyzer.ExpressionAttributes
  commentId: T:Microsoft.Health.PhraseAnalyzer.ExpressionAttributes
  parent: Microsoft.Health.PhraseAnalyzer
  isExternal: false
  name: ExpressionAttributes
  nameWithType: ExpressionAttributes
  fullName: Microsoft.Health.PhraseAnalyzer.ExpressionAttributes
- uid: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.StartAt*
  commentId: Overload:Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.StartAt
  isExternal: false
  name: StartAt
  nameWithType: AnalyzerMatch.StartAt
  fullName: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.StartAt
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.WordCount*
  commentId: Overload:Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.WordCount
  isExternal: false
  name: WordCount
  nameWithType: AnalyzerMatch.WordCount
  fullName: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.WordCount
- uid: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.HasSegment*
  commentId: Overload:Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.HasSegment
  isExternal: false
  name: HasSegment
  nameWithType: AnalyzerMatch.HasSegment
  fullName: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.HasSegment
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.GetData*
  commentId: Overload:Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.GetData
  isExternal: false
  name: GetData
  nameWithType: AnalyzerMatch.GetData
  fullName: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.GetData
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.CompareTo*
  commentId: Overload:Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.CompareTo
  isExternal: false
  name: CompareTo
  nameWithType: AnalyzerMatch.CompareTo
  fullName: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch.CompareTo
- uid: System.IComparable{Microsoft.Health.PhraseAnalyzer.AnalyzerMatch}.CompareTo(Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  commentId: M:System.IComparable{Microsoft.Health.PhraseAnalyzer.AnalyzerMatch}.CompareTo(Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  parent: System.IComparable{Microsoft.Health.PhraseAnalyzer.AnalyzerMatch}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(AnalyzerMatch)
  nameWithType: IComparable<AnalyzerMatch>.CompareTo(AnalyzerMatch)
  fullName: System.IComparable<Microsoft.Health.PhraseAnalyzer.AnalyzerMatch>.CompareTo(Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  nameWithType.vb: IComparable(Of AnalyzerMatch).CompareTo(AnalyzerMatch)
  fullName.vb: System.IComparable(Of Microsoft.Health.PhraseAnalyzer.AnalyzerMatch).CompareTo(Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<AnalyzerMatch>.CompareTo
    fullName: System.IComparable<Microsoft.Health.PhraseAnalyzer.AnalyzerMatch>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
    name: AnalyzerMatch
    nameWithType: AnalyzerMatch
    fullName: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of AnalyzerMatch).CompareTo
    fullName: System.IComparable(Of Microsoft.Health.PhraseAnalyzer.AnalyzerMatch).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
    name: AnalyzerMatch
    nameWithType: AnalyzerMatch
    fullName: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
  commentId: T:Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
  parent: Microsoft.Health.PhraseAnalyzer
  isExternal: false
  name: AnalyzerMatch
  nameWithType: AnalyzerMatch
  fullName: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
- uid: System.IComparable`1.CompareTo(`0)
  commentId: M:System.IComparable`1.CompareTo(`0)
  isExternal: true
  name: CompareTo(T)
  nameWithType: IComparable<T>.CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  fullName.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<T>.CompareTo
    fullName: System.IComparable<T>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of T).CompareTo
    fullName: System.IComparable(Of T).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
