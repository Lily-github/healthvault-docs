### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.InvertedIndex.StringIterator
  commentId: T:Microsoft.Health.InvertedIndex.StringIterator
  id: StringIterator
  parent: Microsoft.Health.InvertedIndex
  children:
  - Microsoft.Health.InvertedIndex.StringIterator.#ctor(System.String)
  - Microsoft.Health.InvertedIndex.StringIterator.Current
  - Microsoft.Health.InvertedIndex.StringIterator.Dispose
  - Microsoft.Health.InvertedIndex.StringIterator.Index
  - Microsoft.Health.InvertedIndex.StringIterator.IsDone
  - Microsoft.Health.InvertedIndex.StringIterator.IsFirst
  - Microsoft.Health.InvertedIndex.StringIterator.IsLast
  - Microsoft.Health.InvertedIndex.StringIterator.MoveNext
  - Microsoft.Health.InvertedIndex.StringIterator.MoveNext(System.Int32)
  - Microsoft.Health.InvertedIndex.StringIterator.MovePrev
  - Microsoft.Health.InvertedIndex.StringIterator.MovePrev(System.Int32)
  - Microsoft.Health.InvertedIndex.StringIterator.PeekIsLast(System.Int32)
  - Microsoft.Health.InvertedIndex.StringIterator.PeekNext
  - Microsoft.Health.InvertedIndex.StringIterator.PeekNext(System.Int32)
  - Microsoft.Health.InvertedIndex.StringIterator.PeekPrev
  - Microsoft.Health.InvertedIndex.StringIterator.PeekPrev(System.Int32)
  - Microsoft.Health.InvertedIndex.StringIterator.Reset
  - Microsoft.Health.InvertedIndex.StringIterator.Source
  - Microsoft.Health.InvertedIndex.StringIterator.System#Collections#IEnumerator#Current
  langs:
  - csharp
  - vb
  name: StringIterator
  nameWithType: StringIterator
  fullName: Microsoft.Health.InvertedIndex.StringIterator
  type: Struct
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/StringIterator.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: StringIterator
    path: ../Microsoft.Health.Utility/search/InvertedIndex/StringIterator.cs
    startLine: 11
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  syntax:
    content: 'public struct StringIterator : IEnumerator<char>, IDisposable, IEnumerator'
    content.vb: >-
      Public Structure StringIterator
          Implements IEnumerator(Of Char), IDisposable, IEnumerator
  implements:
  - System.Collections.Generic.IEnumerator{System.Char}
  - System.IDisposable
  - System.Collections.IEnumerator
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.InvertedIndex.StringIterator.Microsoft.Health.Utility.TypeHelper.DefaultAsNullable``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Microsoft.Health.InvertedIndex.StringIterator.#ctor(System.String)
  commentId: M:Microsoft.Health.InvertedIndex.StringIterator.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Health.InvertedIndex.StringIterator
  langs:
  - csharp
  - vb
  name: StringIterator(String)
  nameWithType: StringIterator.StringIterator(String)
  fullName: Microsoft.Health.InvertedIndex.StringIterator.StringIterator(System.String)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/StringIterator.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.Utility/search/InvertedIndex/StringIterator.cs
    startLine: 21
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public StringIterator(string source)
    content.vb: Public Sub New(source As String)
    parameters:
    - id: source
      type: System.String
      description: ''
  overload: Microsoft.Health.InvertedIndex.StringIterator.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.StringIterator.Source
  commentId: P:Microsoft.Health.InvertedIndex.StringIterator.Source
  id: Source
  parent: Microsoft.Health.InvertedIndex.StringIterator
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: StringIterator.Source
  fullName: Microsoft.Health.InvertedIndex.StringIterator.Source
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/StringIterator.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Source
    path: ../Microsoft.Health.Utility/search/InvertedIndex/StringIterator.cs
    startLine: 31
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public string Source { get; }
    content.vb: Public ReadOnly Property Source As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.InvertedIndex.StringIterator.Source*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.InvertedIndex.StringIterator.Index
  commentId: P:Microsoft.Health.InvertedIndex.StringIterator.Index
  id: Index
  parent: Microsoft.Health.InvertedIndex.StringIterator
  langs:
  - csharp
  - vb
  name: Index
  nameWithType: StringIterator.Index
  fullName: Microsoft.Health.InvertedIndex.StringIterator.Index
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/StringIterator.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Index
    path: ../Microsoft.Health.Utility/search/InvertedIndex/StringIterator.cs
    startLine: 42
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public int Index { get; }
    content.vb: Public ReadOnly Property Index As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Health.InvertedIndex.StringIterator.Index*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.InvertedIndex.StringIterator.IsFirst
  commentId: P:Microsoft.Health.InvertedIndex.StringIterator.IsFirst
  id: IsFirst
  parent: Microsoft.Health.InvertedIndex.StringIterator
  langs:
  - csharp
  - vb
  name: IsFirst
  nameWithType: StringIterator.IsFirst
  fullName: Microsoft.Health.InvertedIndex.StringIterator.IsFirst
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/StringIterator.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: IsFirst
    path: ../Microsoft.Health.Utility/search/InvertedIndex/StringIterator.cs
    startLine: 53
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public bool IsFirst { get; }
    content.vb: Public ReadOnly Property IsFirst As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.Health.InvertedIndex.StringIterator.IsFirst*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.InvertedIndex.StringIterator.IsLast
  commentId: P:Microsoft.Health.InvertedIndex.StringIterator.IsLast
  id: IsLast
  parent: Microsoft.Health.InvertedIndex.StringIterator
  langs:
  - csharp
  - vb
  name: IsLast
  nameWithType: StringIterator.IsLast
  fullName: Microsoft.Health.InvertedIndex.StringIterator.IsLast
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/StringIterator.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: IsLast
    path: ../Microsoft.Health.Utility/search/InvertedIndex/StringIterator.cs
    startLine: 64
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public bool IsLast { get; }
    content.vb: Public ReadOnly Property IsLast As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.Health.InvertedIndex.StringIterator.IsLast*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.InvertedIndex.StringIterator.IsDone
  commentId: P:Microsoft.Health.InvertedIndex.StringIterator.IsDone
  id: IsDone
  parent: Microsoft.Health.InvertedIndex.StringIterator
  langs:
  - csharp
  - vb
  name: IsDone
  nameWithType: StringIterator.IsDone
  fullName: Microsoft.Health.InvertedIndex.StringIterator.IsDone
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/StringIterator.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: IsDone
    path: ../Microsoft.Health.Utility/search/InvertedIndex/StringIterator.cs
    startLine: 75
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public bool IsDone { get; }
    content.vb: Public ReadOnly Property IsDone As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.Health.InvertedIndex.StringIterator.IsDone*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.InvertedIndex.StringIterator.Current
  commentId: P:Microsoft.Health.InvertedIndex.StringIterator.Current
  id: Current
  parent: Microsoft.Health.InvertedIndex.StringIterator
  langs:
  - csharp
  - vb
  name: Current
  nameWithType: StringIterator.Current
  fullName: Microsoft.Health.InvertedIndex.StringIterator.Current
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/StringIterator.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Current
    path: ../Microsoft.Health.Utility/search/InvertedIndex/StringIterator.cs
    startLine: 86
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public char Current { get; }
    content.vb: Public ReadOnly Property Current As Char
    parameters: []
    return:
      type: System.Char
  overload: Microsoft.Health.InvertedIndex.StringIterator.Current*
  implements:
  - System.Collections.Generic.IEnumerator{System.Char}.Current
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.InvertedIndex.StringIterator.MoveNext
  commentId: M:Microsoft.Health.InvertedIndex.StringIterator.MoveNext
  id: MoveNext
  parent: Microsoft.Health.InvertedIndex.StringIterator
  langs:
  - csharp
  - vb
  name: MoveNext()
  nameWithType: StringIterator.MoveNext()
  fullName: Microsoft.Health.InvertedIndex.StringIterator.MoveNext()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/StringIterator.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: MoveNext
    path: ../Microsoft.Health.Utility/search/InvertedIndex/StringIterator.cs
    startLine: 98
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public bool MoveNext()
    content.vb: Public Function MoveNext As Boolean
    return:
      type: System.Boolean
      description: ''
  overload: Microsoft.Health.InvertedIndex.StringIterator.MoveNext*
  implements:
  - System.Collections.IEnumerator.MoveNext
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.StringIterator.MoveNext(System.Int32)
  commentId: M:Microsoft.Health.InvertedIndex.StringIterator.MoveNext(System.Int32)
  id: MoveNext(System.Int32)
  parent: Microsoft.Health.InvertedIndex.StringIterator
  langs:
  - csharp
  - vb
  name: MoveNext(Int32)
  nameWithType: StringIterator.MoveNext(Int32)
  fullName: Microsoft.Health.InvertedIndex.StringIterator.MoveNext(System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/StringIterator.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: MoveNext
    path: ../Microsoft.Health.Utility/search/InvertedIndex/StringIterator.cs
    startLine: 116
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public bool MoveNext(int count)
    content.vb: Public Function MoveNext(count As Integer) As Boolean
    parameters:
    - id: count
      type: System.Int32
      description: ''
    return:
      type: System.Boolean
      description: ''
  overload: Microsoft.Health.InvertedIndex.StringIterator.MoveNext*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.StringIterator.MovePrev
  commentId: M:Microsoft.Health.InvertedIndex.StringIterator.MovePrev
  id: MovePrev
  parent: Microsoft.Health.InvertedIndex.StringIterator
  langs:
  - csharp
  - vb
  name: MovePrev()
  nameWithType: StringIterator.MovePrev()
  fullName: Microsoft.Health.InvertedIndex.StringIterator.MovePrev()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/StringIterator.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: MovePrev
    path: ../Microsoft.Health.Utility/search/InvertedIndex/StringIterator.cs
    startLine: 133
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public bool MovePrev()
    content.vb: Public Function MovePrev As Boolean
    return:
      type: System.Boolean
      description: ''
  overload: Microsoft.Health.InvertedIndex.StringIterator.MovePrev*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.StringIterator.MovePrev(System.Int32)
  commentId: M:Microsoft.Health.InvertedIndex.StringIterator.MovePrev(System.Int32)
  id: MovePrev(System.Int32)
  parent: Microsoft.Health.InvertedIndex.StringIterator
  langs:
  - csharp
  - vb
  name: MovePrev(Int32)
  nameWithType: StringIterator.MovePrev(Int32)
  fullName: Microsoft.Health.InvertedIndex.StringIterator.MovePrev(System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/StringIterator.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: MovePrev
    path: ../Microsoft.Health.Utility/search/InvertedIndex/StringIterator.cs
    startLine: 151
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public bool MovePrev(int count)
    content.vb: Public Function MovePrev(count As Integer) As Boolean
    parameters:
    - id: count
      type: System.Int32
      description: ''
    return:
      type: System.Boolean
      description: ''
  overload: Microsoft.Health.InvertedIndex.StringIterator.MovePrev*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.StringIterator.PeekNext
  commentId: M:Microsoft.Health.InvertedIndex.StringIterator.PeekNext
  id: PeekNext
  parent: Microsoft.Health.InvertedIndex.StringIterator
  langs:
  - csharp
  - vb
  name: PeekNext()
  nameWithType: StringIterator.PeekNext()
  fullName: Microsoft.Health.InvertedIndex.StringIterator.PeekNext()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/StringIterator.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: PeekNext
    path: ../Microsoft.Health.Utility/search/InvertedIndex/StringIterator.cs
    startLine: 168
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public char PeekNext()
    content.vb: Public Function PeekNext As Char
    return:
      type: System.Char
      description: ''
  overload: Microsoft.Health.InvertedIndex.StringIterator.PeekNext*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.StringIterator.PeekNext(System.Int32)
  commentId: M:Microsoft.Health.InvertedIndex.StringIterator.PeekNext(System.Int32)
  id: PeekNext(System.Int32)
  parent: Microsoft.Health.InvertedIndex.StringIterator
  langs:
  - csharp
  - vb
  name: PeekNext(Int32)
  nameWithType: StringIterator.PeekNext(Int32)
  fullName: Microsoft.Health.InvertedIndex.StringIterator.PeekNext(System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/StringIterator.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: PeekNext
    path: ../Microsoft.Health.Utility/search/InvertedIndex/StringIterator.cs
    startLine: 183
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public char PeekNext(int offset)
    content.vb: Public Function PeekNext(offset As Integer) As Char
    parameters:
    - id: offset
      type: System.Int32
      description: ''
    return:
      type: System.Char
      description: ''
  overload: Microsoft.Health.InvertedIndex.StringIterator.PeekNext*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.StringIterator.PeekPrev
  commentId: M:Microsoft.Health.InvertedIndex.StringIterator.PeekPrev
  id: PeekPrev
  parent: Microsoft.Health.InvertedIndex.StringIterator
  langs:
  - csharp
  - vb
  name: PeekPrev()
  nameWithType: StringIterator.PeekPrev()
  fullName: Microsoft.Health.InvertedIndex.StringIterator.PeekPrev()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/StringIterator.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: PeekPrev
    path: ../Microsoft.Health.Utility/search/InvertedIndex/StringIterator.cs
    startLine: 197
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public char PeekPrev()
    content.vb: Public Function PeekPrev As Char
    return:
      type: System.Char
      description: ''
  overload: Microsoft.Health.InvertedIndex.StringIterator.PeekPrev*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.StringIterator.PeekPrev(System.Int32)
  commentId: M:Microsoft.Health.InvertedIndex.StringIterator.PeekPrev(System.Int32)
  id: PeekPrev(System.Int32)
  parent: Microsoft.Health.InvertedIndex.StringIterator
  langs:
  - csharp
  - vb
  name: PeekPrev(Int32)
  nameWithType: StringIterator.PeekPrev(Int32)
  fullName: Microsoft.Health.InvertedIndex.StringIterator.PeekPrev(System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/StringIterator.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: PeekPrev
    path: ../Microsoft.Health.Utility/search/InvertedIndex/StringIterator.cs
    startLine: 212
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public char PeekPrev(int offset)
    content.vb: Public Function PeekPrev(offset As Integer) As Char
    parameters:
    - id: offset
      type: System.Int32
      description: ''
    return:
      type: System.Char
      description: ''
  overload: Microsoft.Health.InvertedIndex.StringIterator.PeekPrev*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.StringIterator.PeekIsLast(System.Int32)
  commentId: M:Microsoft.Health.InvertedIndex.StringIterator.PeekIsLast(System.Int32)
  id: PeekIsLast(System.Int32)
  parent: Microsoft.Health.InvertedIndex.StringIterator
  langs:
  - csharp
  - vb
  name: PeekIsLast(Int32)
  nameWithType: StringIterator.PeekIsLast(Int32)
  fullName: Microsoft.Health.InvertedIndex.StringIterator.PeekIsLast(System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/StringIterator.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: PeekIsLast
    path: ../Microsoft.Health.Utility/search/InvertedIndex/StringIterator.cs
    startLine: 227
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public bool PeekIsLast(int offset)
    content.vb: Public Function PeekIsLast(offset As Integer) As Boolean
    parameters:
    - id: offset
      type: System.Int32
      description: ''
    return:
      type: System.Boolean
      description: ''
  overload: Microsoft.Health.InvertedIndex.StringIterator.PeekIsLast*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.StringIterator.Dispose
  commentId: M:Microsoft.Health.InvertedIndex.StringIterator.Dispose
  id: Dispose
  parent: Microsoft.Health.InvertedIndex.StringIterator
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: StringIterator.Dispose()
  fullName: Microsoft.Health.InvertedIndex.StringIterator.Dispose()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/StringIterator.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Dispose
    path: ../Microsoft.Health.Utility/search/InvertedIndex/StringIterator.cs
    startLine: 236
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Microsoft.Health.InvertedIndex.StringIterator.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.StringIterator.System#Collections#IEnumerator#Current
  commentId: P:Microsoft.Health.InvertedIndex.StringIterator.System#Collections#IEnumerator#Current
  id: System#Collections#IEnumerator#Current
  isEii: true
  parent: Microsoft.Health.InvertedIndex.StringIterator
  langs:
  - csharp
  - vb
  name: IEnumerator.Current
  nameWithType: StringIterator.IEnumerator.Current
  fullName: Microsoft.Health.InvertedIndex.StringIterator.System.Collections.IEnumerator.Current
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/StringIterator.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: System.Collections.IEnumerator.Current
    path: ../Microsoft.Health.Utility/search/InvertedIndex/StringIterator.cs
    startLine: 245
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  syntax:
    content: object IEnumerator.Current { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.IEnumerator.Current As Object Implements IEnumerator.Current
    parameters: []
    return:
      type: System.Object
  overload: Microsoft.Health.InvertedIndex.StringIterator.System#Collections#IEnumerator#Current*
  implements:
  - System.Collections.IEnumerator.Current
  nameWithType.vb: StringIterator.System.Collections.IEnumerator.Current
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: System.Collections.IEnumerator.Current
- uid: Microsoft.Health.InvertedIndex.StringIterator.Reset
  commentId: M:Microsoft.Health.InvertedIndex.StringIterator.Reset
  id: Reset
  parent: Microsoft.Health.InvertedIndex.StringIterator
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: StringIterator.Reset()
  fullName: Microsoft.Health.InvertedIndex.StringIterator.Reset()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/StringIterator.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Reset
    path: ../Microsoft.Health.Utility/search/InvertedIndex/StringIterator.cs
    startLine: 256
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset
  overload: Microsoft.Health.InvertedIndex.StringIterator.Reset*
  implements:
  - System.Collections.IEnumerator.Reset
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Health.InvertedIndex
  commentId: N:Microsoft.Health.InvertedIndex
  isExternal: false
  name: Microsoft.Health.InvertedIndex
  nameWithType: Microsoft.Health.InvertedIndex
  fullName: Microsoft.Health.InvertedIndex
- uid: System.Collections.Generic.IEnumerator{System.Char}
  commentId: T:System.Collections.Generic.IEnumerator{System.Char}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<Char>
  nameWithType: IEnumerator<Char>
  fullName: System.Collections.Generic.IEnumerator<System.Char>
  nameWithType.vb: IEnumerator(Of Char)
  fullName.vb: System.Collections.Generic.IEnumerator(Of System.Char)
  name.vb: IEnumerator(Of Char)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.StringIterator.Microsoft.Health.Utility.TypeHelper.DefaultAsNullable``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.DefaultAsNullable``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable``1(``0)
  name: DefaultAsNullable<StringIterator>()
  nameWithType: TypeHelper.DefaultAsNullable<StringIterator>()
  fullName: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable<Microsoft.Health.InvertedIndex.StringIterator>()
  nameWithType.vb: TypeHelper.DefaultAsNullable(Of StringIterator)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable(Of Microsoft.Health.InvertedIndex.StringIterator)()
  name.vb: DefaultAsNullable(Of StringIterator)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable``1
    name: DefaultAsNullable<StringIterator>
    nameWithType: TypeHelper.DefaultAsNullable<StringIterator>
    fullName: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable<Microsoft.Health.InvertedIndex.StringIterator>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable``1
    name: DefaultAsNullable(Of StringIterator)
    nameWithType: TypeHelper.DefaultAsNullable(Of StringIterator)
    fullName: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable(Of Microsoft.Health.InvertedIndex.StringIterator)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.DefaultAsNullable``1(``0)
  isExternal: false
  name: DefaultAsNullable<T>(T)
  nameWithType: TypeHelper.DefaultAsNullable<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable<T>(T)
  nameWithType.vb: TypeHelper.DefaultAsNullable(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable(Of T)(T)
  name.vb: DefaultAsNullable(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable``1(``0)
    name: DefaultAsNullable<T>
    nameWithType: TypeHelper.DefaultAsNullable<T>
    fullName: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable``1(``0)
    name: DefaultAsNullable(Of T)
    nameWithType: TypeHelper.DefaultAsNullable(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.InvertedIndex.StringIterator.#ctor*
  commentId: Overload:Microsoft.Health.InvertedIndex.StringIterator.#ctor
  isExternal: false
  name: StringIterator
  nameWithType: StringIterator.StringIterator
  fullName: Microsoft.Health.InvertedIndex.StringIterator.StringIterator
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.InvertedIndex.StringIterator.Source*
  commentId: Overload:Microsoft.Health.InvertedIndex.StringIterator.Source
  isExternal: false
  name: Source
  nameWithType: StringIterator.Source
  fullName: Microsoft.Health.InvertedIndex.StringIterator.Source
- uid: Microsoft.Health.InvertedIndex.StringIterator.Index*
  commentId: Overload:Microsoft.Health.InvertedIndex.StringIterator.Index
  isExternal: false
  name: Index
  nameWithType: StringIterator.Index
  fullName: Microsoft.Health.InvertedIndex.StringIterator.Index
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Health.InvertedIndex.StringIterator.IsFirst*
  commentId: Overload:Microsoft.Health.InvertedIndex.StringIterator.IsFirst
  isExternal: false
  name: IsFirst
  nameWithType: StringIterator.IsFirst
  fullName: Microsoft.Health.InvertedIndex.StringIterator.IsFirst
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Health.InvertedIndex.StringIterator.IsLast*
  commentId: Overload:Microsoft.Health.InvertedIndex.StringIterator.IsLast
  isExternal: false
  name: IsLast
  nameWithType: StringIterator.IsLast
  fullName: Microsoft.Health.InvertedIndex.StringIterator.IsLast
- uid: Microsoft.Health.InvertedIndex.StringIterator.IsDone*
  commentId: Overload:Microsoft.Health.InvertedIndex.StringIterator.IsDone
  isExternal: false
  name: IsDone
  nameWithType: StringIterator.IsDone
  fullName: Microsoft.Health.InvertedIndex.StringIterator.IsDone
- uid: Microsoft.Health.InvertedIndex.StringIterator.Current*
  commentId: Overload:Microsoft.Health.InvertedIndex.StringIterator.Current
  isExternal: false
  name: Current
  nameWithType: StringIterator.Current
  fullName: Microsoft.Health.InvertedIndex.StringIterator.Current
- uid: System.Collections.Generic.IEnumerator{System.Char}.Current
  commentId: P:System.Collections.Generic.IEnumerator{System.Char}.Current
  parent: System.Collections.Generic.IEnumerator{System.Char}
  definition: System.Collections.Generic.IEnumerator`1.Current
  name: Current
  nameWithType: IEnumerator<Char>.Current
  fullName: System.Collections.Generic.IEnumerator<System.Char>.Current
  nameWithType.vb: IEnumerator(Of Char).Current
  fullName.vb: System.Collections.Generic.IEnumerator(Of System.Char).Current
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Collections.Generic.IEnumerator`1.Current
  commentId: P:System.Collections.Generic.IEnumerator`1.Current
  isExternal: true
  name: Current
  nameWithType: IEnumerator<T>.Current
  fullName: System.Collections.Generic.IEnumerator<T>.Current
  nameWithType.vb: IEnumerator(Of T).Current
  fullName.vb: System.Collections.Generic.IEnumerator(Of T).Current
- uid: Microsoft.Health.InvertedIndex.StringIterator.MoveNext*
  commentId: Overload:Microsoft.Health.InvertedIndex.StringIterator.MoveNext
  isExternal: false
  name: MoveNext
  nameWithType: StringIterator.MoveNext
  fullName: Microsoft.Health.InvertedIndex.StringIterator.MoveNext
- uid: System.Collections.IEnumerator.MoveNext
  commentId: M:System.Collections.IEnumerator.MoveNext
  parent: System.Collections.IEnumerator
  isExternal: true
  name: MoveNext()
  nameWithType: IEnumerator.MoveNext()
  fullName: System.Collections.IEnumerator.MoveNext()
  spec.csharp:
  - uid: System.Collections.IEnumerator.MoveNext
    name: MoveNext
    nameWithType: IEnumerator.MoveNext
    fullName: System.Collections.IEnumerator.MoveNext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerator.MoveNext
    name: MoveNext
    nameWithType: IEnumerator.MoveNext
    fullName: System.Collections.IEnumerator.MoveNext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.StringIterator.MovePrev*
  commentId: Overload:Microsoft.Health.InvertedIndex.StringIterator.MovePrev
  isExternal: false
  name: MovePrev
  nameWithType: StringIterator.MovePrev
  fullName: Microsoft.Health.InvertedIndex.StringIterator.MovePrev
- uid: Microsoft.Health.InvertedIndex.StringIterator.PeekNext*
  commentId: Overload:Microsoft.Health.InvertedIndex.StringIterator.PeekNext
  isExternal: false
  name: PeekNext
  nameWithType: StringIterator.PeekNext
  fullName: Microsoft.Health.InvertedIndex.StringIterator.PeekNext
- uid: Microsoft.Health.InvertedIndex.StringIterator.PeekPrev*
  commentId: Overload:Microsoft.Health.InvertedIndex.StringIterator.PeekPrev
  isExternal: false
  name: PeekPrev
  nameWithType: StringIterator.PeekPrev
  fullName: Microsoft.Health.InvertedIndex.StringIterator.PeekPrev
- uid: Microsoft.Health.InvertedIndex.StringIterator.PeekIsLast*
  commentId: Overload:Microsoft.Health.InvertedIndex.StringIterator.PeekIsLast
  isExternal: false
  name: PeekIsLast
  nameWithType: StringIterator.PeekIsLast
  fullName: Microsoft.Health.InvertedIndex.StringIterator.PeekIsLast
- uid: Microsoft.Health.InvertedIndex.StringIterator.Dispose*
  commentId: Overload:Microsoft.Health.InvertedIndex.StringIterator.Dispose
  isExternal: false
  name: Dispose
  nameWithType: StringIterator.Dispose
  fullName: Microsoft.Health.InvertedIndex.StringIterator.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.StringIterator.System#Collections#IEnumerator#Current*
  commentId: Overload:Microsoft.Health.InvertedIndex.StringIterator.System#Collections#IEnumerator#Current
  isExternal: false
  name: IEnumerator.Current
  nameWithType: StringIterator.IEnumerator.Current
  fullName: Microsoft.Health.InvertedIndex.StringIterator.System.Collections.IEnumerator.Current
  nameWithType.vb: StringIterator.System.Collections.IEnumerator.Current
  name.vb: System.Collections.IEnumerator.Current
- uid: System.Collections.IEnumerator.Current
  commentId: P:System.Collections.IEnumerator.Current
  parent: System.Collections.IEnumerator
  isExternal: true
  name: Current
  nameWithType: IEnumerator.Current
  fullName: System.Collections.IEnumerator.Current
- uid: Microsoft.Health.InvertedIndex.StringIterator.Reset*
  commentId: Overload:Microsoft.Health.InvertedIndex.StringIterator.Reset
  isExternal: false
  name: Reset
  nameWithType: StringIterator.Reset
  fullName: Microsoft.Health.InvertedIndex.StringIterator.Reset
- uid: System.Collections.IEnumerator.Reset
  commentId: M:System.Collections.IEnumerator.Reset
  parent: System.Collections.IEnumerator
  isExternal: true
  name: Reset()
  nameWithType: IEnumerator.Reset()
  fullName: System.Collections.IEnumerator.Reset()
  spec.csharp:
  - uid: System.Collections.IEnumerator.Reset
    name: Reset
    nameWithType: IEnumerator.Reset
    fullName: System.Collections.IEnumerator.Reset
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerator.Reset
    name: Reset
    nameWithType: IEnumerator.Reset
    fullName: System.Collections.IEnumerator.Reset
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
