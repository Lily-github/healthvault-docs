### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.InvertedIndex.FrequencyHitTable`1
  commentId: T:Microsoft.Health.InvertedIndex.FrequencyHitTable`1
  id: FrequencyHitTable`1
  parent: Microsoft.Health.InvertedIndex
  children:
  - Microsoft.Health.InvertedIndex.FrequencyHitTable`1.#ctor
  - Microsoft.Health.InvertedIndex.FrequencyHitTable`1.#ctor(System.Int32)
  - Microsoft.Health.InvertedIndex.FrequencyHitTable`1.Clear
  - Microsoft.Health.InvertedIndex.FrequencyHitTable`1.Count
  - Microsoft.Health.InvertedIndex.FrequencyHitTable`1.Hit(`0)
  - Microsoft.Health.InvertedIndex.FrequencyHitTable`1.Hit(`0,System.UInt32)
  - Microsoft.Health.InvertedIndex.FrequencyHitTable`1.Hit(System.Collections.Generic.IEnumerable{`0})
  - Microsoft.Health.InvertedIndex.FrequencyHitTable`1.Hit(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,System.UInt32}})
  - Microsoft.Health.InvertedIndex.FrequencyHitTable`1.Item(`0)
  - Microsoft.Health.InvertedIndex.FrequencyHitTable`1.TermFrequencies
  - Microsoft.Health.InvertedIndex.FrequencyHitTable`1.Terms
  langs:
  - csharp
  - vb
  name: FrequencyHitTable<K>
  nameWithType: FrequencyHitTable<K>
  fullName: Microsoft.Health.InvertedIndex.FrequencyHitTable<K>
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/FrequencyHitTable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: FrequencyHitTable
    path: ../Microsoft.Health.Utility/search/InvertedIndex/FrequencyHitTable.cs
    startLine: 15
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public class FrequencyHitTable<K>
    content.vb: Public Class FrequencyHitTable(Of K)
    typeParameters:
    - id: K
      description: ''
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.InvertedIndex.FrequencyHitTable`1.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  nameWithType.vb: FrequencyHitTable(Of K)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.Health.InvertedIndex.FrequencyHitTable(Of K)
  name.vb: FrequencyHitTable(Of K)
- uid: Microsoft.Health.InvertedIndex.FrequencyHitTable`1.#ctor
  commentId: M:Microsoft.Health.InvertedIndex.FrequencyHitTable`1.#ctor
  id: '#ctor'
  parent: Microsoft.Health.InvertedIndex.FrequencyHitTable`1
  langs:
  - csharp
  - vb
  name: FrequencyHitTable()
  nameWithType: FrequencyHitTable<K>.FrequencyHitTable()
  fullName: Microsoft.Health.InvertedIndex.FrequencyHitTable<K>.FrequencyHitTable()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/FrequencyHitTable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.Utility/search/InvertedIndex/FrequencyHitTable.cs
    startLine: 22
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public FrequencyHitTable()
    content.vb: Public Sub New
  overload: Microsoft.Health.InvertedIndex.FrequencyHitTable`1.#ctor*
  nameWithType.vb: FrequencyHitTable(Of K).FrequencyHitTable()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.FrequencyHitTable(Of K).FrequencyHitTable()
- uid: Microsoft.Health.InvertedIndex.FrequencyHitTable`1.#ctor(System.Int32)
  commentId: M:Microsoft.Health.InvertedIndex.FrequencyHitTable`1.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: Microsoft.Health.InvertedIndex.FrequencyHitTable`1
  langs:
  - csharp
  - vb
  name: FrequencyHitTable(Int32)
  nameWithType: FrequencyHitTable<K>.FrequencyHitTable(Int32)
  fullName: Microsoft.Health.InvertedIndex.FrequencyHitTable<K>.FrequencyHitTable(System.Int32)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/FrequencyHitTable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.Utility/search/InvertedIndex/FrequencyHitTable.cs
    startLine: 31
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public FrequencyHitTable(int capacity)
    content.vb: Public Sub New(capacity As Integer)
    parameters:
    - id: capacity
      type: System.Int32
      description: ''
  overload: Microsoft.Health.InvertedIndex.FrequencyHitTable`1.#ctor*
  nameWithType.vb: FrequencyHitTable(Of K).FrequencyHitTable(Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.FrequencyHitTable(Of K).FrequencyHitTable(System.Int32)
- uid: Microsoft.Health.InvertedIndex.FrequencyHitTable`1.Count
  commentId: P:Microsoft.Health.InvertedIndex.FrequencyHitTable`1.Count
  id: Count
  parent: Microsoft.Health.InvertedIndex.FrequencyHitTable`1
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: FrequencyHitTable<K>.Count
  fullName: Microsoft.Health.InvertedIndex.FrequencyHitTable<K>.Count
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/FrequencyHitTable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Count
    path: ../Microsoft.Health.Utility/search/InvertedIndex/FrequencyHitTable.cs
    startLine: 39
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Health.InvertedIndex.FrequencyHitTable`1.Count*
  nameWithType.vb: FrequencyHitTable(Of K).Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.Health.InvertedIndex.FrequencyHitTable(Of K).Count
- uid: Microsoft.Health.InvertedIndex.FrequencyHitTable`1.Item(`0)
  commentId: P:Microsoft.Health.InvertedIndex.FrequencyHitTable`1.Item(`0)
  id: Item(`0)
  parent: Microsoft.Health.InvertedIndex.FrequencyHitTable`1
  langs:
  - csharp
  - vb
  name: Item[K]
  nameWithType: FrequencyHitTable<K>.Item[K]
  fullName: Microsoft.Health.InvertedIndex.FrequencyHitTable<K>.Item[K]
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/FrequencyHitTable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: this[]
    path: ../Microsoft.Health.Utility/search/InvertedIndex/FrequencyHitTable.cs
    startLine: 52
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public uint this[K key] { get; set; }
    content.vb: Public Property Item(key As K) As UInteger
    parameters:
    - id: key
      type: '{K}'
      description: ''
    return:
      type: System.UInt32
      description: ''
  overload: Microsoft.Health.InvertedIndex.FrequencyHitTable`1.Item*
  nameWithType.vb: FrequencyHitTable(Of K).Item(K)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.FrequencyHitTable(Of K).Item(K)
  name.vb: Item(K)
- uid: Microsoft.Health.InvertedIndex.FrequencyHitTable`1.Terms
  commentId: P:Microsoft.Health.InvertedIndex.FrequencyHitTable`1.Terms
  id: Terms
  parent: Microsoft.Health.InvertedIndex.FrequencyHitTable`1
  langs:
  - csharp
  - vb
  name: Terms
  nameWithType: FrequencyHitTable<K>.Terms
  fullName: Microsoft.Health.InvertedIndex.FrequencyHitTable<K>.Terms
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/FrequencyHitTable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Terms
    path: ../Microsoft.Health.Utility/search/InvertedIndex/FrequencyHitTable.cs
    startLine: 73
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public IEnumerable<K> Terms { get; }
    content.vb: Public ReadOnly Property Terms As IEnumerable(Of K)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{{K}}
  overload: Microsoft.Health.InvertedIndex.FrequencyHitTable`1.Terms*
  nameWithType.vb: FrequencyHitTable(Of K).Terms
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.Health.InvertedIndex.FrequencyHitTable(Of K).Terms
- uid: Microsoft.Health.InvertedIndex.FrequencyHitTable`1.TermFrequencies
  commentId: P:Microsoft.Health.InvertedIndex.FrequencyHitTable`1.TermFrequencies
  id: TermFrequencies
  parent: Microsoft.Health.InvertedIndex.FrequencyHitTable`1
  langs:
  - csharp
  - vb
  name: TermFrequencies
  nameWithType: FrequencyHitTable<K>.TermFrequencies
  fullName: Microsoft.Health.InvertedIndex.FrequencyHitTable<K>.TermFrequencies
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/FrequencyHitTable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: TermFrequencies
    path: ../Microsoft.Health.Utility/search/InvertedIndex/FrequencyHitTable.cs
    startLine: 84
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public IEnumerable<KeyValuePair<K, uint>> TermFrequencies { get; }
    content.vb: Public ReadOnly Property TermFrequencies As IEnumerable(Of KeyValuePair(Of K, UInteger))
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{K},System.UInt32}}
  overload: Microsoft.Health.InvertedIndex.FrequencyHitTable`1.TermFrequencies*
  nameWithType.vb: FrequencyHitTable(Of K).TermFrequencies
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.Health.InvertedIndex.FrequencyHitTable(Of K).TermFrequencies
- uid: Microsoft.Health.InvertedIndex.FrequencyHitTable`1.Clear
  commentId: M:Microsoft.Health.InvertedIndex.FrequencyHitTable`1.Clear
  id: Clear
  parent: Microsoft.Health.InvertedIndex.FrequencyHitTable`1
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: FrequencyHitTable<K>.Clear()
  fullName: Microsoft.Health.InvertedIndex.FrequencyHitTable<K>.Clear()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/FrequencyHitTable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Clear
    path: ../Microsoft.Health.Utility/search/InvertedIndex/FrequencyHitTable.cs
    startLine: 95
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: Microsoft.Health.InvertedIndex.FrequencyHitTable`1.Clear*
  nameWithType.vb: FrequencyHitTable(Of K).Clear()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.FrequencyHitTable(Of K).Clear()
- uid: Microsoft.Health.InvertedIndex.FrequencyHitTable`1.Hit(`0)
  commentId: M:Microsoft.Health.InvertedIndex.FrequencyHitTable`1.Hit(`0)
  id: Hit(`0)
  parent: Microsoft.Health.InvertedIndex.FrequencyHitTable`1
  langs:
  - csharp
  - vb
  name: Hit(K)
  nameWithType: FrequencyHitTable<K>.Hit(K)
  fullName: Microsoft.Health.InvertedIndex.FrequencyHitTable<K>.Hit(K)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/FrequencyHitTable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Hit
    path: ../Microsoft.Health.Utility/search/InvertedIndex/FrequencyHitTable.cs
    startLine: 105
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public uint Hit(K key)
    content.vb: Public Function Hit(key As K) As UInteger
    parameters:
    - id: key
      type: '{K}'
      description: ''
    return:
      type: System.UInt32
      description: ''
  overload: Microsoft.Health.InvertedIndex.FrequencyHitTable`1.Hit*
  nameWithType.vb: FrequencyHitTable(Of K).Hit(K)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.FrequencyHitTable(Of K).Hit(K)
- uid: Microsoft.Health.InvertedIndex.FrequencyHitTable`1.Hit(`0,System.UInt32)
  commentId: M:Microsoft.Health.InvertedIndex.FrequencyHitTable`1.Hit(`0,System.UInt32)
  id: Hit(`0,System.UInt32)
  parent: Microsoft.Health.InvertedIndex.FrequencyHitTable`1
  langs:
  - csharp
  - vb
  name: Hit(K, UInt32)
  nameWithType: FrequencyHitTable<K>.Hit(K, UInt32)
  fullName: Microsoft.Health.InvertedIndex.FrequencyHitTable<K>.Hit(K, System.UInt32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/FrequencyHitTable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Hit
    path: ../Microsoft.Health.Utility/search/InvertedIndex/FrequencyHitTable.cs
    startLine: 127
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public uint Hit(K key, uint newFrequency)
    content.vb: Public Function Hit(key As K, newFrequency As UInteger) As UInteger
    parameters:
    - id: key
      type: '{K}'
      description: ''
    - id: newFrequency
      type: System.UInt32
      description: ''
    return:
      type: System.UInt32
      description: ''
  overload: Microsoft.Health.InvertedIndex.FrequencyHitTable`1.Hit*
  nameWithType.vb: FrequencyHitTable(Of K).Hit(K, UInt32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.FrequencyHitTable(Of K).Hit(K, System.UInt32)
- uid: Microsoft.Health.InvertedIndex.FrequencyHitTable`1.Hit(System.Collections.Generic.IEnumerable{`0})
  commentId: M:Microsoft.Health.InvertedIndex.FrequencyHitTable`1.Hit(System.Collections.Generic.IEnumerable{`0})
  id: Hit(System.Collections.Generic.IEnumerable{`0})
  parent: Microsoft.Health.InvertedIndex.FrequencyHitTable`1
  langs:
  - csharp
  - vb
  name: Hit(IEnumerable<K>)
  nameWithType: FrequencyHitTable<K>.Hit(IEnumerable<K>)
  fullName: Microsoft.Health.InvertedIndex.FrequencyHitTable<K>.Hit(System.Collections.Generic.IEnumerable<K>)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/FrequencyHitTable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Hit
    path: ../Microsoft.Health.Utility/search/InvertedIndex/FrequencyHitTable.cs
    startLine: 147
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Hit(IEnumerable<K> items)
    content.vb: Public Sub Hit(items As IEnumerable(Of K))
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable{{K}}
      description: ''
  overload: Microsoft.Health.InvertedIndex.FrequencyHitTable`1.Hit*
  nameWithType.vb: FrequencyHitTable(Of K).Hit(IEnumerable(Of K))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.FrequencyHitTable(Of K).Hit(System.Collections.Generic.IEnumerable(Of K))
  name.vb: Hit(IEnumerable(Of K))
- uid: Microsoft.Health.InvertedIndex.FrequencyHitTable`1.Hit(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,System.UInt32}})
  commentId: M:Microsoft.Health.InvertedIndex.FrequencyHitTable`1.Hit(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,System.UInt32}})
  id: Hit(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,System.UInt32}})
  parent: Microsoft.Health.InvertedIndex.FrequencyHitTable`1
  langs:
  - csharp
  - vb
  name: Hit(IEnumerable<KeyValuePair<K, UInt32>>)
  nameWithType: FrequencyHitTable<K>.Hit(IEnumerable<KeyValuePair<K, UInt32>>)
  fullName: Microsoft.Health.InvertedIndex.FrequencyHitTable<K>.Hit(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, System.UInt32>>)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/FrequencyHitTable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Hit
    path: ../Microsoft.Health.Utility/search/InvertedIndex/FrequencyHitTable.cs
    startLine: 164
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Hit(IEnumerable<KeyValuePair<K, uint>> items)
    content.vb: Public Sub Hit(items As IEnumerable(Of KeyValuePair(Of K, UInteger)))
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{K},System.UInt32}}
      description: ''
  overload: Microsoft.Health.InvertedIndex.FrequencyHitTable`1.Hit*
  nameWithType.vb: FrequencyHitTable(Of K).Hit(IEnumerable(Of KeyValuePair(Of K, UInt32)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.FrequencyHitTable(Of K).Hit(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of K, System.UInt32)))
  name.vb: Hit(IEnumerable(Of KeyValuePair(Of K, UInt32)))
references:
- uid: Microsoft.Health.InvertedIndex
  commentId: N:Microsoft.Health.InvertedIndex
  isExternal: false
  name: Microsoft.Health.InvertedIndex
  nameWithType: Microsoft.Health.InvertedIndex
  fullName: Microsoft.Health.InvertedIndex
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.FrequencyHitTable`1.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<FrequencyHitTable<K>>()
  nameWithType: TypeHelper.ValueOrDbNull<FrequencyHitTable<K>>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.InvertedIndex.FrequencyHitTable<K>>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of FrequencyHitTable(Of K))()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.InvertedIndex.FrequencyHitTable(Of K))()
  name.vb: ValueOrDbNull(Of FrequencyHitTable(Of K))()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<FrequencyHitTable<K>>
    nameWithType: TypeHelper.ValueOrDbNull<FrequencyHitTable<K>>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.InvertedIndex.FrequencyHitTable<K>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of FrequencyHitTable(Of K))
    nameWithType: TypeHelper.ValueOrDbNull(Of FrequencyHitTable(Of K))
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.InvertedIndex.FrequencyHitTable(Of K))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.InvertedIndex.FrequencyHitTable`1.#ctor*
  commentId: Overload:Microsoft.Health.InvertedIndex.FrequencyHitTable`1.#ctor
  isExternal: false
  name: FrequencyHitTable
  nameWithType: FrequencyHitTable<K>.FrequencyHitTable
  fullName: Microsoft.Health.InvertedIndex.FrequencyHitTable<K>.FrequencyHitTable
  nameWithType.vb: FrequencyHitTable(Of K).FrequencyHitTable
  fullName.vb: Microsoft.Health.InvertedIndex.FrequencyHitTable(Of K).FrequencyHitTable
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Health.InvertedIndex.FrequencyHitTable`1.Count*
  commentId: Overload:Microsoft.Health.InvertedIndex.FrequencyHitTable`1.Count
  isExternal: false
  name: Count
  nameWithType: FrequencyHitTable<K>.Count
  fullName: Microsoft.Health.InvertedIndex.FrequencyHitTable<K>.Count
  nameWithType.vb: FrequencyHitTable(Of K).Count
  fullName.vb: Microsoft.Health.InvertedIndex.FrequencyHitTable(Of K).Count
- uid: Microsoft.Health.InvertedIndex.FrequencyHitTable`1.Item*
  commentId: Overload:Microsoft.Health.InvertedIndex.FrequencyHitTable`1.Item
  isExternal: false
  name: Item
  nameWithType: FrequencyHitTable<K>.Item
  fullName: Microsoft.Health.InvertedIndex.FrequencyHitTable<K>.Item
  nameWithType.vb: FrequencyHitTable(Of K).Item
  fullName.vb: Microsoft.Health.InvertedIndex.FrequencyHitTable(Of K).Item
- uid: '{K}'
  commentId: '!:K'
  definition: K
  name: K
  nameWithType: K
  fullName: K
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: K
  isExternal: false
  name: K
  nameWithType: K
  fullName: K
- uid: Microsoft.Health.InvertedIndex.FrequencyHitTable`1.Terms*
  commentId: Overload:Microsoft.Health.InvertedIndex.FrequencyHitTable`1.Terms
  isExternal: false
  name: Terms
  nameWithType: FrequencyHitTable<K>.Terms
  fullName: Microsoft.Health.InvertedIndex.FrequencyHitTable<K>.Terms
  nameWithType.vb: FrequencyHitTable(Of K).Terms
  fullName.vb: Microsoft.Health.InvertedIndex.FrequencyHitTable(Of K).Terms
- uid: System.Collections.Generic.IEnumerable{{K}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<K>
  nameWithType: IEnumerable<K>
  fullName: System.Collections.Generic.IEnumerable<K>
  nameWithType.vb: IEnumerable(Of K)
  fullName.vb: System.Collections.Generic.IEnumerable(Of K)
  name.vb: IEnumerable(Of K)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: K
    nameWithType: K
    fullName: K
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: K
    nameWithType: K
    fullName: K
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Health.InvertedIndex.FrequencyHitTable`1.TermFrequencies*
  commentId: Overload:Microsoft.Health.InvertedIndex.FrequencyHitTable`1.TermFrequencies
  isExternal: false
  name: TermFrequencies
  nameWithType: FrequencyHitTable<K>.TermFrequencies
  fullName: Microsoft.Health.InvertedIndex.FrequencyHitTable<K>.TermFrequencies
  nameWithType.vb: FrequencyHitTable(Of K).TermFrequencies
  fullName.vb: Microsoft.Health.InvertedIndex.FrequencyHitTable(Of K).TermFrequencies
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{K},System.UInt32}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,System.UInt32}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<K, UInt32>>
  nameWithType: IEnumerable<KeyValuePair<K, UInt32>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, System.UInt32>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of K, UInt32))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of K, System.UInt32))
  name.vb: IEnumerable(Of KeyValuePair(Of K, UInt32))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.FrequencyHitTable`1.Clear*
  commentId: Overload:Microsoft.Health.InvertedIndex.FrequencyHitTable`1.Clear
  isExternal: false
  name: Clear
  nameWithType: FrequencyHitTable<K>.Clear
  fullName: Microsoft.Health.InvertedIndex.FrequencyHitTable<K>.Clear
  nameWithType.vb: FrequencyHitTable(Of K).Clear
  fullName.vb: Microsoft.Health.InvertedIndex.FrequencyHitTable(Of K).Clear
- uid: Microsoft.Health.InvertedIndex.FrequencyHitTable`1.Hit*
  commentId: Overload:Microsoft.Health.InvertedIndex.FrequencyHitTable`1.Hit
  isExternal: false
  name: Hit
  nameWithType: FrequencyHitTable<K>.Hit
  fullName: Microsoft.Health.InvertedIndex.FrequencyHitTable<K>.Hit
  nameWithType.vb: FrequencyHitTable(Of K).Hit
  fullName.vb: Microsoft.Health.InvertedIndex.FrequencyHitTable(Of K).Hit
