### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.ItemTypes.HealthServiceDateTime
  commentId: T:Microsoft.Health.ItemTypes.HealthServiceDateTime
  id: HealthServiceDateTime
  parent: Microsoft.Health.ItemTypes
  children:
  - Microsoft.Health.ItemTypes.HealthServiceDateTime.#ctor
  - Microsoft.Health.ItemTypes.HealthServiceDateTime.#ctor(Microsoft.Health.ItemTypes.HealthServiceDate)
  - Microsoft.Health.ItemTypes.HealthServiceDateTime.#ctor(Microsoft.Health.ItemTypes.HealthServiceDate,Microsoft.Health.ItemTypes.ApproximateTime)
  - Microsoft.Health.ItemTypes.HealthServiceDateTime.#ctor(Microsoft.Health.ItemTypes.HealthServiceDate,Microsoft.Health.ItemTypes.ApproximateTime,Microsoft.Health.ItemTypes.CodableValue)
  - Microsoft.Health.ItemTypes.HealthServiceDateTime.#ctor(System.DateTime)
  - Microsoft.Health.ItemTypes.HealthServiceDateTime.CompareTo(Microsoft.Health.ItemTypes.HealthServiceDateTime)
  - Microsoft.Health.ItemTypes.HealthServiceDateTime.CompareTo(System.DateTime)
  - Microsoft.Health.ItemTypes.HealthServiceDateTime.CompareTo(System.Object)
  - Microsoft.Health.ItemTypes.HealthServiceDateTime.Date
  - Microsoft.Health.ItemTypes.HealthServiceDateTime.Equals(System.Object)
  - Microsoft.Health.ItemTypes.HealthServiceDateTime.GetHashCode
  - Microsoft.Health.ItemTypes.HealthServiceDateTime.op_Equality(Microsoft.Health.ItemTypes.HealthServiceDateTime,System.Object)
  - Microsoft.Health.ItemTypes.HealthServiceDateTime.op_Explicit(Microsoft.Health.ItemTypes.HealthServiceDateTime)~System.DateTime
  - Microsoft.Health.ItemTypes.HealthServiceDateTime.op_GreaterThan(Microsoft.Health.ItemTypes.HealthServiceDateTime,System.Object)
  - Microsoft.Health.ItemTypes.HealthServiceDateTime.op_Inequality(Microsoft.Health.ItemTypes.HealthServiceDateTime,System.Object)
  - Microsoft.Health.ItemTypes.HealthServiceDateTime.op_LessThan(Microsoft.Health.ItemTypes.HealthServiceDateTime,System.Object)
  - Microsoft.Health.ItemTypes.HealthServiceDateTime.ParseXml(System.Xml.XPath.XPathNavigator)
  - Microsoft.Health.ItemTypes.HealthServiceDateTime.Time
  - Microsoft.Health.ItemTypes.HealthServiceDateTime.TimeZone
  - Microsoft.Health.ItemTypes.HealthServiceDateTime.ToDateTime
  - Microsoft.Health.ItemTypes.HealthServiceDateTime.ToString
  - Microsoft.Health.ItemTypes.HealthServiceDateTime.WriteXml(System.String,System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: HealthServiceDateTime
  nameWithType: HealthServiceDateTime
  fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime
  type: Class
  source:
    remote:
      path: Microsoft.Health.ItemTypes/HealthServiceDateTime.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: HealthServiceDateTime
    path: ../Microsoft.Health.ItemTypes/HealthServiceDateTime.cs
    startLine: 28
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nRepresents a date and time.\n"
  remarks: "\nA <xref href=\"Microsoft.Health.ItemTypes.HealthServiceDateTime\" data-throw-if-not-resolved=\"false\"></xref> is different from a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>\nin that the time is optional and it can be determined if it was \nspecified. Also, the time zone is optional and is not interpreted in\nany way by HealthVault.\n"
  example: []
  syntax:
    content: 'public class HealthServiceDateTime : HealthRecordItemData, IComparable, IComparable<HealthServiceDateTime>, IComparable<DateTime>'
    content.vb: >-
      Public Class HealthServiceDateTime
          Inherits HealthRecordItemData
          Implements IComparable, IComparable(Of HealthServiceDateTime), IComparable(Of Date)
  inheritance:
  - System.Object
  - Microsoft.Health.ItemTypes.HealthRecordItemData
  implements:
  - System.IComparable
  - System.IComparable{Microsoft.Health.ItemTypes.HealthServiceDateTime}
  - System.IComparable{System.DateTime}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.ItemTypes.HealthServiceDateTime.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.ItemTypes.HealthServiceDateTime.#ctor
  commentId: M:Microsoft.Health.ItemTypes.HealthServiceDateTime.#ctor
  id: '#ctor'
  parent: Microsoft.Health.ItemTypes.HealthServiceDateTime
  langs:
  - csharp
  - vb
  name: HealthServiceDateTime()
  nameWithType: HealthServiceDateTime.HealthServiceDateTime()
  fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime.HealthServiceDateTime()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/HealthServiceDateTime.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.ItemTypes/HealthServiceDateTime.cs
    startLine: 39
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.HealthServiceDateTime\" data-throw-if-not-resolved=\"false\"></xref> class \nwith the date set to the current date and the time not set.\n"
  example: []
  syntax:
    content: public HealthServiceDateTime()
    content.vb: Public Sub New
  overload: Microsoft.Health.ItemTypes.HealthServiceDateTime.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.HealthServiceDateTime.#ctor(Microsoft.Health.ItemTypes.HealthServiceDate)
  commentId: M:Microsoft.Health.ItemTypes.HealthServiceDateTime.#ctor(Microsoft.Health.ItemTypes.HealthServiceDate)
  id: '#ctor(Microsoft.Health.ItemTypes.HealthServiceDate)'
  parent: Microsoft.Health.ItemTypes.HealthServiceDateTime
  langs:
  - csharp
  - vb
  name: HealthServiceDateTime(HealthServiceDate)
  nameWithType: HealthServiceDateTime.HealthServiceDateTime(HealthServiceDate)
  fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime.HealthServiceDateTime(Microsoft.Health.ItemTypes.HealthServiceDate)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/HealthServiceDateTime.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.ItemTypes/HealthServiceDateTime.cs
    startLine: 62
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.HealthServiceDateTime\" data-throw-if-not-resolved=\"false\"></xref> class \nwith the specified date.\n"
  example: []
  syntax:
    content: public HealthServiceDateTime(HealthServiceDate date)
    content.vb: Public Sub New(date As HealthServiceDate)
    parameters:
    - id: date
      type: Microsoft.Health.ItemTypes.HealthServiceDate
      description: "\nThe date.\n"
  overload: Microsoft.Health.ItemTypes.HealthServiceDateTime.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">date</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.HealthServiceDateTime.#ctor(Microsoft.Health.ItemTypes.HealthServiceDate,Microsoft.Health.ItemTypes.ApproximateTime)
  commentId: M:Microsoft.Health.ItemTypes.HealthServiceDateTime.#ctor(Microsoft.Health.ItemTypes.HealthServiceDate,Microsoft.Health.ItemTypes.ApproximateTime)
  id: '#ctor(Microsoft.Health.ItemTypes.HealthServiceDate,Microsoft.Health.ItemTypes.ApproximateTime)'
  parent: Microsoft.Health.ItemTypes.HealthServiceDateTime
  langs:
  - csharp
  - vb
  name: HealthServiceDateTime(HealthServiceDate, ApproximateTime)
  nameWithType: HealthServiceDateTime.HealthServiceDateTime(HealthServiceDate, ApproximateTime)
  fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime.HealthServiceDateTime(Microsoft.Health.ItemTypes.HealthServiceDate, Microsoft.Health.ItemTypes.ApproximateTime)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/HealthServiceDateTime.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.ItemTypes/HealthServiceDateTime.cs
    startLine: 85
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.HealthServiceDateTime\" data-throw-if-not-resolved=\"false\"></xref> \nclass with the specified date and time.\n"
  example: []
  syntax:
    content: public HealthServiceDateTime(HealthServiceDate date, ApproximateTime time)
    content.vb: Public Sub New(date As HealthServiceDate, time As ApproximateTime)
    parameters:
    - id: date
      type: Microsoft.Health.ItemTypes.HealthServiceDate
      description: "\nThe date.\n"
    - id: time
      type: Microsoft.Health.ItemTypes.ApproximateTime
      description: "\nThe approximate time.\n"
  overload: Microsoft.Health.ItemTypes.HealthServiceDateTime.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">date</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.HealthServiceDateTime.#ctor(Microsoft.Health.ItemTypes.HealthServiceDate,Microsoft.Health.ItemTypes.ApproximateTime,Microsoft.Health.ItemTypes.CodableValue)
  commentId: M:Microsoft.Health.ItemTypes.HealthServiceDateTime.#ctor(Microsoft.Health.ItemTypes.HealthServiceDate,Microsoft.Health.ItemTypes.ApproximateTime,Microsoft.Health.ItemTypes.CodableValue)
  id: '#ctor(Microsoft.Health.ItemTypes.HealthServiceDate,Microsoft.Health.ItemTypes.ApproximateTime,Microsoft.Health.ItemTypes.CodableValue)'
  parent: Microsoft.Health.ItemTypes.HealthServiceDateTime
  langs:
  - csharp
  - vb
  name: HealthServiceDateTime(HealthServiceDate, ApproximateTime, CodableValue)
  nameWithType: HealthServiceDateTime.HealthServiceDateTime(HealthServiceDate, ApproximateTime, CodableValue)
  fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime.HealthServiceDateTime(Microsoft.Health.ItemTypes.HealthServiceDate, Microsoft.Health.ItemTypes.ApproximateTime, Microsoft.Health.ItemTypes.CodableValue)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/HealthServiceDateTime.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.ItemTypes/HealthServiceDateTime.cs
    startLine: 112
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.HealthServiceDateTime\" data-throw-if-not-resolved=\"false\"></xref> \nclass with the specified date, time, and time zone.\n"
  example: []
  syntax:
    content: public HealthServiceDateTime(HealthServiceDate date, ApproximateTime time, CodableValue timeZone)
    content.vb: Public Sub New(date As HealthServiceDate, time As ApproximateTime, timeZone As CodableValue)
    parameters:
    - id: date
      type: Microsoft.Health.ItemTypes.HealthServiceDate
      description: "\nThe date.\n"
    - id: time
      type: Microsoft.Health.ItemTypes.ApproximateTime
      description: "\nThe approximate time.\n"
    - id: timeZone
      type: Microsoft.Health.ItemTypes.CodableValue
      description: "\nThe optional time zone for the <span class=\"paramref\">time</span>.\n"
  overload: Microsoft.Health.ItemTypes.HealthServiceDateTime.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">date</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.HealthServiceDateTime.#ctor(System.DateTime)
  commentId: M:Microsoft.Health.ItemTypes.HealthServiceDateTime.#ctor(System.DateTime)
  id: '#ctor(System.DateTime)'
  parent: Microsoft.Health.ItemTypes.HealthServiceDateTime
  langs:
  - csharp
  - vb
  name: HealthServiceDateTime(DateTime)
  nameWithType: HealthServiceDateTime.HealthServiceDateTime(DateTime)
  fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime.HealthServiceDateTime(System.DateTime)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/HealthServiceDateTime.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.ItemTypes/HealthServiceDateTime.cs
    startLine: 135
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.HealthServiceDateTime\" data-throw-if-not-resolved=\"false\"></xref> \nclass from the specified DateTime instance.\n"
  remarks: "\nThe time zone is ignored.\n"
  example: []
  syntax:
    content: public HealthServiceDateTime(DateTime dateTime)
    content.vb: Public Sub New(dateTime As Date)
    parameters:
    - id: dateTime
      type: System.DateTime
      description: "\nThe date and time used to construct the HealthVault date and time.\n"
  overload: Microsoft.Health.ItemTypes.HealthServiceDateTime.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.HealthServiceDateTime.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.HealthServiceDateTime.ParseXml(System.Xml.XPath.XPathNavigator)
  id: ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.HealthServiceDateTime
  langs:
  - csharp
  - vb
  name: ParseXml(XPathNavigator)
  nameWithType: HealthServiceDateTime.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime.ParseXml(System.Xml.XPath.XPathNavigator)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/HealthServiceDateTime.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ParseXml
    path: ../Microsoft.Health.ItemTypes/HealthServiceDateTime.cs
    startLine: 162
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nPopulates the data for the date and time from the XML.\n"
  example: []
  syntax:
    content: public override void ParseXml(XPathNavigator navigator)
    content.vb: Public Overrides Sub ParseXml(navigator As XPathNavigator)
    parameters:
    - id: navigator
      type: System.Xml.XPath.XPathNavigator
      description: "\nThe XML node representing the date and time.\n"
  overridden: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  overload: Microsoft.Health.ItemTypes.HealthServiceDateTime.ParseXml*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.HealthServiceDateTime.WriteXml(System.String,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.HealthServiceDateTime.WriteXml(System.String,System.Xml.XmlWriter)
  id: WriteXml(System.String,System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.HealthServiceDateTime
  langs:
  - csharp
  - vb
  name: WriteXml(String, XmlWriter)
  nameWithType: HealthServiceDateTime.WriteXml(String, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime.WriteXml(System.String, System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/HealthServiceDateTime.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteXml
    path: ../Microsoft.Health.ItemTypes/HealthServiceDateTime.cs
    startLine: 210
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nWrites the date and time to the specified XML writer.\n"
  example: []
  syntax:
    content: public override void WriteXml(string nodeName, XmlWriter writer)
    content.vb: Public Overrides Sub WriteXml(nodeName As String, writer As XmlWriter)
    parameters:
    - id: nodeName
      type: System.String
      description: "\nThe name of the outer element for the date and time.\n"
    - id: writer
      type: System.Xml.XmlWriter
      description: "\nThe XmlWriter to write the date and time to.\n"
  overridden: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  overload: Microsoft.Health.ItemTypes.HealthServiceDateTime.WriteXml*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">nodeName</span> parameter is <strong>null</strong> or empty.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">writer</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.HealthServiceDateTime.op_Explicit(Microsoft.Health.ItemTypes.HealthServiceDateTime)~System.DateTime
  commentId: M:Microsoft.Health.ItemTypes.HealthServiceDateTime.op_Explicit(Microsoft.Health.ItemTypes.HealthServiceDateTime)~System.DateTime
  id: op_Explicit(Microsoft.Health.ItemTypes.HealthServiceDateTime)~System.DateTime
  parent: Microsoft.Health.ItemTypes.HealthServiceDateTime
  langs:
  - csharp
  - vb
  name: Explicit(HealthServiceDateTime to DateTime)
  nameWithType: HealthServiceDateTime.Explicit(HealthServiceDateTime to DateTime)
  fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime.Explicit(Microsoft.Health.ItemTypes.HealthServiceDateTime to System.DateTime)
  type: Operator
  source:
    remote:
      path: Microsoft.Health.ItemTypes/HealthServiceDateTime.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: op_Explicit
    path: ../Microsoft.Health.ItemTypes/HealthServiceDateTime.cs
    startLine: 245
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCasts the <xref href=\"Microsoft.Health.ItemTypes.HealthServiceDateTime\" data-throw-if-not-resolved=\"false\"></xref> instance to a System.DateTime object.\n"
  example: []
  syntax:
    content: public static explicit operator DateTime(HealthServiceDateTime wcDateTime)
    content.vb: Public Shared Narrowing Operator CType(wcDateTime As HealthServiceDateTime) As Date
    parameters:
    - id: wcDateTime
      type: Microsoft.Health.ItemTypes.HealthServiceDateTime
      description: "\nThe <xref href=\"Microsoft.Health.ItemTypes.HealthServiceDateTime\" data-throw-if-not-resolved=\"false\"></xref> instance to cast.\n"
    return:
      type: System.DateTime
      description: "\nA DateTime instance with the appropriate fields populated by the\n<xref href=\"Microsoft.Health.ItemTypes.HealthServiceDateTime\" data-throw-if-not-resolved=\"false\"></xref> values.\n"
  overload: Microsoft.Health.ItemTypes.HealthServiceDateTime.op_Explicit*
  nameWithType.vb: HealthServiceDateTime.Narrowing(HealthServiceDateTime to DateTime)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Health.ItemTypes.HealthServiceDateTime.Narrowing(Microsoft.Health.ItemTypes.HealthServiceDateTime to System.DateTime)
  name.vb: Narrowing(HealthServiceDateTime to DateTime)
- uid: Microsoft.Health.ItemTypes.HealthServiceDateTime.ToDateTime
  commentId: M:Microsoft.Health.ItemTypes.HealthServiceDateTime.ToDateTime
  id: ToDateTime
  parent: Microsoft.Health.ItemTypes.HealthServiceDateTime
  langs:
  - csharp
  - vb
  name: ToDateTime()
  nameWithType: HealthServiceDateTime.ToDateTime()
  fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime.ToDateTime()
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/HealthServiceDateTime.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ToDateTime
    path: ../Microsoft.Health.ItemTypes/HealthServiceDateTime.cs
    startLine: 282
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nConverts the <xref href=\"Microsoft.Health.ItemTypes.HealthServiceDateTime\" data-throw-if-not-resolved=\"false\"></xref> instance to a System.DateTime object.\n"
  example: []
  syntax:
    content: public DateTime ToDateTime()
    content.vb: Public Function ToDateTime As Date
    return:
      type: System.DateTime
      description: "\nA DateTime instance with the appropriate fields populated by the\n<xref href=\"Microsoft.Health.ItemTypes.HealthServiceDateTime\" data-throw-if-not-resolved=\"false\"></xref> values.\n"
  overload: Microsoft.Health.ItemTypes.HealthServiceDateTime.ToDateTime*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.HealthServiceDateTime.Date
  commentId: P:Microsoft.Health.ItemTypes.HealthServiceDateTime.Date
  id: Date
  parent: Microsoft.Health.ItemTypes.HealthServiceDateTime
  langs:
  - csharp
  - vb
  name: Date
  nameWithType: HealthServiceDateTime.Date
  fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime.Date
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/HealthServiceDateTime.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Date
    path: ../Microsoft.Health.ItemTypes/HealthServiceDateTime.cs
    startLine: 299
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the date.\n"
  remarks: "\nDefaults to the current year, month, and day.\n"
  example: []
  syntax:
    content: public HealthServiceDate Date { get; set; }
    content.vb: Public Property Date As HealthServiceDate
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.HealthServiceDate
  overload: Microsoft.Health.ItemTypes.HealthServiceDateTime.Date*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">value</span> parameter is <strong>null</strong> on set.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.HealthServiceDateTime.Time
  commentId: P:Microsoft.Health.ItemTypes.HealthServiceDateTime.Time
  id: Time
  parent: Microsoft.Health.ItemTypes.HealthServiceDateTime
  langs:
  - csharp
  - vb
  name: Time
  nameWithType: HealthServiceDateTime.Time
  fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime.Time
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/HealthServiceDateTime.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Time
    path: ../Microsoft.Health.ItemTypes/HealthServiceDateTime.cs
    startLine: 324
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the time.\n"
  remarks: "\nIf the time isn't known it can be set to <strong>null</strong>. This value defaults\nto an absent time. The reference is valid but the time will not be\nstored unless the hour and minute are set.\n"
  example: []
  syntax:
    content: public ApproximateTime Time { get; set; }
    content.vb: Public Property Time As ApproximateTime
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.ApproximateTime
      description: "\nAn <xref href=\"Microsoft.Health.ItemTypes.ApproximateTime\" data-throw-if-not-resolved=\"false\"></xref> instance representing the time.\n"
  overload: Microsoft.Health.ItemTypes.HealthServiceDateTime.Time*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.HealthServiceDateTime.TimeZone
  commentId: P:Microsoft.Health.ItemTypes.HealthServiceDateTime.TimeZone
  id: TimeZone
  parent: Microsoft.Health.ItemTypes.HealthServiceDateTime
  langs:
  - csharp
  - vb
  name: TimeZone
  nameWithType: HealthServiceDateTime.TimeZone
  fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime.TimeZone
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/HealthServiceDateTime.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: TimeZone
    path: ../Microsoft.Health.ItemTypes/HealthServiceDateTime.cs
    startLine: 344
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the time zone.\n"
  remarks: "\nIf the time zone is unknown, it can be set to <strong>null</strong>. This value defaults\nto <strong>null</strong>.\n"
  example: []
  syntax:
    content: public CodableValue TimeZone { get; set; }
    content.vb: Public Property TimeZone As CodableValue
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.CodableValue
      description: "\nA <xref href=\"Microsoft.Health.ItemTypes.CodableValue\" data-throw-if-not-resolved=\"false\"></xref> instance representing the time zone.\n"
  overload: Microsoft.Health.ItemTypes.HealthServiceDateTime.TimeZone*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.HealthServiceDateTime.ToString
  commentId: M:Microsoft.Health.ItemTypes.HealthServiceDateTime.ToString
  id: ToString
  parent: Microsoft.Health.ItemTypes.HealthServiceDateTime
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: HealthServiceDateTime.ToString()
  fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime.ToString()
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/HealthServiceDateTime.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ToString
    path: ../Microsoft.Health.ItemTypes/HealthServiceDateTime.cs
    startLine: 363
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets the date and time as a string.\n"
  remarks: "\nThis method is not yet culture aware.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\nThe date and time represented as a string.\n"
  overridden: System.Object.ToString
  overload: Microsoft.Health.ItemTypes.HealthServiceDateTime.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.HealthServiceDateTime.CompareTo(System.Object)
  commentId: M:Microsoft.Health.ItemTypes.HealthServiceDateTime.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: Microsoft.Health.ItemTypes.HealthServiceDateTime
  langs:
  - csharp
  - vb
  name: CompareTo(Object)
  nameWithType: HealthServiceDateTime.CompareTo(Object)
  fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime.CompareTo(System.Object)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/HealthServiceDateTime.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CompareTo
    path: ../Microsoft.Health.ItemTypes/HealthServiceDateTime.cs
    startLine: 419
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCompares the specified object to this <xref href=\"Microsoft.Health.ItemTypes.HealthServiceDateTime\" data-throw-if-not-resolved=\"false\"></xref> \nobject.\n"
  example: []
  syntax:
    content: public int CompareTo(object obj)
    content.vb: Public Function CompareTo(obj As Object) As Integer
    parameters:
    - id: obj
      type: System.Object
      description: "\nThe object to be compared.\n"
    return:
      type: System.Int32
      description: "\nA 32-bit signed integer that indicates the relative order of the \nobjects being compared. If the result is less than zero, the \ninstance is less than <span class=\"paramref\">obj</span>. If the result is zero\nthe instance is equal to <span class=\"paramref\">obj</span>. If the result is\ngreater than zero, the instance is greater than \n<span class=\"paramref\">obj</span>.\n"
  overload: Microsoft.Health.ItemTypes.HealthServiceDateTime.CompareTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">obj</span> parameter is not a <xref href=\"Microsoft.Health.ItemTypes.HealthServiceDateTime\" data-throw-if-not-resolved=\"false\"></xref>\nor <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  implements:
  - System.IComparable.CompareTo(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.HealthServiceDateTime.CompareTo(Microsoft.Health.ItemTypes.HealthServiceDateTime)
  commentId: M:Microsoft.Health.ItemTypes.HealthServiceDateTime.CompareTo(Microsoft.Health.ItemTypes.HealthServiceDateTime)
  id: CompareTo(Microsoft.Health.ItemTypes.HealthServiceDateTime)
  parent: Microsoft.Health.ItemTypes.HealthServiceDateTime
  langs:
  - csharp
  - vb
  name: CompareTo(HealthServiceDateTime)
  nameWithType: HealthServiceDateTime.CompareTo(HealthServiceDateTime)
  fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime.CompareTo(Microsoft.Health.ItemTypes.HealthServiceDateTime)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/HealthServiceDateTime.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CompareTo
    path: ../Microsoft.Health.ItemTypes/HealthServiceDateTime.cs
    startLine: 469
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCompares the specified object to this <xref href=\"Microsoft.Health.ItemTypes.HealthServiceDateTime\" data-throw-if-not-resolved=\"false\"></xref> \nobject.\n"
  example: []
  syntax:
    content: public int CompareTo(HealthServiceDateTime other)
    content.vb: Public Function CompareTo(other As HealthServiceDateTime) As Integer
    parameters:
    - id: other
      type: Microsoft.Health.ItemTypes.HealthServiceDateTime
      description: "\nThe date to be compared.\n"
    return:
      type: System.Int32
      description: "\nA 32-bit signed integer that indicates the relative order of the \nobjects being compared. If the result is less than zero, the \ninstance is less than <span class=\"paramref\">other</span>. If the result is zero\nthe instance is equal to <span class=\"paramref\">other</span>. If the result is\ngreater than zero, the instance is greater than \n<span class=\"paramref\">other</span>.\n"
  overload: Microsoft.Health.ItemTypes.HealthServiceDateTime.CompareTo*
  implements:
  - System.IComparable{Microsoft.Health.ItemTypes.HealthServiceDateTime}.CompareTo(Microsoft.Health.ItemTypes.HealthServiceDateTime)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.HealthServiceDateTime.CompareTo(System.DateTime)
  commentId: M:Microsoft.Health.ItemTypes.HealthServiceDateTime.CompareTo(System.DateTime)
  id: CompareTo(System.DateTime)
  parent: Microsoft.Health.ItemTypes.HealthServiceDateTime
  langs:
  - csharp
  - vb
  name: CompareTo(DateTime)
  nameWithType: HealthServiceDateTime.CompareTo(DateTime)
  fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime.CompareTo(System.DateTime)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/HealthServiceDateTime.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CompareTo
    path: ../Microsoft.Health.ItemTypes/HealthServiceDateTime.cs
    startLine: 512
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCompares the specified object to this HealthServiceDateTime object.\n"
  example: []
  syntax:
    content: public int CompareTo(DateTime other)
    content.vb: Public Function CompareTo(other As Date) As Integer
    parameters:
    - id: other
      type: System.DateTime
      description: "\nThe date to be compared.\n"
    return:
      type: System.Int32
      description: "\nA 32-bit signed integer that indicates the relative order of the \nobjects being compared. If the result is less than zero, the \ninstance is less than <span class=\"paramref\">other</span>. If the result is zero\nthe instance is equal to <span class=\"paramref\">other</span>. If the result is\ngreater than zero, the instance is greater than \n<span class=\"paramref\">other</span>.\n"
  overload: Microsoft.Health.ItemTypes.HealthServiceDateTime.CompareTo*
  implements:
  - System.IComparable{System.DateTime}.CompareTo(System.DateTime)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.HealthServiceDateTime.Equals(System.Object)
  commentId: M:Microsoft.Health.ItemTypes.HealthServiceDateTime.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.Health.ItemTypes.HealthServiceDateTime
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: HealthServiceDateTime.Equals(Object)
  fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/HealthServiceDateTime.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Equals
    path: ../Microsoft.Health.ItemTypes/HealthServiceDateTime.cs
    startLine: 582
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets a value indicating whether the specified object is equal to this object.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: "\nThe object to be compared.\n"
    return:
      type: System.Boolean
      description: "\n<strong>true</strong> if the <span class=\"paramref\">obj</span> is a \n<xref href=\"Microsoft.Health.ItemTypes.HealthServiceDateTime\" data-throw-if-not-resolved=\"false\"></xref> object and the year, month, and\nday exactly match the year, month, and day of this object; otherwise,\n<strong>false</strong>.\n"
  overridden: System.Object.Equals(System.Object)
  overload: Microsoft.Health.ItemTypes.HealthServiceDateTime.Equals*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">obj</span> parameter is not a <xref href=\"Microsoft.Health.ItemTypes.HealthServiceDateTime\" data-throw-if-not-resolved=\"false\"></xref>\nobject.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.HealthServiceDateTime.GetHashCode
  commentId: M:Microsoft.Health.ItemTypes.HealthServiceDateTime.GetHashCode
  id: GetHashCode
  parent: Microsoft.Health.ItemTypes.HealthServiceDateTime
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: HealthServiceDateTime.GetHashCode()
  fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime.GetHashCode()
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/HealthServiceDateTime.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetHashCode
    path: ../Microsoft.Health.ItemTypes/HealthServiceDateTime.cs
    startLine: 595
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nSee the base class documentation.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: "\nSee the base class documentation.\n"
  overridden: System.Object.GetHashCode
  overload: Microsoft.Health.ItemTypes.HealthServiceDateTime.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.HealthServiceDateTime.op_Equality(Microsoft.Health.ItemTypes.HealthServiceDateTime,System.Object)
  commentId: M:Microsoft.Health.ItemTypes.HealthServiceDateTime.op_Equality(Microsoft.Health.ItemTypes.HealthServiceDateTime,System.Object)
  id: op_Equality(Microsoft.Health.ItemTypes.HealthServiceDateTime,System.Object)
  parent: Microsoft.Health.ItemTypes.HealthServiceDateTime
  langs:
  - csharp
  - vb
  name: Equality(HealthServiceDateTime, Object)
  nameWithType: HealthServiceDateTime.Equality(HealthServiceDateTime, Object)
  fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime.Equality(Microsoft.Health.ItemTypes.HealthServiceDateTime, System.Object)
  type: Operator
  source:
    remote:
      path: Microsoft.Health.ItemTypes/HealthServiceDateTime.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: op_Equality
    path: ../Microsoft.Health.ItemTypes/HealthServiceDateTime.cs
    startLine: 627
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets a value indicating whether the specified object is equal to the specified\ndate.\n"
  example: []
  syntax:
    content: public static bool operator ==(HealthServiceDateTime date, object secondInstance)
    content.vb: Public Shared Operator =(date As HealthServiceDateTime, secondInstance As Object) As Boolean
    parameters:
    - id: date
      type: Microsoft.Health.ItemTypes.HealthServiceDateTime
      description: "\nThe date object to be compared.\n"
    - id: secondInstance
      type: System.Object
      description: "\nThe second object to be compared.\n"
    return:
      type: System.Boolean
      description: "\n<strong>true</strong> if the year, month, and day of the <span class=\"paramref\">date</span> \nexactly match the year, month, and day of <span class=\"paramref\">secondInstance</span>; \notherwise, <strong>false</strong>.\n"
  overload: Microsoft.Health.ItemTypes.HealthServiceDateTime.op_Equality*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">secondInstance</span> parameter is not a \n<xref href=\"Microsoft.Health.ItemTypes.HealthServiceDateTime\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.ItemTypes.HealthServiceDateTime.op_Inequality(Microsoft.Health.ItemTypes.HealthServiceDateTime,System.Object)
  commentId: M:Microsoft.Health.ItemTypes.HealthServiceDateTime.op_Inequality(Microsoft.Health.ItemTypes.HealthServiceDateTime,System.Object)
  id: op_Inequality(Microsoft.Health.ItemTypes.HealthServiceDateTime,System.Object)
  parent: Microsoft.Health.ItemTypes.HealthServiceDateTime
  langs:
  - csharp
  - vb
  name: Inequality(HealthServiceDateTime, Object)
  nameWithType: HealthServiceDateTime.Inequality(HealthServiceDateTime, Object)
  fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime.Inequality(Microsoft.Health.ItemTypes.HealthServiceDateTime, System.Object)
  type: Operator
  source:
    remote:
      path: Microsoft.Health.ItemTypes/HealthServiceDateTime.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: op_Inequality
    path: ../Microsoft.Health.ItemTypes/HealthServiceDateTime.cs
    startLine: 673
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets a value indicating whether the specified object is not equal to the specified\ndate.\n"
  example: []
  syntax:
    content: public static bool operator !=(HealthServiceDateTime date, object secondInstance)
    content.vb: Public Shared Operator <>(date As HealthServiceDateTime, secondInstance As Object) As Boolean
    parameters:
    - id: date
      type: Microsoft.Health.ItemTypes.HealthServiceDateTime
      description: "\nThe date object to be compared.\n"
    - id: secondInstance
      type: System.Object
      description: "\nThe second object to be compared.\n"
    return:
      type: System.Boolean
      description: "\n<strong>false</strong> if the year, month, and day of the <span class=\"paramref\">date</span> \nexactly match the year, month, and day of <span class=\"paramref\">secondInstance</span>; \notherwise, <strong>true</strong>.\n"
  overload: Microsoft.Health.ItemTypes.HealthServiceDateTime.op_Inequality*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">secondInstance</span> parameter is not a \n<xref href=\"Microsoft.Health.ItemTypes.HealthServiceDateTime\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.ItemTypes.HealthServiceDateTime.op_GreaterThan(Microsoft.Health.ItemTypes.HealthServiceDateTime,System.Object)
  commentId: M:Microsoft.Health.ItemTypes.HealthServiceDateTime.op_GreaterThan(Microsoft.Health.ItemTypes.HealthServiceDateTime,System.Object)
  id: op_GreaterThan(Microsoft.Health.ItemTypes.HealthServiceDateTime,System.Object)
  parent: Microsoft.Health.ItemTypes.HealthServiceDateTime
  langs:
  - csharp
  - vb
  name: GreaterThan(HealthServiceDateTime, Object)
  nameWithType: HealthServiceDateTime.GreaterThan(HealthServiceDateTime, Object)
  fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime.GreaterThan(Microsoft.Health.ItemTypes.HealthServiceDateTime, System.Object)
  type: Operator
  source:
    remote:
      path: Microsoft.Health.ItemTypes/HealthServiceDateTime.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: op_GreaterThan
    path: ../Microsoft.Health.ItemTypes/HealthServiceDateTime.cs
    startLine: 718
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets a value indicating whether the specified date is greater than \nthe specified object.\n"
  example: []
  syntax:
    content: public static bool operator>(HealthServiceDateTime date, object secondInstance)
    content.vb: Public Shared Operator>(date As HealthServiceDateTime, secondInstance As Object) As Boolean
    parameters:
    - id: date
      type: Microsoft.Health.ItemTypes.HealthServiceDateTime
      description: "\nThe date object to be compared.\n"
    - id: secondInstance
      type: System.Object
      description: "\nThe second object to be compared.\n"
    return:
      type: System.Boolean
      description: "\n<strong>true</strong> if the year, month, and day of the <span class=\"paramref\">date</span> \nis greater than the year, month, and day of <span class=\"paramref\">secondInstance</span>; \notherwise, <strong>false</strong>.\n"
  overload: Microsoft.Health.ItemTypes.HealthServiceDateTime.op_GreaterThan*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">secondInstance</span> parameter is not a <xref href=\"Microsoft.Health.ItemTypes.HealthServiceDateTime\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.ItemTypes.HealthServiceDateTime.op_LessThan(Microsoft.Health.ItemTypes.HealthServiceDateTime,System.Object)
  commentId: M:Microsoft.Health.ItemTypes.HealthServiceDateTime.op_LessThan(Microsoft.Health.ItemTypes.HealthServiceDateTime,System.Object)
  id: op_LessThan(Microsoft.Health.ItemTypes.HealthServiceDateTime,System.Object)
  parent: Microsoft.Health.ItemTypes.HealthServiceDateTime
  langs:
  - csharp
  - vb
  name: LessThan(HealthServiceDateTime, Object)
  nameWithType: HealthServiceDateTime.LessThan(HealthServiceDateTime, Object)
  fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime.LessThan(Microsoft.Health.ItemTypes.HealthServiceDateTime, System.Object)
  type: Operator
  source:
    remote:
      path: Microsoft.Health.ItemTypes/HealthServiceDateTime.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: op_LessThan
    path: ../Microsoft.Health.ItemTypes/HealthServiceDateTime.cs
    startLine: 763
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets a value indicating whether the specified date is less than the specified\nobject.\n"
  example: []
  syntax:
    content: public static bool operator <(HealthServiceDateTime date, object secondInstance)
    content.vb: Public Shared Operator <(date As HealthServiceDateTime, secondInstance As Object) As Boolean
    parameters:
    - id: date
      type: Microsoft.Health.ItemTypes.HealthServiceDateTime
      description: "\nThe date object to be compared.\n"
    - id: secondInstance
      type: System.Object
      description: "\nThe second object to be compared.\n"
    return:
      type: System.Boolean
      description: "\n<strong>true</strong> if the year, month, and day of the <span class=\"paramref\">date</span> \nis less than the year, month, and day of <span class=\"paramref\">secondInstance</span>; \notherwise, <strong>false</strong>.\n"
  overload: Microsoft.Health.ItemTypes.HealthServiceDateTime.op_LessThan*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">secondInstance</span> parameter is not a <xref href=\"Microsoft.Health.ItemTypes.HealthServiceDateTime\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Health.ItemTypes.HealthServiceDateTime
  commentId: T:Microsoft.Health.ItemTypes.HealthServiceDateTime
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: HealthServiceDateTime
  nameWithType: HealthServiceDateTime
  fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Microsoft.Health.ItemTypes
  commentId: N:Microsoft.Health.ItemTypes
  isExternal: false
  name: Microsoft.Health.ItemTypes
  nameWithType: Microsoft.Health.ItemTypes
  fullName: Microsoft.Health.ItemTypes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData
  commentId: T:Microsoft.Health.ItemTypes.HealthRecordItemData
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: HealthRecordItemData
  nameWithType: HealthRecordItemData
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData
- uid: System.IComparable
  commentId: T:System.IComparable
  parent: System
  isExternal: true
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: System.IComparable{Microsoft.Health.ItemTypes.HealthServiceDateTime}
  commentId: T:System.IComparable{Microsoft.Health.ItemTypes.HealthServiceDateTime}
  parent: System
  definition: System.IComparable`1
  name: IComparable<HealthServiceDateTime>
  nameWithType: IComparable<HealthServiceDateTime>
  fullName: System.IComparable<Microsoft.Health.ItemTypes.HealthServiceDateTime>
  nameWithType.vb: IComparable(Of HealthServiceDateTime)
  fullName.vb: System.IComparable(Of Microsoft.Health.ItemTypes.HealthServiceDateTime)
  name.vb: IComparable(Of HealthServiceDateTime)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.ItemTypes.HealthServiceDateTime
    name: HealthServiceDateTime
    nameWithType: HealthServiceDateTime
    fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.ItemTypes.HealthServiceDateTime
    name: HealthServiceDateTime
    nameWithType: HealthServiceDateTime
    fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{System.DateTime}
  commentId: T:System.IComparable{System.DateTime}
  parent: System
  definition: System.IComparable`1
  name: IComparable<DateTime>
  nameWithType: IComparable<DateTime>
  fullName: System.IComparable<System.DateTime>
  nameWithType.vb: IComparable(Of DateTime)
  fullName.vb: System.IComparable(Of System.DateTime)
  name.vb: IComparable(Of DateTime)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.HealthServiceDateTime.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<HealthServiceDateTime>()
  nameWithType: TypeHelper.ValueOrDbNull<HealthServiceDateTime>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.ItemTypes.HealthServiceDateTime>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of HealthServiceDateTime)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.ItemTypes.HealthServiceDateTime)()
  name.vb: ValueOrDbNull(Of HealthServiceDateTime)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<HealthServiceDateTime>
    nameWithType: TypeHelper.ValueOrDbNull<HealthServiceDateTime>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.ItemTypes.HealthServiceDateTime>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of HealthServiceDateTime)
    nameWithType: TypeHelper.ValueOrDbNull(Of HealthServiceDateTime)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.ItemTypes.HealthServiceDateTime)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullName.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.ItemTypes.HealthServiceDateTime.#ctor*
  commentId: Overload:Microsoft.Health.ItemTypes.HealthServiceDateTime.#ctor
  isExternal: false
  name: HealthServiceDateTime
  nameWithType: HealthServiceDateTime.HealthServiceDateTime
  fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime.HealthServiceDateTime
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: Microsoft.Health.ItemTypes.HealthServiceDate
  commentId: T:Microsoft.Health.ItemTypes.HealthServiceDate
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: HealthServiceDate
  nameWithType: HealthServiceDate
  fullName: Microsoft.Health.ItemTypes.HealthServiceDate
- uid: Microsoft.Health.ItemTypes.ApproximateTime
  commentId: T:Microsoft.Health.ItemTypes.ApproximateTime
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: ApproximateTime
  nameWithType: ApproximateTime
  fullName: Microsoft.Health.ItemTypes.ApproximateTime
- uid: Microsoft.Health.ItemTypes.CodableValue
  commentId: T:Microsoft.Health.ItemTypes.CodableValue
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: CodableValue
  nameWithType: CodableValue
  fullName: Microsoft.Health.ItemTypes.CodableValue
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.HealthRecordItemData
  isExternal: true
  name: ParseXml(XPathNavigator)
  nameWithType: HealthRecordItemData.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: HealthRecordItemData.ParseXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: HealthRecordItemData.ParseXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.HealthServiceDateTime.ParseXml*
  commentId: Overload:Microsoft.Health.ItemTypes.HealthServiceDateTime.ParseXml
  isExternal: false
  name: ParseXml
  nameWithType: HealthServiceDateTime.ParseXml
  fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime.ParseXml
- uid: System.Xml.XPath.XPathNavigator
  commentId: T:System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: true
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: false
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.HealthRecordItemData
  isExternal: true
  name: WriteXml(String, XmlWriter)
  nameWithType: HealthRecordItemData.WriteXml(String, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String, System.Xml.XmlWriter)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItemData.WriteXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItemData.WriteXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.HealthServiceDateTime.WriteXml*
  commentId: Overload:Microsoft.Health.ItemTypes.HealthServiceDateTime.WriteXml
  isExternal: false
  name: WriteXml
  nameWithType: HealthServiceDateTime.WriteXml
  fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime.WriteXml
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: Microsoft.Health.ItemTypes.HealthServiceDateTime.op_Explicit*
  commentId: Overload:Microsoft.Health.ItemTypes.HealthServiceDateTime.op_Explicit
  isExternal: false
  name: Explicit
  nameWithType: HealthServiceDateTime.Explicit
  fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime.Explicit
  nameWithType.vb: HealthServiceDateTime.Narrowing
  fullName.vb: Microsoft.Health.ItemTypes.HealthServiceDateTime.Narrowing
  name.vb: Narrowing
- uid: Microsoft.Health.ItemTypes.HealthServiceDateTime.ToDateTime*
  commentId: Overload:Microsoft.Health.ItemTypes.HealthServiceDateTime.ToDateTime
  isExternal: false
  name: ToDateTime
  nameWithType: HealthServiceDateTime.ToDateTime
  fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime.ToDateTime
- uid: Microsoft.Health.ItemTypes.HealthServiceDateTime.Date*
  commentId: Overload:Microsoft.Health.ItemTypes.HealthServiceDateTime.Date
  isExternal: false
  name: Date
  nameWithType: HealthServiceDateTime.Date
  fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime.Date
- uid: Microsoft.Health.ItemTypes.HealthServiceDateTime.Time*
  commentId: Overload:Microsoft.Health.ItemTypes.HealthServiceDateTime.Time
  isExternal: false
  name: Time
  nameWithType: HealthServiceDateTime.Time
  fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime.Time
- uid: Microsoft.Health.ItemTypes.HealthServiceDateTime.TimeZone*
  commentId: Overload:Microsoft.Health.ItemTypes.HealthServiceDateTime.TimeZone
  isExternal: false
  name: TimeZone
  nameWithType: HealthServiceDateTime.TimeZone
  fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime.TimeZone
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.HealthServiceDateTime.ToString*
  commentId: Overload:Microsoft.Health.ItemTypes.HealthServiceDateTime.ToString
  isExternal: false
  name: ToString
  nameWithType: HealthServiceDateTime.ToString
  fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime.ToString
- uid: Microsoft.Health.ItemTypes.HealthServiceDateTime.CompareTo*
  commentId: Overload:Microsoft.Health.ItemTypes.HealthServiceDateTime.CompareTo
  isExternal: false
  name: CompareTo
  nameWithType: HealthServiceDateTime.CompareTo
  fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime.CompareTo
- uid: System.IComparable.CompareTo(System.Object)
  commentId: M:System.IComparable.CompareTo(System.Object)
  parent: System.IComparable
  isExternal: true
  name: CompareTo(Object)
  nameWithType: IComparable.CompareTo(Object)
  fullName: System.IComparable.CompareTo(System.Object)
  spec.csharp:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    nameWithType: IComparable.CompareTo
    fullName: System.IComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    nameWithType: IComparable.CompareTo
    fullName: System.IComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IComparable{Microsoft.Health.ItemTypes.HealthServiceDateTime}.CompareTo(Microsoft.Health.ItemTypes.HealthServiceDateTime)
  commentId: M:System.IComparable{Microsoft.Health.ItemTypes.HealthServiceDateTime}.CompareTo(Microsoft.Health.ItemTypes.HealthServiceDateTime)
  parent: System.IComparable{Microsoft.Health.ItemTypes.HealthServiceDateTime}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(HealthServiceDateTime)
  nameWithType: IComparable<HealthServiceDateTime>.CompareTo(HealthServiceDateTime)
  fullName: System.IComparable<Microsoft.Health.ItemTypes.HealthServiceDateTime>.CompareTo(Microsoft.Health.ItemTypes.HealthServiceDateTime)
  nameWithType.vb: IComparable(Of HealthServiceDateTime).CompareTo(HealthServiceDateTime)
  fullName.vb: System.IComparable(Of Microsoft.Health.ItemTypes.HealthServiceDateTime).CompareTo(Microsoft.Health.ItemTypes.HealthServiceDateTime)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<HealthServiceDateTime>.CompareTo
    fullName: System.IComparable<Microsoft.Health.ItemTypes.HealthServiceDateTime>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.ItemTypes.HealthServiceDateTime
    name: HealthServiceDateTime
    nameWithType: HealthServiceDateTime
    fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of HealthServiceDateTime).CompareTo
    fullName: System.IComparable(Of Microsoft.Health.ItemTypes.HealthServiceDateTime).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.ItemTypes.HealthServiceDateTime
    name: HealthServiceDateTime
    nameWithType: HealthServiceDateTime
    fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable`1.CompareTo(`0)
  commentId: M:System.IComparable`1.CompareTo(`0)
  isExternal: true
  name: CompareTo(T)
  nameWithType: IComparable<T>.CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  fullName.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<T>.CompareTo
    fullName: System.IComparable<T>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of T).CompareTo
    fullName: System.IComparable(Of T).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{System.DateTime}.CompareTo(System.DateTime)
  commentId: M:System.IComparable{System.DateTime}.CompareTo(System.DateTime)
  parent: System.IComparable{System.DateTime}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(DateTime)
  nameWithType: IComparable<DateTime>.CompareTo(DateTime)
  fullName: System.IComparable<System.DateTime>.CompareTo(System.DateTime)
  nameWithType.vb: IComparable(Of DateTime).CompareTo(DateTime)
  fullName.vb: System.IComparable(Of System.DateTime).CompareTo(System.DateTime)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<DateTime>.CompareTo
    fullName: System.IComparable<System.DateTime>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of DateTime).CompareTo
    fullName: System.IComparable(Of System.DateTime).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.HealthServiceDateTime.Equals*
  commentId: Overload:Microsoft.Health.ItemTypes.HealthServiceDateTime.Equals
  isExternal: false
  name: Equals
  nameWithType: HealthServiceDateTime.Equals
  fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.HealthServiceDateTime.GetHashCode*
  commentId: Overload:Microsoft.Health.ItemTypes.HealthServiceDateTime.GetHashCode
  isExternal: false
  name: GetHashCode
  nameWithType: HealthServiceDateTime.GetHashCode
  fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime.GetHashCode
- uid: Microsoft.Health.ItemTypes.HealthServiceDateTime.op_Equality*
  commentId: Overload:Microsoft.Health.ItemTypes.HealthServiceDateTime.op_Equality
  isExternal: false
  name: Equality
  nameWithType: HealthServiceDateTime.Equality
  fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime.Equality
- uid: Microsoft.Health.ItemTypes.HealthServiceDateTime.op_Inequality*
  commentId: Overload:Microsoft.Health.ItemTypes.HealthServiceDateTime.op_Inequality
  isExternal: false
  name: Inequality
  nameWithType: HealthServiceDateTime.Inequality
  fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime.Inequality
- uid: Microsoft.Health.ItemTypes.HealthServiceDateTime.op_GreaterThan*
  commentId: Overload:Microsoft.Health.ItemTypes.HealthServiceDateTime.op_GreaterThan
  isExternal: false
  name: GreaterThan
  nameWithType: HealthServiceDateTime.GreaterThan
  fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime.GreaterThan
- uid: Microsoft.Health.ItemTypes.HealthServiceDateTime.op_LessThan*
  commentId: Overload:Microsoft.Health.ItemTypes.HealthServiceDateTime.op_LessThan
  isExternal: false
  name: LessThan
  nameWithType: HealthServiceDateTime.LessThan
  fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime.LessThan
