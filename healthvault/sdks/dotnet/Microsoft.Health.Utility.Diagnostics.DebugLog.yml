### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Utility.Diagnostics.DebugLog
  commentId: T:Microsoft.Health.Utility.Diagnostics.DebugLog
  id: DebugLog
  parent: Microsoft.Health.Utility.Diagnostics
  children:
  - Microsoft.Health.Utility.Diagnostics.DebugLog.#ctor(System.String,System.String,Microsoft.Health.Utility.Diagnostics.TraceTarget,System.String)
  - Microsoft.Health.Utility.Diagnostics.DebugLog.#ctor(System.String,System.String,System.String,Microsoft.Health.Utility.Diagnostics.TraceTarget,System.String)
  - Microsoft.Health.Utility.Diagnostics.DebugLog.AddEntries(System.Collections.Generic.IEnumerable{Microsoft.Health.Utility.Diagnostics.DebugLogEntry})
  - Microsoft.Health.Utility.Diagnostics.DebugLog.AddEntry(System.UInt16,System.Guid,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.String,System.Guid,System.Guid,System.Guid)
  - Microsoft.Health.Utility.Diagnostics.DebugLog.AddEntry(System.UInt16,System.Guid,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.String,System.Guid,System.Guid,System.Guid,System.DateTime)
  - Microsoft.Health.Utility.Diagnostics.DebugLog.BeginAddEntry(System.Collections.ObjectModel.Collection{Microsoft.Health.Utility.Diagnostics.DebugLogEntry},System.UInt16,System.Guid,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.String,System.Guid,System.Guid,System.Guid,System.DateTime)
  - Microsoft.Health.Utility.Diagnostics.DebugLog.CacheEntry(System.Collections.ObjectModel.Collection{Microsoft.Health.Utility.Diagnostics.DebugLogEntry},System.UInt16,System.Guid,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.String,System.Guid,System.Guid,System.Guid,System.DateTime,System.Boolean)
  - Microsoft.Health.Utility.Diagnostics.DebugLog.CheckThresholdsAndWriteEntries(System.Collections.ObjectModel.Collection{Microsoft.Health.Utility.Diagnostics.DebugLogEntry},Microsoft.Health.Utility.Diagnostics.ShouldCommitEntries)
  - Microsoft.Health.Utility.Diagnostics.DebugLog.Enabled
  - Microsoft.Health.Utility.Diagnostics.DebugLog.EndAddEntry(System.Collections.ObjectModel.Collection{Microsoft.Health.Utility.Diagnostics.DebugLogEntry},Microsoft.Health.Utility.Diagnostics.DebugLogContext,System.UInt16,System.Guid,System.String,System.Nullable{System.Int64},System.String,System.String,System.Guid,System.Guid,System.Guid,System.DateTime)
  - Microsoft.Health.Utility.Diagnostics.DebugLog.ReadLogSettings
  langs:
  - csharp
  - vb
  name: DebugLog
  nameWithType: DebugLog
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLog
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/DebugLog.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DebugLog
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/DebugLog.cs
    startLine: 26
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nDebug logging class.\n"
  example: []
  syntax:
    content: 'public class DebugLog : Log<DebugLogEntry>, IDisposable'
    content.vb: >-
      Public Class DebugLog
          Inherits Log(Of DebugLogEntry)
          Implements IDisposable
  inheritance:
  - System.Object
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}
  implements:
  - System.IDisposable
  inheritedMembers:
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.MaxLogIntervalMilliseconds
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.LogBatchSize
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.MaxEventLogEntryPeriodSeconds
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.LogContextName
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.DatabaseConnectionString
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.LogTableName
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.ConfigurationParametersQuery
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.TraceTarget
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.LogFileName
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.TruncateLogFile
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.CreateLoggerFailed
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.EventLogName
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.EventSourceName
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.EventLog
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.BaseLogger
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.LogParameters
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.Init
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.ReadComponentSettings
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.NormalizeEventsOnSaveToDB(System.Collections.Generic.IList{Microsoft.Health.Utility.Diagnostics.DebugLogEntry})
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.UpdateLogSettings
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.GetParameterValue(System.String,System.String)
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.GetSeverity(System.UInt16)
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.GetFunctionalArea(System.UInt16)
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.DetermineEventLogEntryType(System.UInt16)
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.SafeWriteEventLog(System.UInt16,System.UInt16,System.String,System.Exception)
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.AppendException(System.UInt16,System.String,System.Exception,System.String)
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.Dispose
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.Dispose(System.Boolean)
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.DisposeLogger
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.Utility.Diagnostics.DebugLog.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.Utility.Diagnostics.DebugLog.#ctor(System.String,System.String,Microsoft.Health.Utility.Diagnostics.TraceTarget,System.String)
  commentId: M:Microsoft.Health.Utility.Diagnostics.DebugLog.#ctor(System.String,System.String,Microsoft.Health.Utility.Diagnostics.TraceTarget,System.String)
  id: '#ctor(System.String,System.String,Microsoft.Health.Utility.Diagnostics.TraceTarget,System.String)'
  parent: Microsoft.Health.Utility.Diagnostics.DebugLog
  langs:
  - csharp
  - vb
  name: DebugLog(String, String, TraceTarget, String)
  nameWithType: DebugLog.DebugLog(String, String, TraceTarget, String)
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLog.DebugLog(System.String, System.String, Microsoft.Health.Utility.Diagnostics.TraceTarget, System.String)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/DebugLog.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/DebugLog.cs
    startLine: 35
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nClass constructor.\n"
  example: []
  syntax:
    content: public DebugLog(string loggerName, string eventLogName, TraceTarget target, string connectionString)
    content.vb: Public Sub New(loggerName As String, eventLogName As String, target As TraceTarget, connectionString As String)
    parameters:
    - id: loggerName
      type: System.String
    - id: eventLogName
      type: System.String
    - id: target
      type: Microsoft.Health.Utility.Diagnostics.TraceTarget
    - id: connectionString
      type: System.String
  overload: Microsoft.Health.Utility.Diagnostics.DebugLog.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Diagnostics.DebugLog.#ctor(System.String,System.String,System.String,Microsoft.Health.Utility.Diagnostics.TraceTarget,System.String)
  commentId: M:Microsoft.Health.Utility.Diagnostics.DebugLog.#ctor(System.String,System.String,System.String,Microsoft.Health.Utility.Diagnostics.TraceTarget,System.String)
  id: '#ctor(System.String,System.String,System.String,Microsoft.Health.Utility.Diagnostics.TraceTarget,System.String)'
  parent: Microsoft.Health.Utility.Diagnostics.DebugLog
  langs:
  - csharp
  - vb
  name: DebugLog(String, String, String, TraceTarget, String)
  nameWithType: DebugLog.DebugLog(String, String, String, TraceTarget, String)
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLog.DebugLog(System.String, System.String, System.String, Microsoft.Health.Utility.Diagnostics.TraceTarget, System.String)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/DebugLog.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/DebugLog.cs
    startLine: 52
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nClass constructor.\n"
  example: []
  syntax:
    content: public DebugLog(string loggerName, string eventLogName, string eventSourceName, TraceTarget target, string connectionString)
    content.vb: Public Sub New(loggerName As String, eventLogName As String, eventSourceName As String, target As TraceTarget, connectionString As String)
    parameters:
    - id: loggerName
      type: System.String
    - id: eventLogName
      type: System.String
    - id: eventSourceName
      type: System.String
    - id: target
      type: Microsoft.Health.Utility.Diagnostics.TraceTarget
    - id: connectionString
      type: System.String
  overload: Microsoft.Health.Utility.Diagnostics.DebugLog.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Diagnostics.DebugLog.BeginAddEntry(System.Collections.ObjectModel.Collection{Microsoft.Health.Utility.Diagnostics.DebugLogEntry},System.UInt16,System.Guid,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.String,System.Guid,System.Guid,System.Guid,System.DateTime)
  commentId: M:Microsoft.Health.Utility.Diagnostics.DebugLog.BeginAddEntry(System.Collections.ObjectModel.Collection{Microsoft.Health.Utility.Diagnostics.DebugLogEntry},System.UInt16,System.Guid,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.String,System.Guid,System.Guid,System.Guid,System.DateTime)
  id: BeginAddEntry(System.Collections.ObjectModel.Collection{Microsoft.Health.Utility.Diagnostics.DebugLogEntry},System.UInt16,System.Guid,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.String,System.Guid,System.Guid,System.Guid,System.DateTime)
  parent: Microsoft.Health.Utility.Diagnostics.DebugLog
  langs:
  - csharp
  - vb
  name: BeginAddEntry(Collection<DebugLogEntry>, UInt16, Guid, String, Nullable<Int64>, Nullable<Int64>, String, String, Guid, Guid, Guid, DateTime)
  nameWithType: DebugLog.BeginAddEntry(Collection<DebugLogEntry>, UInt16, Guid, String, Nullable<Int64>, Nullable<Int64>, String, String, Guid, Guid, Guid, DateTime)
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLog.BeginAddEntry(System.Collections.ObjectModel.Collection<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>, System.UInt16, System.Guid, System.String, System.Nullable<System.Int64>, System.Nullable<System.Int64>, System.String, System.String, System.Guid, System.Guid, System.Guid, System.DateTime)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/DebugLog.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: BeginAddEntry
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/DebugLog.cs
    startLine: 72
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nFor begin / end event pairs, this method is called to log the start event and\nget the context object that will be passed in to the EndEvent call.\n"
  example: []
  syntax:
    content: public DebugLogContext BeginAddEntry(Collection<DebugLogEntry> entries, ushort eventId, Guid requestId, string method, long ? value, long ? value2, string valueText, string context, Guid applicationId, Guid personId, Guid recordId, DateTime eventTime)
    content.vb: Public Function BeginAddEntry(entries As Collection(Of DebugLogEntry), eventId As UShort, requestId As Guid, method As String, value As Long?, value2 As Long?, valueText As String, context As String, applicationId As Guid, personId As Guid, recordId As Guid, eventTime As Date) As DebugLogContext
    parameters:
    - id: entries
      type: System.Collections.ObjectModel.Collection{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}
    - id: eventId
      type: System.UInt16
    - id: requestId
      type: System.Guid
    - id: method
      type: System.String
    - id: value
      type: System.Nullable{System.Int64}
    - id: value2
      type: System.Nullable{System.Int64}
    - id: valueText
      type: System.String
    - id: context
      type: System.String
    - id: applicationId
      type: System.Guid
    - id: personId
      type: System.Guid
    - id: recordId
      type: System.Guid
    - id: eventTime
      type: System.DateTime
    return:
      type: Microsoft.Health.Utility.Diagnostics.DebugLogContext
  overload: Microsoft.Health.Utility.Diagnostics.DebugLog.BeginAddEntry*
  nameWithType.vb: DebugLog.BeginAddEntry(Collection(Of DebugLogEntry), UInt16, Guid, String, Nullable(Of Int64), Nullable(Of Int64), String, String, Guid, Guid, Guid, DateTime)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Utility.Diagnostics.DebugLog.BeginAddEntry(System.Collections.ObjectModel.Collection(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry), System.UInt16, System.Guid, System.String, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64), System.String, System.String, System.Guid, System.Guid, System.Guid, System.DateTime)
  name.vb: BeginAddEntry(Collection(Of DebugLogEntry), UInt16, Guid, String, Nullable(Of Int64), Nullable(Of Int64), String, String, Guid, Guid, Guid, DateTime)
- uid: Microsoft.Health.Utility.Diagnostics.DebugLog.EndAddEntry(System.Collections.ObjectModel.Collection{Microsoft.Health.Utility.Diagnostics.DebugLogEntry},Microsoft.Health.Utility.Diagnostics.DebugLogContext,System.UInt16,System.Guid,System.String,System.Nullable{System.Int64},System.String,System.String,System.Guid,System.Guid,System.Guid,System.DateTime)
  commentId: M:Microsoft.Health.Utility.Diagnostics.DebugLog.EndAddEntry(System.Collections.ObjectModel.Collection{Microsoft.Health.Utility.Diagnostics.DebugLogEntry},Microsoft.Health.Utility.Diagnostics.DebugLogContext,System.UInt16,System.Guid,System.String,System.Nullable{System.Int64},System.String,System.String,System.Guid,System.Guid,System.Guid,System.DateTime)
  id: EndAddEntry(System.Collections.ObjectModel.Collection{Microsoft.Health.Utility.Diagnostics.DebugLogEntry},Microsoft.Health.Utility.Diagnostics.DebugLogContext,System.UInt16,System.Guid,System.String,System.Nullable{System.Int64},System.String,System.String,System.Guid,System.Guid,System.Guid,System.DateTime)
  parent: Microsoft.Health.Utility.Diagnostics.DebugLog
  langs:
  - csharp
  - vb
  name: EndAddEntry(Collection<DebugLogEntry>, DebugLogContext, UInt16, Guid, String, Nullable<Int64>, String, String, Guid, Guid, Guid, DateTime)
  nameWithType: DebugLog.EndAddEntry(Collection<DebugLogEntry>, DebugLogContext, UInt16, Guid, String, Nullable<Int64>, String, String, Guid, Guid, Guid, DateTime)
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLog.EndAddEntry(System.Collections.ObjectModel.Collection<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>, Microsoft.Health.Utility.Diagnostics.DebugLogContext, System.UInt16, System.Guid, System.String, System.Nullable<System.Int64>, System.String, System.String, System.Guid, System.Guid, System.Guid, System.DateTime)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/DebugLog.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: EndAddEntry
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/DebugLog.cs
    startLine: 110
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nFor begin / end event pairs, method is called to log\nthe end event pair.\n"
  example: []
  syntax:
    content: public void EndAddEntry(Collection<DebugLogEntry> entries, DebugLogContext logContext, ushort eventId, Guid requestId, string method, long ? value2, string valueText, string context, Guid applicationId, Guid personId, Guid recordId, DateTime eventTime)
    content.vb: Public Sub EndAddEntry(entries As Collection(Of DebugLogEntry), logContext As DebugLogContext, eventId As UShort, requestId As Guid, method As String, value2 As Long?, valueText As String, context As String, applicationId As Guid, personId As Guid, recordId As Guid, eventTime As Date)
    parameters:
    - id: entries
      type: System.Collections.ObjectModel.Collection{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}
    - id: logContext
      type: Microsoft.Health.Utility.Diagnostics.DebugLogContext
    - id: eventId
      type: System.UInt16
    - id: requestId
      type: System.Guid
    - id: method
      type: System.String
    - id: value2
      type: System.Nullable{System.Int64}
    - id: valueText
      type: System.String
    - id: context
      type: System.String
    - id: applicationId
      type: System.Guid
    - id: personId
      type: System.Guid
    - id: recordId
      type: System.Guid
    - id: eventTime
      type: System.DateTime
  overload: Microsoft.Health.Utility.Diagnostics.DebugLog.EndAddEntry*
  nameWithType.vb: DebugLog.EndAddEntry(Collection(Of DebugLogEntry), DebugLogContext, UInt16, Guid, String, Nullable(Of Int64), String, String, Guid, Guid, Guid, DateTime)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Utility.Diagnostics.DebugLog.EndAddEntry(System.Collections.ObjectModel.Collection(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry), Microsoft.Health.Utility.Diagnostics.DebugLogContext, System.UInt16, System.Guid, System.String, System.Nullable(Of System.Int64), System.String, System.String, System.Guid, System.Guid, System.Guid, System.DateTime)
  name.vb: EndAddEntry(Collection(Of DebugLogEntry), DebugLogContext, UInt16, Guid, String, Nullable(Of Int64), String, String, Guid, Guid, Guid, DateTime)
- uid: Microsoft.Health.Utility.Diagnostics.DebugLog.CacheEntry(System.Collections.ObjectModel.Collection{Microsoft.Health.Utility.Diagnostics.DebugLogEntry},System.UInt16,System.Guid,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.String,System.Guid,System.Guid,System.Guid,System.DateTime,System.Boolean)
  commentId: M:Microsoft.Health.Utility.Diagnostics.DebugLog.CacheEntry(System.Collections.ObjectModel.Collection{Microsoft.Health.Utility.Diagnostics.DebugLogEntry},System.UInt16,System.Guid,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.String,System.Guid,System.Guid,System.Guid,System.DateTime,System.Boolean)
  id: CacheEntry(System.Collections.ObjectModel.Collection{Microsoft.Health.Utility.Diagnostics.DebugLogEntry},System.UInt16,System.Guid,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.String,System.Guid,System.Guid,System.Guid,System.DateTime,System.Boolean)
  parent: Microsoft.Health.Utility.Diagnostics.DebugLog
  langs:
  - csharp
  - vb
  name: CacheEntry(Collection<DebugLogEntry>, UInt16, Guid, String, Nullable<Int64>, Nullable<Int64>, String, String, Guid, Guid, Guid, DateTime, Boolean)
  nameWithType: DebugLog.CacheEntry(Collection<DebugLogEntry>, UInt16, Guid, String, Nullable<Int64>, Nullable<Int64>, String, String, Guid, Guid, Guid, DateTime, Boolean)
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLog.CacheEntry(System.Collections.ObjectModel.Collection<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>, System.UInt16, System.Guid, System.String, System.Nullable<System.Int64>, System.Nullable<System.Int64>, System.String, System.String, System.Guid, System.Guid, System.Guid, System.DateTime, System.Boolean)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/DebugLog.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CacheEntry
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/DebugLog.cs
    startLine: 152
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nAdds an entry to the in memory debug log associated with this request.\nThis entry will not be committed to the database until CheckThresholdsAndWriteEntries is called.\n"
  example: []
  syntax:
    content: public void CacheEntry(Collection<DebugLogEntry> entries, ushort eventId, Guid requestId, string method, long ? value, long ? value2, string valueText, string context, Guid applicationId, Guid personId, Guid recordId, DateTime eventTime, bool error)
    content.vb: Public Sub CacheEntry(entries As Collection(Of DebugLogEntry), eventId As UShort, requestId As Guid, method As String, value As Long?, value2 As Long?, valueText As String, context As String, applicationId As Guid, personId As Guid, recordId As Guid, eventTime As Date, error As Boolean)
    parameters:
    - id: entries
      type: System.Collections.ObjectModel.Collection{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}
    - id: eventId
      type: System.UInt16
    - id: requestId
      type: System.Guid
    - id: method
      type: System.String
    - id: value
      type: System.Nullable{System.Int64}
    - id: value2
      type: System.Nullable{System.Int64}
    - id: valueText
      type: System.String
    - id: context
      type: System.String
    - id: applicationId
      type: System.Guid
    - id: personId
      type: System.Guid
    - id: recordId
      type: System.Guid
    - id: eventTime
      type: System.DateTime
    - id: error
      type: System.Boolean
  overload: Microsoft.Health.Utility.Diagnostics.DebugLog.CacheEntry*
  nameWithType.vb: DebugLog.CacheEntry(Collection(Of DebugLogEntry), UInt16, Guid, String, Nullable(Of Int64), Nullable(Of Int64), String, String, Guid, Guid, Guid, DateTime, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Utility.Diagnostics.DebugLog.CacheEntry(System.Collections.ObjectModel.Collection(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry), System.UInt16, System.Guid, System.String, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64), System.String, System.String, System.Guid, System.Guid, System.Guid, System.DateTime, System.Boolean)
  name.vb: CacheEntry(Collection(Of DebugLogEntry), UInt16, Guid, String, Nullable(Of Int64), Nullable(Of Int64), String, String, Guid, Guid, Guid, DateTime, Boolean)
- uid: Microsoft.Health.Utility.Diagnostics.DebugLog.CheckThresholdsAndWriteEntries(System.Collections.ObjectModel.Collection{Microsoft.Health.Utility.Diagnostics.DebugLogEntry},Microsoft.Health.Utility.Diagnostics.ShouldCommitEntries)
  commentId: M:Microsoft.Health.Utility.Diagnostics.DebugLog.CheckThresholdsAndWriteEntries(System.Collections.ObjectModel.Collection{Microsoft.Health.Utility.Diagnostics.DebugLogEntry},Microsoft.Health.Utility.Diagnostics.ShouldCommitEntries)
  id: CheckThresholdsAndWriteEntries(System.Collections.ObjectModel.Collection{Microsoft.Health.Utility.Diagnostics.DebugLogEntry},Microsoft.Health.Utility.Diagnostics.ShouldCommitEntries)
  parent: Microsoft.Health.Utility.Diagnostics.DebugLog
  langs:
  - csharp
  - vb
  name: CheckThresholdsAndWriteEntries(Collection<DebugLogEntry>, ShouldCommitEntries)
  nameWithType: DebugLog.CheckThresholdsAndWriteEntries(Collection<DebugLogEntry>, ShouldCommitEntries)
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLog.CheckThresholdsAndWriteEntries(System.Collections.ObjectModel.Collection<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>, Microsoft.Health.Utility.Diagnostics.ShouldCommitEntries)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/DebugLog.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CheckThresholdsAndWriteEntries
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/DebugLog.cs
    startLine: 194
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nSignals the end of a new debug log request. The log entries associated with this \nrequest will be committed to the database (if they violate the relevant threshold\nconstraints).\n"
  example: []
  syntax:
    content: public void CheckThresholdsAndWriteEntries(Collection<DebugLogEntry> entries, ShouldCommitEntries checkThresholds)
    content.vb: Public Sub CheckThresholdsAndWriteEntries(entries As Collection(Of DebugLogEntry), checkThresholds As ShouldCommitEntries)
    parameters:
    - id: entries
      type: System.Collections.ObjectModel.Collection{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}
    - id: checkThresholds
      type: Microsoft.Health.Utility.Diagnostics.ShouldCommitEntries
  overload: Microsoft.Health.Utility.Diagnostics.DebugLog.CheckThresholdsAndWriteEntries*
  nameWithType.vb: DebugLog.CheckThresholdsAndWriteEntries(Collection(Of DebugLogEntry), ShouldCommitEntries)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Utility.Diagnostics.DebugLog.CheckThresholdsAndWriteEntries(System.Collections.ObjectModel.Collection(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry), Microsoft.Health.Utility.Diagnostics.ShouldCommitEntries)
  name.vb: CheckThresholdsAndWriteEntries(Collection(Of DebugLogEntry), ShouldCommitEntries)
- uid: Microsoft.Health.Utility.Diagnostics.DebugLog.AddEntry(System.UInt16,System.Guid,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.String,System.Guid,System.Guid,System.Guid)
  commentId: M:Microsoft.Health.Utility.Diagnostics.DebugLog.AddEntry(System.UInt16,System.Guid,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.String,System.Guid,System.Guid,System.Guid)
  id: AddEntry(System.UInt16,System.Guid,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.String,System.Guid,System.Guid,System.Guid)
  parent: Microsoft.Health.Utility.Diagnostics.DebugLog
  langs:
  - csharp
  - vb
  name: AddEntry(UInt16, Guid, String, Nullable<Int64>, Nullable<Int64>, String, String, Guid, Guid, Guid)
  nameWithType: DebugLog.AddEntry(UInt16, Guid, String, Nullable<Int64>, Nullable<Int64>, String, String, Guid, Guid, Guid)
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLog.AddEntry(System.UInt16, System.Guid, System.String, System.Nullable<System.Int64>, System.Nullable<System.Int64>, System.String, System.String, System.Guid, System.Guid, System.Guid)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/DebugLog.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AddEntry
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/DebugLog.cs
    startLine: 207
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nAdds an entry to the debug log.\n"
  example: []
  syntax:
    content: public void AddEntry(ushort debugLogEvent, Guid requestId, string method, long ? value, long ? value2, string valueText, string context, Guid applicationId, Guid personId, Guid recordId)
    content.vb: Public Sub AddEntry(debugLogEvent As UShort, requestId As Guid, method As String, value As Long?, value2 As Long?, valueText As String, context As String, applicationId As Guid, personId As Guid, recordId As Guid)
    parameters:
    - id: debugLogEvent
      type: System.UInt16
    - id: requestId
      type: System.Guid
    - id: method
      type: System.String
    - id: value
      type: System.Nullable{System.Int64}
    - id: value2
      type: System.Nullable{System.Int64}
    - id: valueText
      type: System.String
    - id: context
      type: System.String
    - id: applicationId
      type: System.Guid
    - id: personId
      type: System.Guid
    - id: recordId
      type: System.Guid
  overload: Microsoft.Health.Utility.Diagnostics.DebugLog.AddEntry*
  nameWithType.vb: DebugLog.AddEntry(UInt16, Guid, String, Nullable(Of Int64), Nullable(Of Int64), String, String, Guid, Guid, Guid)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Utility.Diagnostics.DebugLog.AddEntry(System.UInt16, System.Guid, System.String, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64), System.String, System.String, System.Guid, System.Guid, System.Guid)
  name.vb: AddEntry(UInt16, Guid, String, Nullable(Of Int64), Nullable(Of Int64), String, String, Guid, Guid, Guid)
- uid: Microsoft.Health.Utility.Diagnostics.DebugLog.AddEntry(System.UInt16,System.Guid,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.String,System.Guid,System.Guid,System.Guid,System.DateTime)
  commentId: M:Microsoft.Health.Utility.Diagnostics.DebugLog.AddEntry(System.UInt16,System.Guid,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.String,System.Guid,System.Guid,System.Guid,System.DateTime)
  id: AddEntry(System.UInt16,System.Guid,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.String,System.Guid,System.Guid,System.Guid,System.DateTime)
  parent: Microsoft.Health.Utility.Diagnostics.DebugLog
  langs:
  - csharp
  - vb
  name: AddEntry(UInt16, Guid, String, Nullable<Int64>, Nullable<Int64>, String, String, Guid, Guid, Guid, DateTime)
  nameWithType: DebugLog.AddEntry(UInt16, Guid, String, Nullable<Int64>, Nullable<Int64>, String, String, Guid, Guid, Guid, DateTime)
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLog.AddEntry(System.UInt16, System.Guid, System.String, System.Nullable<System.Int64>, System.Nullable<System.Int64>, System.String, System.String, System.Guid, System.Guid, System.Guid, System.DateTime)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/DebugLog.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AddEntry
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/DebugLog.cs
    startLine: 236
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nAdds an entry to the debug log.\n"
  example: []
  syntax:
    content: public void AddEntry(ushort debugLogEvent, Guid requestId, string method, long ? value, long ? value2, string valueText, string context, Guid applicationId, Guid personId, Guid recordId, DateTime eventTime)
    content.vb: Public Sub AddEntry(debugLogEvent As UShort, requestId As Guid, method As String, value As Long?, value2 As Long?, valueText As String, context As String, applicationId As Guid, personId As Guid, recordId As Guid, eventTime As Date)
    parameters:
    - id: debugLogEvent
      type: System.UInt16
    - id: requestId
      type: System.Guid
    - id: method
      type: System.String
    - id: value
      type: System.Nullable{System.Int64}
    - id: value2
      type: System.Nullable{System.Int64}
    - id: valueText
      type: System.String
    - id: context
      type: System.String
    - id: applicationId
      type: System.Guid
    - id: personId
      type: System.Guid
    - id: recordId
      type: System.Guid
    - id: eventTime
      type: System.DateTime
  overload: Microsoft.Health.Utility.Diagnostics.DebugLog.AddEntry*
  nameWithType.vb: DebugLog.AddEntry(UInt16, Guid, String, Nullable(Of Int64), Nullable(Of Int64), String, String, Guid, Guid, Guid, DateTime)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Utility.Diagnostics.DebugLog.AddEntry(System.UInt16, System.Guid, System.String, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64), System.String, System.String, System.Guid, System.Guid, System.Guid, System.DateTime)
  name.vb: AddEntry(UInt16, Guid, String, Nullable(Of Int64), Nullable(Of Int64), String, String, Guid, Guid, Guid, DateTime)
- uid: Microsoft.Health.Utility.Diagnostics.DebugLog.AddEntries(System.Collections.Generic.IEnumerable{Microsoft.Health.Utility.Diagnostics.DebugLogEntry})
  commentId: M:Microsoft.Health.Utility.Diagnostics.DebugLog.AddEntries(System.Collections.Generic.IEnumerable{Microsoft.Health.Utility.Diagnostics.DebugLogEntry})
  id: AddEntries(System.Collections.Generic.IEnumerable{Microsoft.Health.Utility.Diagnostics.DebugLogEntry})
  parent: Microsoft.Health.Utility.Diagnostics.DebugLog
  langs:
  - csharp
  - vb
  name: AddEntries(IEnumerable<DebugLogEntry>)
  nameWithType: DebugLog.AddEntries(IEnumerable<DebugLogEntry>)
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLog.AddEntries(System.Collections.Generic.IEnumerable<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/DebugLog.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AddEntries
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/DebugLog.cs
    startLine: 272
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nAdds a range of entries to the log.\n"
  example: []
  syntax:
    content: public void AddEntries(IEnumerable<DebugLogEntry> entries)
    content.vb: Public Sub AddEntries(entries As IEnumerable(Of DebugLogEntry))
    parameters:
    - id: entries
      type: System.Collections.Generic.IEnumerable{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}
  overload: Microsoft.Health.Utility.Diagnostics.DebugLog.AddEntries*
  nameWithType.vb: DebugLog.AddEntries(IEnumerable(Of DebugLogEntry))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Utility.Diagnostics.DebugLog.AddEntries(System.Collections.Generic.IEnumerable(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry))
  name.vb: AddEntries(IEnumerable(Of DebugLogEntry))
- uid: Microsoft.Health.Utility.Diagnostics.DebugLog.ReadLogSettings
  commentId: M:Microsoft.Health.Utility.Diagnostics.DebugLog.ReadLogSettings
  id: ReadLogSettings
  parent: Microsoft.Health.Utility.Diagnostics.DebugLog
  langs:
  - csharp
  - vb
  name: ReadLogSettings()
  nameWithType: DebugLog.ReadLogSettings()
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLog.ReadLogSettings()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/DebugLog.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ReadLogSettings
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/DebugLog.cs
    startLine: 308
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nReads the TraceLog specific settings.\n"
  example: []
  syntax:
    content: protected override bool ReadLogSettings()
    content.vb: Protected Overrides Function ReadLogSettings As Boolean
    return:
      type: System.Boolean
  overridden: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.ReadLogSettings
  overload: Microsoft.Health.Utility.Diagnostics.DebugLog.ReadLogSettings*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Health.Utility.Diagnostics.DebugLog.Enabled
  commentId: P:Microsoft.Health.Utility.Diagnostics.DebugLog.Enabled
  id: Enabled
  parent: Microsoft.Health.Utility.Diagnostics.DebugLog
  langs:
  - csharp
  - vb
  name: Enabled
  nameWithType: DebugLog.Enabled
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLog.Enabled
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/DebugLog.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Enabled
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/DebugLog.cs
    startLine: 330
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nTrue if debug logging is enabled.\n"
  example: []
  syntax:
    content: public bool Enabled { get; }
    content.vb: Public ReadOnly Property Enabled As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.Health.Utility.Diagnostics.DebugLog.Enabled*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Health.Utility.Diagnostics
  commentId: N:Microsoft.Health.Utility.Diagnostics
  isExternal: false
  name: Microsoft.Health.Utility.Diagnostics
  nameWithType: Microsoft.Health.Utility.Diagnostics
  fullName: Microsoft.Health.Utility.Diagnostics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}
  commentId: T:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}
  parent: Microsoft.Health.Utility.Diagnostics
  definition: Microsoft.Health.Utility.Diagnostics.Log`1
  name: Log<DebugLogEntry>
  nameWithType: Log<DebugLogEntry>
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>
  nameWithType.vb: Log(Of DebugLogEntry)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry)
  name.vb: Log(Of DebugLogEntry)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1
    name: Log
    nameWithType: Log
    fullName: Microsoft.Health.Utility.Diagnostics.Log
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.Utility.Diagnostics.DebugLogEntry
    name: DebugLogEntry
    nameWithType: DebugLogEntry
    fullName: Microsoft.Health.Utility.Diagnostics.DebugLogEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1
    name: Log
    nameWithType: Log
    fullName: Microsoft.Health.Utility.Diagnostics.Log
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.Utility.Diagnostics.DebugLogEntry
    name: DebugLogEntry
    nameWithType: DebugLogEntry
    fullName: Microsoft.Health.Utility.Diagnostics.DebugLogEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.MaxLogIntervalMilliseconds
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.MaxLogIntervalMilliseconds
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.MaxLogIntervalMilliseconds
  name: MaxLogIntervalMilliseconds
  nameWithType: Log<DebugLogEntry>.MaxLogIntervalMilliseconds
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>.MaxLogIntervalMilliseconds
  nameWithType.vb: Log(Of DebugLogEntry).MaxLogIntervalMilliseconds
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry).MaxLogIntervalMilliseconds
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.LogBatchSize
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.LogBatchSize
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.LogBatchSize
  name: LogBatchSize
  nameWithType: Log<DebugLogEntry>.LogBatchSize
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>.LogBatchSize
  nameWithType.vb: Log(Of DebugLogEntry).LogBatchSize
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry).LogBatchSize
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.MaxEventLogEntryPeriodSeconds
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.MaxEventLogEntryPeriodSeconds
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.MaxEventLogEntryPeriodSeconds
  name: MaxEventLogEntryPeriodSeconds
  nameWithType: Log<DebugLogEntry>.MaxEventLogEntryPeriodSeconds
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>.MaxEventLogEntryPeriodSeconds
  nameWithType.vb: Log(Of DebugLogEntry).MaxEventLogEntryPeriodSeconds
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry).MaxEventLogEntryPeriodSeconds
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.LogContextName
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.LogContextName
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.LogContextName
  name: LogContextName
  nameWithType: Log<DebugLogEntry>.LogContextName
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>.LogContextName
  nameWithType.vb: Log(Of DebugLogEntry).LogContextName
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry).LogContextName
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.DatabaseConnectionString
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.DatabaseConnectionString
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.DatabaseConnectionString
  name: DatabaseConnectionString
  nameWithType: Log<DebugLogEntry>.DatabaseConnectionString
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>.DatabaseConnectionString
  nameWithType.vb: Log(Of DebugLogEntry).DatabaseConnectionString
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry).DatabaseConnectionString
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.LogTableName
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.LogTableName
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.LogTableName
  name: LogTableName
  nameWithType: Log<DebugLogEntry>.LogTableName
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>.LogTableName
  nameWithType.vb: Log(Of DebugLogEntry).LogTableName
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry).LogTableName
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.ConfigurationParametersQuery
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.ConfigurationParametersQuery
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.ConfigurationParametersQuery
  name: ConfigurationParametersQuery
  nameWithType: Log<DebugLogEntry>.ConfigurationParametersQuery
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>.ConfigurationParametersQuery
  nameWithType.vb: Log(Of DebugLogEntry).ConfigurationParametersQuery
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry).ConfigurationParametersQuery
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.TraceTarget
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.TraceTarget
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.TraceTarget
  name: TraceTarget
  nameWithType: Log<DebugLogEntry>.TraceTarget
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>.TraceTarget
  nameWithType.vb: Log(Of DebugLogEntry).TraceTarget
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry).TraceTarget
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.LogFileName
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.LogFileName
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.LogFileName
  name: LogFileName
  nameWithType: Log<DebugLogEntry>.LogFileName
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>.LogFileName
  nameWithType.vb: Log(Of DebugLogEntry).LogFileName
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry).LogFileName
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.TruncateLogFile
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.TruncateLogFile
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.TruncateLogFile
  name: TruncateLogFile
  nameWithType: Log<DebugLogEntry>.TruncateLogFile
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>.TruncateLogFile
  nameWithType.vb: Log(Of DebugLogEntry).TruncateLogFile
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry).TruncateLogFile
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.CreateLoggerFailed
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.CreateLoggerFailed
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.CreateLoggerFailed
  name: CreateLoggerFailed
  nameWithType: Log<DebugLogEntry>.CreateLoggerFailed
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>.CreateLoggerFailed
  nameWithType.vb: Log(Of DebugLogEntry).CreateLoggerFailed
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry).CreateLoggerFailed
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.EventLogName
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.EventLogName
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.EventLogName
  name: EventLogName
  nameWithType: Log<DebugLogEntry>.EventLogName
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>.EventLogName
  nameWithType.vb: Log(Of DebugLogEntry).EventLogName
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry).EventLogName
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.EventSourceName
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.EventSourceName
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.EventSourceName
  name: EventSourceName
  nameWithType: Log<DebugLogEntry>.EventSourceName
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>.EventSourceName
  nameWithType.vb: Log(Of DebugLogEntry).EventSourceName
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry).EventSourceName
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.EventLog
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.EventLog
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.EventLog
  name: EventLog
  nameWithType: Log<DebugLogEntry>.EventLog
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>.EventLog
  nameWithType.vb: Log(Of DebugLogEntry).EventLog
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry).EventLog
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.BaseLogger
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.BaseLogger
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.BaseLogger
  name: BaseLogger
  nameWithType: Log<DebugLogEntry>.BaseLogger
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>.BaseLogger
  nameWithType.vb: Log(Of DebugLogEntry).BaseLogger
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry).BaseLogger
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.LogParameters
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.LogParameters
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.LogParameters
  name: LogParameters
  nameWithType: Log<DebugLogEntry>.LogParameters
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>.LogParameters
  nameWithType.vb: Log(Of DebugLogEntry).LogParameters
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry).LogParameters
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.Init
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.Init
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.Init
  name: Init()
  nameWithType: Log<DebugLogEntry>.Init()
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>.Init()
  nameWithType.vb: Log(Of DebugLogEntry).Init()
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry).Init()
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.Init
    name: Init
    nameWithType: Log<DebugLogEntry>.Init
    fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>.Init
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.Init
    name: Init
    nameWithType: Log(Of DebugLogEntry).Init
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry).Init
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.ReadComponentSettings
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.ReadComponentSettings
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.ReadComponentSettings
  name: ReadComponentSettings()
  nameWithType: Log<DebugLogEntry>.ReadComponentSettings()
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>.ReadComponentSettings()
  nameWithType.vb: Log(Of DebugLogEntry).ReadComponentSettings()
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry).ReadComponentSettings()
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.ReadComponentSettings
    name: ReadComponentSettings
    nameWithType: Log<DebugLogEntry>.ReadComponentSettings
    fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>.ReadComponentSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.ReadComponentSettings
    name: ReadComponentSettings
    nameWithType: Log(Of DebugLogEntry).ReadComponentSettings
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry).ReadComponentSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.NormalizeEventsOnSaveToDB(System.Collections.Generic.IList{Microsoft.Health.Utility.Diagnostics.DebugLogEntry})
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.NormalizeEventsOnSaveToDB(System.Collections.Generic.IList{Microsoft.Health.Utility.Diagnostics.DebugLogEntry})
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.NormalizeEventsOnSaveToDB(System.Collections.Generic.IList{`0})
  name: NormalizeEventsOnSaveToDB(IList<DebugLogEntry>)
  nameWithType: Log<DebugLogEntry>.NormalizeEventsOnSaveToDB(IList<DebugLogEntry>)
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>.NormalizeEventsOnSaveToDB(System.Collections.Generic.IList<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>)
  nameWithType.vb: Log(Of DebugLogEntry).NormalizeEventsOnSaveToDB(IList(Of DebugLogEntry))
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry).NormalizeEventsOnSaveToDB(System.Collections.Generic.IList(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry))
  name.vb: NormalizeEventsOnSaveToDB(IList(Of DebugLogEntry))
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.NormalizeEventsOnSaveToDB(System.Collections.Generic.IList{`0})
    name: NormalizeEventsOnSaveToDB
    nameWithType: Log<DebugLogEntry>.NormalizeEventsOnSaveToDB
    fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>.NormalizeEventsOnSaveToDB
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.Utility.Diagnostics.DebugLogEntry
    name: DebugLogEntry
    nameWithType: DebugLogEntry
    fullName: Microsoft.Health.Utility.Diagnostics.DebugLogEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.NormalizeEventsOnSaveToDB(System.Collections.Generic.IList{`0})
    name: NormalizeEventsOnSaveToDB
    nameWithType: Log(Of DebugLogEntry).NormalizeEventsOnSaveToDB
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry).NormalizeEventsOnSaveToDB
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.Utility.Diagnostics.DebugLogEntry
    name: DebugLogEntry
    nameWithType: DebugLogEntry
    fullName: Microsoft.Health.Utility.Diagnostics.DebugLogEntry
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.UpdateLogSettings
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.UpdateLogSettings
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.UpdateLogSettings
  name: UpdateLogSettings()
  nameWithType: Log<DebugLogEntry>.UpdateLogSettings()
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>.UpdateLogSettings()
  nameWithType.vb: Log(Of DebugLogEntry).UpdateLogSettings()
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry).UpdateLogSettings()
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.UpdateLogSettings
    name: UpdateLogSettings
    nameWithType: Log<DebugLogEntry>.UpdateLogSettings
    fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>.UpdateLogSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.UpdateLogSettings
    name: UpdateLogSettings
    nameWithType: Log(Of DebugLogEntry).UpdateLogSettings
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry).UpdateLogSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.GetParameterValue(System.String,System.String)
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.GetParameterValue(System.String,System.String)
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.GetParameterValue(System.String,System.String)
  name: GetParameterValue(String, String)
  nameWithType: Log<DebugLogEntry>.GetParameterValue(String, String)
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>.GetParameterValue(System.String, System.String)
  nameWithType.vb: Log(Of DebugLogEntry).GetParameterValue(String, String)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry).GetParameterValue(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.GetParameterValue(System.String,System.String)
    name: GetParameterValue
    nameWithType: Log<DebugLogEntry>.GetParameterValue
    fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>.GetParameterValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.GetParameterValue(System.String,System.String)
    name: GetParameterValue
    nameWithType: Log(Of DebugLogEntry).GetParameterValue
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry).GetParameterValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.GetSeverity(System.UInt16)
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.GetSeverity(System.UInt16)
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.GetSeverity(System.UInt16)
  name: GetSeverity(UInt16)
  nameWithType: Log<DebugLogEntry>.GetSeverity(UInt16)
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>.GetSeverity(System.UInt16)
  nameWithType.vb: Log(Of DebugLogEntry).GetSeverity(UInt16)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry).GetSeverity(System.UInt16)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.GetSeverity(System.UInt16)
    name: GetSeverity
    nameWithType: Log<DebugLogEntry>.GetSeverity
    fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>.GetSeverity
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.GetSeverity(System.UInt16)
    name: GetSeverity
    nameWithType: Log(Of DebugLogEntry).GetSeverity
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry).GetSeverity
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.GetFunctionalArea(System.UInt16)
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.GetFunctionalArea(System.UInt16)
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.GetFunctionalArea(System.UInt16)
  name: GetFunctionalArea(UInt16)
  nameWithType: Log<DebugLogEntry>.GetFunctionalArea(UInt16)
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>.GetFunctionalArea(System.UInt16)
  nameWithType.vb: Log(Of DebugLogEntry).GetFunctionalArea(UInt16)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry).GetFunctionalArea(System.UInt16)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.GetFunctionalArea(System.UInt16)
    name: GetFunctionalArea
    nameWithType: Log<DebugLogEntry>.GetFunctionalArea
    fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>.GetFunctionalArea
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.GetFunctionalArea(System.UInt16)
    name: GetFunctionalArea
    nameWithType: Log(Of DebugLogEntry).GetFunctionalArea
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry).GetFunctionalArea
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.DetermineEventLogEntryType(System.UInt16)
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.DetermineEventLogEntryType(System.UInt16)
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.DetermineEventLogEntryType(System.UInt16)
  name: DetermineEventLogEntryType(UInt16)
  nameWithType: Log<DebugLogEntry>.DetermineEventLogEntryType(UInt16)
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>.DetermineEventLogEntryType(System.UInt16)
  nameWithType.vb: Log(Of DebugLogEntry).DetermineEventLogEntryType(UInt16)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry).DetermineEventLogEntryType(System.UInt16)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.DetermineEventLogEntryType(System.UInt16)
    name: DetermineEventLogEntryType
    nameWithType: Log<DebugLogEntry>.DetermineEventLogEntryType
    fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>.DetermineEventLogEntryType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.DetermineEventLogEntryType(System.UInt16)
    name: DetermineEventLogEntryType
    nameWithType: Log(Of DebugLogEntry).DetermineEventLogEntryType
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry).DetermineEventLogEntryType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.SafeWriteEventLog(System.UInt16,System.UInt16,System.String,System.Exception)
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.SafeWriteEventLog(System.UInt16,System.UInt16,System.String,System.Exception)
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.SafeWriteEventLog(System.UInt16,System.UInt16,System.String,System.Exception)
  name: SafeWriteEventLog(UInt16, UInt16, String, Exception)
  nameWithType: Log<DebugLogEntry>.SafeWriteEventLog(UInt16, UInt16, String, Exception)
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>.SafeWriteEventLog(System.UInt16, System.UInt16, System.String, System.Exception)
  nameWithType.vb: Log(Of DebugLogEntry).SafeWriteEventLog(UInt16, UInt16, String, Exception)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry).SafeWriteEventLog(System.UInt16, System.UInt16, System.String, System.Exception)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.SafeWriteEventLog(System.UInt16,System.UInt16,System.String,System.Exception)
    name: SafeWriteEventLog
    nameWithType: Log<DebugLogEntry>.SafeWriteEventLog
    fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>.SafeWriteEventLog
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.SafeWriteEventLog(System.UInt16,System.UInt16,System.String,System.Exception)
    name: SafeWriteEventLog
    nameWithType: Log(Of DebugLogEntry).SafeWriteEventLog
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry).SafeWriteEventLog
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.AppendException(System.UInt16,System.String,System.Exception,System.String)
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.AppendException(System.UInt16,System.String,System.Exception,System.String)
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.AppendException(System.UInt16,System.String,System.Exception,System.String)
  name: AppendException(UInt16, String, Exception, String)
  nameWithType: Log<DebugLogEntry>.AppendException(UInt16, String, Exception, String)
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>.AppendException(System.UInt16, System.String, System.Exception, System.String)
  nameWithType.vb: Log(Of DebugLogEntry).AppendException(UInt16, String, Exception, String)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry).AppendException(System.UInt16, System.String, System.Exception, System.String)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.AppendException(System.UInt16,System.String,System.Exception,System.String)
    name: AppendException
    nameWithType: Log<DebugLogEntry>.AppendException
    fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>.AppendException
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.AppendException(System.UInt16,System.String,System.Exception,System.String)
    name: AppendException
    nameWithType: Log(Of DebugLogEntry).AppendException
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry).AppendException
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.Dispose
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.Dispose
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.Dispose
  name: Dispose()
  nameWithType: Log<DebugLogEntry>.Dispose()
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>.Dispose()
  nameWithType.vb: Log(Of DebugLogEntry).Dispose()
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry).Dispose()
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.Dispose
    name: Dispose
    nameWithType: Log<DebugLogEntry>.Dispose
    fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.Dispose
    name: Dispose
    nameWithType: Log(Of DebugLogEntry).Dispose
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry).Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.Dispose(System.Boolean)
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.Dispose(System.Boolean)
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.Dispose(System.Boolean)
  name: Dispose(Boolean)
  nameWithType: Log<DebugLogEntry>.Dispose(Boolean)
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>.Dispose(System.Boolean)
  nameWithType.vb: Log(Of DebugLogEntry).Dispose(Boolean)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry).Dispose(System.Boolean)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.Dispose(System.Boolean)
    name: Dispose
    nameWithType: Log<DebugLogEntry>.Dispose
    fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.Dispose(System.Boolean)
    name: Dispose
    nameWithType: Log(Of DebugLogEntry).Dispose
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry).Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.DisposeLogger
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.DisposeLogger
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.DisposeLogger
  name: DisposeLogger()
  nameWithType: Log<DebugLogEntry>.DisposeLogger()
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>.DisposeLogger()
  nameWithType.vb: Log(Of DebugLogEntry).DisposeLogger()
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry).DisposeLogger()
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.DisposeLogger
    name: DisposeLogger
    nameWithType: Log<DebugLogEntry>.DisposeLogger
    fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>.DisposeLogger
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.DisposeLogger
    name: DisposeLogger
    nameWithType: Log(Of DebugLogEntry).DisposeLogger
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry).DisposeLogger
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.DebugLog.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<DebugLog>()
  nameWithType: TypeHelper.ValueOrDbNull<DebugLog>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Utility.Diagnostics.DebugLog>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of DebugLog)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Utility.Diagnostics.DebugLog)()
  name.vb: ValueOrDbNull(Of DebugLog)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<DebugLog>
    nameWithType: TypeHelper.ValueOrDbNull<DebugLog>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Utility.Diagnostics.DebugLog>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of DebugLog)
    nameWithType: TypeHelper.ValueOrDbNull(Of DebugLog)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Utility.Diagnostics.DebugLog)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Utility.Diagnostics.Log`1
  commentId: T:Microsoft.Health.Utility.Diagnostics.Log`1
  isExternal: false
  name: Log<T>
  nameWithType: Log<T>
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>
  nameWithType.vb: Log(Of T)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T)
  name.vb: Log(Of T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1
    name: Log
    nameWithType: Log
    fullName: Microsoft.Health.Utility.Diagnostics.Log
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1
    name: Log
    nameWithType: Log
    fullName: Microsoft.Health.Utility.Diagnostics.Log
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.MaxLogIntervalMilliseconds
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log`1.MaxLogIntervalMilliseconds
  isExternal: false
  name: MaxLogIntervalMilliseconds
  nameWithType: Log<T>.MaxLogIntervalMilliseconds
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.MaxLogIntervalMilliseconds
  nameWithType.vb: Log(Of T).MaxLogIntervalMilliseconds
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).MaxLogIntervalMilliseconds
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.LogBatchSize
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log`1.LogBatchSize
  isExternal: false
  name: LogBatchSize
  nameWithType: Log<T>.LogBatchSize
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.LogBatchSize
  nameWithType.vb: Log(Of T).LogBatchSize
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).LogBatchSize
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.MaxEventLogEntryPeriodSeconds
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log`1.MaxEventLogEntryPeriodSeconds
  isExternal: false
  name: MaxEventLogEntryPeriodSeconds
  nameWithType: Log<T>.MaxEventLogEntryPeriodSeconds
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.MaxEventLogEntryPeriodSeconds
  nameWithType.vb: Log(Of T).MaxEventLogEntryPeriodSeconds
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).MaxEventLogEntryPeriodSeconds
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.LogContextName
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log`1.LogContextName
  isExternal: false
  name: LogContextName
  nameWithType: Log<T>.LogContextName
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.LogContextName
  nameWithType.vb: Log(Of T).LogContextName
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).LogContextName
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.DatabaseConnectionString
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log`1.DatabaseConnectionString
  isExternal: false
  name: DatabaseConnectionString
  nameWithType: Log<T>.DatabaseConnectionString
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.DatabaseConnectionString
  nameWithType.vb: Log(Of T).DatabaseConnectionString
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).DatabaseConnectionString
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.LogTableName
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log`1.LogTableName
  isExternal: false
  name: LogTableName
  nameWithType: Log<T>.LogTableName
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.LogTableName
  nameWithType.vb: Log(Of T).LogTableName
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).LogTableName
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.ConfigurationParametersQuery
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log`1.ConfigurationParametersQuery
  isExternal: false
  name: ConfigurationParametersQuery
  nameWithType: Log<T>.ConfigurationParametersQuery
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.ConfigurationParametersQuery
  nameWithType.vb: Log(Of T).ConfigurationParametersQuery
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).ConfigurationParametersQuery
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.TraceTarget
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log`1.TraceTarget
  isExternal: false
  name: TraceTarget
  nameWithType: Log<T>.TraceTarget
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.TraceTarget
  nameWithType.vb: Log(Of T).TraceTarget
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).TraceTarget
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.LogFileName
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log`1.LogFileName
  isExternal: false
  name: LogFileName
  nameWithType: Log<T>.LogFileName
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.LogFileName
  nameWithType.vb: Log(Of T).LogFileName
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).LogFileName
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.TruncateLogFile
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log`1.TruncateLogFile
  isExternal: false
  name: TruncateLogFile
  nameWithType: Log<T>.TruncateLogFile
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.TruncateLogFile
  nameWithType.vb: Log(Of T).TruncateLogFile
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).TruncateLogFile
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.CreateLoggerFailed
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log`1.CreateLoggerFailed
  isExternal: false
  name: CreateLoggerFailed
  nameWithType: Log<T>.CreateLoggerFailed
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.CreateLoggerFailed
  nameWithType.vb: Log(Of T).CreateLoggerFailed
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).CreateLoggerFailed
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.EventLogName
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log`1.EventLogName
  isExternal: false
  name: EventLogName
  nameWithType: Log<T>.EventLogName
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.EventLogName
  nameWithType.vb: Log(Of T).EventLogName
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).EventLogName
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.EventSourceName
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log`1.EventSourceName
  isExternal: false
  name: EventSourceName
  nameWithType: Log<T>.EventSourceName
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.EventSourceName
  nameWithType.vb: Log(Of T).EventSourceName
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).EventSourceName
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.EventLog
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log`1.EventLog
  isExternal: false
  name: EventLog
  nameWithType: Log<T>.EventLog
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.EventLog
  nameWithType.vb: Log(Of T).EventLog
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).EventLog
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.BaseLogger
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log`1.BaseLogger
  isExternal: false
  name: BaseLogger
  nameWithType: Log<T>.BaseLogger
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.BaseLogger
  nameWithType.vb: Log(Of T).BaseLogger
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).BaseLogger
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.LogParameters
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log`1.LogParameters
  isExternal: false
  name: LogParameters
  nameWithType: Log<T>.LogParameters
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.LogParameters
  nameWithType.vb: Log(Of T).LogParameters
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).LogParameters
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.Init
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log`1.Init
  isExternal: false
  name: Init()
  nameWithType: Log<T>.Init()
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.Init()
  nameWithType.vb: Log(Of T).Init()
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).Init()
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.Init
    name: Init
    nameWithType: Log<T>.Init
    fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.Init
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.Init
    name: Init
    nameWithType: Log(Of T).Init
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of T).Init
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.ReadComponentSettings
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log`1.ReadComponentSettings
  isExternal: false
  name: ReadComponentSettings()
  nameWithType: Log<T>.ReadComponentSettings()
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.ReadComponentSettings()
  nameWithType.vb: Log(Of T).ReadComponentSettings()
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).ReadComponentSettings()
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.ReadComponentSettings
    name: ReadComponentSettings
    nameWithType: Log<T>.ReadComponentSettings
    fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.ReadComponentSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.ReadComponentSettings
    name: ReadComponentSettings
    nameWithType: Log(Of T).ReadComponentSettings
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of T).ReadComponentSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.NormalizeEventsOnSaveToDB(System.Collections.Generic.IList{`0})
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log`1.NormalizeEventsOnSaveToDB(System.Collections.Generic.IList{`0})
  isExternal: true
  name: NormalizeEventsOnSaveToDB(IList<T>)
  nameWithType: Log<T>.NormalizeEventsOnSaveToDB(IList<T>)
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.NormalizeEventsOnSaveToDB(System.Collections.Generic.IList<T>)
  nameWithType.vb: Log(Of T).NormalizeEventsOnSaveToDB(IList(Of T))
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).NormalizeEventsOnSaveToDB(System.Collections.Generic.IList(Of T))
  name.vb: NormalizeEventsOnSaveToDB(IList(Of T))
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.NormalizeEventsOnSaveToDB(System.Collections.Generic.IList{`0})
    name: NormalizeEventsOnSaveToDB
    nameWithType: Log<T>.NormalizeEventsOnSaveToDB
    fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.NormalizeEventsOnSaveToDB
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.NormalizeEventsOnSaveToDB(System.Collections.Generic.IList{`0})
    name: NormalizeEventsOnSaveToDB
    nameWithType: Log(Of T).NormalizeEventsOnSaveToDB
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of T).NormalizeEventsOnSaveToDB
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.UpdateLogSettings
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log`1.UpdateLogSettings
  isExternal: false
  name: UpdateLogSettings()
  nameWithType: Log<T>.UpdateLogSettings()
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.UpdateLogSettings()
  nameWithType.vb: Log(Of T).UpdateLogSettings()
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).UpdateLogSettings()
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.UpdateLogSettings
    name: UpdateLogSettings
    nameWithType: Log<T>.UpdateLogSettings
    fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.UpdateLogSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.UpdateLogSettings
    name: UpdateLogSettings
    nameWithType: Log(Of T).UpdateLogSettings
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of T).UpdateLogSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.GetParameterValue(System.String,System.String)
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log`1.GetParameterValue(System.String,System.String)
  isExternal: true
  name: GetParameterValue(String, String)
  nameWithType: Log<T>.GetParameterValue(String, String)
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.GetParameterValue(System.String, System.String)
  nameWithType.vb: Log(Of T).GetParameterValue(String, String)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).GetParameterValue(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.GetParameterValue(System.String,System.String)
    name: GetParameterValue
    nameWithType: Log<T>.GetParameterValue
    fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.GetParameterValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.GetParameterValue(System.String,System.String)
    name: GetParameterValue
    nameWithType: Log(Of T).GetParameterValue
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of T).GetParameterValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.GetSeverity(System.UInt16)
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log`1.GetSeverity(System.UInt16)
  isExternal: true
  name: GetSeverity(UInt16)
  nameWithType: Log<T>.GetSeverity(UInt16)
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.GetSeverity(System.UInt16)
  nameWithType.vb: Log(Of T).GetSeverity(UInt16)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).GetSeverity(System.UInt16)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.GetSeverity(System.UInt16)
    name: GetSeverity
    nameWithType: Log<T>.GetSeverity
    fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.GetSeverity
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.GetSeverity(System.UInt16)
    name: GetSeverity
    nameWithType: Log(Of T).GetSeverity
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of T).GetSeverity
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.GetFunctionalArea(System.UInt16)
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log`1.GetFunctionalArea(System.UInt16)
  isExternal: true
  name: GetFunctionalArea(UInt16)
  nameWithType: Log<T>.GetFunctionalArea(UInt16)
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.GetFunctionalArea(System.UInt16)
  nameWithType.vb: Log(Of T).GetFunctionalArea(UInt16)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).GetFunctionalArea(System.UInt16)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.GetFunctionalArea(System.UInt16)
    name: GetFunctionalArea
    nameWithType: Log<T>.GetFunctionalArea
    fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.GetFunctionalArea
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.GetFunctionalArea(System.UInt16)
    name: GetFunctionalArea
    nameWithType: Log(Of T).GetFunctionalArea
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of T).GetFunctionalArea
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.DetermineEventLogEntryType(System.UInt16)
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log`1.DetermineEventLogEntryType(System.UInt16)
  isExternal: true
  name: DetermineEventLogEntryType(UInt16)
  nameWithType: Log<T>.DetermineEventLogEntryType(UInt16)
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.DetermineEventLogEntryType(System.UInt16)
  nameWithType.vb: Log(Of T).DetermineEventLogEntryType(UInt16)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).DetermineEventLogEntryType(System.UInt16)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.DetermineEventLogEntryType(System.UInt16)
    name: DetermineEventLogEntryType
    nameWithType: Log<T>.DetermineEventLogEntryType
    fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.DetermineEventLogEntryType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.DetermineEventLogEntryType(System.UInt16)
    name: DetermineEventLogEntryType
    nameWithType: Log(Of T).DetermineEventLogEntryType
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of T).DetermineEventLogEntryType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.SafeWriteEventLog(System.UInt16,System.UInt16,System.String,System.Exception)
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log`1.SafeWriteEventLog(System.UInt16,System.UInt16,System.String,System.Exception)
  isExternal: true
  name: SafeWriteEventLog(UInt16, UInt16, String, Exception)
  nameWithType: Log<T>.SafeWriteEventLog(UInt16, UInt16, String, Exception)
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.SafeWriteEventLog(System.UInt16, System.UInt16, System.String, System.Exception)
  nameWithType.vb: Log(Of T).SafeWriteEventLog(UInt16, UInt16, String, Exception)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).SafeWriteEventLog(System.UInt16, System.UInt16, System.String, System.Exception)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.SafeWriteEventLog(System.UInt16,System.UInt16,System.String,System.Exception)
    name: SafeWriteEventLog
    nameWithType: Log<T>.SafeWriteEventLog
    fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.SafeWriteEventLog
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.SafeWriteEventLog(System.UInt16,System.UInt16,System.String,System.Exception)
    name: SafeWriteEventLog
    nameWithType: Log(Of T).SafeWriteEventLog
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of T).SafeWriteEventLog
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.AppendException(System.UInt16,System.String,System.Exception,System.String)
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log`1.AppendException(System.UInt16,System.String,System.Exception,System.String)
  isExternal: true
  name: AppendException(UInt16, String, Exception, String)
  nameWithType: Log<T>.AppendException(UInt16, String, Exception, String)
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.AppendException(System.UInt16, System.String, System.Exception, System.String)
  nameWithType.vb: Log(Of T).AppendException(UInt16, String, Exception, String)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).AppendException(System.UInt16, System.String, System.Exception, System.String)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.AppendException(System.UInt16,System.String,System.Exception,System.String)
    name: AppendException
    nameWithType: Log<T>.AppendException
    fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.AppendException
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.AppendException(System.UInt16,System.String,System.Exception,System.String)
    name: AppendException
    nameWithType: Log(Of T).AppendException
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of T).AppendException
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.Dispose
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log`1.Dispose
  isExternal: false
  name: Dispose()
  nameWithType: Log<T>.Dispose()
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.Dispose()
  nameWithType.vb: Log(Of T).Dispose()
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).Dispose()
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.Dispose
    name: Dispose
    nameWithType: Log<T>.Dispose
    fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.Dispose
    name: Dispose
    nameWithType: Log(Of T).Dispose
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of T).Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.Dispose(System.Boolean)
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log`1.Dispose(System.Boolean)
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: Log<T>.Dispose(Boolean)
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.Dispose(System.Boolean)
  nameWithType.vb: Log(Of T).Dispose(Boolean)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).Dispose(System.Boolean)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.Dispose(System.Boolean)
    name: Dispose
    nameWithType: Log<T>.Dispose
    fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.Dispose(System.Boolean)
    name: Dispose
    nameWithType: Log(Of T).Dispose
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of T).Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.DisposeLogger
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log`1.DisposeLogger
  isExternal: false
  name: DisposeLogger()
  nameWithType: Log<T>.DisposeLogger()
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.DisposeLogger()
  nameWithType.vb: Log(Of T).DisposeLogger()
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).DisposeLogger()
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.DisposeLogger
    name: DisposeLogger
    nameWithType: Log<T>.DisposeLogger
    fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.DisposeLogger
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.DisposeLogger
    name: DisposeLogger
    nameWithType: Log(Of T).DisposeLogger
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of T).DisposeLogger
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.Utility.Diagnostics.DebugLog.#ctor*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.DebugLog.#ctor
  isExternal: false
  name: DebugLog
  nameWithType: DebugLog.DebugLog
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLog.DebugLog
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.Utility.Diagnostics.TraceTarget
  commentId: T:Microsoft.Health.Utility.Diagnostics.TraceTarget
  parent: Microsoft.Health.Utility.Diagnostics
  isExternal: false
  name: TraceTarget
  nameWithType: TraceTarget
  fullName: Microsoft.Health.Utility.Diagnostics.TraceTarget
- uid: Microsoft.Health.Utility.Diagnostics.DebugLog.BeginAddEntry*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.DebugLog.BeginAddEntry
  isExternal: false
  name: BeginAddEntry
  nameWithType: DebugLog.BeginAddEntry
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLog.BeginAddEntry
- uid: System.Collections.ObjectModel.Collection{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}
  commentId: T:System.Collections.ObjectModel.Collection{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<DebugLogEntry>
  nameWithType: Collection<DebugLogEntry>
  fullName: System.Collections.ObjectModel.Collection<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>
  nameWithType.vb: Collection(Of DebugLogEntry)
  fullName.vb: System.Collections.ObjectModel.Collection(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry)
  name.vb: Collection(Of DebugLogEntry)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.Utility.Diagnostics.DebugLogEntry
    name: DebugLogEntry
    nameWithType: DebugLogEntry
    fullName: Microsoft.Health.Utility.Diagnostics.DebugLogEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.Utility.Diagnostics.DebugLogEntry
    name: DebugLogEntry
    nameWithType: DebugLogEntry
    fullName: Microsoft.Health.Utility.Diagnostics.DebugLogEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Microsoft.Health.Utility.Diagnostics.DebugLogContext
  commentId: T:Microsoft.Health.Utility.Diagnostics.DebugLogContext
  parent: Microsoft.Health.Utility.Diagnostics
  isExternal: false
  name: DebugLogContext
  nameWithType: DebugLogContext
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLogContext
- uid: System.Collections.ObjectModel.Collection`1
  commentId: T:System.Collections.ObjectModel.Collection`1
  isExternal: true
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  nameWithType.vb: Collection(Of T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T)
  name.vb: Collection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.DebugLog.EndAddEntry*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.DebugLog.EndAddEntry
  isExternal: false
  name: EndAddEntry
  nameWithType: DebugLog.EndAddEntry
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLog.EndAddEntry
- uid: Microsoft.Health.Utility.Diagnostics.DebugLog.CacheEntry*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.DebugLog.CacheEntry
  isExternal: false
  name: CacheEntry
  nameWithType: DebugLog.CacheEntry
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLog.CacheEntry
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Health.Utility.Diagnostics.DebugLog.CheckThresholdsAndWriteEntries*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.DebugLog.CheckThresholdsAndWriteEntries
  isExternal: false
  name: CheckThresholdsAndWriteEntries
  nameWithType: DebugLog.CheckThresholdsAndWriteEntries
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLog.CheckThresholdsAndWriteEntries
- uid: Microsoft.Health.Utility.Diagnostics.ShouldCommitEntries
  commentId: T:Microsoft.Health.Utility.Diagnostics.ShouldCommitEntries
  parent: Microsoft.Health.Utility.Diagnostics
  isExternal: false
  name: ShouldCommitEntries
  nameWithType: ShouldCommitEntries
  fullName: Microsoft.Health.Utility.Diagnostics.ShouldCommitEntries
- uid: Microsoft.Health.Utility.Diagnostics.DebugLog.AddEntry*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.DebugLog.AddEntry
  isExternal: false
  name: AddEntry
  nameWithType: DebugLog.AddEntry
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLog.AddEntry
- uid: Microsoft.Health.Utility.Diagnostics.DebugLog.AddEntries*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.DebugLog.AddEntries
  isExternal: false
  name: AddEntries
  nameWithType: DebugLog.AddEntries
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLog.AddEntries
- uid: System.Collections.Generic.IEnumerable{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<DebugLogEntry>
  nameWithType: IEnumerable<DebugLogEntry>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>
  nameWithType.vb: IEnumerable(Of DebugLogEntry)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry)
  name.vb: IEnumerable(Of DebugLogEntry)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.Utility.Diagnostics.DebugLogEntry
    name: DebugLogEntry
    nameWithType: DebugLogEntry
    fullName: Microsoft.Health.Utility.Diagnostics.DebugLogEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.Utility.Diagnostics.DebugLogEntry
    name: DebugLogEntry
    nameWithType: DebugLogEntry
    fullName: Microsoft.Health.Utility.Diagnostics.DebugLogEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.ReadLogSettings
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}.ReadLogSettings
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.DebugLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.ReadLogSettings
  name: ReadLogSettings()
  nameWithType: Log<DebugLogEntry>.ReadLogSettings()
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>.ReadLogSettings()
  nameWithType.vb: Log(Of DebugLogEntry).ReadLogSettings()
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry).ReadLogSettings()
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.ReadLogSettings
    name: ReadLogSettings
    nameWithType: Log<DebugLogEntry>.ReadLogSettings
    fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>.ReadLogSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.ReadLogSettings
    name: ReadLogSettings
    nameWithType: Log(Of DebugLogEntry).ReadLogSettings
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry).ReadLogSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.DebugLog.ReadLogSettings*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.DebugLog.ReadLogSettings
  isExternal: false
  name: ReadLogSettings
  nameWithType: DebugLog.ReadLogSettings
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLog.ReadLogSettings
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.ReadLogSettings
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log`1.ReadLogSettings
  isExternal: false
  name: ReadLogSettings()
  nameWithType: Log<T>.ReadLogSettings()
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.ReadLogSettings()
  nameWithType.vb: Log(Of T).ReadLogSettings()
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).ReadLogSettings()
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.ReadLogSettings
    name: ReadLogSettings
    nameWithType: Log<T>.ReadLogSettings
    fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.ReadLogSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.ReadLogSettings
    name: ReadLogSettings
    nameWithType: Log(Of T).ReadLogSettings
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of T).ReadLogSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.DebugLog.Enabled*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.DebugLog.Enabled
  isExternal: false
  name: Enabled
  nameWithType: DebugLog.Enabled
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLog.Enabled
