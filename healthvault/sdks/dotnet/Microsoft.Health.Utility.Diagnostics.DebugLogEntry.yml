### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Utility.Diagnostics.DebugLogEntry
  commentId: T:Microsoft.Health.Utility.Diagnostics.DebugLogEntry
  id: DebugLogEntry
  parent: Microsoft.Health.Utility.Diagnostics
  children:
  - Microsoft.Health.Utility.Diagnostics.DebugLogEntry.#ctor(System.String,System.DateTime,System.Int32,System.Guid,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.String,System.Guid,System.Guid,System.Guid,System.Boolean)
  - Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Application
  - Microsoft.Health.Utility.Diagnostics.DebugLogEntry.ApplicationId
  - Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Context
  - Microsoft.Health.Utility.Diagnostics.DebugLogEntry.CreateDataTable(System.String)
  - Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Error
  - Microsoft.Health.Utility.Diagnostics.DebugLogEntry.EventId
  - Microsoft.Health.Utility.Diagnostics.DebugLogEntry.EventTime
  - Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Method
  - Microsoft.Health.Utility.Diagnostics.DebugLogEntry.PersonId
  - Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Read(System.Xml.XmlReader)
  - Microsoft.Health.Utility.Diagnostics.DebugLogEntry.RecordId
  - Microsoft.Health.Utility.Diagnostics.DebugLogEntry.RequestId
  - Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Value
  - Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Value2
  - Microsoft.Health.Utility.Diagnostics.DebugLogEntry.ValueText
  - Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Write(System.Data.DataRow)
  - Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Write(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: DebugLogEntry
  nameWithType: DebugLogEntry
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLogEntry
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/DebugLogEntry.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DebugLogEntry
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/DebugLogEntry.cs
    startLine: 18
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nThis class represents an entry in the Debug log.\n"
  example: []
  syntax:
    content: 'public sealed class DebugLogEntry : ILogEntry'
    content.vb: >-
      Public NotInheritable Class DebugLogEntry
          Implements ILogEntry
  inheritance:
  - System.Object
  implements:
  - Microsoft.Health.Utility.Diagnostics.ILogEntry
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.#ctor(System.String,System.DateTime,System.Int32,System.Guid,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.String,System.Guid,System.Guid,System.Guid,System.Boolean)
  commentId: M:Microsoft.Health.Utility.Diagnostics.DebugLogEntry.#ctor(System.String,System.DateTime,System.Int32,System.Guid,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.String,System.Guid,System.Guid,System.Guid,System.Boolean)
  id: '#ctor(System.String,System.DateTime,System.Int32,System.Guid,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.String,System.Guid,System.Guid,System.Guid,System.Boolean)'
  parent: Microsoft.Health.Utility.Diagnostics.DebugLogEntry
  langs:
  - csharp
  - vb
  name: DebugLogEntry(String, DateTime, Int32, Guid, String, Nullable<Int64>, Nullable<Int64>, String, String, Guid, Guid, Guid, Boolean)
  nameWithType: DebugLogEntry.DebugLogEntry(String, DateTime, Int32, Guid, String, Nullable<Int64>, Nullable<Int64>, String, String, Guid, Guid, Guid, Boolean)
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.DebugLogEntry(System.String, System.DateTime, System.Int32, System.Guid, System.String, System.Nullable<System.Int64>, System.Nullable<System.Int64>, System.String, System.String, System.Guid, System.Guid, System.Guid, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/DebugLogEntry.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/DebugLogEntry.cs
    startLine: 49
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nClass constructor.\n"
  example: []
  syntax:
    content: public DebugLogEntry(string application, DateTime eventTime, int eventId, Guid requestId, string method, long ? value, long ? value2, string valueText, string context, Guid applicationId, Guid personId, Guid recordId, bool error)
    content.vb: Public Sub New(application As String, eventTime As Date, eventId As Integer, requestId As Guid, method As String, value As Long?, value2 As Long?, valueText As String, context As String, applicationId As Guid, personId As Guid, recordId As Guid, error As Boolean)
    parameters:
    - id: application
      type: System.String
    - id: eventTime
      type: System.DateTime
    - id: eventId
      type: System.Int32
    - id: requestId
      type: System.Guid
    - id: method
      type: System.String
    - id: value
      type: System.Nullable{System.Int64}
    - id: value2
      type: System.Nullable{System.Int64}
    - id: valueText
      type: System.String
    - id: context
      type: System.String
    - id: applicationId
      type: System.Guid
    - id: personId
      type: System.Guid
    - id: recordId
      type: System.Guid
    - id: error
      type: System.Boolean
  overload: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.#ctor*
  nameWithType.vb: DebugLogEntry.DebugLogEntry(String, DateTime, Int32, Guid, String, Nullable(Of Int64), Nullable(Of Int64), String, String, Guid, Guid, Guid, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.DebugLogEntry(System.String, System.DateTime, System.Int32, System.Guid, System.String, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64), System.String, System.String, System.Guid, System.Guid, System.Guid, System.Boolean)
  name.vb: DebugLogEntry(String, DateTime, Int32, Guid, String, Nullable(Of Int64), Nullable(Of Int64), String, String, Guid, Guid, Guid, Boolean)
- uid: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Application
  commentId: P:Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Application
  id: Application
  parent: Microsoft.Health.Utility.Diagnostics.DebugLogEntry
  langs:
  - csharp
  - vb
  name: Application
  nameWithType: DebugLogEntry.Application
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Application
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/DebugLogEntry.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Application
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/DebugLogEntry.cs
    startLine: 84
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nThe application logging this entry.\n"
  example: []
  syntax:
    content: public string Application { get; }
    content.vb: Public ReadOnly Property Application As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Application*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.EventTime
  commentId: P:Microsoft.Health.Utility.Diagnostics.DebugLogEntry.EventTime
  id: EventTime
  parent: Microsoft.Health.Utility.Diagnostics.DebugLogEntry
  langs:
  - csharp
  - vb
  name: EventTime
  nameWithType: DebugLogEntry.EventTime
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.EventTime
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/DebugLogEntry.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: EventTime
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/DebugLogEntry.cs
    startLine: 94
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nThe time that this entry was logged.\n"
  example: []
  syntax:
    content: public DateTime EventTime { get; }
    content.vb: Public ReadOnly Property EventTime As Date
    parameters: []
    return:
      type: System.DateTime
  overload: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.EventTime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.EventId
  commentId: P:Microsoft.Health.Utility.Diagnostics.DebugLogEntry.EventId
  id: EventId
  parent: Microsoft.Health.Utility.Diagnostics.DebugLogEntry
  langs:
  - csharp
  - vb
  name: EventId
  nameWithType: DebugLogEntry.EventId
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.EventId
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/DebugLogEntry.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: EventId
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/DebugLogEntry.cs
    startLine: 104
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nThe event id associated with this log entry.\n"
  example: []
  syntax:
    content: public int EventId { get; }
    content.vb: Public ReadOnly Property EventId As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.EventId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.RequestId
  commentId: P:Microsoft.Health.Utility.Diagnostics.DebugLogEntry.RequestId
  id: RequestId
  parent: Microsoft.Health.Utility.Diagnostics.DebugLogEntry
  langs:
  - csharp
  - vb
  name: RequestId
  nameWithType: DebugLogEntry.RequestId
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.RequestId
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/DebugLogEntry.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: RequestId
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/DebugLogEntry.cs
    startLine: 114
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nThe request id associated with this log entry.\n"
  example: []
  syntax:
    content: public Guid RequestId { get; }
    content.vb: Public ReadOnly Property RequestId As Guid
    parameters: []
    return:
      type: System.Guid
  overload: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.RequestId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Method
  commentId: P:Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Method
  id: Method
  parent: Microsoft.Health.Utility.Diagnostics.DebugLogEntry
  langs:
  - csharp
  - vb
  name: Method
  nameWithType: DebugLogEntry.Method
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Method
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/DebugLogEntry.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Method
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/DebugLogEntry.cs
    startLine: 124
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nThe method associated with this log entry.\n"
  example: []
  syntax:
    content: public string Method { get; }
    content.vb: Public ReadOnly Property Method As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Method*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Value
  commentId: P:Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Value
  id: Value
  parent: Microsoft.Health.Utility.Diagnostics.DebugLogEntry
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: DebugLogEntry.Value
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Value
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/DebugLogEntry.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Value
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/DebugLogEntry.cs
    startLine: 134
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nAn integer value associated with this log entry.\n"
  example: []
  syntax:
    content: public long ? Value { get; }
    content.vb: Public ReadOnly Property Value As Long?
    parameters: []
    return:
      type: System.Nullable{System.Int64}
  overload: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Value*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Value2
  commentId: P:Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Value2
  id: Value2
  parent: Microsoft.Health.Utility.Diagnostics.DebugLogEntry
  langs:
  - csharp
  - vb
  name: Value2
  nameWithType: DebugLogEntry.Value2
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Value2
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/DebugLogEntry.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Value2
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/DebugLogEntry.cs
    startLine: 144
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nAn second integer value associated with this log entry.\n"
  example: []
  syntax:
    content: public long ? Value2 { get; }
    content.vb: Public ReadOnly Property Value2 As Long?
    parameters: []
    return:
      type: System.Nullable{System.Int64}
  overload: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Value2*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.ValueText
  commentId: P:Microsoft.Health.Utility.Diagnostics.DebugLogEntry.ValueText
  id: ValueText
  parent: Microsoft.Health.Utility.Diagnostics.DebugLogEntry
  langs:
  - csharp
  - vb
  name: ValueText
  nameWithType: DebugLogEntry.ValueText
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.ValueText
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/DebugLogEntry.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ValueText
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/DebugLogEntry.cs
    startLine: 154
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nA string value (if any) associated with this log entry.\n"
  example: []
  syntax:
    content: public string ValueText { get; }
    content.vb: Public ReadOnly Property ValueText As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.ValueText*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Context
  commentId: P:Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Context
  id: Context
  parent: Microsoft.Health.Utility.Diagnostics.DebugLogEntry
  langs:
  - csharp
  - vb
  name: Context
  nameWithType: DebugLogEntry.Context
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Context
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/DebugLogEntry.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Context
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/DebugLogEntry.cs
    startLine: 164
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nThe context associated with this log entry.\n"
  example: []
  syntax:
    content: public string Context { get; }
    content.vb: Public ReadOnly Property Context As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Context*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.ApplicationId
  commentId: P:Microsoft.Health.Utility.Diagnostics.DebugLogEntry.ApplicationId
  id: ApplicationId
  parent: Microsoft.Health.Utility.Diagnostics.DebugLogEntry
  langs:
  - csharp
  - vb
  name: ApplicationId
  nameWithType: DebugLogEntry.ApplicationId
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.ApplicationId
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/DebugLogEntry.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ApplicationId
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/DebugLogEntry.cs
    startLine: 174
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nThe application id associated with this log entry.\n"
  example: []
  syntax:
    content: public Guid ApplicationId { get; }
    content.vb: Public ReadOnly Property ApplicationId As Guid
    parameters: []
    return:
      type: System.Guid
  overload: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.ApplicationId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.PersonId
  commentId: P:Microsoft.Health.Utility.Diagnostics.DebugLogEntry.PersonId
  id: PersonId
  parent: Microsoft.Health.Utility.Diagnostics.DebugLogEntry
  langs:
  - csharp
  - vb
  name: PersonId
  nameWithType: DebugLogEntry.PersonId
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.PersonId
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/DebugLogEntry.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: PersonId
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/DebugLogEntry.cs
    startLine: 184
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nThe person id associated with this entry.\n"
  example: []
  syntax:
    content: public Guid PersonId { get; }
    content.vb: Public ReadOnly Property PersonId As Guid
    parameters: []
    return:
      type: System.Guid
  overload: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.PersonId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.RecordId
  commentId: P:Microsoft.Health.Utility.Diagnostics.DebugLogEntry.RecordId
  id: RecordId
  parent: Microsoft.Health.Utility.Diagnostics.DebugLogEntry
  langs:
  - csharp
  - vb
  name: RecordId
  nameWithType: DebugLogEntry.RecordId
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.RecordId
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/DebugLogEntry.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: RecordId
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/DebugLogEntry.cs
    startLine: 194
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nThe record id associated with this log entry.\n"
  example: []
  syntax:
    content: public Guid RecordId { get; }
    content.vb: Public ReadOnly Property RecordId As Guid
    parameters: []
    return:
      type: System.Guid
  overload: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.RecordId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Error
  commentId: P:Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Error
  id: Error
  parent: Microsoft.Health.Utility.Diagnostics.DebugLogEntry
  langs:
  - csharp
  - vb
  name: Error
  nameWithType: DebugLogEntry.Error
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Error
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/DebugLogEntry.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Error
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/DebugLogEntry.cs
    startLine: 204
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nThe error value associated with this log entry.\n"
  example: []
  syntax:
    content: public bool Error { get; }
    content.vb: Public ReadOnly Property Error As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Error*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Read(System.Xml.XmlReader)
  commentId: M:Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Read(System.Xml.XmlReader)
  id: Read(System.Xml.XmlReader)
  parent: Microsoft.Health.Utility.Diagnostics.DebugLogEntry
  langs:
  - csharp
  - vb
  name: Read(XmlReader)
  nameWithType: DebugLogEntry.Read(XmlReader)
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Read(System.Xml.XmlReader)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/DebugLogEntry.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Read
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/DebugLogEntry.cs
    startLine: 216
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nDeserialize the entry using the provided XmlReader.\n"
  example: []
  syntax:
    content: public void Read(XmlReader reader)
    content.vb: Public Sub Read(reader As XmlReader)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
  overload: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Read*
  implements:
  - Microsoft.Health.Utility.Diagnostics.ILogEntry.Read(System.Xml.XmlReader)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Write(System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Write(System.Xml.XmlWriter)
  id: Write(System.Xml.XmlWriter)
  parent: Microsoft.Health.Utility.Diagnostics.DebugLogEntry
  langs:
  - csharp
  - vb
  name: Write(XmlWriter)
  nameWithType: DebugLogEntry.Write(XmlWriter)
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Write(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/DebugLogEntry.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Write
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/DebugLogEntry.cs
    startLine: 247
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nSerialize this entry using the provided XmlWriter.\n"
  example: []
  syntax:
    content: public void Write(XmlWriter writer)
    content.vb: Public Sub Write(writer As XmlWriter)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
  overload: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Write*
  implements:
  - Microsoft.Health.Utility.Diagnostics.ILogEntry.Write(System.Xml.XmlWriter)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Write(System.Data.DataRow)
  commentId: M:Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Write(System.Data.DataRow)
  id: Write(System.Data.DataRow)
  parent: Microsoft.Health.Utility.Diagnostics.DebugLogEntry
  langs:
  - csharp
  - vb
  name: Write(DataRow)
  nameWithType: DebugLogEntry.Write(DataRow)
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Write(System.Data.DataRow)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/DebugLogEntry.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Write
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/DebugLogEntry.cs
    startLine: 296
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nSerialize this entry using the provided DataRow.\n"
  example: []
  syntax:
    content: public void Write(DataRow row)
    content.vb: Public Sub Write(row As DataRow)
    parameters:
    - id: row
      type: System.Data.DataRow
      description: ''
  overload: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Write*
  implements:
  - Microsoft.Health.Utility.Diagnostics.ILogEntry.Write(System.Data.DataRow)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.CreateDataTable(System.String)
  commentId: M:Microsoft.Health.Utility.Diagnostics.DebugLogEntry.CreateDataTable(System.String)
  id: CreateDataTable(System.String)
  parent: Microsoft.Health.Utility.Diagnostics.DebugLogEntry
  langs:
  - csharp
  - vb
  name: CreateDataTable(String)
  nameWithType: DebugLogEntry.CreateDataTable(String)
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.CreateDataTable(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/DebugLogEntry.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CreateDataTable
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/DebugLogEntry.cs
    startLine: 329
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nCreate and initialize a DataTable that will be used to write items to the database.\n"
  example: []
  syntax:
    content: public DataTable CreateDataTable(string tableName)
    content.vb: Public Function CreateDataTable(tableName As String) As DataTable
    parameters:
    - id: tableName
      type: System.String
    return:
      type: System.Data.DataTable
  overload: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.CreateDataTable*
  implements:
  - Microsoft.Health.Utility.Diagnostics.ILogEntry.CreateDataTable(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Health.Utility.Diagnostics
  commentId: N:Microsoft.Health.Utility.Diagnostics
  isExternal: false
  name: Microsoft.Health.Utility.Diagnostics
  nameWithType: Microsoft.Health.Utility.Diagnostics
  fullName: Microsoft.Health.Utility.Diagnostics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.Utility.Diagnostics.ILogEntry
  commentId: T:Microsoft.Health.Utility.Diagnostics.ILogEntry
  parent: Microsoft.Health.Utility.Diagnostics
  isExternal: false
  name: ILogEntry
  nameWithType: ILogEntry
  fullName: Microsoft.Health.Utility.Diagnostics.ILogEntry
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<DebugLogEntry>()
  nameWithType: TypeHelper.ValueOrDbNull<DebugLogEntry>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of DebugLogEntry)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry)()
  name.vb: ValueOrDbNull(Of DebugLogEntry)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<DebugLogEntry>
    nameWithType: TypeHelper.ValueOrDbNull<DebugLogEntry>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Utility.Diagnostics.DebugLogEntry>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of DebugLogEntry)
    nameWithType: TypeHelper.ValueOrDbNull(Of DebugLogEntry)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Utility.Diagnostics.DebugLogEntry)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.#ctor*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.DebugLogEntry.#ctor
  isExternal: false
  name: DebugLogEntry
  nameWithType: DebugLogEntry.DebugLogEntry
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.DebugLogEntry
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Application*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Application
  isExternal: false
  name: Application
  nameWithType: DebugLogEntry.Application
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Application
- uid: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.EventTime*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.DebugLogEntry.EventTime
  isExternal: false
  name: EventTime
  nameWithType: DebugLogEntry.EventTime
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.EventTime
- uid: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.EventId*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.DebugLogEntry.EventId
  isExternal: false
  name: EventId
  nameWithType: DebugLogEntry.EventId
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.EventId
- uid: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.RequestId*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.DebugLogEntry.RequestId
  isExternal: false
  name: RequestId
  nameWithType: DebugLogEntry.RequestId
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.RequestId
- uid: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Method*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Method
  isExternal: false
  name: Method
  nameWithType: DebugLogEntry.Method
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Method
- uid: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Value*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Value
  isExternal: false
  name: Value
  nameWithType: DebugLogEntry.Value
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Value
- uid: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Value2*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Value2
  isExternal: false
  name: Value2
  nameWithType: DebugLogEntry.Value2
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Value2
- uid: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.ValueText*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.DebugLogEntry.ValueText
  isExternal: false
  name: ValueText
  nameWithType: DebugLogEntry.ValueText
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.ValueText
- uid: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Context*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Context
  isExternal: false
  name: Context
  nameWithType: DebugLogEntry.Context
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Context
- uid: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.ApplicationId*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.DebugLogEntry.ApplicationId
  isExternal: false
  name: ApplicationId
  nameWithType: DebugLogEntry.ApplicationId
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.ApplicationId
- uid: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.PersonId*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.DebugLogEntry.PersonId
  isExternal: false
  name: PersonId
  nameWithType: DebugLogEntry.PersonId
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.PersonId
- uid: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.RecordId*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.DebugLogEntry.RecordId
  isExternal: false
  name: RecordId
  nameWithType: DebugLogEntry.RecordId
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.RecordId
- uid: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Error*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Error
  isExternal: false
  name: Error
  nameWithType: DebugLogEntry.Error
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Error
- uid: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Read*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Read
  isExternal: false
  name: Read
  nameWithType: DebugLogEntry.Read
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Read
- uid: Microsoft.Health.Utility.Diagnostics.ILogEntry.Read(System.Xml.XmlReader)
  commentId: M:Microsoft.Health.Utility.Diagnostics.ILogEntry.Read(System.Xml.XmlReader)
  parent: Microsoft.Health.Utility.Diagnostics.ILogEntry
  isExternal: true
  name: Read(XmlReader)
  nameWithType: ILogEntry.Read(XmlReader)
  fullName: Microsoft.Health.Utility.Diagnostics.ILogEntry.Read(System.Xml.XmlReader)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.ILogEntry.Read(System.Xml.XmlReader)
    name: Read
    nameWithType: ILogEntry.Read
    fullName: Microsoft.Health.Utility.Diagnostics.ILogEntry.Read
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.ILogEntry.Read(System.Xml.XmlReader)
    name: Read
    nameWithType: ILogEntry.Read
    fullName: Microsoft.Health.Utility.Diagnostics.ILogEntry.Read
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlReader
  commentId: T:System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Write*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Write
  isExternal: false
  name: Write
  nameWithType: DebugLogEntry.Write
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.Write
- uid: Microsoft.Health.Utility.Diagnostics.ILogEntry.Write(System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.Utility.Diagnostics.ILogEntry.Write(System.Xml.XmlWriter)
  parent: Microsoft.Health.Utility.Diagnostics.ILogEntry
  isExternal: true
  name: Write(XmlWriter)
  nameWithType: ILogEntry.Write(XmlWriter)
  fullName: Microsoft.Health.Utility.Diagnostics.ILogEntry.Write(System.Xml.XmlWriter)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.ILogEntry.Write(System.Xml.XmlWriter)
    name: Write
    nameWithType: ILogEntry.Write
    fullName: Microsoft.Health.Utility.Diagnostics.ILogEntry.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.ILogEntry.Write(System.Xml.XmlWriter)
    name: Write
    nameWithType: ILogEntry.Write
    fullName: Microsoft.Health.Utility.Diagnostics.ILogEntry.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: Microsoft.Health.Utility.Diagnostics.ILogEntry.Write(System.Data.DataRow)
  commentId: M:Microsoft.Health.Utility.Diagnostics.ILogEntry.Write(System.Data.DataRow)
  parent: Microsoft.Health.Utility.Diagnostics.ILogEntry
  isExternal: true
  name: Write(DataRow)
  nameWithType: ILogEntry.Write(DataRow)
  fullName: Microsoft.Health.Utility.Diagnostics.ILogEntry.Write(System.Data.DataRow)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.ILogEntry.Write(System.Data.DataRow)
    name: Write
    nameWithType: ILogEntry.Write
    fullName: Microsoft.Health.Utility.Diagnostics.ILogEntry.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.DataRow
    name: DataRow
    nameWithType: DataRow
    fullName: System.Data.DataRow
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.ILogEntry.Write(System.Data.DataRow)
    name: Write
    nameWithType: ILogEntry.Write
    fullName: Microsoft.Health.Utility.Diagnostics.ILogEntry.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.DataRow
    name: DataRow
    nameWithType: DataRow
    fullName: System.Data.DataRow
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.DataRow
  commentId: T:System.Data.DataRow
  parent: System.Data
  isExternal: true
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Data
  commentId: N:System.Data
  isExternal: false
  name: System.Data
  nameWithType: System.Data
  fullName: System.Data
- uid: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.CreateDataTable*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.DebugLogEntry.CreateDataTable
  isExternal: false
  name: CreateDataTable
  nameWithType: DebugLogEntry.CreateDataTable
  fullName: Microsoft.Health.Utility.Diagnostics.DebugLogEntry.CreateDataTable
- uid: Microsoft.Health.Utility.Diagnostics.ILogEntry.CreateDataTable(System.String)
  commentId: M:Microsoft.Health.Utility.Diagnostics.ILogEntry.CreateDataTable(System.String)
  parent: Microsoft.Health.Utility.Diagnostics.ILogEntry
  isExternal: true
  name: CreateDataTable(String)
  nameWithType: ILogEntry.CreateDataTable(String)
  fullName: Microsoft.Health.Utility.Diagnostics.ILogEntry.CreateDataTable(System.String)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.ILogEntry.CreateDataTable(System.String)
    name: CreateDataTable
    nameWithType: ILogEntry.CreateDataTable
    fullName: Microsoft.Health.Utility.Diagnostics.ILogEntry.CreateDataTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.ILogEntry.CreateDataTable(System.String)
    name: CreateDataTable
    nameWithType: ILogEntry.CreateDataTable
    fullName: Microsoft.Health.Utility.Diagnostics.ILogEntry.CreateDataTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.DataTable
  commentId: T:System.Data.DataTable
  parent: System.Data
  isExternal: true
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
