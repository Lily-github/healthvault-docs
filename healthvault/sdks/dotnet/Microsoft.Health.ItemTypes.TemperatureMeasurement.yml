### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.ItemTypes.TemperatureMeasurement
  commentId: T:Microsoft.Health.ItemTypes.TemperatureMeasurement
  id: TemperatureMeasurement
  parent: Microsoft.Health.ItemTypes
  children:
  - Microsoft.Health.ItemTypes.TemperatureMeasurement.#ctor
  - Microsoft.Health.ItemTypes.TemperatureMeasurement.#ctor(System.Double)
  - Microsoft.Health.ItemTypes.TemperatureMeasurement.#ctor(System.Double,Microsoft.Health.ItemTypes.DisplayValue)
  - Microsoft.Health.ItemTypes.TemperatureMeasurement.AssertMeasurementValue(System.Double)
  - Microsoft.Health.ItemTypes.TemperatureMeasurement.GetValueString(System.Double)
  - Microsoft.Health.ItemTypes.TemperatureMeasurement.ParseValueXml(System.Xml.XPath.XPathNavigator)
  - Microsoft.Health.ItemTypes.TemperatureMeasurement.WriteValueXml(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: TemperatureMeasurement
  nameWithType: TemperatureMeasurement
  fullName: Microsoft.Health.ItemTypes.TemperatureMeasurement
  type: Class
  source:
    remote:
      path: Microsoft.Health.ItemTypes/TemperatureMeasurement.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: TemperatureMeasurement
    path: ../Microsoft.Health.ItemTypes/TemperatureMeasurement.cs
    startLine: 28
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nRepresents a temperature measurement and display.\n"
  remarks: "\nIn HealthVault, temperature measurements have values and display values. \nAll values are stored in a base unit of degrees Celsius (C). \nAn application can take a pace value using any scale the application \nchooses and can store the user-entered value as the display value, \nbut the temperature value must be converted to degrees Celsius to be stored in \nHealthVault.\n"
  example: []
  syntax:
    content: 'public class TemperatureMeasurement : Measurement<double>'
    content.vb: >-
      Public Class TemperatureMeasurement
          Inherits Measurement(Of Double)
  inheritance:
  - System.Object
  - Microsoft.Health.ItemTypes.HealthRecordItemData
  - Microsoft.Health.ItemTypes.Measurement{System.Double}
  inheritedMembers:
  - Microsoft.Health.ItemTypes.Measurement{System.Double}.ParseXml(System.Xml.XPath.XPathNavigator)
  - Microsoft.Health.ItemTypes.Measurement{System.Double}.WriteXml(System.String,System.Xml.XmlWriter)
  - Microsoft.Health.ItemTypes.Measurement{System.Double}.Value
  - Microsoft.Health.ItemTypes.Measurement{System.Double}.DisplayValue
  - Microsoft.Health.ItemTypes.Measurement{System.Double}.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.ItemTypes.TemperatureMeasurement.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.ItemTypes.TemperatureMeasurement.#ctor
  commentId: M:Microsoft.Health.ItemTypes.TemperatureMeasurement.#ctor
  id: '#ctor'
  parent: Microsoft.Health.ItemTypes.TemperatureMeasurement
  langs:
  - csharp
  - vb
  name: TemperatureMeasurement()
  nameWithType: TemperatureMeasurement.TemperatureMeasurement()
  fullName: Microsoft.Health.ItemTypes.TemperatureMeasurement.TemperatureMeasurement()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/TemperatureMeasurement.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.ItemTypes/TemperatureMeasurement.cs
    startLine: 35
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.TemperatureMeasurement\" data-throw-if-not-resolved=\"false\"></xref> \nclass with empty values.\n"
  example: []
  syntax:
    content: public TemperatureMeasurement()
    content.vb: Public Sub New
  overload: Microsoft.Health.ItemTypes.TemperatureMeasurement.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.TemperatureMeasurement.#ctor(System.Double)
  commentId: M:Microsoft.Health.ItemTypes.TemperatureMeasurement.#ctor(System.Double)
  id: '#ctor(System.Double)'
  parent: Microsoft.Health.ItemTypes.TemperatureMeasurement
  langs:
  - csharp
  - vb
  name: TemperatureMeasurement(Double)
  nameWithType: TemperatureMeasurement.TemperatureMeasurement(Double)
  fullName: Microsoft.Health.ItemTypes.TemperatureMeasurement.TemperatureMeasurement(System.Double)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/TemperatureMeasurement.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.ItemTypes/TemperatureMeasurement.cs
    startLine: 48
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.TemperatureMeasurement\" data-throw-if-not-resolved=\"false\"></xref> \nclass with the specified value in degrees Celsius.\n"
  example: []
  syntax:
    content: public TemperatureMeasurement(double celsius)
    content.vb: Public Sub New(celsius As Double)
    parameters:
    - id: celsius
      type: System.Double
      description: "\nThe temperature in degrees Celsius.\n"
  overload: Microsoft.Health.ItemTypes.TemperatureMeasurement.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.TemperatureMeasurement.#ctor(System.Double,Microsoft.Health.ItemTypes.DisplayValue)
  commentId: M:Microsoft.Health.ItemTypes.TemperatureMeasurement.#ctor(System.Double,Microsoft.Health.ItemTypes.DisplayValue)
  id: '#ctor(System.Double,Microsoft.Health.ItemTypes.DisplayValue)'
  parent: Microsoft.Health.ItemTypes.TemperatureMeasurement
  langs:
  - csharp
  - vb
  name: TemperatureMeasurement(Double, DisplayValue)
  nameWithType: TemperatureMeasurement.TemperatureMeasurement(Double, DisplayValue)
  fullName: Microsoft.Health.ItemTypes.TemperatureMeasurement.TemperatureMeasurement(System.Double, Microsoft.Health.ItemTypes.DisplayValue)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/TemperatureMeasurement.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.ItemTypes/TemperatureMeasurement.cs
    startLine: 71
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.TemperatureMeasurement\" data-throw-if-not-resolved=\"false\"></xref> \nclass with the specified value in degrees Celsius and optional display value.\n"
  example: []
  syntax:
    content: public TemperatureMeasurement(double celsius, DisplayValue displayValue)
    content.vb: Public Sub New(celsius As Double, displayValue As DisplayValue)
    parameters:
    - id: celsius
      type: System.Double
      description: "\nThe temperature in degrees Celsius.\n"
    - id: displayValue
      type: Microsoft.Health.ItemTypes.DisplayValue
      description: "\nThe display value of the temperature. This should contain the\nexact temperature as entered by the user even if it uses some\nother unit of measure besides degrees Celsius. The display value\n<xref href=\"Microsoft.Health.ItemTypes.DisplayValue.Units\" data-throw-if-not-resolved=\"false\"></xref> and \n<xref href=\"Microsoft.Health.ItemTypes.DisplayValue.UnitsCode\" data-throw-if-not-resolved=\"false\"></xref> \nrepresents the unit of measure for the user-entered value.\n"
  overload: Microsoft.Health.ItemTypes.TemperatureMeasurement.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.TemperatureMeasurement.AssertMeasurementValue(System.Double)
  commentId: M:Microsoft.Health.ItemTypes.TemperatureMeasurement.AssertMeasurementValue(System.Double)
  id: AssertMeasurementValue(System.Double)
  parent: Microsoft.Health.ItemTypes.TemperatureMeasurement
  langs:
  - csharp
  - vb
  name: AssertMeasurementValue(Double)
  nameWithType: TemperatureMeasurement.AssertMeasurementValue(Double)
  fullName: Microsoft.Health.ItemTypes.TemperatureMeasurement.AssertMeasurementValue(System.Double)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/TemperatureMeasurement.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AssertMeasurementValue
    path: ../Microsoft.Health.ItemTypes/TemperatureMeasurement.cs
    startLine: 88
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nVerifies that the value is a legal temperature value.\n"
  example: []
  syntax:
    content: protected override void AssertMeasurementValue(double value)
    content.vb: Protected Overrides Sub AssertMeasurementValue(value As Double)
    parameters:
    - id: value
      type: System.Double
      description: "\nThe temperature measurement.\n"
  overridden: Microsoft.Health.ItemTypes.Measurement{System.Double}.AssertMeasurementValue(System.Double)
  overload: Microsoft.Health.ItemTypes.TemperatureMeasurement.AssertMeasurementValue*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nThe <span class=\"paramref\">value</span> parameter is less than or equal to zero.\n"
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Health.ItemTypes.TemperatureMeasurement.ParseValueXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.TemperatureMeasurement.ParseValueXml(System.Xml.XPath.XPathNavigator)
  id: ParseValueXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.TemperatureMeasurement
  langs:
  - csharp
  - vb
  name: ParseValueXml(XPathNavigator)
  nameWithType: TemperatureMeasurement.ParseValueXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.TemperatureMeasurement.ParseValueXml(System.Xml.XPath.XPathNavigator)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/TemperatureMeasurement.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ParseValueXml
    path: ../Microsoft.Health.ItemTypes/TemperatureMeasurement.cs
    startLine: 101
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nPopulates the data for the temperature from the XML.\n"
  example: []
  syntax:
    content: protected override void ParseValueXml(XPathNavigator navigator)
    content.vb: Protected Overrides Sub ParseValueXml(navigator As XPathNavigator)
    parameters:
    - id: navigator
      type: System.Xml.XPath.XPathNavigator
      description: "\nThe XML node representing the temperature.\n"
  overridden: Microsoft.Health.ItemTypes.Measurement{System.Double}.ParseValueXml(System.Xml.XPath.XPathNavigator)
  overload: Microsoft.Health.ItemTypes.TemperatureMeasurement.ParseValueXml*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Health.ItemTypes.TemperatureMeasurement.WriteValueXml(System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.TemperatureMeasurement.WriteValueXml(System.Xml.XmlWriter)
  id: WriteValueXml(System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.TemperatureMeasurement
  langs:
  - csharp
  - vb
  name: WriteValueXml(XmlWriter)
  nameWithType: TemperatureMeasurement.WriteValueXml(XmlWriter)
  fullName: Microsoft.Health.ItemTypes.TemperatureMeasurement.WriteValueXml(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/TemperatureMeasurement.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteValueXml
    path: ../Microsoft.Health.ItemTypes/TemperatureMeasurement.cs
    startLine: 114
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nWrites the temperature to the specified XML writer.\n"
  example: []
  syntax:
    content: protected override void WriteValueXml(XmlWriter writer)
    content.vb: Protected Overrides Sub WriteValueXml(writer As XmlWriter)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "\nThe XmlWriter to write the temperature to.\n"
  overridden: Microsoft.Health.ItemTypes.Measurement{System.Double}.WriteValueXml(System.Xml.XmlWriter)
  overload: Microsoft.Health.ItemTypes.TemperatureMeasurement.WriteValueXml*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Health.ItemTypes.TemperatureMeasurement.GetValueString(System.Double)
  commentId: M:Microsoft.Health.ItemTypes.TemperatureMeasurement.GetValueString(System.Double)
  id: GetValueString(System.Double)
  parent: Microsoft.Health.ItemTypes.TemperatureMeasurement
  langs:
  - csharp
  - vb
  name: GetValueString(Double)
  nameWithType: TemperatureMeasurement.GetValueString(Double)
  fullName: Microsoft.Health.ItemTypes.TemperatureMeasurement.GetValueString(System.Double)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/TemperatureMeasurement.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetValueString
    path: ../Microsoft.Health.ItemTypes/TemperatureMeasurement.cs
    startLine: 129
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets a string representation of the temperature in the base units.\n"
  example: []
  syntax:
    content: protected override string GetValueString(double value)
    content.vb: Protected Overrides Function GetValueString(value As Double) As String
    parameters:
    - id: value
      type: System.Double
    return:
      type: System.String
      description: "\nThe temperature as a string in the base units.\n"
  overridden: Microsoft.Health.ItemTypes.Measurement{System.Double}.GetValueString(System.Double)
  overload: Microsoft.Health.ItemTypes.TemperatureMeasurement.GetValueString*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Microsoft.Health.ItemTypes
  commentId: N:Microsoft.Health.ItemTypes
  isExternal: false
  name: Microsoft.Health.ItemTypes
  nameWithType: Microsoft.Health.ItemTypes
  fullName: Microsoft.Health.ItemTypes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData
  commentId: T:Microsoft.Health.ItemTypes.HealthRecordItemData
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: HealthRecordItemData
  nameWithType: HealthRecordItemData
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData
- uid: Microsoft.Health.ItemTypes.Measurement{System.Double}
  commentId: T:Microsoft.Health.ItemTypes.Measurement{System.Double}
  parent: Microsoft.Health.ItemTypes
  definition: Microsoft.Health.ItemTypes.Measurement`1
  name: Measurement<Double>
  nameWithType: Measurement<Double>
  fullName: Microsoft.Health.ItemTypes.Measurement<System.Double>
  nameWithType.vb: Measurement(Of Double)
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of System.Double)
  name.vb: Measurement(Of Double)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Measurement`1
    name: Measurement
    nameWithType: Measurement
    fullName: Microsoft.Health.ItemTypes.Measurement
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Measurement`1
    name: Measurement
    nameWithType: Measurement
    fullName: Microsoft.Health.ItemTypes.Measurement
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Measurement{System.Double}.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.Measurement{System.Double}.ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.Measurement{System.Double}
  definition: Microsoft.Health.ItemTypes.Measurement`1.ParseXml(System.Xml.XPath.XPathNavigator)
  name: ParseXml(XPathNavigator)
  nameWithType: Measurement<Double>.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.Measurement<System.Double>.ParseXml(System.Xml.XPath.XPathNavigator)
  nameWithType.vb: Measurement(Of Double).ParseXml(XPathNavigator)
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of System.Double).ParseXml(System.Xml.XPath.XPathNavigator)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: Measurement<Double>.ParseXml
    fullName: Microsoft.Health.ItemTypes.Measurement<System.Double>.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: Measurement(Of Double).ParseXml
    fullName: Microsoft.Health.ItemTypes.Measurement(Of System.Double).ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Measurement{System.Double}.WriteXml(System.String,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.Measurement{System.Double}.WriteXml(System.String,System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.Measurement{System.Double}
  definition: Microsoft.Health.ItemTypes.Measurement`1.WriteXml(System.String,System.Xml.XmlWriter)
  name: WriteXml(String, XmlWriter)
  nameWithType: Measurement<Double>.WriteXml(String, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.Measurement<System.Double>.WriteXml(System.String, System.Xml.XmlWriter)
  nameWithType.vb: Measurement(Of Double).WriteXml(String, XmlWriter)
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of System.Double).WriteXml(System.String, System.Xml.XmlWriter)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: Measurement<Double>.WriteXml
    fullName: Microsoft.Health.ItemTypes.Measurement<System.Double>.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: Measurement(Of Double).WriteXml
    fullName: Microsoft.Health.ItemTypes.Measurement(Of System.Double).WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Measurement{System.Double}.Value
  commentId: P:Microsoft.Health.ItemTypes.Measurement{System.Double}.Value
  parent: Microsoft.Health.ItemTypes.Measurement{System.Double}
  definition: Microsoft.Health.ItemTypes.Measurement`1.Value
  name: Value
  nameWithType: Measurement<Double>.Value
  fullName: Microsoft.Health.ItemTypes.Measurement<System.Double>.Value
  nameWithType.vb: Measurement(Of Double).Value
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of System.Double).Value
- uid: Microsoft.Health.ItemTypes.Measurement{System.Double}.DisplayValue
  commentId: P:Microsoft.Health.ItemTypes.Measurement{System.Double}.DisplayValue
  parent: Microsoft.Health.ItemTypes.Measurement{System.Double}
  definition: Microsoft.Health.ItemTypes.Measurement`1.DisplayValue
  name: DisplayValue
  nameWithType: Measurement<Double>.DisplayValue
  fullName: Microsoft.Health.ItemTypes.Measurement<System.Double>.DisplayValue
  nameWithType.vb: Measurement(Of Double).DisplayValue
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of System.Double).DisplayValue
- uid: Microsoft.Health.ItemTypes.Measurement{System.Double}.ToString
  commentId: M:Microsoft.Health.ItemTypes.Measurement{System.Double}.ToString
  parent: Microsoft.Health.ItemTypes.Measurement{System.Double}
  definition: Microsoft.Health.ItemTypes.Measurement`1.ToString
  name: ToString()
  nameWithType: Measurement<Double>.ToString()
  fullName: Microsoft.Health.ItemTypes.Measurement<System.Double>.ToString()
  nameWithType.vb: Measurement(Of Double).ToString()
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of System.Double).ToString()
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.ToString
    name: ToString
    nameWithType: Measurement<Double>.ToString
    fullName: Microsoft.Health.ItemTypes.Measurement<System.Double>.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.ToString
    name: ToString
    nameWithType: Measurement(Of Double).ToString
    fullName: Microsoft.Health.ItemTypes.Measurement(Of System.Double).ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.TemperatureMeasurement.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<TemperatureMeasurement>()
  nameWithType: TypeHelper.ValueOrDbNull<TemperatureMeasurement>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.ItemTypes.TemperatureMeasurement>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of TemperatureMeasurement)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.ItemTypes.TemperatureMeasurement)()
  name.vb: ValueOrDbNull(Of TemperatureMeasurement)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<TemperatureMeasurement>
    nameWithType: TypeHelper.ValueOrDbNull<TemperatureMeasurement>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.ItemTypes.TemperatureMeasurement>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of TemperatureMeasurement)
    nameWithType: TypeHelper.ValueOrDbNull(Of TemperatureMeasurement)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.ItemTypes.TemperatureMeasurement)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.ItemTypes.Measurement`1
  commentId: T:Microsoft.Health.ItemTypes.Measurement`1
  isExternal: false
  name: Measurement<MeasurementType>
  nameWithType: Measurement<MeasurementType>
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>
  nameWithType.vb: Measurement(Of MeasurementType)
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType)
  name.vb: Measurement(Of MeasurementType)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Measurement`1
    name: Measurement
    nameWithType: Measurement
    fullName: Microsoft.Health.ItemTypes.Measurement
  - name: <
    nameWithType: <
    fullName: <
  - name: MeasurementType
    nameWithType: MeasurementType
    fullName: MeasurementType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Measurement`1
    name: Measurement
    nameWithType: Measurement
    fullName: Microsoft.Health.ItemTypes.Measurement
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: MeasurementType
    nameWithType: MeasurementType
    fullName: MeasurementType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Measurement`1.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.Measurement`1.ParseXml(System.Xml.XPath.XPathNavigator)
  isExternal: true
  name: ParseXml(XPathNavigator)
  nameWithType: Measurement<MeasurementType>.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.ParseXml(System.Xml.XPath.XPathNavigator)
  nameWithType.vb: Measurement(Of MeasurementType).ParseXml(XPathNavigator)
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).ParseXml(System.Xml.XPath.XPathNavigator)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: Measurement<MeasurementType>.ParseXml
    fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: Measurement(Of MeasurementType).ParseXml
    fullName: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Measurement`1.WriteXml(System.String,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.Measurement`1.WriteXml(System.String,System.Xml.XmlWriter)
  isExternal: true
  name: WriteXml(String, XmlWriter)
  nameWithType: Measurement<MeasurementType>.WriteXml(String, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.WriteXml(System.String, System.Xml.XmlWriter)
  nameWithType.vb: Measurement(Of MeasurementType).WriteXml(String, XmlWriter)
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).WriteXml(System.String, System.Xml.XmlWriter)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: Measurement<MeasurementType>.WriteXml
    fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: Measurement(Of MeasurementType).WriteXml
    fullName: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Measurement`1.Value
  commentId: P:Microsoft.Health.ItemTypes.Measurement`1.Value
  isExternal: false
  name: Value
  nameWithType: Measurement<MeasurementType>.Value
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.Value
  nameWithType.vb: Measurement(Of MeasurementType).Value
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).Value
- uid: Microsoft.Health.ItemTypes.Measurement`1.DisplayValue
  commentId: P:Microsoft.Health.ItemTypes.Measurement`1.DisplayValue
  isExternal: false
  name: DisplayValue
  nameWithType: Measurement<MeasurementType>.DisplayValue
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.DisplayValue
  nameWithType.vb: Measurement(Of MeasurementType).DisplayValue
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).DisplayValue
- uid: Microsoft.Health.ItemTypes.Measurement`1.ToString
  commentId: M:Microsoft.Health.ItemTypes.Measurement`1.ToString
  isExternal: false
  name: ToString()
  nameWithType: Measurement<MeasurementType>.ToString()
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.ToString()
  nameWithType.vb: Measurement(Of MeasurementType).ToString()
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).ToString()
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.ToString
    name: ToString
    nameWithType: Measurement<MeasurementType>.ToString
    fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.ToString
    name: ToString
    nameWithType: Measurement(Of MeasurementType).ToString
    fullName: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.ItemTypes.TemperatureMeasurement
  commentId: T:Microsoft.Health.ItemTypes.TemperatureMeasurement
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: TemperatureMeasurement
  nameWithType: TemperatureMeasurement
  fullName: Microsoft.Health.ItemTypes.TemperatureMeasurement
- uid: Microsoft.Health.ItemTypes.TemperatureMeasurement.#ctor*
  commentId: Overload:Microsoft.Health.ItemTypes.TemperatureMeasurement.#ctor
  isExternal: false
  name: TemperatureMeasurement
  nameWithType: TemperatureMeasurement.TemperatureMeasurement
  fullName: Microsoft.Health.ItemTypes.TemperatureMeasurement.TemperatureMeasurement
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Microsoft.Health.ItemTypes.DisplayValue.Units
  commentId: P:Microsoft.Health.ItemTypes.DisplayValue.Units
- uid: Microsoft.Health.ItemTypes.DisplayValue.UnitsCode
  commentId: P:Microsoft.Health.ItemTypes.DisplayValue.UnitsCode
- uid: Microsoft.Health.ItemTypes.DisplayValue
  commentId: T:Microsoft.Health.ItemTypes.DisplayValue
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: DisplayValue
  nameWithType: DisplayValue
  fullName: Microsoft.Health.ItemTypes.DisplayValue
- uid: Microsoft.Health.ItemTypes.Measurement{System.Double}.AssertMeasurementValue(System.Double)
  commentId: M:Microsoft.Health.ItemTypes.Measurement{System.Double}.AssertMeasurementValue(System.Double)
  parent: Microsoft.Health.ItemTypes.Measurement{System.Double}
  definition: Microsoft.Health.ItemTypes.Measurement`1.AssertMeasurementValue(`0)
  name: AssertMeasurementValue(Double)
  nameWithType: Measurement<Double>.AssertMeasurementValue(Double)
  fullName: Microsoft.Health.ItemTypes.Measurement<System.Double>.AssertMeasurementValue(System.Double)
  nameWithType.vb: Measurement(Of Double).AssertMeasurementValue(Double)
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of System.Double).AssertMeasurementValue(System.Double)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.AssertMeasurementValue(`0)
    name: AssertMeasurementValue
    nameWithType: Measurement<Double>.AssertMeasurementValue
    fullName: Microsoft.Health.ItemTypes.Measurement<System.Double>.AssertMeasurementValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.AssertMeasurementValue(`0)
    name: AssertMeasurementValue
    nameWithType: Measurement(Of Double).AssertMeasurementValue
    fullName: Microsoft.Health.ItemTypes.Measurement(Of System.Double).AssertMeasurementValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.TemperatureMeasurement.AssertMeasurementValue*
  commentId: Overload:Microsoft.Health.ItemTypes.TemperatureMeasurement.AssertMeasurementValue
  isExternal: false
  name: AssertMeasurementValue
  nameWithType: TemperatureMeasurement.AssertMeasurementValue
  fullName: Microsoft.Health.ItemTypes.TemperatureMeasurement.AssertMeasurementValue
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
- uid: Microsoft.Health.ItemTypes.Measurement`1.AssertMeasurementValue(`0)
  commentId: M:Microsoft.Health.ItemTypes.Measurement`1.AssertMeasurementValue(`0)
  isExternal: false
  name: AssertMeasurementValue(MeasurementType)
  nameWithType: Measurement<MeasurementType>.AssertMeasurementValue(MeasurementType)
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.AssertMeasurementValue(MeasurementType)
  nameWithType.vb: Measurement(Of MeasurementType).AssertMeasurementValue(MeasurementType)
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).AssertMeasurementValue(MeasurementType)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.AssertMeasurementValue(`0)
    name: AssertMeasurementValue
    nameWithType: Measurement<MeasurementType>.AssertMeasurementValue
    fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.AssertMeasurementValue
  - name: (
    nameWithType: (
    fullName: (
  - name: MeasurementType
    nameWithType: MeasurementType
    fullName: MeasurementType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.AssertMeasurementValue(`0)
    name: AssertMeasurementValue
    nameWithType: Measurement(Of MeasurementType).AssertMeasurementValue
    fullName: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).AssertMeasurementValue
  - name: (
    nameWithType: (
    fullName: (
  - name: MeasurementType
    nameWithType: MeasurementType
    fullName: MeasurementType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Measurement{System.Double}.ParseValueXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.Measurement{System.Double}.ParseValueXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.Measurement{System.Double}
  definition: Microsoft.Health.ItemTypes.Measurement`1.ParseValueXml(System.Xml.XPath.XPathNavigator)
  name: ParseValueXml(XPathNavigator)
  nameWithType: Measurement<Double>.ParseValueXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.Measurement<System.Double>.ParseValueXml(System.Xml.XPath.XPathNavigator)
  nameWithType.vb: Measurement(Of Double).ParseValueXml(XPathNavigator)
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of System.Double).ParseValueXml(System.Xml.XPath.XPathNavigator)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.ParseValueXml(System.Xml.XPath.XPathNavigator)
    name: ParseValueXml
    nameWithType: Measurement<Double>.ParseValueXml
    fullName: Microsoft.Health.ItemTypes.Measurement<System.Double>.ParseValueXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.ParseValueXml(System.Xml.XPath.XPathNavigator)
    name: ParseValueXml
    nameWithType: Measurement(Of Double).ParseValueXml
    fullName: Microsoft.Health.ItemTypes.Measurement(Of System.Double).ParseValueXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.TemperatureMeasurement.ParseValueXml*
  commentId: Overload:Microsoft.Health.ItemTypes.TemperatureMeasurement.ParseValueXml
  isExternal: false
  name: ParseValueXml
  nameWithType: TemperatureMeasurement.ParseValueXml
  fullName: Microsoft.Health.ItemTypes.TemperatureMeasurement.ParseValueXml
- uid: System.Xml.XPath.XPathNavigator
  commentId: T:System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: true
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: Microsoft.Health.ItemTypes.Measurement`1.ParseValueXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.Measurement`1.ParseValueXml(System.Xml.XPath.XPathNavigator)
  isExternal: true
  name: ParseValueXml(XPathNavigator)
  nameWithType: Measurement<MeasurementType>.ParseValueXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.ParseValueXml(System.Xml.XPath.XPathNavigator)
  nameWithType.vb: Measurement(Of MeasurementType).ParseValueXml(XPathNavigator)
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).ParseValueXml(System.Xml.XPath.XPathNavigator)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.ParseValueXml(System.Xml.XPath.XPathNavigator)
    name: ParseValueXml
    nameWithType: Measurement<MeasurementType>.ParseValueXml
    fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.ParseValueXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.ParseValueXml(System.Xml.XPath.XPathNavigator)
    name: ParseValueXml
    nameWithType: Measurement(Of MeasurementType).ParseValueXml
    fullName: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).ParseValueXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: false
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: Microsoft.Health.ItemTypes.Measurement{System.Double}.WriteValueXml(System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.Measurement{System.Double}.WriteValueXml(System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.Measurement{System.Double}
  definition: Microsoft.Health.ItemTypes.Measurement`1.WriteValueXml(System.Xml.XmlWriter)
  name: WriteValueXml(XmlWriter)
  nameWithType: Measurement<Double>.WriteValueXml(XmlWriter)
  fullName: Microsoft.Health.ItemTypes.Measurement<System.Double>.WriteValueXml(System.Xml.XmlWriter)
  nameWithType.vb: Measurement(Of Double).WriteValueXml(XmlWriter)
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of System.Double).WriteValueXml(System.Xml.XmlWriter)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.WriteValueXml(System.Xml.XmlWriter)
    name: WriteValueXml
    nameWithType: Measurement<Double>.WriteValueXml
    fullName: Microsoft.Health.ItemTypes.Measurement<System.Double>.WriteValueXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.WriteValueXml(System.Xml.XmlWriter)
    name: WriteValueXml
    nameWithType: Measurement(Of Double).WriteValueXml
    fullName: Microsoft.Health.ItemTypes.Measurement(Of System.Double).WriteValueXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.TemperatureMeasurement.WriteValueXml*
  commentId: Overload:Microsoft.Health.ItemTypes.TemperatureMeasurement.WriteValueXml
  isExternal: false
  name: WriteValueXml
  nameWithType: TemperatureMeasurement.WriteValueXml
  fullName: Microsoft.Health.ItemTypes.TemperatureMeasurement.WriteValueXml
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: Microsoft.Health.ItemTypes.Measurement`1.WriteValueXml(System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.Measurement`1.WriteValueXml(System.Xml.XmlWriter)
  isExternal: true
  name: WriteValueXml(XmlWriter)
  nameWithType: Measurement<MeasurementType>.WriteValueXml(XmlWriter)
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.WriteValueXml(System.Xml.XmlWriter)
  nameWithType.vb: Measurement(Of MeasurementType).WriteValueXml(XmlWriter)
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).WriteValueXml(System.Xml.XmlWriter)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.WriteValueXml(System.Xml.XmlWriter)
    name: WriteValueXml
    nameWithType: Measurement<MeasurementType>.WriteValueXml
    fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.WriteValueXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.WriteValueXml(System.Xml.XmlWriter)
    name: WriteValueXml
    nameWithType: Measurement(Of MeasurementType).WriteValueXml
    fullName: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).WriteValueXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: Microsoft.Health.ItemTypes.Measurement{System.Double}.GetValueString(System.Double)
  commentId: M:Microsoft.Health.ItemTypes.Measurement{System.Double}.GetValueString(System.Double)
  parent: Microsoft.Health.ItemTypes.Measurement{System.Double}
  definition: Microsoft.Health.ItemTypes.Measurement`1.GetValueString(`0)
  name: GetValueString(Double)
  nameWithType: Measurement<Double>.GetValueString(Double)
  fullName: Microsoft.Health.ItemTypes.Measurement<System.Double>.GetValueString(System.Double)
  nameWithType.vb: Measurement(Of Double).GetValueString(Double)
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of System.Double).GetValueString(System.Double)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.GetValueString(`0)
    name: GetValueString
    nameWithType: Measurement<Double>.GetValueString
    fullName: Microsoft.Health.ItemTypes.Measurement<System.Double>.GetValueString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.GetValueString(`0)
    name: GetValueString
    nameWithType: Measurement(Of Double).GetValueString
    fullName: Microsoft.Health.ItemTypes.Measurement(Of System.Double).GetValueString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.TemperatureMeasurement.GetValueString*
  commentId: Overload:Microsoft.Health.ItemTypes.TemperatureMeasurement.GetValueString
  isExternal: false
  name: GetValueString
  nameWithType: TemperatureMeasurement.GetValueString
  fullName: Microsoft.Health.ItemTypes.TemperatureMeasurement.GetValueString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.ItemTypes.Measurement`1.GetValueString(`0)
  commentId: M:Microsoft.Health.ItemTypes.Measurement`1.GetValueString(`0)
  isExternal: false
  name: GetValueString(MeasurementType)
  nameWithType: Measurement<MeasurementType>.GetValueString(MeasurementType)
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.GetValueString(MeasurementType)
  nameWithType.vb: Measurement(Of MeasurementType).GetValueString(MeasurementType)
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).GetValueString(MeasurementType)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.GetValueString(`0)
    name: GetValueString
    nameWithType: Measurement<MeasurementType>.GetValueString
    fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.GetValueString
  - name: (
    nameWithType: (
    fullName: (
  - name: MeasurementType
    nameWithType: MeasurementType
    fullName: MeasurementType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.GetValueString(`0)
    name: GetValueString
    nameWithType: Measurement(Of MeasurementType).GetValueString
    fullName: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).GetValueString
  - name: (
    nameWithType: (
    fullName: (
  - name: MeasurementType
    nameWithType: MeasurementType
    fullName: MeasurementType
  - name: )
    nameWithType: )
    fullName: )
