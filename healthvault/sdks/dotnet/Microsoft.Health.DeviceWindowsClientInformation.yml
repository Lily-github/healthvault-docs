### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.DeviceWindowsClientInformation
  commentId: T:Microsoft.Health.DeviceWindowsClientInformation
  id: DeviceWindowsClientInformation
  parent: Microsoft.Health
  children:
  - Microsoft.Health.DeviceWindowsClientInformation.#ctor
  - Microsoft.Health.DeviceWindowsClientInformation.AutoDetectId
  - Microsoft.Health.DeviceWindowsClientInformation.DefaultDriverPackageInstallArguments
  - Microsoft.Health.DeviceWindowsClientInformation.DeviceClass
  - Microsoft.Health.DeviceWindowsClientInformation.DriverPackages
  - Microsoft.Health.DeviceWindowsClientInformation.GetSchema
  - Microsoft.Health.DeviceWindowsClientInformation.HardwareId
  - Microsoft.Health.DeviceWindowsClientInformation.InstalledHardwareIds
  - Microsoft.Health.DeviceWindowsClientInformation.ReadXml(System.Xml.XmlReader)
  - Microsoft.Health.DeviceWindowsClientInformation.WriteXml(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: DeviceWindowsClientInformation
  nameWithType: DeviceWindowsClientInformation
  fullName: Microsoft.Health.DeviceWindowsClientInformation
  type: Class
  source:
    remote:
      path: Microsoft.Health.Directory/devicewindowsclientinformation.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DeviceWindowsClientInformation
    path: ../Microsoft.Health.Directory/devicewindowsclientinformation.cs
    startLine: 18
  assemblies:
  - Microsoft.Health.Directory
  namespace: Microsoft.Health
  summary: "\nDeviceWindowsClientInformation contains the information required for windows clients in order to detect the device and install the appropriate driver for it.\n"
  example: []
  syntax:
    content: 'public class DeviceWindowsClientInformation : IXmlSerializable'
    content.vb: >-
      Public Class DeviceWindowsClientInformation
          Implements IXmlSerializable
  inheritance:
  - System.Object
  implements:
  - System.Xml.Serialization.IXmlSerializable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.DeviceWindowsClientInformation.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.DeviceWindowsClientInformation.#ctor
  commentId: M:Microsoft.Health.DeviceWindowsClientInformation.#ctor
  id: '#ctor'
  parent: Microsoft.Health.DeviceWindowsClientInformation
  langs:
  - csharp
  - vb
  name: DeviceWindowsClientInformation()
  nameWithType: DeviceWindowsClientInformation.DeviceWindowsClientInformation()
  fullName: Microsoft.Health.DeviceWindowsClientInformation.DeviceWindowsClientInformation()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Directory/devicewindowsclientinformation.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.Directory/devicewindowsclientinformation.cs
    startLine: 24
  assemblies:
  - Microsoft.Health.Directory
  namespace: Microsoft.Health
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.DeviceWindowsClientInformation\" data-throw-if-not-resolved=\"false\"></xref> class with default parameters.\n"
  example: []
  syntax:
    content: public DeviceWindowsClientInformation()
    content.vb: Public Sub New
  overload: Microsoft.Health.DeviceWindowsClientInformation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.DeviceWindowsClientInformation.DeviceClass
  commentId: P:Microsoft.Health.DeviceWindowsClientInformation.DeviceClass
  id: DeviceClass
  parent: Microsoft.Health.DeviceWindowsClientInformation
  langs:
  - csharp
  - vb
  name: DeviceClass
  nameWithType: DeviceWindowsClientInformation.DeviceClass
  fullName: Microsoft.Health.DeviceWindowsClientInformation.DeviceClass
  type: Property
  source:
    remote:
      path: Microsoft.Health.Directory/devicewindowsclientinformation.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DeviceClass
    path: ../Microsoft.Health.Directory/devicewindowsclientinformation.cs
    startLine: 57
  assemblies:
  - Microsoft.Health.Directory
  namespace: Microsoft.Health
  summary: "\nGets or sets the Windows Portable Device (WPD) class for this device.\n"
  example: []
  syntax:
    content: public Guid DeviceClass { get; set; }
    content.vb: Public Property DeviceClass As Guid
    parameters: []
    return:
      type: System.Guid
  overload: Microsoft.Health.DeviceWindowsClientInformation.DeviceClass*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.DeviceWindowsClientInformation.HardwareId
  commentId: P:Microsoft.Health.DeviceWindowsClientInformation.HardwareId
  id: HardwareId
  parent: Microsoft.Health.DeviceWindowsClientInformation
  langs:
  - csharp
  - vb
  name: HardwareId
  nameWithType: DeviceWindowsClientInformation.HardwareId
  fullName: Microsoft.Health.DeviceWindowsClientInformation.HardwareId
  type: Property
  source:
    remote:
      path: Microsoft.Health.Directory/devicewindowsclientinformation.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: HardwareId
    path: ../Microsoft.Health.Directory/devicewindowsclientinformation.cs
    startLine: 71
  assemblies:
  - Microsoft.Health.Directory
  namespace: Microsoft.Health
  summary: "\nGets or sets the Windows Portable Device (WPD) hardware identifier for this device.\n"
  remarks: "\nRecommended maximum length is 32 characters.\n"
  example: []
  syntax:
    content: public string HardwareId { get; set; }
    content.vb: Public Property HardwareId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.DeviceWindowsClientInformation.HardwareId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.DeviceWindowsClientInformation.InstalledHardwareIds
  commentId: P:Microsoft.Health.DeviceWindowsClientInformation.InstalledHardwareIds
  id: InstalledHardwareIds
  parent: Microsoft.Health.DeviceWindowsClientInformation
  langs:
  - csharp
  - vb
  name: InstalledHardwareIds
  nameWithType: DeviceWindowsClientInformation.InstalledHardwareIds
  fullName: Microsoft.Health.DeviceWindowsClientInformation.InstalledHardwareIds
  type: Property
  source:
    remote:
      path: Microsoft.Health.Directory/devicewindowsclientinformation.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: InstalledHardwareIds
    path: ../Microsoft.Health.Directory/devicewindowsclientinformation.cs
    startLine: 85
  assemblies:
  - Microsoft.Health.Directory
  namespace: Microsoft.Health
  summary: "\nGets the collection of Windows Portable Device (WPD) installed hardware identifiers for this device.\n"
  remarks: "\nMaximum length of string is 1024 characters.\n"
  example: []
  syntax:
    content: public Collection<string> InstalledHardwareIds { get; }
    content.vb: Public ReadOnly Property InstalledHardwareIds As Collection(Of String)
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{System.String}
  overload: Microsoft.Health.DeviceWindowsClientInformation.InstalledHardwareIds*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.DeviceWindowsClientInformation.AutoDetectId
  commentId: P:Microsoft.Health.DeviceWindowsClientInformation.AutoDetectId
  id: AutoDetectId
  parent: Microsoft.Health.DeviceWindowsClientInformation
  langs:
  - csharp
  - vb
  name: AutoDetectId
  nameWithType: DeviceWindowsClientInformation.AutoDetectId
  fullName: Microsoft.Health.DeviceWindowsClientInformation.AutoDetectId
  type: Property
  source:
    remote:
      path: Microsoft.Health.Directory/devicewindowsclientinformation.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AutoDetectId
    path: ../Microsoft.Health.Directory/devicewindowsclientinformation.cs
    startLine: 99
  assemblies:
  - Microsoft.Health.Directory
  namespace: Microsoft.Health
  summary: "\nGets or sets the Windows Portable Device (WPD) auto-detect-id of model, \nspecified by the device manufacturer.\n"
  remarks: "\nMaximum length is 32 characters.\n"
  example: []
  syntax:
    content: public string AutoDetectId { get; set; }
    content.vb: Public Property AutoDetectId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.DeviceWindowsClientInformation.AutoDetectId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.DeviceWindowsClientInformation.DefaultDriverPackageInstallArguments
  commentId: P:Microsoft.Health.DeviceWindowsClientInformation.DefaultDriverPackageInstallArguments
  id: DefaultDriverPackageInstallArguments
  parent: Microsoft.Health.DeviceWindowsClientInformation
  langs:
  - csharp
  - vb
  name: DefaultDriverPackageInstallArguments
  nameWithType: DeviceWindowsClientInformation.DefaultDriverPackageInstallArguments
  fullName: Microsoft.Health.DeviceWindowsClientInformation.DefaultDriverPackageInstallArguments
  type: Property
  source:
    remote:
      path: Microsoft.Health.Directory/devicewindowsclientinformation.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DefaultDriverPackageInstallArguments
    path: ../Microsoft.Health.Directory/devicewindowsclientinformation.cs
    startLine: 113
  assemblies:
  - Microsoft.Health.Directory
  namespace: Microsoft.Health
  summary: "\nGets or sets the default arguments for installing the specified driver package.\n"
  remarks: "\nMaximum length is 2048 characters.\n"
  example: []
  syntax:
    content: public string DefaultDriverPackageInstallArguments { get; set; }
    content.vb: Public Property DefaultDriverPackageInstallArguments As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.DeviceWindowsClientInformation.DefaultDriverPackageInstallArguments*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.DeviceWindowsClientInformation.DriverPackages
  commentId: P:Microsoft.Health.DeviceWindowsClientInformation.DriverPackages
  id: DriverPackages
  parent: Microsoft.Health.DeviceWindowsClientInformation
  langs:
  - csharp
  - vb
  name: DriverPackages
  nameWithType: DeviceWindowsClientInformation.DriverPackages
  fullName: Microsoft.Health.DeviceWindowsClientInformation.DriverPackages
  type: Property
  source:
    remote:
      path: Microsoft.Health.Directory/devicewindowsclientinformation.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DriverPackages
    path: ../Microsoft.Health.Directory/devicewindowsclientinformation.cs
    startLine: 124
  assemblies:
  - Microsoft.Health.Directory
  namespace: Microsoft.Health
  summary: "\nGets a collection of driver packages for this device model.\n"
  example: []
  syntax:
    content: public Collection<DeviceDriverPackage> DriverPackages { get; }
    content.vb: Public ReadOnly Property DriverPackages As Collection(Of DeviceDriverPackage)
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{Microsoft.Health.DeviceDriverPackage}
  overload: Microsoft.Health.DeviceWindowsClientInformation.DriverPackages*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.DeviceWindowsClientInformation.GetSchema
  commentId: M:Microsoft.Health.DeviceWindowsClientInformation.GetSchema
  id: GetSchema
  parent: Microsoft.Health.DeviceWindowsClientInformation
  langs:
  - csharp
  - vb
  name: GetSchema()
  nameWithType: DeviceWindowsClientInformation.GetSchema()
  fullName: Microsoft.Health.DeviceWindowsClientInformation.GetSchema()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Directory/devicewindowsclientinformation.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetSchema
    path: ../Microsoft.Health.Directory/devicewindowsclientinformation.cs
    startLine: 139
  assemblies:
  - Microsoft.Health.Directory
  namespace: Microsoft.Health
  summary: "\nGet the schema as per IXmlSerializable requirement.\nAlways returns null.\n"
  example: []
  syntax:
    content: public XmlSchema GetSchema()
    content.vb: Public Function GetSchema As XmlSchema
    return:
      type: System.Xml.Schema.XmlSchema
      description: "null"
  overload: Microsoft.Health.DeviceWindowsClientInformation.GetSchema*
  implements:
  - System.Xml.Serialization.IXmlSerializable.GetSchema
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.DeviceWindowsClientInformation.ReadXml(System.Xml.XmlReader)
  commentId: M:Microsoft.Health.DeviceWindowsClientInformation.ReadXml(System.Xml.XmlReader)
  id: ReadXml(System.Xml.XmlReader)
  parent: Microsoft.Health.DeviceWindowsClientInformation
  langs:
  - csharp
  - vb
  name: ReadXml(XmlReader)
  nameWithType: DeviceWindowsClientInformation.ReadXml(XmlReader)
  fullName: Microsoft.Health.DeviceWindowsClientInformation.ReadXml(System.Xml.XmlReader)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Directory/devicewindowsclientinformation.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ReadXml
    path: ../Microsoft.Health.Directory/devicewindowsclientinformation.cs
    startLine: 159
  assemblies:
  - Microsoft.Health.Directory
  namespace: Microsoft.Health
  summary: "\nGenerates an object from its XML representation.\n"
  remarks: "\nThe ReadXml method must reconstitute your object using the information that was written by the WriteXml method\n"
  example: []
  syntax:
    content: public void ReadXml(XmlReader reader)
    content.vb: Public Sub ReadXml(reader As XmlReader)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "\nThe XmlReader stream from which the object is deserialized.\n"
  overload: Microsoft.Health.DeviceWindowsClientInformation.ReadXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nIf the argument <span class=\"paramref\">reader</span> was <strong>null</strong>.\n"
  implements:
  - System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.DeviceWindowsClientInformation.WriteXml(System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.DeviceWindowsClientInformation.WriteXml(System.Xml.XmlWriter)
  id: WriteXml(System.Xml.XmlWriter)
  parent: Microsoft.Health.DeviceWindowsClientInformation
  langs:
  - csharp
  - vb
  name: WriteXml(XmlWriter)
  nameWithType: DeviceWindowsClientInformation.WriteXml(XmlWriter)
  fullName: Microsoft.Health.DeviceWindowsClientInformation.WriteXml(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Directory/devicewindowsclientinformation.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteXml
    path: ../Microsoft.Health.Directory/devicewindowsclientinformation.cs
    startLine: 193
  assemblies:
  - Microsoft.Health.Directory
  namespace: Microsoft.Health
  summary: "\nConverts an object into its XML representation.\n"
  remarks: "\nWrite sufficient information to the XmlWriter stream to allow the ReadXml method to reconstitute the object.\n"
  example: []
  syntax:
    content: public void WriteXml(XmlWriter writer)
    content.vb: Public Sub WriteXml(writer As XmlWriter)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "The XmlWriter stream to which the object is serialized. \n"
  overload: Microsoft.Health.DeviceWindowsClientInformation.WriteXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nIf the argument <span class=\"paramref\">writer</span> was <strong>null</strong>.\n"
  implements:
  - System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Xml.Serialization.IXmlSerializable
  commentId: T:System.Xml.Serialization.IXmlSerializable
  parent: System.Xml.Serialization
  isExternal: true
  name: IXmlSerializable
  nameWithType: IXmlSerializable
  fullName: System.Xml.Serialization.IXmlSerializable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.DeviceWindowsClientInformation.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<DeviceWindowsClientInformation>()
  nameWithType: TypeHelper.ValueOrDbNull<DeviceWindowsClientInformation>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.DeviceWindowsClientInformation>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of DeviceWindowsClientInformation)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.DeviceWindowsClientInformation)()
  name.vb: ValueOrDbNull(Of DeviceWindowsClientInformation)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<DeviceWindowsClientInformation>
    nameWithType: TypeHelper.ValueOrDbNull<DeviceWindowsClientInformation>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.DeviceWindowsClientInformation>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of DeviceWindowsClientInformation)
    nameWithType: TypeHelper.ValueOrDbNull(Of DeviceWindowsClientInformation)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.DeviceWindowsClientInformation)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Xml.Serialization
  commentId: N:System.Xml.Serialization
  isExternal: false
  name: System.Xml.Serialization
  nameWithType: System.Xml.Serialization
  fullName: System.Xml.Serialization
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.DeviceWindowsClientInformation
  commentId: T:Microsoft.Health.DeviceWindowsClientInformation
  parent: Microsoft.Health
  isExternal: false
  name: DeviceWindowsClientInformation
  nameWithType: DeviceWindowsClientInformation
  fullName: Microsoft.Health.DeviceWindowsClientInformation
- uid: Microsoft.Health.DeviceWindowsClientInformation.#ctor*
  commentId: Overload:Microsoft.Health.DeviceWindowsClientInformation.#ctor
  isExternal: false
  name: DeviceWindowsClientInformation
  nameWithType: DeviceWindowsClientInformation.DeviceWindowsClientInformation
  fullName: Microsoft.Health.DeviceWindowsClientInformation.DeviceWindowsClientInformation
- uid: Microsoft.Health.DeviceWindowsClientInformation.DeviceClass*
  commentId: Overload:Microsoft.Health.DeviceWindowsClientInformation.DeviceClass
  isExternal: false
  name: DeviceClass
  nameWithType: DeviceWindowsClientInformation.DeviceClass
  fullName: Microsoft.Health.DeviceWindowsClientInformation.DeviceClass
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Microsoft.Health.DeviceWindowsClientInformation.HardwareId*
  commentId: Overload:Microsoft.Health.DeviceWindowsClientInformation.HardwareId
  isExternal: false
  name: HardwareId
  nameWithType: DeviceWindowsClientInformation.HardwareId
  fullName: Microsoft.Health.DeviceWindowsClientInformation.HardwareId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.DeviceWindowsClientInformation.InstalledHardwareIds*
  commentId: Overload:Microsoft.Health.DeviceWindowsClientInformation.InstalledHardwareIds
  isExternal: false
  name: InstalledHardwareIds
  nameWithType: DeviceWindowsClientInformation.InstalledHardwareIds
  fullName: Microsoft.Health.DeviceWindowsClientInformation.InstalledHardwareIds
- uid: System.Collections.ObjectModel.Collection{System.String}
  commentId: T:System.Collections.ObjectModel.Collection{System.String}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<String>
  nameWithType: Collection<String>
  fullName: System.Collections.ObjectModel.Collection<System.String>
  nameWithType.vb: Collection(Of String)
  fullName.vb: System.Collections.ObjectModel.Collection(Of System.String)
  name.vb: Collection(Of String)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1
  commentId: T:System.Collections.ObjectModel.Collection`1
  isExternal: true
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  nameWithType.vb: Collection(Of T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T)
  name.vb: Collection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: Microsoft.Health.DeviceWindowsClientInformation.AutoDetectId*
  commentId: Overload:Microsoft.Health.DeviceWindowsClientInformation.AutoDetectId
  isExternal: false
  name: AutoDetectId
  nameWithType: DeviceWindowsClientInformation.AutoDetectId
  fullName: Microsoft.Health.DeviceWindowsClientInformation.AutoDetectId
- uid: Microsoft.Health.DeviceWindowsClientInformation.DefaultDriverPackageInstallArguments*
  commentId: Overload:Microsoft.Health.DeviceWindowsClientInformation.DefaultDriverPackageInstallArguments
  isExternal: false
  name: DefaultDriverPackageInstallArguments
  nameWithType: DeviceWindowsClientInformation.DefaultDriverPackageInstallArguments
  fullName: Microsoft.Health.DeviceWindowsClientInformation.DefaultDriverPackageInstallArguments
- uid: Microsoft.Health.DeviceWindowsClientInformation.DriverPackages*
  commentId: Overload:Microsoft.Health.DeviceWindowsClientInformation.DriverPackages
  isExternal: false
  name: DriverPackages
  nameWithType: DeviceWindowsClientInformation.DriverPackages
  fullName: Microsoft.Health.DeviceWindowsClientInformation.DriverPackages
- uid: System.Collections.ObjectModel.Collection{Microsoft.Health.DeviceDriverPackage}
  commentId: T:System.Collections.ObjectModel.Collection{Microsoft.Health.DeviceDriverPackage}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<DeviceDriverPackage>
  nameWithType: Collection<DeviceDriverPackage>
  fullName: System.Collections.ObjectModel.Collection<Microsoft.Health.DeviceDriverPackage>
  nameWithType.vb: Collection(Of DeviceDriverPackage)
  fullName.vb: System.Collections.ObjectModel.Collection(Of Microsoft.Health.DeviceDriverPackage)
  name.vb: Collection(Of DeviceDriverPackage)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.DeviceDriverPackage
    name: DeviceDriverPackage
    nameWithType: DeviceDriverPackage
    fullName: Microsoft.Health.DeviceDriverPackage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.DeviceDriverPackage
    name: DeviceDriverPackage
    nameWithType: DeviceDriverPackage
    fullName: Microsoft.Health.DeviceDriverPackage
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.DeviceWindowsClientInformation.GetSchema*
  commentId: Overload:Microsoft.Health.DeviceWindowsClientInformation.GetSchema
  isExternal: false
  name: GetSchema
  nameWithType: DeviceWindowsClientInformation.GetSchema
  fullName: Microsoft.Health.DeviceWindowsClientInformation.GetSchema
- uid: System.Xml.Serialization.IXmlSerializable.GetSchema
  commentId: M:System.Xml.Serialization.IXmlSerializable.GetSchema
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  name: GetSchema()
  nameWithType: IXmlSerializable.GetSchema()
  fullName: System.Xml.Serialization.IXmlSerializable.GetSchema()
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.GetSchema
    name: GetSchema
    nameWithType: IXmlSerializable.GetSchema
    fullName: System.Xml.Serialization.IXmlSerializable.GetSchema
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.GetSchema
    name: GetSchema
    nameWithType: IXmlSerializable.GetSchema
    fullName: System.Xml.Serialization.IXmlSerializable.GetSchema
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.Schema.XmlSchema
  commentId: T:System.Xml.Schema.XmlSchema
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema
- uid: System.Xml.Schema
  commentId: N:System.Xml.Schema
  isExternal: false
  name: System.Xml.Schema
  nameWithType: System.Xml.Schema
  fullName: System.Xml.Schema
- uid: Microsoft.Health.DeviceWindowsClientInformation.ReadXml*
  commentId: Overload:Microsoft.Health.DeviceWindowsClientInformation.ReadXml
  isExternal: false
  name: ReadXml
  nameWithType: DeviceWindowsClientInformation.ReadXml
  fullName: Microsoft.Health.DeviceWindowsClientInformation.ReadXml
- uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  commentId: M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  name: ReadXml(XmlReader)
  nameWithType: IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
    name: ReadXml
    nameWithType: IXmlSerializable.ReadXml
    fullName: System.Xml.Serialization.IXmlSerializable.ReadXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
    name: ReadXml
    nameWithType: IXmlSerializable.ReadXml
    fullName: System.Xml.Serialization.IXmlSerializable.ReadXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.Xml.XmlReader
  commentId: T:System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: Microsoft.Health.DeviceWindowsClientInformation.WriteXml*
  commentId: Overload:Microsoft.Health.DeviceWindowsClientInformation.WriteXml
  isExternal: false
  name: WriteXml
  nameWithType: DeviceWindowsClientInformation.WriteXml
  fullName: Microsoft.Health.DeviceWindowsClientInformation.WriteXml
- uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  commentId: M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  name: WriteXml(XmlWriter)
  nameWithType: IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: IXmlSerializable.WriteXml
    fullName: System.Xml.Serialization.IXmlSerializable.WriteXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: IXmlSerializable.WriteXml
    fullName: System.Xml.Serialization.IXmlSerializable.WriteXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
