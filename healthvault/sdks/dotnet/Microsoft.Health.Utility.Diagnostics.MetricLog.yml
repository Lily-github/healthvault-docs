### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Utility.Diagnostics.MetricLog
  commentId: T:Microsoft.Health.Utility.Diagnostics.MetricLog
  id: MetricLog
  parent: Microsoft.Health.Utility.Diagnostics
  children:
  - Microsoft.Health.Utility.Diagnostics.MetricLog.#ctor(System.String,System.String,Microsoft.Health.Utility.Diagnostics.TraceTarget,System.String)
  - Microsoft.Health.Utility.Diagnostics.MetricLog.#ctor(System.String,System.String,System.String,Microsoft.Health.Utility.Diagnostics.TraceTarget,System.String)
  - Microsoft.Health.Utility.Diagnostics.MetricLog.AddEntry(System.String,System.String,System.Int64,System.Nullable{System.Guid},System.DateTime)
  - Microsoft.Health.Utility.Diagnostics.MetricLog.AddEntry(System.String,System.String,System.Int64,System.Nullable{System.Guid},System.DateTime,System.Nullable{System.Int16})
  - Microsoft.Health.Utility.Diagnostics.MetricLog.Enabled
  - Microsoft.Health.Utility.Diagnostics.MetricLog.Metrics
  - Microsoft.Health.Utility.Diagnostics.MetricLog.NormalizeEventsOnSaveToDB(System.Collections.Generic.IList{Microsoft.Health.Utility.Diagnostics.MetricLogEntry})
  - Microsoft.Health.Utility.Diagnostics.MetricLog.ReadLogSettings
  langs:
  - csharp
  - vb
  name: MetricLog
  nameWithType: MetricLog
  fullName: Microsoft.Health.Utility.Diagnostics.MetricLog
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/MetricLog.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: MetricLog
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/MetricLog.cs
    startLine: 14
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  syntax:
    content: 'public class MetricLog : Log<MetricLogEntry>, IDisposable, IMetricLog'
    content.vb: >-
      Public Class MetricLog
          Inherits Log(Of MetricLogEntry)
          Implements IDisposable, IMetricLog
  inheritance:
  - System.Object
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}
  implements:
  - System.IDisposable
  - Microsoft.Health.Utility.Diagnostics.IMetricLog
  inheritedMembers:
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.MaxLogIntervalMilliseconds
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.LogBatchSize
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.MaxEventLogEntryPeriodSeconds
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.LogContextName
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.DatabaseConnectionString
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.LogTableName
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.ConfigurationParametersQuery
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.TraceTarget
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.LogFileName
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.TruncateLogFile
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.CreateLoggerFailed
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.EventLogName
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.EventSourceName
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.EventLog
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.BaseLogger
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.LogParameters
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.Init
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.ReadComponentSettings
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.UpdateLogSettings
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.GetParameterValue(System.String,System.String)
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.GetSeverity(System.UInt16)
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.GetFunctionalArea(System.UInt16)
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.DetermineEventLogEntryType(System.UInt16)
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.SafeWriteEventLog(System.UInt16,System.UInt16,System.String,System.Exception)
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.AppendException(System.UInt16,System.String,System.Exception,System.String)
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.Dispose
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.Dispose(System.Boolean)
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.DisposeLogger
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.Utility.Diagnostics.MetricLog.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.Utility.Diagnostics.MetricLog.#ctor(System.String,System.String,Microsoft.Health.Utility.Diagnostics.TraceTarget,System.String)
  commentId: M:Microsoft.Health.Utility.Diagnostics.MetricLog.#ctor(System.String,System.String,Microsoft.Health.Utility.Diagnostics.TraceTarget,System.String)
  id: '#ctor(System.String,System.String,Microsoft.Health.Utility.Diagnostics.TraceTarget,System.String)'
  parent: Microsoft.Health.Utility.Diagnostics.MetricLog
  langs:
  - csharp
  - vb
  name: MetricLog(String, String, TraceTarget, String)
  nameWithType: MetricLog.MetricLog(String, String, TraceTarget, String)
  fullName: Microsoft.Health.Utility.Diagnostics.MetricLog.MetricLog(System.String, System.String, Microsoft.Health.Utility.Diagnostics.TraceTarget, System.String)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/MetricLog.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/MetricLog.cs
    startLine: 23
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  syntax:
    content: public MetricLog(string loggerName, string eventLogName, TraceTarget target, string connectionString)
    content.vb: Public Sub New(loggerName As String, eventLogName As String, target As TraceTarget, connectionString As String)
    parameters:
    - id: loggerName
      type: System.String
    - id: eventLogName
      type: System.String
    - id: target
      type: Microsoft.Health.Utility.Diagnostics.TraceTarget
    - id: connectionString
      type: System.String
  overload: Microsoft.Health.Utility.Diagnostics.MetricLog.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Diagnostics.MetricLog.#ctor(System.String,System.String,System.String,Microsoft.Health.Utility.Diagnostics.TraceTarget,System.String)
  commentId: M:Microsoft.Health.Utility.Diagnostics.MetricLog.#ctor(System.String,System.String,System.String,Microsoft.Health.Utility.Diagnostics.TraceTarget,System.String)
  id: '#ctor(System.String,System.String,System.String,Microsoft.Health.Utility.Diagnostics.TraceTarget,System.String)'
  parent: Microsoft.Health.Utility.Diagnostics.MetricLog
  langs:
  - csharp
  - vb
  name: MetricLog(String, String, String, TraceTarget, String)
  nameWithType: MetricLog.MetricLog(String, String, String, TraceTarget, String)
  fullName: Microsoft.Health.Utility.Diagnostics.MetricLog.MetricLog(System.String, System.String, System.String, Microsoft.Health.Utility.Diagnostics.TraceTarget, System.String)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/MetricLog.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/MetricLog.cs
    startLine: 28
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  syntax:
    content: public MetricLog(string loggerName, string eventLogName, string eventSourceName, TraceTarget target, string connectionString)
    content.vb: Public Sub New(loggerName As String, eventLogName As String, eventSourceName As String, target As TraceTarget, connectionString As String)
    parameters:
    - id: loggerName
      type: System.String
    - id: eventLogName
      type: System.String
    - id: eventSourceName
      type: System.String
    - id: target
      type: Microsoft.Health.Utility.Diagnostics.TraceTarget
    - id: connectionString
      type: System.String
  overload: Microsoft.Health.Utility.Diagnostics.MetricLog.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Diagnostics.MetricLog.Metrics
  commentId: P:Microsoft.Health.Utility.Diagnostics.MetricLog.Metrics
  id: Metrics
  parent: Microsoft.Health.Utility.Diagnostics.MetricLog
  langs:
  - csharp
  - vb
  name: Metrics
  nameWithType: MetricLog.Metrics
  fullName: Microsoft.Health.Utility.Diagnostics.MetricLog.Metrics
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/MetricLog.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Metrics
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/MetricLog.cs
    startLine: 33
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  syntax:
    content: protected static IDictionary<string, Metric> Metrics { get; }
    content.vb: Protected Shared ReadOnly Property Metrics As IDictionary(Of String, Metric)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Health.Utility.Diagnostics.Metric}
  overload: Microsoft.Health.Utility.Diagnostics.MetricLog.Metrics*
  modifiers.csharp:
  - protected
  - static
  - get
  modifiers.vb:
  - Protected
  - Shared
  - ReadOnly
- uid: Microsoft.Health.Utility.Diagnostics.MetricLog.Enabled
  commentId: P:Microsoft.Health.Utility.Diagnostics.MetricLog.Enabled
  id: Enabled
  parent: Microsoft.Health.Utility.Diagnostics.MetricLog
  langs:
  - csharp
  - vb
  name: Enabled
  nameWithType: MetricLog.Enabled
  fullName: Microsoft.Health.Utility.Diagnostics.MetricLog.Enabled
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/MetricLog.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Enabled
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/MetricLog.cs
    startLine: 41
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nTrue if logging is enabled.\n"
  example: []
  syntax:
    content: public bool Enabled { get; protected set; }
    content.vb: Public Property Enabled As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.Health.Utility.Diagnostics.MetricLog.Enabled*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Health.Utility.Diagnostics.MetricLog.AddEntry(System.String,System.String,System.Int64,System.Nullable{System.Guid},System.DateTime)
  commentId: M:Microsoft.Health.Utility.Diagnostics.MetricLog.AddEntry(System.String,System.String,System.Int64,System.Nullable{System.Guid},System.DateTime)
  id: AddEntry(System.String,System.String,System.Int64,System.Nullable{System.Guid},System.DateTime)
  parent: Microsoft.Health.Utility.Diagnostics.MetricLog
  langs:
  - csharp
  - vb
  name: AddEntry(String, String, Int64, Nullable<Guid>, DateTime)
  nameWithType: MetricLog.AddEntry(String, String, Int64, Nullable<Guid>, DateTime)
  fullName: Microsoft.Health.Utility.Diagnostics.MetricLog.AddEntry(System.String, System.String, System.Int64, System.Nullable<System.Guid>, System.DateTime)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/MetricLog.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AddEntry
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/MetricLog.cs
    startLine: 43
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  syntax:
    content: public void AddEntry(string feature, string statName, long value, Guid? contextId, DateTime eventTime)
    content.vb: Public Sub AddEntry(feature As String, statName As String, value As Long, contextId As Guid?, eventTime As Date)
    parameters:
    - id: feature
      type: System.String
    - id: statName
      type: System.String
    - id: value
      type: System.Int64
    - id: contextId
      type: System.Nullable{System.Guid}
    - id: eventTime
      type: System.DateTime
  overload: Microsoft.Health.Utility.Diagnostics.MetricLog.AddEntry*
  nameWithType.vb: MetricLog.AddEntry(String, String, Int64, Nullable(Of Guid), DateTime)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Utility.Diagnostics.MetricLog.AddEntry(System.String, System.String, System.Int64, System.Nullable(Of System.Guid), System.DateTime)
  name.vb: AddEntry(String, String, Int64, Nullable(Of Guid), DateTime)
- uid: Microsoft.Health.Utility.Diagnostics.MetricLog.AddEntry(System.String,System.String,System.Int64,System.Nullable{System.Guid},System.DateTime,System.Nullable{System.Int16})
  commentId: M:Microsoft.Health.Utility.Diagnostics.MetricLog.AddEntry(System.String,System.String,System.Int64,System.Nullable{System.Guid},System.DateTime,System.Nullable{System.Int16})
  id: AddEntry(System.String,System.String,System.Int64,System.Nullable{System.Guid},System.DateTime,System.Nullable{System.Int16})
  parent: Microsoft.Health.Utility.Diagnostics.MetricLog
  langs:
  - csharp
  - vb
  name: AddEntry(String, String, Int64, Nullable<Guid>, DateTime, Nullable<Int16>)
  nameWithType: MetricLog.AddEntry(String, String, Int64, Nullable<Guid>, DateTime, Nullable<Int16>)
  fullName: Microsoft.Health.Utility.Diagnostics.MetricLog.AddEntry(System.String, System.String, System.Int64, System.Nullable<System.Guid>, System.DateTime, System.Nullable<System.Int16>)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/MetricLog.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AddEntry
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/MetricLog.cs
    startLine: 53
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  syntax:
    content: public void AddEntry(string feature, string statName, long value, Guid? contextId, DateTime eventTime, short ? correlationId)
    content.vb: Public Sub AddEntry(feature As String, statName As String, value As Long, contextId As Guid?, eventTime As Date, correlationId As Short?)
    parameters:
    - id: feature
      type: System.String
    - id: statName
      type: System.String
    - id: value
      type: System.Int64
    - id: contextId
      type: System.Nullable{System.Guid}
    - id: eventTime
      type: System.DateTime
    - id: correlationId
      type: System.Nullable{System.Int16}
  overload: Microsoft.Health.Utility.Diagnostics.MetricLog.AddEntry*
  implements:
  - Microsoft.Health.Utility.Diagnostics.IMetricLog.AddEntry(System.String,System.String,System.Int64,System.Nullable{System.Guid},System.DateTime,System.Nullable{System.Int16})
  nameWithType.vb: MetricLog.AddEntry(String, String, Int64, Nullable(Of Guid), DateTime, Nullable(Of Int16))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Utility.Diagnostics.MetricLog.AddEntry(System.String, System.String, System.Int64, System.Nullable(Of System.Guid), System.DateTime, System.Nullable(Of System.Int16))
  name.vb: AddEntry(String, String, Int64, Nullable(Of Guid), DateTime, Nullable(Of Int16))
- uid: Microsoft.Health.Utility.Diagnostics.MetricLog.ReadLogSettings
  commentId: M:Microsoft.Health.Utility.Diagnostics.MetricLog.ReadLogSettings
  id: ReadLogSettings
  parent: Microsoft.Health.Utility.Diagnostics.MetricLog
  langs:
  - csharp
  - vb
  name: ReadLogSettings()
  nameWithType: MetricLog.ReadLogSettings()
  fullName: Microsoft.Health.Utility.Diagnostics.MetricLog.ReadLogSettings()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/MetricLog.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ReadLogSettings
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/MetricLog.cs
    startLine: 91
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  syntax:
    content: protected override bool ReadLogSettings()
    content.vb: Protected Overrides Function ReadLogSettings As Boolean
    return:
      type: System.Boolean
  overridden: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.ReadLogSettings
  overload: Microsoft.Health.Utility.Diagnostics.MetricLog.ReadLogSettings*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Health.Utility.Diagnostics.MetricLog.NormalizeEventsOnSaveToDB(System.Collections.Generic.IList{Microsoft.Health.Utility.Diagnostics.MetricLogEntry})
  commentId: M:Microsoft.Health.Utility.Diagnostics.MetricLog.NormalizeEventsOnSaveToDB(System.Collections.Generic.IList{Microsoft.Health.Utility.Diagnostics.MetricLogEntry})
  id: NormalizeEventsOnSaveToDB(System.Collections.Generic.IList{Microsoft.Health.Utility.Diagnostics.MetricLogEntry})
  parent: Microsoft.Health.Utility.Diagnostics.MetricLog
  langs:
  - csharp
  - vb
  name: NormalizeEventsOnSaveToDB(IList<MetricLogEntry>)
  nameWithType: MetricLog.NormalizeEventsOnSaveToDB(IList<MetricLogEntry>)
  fullName: Microsoft.Health.Utility.Diagnostics.MetricLog.NormalizeEventsOnSaveToDB(System.Collections.Generic.IList<Microsoft.Health.Utility.Diagnostics.MetricLogEntry>)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/MetricLog.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: NormalizeEventsOnSaveToDB
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/MetricLog.cs
    startLine: 109
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  syntax:
    content: protected override void NormalizeEventsOnSaveToDB(IList<MetricLogEntry> events)
    content.vb: Protected Overrides Sub NormalizeEventsOnSaveToDB(events As IList(Of MetricLogEntry))
    parameters:
    - id: events
      type: System.Collections.Generic.IList{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}
  overridden: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.NormalizeEventsOnSaveToDB(System.Collections.Generic.IList{Microsoft.Health.Utility.Diagnostics.MetricLogEntry})
  overload: Microsoft.Health.Utility.Diagnostics.MetricLog.NormalizeEventsOnSaveToDB*
  nameWithType.vb: MetricLog.NormalizeEventsOnSaveToDB(IList(Of MetricLogEntry))
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Microsoft.Health.Utility.Diagnostics.MetricLog.NormalizeEventsOnSaveToDB(System.Collections.Generic.IList(Of Microsoft.Health.Utility.Diagnostics.MetricLogEntry))
  name.vb: NormalizeEventsOnSaveToDB(IList(Of MetricLogEntry))
references:
- uid: Microsoft.Health.Utility.Diagnostics
  commentId: N:Microsoft.Health.Utility.Diagnostics
  isExternal: false
  name: Microsoft.Health.Utility.Diagnostics
  nameWithType: Microsoft.Health.Utility.Diagnostics
  fullName: Microsoft.Health.Utility.Diagnostics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}
  commentId: T:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}
  parent: Microsoft.Health.Utility.Diagnostics
  definition: Microsoft.Health.Utility.Diagnostics.Log`1
  name: Log<MetricLogEntry>
  nameWithType: Log<MetricLogEntry>
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.MetricLogEntry>
  nameWithType.vb: Log(Of MetricLogEntry)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.MetricLogEntry)
  name.vb: Log(Of MetricLogEntry)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1
    name: Log
    nameWithType: Log
    fullName: Microsoft.Health.Utility.Diagnostics.Log
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.Utility.Diagnostics.MetricLogEntry
    name: MetricLogEntry
    nameWithType: MetricLogEntry
    fullName: Microsoft.Health.Utility.Diagnostics.MetricLogEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1
    name: Log
    nameWithType: Log
    fullName: Microsoft.Health.Utility.Diagnostics.Log
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.Utility.Diagnostics.MetricLogEntry
    name: MetricLogEntry
    nameWithType: MetricLogEntry
    fullName: Microsoft.Health.Utility.Diagnostics.MetricLogEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.Health.Utility.Diagnostics.IMetricLog
  commentId: T:Microsoft.Health.Utility.Diagnostics.IMetricLog
  parent: Microsoft.Health.Utility.Diagnostics
  isExternal: false
  name: IMetricLog
  nameWithType: IMetricLog
  fullName: Microsoft.Health.Utility.Diagnostics.IMetricLog
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.MaxLogIntervalMilliseconds
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.MaxLogIntervalMilliseconds
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.MaxLogIntervalMilliseconds
  name: MaxLogIntervalMilliseconds
  nameWithType: Log<MetricLogEntry>.MaxLogIntervalMilliseconds
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.MetricLogEntry>.MaxLogIntervalMilliseconds
  nameWithType.vb: Log(Of MetricLogEntry).MaxLogIntervalMilliseconds
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.MetricLogEntry).MaxLogIntervalMilliseconds
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.LogBatchSize
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.LogBatchSize
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.LogBatchSize
  name: LogBatchSize
  nameWithType: Log<MetricLogEntry>.LogBatchSize
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.MetricLogEntry>.LogBatchSize
  nameWithType.vb: Log(Of MetricLogEntry).LogBatchSize
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.MetricLogEntry).LogBatchSize
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.MaxEventLogEntryPeriodSeconds
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.MaxEventLogEntryPeriodSeconds
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.MaxEventLogEntryPeriodSeconds
  name: MaxEventLogEntryPeriodSeconds
  nameWithType: Log<MetricLogEntry>.MaxEventLogEntryPeriodSeconds
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.MetricLogEntry>.MaxEventLogEntryPeriodSeconds
  nameWithType.vb: Log(Of MetricLogEntry).MaxEventLogEntryPeriodSeconds
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.MetricLogEntry).MaxEventLogEntryPeriodSeconds
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.LogContextName
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.LogContextName
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.LogContextName
  name: LogContextName
  nameWithType: Log<MetricLogEntry>.LogContextName
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.MetricLogEntry>.LogContextName
  nameWithType.vb: Log(Of MetricLogEntry).LogContextName
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.MetricLogEntry).LogContextName
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.DatabaseConnectionString
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.DatabaseConnectionString
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.DatabaseConnectionString
  name: DatabaseConnectionString
  nameWithType: Log<MetricLogEntry>.DatabaseConnectionString
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.MetricLogEntry>.DatabaseConnectionString
  nameWithType.vb: Log(Of MetricLogEntry).DatabaseConnectionString
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.MetricLogEntry).DatabaseConnectionString
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.LogTableName
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.LogTableName
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.LogTableName
  name: LogTableName
  nameWithType: Log<MetricLogEntry>.LogTableName
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.MetricLogEntry>.LogTableName
  nameWithType.vb: Log(Of MetricLogEntry).LogTableName
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.MetricLogEntry).LogTableName
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.ConfigurationParametersQuery
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.ConfigurationParametersQuery
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.ConfigurationParametersQuery
  name: ConfigurationParametersQuery
  nameWithType: Log<MetricLogEntry>.ConfigurationParametersQuery
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.MetricLogEntry>.ConfigurationParametersQuery
  nameWithType.vb: Log(Of MetricLogEntry).ConfigurationParametersQuery
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.MetricLogEntry).ConfigurationParametersQuery
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.TraceTarget
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.TraceTarget
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.TraceTarget
  name: TraceTarget
  nameWithType: Log<MetricLogEntry>.TraceTarget
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.MetricLogEntry>.TraceTarget
  nameWithType.vb: Log(Of MetricLogEntry).TraceTarget
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.MetricLogEntry).TraceTarget
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.LogFileName
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.LogFileName
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.LogFileName
  name: LogFileName
  nameWithType: Log<MetricLogEntry>.LogFileName
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.MetricLogEntry>.LogFileName
  nameWithType.vb: Log(Of MetricLogEntry).LogFileName
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.MetricLogEntry).LogFileName
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.TruncateLogFile
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.TruncateLogFile
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.TruncateLogFile
  name: TruncateLogFile
  nameWithType: Log<MetricLogEntry>.TruncateLogFile
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.MetricLogEntry>.TruncateLogFile
  nameWithType.vb: Log(Of MetricLogEntry).TruncateLogFile
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.MetricLogEntry).TruncateLogFile
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.CreateLoggerFailed
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.CreateLoggerFailed
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.CreateLoggerFailed
  name: CreateLoggerFailed
  nameWithType: Log<MetricLogEntry>.CreateLoggerFailed
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.MetricLogEntry>.CreateLoggerFailed
  nameWithType.vb: Log(Of MetricLogEntry).CreateLoggerFailed
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.MetricLogEntry).CreateLoggerFailed
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.EventLogName
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.EventLogName
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.EventLogName
  name: EventLogName
  nameWithType: Log<MetricLogEntry>.EventLogName
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.MetricLogEntry>.EventLogName
  nameWithType.vb: Log(Of MetricLogEntry).EventLogName
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.MetricLogEntry).EventLogName
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.EventSourceName
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.EventSourceName
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.EventSourceName
  name: EventSourceName
  nameWithType: Log<MetricLogEntry>.EventSourceName
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.MetricLogEntry>.EventSourceName
  nameWithType.vb: Log(Of MetricLogEntry).EventSourceName
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.MetricLogEntry).EventSourceName
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.EventLog
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.EventLog
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.EventLog
  name: EventLog
  nameWithType: Log<MetricLogEntry>.EventLog
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.MetricLogEntry>.EventLog
  nameWithType.vb: Log(Of MetricLogEntry).EventLog
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.MetricLogEntry).EventLog
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.BaseLogger
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.BaseLogger
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.BaseLogger
  name: BaseLogger
  nameWithType: Log<MetricLogEntry>.BaseLogger
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.MetricLogEntry>.BaseLogger
  nameWithType.vb: Log(Of MetricLogEntry).BaseLogger
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.MetricLogEntry).BaseLogger
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.LogParameters
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.LogParameters
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.LogParameters
  name: LogParameters
  nameWithType: Log<MetricLogEntry>.LogParameters
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.MetricLogEntry>.LogParameters
  nameWithType.vb: Log(Of MetricLogEntry).LogParameters
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.MetricLogEntry).LogParameters
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.Init
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.Init
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.Init
  name: Init()
  nameWithType: Log<MetricLogEntry>.Init()
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.MetricLogEntry>.Init()
  nameWithType.vb: Log(Of MetricLogEntry).Init()
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.MetricLogEntry).Init()
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.Init
    name: Init
    nameWithType: Log<MetricLogEntry>.Init
    fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.MetricLogEntry>.Init
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.Init
    name: Init
    nameWithType: Log(Of MetricLogEntry).Init
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.MetricLogEntry).Init
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.ReadComponentSettings
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.ReadComponentSettings
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.ReadComponentSettings
  name: ReadComponentSettings()
  nameWithType: Log<MetricLogEntry>.ReadComponentSettings()
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.MetricLogEntry>.ReadComponentSettings()
  nameWithType.vb: Log(Of MetricLogEntry).ReadComponentSettings()
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.MetricLogEntry).ReadComponentSettings()
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.ReadComponentSettings
    name: ReadComponentSettings
    nameWithType: Log<MetricLogEntry>.ReadComponentSettings
    fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.MetricLogEntry>.ReadComponentSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.ReadComponentSettings
    name: ReadComponentSettings
    nameWithType: Log(Of MetricLogEntry).ReadComponentSettings
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.MetricLogEntry).ReadComponentSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.UpdateLogSettings
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.UpdateLogSettings
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.UpdateLogSettings
  name: UpdateLogSettings()
  nameWithType: Log<MetricLogEntry>.UpdateLogSettings()
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.MetricLogEntry>.UpdateLogSettings()
  nameWithType.vb: Log(Of MetricLogEntry).UpdateLogSettings()
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.MetricLogEntry).UpdateLogSettings()
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.UpdateLogSettings
    name: UpdateLogSettings
    nameWithType: Log<MetricLogEntry>.UpdateLogSettings
    fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.MetricLogEntry>.UpdateLogSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.UpdateLogSettings
    name: UpdateLogSettings
    nameWithType: Log(Of MetricLogEntry).UpdateLogSettings
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.MetricLogEntry).UpdateLogSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.GetParameterValue(System.String,System.String)
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.GetParameterValue(System.String,System.String)
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.GetParameterValue(System.String,System.String)
  name: GetParameterValue(String, String)
  nameWithType: Log<MetricLogEntry>.GetParameterValue(String, String)
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.MetricLogEntry>.GetParameterValue(System.String, System.String)
  nameWithType.vb: Log(Of MetricLogEntry).GetParameterValue(String, String)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.MetricLogEntry).GetParameterValue(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.GetParameterValue(System.String,System.String)
    name: GetParameterValue
    nameWithType: Log<MetricLogEntry>.GetParameterValue
    fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.MetricLogEntry>.GetParameterValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.GetParameterValue(System.String,System.String)
    name: GetParameterValue
    nameWithType: Log(Of MetricLogEntry).GetParameterValue
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.MetricLogEntry).GetParameterValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.GetSeverity(System.UInt16)
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.GetSeverity(System.UInt16)
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.GetSeverity(System.UInt16)
  name: GetSeverity(UInt16)
  nameWithType: Log<MetricLogEntry>.GetSeverity(UInt16)
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.MetricLogEntry>.GetSeverity(System.UInt16)
  nameWithType.vb: Log(Of MetricLogEntry).GetSeverity(UInt16)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.MetricLogEntry).GetSeverity(System.UInt16)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.GetSeverity(System.UInt16)
    name: GetSeverity
    nameWithType: Log<MetricLogEntry>.GetSeverity
    fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.MetricLogEntry>.GetSeverity
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.GetSeverity(System.UInt16)
    name: GetSeverity
    nameWithType: Log(Of MetricLogEntry).GetSeverity
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.MetricLogEntry).GetSeverity
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.GetFunctionalArea(System.UInt16)
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.GetFunctionalArea(System.UInt16)
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.GetFunctionalArea(System.UInt16)
  name: GetFunctionalArea(UInt16)
  nameWithType: Log<MetricLogEntry>.GetFunctionalArea(UInt16)
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.MetricLogEntry>.GetFunctionalArea(System.UInt16)
  nameWithType.vb: Log(Of MetricLogEntry).GetFunctionalArea(UInt16)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.MetricLogEntry).GetFunctionalArea(System.UInt16)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.GetFunctionalArea(System.UInt16)
    name: GetFunctionalArea
    nameWithType: Log<MetricLogEntry>.GetFunctionalArea
    fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.MetricLogEntry>.GetFunctionalArea
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.GetFunctionalArea(System.UInt16)
    name: GetFunctionalArea
    nameWithType: Log(Of MetricLogEntry).GetFunctionalArea
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.MetricLogEntry).GetFunctionalArea
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.DetermineEventLogEntryType(System.UInt16)
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.DetermineEventLogEntryType(System.UInt16)
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.DetermineEventLogEntryType(System.UInt16)
  name: DetermineEventLogEntryType(UInt16)
  nameWithType: Log<MetricLogEntry>.DetermineEventLogEntryType(UInt16)
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.MetricLogEntry>.DetermineEventLogEntryType(System.UInt16)
  nameWithType.vb: Log(Of MetricLogEntry).DetermineEventLogEntryType(UInt16)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.MetricLogEntry).DetermineEventLogEntryType(System.UInt16)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.DetermineEventLogEntryType(System.UInt16)
    name: DetermineEventLogEntryType
    nameWithType: Log<MetricLogEntry>.DetermineEventLogEntryType
    fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.MetricLogEntry>.DetermineEventLogEntryType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.DetermineEventLogEntryType(System.UInt16)
    name: DetermineEventLogEntryType
    nameWithType: Log(Of MetricLogEntry).DetermineEventLogEntryType
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.MetricLogEntry).DetermineEventLogEntryType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.SafeWriteEventLog(System.UInt16,System.UInt16,System.String,System.Exception)
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.SafeWriteEventLog(System.UInt16,System.UInt16,System.String,System.Exception)
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.SafeWriteEventLog(System.UInt16,System.UInt16,System.String,System.Exception)
  name: SafeWriteEventLog(UInt16, UInt16, String, Exception)
  nameWithType: Log<MetricLogEntry>.SafeWriteEventLog(UInt16, UInt16, String, Exception)
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.MetricLogEntry>.SafeWriteEventLog(System.UInt16, System.UInt16, System.String, System.Exception)
  nameWithType.vb: Log(Of MetricLogEntry).SafeWriteEventLog(UInt16, UInt16, String, Exception)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.MetricLogEntry).SafeWriteEventLog(System.UInt16, System.UInt16, System.String, System.Exception)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.SafeWriteEventLog(System.UInt16,System.UInt16,System.String,System.Exception)
    name: SafeWriteEventLog
    nameWithType: Log<MetricLogEntry>.SafeWriteEventLog
    fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.MetricLogEntry>.SafeWriteEventLog
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.SafeWriteEventLog(System.UInt16,System.UInt16,System.String,System.Exception)
    name: SafeWriteEventLog
    nameWithType: Log(Of MetricLogEntry).SafeWriteEventLog
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.MetricLogEntry).SafeWriteEventLog
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.AppendException(System.UInt16,System.String,System.Exception,System.String)
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.AppendException(System.UInt16,System.String,System.Exception,System.String)
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.AppendException(System.UInt16,System.String,System.Exception,System.String)
  name: AppendException(UInt16, String, Exception, String)
  nameWithType: Log<MetricLogEntry>.AppendException(UInt16, String, Exception, String)
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.MetricLogEntry>.AppendException(System.UInt16, System.String, System.Exception, System.String)
  nameWithType.vb: Log(Of MetricLogEntry).AppendException(UInt16, String, Exception, String)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.MetricLogEntry).AppendException(System.UInt16, System.String, System.Exception, System.String)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.AppendException(System.UInt16,System.String,System.Exception,System.String)
    name: AppendException
    nameWithType: Log<MetricLogEntry>.AppendException
    fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.MetricLogEntry>.AppendException
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.AppendException(System.UInt16,System.String,System.Exception,System.String)
    name: AppendException
    nameWithType: Log(Of MetricLogEntry).AppendException
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.MetricLogEntry).AppendException
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.Dispose
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.Dispose
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.Dispose
  name: Dispose()
  nameWithType: Log<MetricLogEntry>.Dispose()
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.MetricLogEntry>.Dispose()
  nameWithType.vb: Log(Of MetricLogEntry).Dispose()
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.MetricLogEntry).Dispose()
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.Dispose
    name: Dispose
    nameWithType: Log<MetricLogEntry>.Dispose
    fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.MetricLogEntry>.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.Dispose
    name: Dispose
    nameWithType: Log(Of MetricLogEntry).Dispose
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.MetricLogEntry).Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.Dispose(System.Boolean)
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.Dispose(System.Boolean)
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.Dispose(System.Boolean)
  name: Dispose(Boolean)
  nameWithType: Log<MetricLogEntry>.Dispose(Boolean)
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.MetricLogEntry>.Dispose(System.Boolean)
  nameWithType.vb: Log(Of MetricLogEntry).Dispose(Boolean)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.MetricLogEntry).Dispose(System.Boolean)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.Dispose(System.Boolean)
    name: Dispose
    nameWithType: Log<MetricLogEntry>.Dispose
    fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.MetricLogEntry>.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.Dispose(System.Boolean)
    name: Dispose
    nameWithType: Log(Of MetricLogEntry).Dispose
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.MetricLogEntry).Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.DisposeLogger
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.DisposeLogger
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.DisposeLogger
  name: DisposeLogger()
  nameWithType: Log<MetricLogEntry>.DisposeLogger()
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.MetricLogEntry>.DisposeLogger()
  nameWithType.vb: Log(Of MetricLogEntry).DisposeLogger()
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.MetricLogEntry).DisposeLogger()
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.DisposeLogger
    name: DisposeLogger
    nameWithType: Log<MetricLogEntry>.DisposeLogger
    fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.MetricLogEntry>.DisposeLogger
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.DisposeLogger
    name: DisposeLogger
    nameWithType: Log(Of MetricLogEntry).DisposeLogger
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.MetricLogEntry).DisposeLogger
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.MetricLog.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<MetricLog>()
  nameWithType: TypeHelper.ValueOrDbNull<MetricLog>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Utility.Diagnostics.MetricLog>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of MetricLog)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Utility.Diagnostics.MetricLog)()
  name.vb: ValueOrDbNull(Of MetricLog)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<MetricLog>
    nameWithType: TypeHelper.ValueOrDbNull<MetricLog>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Utility.Diagnostics.MetricLog>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of MetricLog)
    nameWithType: TypeHelper.ValueOrDbNull(Of MetricLog)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Utility.Diagnostics.MetricLog)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Utility.Diagnostics.Log`1
  commentId: T:Microsoft.Health.Utility.Diagnostics.Log`1
  isExternal: false
  name: Log<T>
  nameWithType: Log<T>
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>
  nameWithType.vb: Log(Of T)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T)
  name.vb: Log(Of T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1
    name: Log
    nameWithType: Log
    fullName: Microsoft.Health.Utility.Diagnostics.Log
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1
    name: Log
    nameWithType: Log
    fullName: Microsoft.Health.Utility.Diagnostics.Log
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.MaxLogIntervalMilliseconds
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log`1.MaxLogIntervalMilliseconds
  isExternal: false
  name: MaxLogIntervalMilliseconds
  nameWithType: Log<T>.MaxLogIntervalMilliseconds
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.MaxLogIntervalMilliseconds
  nameWithType.vb: Log(Of T).MaxLogIntervalMilliseconds
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).MaxLogIntervalMilliseconds
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.LogBatchSize
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log`1.LogBatchSize
  isExternal: false
  name: LogBatchSize
  nameWithType: Log<T>.LogBatchSize
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.LogBatchSize
  nameWithType.vb: Log(Of T).LogBatchSize
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).LogBatchSize
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.MaxEventLogEntryPeriodSeconds
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log`1.MaxEventLogEntryPeriodSeconds
  isExternal: false
  name: MaxEventLogEntryPeriodSeconds
  nameWithType: Log<T>.MaxEventLogEntryPeriodSeconds
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.MaxEventLogEntryPeriodSeconds
  nameWithType.vb: Log(Of T).MaxEventLogEntryPeriodSeconds
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).MaxEventLogEntryPeriodSeconds
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.LogContextName
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log`1.LogContextName
  isExternal: false
  name: LogContextName
  nameWithType: Log<T>.LogContextName
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.LogContextName
  nameWithType.vb: Log(Of T).LogContextName
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).LogContextName
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.DatabaseConnectionString
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log`1.DatabaseConnectionString
  isExternal: false
  name: DatabaseConnectionString
  nameWithType: Log<T>.DatabaseConnectionString
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.DatabaseConnectionString
  nameWithType.vb: Log(Of T).DatabaseConnectionString
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).DatabaseConnectionString
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.LogTableName
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log`1.LogTableName
  isExternal: false
  name: LogTableName
  nameWithType: Log<T>.LogTableName
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.LogTableName
  nameWithType.vb: Log(Of T).LogTableName
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).LogTableName
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.ConfigurationParametersQuery
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log`1.ConfigurationParametersQuery
  isExternal: false
  name: ConfigurationParametersQuery
  nameWithType: Log<T>.ConfigurationParametersQuery
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.ConfigurationParametersQuery
  nameWithType.vb: Log(Of T).ConfigurationParametersQuery
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).ConfigurationParametersQuery
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.TraceTarget
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log`1.TraceTarget
  isExternal: false
  name: TraceTarget
  nameWithType: Log<T>.TraceTarget
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.TraceTarget
  nameWithType.vb: Log(Of T).TraceTarget
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).TraceTarget
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.LogFileName
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log`1.LogFileName
  isExternal: false
  name: LogFileName
  nameWithType: Log<T>.LogFileName
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.LogFileName
  nameWithType.vb: Log(Of T).LogFileName
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).LogFileName
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.TruncateLogFile
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log`1.TruncateLogFile
  isExternal: false
  name: TruncateLogFile
  nameWithType: Log<T>.TruncateLogFile
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.TruncateLogFile
  nameWithType.vb: Log(Of T).TruncateLogFile
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).TruncateLogFile
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.CreateLoggerFailed
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log`1.CreateLoggerFailed
  isExternal: false
  name: CreateLoggerFailed
  nameWithType: Log<T>.CreateLoggerFailed
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.CreateLoggerFailed
  nameWithType.vb: Log(Of T).CreateLoggerFailed
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).CreateLoggerFailed
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.EventLogName
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log`1.EventLogName
  isExternal: false
  name: EventLogName
  nameWithType: Log<T>.EventLogName
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.EventLogName
  nameWithType.vb: Log(Of T).EventLogName
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).EventLogName
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.EventSourceName
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log`1.EventSourceName
  isExternal: false
  name: EventSourceName
  nameWithType: Log<T>.EventSourceName
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.EventSourceName
  nameWithType.vb: Log(Of T).EventSourceName
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).EventSourceName
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.EventLog
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log`1.EventLog
  isExternal: false
  name: EventLog
  nameWithType: Log<T>.EventLog
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.EventLog
  nameWithType.vb: Log(Of T).EventLog
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).EventLog
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.BaseLogger
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log`1.BaseLogger
  isExternal: false
  name: BaseLogger
  nameWithType: Log<T>.BaseLogger
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.BaseLogger
  nameWithType.vb: Log(Of T).BaseLogger
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).BaseLogger
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.LogParameters
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log`1.LogParameters
  isExternal: false
  name: LogParameters
  nameWithType: Log<T>.LogParameters
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.LogParameters
  nameWithType.vb: Log(Of T).LogParameters
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).LogParameters
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.Init
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log`1.Init
  isExternal: false
  name: Init()
  nameWithType: Log<T>.Init()
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.Init()
  nameWithType.vb: Log(Of T).Init()
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).Init()
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.Init
    name: Init
    nameWithType: Log<T>.Init
    fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.Init
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.Init
    name: Init
    nameWithType: Log(Of T).Init
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of T).Init
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.ReadComponentSettings
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log`1.ReadComponentSettings
  isExternal: false
  name: ReadComponentSettings()
  nameWithType: Log<T>.ReadComponentSettings()
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.ReadComponentSettings()
  nameWithType.vb: Log(Of T).ReadComponentSettings()
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).ReadComponentSettings()
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.ReadComponentSettings
    name: ReadComponentSettings
    nameWithType: Log<T>.ReadComponentSettings
    fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.ReadComponentSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.ReadComponentSettings
    name: ReadComponentSettings
    nameWithType: Log(Of T).ReadComponentSettings
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of T).ReadComponentSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.UpdateLogSettings
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log`1.UpdateLogSettings
  isExternal: false
  name: UpdateLogSettings()
  nameWithType: Log<T>.UpdateLogSettings()
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.UpdateLogSettings()
  nameWithType.vb: Log(Of T).UpdateLogSettings()
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).UpdateLogSettings()
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.UpdateLogSettings
    name: UpdateLogSettings
    nameWithType: Log<T>.UpdateLogSettings
    fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.UpdateLogSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.UpdateLogSettings
    name: UpdateLogSettings
    nameWithType: Log(Of T).UpdateLogSettings
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of T).UpdateLogSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.GetParameterValue(System.String,System.String)
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log`1.GetParameterValue(System.String,System.String)
  isExternal: true
  name: GetParameterValue(String, String)
  nameWithType: Log<T>.GetParameterValue(String, String)
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.GetParameterValue(System.String, System.String)
  nameWithType.vb: Log(Of T).GetParameterValue(String, String)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).GetParameterValue(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.GetParameterValue(System.String,System.String)
    name: GetParameterValue
    nameWithType: Log<T>.GetParameterValue
    fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.GetParameterValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.GetParameterValue(System.String,System.String)
    name: GetParameterValue
    nameWithType: Log(Of T).GetParameterValue
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of T).GetParameterValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.GetSeverity(System.UInt16)
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log`1.GetSeverity(System.UInt16)
  isExternal: true
  name: GetSeverity(UInt16)
  nameWithType: Log<T>.GetSeverity(UInt16)
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.GetSeverity(System.UInt16)
  nameWithType.vb: Log(Of T).GetSeverity(UInt16)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).GetSeverity(System.UInt16)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.GetSeverity(System.UInt16)
    name: GetSeverity
    nameWithType: Log<T>.GetSeverity
    fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.GetSeverity
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.GetSeverity(System.UInt16)
    name: GetSeverity
    nameWithType: Log(Of T).GetSeverity
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of T).GetSeverity
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.GetFunctionalArea(System.UInt16)
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log`1.GetFunctionalArea(System.UInt16)
  isExternal: true
  name: GetFunctionalArea(UInt16)
  nameWithType: Log<T>.GetFunctionalArea(UInt16)
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.GetFunctionalArea(System.UInt16)
  nameWithType.vb: Log(Of T).GetFunctionalArea(UInt16)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).GetFunctionalArea(System.UInt16)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.GetFunctionalArea(System.UInt16)
    name: GetFunctionalArea
    nameWithType: Log<T>.GetFunctionalArea
    fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.GetFunctionalArea
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.GetFunctionalArea(System.UInt16)
    name: GetFunctionalArea
    nameWithType: Log(Of T).GetFunctionalArea
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of T).GetFunctionalArea
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.DetermineEventLogEntryType(System.UInt16)
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log`1.DetermineEventLogEntryType(System.UInt16)
  isExternal: true
  name: DetermineEventLogEntryType(UInt16)
  nameWithType: Log<T>.DetermineEventLogEntryType(UInt16)
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.DetermineEventLogEntryType(System.UInt16)
  nameWithType.vb: Log(Of T).DetermineEventLogEntryType(UInt16)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).DetermineEventLogEntryType(System.UInt16)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.DetermineEventLogEntryType(System.UInt16)
    name: DetermineEventLogEntryType
    nameWithType: Log<T>.DetermineEventLogEntryType
    fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.DetermineEventLogEntryType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.DetermineEventLogEntryType(System.UInt16)
    name: DetermineEventLogEntryType
    nameWithType: Log(Of T).DetermineEventLogEntryType
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of T).DetermineEventLogEntryType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.SafeWriteEventLog(System.UInt16,System.UInt16,System.String,System.Exception)
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log`1.SafeWriteEventLog(System.UInt16,System.UInt16,System.String,System.Exception)
  isExternal: true
  name: SafeWriteEventLog(UInt16, UInt16, String, Exception)
  nameWithType: Log<T>.SafeWriteEventLog(UInt16, UInt16, String, Exception)
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.SafeWriteEventLog(System.UInt16, System.UInt16, System.String, System.Exception)
  nameWithType.vb: Log(Of T).SafeWriteEventLog(UInt16, UInt16, String, Exception)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).SafeWriteEventLog(System.UInt16, System.UInt16, System.String, System.Exception)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.SafeWriteEventLog(System.UInt16,System.UInt16,System.String,System.Exception)
    name: SafeWriteEventLog
    nameWithType: Log<T>.SafeWriteEventLog
    fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.SafeWriteEventLog
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.SafeWriteEventLog(System.UInt16,System.UInt16,System.String,System.Exception)
    name: SafeWriteEventLog
    nameWithType: Log(Of T).SafeWriteEventLog
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of T).SafeWriteEventLog
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.AppendException(System.UInt16,System.String,System.Exception,System.String)
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log`1.AppendException(System.UInt16,System.String,System.Exception,System.String)
  isExternal: true
  name: AppendException(UInt16, String, Exception, String)
  nameWithType: Log<T>.AppendException(UInt16, String, Exception, String)
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.AppendException(System.UInt16, System.String, System.Exception, System.String)
  nameWithType.vb: Log(Of T).AppendException(UInt16, String, Exception, String)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).AppendException(System.UInt16, System.String, System.Exception, System.String)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.AppendException(System.UInt16,System.String,System.Exception,System.String)
    name: AppendException
    nameWithType: Log<T>.AppendException
    fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.AppendException
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.AppendException(System.UInt16,System.String,System.Exception,System.String)
    name: AppendException
    nameWithType: Log(Of T).AppendException
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of T).AppendException
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.Dispose
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log`1.Dispose
  isExternal: false
  name: Dispose()
  nameWithType: Log<T>.Dispose()
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.Dispose()
  nameWithType.vb: Log(Of T).Dispose()
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).Dispose()
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.Dispose
    name: Dispose
    nameWithType: Log<T>.Dispose
    fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.Dispose
    name: Dispose
    nameWithType: Log(Of T).Dispose
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of T).Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.Dispose(System.Boolean)
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log`1.Dispose(System.Boolean)
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: Log<T>.Dispose(Boolean)
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.Dispose(System.Boolean)
  nameWithType.vb: Log(Of T).Dispose(Boolean)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).Dispose(System.Boolean)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.Dispose(System.Boolean)
    name: Dispose
    nameWithType: Log<T>.Dispose
    fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.Dispose(System.Boolean)
    name: Dispose
    nameWithType: Log(Of T).Dispose
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of T).Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.DisposeLogger
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log`1.DisposeLogger
  isExternal: false
  name: DisposeLogger()
  nameWithType: Log<T>.DisposeLogger()
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.DisposeLogger()
  nameWithType.vb: Log(Of T).DisposeLogger()
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).DisposeLogger()
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.DisposeLogger
    name: DisposeLogger
    nameWithType: Log<T>.DisposeLogger
    fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.DisposeLogger
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.DisposeLogger
    name: DisposeLogger
    nameWithType: Log(Of T).DisposeLogger
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of T).DisposeLogger
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.Utility.Diagnostics.MetricLog.#ctor*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.MetricLog.#ctor
  isExternal: false
  name: MetricLog
  nameWithType: MetricLog.MetricLog
  fullName: Microsoft.Health.Utility.Diagnostics.MetricLog.MetricLog
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.Utility.Diagnostics.TraceTarget
  commentId: T:Microsoft.Health.Utility.Diagnostics.TraceTarget
  parent: Microsoft.Health.Utility.Diagnostics
  isExternal: false
  name: TraceTarget
  nameWithType: TraceTarget
  fullName: Microsoft.Health.Utility.Diagnostics.TraceTarget
- uid: Microsoft.Health.Utility.Diagnostics.MetricLog.Metrics*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.MetricLog.Metrics
  isExternal: false
  name: Metrics
  nameWithType: MetricLog.Metrics
  fullName: Microsoft.Health.Utility.Diagnostics.MetricLog.Metrics
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Health.Utility.Diagnostics.Metric}
  commentId: T:System.Collections.Generic.IDictionary{System.String,Microsoft.Health.Utility.Diagnostics.Metric}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Metric>
  nameWithType: IDictionary<String, Metric>
  fullName: System.Collections.Generic.IDictionary<System.String, Microsoft.Health.Utility.Diagnostics.Metric>
  nameWithType.vb: IDictionary(Of String, Metric)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, Microsoft.Health.Utility.Diagnostics.Metric)
  name.vb: IDictionary(Of String, Metric)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.Utility.Diagnostics.Metric
    name: Metric
    nameWithType: Metric
    fullName: Microsoft.Health.Utility.Diagnostics.Metric
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.Utility.Diagnostics.Metric
    name: Metric
    nameWithType: Metric
    fullName: Microsoft.Health.Utility.Diagnostics.Metric
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Health.Utility.Diagnostics.MetricLog.Enabled*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.MetricLog.Enabled
  isExternal: false
  name: Enabled
  nameWithType: MetricLog.Enabled
  fullName: Microsoft.Health.Utility.Diagnostics.MetricLog.Enabled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Health.Utility.Diagnostics.MetricLog.AddEntry*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.MetricLog.AddEntry
  isExternal: false
  name: AddEntry
  nameWithType: MetricLog.AddEntry
  fullName: Microsoft.Health.Utility.Diagnostics.MetricLog.AddEntry
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Nullable{System.Guid}
  commentId: T:System.Nullable{System.Guid}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Guid>
  nameWithType: Nullable<Guid>
  fullName: System.Nullable<System.Guid>
  nameWithType.vb: Nullable(Of Guid)
  fullName.vb: System.Nullable(Of System.Guid)
  name.vb: Nullable(Of Guid)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.IMetricLog.AddEntry(System.String,System.String,System.Int64,System.Nullable{System.Guid},System.DateTime,System.Nullable{System.Int16})
  commentId: M:Microsoft.Health.Utility.Diagnostics.IMetricLog.AddEntry(System.String,System.String,System.Int64,System.Nullable{System.Guid},System.DateTime,System.Nullable{System.Int16})
  parent: Microsoft.Health.Utility.Diagnostics.IMetricLog
  isExternal: true
  name: AddEntry(String, String, Int64, Nullable<Guid>, DateTime, Nullable<Int16>)
  nameWithType: IMetricLog.AddEntry(String, String, Int64, Nullable<Guid>, DateTime, Nullable<Int16>)
  fullName: Microsoft.Health.Utility.Diagnostics.IMetricLog.AddEntry(System.String, System.String, System.Int64, System.Nullable<System.Guid>, System.DateTime, System.Nullable<System.Int16>)
  nameWithType.vb: IMetricLog.AddEntry(String, String, Int64, Nullable(Of Guid), DateTime, Nullable(Of Int16))
  fullName.vb: Microsoft.Health.Utility.Diagnostics.IMetricLog.AddEntry(System.String, System.String, System.Int64, System.Nullable(Of System.Guid), System.DateTime, System.Nullable(Of System.Int16))
  name.vb: AddEntry(String, String, Int64, Nullable(Of Guid), DateTime, Nullable(Of Int16))
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.IMetricLog.AddEntry(System.String,System.String,System.Int64,System.Nullable{System.Guid},System.DateTime,System.Nullable{System.Int16})
    name: AddEntry
    nameWithType: IMetricLog.AddEntry
    fullName: Microsoft.Health.Utility.Diagnostics.IMetricLog.AddEntry
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int16
    name: Int16
    nameWithType: Int16
    fullName: System.Int16
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.IMetricLog.AddEntry(System.String,System.String,System.Int64,System.Nullable{System.Guid},System.DateTime,System.Nullable{System.Int16})
    name: AddEntry
    nameWithType: IMetricLog.AddEntry
    fullName: Microsoft.Health.Utility.Diagnostics.IMetricLog.AddEntry
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int16
    name: Int16
    nameWithType: Int16
    fullName: System.Int16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Int16}
  commentId: T:System.Nullable{System.Int16}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int16>
  nameWithType: Nullable<Int16>
  fullName: System.Nullable<System.Int16>
  nameWithType.vb: Nullable(Of Int16)
  fullName.vb: System.Nullable(Of System.Int16)
  name.vb: Nullable(Of Int16)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int16
    name: Int16
    nameWithType: Int16
    fullName: System.Int16
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int16
    name: Int16
    nameWithType: Int16
    fullName: System.Int16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.ReadLogSettings
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.ReadLogSettings
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.ReadLogSettings
  name: ReadLogSettings()
  nameWithType: Log<MetricLogEntry>.ReadLogSettings()
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.MetricLogEntry>.ReadLogSettings()
  nameWithType.vb: Log(Of MetricLogEntry).ReadLogSettings()
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.MetricLogEntry).ReadLogSettings()
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.ReadLogSettings
    name: ReadLogSettings
    nameWithType: Log<MetricLogEntry>.ReadLogSettings
    fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.MetricLogEntry>.ReadLogSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.ReadLogSettings
    name: ReadLogSettings
    nameWithType: Log(Of MetricLogEntry).ReadLogSettings
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.MetricLogEntry).ReadLogSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.MetricLog.ReadLogSettings*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.MetricLog.ReadLogSettings
  isExternal: false
  name: ReadLogSettings
  nameWithType: MetricLog.ReadLogSettings
  fullName: Microsoft.Health.Utility.Diagnostics.MetricLog.ReadLogSettings
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.ReadLogSettings
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log`1.ReadLogSettings
  isExternal: false
  name: ReadLogSettings()
  nameWithType: Log<T>.ReadLogSettings()
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.ReadLogSettings()
  nameWithType.vb: Log(Of T).ReadLogSettings()
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).ReadLogSettings()
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.ReadLogSettings
    name: ReadLogSettings
    nameWithType: Log<T>.ReadLogSettings
    fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.ReadLogSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.ReadLogSettings
    name: ReadLogSettings
    nameWithType: Log(Of T).ReadLogSettings
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of T).ReadLogSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.NormalizeEventsOnSaveToDB(System.Collections.Generic.IList{Microsoft.Health.Utility.Diagnostics.MetricLogEntry})
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}.NormalizeEventsOnSaveToDB(System.Collections.Generic.IList{Microsoft.Health.Utility.Diagnostics.MetricLogEntry})
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.NormalizeEventsOnSaveToDB(System.Collections.Generic.IList{`0})
  name: NormalizeEventsOnSaveToDB(IList<MetricLogEntry>)
  nameWithType: Log<MetricLogEntry>.NormalizeEventsOnSaveToDB(IList<MetricLogEntry>)
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.MetricLogEntry>.NormalizeEventsOnSaveToDB(System.Collections.Generic.IList<Microsoft.Health.Utility.Diagnostics.MetricLogEntry>)
  nameWithType.vb: Log(Of MetricLogEntry).NormalizeEventsOnSaveToDB(IList(Of MetricLogEntry))
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.MetricLogEntry).NormalizeEventsOnSaveToDB(System.Collections.Generic.IList(Of Microsoft.Health.Utility.Diagnostics.MetricLogEntry))
  name.vb: NormalizeEventsOnSaveToDB(IList(Of MetricLogEntry))
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.NormalizeEventsOnSaveToDB(System.Collections.Generic.IList{`0})
    name: NormalizeEventsOnSaveToDB
    nameWithType: Log<MetricLogEntry>.NormalizeEventsOnSaveToDB
    fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.MetricLogEntry>.NormalizeEventsOnSaveToDB
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.Utility.Diagnostics.MetricLogEntry
    name: MetricLogEntry
    nameWithType: MetricLogEntry
    fullName: Microsoft.Health.Utility.Diagnostics.MetricLogEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.NormalizeEventsOnSaveToDB(System.Collections.Generic.IList{`0})
    name: NormalizeEventsOnSaveToDB
    nameWithType: Log(Of MetricLogEntry).NormalizeEventsOnSaveToDB
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.MetricLogEntry).NormalizeEventsOnSaveToDB
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.Utility.Diagnostics.MetricLogEntry
    name: MetricLogEntry
    nameWithType: MetricLogEntry
    fullName: Microsoft.Health.Utility.Diagnostics.MetricLogEntry
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.MetricLog.NormalizeEventsOnSaveToDB*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.MetricLog.NormalizeEventsOnSaveToDB
  isExternal: false
  name: NormalizeEventsOnSaveToDB
  nameWithType: MetricLog.NormalizeEventsOnSaveToDB
  fullName: Microsoft.Health.Utility.Diagnostics.MetricLog.NormalizeEventsOnSaveToDB
- uid: System.Collections.Generic.IList{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}
  commentId: T:System.Collections.Generic.IList{Microsoft.Health.Utility.Diagnostics.MetricLogEntry}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<MetricLogEntry>
  nameWithType: IList<MetricLogEntry>
  fullName: System.Collections.Generic.IList<Microsoft.Health.Utility.Diagnostics.MetricLogEntry>
  nameWithType.vb: IList(Of MetricLogEntry)
  fullName.vb: System.Collections.Generic.IList(Of Microsoft.Health.Utility.Diagnostics.MetricLogEntry)
  name.vb: IList(Of MetricLogEntry)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.Utility.Diagnostics.MetricLogEntry
    name: MetricLogEntry
    nameWithType: MetricLogEntry
    fullName: Microsoft.Health.Utility.Diagnostics.MetricLogEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.Utility.Diagnostics.MetricLogEntry
    name: MetricLogEntry
    nameWithType: MetricLogEntry
    fullName: Microsoft.Health.Utility.Diagnostics.MetricLogEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.NormalizeEventsOnSaveToDB(System.Collections.Generic.IList{`0})
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log`1.NormalizeEventsOnSaveToDB(System.Collections.Generic.IList{`0})
  isExternal: true
  name: NormalizeEventsOnSaveToDB(IList<T>)
  nameWithType: Log<T>.NormalizeEventsOnSaveToDB(IList<T>)
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.NormalizeEventsOnSaveToDB(System.Collections.Generic.IList<T>)
  nameWithType.vb: Log(Of T).NormalizeEventsOnSaveToDB(IList(Of T))
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).NormalizeEventsOnSaveToDB(System.Collections.Generic.IList(Of T))
  name.vb: NormalizeEventsOnSaveToDB(IList(Of T))
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.NormalizeEventsOnSaveToDB(System.Collections.Generic.IList{`0})
    name: NormalizeEventsOnSaveToDB
    nameWithType: Log<T>.NormalizeEventsOnSaveToDB
    fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.NormalizeEventsOnSaveToDB
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.NormalizeEventsOnSaveToDB(System.Collections.Generic.IList{`0})
    name: NormalizeEventsOnSaveToDB
    nameWithType: Log(Of T).NormalizeEventsOnSaveToDB
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of T).NormalizeEventsOnSaveToDB
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
