### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.ItemTypes.ApproximateTime
  commentId: T:Microsoft.Health.ItemTypes.ApproximateTime
  id: ApproximateTime
  parent: Microsoft.Health.ItemTypes
  children:
  - Microsoft.Health.ItemTypes.ApproximateTime.#ctor
  - Microsoft.Health.ItemTypes.ApproximateTime.#ctor(System.Int32,System.Int32)
  - Microsoft.Health.ItemTypes.ApproximateTime.#ctor(System.Int32,System.Int32,System.Int32)
  - Microsoft.Health.ItemTypes.ApproximateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  - Microsoft.Health.ItemTypes.ApproximateTime.CompareTo(Microsoft.Health.ItemTypes.ApproximateTime)
  - Microsoft.Health.ItemTypes.ApproximateTime.CompareTo(System.Object)
  - Microsoft.Health.ItemTypes.ApproximateTime.Equals(System.Object)
  - Microsoft.Health.ItemTypes.ApproximateTime.GetHashCode
  - Microsoft.Health.ItemTypes.ApproximateTime.HasValue
  - Microsoft.Health.ItemTypes.ApproximateTime.Hour
  - Microsoft.Health.ItemTypes.ApproximateTime.Millisecond
  - Microsoft.Health.ItemTypes.ApproximateTime.Minute
  - Microsoft.Health.ItemTypes.ApproximateTime.Now
  - Microsoft.Health.ItemTypes.ApproximateTime.op_Equality(Microsoft.Health.ItemTypes.ApproximateTime,System.Object)
  - Microsoft.Health.ItemTypes.ApproximateTime.op_GreaterThan(Microsoft.Health.ItemTypes.ApproximateTime,System.Object)
  - Microsoft.Health.ItemTypes.ApproximateTime.op_Inequality(Microsoft.Health.ItemTypes.ApproximateTime,System.Object)
  - Microsoft.Health.ItemTypes.ApproximateTime.op_LessThan(Microsoft.Health.ItemTypes.ApproximateTime,System.Object)
  - Microsoft.Health.ItemTypes.ApproximateTime.ParseXml(System.Xml.XPath.XPathNavigator)
  - Microsoft.Health.ItemTypes.ApproximateTime.Second
  - Microsoft.Health.ItemTypes.ApproximateTime.ToString
  - Microsoft.Health.ItemTypes.ApproximateTime.WriteXml(System.String,System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: ApproximateTime
  nameWithType: ApproximateTime
  fullName: Microsoft.Health.ItemTypes.ApproximateTime
  type: Class
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ApproximateTime.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ApproximateTime
    path: ../Microsoft.Health.ItemTypes/ApproximateTime.cs
    startLine: 26
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nAn approximation of a time.\n"
  remarks: "\nAn approximation of a time must have an hour and minute and can \nalso optionally have seconds specified.\n"
  example: []
  syntax:
    content: 'public class ApproximateTime : HealthRecordItemData, IComparable, IComparable<ApproximateTime>'
    content.vb: >-
      Public Class ApproximateTime
          Inherits HealthRecordItemData
          Implements IComparable, IComparable(Of ApproximateTime)
  inheritance:
  - System.Object
  - Microsoft.Health.ItemTypes.HealthRecordItemData
  implements:
  - System.IComparable
  - System.IComparable{Microsoft.Health.ItemTypes.ApproximateTime}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.ItemTypes.ApproximateTime.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.ItemTypes.ApproximateTime.#ctor
  commentId: M:Microsoft.Health.ItemTypes.ApproximateTime.#ctor
  id: '#ctor'
  parent: Microsoft.Health.ItemTypes.ApproximateTime
  langs:
  - csharp
  - vb
  name: ApproximateTime()
  nameWithType: ApproximateTime.ApproximateTime()
  fullName: Microsoft.Health.ItemTypes.ApproximateTime.ApproximateTime()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ApproximateTime.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.ItemTypes/ApproximateTime.cs
    startLine: 36
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.ApproximateTime\" data-throw-if-not-resolved=\"false\"></xref> class \nwith default values.\n"
  example: []
  syntax:
    content: public ApproximateTime()
    content.vb: Public Sub New
  overload: Microsoft.Health.ItemTypes.ApproximateTime.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.ApproximateTime.#ctor(System.Int32,System.Int32)
  commentId: M:Microsoft.Health.ItemTypes.ApproximateTime.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: Microsoft.Health.ItemTypes.ApproximateTime
  langs:
  - csharp
  - vb
  name: ApproximateTime(Int32, Int32)
  nameWithType: ApproximateTime.ApproximateTime(Int32, Int32)
  fullName: Microsoft.Health.ItemTypes.ApproximateTime.ApproximateTime(System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ApproximateTime.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.ItemTypes/ApproximateTime.cs
    startLine: 59
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.ApproximateTime\" data-throw-if-not-resolved=\"false\"></xref> class \nwith the specified hour and minute.\n"
  example: []
  syntax:
    content: public ApproximateTime(int hour, int minute)
    content.vb: Public Sub New(hour As Integer, minute As Integer)
    parameters:
    - id: hour
      type: System.Int32
      description: "\nThe hour between 0 and 23.\n"
    - id: minute
      type: System.Int32
      description: "\nThe minute between 0 and 59.\n"
  overload: Microsoft.Health.ItemTypes.ApproximateTime.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nThe <span class=\"paramref\">hour</span> parameter is less than 0 or greater\nthan 23, or the <span class=\"paramref\">minute</span> parameter is less than 0 or\ngreater than 59.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.ApproximateTime.#ctor(System.Int32,System.Int32,System.Int32)
  commentId: M:Microsoft.Health.ItemTypes.ApproximateTime.#ctor(System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32)'
  parent: Microsoft.Health.ItemTypes.ApproximateTime
  langs:
  - csharp
  - vb
  name: ApproximateTime(Int32, Int32, Int32)
  nameWithType: ApproximateTime.ApproximateTime(Int32, Int32, Int32)
  fullName: Microsoft.Health.ItemTypes.ApproximateTime.ApproximateTime(System.Int32, System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ApproximateTime.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.ItemTypes/ApproximateTime.cs
    startLine: 89
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.ApproximateTime\" data-throw-if-not-resolved=\"false\"></xref> class \nwith the specified hour, minute, and second.\n"
  example: []
  syntax:
    content: public ApproximateTime(int hour, int minute, int second)
    content.vb: Public Sub New(hour As Integer, minute As Integer, second As Integer)
    parameters:
    - id: hour
      type: System.Int32
      description: "\nThe hour between 0 and 23.\n"
    - id: minute
      type: System.Int32
      description: "\nThe minute between 0 and 59.\n"
    - id: second
      type: System.Int32
      description: "\nThe second between 0 and 59.\n"
  overload: Microsoft.Health.ItemTypes.ApproximateTime.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nThe <span class=\"paramref\">hour</span> parameter is less than 0 or greater\nthan 23, or the <span class=\"paramref\">minute</span> or <span class=\"paramref\">second</span> \nparameter is less than 0 or\ngreater than 59.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.ApproximateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Microsoft.Health.ItemTypes.ApproximateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: Microsoft.Health.ItemTypes.ApproximateTime
  langs:
  - csharp
  - vb
  name: ApproximateTime(Int32, Int32, Int32, Int32)
  nameWithType: ApproximateTime.ApproximateTime(Int32, Int32, Int32, Int32)
  fullName: Microsoft.Health.ItemTypes.ApproximateTime.ApproximateTime(System.Int32, System.Int32, System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ApproximateTime.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.ItemTypes/ApproximateTime.cs
    startLine: 125
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.ApproximateTime\" data-throw-if-not-resolved=\"false\"></xref> class \nwith the specified hour, minute, second, and millisecond.\n"
  example: []
  syntax:
    content: public ApproximateTime(int hour, int minute, int second, int millisecond)
    content.vb: Public Sub New(hour As Integer, minute As Integer, second As Integer, millisecond As Integer)
    parameters:
    - id: hour
      type: System.Int32
      description: "\nThe hour between 0 and 23.\n"
    - id: minute
      type: System.Int32
      description: "\nThe minute between 0 and 59.\n"
    - id: second
      type: System.Int32
      description: "\nThe second between 0 and 59.\n"
    - id: millisecond
      type: System.Int32
      description: "\nThe millisecond between 0 and 999.\n"
  overload: Microsoft.Health.ItemTypes.ApproximateTime.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nThe <span class=\"paramref\">hour</span> parameter is less than 0 or greater\nthan 23, or the <span class=\"paramref\">minute</span>, or <span class=\"paramref\">second</span> \nparameter is less than 0 or\ngreater than 59, or <span class=\"paramref\">millisecond</span> parameter is less than 0\nor greater than 999.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.ApproximateTime.Now
  commentId: P:Microsoft.Health.ItemTypes.ApproximateTime.Now
  id: Now
  parent: Microsoft.Health.ItemTypes.ApproximateTime
  langs:
  - csharp
  - vb
  name: Now
  nameWithType: ApproximateTime.Now
  fullName: Microsoft.Health.ItemTypes.ApproximateTime.Now
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ApproximateTime.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Now
    path: ../Microsoft.Health.ItemTypes/ApproximateTime.cs
    startLine: 135
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets the current time including the hour, minute, and second.\n"
  example: []
  syntax:
    content: public static ApproximateTime Now { get; }
    content.vb: Public Shared ReadOnly Property Now As ApproximateTime
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.ApproximateTime
  overload: Microsoft.Health.ItemTypes.ApproximateTime.Now*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Health.ItemTypes.ApproximateTime.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.ApproximateTime.ParseXml(System.Xml.XPath.XPathNavigator)
  id: ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.ApproximateTime
  langs:
  - csharp
  - vb
  name: ParseXml(XPathNavigator)
  nameWithType: ApproximateTime.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.ApproximateTime.ParseXml(System.Xml.XPath.XPathNavigator)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ApproximateTime.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ParseXml
    path: ../Microsoft.Health.ItemTypes/ApproximateTime.cs
    startLine: 156
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nPopulates the data for the approximate time from the XML.\n"
  example: []
  syntax:
    content: public override void ParseXml(XPathNavigator navigator)
    content.vb: Public Overrides Sub ParseXml(navigator As XPathNavigator)
    parameters:
    - id: navigator
      type: System.Xml.XPath.XPathNavigator
      description: "\nThe XML node representing the approximate time.\n"
  overridden: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  overload: Microsoft.Health.ItemTypes.ApproximateTime.ParseXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">navigator</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.ApproximateTime.WriteXml(System.String,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.ApproximateTime.WriteXml(System.String,System.Xml.XmlWriter)
  id: WriteXml(System.String,System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.ApproximateTime
  langs:
  - csharp
  - vb
  name: WriteXml(String, XmlWriter)
  nameWithType: ApproximateTime.WriteXml(String, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.ApproximateTime.WriteXml(System.String, System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ApproximateTime.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteXml
    path: ../Microsoft.Health.ItemTypes/ApproximateTime.cs
    startLine: 205
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nWrites the approximate time to the specified XML writer.\n"
  example: []
  syntax:
    content: public override void WriteXml(string nodeName, XmlWriter writer)
    content.vb: Public Overrides Sub WriteXml(nodeName As String, writer As XmlWriter)
    parameters:
    - id: nodeName
      type: System.String
      description: "\nThe name of the outer element for the approximate time.\n"
    - id: writer
      type: System.Xml.XmlWriter
      description: "\nThe XmlWriter to write the approximate time to.\n"
  overridden: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  overload: Microsoft.Health.ItemTypes.ApproximateTime.WriteXml*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">nodeName</span> parameter is <strong>null</strong> or empty.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">writer</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.ApproximateTime.Hour
  commentId: P:Microsoft.Health.ItemTypes.ApproximateTime.Hour
  id: Hour
  parent: Microsoft.Health.ItemTypes.ApproximateTime
  langs:
  - csharp
  - vb
  name: Hour
  nameWithType: ApproximateTime.Hour
  fullName: Microsoft.Health.ItemTypes.ApproximateTime.Hour
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ApproximateTime.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Hour
    path: ../Microsoft.Health.ItemTypes/ApproximateTime.cs
    startLine: 259
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the hour of the time approximation.\n"
  remarks: "\nThis value defaults to the current hour.\n"
  example: []
  syntax:
    content: public int Hour { get; set; }
    content.vb: Public Property Hour As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\nAn integer representing the hour.\n"
  overload: Microsoft.Health.ItemTypes.ApproximateTime.Hour*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nThe <span class=\"paramref\">value</span> parameter is less than 0 or greater than 23\nwhen setting.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.ApproximateTime.Minute
  commentId: P:Microsoft.Health.ItemTypes.ApproximateTime.Minute
  id: Minute
  parent: Microsoft.Health.ItemTypes.ApproximateTime
  langs:
  - csharp
  - vb
  name: Minute
  nameWithType: ApproximateTime.Minute
  fullName: Microsoft.Health.ItemTypes.ApproximateTime.Minute
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ApproximateTime.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Minute
    path: ../Microsoft.Health.ItemTypes/ApproximateTime.cs
    startLine: 293
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the minute of the time approximation.\n"
  remarks: "\nThis value defaults to the current minute.\n"
  example: []
  syntax:
    content: public int Minute { get; set; }
    content.vb: Public Property Minute As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\nAn integer representing the minute.\n"
  overload: Microsoft.Health.ItemTypes.ApproximateTime.Minute*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nThe <span class=\"paramref\">value</span> parameter is less than 0 or greater than 59\nwhen setting.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.ApproximateTime.Second
  commentId: P:Microsoft.Health.ItemTypes.ApproximateTime.Second
  id: Second
  parent: Microsoft.Health.ItemTypes.ApproximateTime
  langs:
  - csharp
  - vb
  name: Second
  nameWithType: ApproximateTime.Second
  fullName: Microsoft.Health.ItemTypes.ApproximateTime.Second
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ApproximateTime.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Second
    path: ../Microsoft.Health.ItemTypes/ApproximateTime.cs
    startLine: 327
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the seconds of the time approximation.\n"
  remarks: "\nIf the number of seconds is unknown, the value can be set to \n<strong>null</strong>. This value defaults to <strong>null</strong>.\n"
  example: []
  syntax:
    content: public int ? Second { get; set; }
    content.vb: Public Property Second As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: "\nAn integer representing the second.\n"
  overload: Microsoft.Health.ItemTypes.ApproximateTime.Second*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nThe <span class=\"paramref\">value</span> parameter is less than 0 or greater than 59\nwhen setting.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.ApproximateTime.Millisecond
  commentId: P:Microsoft.Health.ItemTypes.ApproximateTime.Millisecond
  id: Millisecond
  parent: Microsoft.Health.ItemTypes.ApproximateTime
  langs:
  - csharp
  - vb
  name: Millisecond
  nameWithType: ApproximateTime.Millisecond
  fullName: Microsoft.Health.ItemTypes.ApproximateTime.Millisecond
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ApproximateTime.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Millisecond
    path: ../Microsoft.Health.ItemTypes/ApproximateTime.cs
    startLine: 362
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the milliseconds of the time approximation.\n"
  remarks: "\nIf the number of milliseconds is unknown, the value can be set to <strong>null</strong>. \nThis value defaults to <strong>null</strong>.\n"
  example: []
  syntax:
    content: public int ? Millisecond { get; set; }
    content.vb: Public Property Millisecond As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: "\nAn integer representing the milliseconds.\n"
  overload: Microsoft.Health.ItemTypes.ApproximateTime.Millisecond*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nThe <span class=\"paramref\">value</span> parameter is less than 0 or greater than 999\nwhen setting.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.ApproximateTime.HasValue
  commentId: P:Microsoft.Health.ItemTypes.ApproximateTime.HasValue
  id: HasValue
  parent: Microsoft.Health.ItemTypes.ApproximateTime
  langs:
  - csharp
  - vb
  name: HasValue
  nameWithType: ApproximateTime.HasValue
  fullName: Microsoft.Health.ItemTypes.ApproximateTime.HasValue
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ApproximateTime.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: HasValue
    path: ../Microsoft.Health.ItemTypes/ApproximateTime.cs
    startLine: 396
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets a boolean indicating whether this ApproximateTime has a value in it.\n"
  remarks: "\nApproximateTime instances are initialized into state without a value, but the Hour and Minute\nproperties must still return numbers in that case. This property is used to tell the \ndifference between an ApproximateTime that has no value and one where the hour and minute\nhave been set to zero (ie 12:00 AM).\n"
  example: []
  syntax:
    content: public bool HasValue { get; }
    content.vb: Public ReadOnly Property HasValue As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\nTrue if there is a value.\n"
  overload: Microsoft.Health.ItemTypes.ApproximateTime.HasValue*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.ItemTypes.ApproximateTime.CompareTo(System.Object)
  commentId: M:Microsoft.Health.ItemTypes.ApproximateTime.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: Microsoft.Health.ItemTypes.ApproximateTime
  langs:
  - csharp
  - vb
  name: CompareTo(Object)
  nameWithType: ApproximateTime.CompareTo(Object)
  fullName: Microsoft.Health.ItemTypes.ApproximateTime.CompareTo(System.Object)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ApproximateTime.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CompareTo
    path: ../Microsoft.Health.ItemTypes/ApproximateTime.cs
    startLine: 433
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCompares the specified object to this ApproximateTime object.\n"
  remarks: "\nIf the result is less than zero, the \ninstance is less than <span class=\"paramref\">obj</span>. If the result is zero\nthe instance is equal to <span class=\"paramref\">obj</span>. If the result is\ngreater than zero, the instance is greater than \n<span class=\"paramref\">obj</span>.\n"
  example: []
  syntax:
    content: public int CompareTo(object obj)
    content.vb: Public Function CompareTo(obj As Object) As Integer
    parameters:
    - id: obj
      type: System.Object
      description: "\nThe object to be compared.\n"
    return:
      type: System.Int32
      description: "\nAn integer representing the object order.\n"
  overload: Microsoft.Health.ItemTypes.ApproximateTime.CompareTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">obj</span> parameter is not an <xref href=\"Microsoft.Health.ItemTypes.ApproximateTime\" data-throw-if-not-resolved=\"false\"></xref>\nobject.\n"
  implements:
  - System.IComparable.CompareTo(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.ApproximateTime.CompareTo(Microsoft.Health.ItemTypes.ApproximateTime)
  commentId: M:Microsoft.Health.ItemTypes.ApproximateTime.CompareTo(Microsoft.Health.ItemTypes.ApproximateTime)
  id: CompareTo(Microsoft.Health.ItemTypes.ApproximateTime)
  parent: Microsoft.Health.ItemTypes.ApproximateTime
  langs:
  - csharp
  - vb
  name: CompareTo(ApproximateTime)
  nameWithType: ApproximateTime.CompareTo(ApproximateTime)
  fullName: Microsoft.Health.ItemTypes.ApproximateTime.CompareTo(Microsoft.Health.ItemTypes.ApproximateTime)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ApproximateTime.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CompareTo
    path: ../Microsoft.Health.ItemTypes/ApproximateTime.cs
    startLine: 477
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCompares the specified object to this ApproximateDate object.\n"
  remarks: "\nIf the result is less than zero, the \ninstance is less than <span class=\"paramref\">other</span>. If the result is zero\nthe instance is equal to <span class=\"paramref\">other</span>. If the result is\ngreater than zero, the instance is greater than \n<span class=\"paramref\">other</span>.\n"
  example: []
  syntax:
    content: public int CompareTo(ApproximateTime other)
    content.vb: Public Function CompareTo(other As ApproximateTime) As Integer
    parameters:
    - id: other
      type: Microsoft.Health.ItemTypes.ApproximateTime
      description: "\nThe time to be compared.\n"
    return:
      type: System.Int32
      description: "\nA 32-bit signed integer that indicates the relative order of the \nobjects being compared. \n"
  overload: Microsoft.Health.ItemTypes.ApproximateTime.CompareTo*
  implements:
  - System.IComparable{Microsoft.Health.ItemTypes.ApproximateTime}.CompareTo(Microsoft.Health.ItemTypes.ApproximateTime)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.ApproximateTime.Equals(System.Object)
  commentId: M:Microsoft.Health.ItemTypes.ApproximateTime.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.Health.ItemTypes.ApproximateTime
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: ApproximateTime.Equals(Object)
  fullName: Microsoft.Health.ItemTypes.ApproximateTime.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ApproximateTime.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Equals
    path: ../Microsoft.Health.ItemTypes/ApproximateTime.cs
    startLine: 597
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets a value indicating whether the specified object is equal to this object.\n"
  remarks: "\nIf an <xref href=\"Microsoft.Health.ItemTypes.ApproximateDate\" data-throw-if-not-resolved=\"false\"></xref> is less specific than the other \n<xref href=\"Microsoft.Health.ItemTypes.ApproximateDate\" data-throw-if-not-resolved=\"false\"></xref>, the less specific one is considered less than \nthe more specific one, assuming that the current data is equal.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: "\nThe object to be compared.\n"
    return:
      type: System.Boolean
      description: "\n<strong>true</strong> if the <span class=\"paramref\">obj</span> is a \n<xref href=\"Microsoft.Health.ItemTypes.ApproximateTime\" data-throw-if-not-resolved=\"false\"></xref> object and the hour, minute, \nsecond, and millisecond exactly match; otherwise, <strong>false</strong>. \n"
  overridden: System.Object.Equals(System.Object)
  overload: Microsoft.Health.ItemTypes.ApproximateTime.Equals*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">obj</span> parameter is not an <xref href=\"Microsoft.Health.ItemTypes.ApproximateTime\" data-throw-if-not-resolved=\"false\"></xref>\nobject.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.ApproximateTime.GetHashCode
  commentId: M:Microsoft.Health.ItemTypes.ApproximateTime.GetHashCode
  id: GetHashCode
  parent: Microsoft.Health.ItemTypes.ApproximateTime
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: ApproximateTime.GetHashCode()
  fullName: Microsoft.Health.ItemTypes.ApproximateTime.GetHashCode()
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ApproximateTime.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetHashCode
    path: ../Microsoft.Health.ItemTypes/ApproximateTime.cs
    startLine: 610
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nSee the base class documentation.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: "\nSee the base class documentation.\n"
  overridden: System.Object.GetHashCode
  overload: Microsoft.Health.ItemTypes.ApproximateTime.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.ApproximateTime.op_Equality(Microsoft.Health.ItemTypes.ApproximateTime,System.Object)
  commentId: M:Microsoft.Health.ItemTypes.ApproximateTime.op_Equality(Microsoft.Health.ItemTypes.ApproximateTime,System.Object)
  id: op_Equality(Microsoft.Health.ItemTypes.ApproximateTime,System.Object)
  parent: Microsoft.Health.ItemTypes.ApproximateTime
  langs:
  - csharp
  - vb
  name: Equality(ApproximateTime, Object)
  nameWithType: ApproximateTime.Equality(ApproximateTime, Object)
  fullName: Microsoft.Health.ItemTypes.ApproximateTime.Equality(Microsoft.Health.ItemTypes.ApproximateTime, System.Object)
  type: Operator
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ApproximateTime.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: op_Equality
    path: ../Microsoft.Health.ItemTypes/ApproximateTime.cs
    startLine: 641
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets a value indicating whether the specified object is equal to \nthe specified time.\n"
  example: []
  syntax:
    content: public static bool operator ==(ApproximateTime time, object obj)
    content.vb: Public Shared Operator =(time As ApproximateTime, obj As Object) As Boolean
    parameters:
    - id: time
      type: Microsoft.Health.ItemTypes.ApproximateTime
      description: "\nThe time object to be compared.\n"
    - id: obj
      type: System.Object
      description: "\nThe second object to be compared.\n"
    return:
      type: System.Boolean
      description: "\n<strong>true</strong> if <span class=\"paramref\">time</span> has the hour, minute, \nsecond, and millisecond exactly match; otherwise, <strong>false</strong>.\n"
  overload: Microsoft.Health.ItemTypes.ApproximateTime.op_Equality*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">obj</span> parameter is not an \n<xref href=\"Microsoft.Health.ItemTypes.ApproximateTime\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.ItemTypes.ApproximateTime.op_Inequality(Microsoft.Health.ItemTypes.ApproximateTime,System.Object)
  commentId: M:Microsoft.Health.ItemTypes.ApproximateTime.op_Inequality(Microsoft.Health.ItemTypes.ApproximateTime,System.Object)
  id: op_Inequality(Microsoft.Health.ItemTypes.ApproximateTime,System.Object)
  parent: Microsoft.Health.ItemTypes.ApproximateTime
  langs:
  - csharp
  - vb
  name: Inequality(ApproximateTime, Object)
  nameWithType: ApproximateTime.Inequality(ApproximateTime, Object)
  fullName: Microsoft.Health.ItemTypes.ApproximateTime.Inequality(Microsoft.Health.ItemTypes.ApproximateTime, System.Object)
  type: Operator
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ApproximateTime.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: op_Inequality
    path: ../Microsoft.Health.ItemTypes/ApproximateTime.cs
    startLine: 692
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets a value indicating whether the specified object is not equal \nto the specified\ntime.\n"
  remarks: "\nIf an <xref href=\"Microsoft.Health.ItemTypes.ApproximateDate\" data-throw-if-not-resolved=\"false\"></xref> is less specific than the other \n<xref href=\"Microsoft.Health.ItemTypes.ApproximateDate\" data-throw-if-not-resolved=\"false\"></xref>, the less specific one is considered less than \nthe more specific one, assuming that the current data is equal.\n"
  example: []
  syntax:
    content: public static bool operator !=(ApproximateTime time, object obj)
    content.vb: Public Shared Operator <>(time As ApproximateTime, obj As Object) As Boolean
    parameters:
    - id: time
      type: Microsoft.Health.ItemTypes.ApproximateTime
      description: "\nThe time object to be compared.\n"
    - id: obj
      type: System.Object
      description: "\nThe second object to be compared.\n"
    return:
      type: System.Boolean
      description: "\n<strong>false</strong> if <span class=\"paramref\">time</span> has the hour, minute, \nsecond, and millisecond exactly match.        \n"
  overload: Microsoft.Health.ItemTypes.ApproximateTime.op_Inequality*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">obj</span> parameter is not an <xref href=\"Microsoft.Health.ItemTypes.ApproximateTime\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.ItemTypes.ApproximateTime.op_GreaterThan(Microsoft.Health.ItemTypes.ApproximateTime,System.Object)
  commentId: M:Microsoft.Health.ItemTypes.ApproximateTime.op_GreaterThan(Microsoft.Health.ItemTypes.ApproximateTime,System.Object)
  id: op_GreaterThan(Microsoft.Health.ItemTypes.ApproximateTime,System.Object)
  parent: Microsoft.Health.ItemTypes.ApproximateTime
  langs:
  - csharp
  - vb
  name: GreaterThan(ApproximateTime, Object)
  nameWithType: ApproximateTime.GreaterThan(ApproximateTime, Object)
  fullName: Microsoft.Health.ItemTypes.ApproximateTime.GreaterThan(Microsoft.Health.ItemTypes.ApproximateTime, System.Object)
  type: Operator
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ApproximateTime.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: op_GreaterThan
    path: ../Microsoft.Health.ItemTypes/ApproximateTime.cs
    startLine: 744
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets a value indicating whether the specified time is greater than the specified\nobject.\n"
  remarks: "\nIf an <xref href=\"Microsoft.Health.ItemTypes.ApproximateDate\" data-throw-if-not-resolved=\"false\"></xref> is less specific than the other \n<xref href=\"Microsoft.Health.ItemTypes.ApproximateDate\" data-throw-if-not-resolved=\"false\"></xref>, the less specific one is considered less than \nthe more specific one, assuming that the current data is equal.\n"
  example: []
  syntax:
    content: public static bool operator>(ApproximateTime time, object obj)
    content.vb: Public Shared Operator>(time As ApproximateTime, obj As Object) As Boolean
    parameters:
    - id: time
      type: Microsoft.Health.ItemTypes.ApproximateTime
      description: "\nThe time object to be compared.\n"
    - id: obj
      type: System.Object
      description: "\nThe second object to be compared.\n"
    return:
      type: System.Boolean
      description: "\n<strong>true</strong> if <span class=\"paramref\">time</span> has the hour, minute, \nsecond, and millisecond greater than that of \n<span class=\"paramref\">obj</span>.\n"
  overload: Microsoft.Health.ItemTypes.ApproximateTime.op_GreaterThan*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">obj</span> parameter is not an \n<xref href=\"Microsoft.Health.ItemTypes.ApproximateTime\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.ItemTypes.ApproximateTime.op_LessThan(Microsoft.Health.ItemTypes.ApproximateTime,System.Object)
  commentId: M:Microsoft.Health.ItemTypes.ApproximateTime.op_LessThan(Microsoft.Health.ItemTypes.ApproximateTime,System.Object)
  id: op_LessThan(Microsoft.Health.ItemTypes.ApproximateTime,System.Object)
  parent: Microsoft.Health.ItemTypes.ApproximateTime
  langs:
  - csharp
  - vb
  name: LessThan(ApproximateTime, Object)
  nameWithType: ApproximateTime.LessThan(ApproximateTime, Object)
  fullName: Microsoft.Health.ItemTypes.ApproximateTime.LessThan(Microsoft.Health.ItemTypes.ApproximateTime, System.Object)
  type: Operator
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ApproximateTime.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: op_LessThan
    path: ../Microsoft.Health.ItemTypes/ApproximateTime.cs
    startLine: 796
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets a value indicating whether the specified time is less than the specified\nobject.\n"
  remarks: "\nIf an <xref href=\"Microsoft.Health.ItemTypes.ApproximateDate\" data-throw-if-not-resolved=\"false\"></xref> is less specific than the other \n<xref href=\"Microsoft.Health.ItemTypes.ApproximateDate\" data-throw-if-not-resolved=\"false\"></xref>, the less specific one is considered less than \nthe more specific one, assuming that the current data is equal.\n"
  example: []
  syntax:
    content: public static bool operator <(ApproximateTime time, object obj)
    content.vb: Public Shared Operator <(time As ApproximateTime, obj As Object) As Boolean
    parameters:
    - id: time
      type: Microsoft.Health.ItemTypes.ApproximateTime
      description: "\nThe time object to be compared.\n"
    - id: obj
      type: System.Object
      description: "\nThe second object to be compared.\n"
    return:
      type: System.Boolean
      description: "\n<strong>true</strong> if <span class=\"paramref\">time</span> has the hour, minute, \nsecond, and millisecond less than that of \n<span class=\"paramref\">obj</span>.       \n"
  overload: Microsoft.Health.ItemTypes.ApproximateTime.op_LessThan*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">obj</span> parameter is not an \n<xref href=\"Microsoft.Health.ItemTypes.ApproximateTime\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.ItemTypes.ApproximateTime.ToString
  commentId: M:Microsoft.Health.ItemTypes.ApproximateTime.ToString
  id: ToString
  parent: Microsoft.Health.ItemTypes.ApproximateTime
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ApproximateTime.ToString()
  fullName: Microsoft.Health.ItemTypes.ApproximateTime.ToString()
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ApproximateTime.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ToString
    path: ../Microsoft.Health.ItemTypes/ApproximateTime.cs
    startLine: 828
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets a string representation of the time.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\nA string representation of the time.\n"
  overridden: System.Object.ToString
  overload: Microsoft.Health.ItemTypes.ApproximateTime.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Health.ItemTypes
  commentId: N:Microsoft.Health.ItemTypes
  isExternal: false
  name: Microsoft.Health.ItemTypes
  nameWithType: Microsoft.Health.ItemTypes
  fullName: Microsoft.Health.ItemTypes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData
  commentId: T:Microsoft.Health.ItemTypes.HealthRecordItemData
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: HealthRecordItemData
  nameWithType: HealthRecordItemData
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData
- uid: System.IComparable
  commentId: T:System.IComparable
  parent: System
  isExternal: true
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: System.IComparable{Microsoft.Health.ItemTypes.ApproximateTime}
  commentId: T:System.IComparable{Microsoft.Health.ItemTypes.ApproximateTime}
  parent: System
  definition: System.IComparable`1
  name: IComparable<ApproximateTime>
  nameWithType: IComparable<ApproximateTime>
  fullName: System.IComparable<Microsoft.Health.ItemTypes.ApproximateTime>
  nameWithType.vb: IComparable(Of ApproximateTime)
  fullName.vb: System.IComparable(Of Microsoft.Health.ItemTypes.ApproximateTime)
  name.vb: IComparable(Of ApproximateTime)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.ItemTypes.ApproximateTime
    name: ApproximateTime
    nameWithType: ApproximateTime
    fullName: Microsoft.Health.ItemTypes.ApproximateTime
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.ItemTypes.ApproximateTime
    name: ApproximateTime
    nameWithType: ApproximateTime
    fullName: Microsoft.Health.ItemTypes.ApproximateTime
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.ApproximateTime.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<ApproximateTime>()
  nameWithType: TypeHelper.ValueOrDbNull<ApproximateTime>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.ItemTypes.ApproximateTime>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of ApproximateTime)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.ItemTypes.ApproximateTime)()
  name.vb: ValueOrDbNull(Of ApproximateTime)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<ApproximateTime>
    nameWithType: TypeHelper.ValueOrDbNull<ApproximateTime>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.ItemTypes.ApproximateTime>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of ApproximateTime)
    nameWithType: TypeHelper.ValueOrDbNull(Of ApproximateTime)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.ItemTypes.ApproximateTime)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullName.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.ItemTypes.ApproximateTime
  commentId: T:Microsoft.Health.ItemTypes.ApproximateTime
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: ApproximateTime
  nameWithType: ApproximateTime
  fullName: Microsoft.Health.ItemTypes.ApproximateTime
- uid: Microsoft.Health.ItemTypes.ApproximateTime.#ctor*
  commentId: Overload:Microsoft.Health.ItemTypes.ApproximateTime.#ctor
  isExternal: false
  name: ApproximateTime
  nameWithType: ApproximateTime.ApproximateTime
  fullName: Microsoft.Health.ItemTypes.ApproximateTime.ApproximateTime
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Health.ItemTypes.ApproximateTime.Now*
  commentId: Overload:Microsoft.Health.ItemTypes.ApproximateTime.Now
  isExternal: false
  name: Now
  nameWithType: ApproximateTime.Now
  fullName: Microsoft.Health.ItemTypes.ApproximateTime.Now
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.HealthRecordItemData
  isExternal: true
  name: ParseXml(XPathNavigator)
  nameWithType: HealthRecordItemData.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: HealthRecordItemData.ParseXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: HealthRecordItemData.ParseXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.ApproximateTime.ParseXml*
  commentId: Overload:Microsoft.Health.ItemTypes.ApproximateTime.ParseXml
  isExternal: false
  name: ParseXml
  nameWithType: ApproximateTime.ParseXml
  fullName: Microsoft.Health.ItemTypes.ApproximateTime.ParseXml
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.Xml.XPath.XPathNavigator
  commentId: T:System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: true
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: false
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.HealthRecordItemData
  isExternal: true
  name: WriteXml(String, XmlWriter)
  nameWithType: HealthRecordItemData.WriteXml(String, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String, System.Xml.XmlWriter)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItemData.WriteXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItemData.WriteXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.ApproximateTime.WriteXml*
  commentId: Overload:Microsoft.Health.ItemTypes.ApproximateTime.WriteXml
  isExternal: false
  name: WriteXml
  nameWithType: ApproximateTime.WriteXml
  fullName: Microsoft.Health.ItemTypes.ApproximateTime.WriteXml
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: Microsoft.Health.ItemTypes.ApproximateTime.Hour*
  commentId: Overload:Microsoft.Health.ItemTypes.ApproximateTime.Hour
  isExternal: false
  name: Hour
  nameWithType: ApproximateTime.Hour
  fullName: Microsoft.Health.ItemTypes.ApproximateTime.Hour
- uid: Microsoft.Health.ItemTypes.ApproximateTime.Minute*
  commentId: Overload:Microsoft.Health.ItemTypes.ApproximateTime.Minute
  isExternal: false
  name: Minute
  nameWithType: ApproximateTime.Minute
  fullName: Microsoft.Health.ItemTypes.ApproximateTime.Minute
- uid: Microsoft.Health.ItemTypes.ApproximateTime.Second*
  commentId: Overload:Microsoft.Health.ItemTypes.ApproximateTime.Second
  isExternal: false
  name: Second
  nameWithType: ApproximateTime.Second
  fullName: Microsoft.Health.ItemTypes.ApproximateTime.Second
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.ApproximateTime.Millisecond*
  commentId: Overload:Microsoft.Health.ItemTypes.ApproximateTime.Millisecond
  isExternal: false
  name: Millisecond
  nameWithType: ApproximateTime.Millisecond
  fullName: Microsoft.Health.ItemTypes.ApproximateTime.Millisecond
- uid: Microsoft.Health.ItemTypes.ApproximateTime.HasValue*
  commentId: Overload:Microsoft.Health.ItemTypes.ApproximateTime.HasValue
  isExternal: false
  name: HasValue
  nameWithType: ApproximateTime.HasValue
  fullName: Microsoft.Health.ItemTypes.ApproximateTime.HasValue
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Health.ItemTypes.ApproximateTime.CompareTo*
  commentId: Overload:Microsoft.Health.ItemTypes.ApproximateTime.CompareTo
  isExternal: false
  name: CompareTo
  nameWithType: ApproximateTime.CompareTo
  fullName: Microsoft.Health.ItemTypes.ApproximateTime.CompareTo
- uid: System.IComparable.CompareTo(System.Object)
  commentId: M:System.IComparable.CompareTo(System.Object)
  parent: System.IComparable
  isExternal: true
  name: CompareTo(Object)
  nameWithType: IComparable.CompareTo(Object)
  fullName: System.IComparable.CompareTo(System.Object)
  spec.csharp:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    nameWithType: IComparable.CompareTo
    fullName: System.IComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    nameWithType: IComparable.CompareTo
    fullName: System.IComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{Microsoft.Health.ItemTypes.ApproximateTime}.CompareTo(Microsoft.Health.ItemTypes.ApproximateTime)
  commentId: M:System.IComparable{Microsoft.Health.ItemTypes.ApproximateTime}.CompareTo(Microsoft.Health.ItemTypes.ApproximateTime)
  parent: System.IComparable{Microsoft.Health.ItemTypes.ApproximateTime}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(ApproximateTime)
  nameWithType: IComparable<ApproximateTime>.CompareTo(ApproximateTime)
  fullName: System.IComparable<Microsoft.Health.ItemTypes.ApproximateTime>.CompareTo(Microsoft.Health.ItemTypes.ApproximateTime)
  nameWithType.vb: IComparable(Of ApproximateTime).CompareTo(ApproximateTime)
  fullName.vb: System.IComparable(Of Microsoft.Health.ItemTypes.ApproximateTime).CompareTo(Microsoft.Health.ItemTypes.ApproximateTime)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<ApproximateTime>.CompareTo
    fullName: System.IComparable<Microsoft.Health.ItemTypes.ApproximateTime>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.ItemTypes.ApproximateTime
    name: ApproximateTime
    nameWithType: ApproximateTime
    fullName: Microsoft.Health.ItemTypes.ApproximateTime
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of ApproximateTime).CompareTo
    fullName: System.IComparable(Of Microsoft.Health.ItemTypes.ApproximateTime).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.ItemTypes.ApproximateTime
    name: ApproximateTime
    nameWithType: ApproximateTime
    fullName: Microsoft.Health.ItemTypes.ApproximateTime
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable`1.CompareTo(`0)
  commentId: M:System.IComparable`1.CompareTo(`0)
  isExternal: true
  name: CompareTo(T)
  nameWithType: IComparable<T>.CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  fullName.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<T>.CompareTo
    fullName: System.IComparable<T>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of T).CompareTo
    fullName: System.IComparable(Of T).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.ApproximateDate
  commentId: T:Microsoft.Health.ItemTypes.ApproximateDate
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: ApproximateDate
  nameWithType: ApproximateDate
  fullName: Microsoft.Health.ItemTypes.ApproximateDate
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.ApproximateTime.Equals*
  commentId: Overload:Microsoft.Health.ItemTypes.ApproximateTime.Equals
  isExternal: false
  name: Equals
  nameWithType: ApproximateTime.Equals
  fullName: Microsoft.Health.ItemTypes.ApproximateTime.Equals
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.ApproximateTime.GetHashCode*
  commentId: Overload:Microsoft.Health.ItemTypes.ApproximateTime.GetHashCode
  isExternal: false
  name: GetHashCode
  nameWithType: ApproximateTime.GetHashCode
  fullName: Microsoft.Health.ItemTypes.ApproximateTime.GetHashCode
- uid: Microsoft.Health.ItemTypes.ApproximateTime.op_Equality*
  commentId: Overload:Microsoft.Health.ItemTypes.ApproximateTime.op_Equality
  isExternal: false
  name: Equality
  nameWithType: ApproximateTime.Equality
  fullName: Microsoft.Health.ItemTypes.ApproximateTime.Equality
- uid: Microsoft.Health.ItemTypes.ApproximateTime.op_Inequality*
  commentId: Overload:Microsoft.Health.ItemTypes.ApproximateTime.op_Inequality
  isExternal: false
  name: Inequality
  nameWithType: ApproximateTime.Inequality
  fullName: Microsoft.Health.ItemTypes.ApproximateTime.Inequality
- uid: Microsoft.Health.ItemTypes.ApproximateTime.op_GreaterThan*
  commentId: Overload:Microsoft.Health.ItemTypes.ApproximateTime.op_GreaterThan
  isExternal: false
  name: GreaterThan
  nameWithType: ApproximateTime.GreaterThan
  fullName: Microsoft.Health.ItemTypes.ApproximateTime.GreaterThan
- uid: Microsoft.Health.ItemTypes.ApproximateTime.op_LessThan*
  commentId: Overload:Microsoft.Health.ItemTypes.ApproximateTime.op_LessThan
  isExternal: false
  name: LessThan
  nameWithType: ApproximateTime.LessThan
  fullName: Microsoft.Health.ItemTypes.ApproximateTime.LessThan
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.ApproximateTime.ToString*
  commentId: Overload:Microsoft.Health.ItemTypes.ApproximateTime.ToString
  isExternal: false
  name: ToString
  nameWithType: ApproximateTime.ToString
  fullName: Microsoft.Health.ItemTypes.ApproximateTime.ToString
