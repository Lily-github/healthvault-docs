### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Web.WebApplicationConfiguration
  commentId: T:Microsoft.Health.Web.WebApplicationConfiguration
  id: WebApplicationConfiguration
  parent: Microsoft.Health.Web
  children:
  - Microsoft.Health.Web.WebApplicationConfiguration.ActionUrlRedirectOverride
  - Microsoft.Health.Web.WebApplicationConfiguration.AllowedRedirectSites
  - Microsoft.Health.Web.WebApplicationConfiguration.AppId
  - Microsoft.Health.Web.WebApplicationConfiguration.CookieDomain
  - Microsoft.Health.Web.WebApplicationConfiguration.CookieEncryptionKey
  - Microsoft.Health.Web.WebApplicationConfiguration.CookieName
  - Microsoft.Health.Web.WebApplicationConfiguration.CookiePath
  - Microsoft.Health.Web.WebApplicationConfiguration.CookieTimeoutMinutes
  - Microsoft.Health.Web.WebApplicationConfiguration.DataGridItemsPerPage
  - Microsoft.Health.Web.WebApplicationConfiguration.GetActionUrl(System.String)
  - Microsoft.Health.Web.WebApplicationConfiguration.HealthServiceHandlerUrl
  - Microsoft.Health.Web.WebApplicationConfiguration.HealthServiceRootUrl
  - Microsoft.Health.Web.WebApplicationConfiguration.HealthServiceUrl
  - Microsoft.Health.Web.WebApplicationConfiguration.IsMra
  - Microsoft.Health.Web.WebApplicationConfiguration.IsSignupCodeRequired
  - Microsoft.Health.Web.WebApplicationConfiguration.LogOnRequired
  - Microsoft.Health.Web.WebApplicationConfiguration.MaxCookieTimeoutMinutes
  - Microsoft.Health.Web.WebApplicationConfiguration.NoLogOnRequired
  - Microsoft.Health.Web.WebApplicationConfiguration.ShellAuthenticationUrl
  - Microsoft.Health.Web.WebApplicationConfiguration.ShellRedirectorUrl
  - Microsoft.Health.Web.WebApplicationConfiguration.ShellUrl
  - Microsoft.Health.Web.WebApplicationConfiguration.UseAspSession
  - Microsoft.Health.Web.WebApplicationConfiguration.UseSslForSecurity
  langs:
  - csharp
  - vb
  name: WebApplicationConfiguration
  nameWithType: WebApplicationConfiguration
  fullName: Microsoft.Health.Web.WebApplicationConfiguration
  type: Class
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationConfiguration.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WebApplicationConfiguration
    path: ../Microsoft.Health.Web/WebApplicationConfiguration.cs
    startLine: 25
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nContains the application configuration as retrieved from \nweb.config or as constants.\n"
  example: []
  syntax:
    content: public sealed class WebApplicationConfiguration
    content.vb: Public NotInheritable Class WebApplicationConfiguration
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.Web.WebApplicationConfiguration.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Health.Web.WebApplicationConfiguration.LogOnRequired
  commentId: F:Microsoft.Health.Web.WebApplicationConfiguration.LogOnRequired
  id: LogOnRequired
  parent: Microsoft.Health.Web.WebApplicationConfiguration
  langs:
  - csharp
  - vb
  name: LogOnRequired
  nameWithType: WebApplicationConfiguration.LogOnRequired
  fullName: Microsoft.Health.Web.WebApplicationConfiguration.LogOnRequired
  type: Field
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationConfiguration.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: LogOnRequired
    path: ../Microsoft.Health.Web/WebApplicationConfiguration.cs
    startLine: 31
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nConstant to indicate logon required\n"
  example: []
  syntax:
    content: public const bool LogOnRequired = true
    content.vb: Public Const LogOnRequired As Boolean = True
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.Web.WebApplicationConfiguration.NoLogOnRequired
  commentId: F:Microsoft.Health.Web.WebApplicationConfiguration.NoLogOnRequired
  id: NoLogOnRequired
  parent: Microsoft.Health.Web.WebApplicationConfiguration
  langs:
  - csharp
  - vb
  name: NoLogOnRequired
  nameWithType: WebApplicationConfiguration.NoLogOnRequired
  fullName: Microsoft.Health.Web.WebApplicationConfiguration.NoLogOnRequired
  type: Field
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationConfiguration.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: NoLogOnRequired
    path: ../Microsoft.Health.Web/WebApplicationConfiguration.cs
    startLine: 37
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nConstant to indicate logon not required \n"
  example: []
  syntax:
    content: public const bool NoLogOnRequired = false
    content.vb: Public Const NoLogOnRequired As Boolean = False
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.Web.WebApplicationConfiguration.CookieName
  commentId: F:Microsoft.Health.Web.WebApplicationConfiguration.CookieName
  id: CookieName
  parent: Microsoft.Health.Web.WebApplicationConfiguration
  langs:
  - csharp
  - vb
  name: CookieName
  nameWithType: WebApplicationConfiguration.CookieName
  fullName: Microsoft.Health.Web.WebApplicationConfiguration.CookieName
  type: Field
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationConfiguration.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CookieName
    path: ../Microsoft.Health.Web/WebApplicationConfiguration.cs
    startLine: 44
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nThe name of the cookie for use by applications and the base\nHealthServicePage to store authentication information.\n"
  example: []
  syntax:
    content: public static readonly string CookieName
    content.vb: Public Shared ReadOnly CookieName As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Health.Web.WebApplicationConfiguration.ShellAuthenticationUrl
  commentId: P:Microsoft.Health.Web.WebApplicationConfiguration.ShellAuthenticationUrl
  id: ShellAuthenticationUrl
  parent: Microsoft.Health.Web.WebApplicationConfiguration
  langs:
  - csharp
  - vb
  name: ShellAuthenticationUrl
  nameWithType: WebApplicationConfiguration.ShellAuthenticationUrl
  fullName: Microsoft.Health.Web.WebApplicationConfiguration.ShellAuthenticationUrl
  type: Property
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationConfiguration.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ShellAuthenticationUrl
    path: ../Microsoft.Health.Web/WebApplicationConfiguration.cs
    startLine: 53
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nShell auth page location including the application id.\n"
  example: []
  syntax:
    content: public static Uri ShellAuthenticationUrl { get; }
    content.vb: Public Shared ReadOnly Property ShellAuthenticationUrl As Uri
    parameters: []
    return:
      type: System.Uri
  overload: Microsoft.Health.Web.WebApplicationConfiguration.ShellAuthenticationUrl*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Health.Web.WebApplicationConfiguration.AppId
  commentId: F:Microsoft.Health.Web.WebApplicationConfiguration.AppId
  id: AppId
  parent: Microsoft.Health.Web.WebApplicationConfiguration
  langs:
  - csharp
  - vb
  name: AppId
  nameWithType: WebApplicationConfiguration.AppId
  fullName: Microsoft.Health.Web.WebApplicationConfiguration.AppId
  type: Field
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationConfiguration.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AppId
    path: ../Microsoft.Health.Web/WebApplicationConfiguration.cs
    startLine: 65
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nApplication id, from web config.\n"
  example: []
  syntax:
    content: public static readonly Guid AppId
    content.vb: Public Shared ReadOnly AppId As Guid
    return:
      type: System.Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Health.Web.WebApplicationConfiguration.ShellUrl
  commentId: P:Microsoft.Health.Web.WebApplicationConfiguration.ShellUrl
  id: ShellUrl
  parent: Microsoft.Health.Web.WebApplicationConfiguration
  langs:
  - csharp
  - vb
  name: ShellUrl
  nameWithType: WebApplicationConfiguration.ShellUrl
  fullName: Microsoft.Health.Web.WebApplicationConfiguration.ShellUrl
  type: Property
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationConfiguration.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ShellUrl
    path: ../Microsoft.Health.Web/WebApplicationConfiguration.cs
    startLine: 71
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nShell url, from web config.\n"
  example: []
  syntax:
    content: public static Uri ShellUrl { get; }
    content.vb: Public Shared ReadOnly Property ShellUrl As Uri
    parameters: []
    return:
      type: System.Uri
  overload: Microsoft.Health.Web.WebApplicationConfiguration.ShellUrl*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Health.Web.WebApplicationConfiguration.CookieDomain
  commentId: F:Microsoft.Health.Web.WebApplicationConfiguration.CookieDomain
  id: CookieDomain
  parent: Microsoft.Health.Web.WebApplicationConfiguration
  langs:
  - csharp
  - vb
  name: CookieDomain
  nameWithType: WebApplicationConfiguration.CookieDomain
  fullName: Microsoft.Health.Web.WebApplicationConfiguration.CookieDomain
  type: Field
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationConfiguration.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CookieDomain
    path: ../Microsoft.Health.Web/WebApplicationConfiguration.cs
    startLine: 83
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nCookie domain, from web config.\n"
  example: []
  syntax:
    content: public static readonly string CookieDomain
    content.vb: Public Shared ReadOnly CookieDomain As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Health.Web.WebApplicationConfiguration.CookiePath
  commentId: F:Microsoft.Health.Web.WebApplicationConfiguration.CookiePath
  id: CookiePath
  parent: Microsoft.Health.Web.WebApplicationConfiguration
  langs:
  - csharp
  - vb
  name: CookiePath
  nameWithType: WebApplicationConfiguration.CookiePath
  fullName: Microsoft.Health.Web.WebApplicationConfiguration.CookiePath
  type: Field
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationConfiguration.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CookiePath
    path: ../Microsoft.Health.Web/WebApplicationConfiguration.cs
    startLine: 89
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  example: []
  syntax:
    content: public static readonly string CookiePath
    content.vb: Public Shared ReadOnly CookiePath As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Health.Web.WebApplicationConfiguration.CookieTimeoutMinutes
  commentId: F:Microsoft.Health.Web.WebApplicationConfiguration.CookieTimeoutMinutes
  id: CookieTimeoutMinutes
  parent: Microsoft.Health.Web.WebApplicationConfiguration
  langs:
  - csharp
  - vb
  name: CookieTimeoutMinutes
  nameWithType: WebApplicationConfiguration.CookieTimeoutMinutes
  fullName: Microsoft.Health.Web.WebApplicationConfiguration.CookieTimeoutMinutes
  type: Field
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationConfiguration.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CookieTimeoutMinutes
    path: ../Microsoft.Health.Web/WebApplicationConfiguration.cs
    startLine: 95
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nCookie timeout in minutes, from web config.\n"
  example: []
  syntax:
    content: public static readonly int CookieTimeoutMinutes
    content.vb: Public Shared ReadOnly CookieTimeoutMinutes As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Health.Web.WebApplicationConfiguration.MaxCookieTimeoutMinutes
  commentId: F:Microsoft.Health.Web.WebApplicationConfiguration.MaxCookieTimeoutMinutes
  id: MaxCookieTimeoutMinutes
  parent: Microsoft.Health.Web.WebApplicationConfiguration
  langs:
  - csharp
  - vb
  name: MaxCookieTimeoutMinutes
  nameWithType: WebApplicationConfiguration.MaxCookieTimeoutMinutes
  fullName: Microsoft.Health.Web.WebApplicationConfiguration.MaxCookieTimeoutMinutes
  type: Field
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationConfiguration.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: MaxCookieTimeoutMinutes
    path: ../Microsoft.Health.Web/WebApplicationConfiguration.cs
    startLine: 112
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nThe maximum cookie timeout in minutes, from web config.\n"
  remarks: "\nThe cookie timeout is defaulted in the web config but the \napplication configuration in HealthVault can allow for persistent\ntokens which require a longer cookie life. The cookie will take\non the life of the token when the page receives a \"tokenTtl\" \nquery string parameter when receiving the authentication token.\nThe MaxCookieTimeoutMinutes limits the cookie timeout to a \nmaximum value even when the CookieTimeoutMinutes or the token TTL\nfrom the applications configuration is larger.\n"
  example: []
  syntax:
    content: public static readonly int MaxCookieTimeoutMinutes
    content.vb: Public Shared ReadOnly MaxCookieTimeoutMinutes As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Health.Web.WebApplicationConfiguration.CookieEncryptionKey
  commentId: F:Microsoft.Health.Web.WebApplicationConfiguration.CookieEncryptionKey
  id: CookieEncryptionKey
  parent: Microsoft.Health.Web.WebApplicationConfiguration
  langs:
  - csharp
  - vb
  name: CookieEncryptionKey
  nameWithType: WebApplicationConfiguration.CookieEncryptionKey
  fullName: Microsoft.Health.Web.WebApplicationConfiguration.CookieEncryptionKey
  type: Field
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationConfiguration.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CookieEncryptionKey
    path: ../Microsoft.Health.Web/WebApplicationConfiguration.cs
    startLine: 125
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nThe 32 byte key used to encrypt cookies for privacy.\n"
  remarks: "\nThe cookie encryption key is an optional string consisting of 32 hex digits (0-F).\nWhen a key is assigned to an application, any existing unencrypted cookies are still readable.\n"
  example: []
  syntax:
    content: public static readonly byte[] CookieEncryptionKey
    content.vb: Public Shared ReadOnly CookieEncryptionKey As Byte()
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Health.Web.WebApplicationConfiguration.UseSslForSecurity
  commentId: F:Microsoft.Health.Web.WebApplicationConfiguration.UseSslForSecurity
  id: UseSslForSecurity
  parent: Microsoft.Health.Web.WebApplicationConfiguration
  langs:
  - csharp
  - vb
  name: UseSslForSecurity
  nameWithType: WebApplicationConfiguration.UseSslForSecurity
  fullName: Microsoft.Health.Web.WebApplicationConfiguration.UseSslForSecurity
  type: Field
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationConfiguration.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: UseSslForSecurity
    path: ../Microsoft.Health.Web/WebApplicationConfiguration.cs
    startLine: 130
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nWhether to secure the connection with SSL, from web config.\n"
  example: []
  syntax:
    content: public static readonly bool UseSslForSecurity
    content.vb: Public Shared ReadOnly UseSslForSecurity As Boolean
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Health.Web.WebApplicationConfiguration.UseAspSession
  commentId: F:Microsoft.Health.Web.WebApplicationConfiguration.UseAspSession
  id: UseAspSession
  parent: Microsoft.Health.Web.WebApplicationConfiguration
  langs:
  - csharp
  - vb
  name: UseAspSession
  nameWithType: WebApplicationConfiguration.UseAspSession
  fullName: Microsoft.Health.Web.WebApplicationConfiguration.UseAspSession
  type: Field
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationConfiguration.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: UseAspSession
    path: ../Microsoft.Health.Web/WebApplicationConfiguration.cs
    startLine: 136
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nUse the asp session rather than a cookie, from web config.\n"
  example: []
  syntax:
    content: public static readonly bool UseAspSession
    content.vb: Public Shared ReadOnly UseAspSession As Boolean
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Health.Web.WebApplicationConfiguration.IsMra
  commentId: F:Microsoft.Health.Web.WebApplicationConfiguration.IsMra
  id: IsMra
  parent: Microsoft.Health.Web.WebApplicationConfiguration
  langs:
  - csharp
  - vb
  name: IsMra
  nameWithType: WebApplicationConfiguration.IsMra
  fullName: Microsoft.Health.Web.WebApplicationConfiguration.IsMra
  type: Field
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationConfiguration.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: IsMra
    path: ../Microsoft.Health.Web/WebApplicationConfiguration.cs
    startLine: 142
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nIf true, the application is a multi-record application.\n"
  example: []
  syntax:
    content: public static readonly bool IsMra
    content.vb: Public Shared ReadOnly IsMra As Boolean
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Health.Web.WebApplicationConfiguration.IsSignupCodeRequired
  commentId: F:Microsoft.Health.Web.WebApplicationConfiguration.IsSignupCodeRequired
  id: IsSignupCodeRequired
  parent: Microsoft.Health.Web.WebApplicationConfiguration
  langs:
  - csharp
  - vb
  name: IsSignupCodeRequired
  nameWithType: WebApplicationConfiguration.IsSignupCodeRequired
  fullName: Microsoft.Health.Web.WebApplicationConfiguration.IsSignupCodeRequired
  type: Field
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationConfiguration.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: IsSignupCodeRequired
    path: ../Microsoft.Health.Web/WebApplicationConfiguration.cs
    startLine: 149
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nIndicates whether a signup code is required for a user to create\na HealthVault account.\n"
  example: []
  syntax:
    content: public static readonly bool IsSignupCodeRequired
    content.vb: Public Shared ReadOnly IsSignupCodeRequired As Boolean
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Health.Web.WebApplicationConfiguration.HealthServiceUrl
  commentId: P:Microsoft.Health.Web.WebApplicationConfiguration.HealthServiceUrl
  id: HealthServiceUrl
  parent: Microsoft.Health.Web.WebApplicationConfiguration
  langs:
  - csharp
  - vb
  name: HealthServiceUrl
  nameWithType: WebApplicationConfiguration.HealthServiceUrl
  fullName: Microsoft.Health.Web.WebApplicationConfiguration.HealthServiceUrl
  type: Property
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationConfiguration.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: HealthServiceUrl
    path: ../Microsoft.Health.Web/WebApplicationConfiguration.cs
    startLine: 155
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nHealthVault url, from web config.\n"
  example: []
  syntax:
    content: public static Uri HealthServiceUrl { get; }
    content.vb: Public Shared ReadOnly Property HealthServiceUrl As Uri
    parameters: []
    return:
      type: System.Uri
  overload: Microsoft.Health.Web.WebApplicationConfiguration.HealthServiceUrl*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Health.Web.WebApplicationConfiguration.HealthServiceRootUrl
  commentId: P:Microsoft.Health.Web.WebApplicationConfiguration.HealthServiceRootUrl
  id: HealthServiceRootUrl
  parent: Microsoft.Health.Web.WebApplicationConfiguration
  langs:
  - csharp
  - vb
  name: HealthServiceRootUrl
  nameWithType: WebApplicationConfiguration.HealthServiceRootUrl
  fullName: Microsoft.Health.Web.WebApplicationConfiguration.HealthServiceRootUrl
  type: Property
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationConfiguration.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: HealthServiceRootUrl
    path: ../Microsoft.Health.Web/WebApplicationConfiguration.cs
    startLine: 166
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nHealthVault root url, from web config.\n"
  example: []
  syntax:
    content: public static Uri HealthServiceRootUrl { get; }
    content.vb: Public Shared ReadOnly Property HealthServiceRootUrl As Uri
    parameters: []
    return:
      type: System.Uri
  overload: Microsoft.Health.Web.WebApplicationConfiguration.HealthServiceRootUrl*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Health.Web.WebApplicationConfiguration.ShellRedirectorUrl
  commentId: P:Microsoft.Health.Web.WebApplicationConfiguration.ShellRedirectorUrl
  id: ShellRedirectorUrl
  parent: Microsoft.Health.Web.WebApplicationConfiguration
  langs:
  - csharp
  - vb
  name: ShellRedirectorUrl
  nameWithType: WebApplicationConfiguration.ShellRedirectorUrl
  fullName: Microsoft.Health.Web.WebApplicationConfiguration.ShellRedirectorUrl
  type: Property
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationConfiguration.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ShellRedirectorUrl
    path: ../Microsoft.Health.Web/WebApplicationConfiguration.cs
    startLine: 178
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nShell redirector url, derived from web config.\n"
  example: []
  syntax:
    content: public static Uri ShellRedirectorUrl { get; }
    content.vb: Public Shared ReadOnly Property ShellRedirectorUrl As Uri
    parameters: []
    return:
      type: System.Uri
  overload: Microsoft.Health.Web.WebApplicationConfiguration.ShellRedirectorUrl*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Health.Web.WebApplicationConfiguration.HealthServiceHandlerUrl
  commentId: P:Microsoft.Health.Web.WebApplicationConfiguration.HealthServiceHandlerUrl
  id: HealthServiceHandlerUrl
  parent: Microsoft.Health.Web.WebApplicationConfiguration
  langs:
  - csharp
  - vb
  name: HealthServiceHandlerUrl
  nameWithType: WebApplicationConfiguration.HealthServiceHandlerUrl
  fullName: Microsoft.Health.Web.WebApplicationConfiguration.HealthServiceHandlerUrl
  type: Property
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationConfiguration.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: HealthServiceHandlerUrl
    path: ../Microsoft.Health.Web/WebApplicationConfiguration.cs
    startLine: 192
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nHealthVault handler url, derived from web config.\n"
  example: []
  syntax:
    content: public static Uri HealthServiceHandlerUrl { get; }
    content.vb: Public Shared ReadOnly Property HealthServiceHandlerUrl As Uri
    parameters: []
    return:
      type: System.Uri
  overload: Microsoft.Health.Web.WebApplicationConfiguration.HealthServiceHandlerUrl*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Health.Web.WebApplicationConfiguration.GetActionUrl(System.String)
  commentId: M:Microsoft.Health.Web.WebApplicationConfiguration.GetActionUrl(System.String)
  id: GetActionUrl(System.String)
  parent: Microsoft.Health.Web.WebApplicationConfiguration
  langs:
  - csharp
  - vb
  name: GetActionUrl(String)
  nameWithType: WebApplicationConfiguration.GetActionUrl(String)
  fullName: Microsoft.Health.Web.WebApplicationConfiguration.GetActionUrl(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationConfiguration.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetActionUrl
    path: ../Microsoft.Health.Web/WebApplicationConfiguration.cs
    startLine: 221
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nGets the URL for the specified application action.\n"
  remarks: "\nApplications that use the <xref href=\"Microsoft.Health.Web.HealthServiceActionPage\" data-throw-if-not-resolved=\"false\"></xref>\ncan configure URLs for each action in the web.config file. They\nshould have a key prefix of \"WCPage_Action\" with the action name\nappended. For example, for a the EULA action page, the \nweb.config should contain a key of WCPage_ActionEula with a \nvalue containing the URL of the EULA page.\n"
  example: []
  syntax:
    content: public static string GetActionUrl(string action)
    content.vb: Public Shared Function GetActionUrl(action As String) As String
    parameters:
    - id: action
      type: System.String
      description: "\nThe action to get the URL for.\n"
    return:
      type: System.String
      description: "\nThe URL the application configured for the specified action.\n"
  overload: Microsoft.Health.Web.WebApplicationConfiguration.GetActionUrl*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.WebApplicationConfiguration.AllowedRedirectSites
  commentId: P:Microsoft.Health.Web.WebApplicationConfiguration.AllowedRedirectSites
  id: AllowedRedirectSites
  parent: Microsoft.Health.Web.WebApplicationConfiguration
  langs:
  - csharp
  - vb
  name: AllowedRedirectSites
  nameWithType: WebApplicationConfiguration.AllowedRedirectSites
  fullName: Microsoft.Health.Web.WebApplicationConfiguration.AllowedRedirectSites
  type: Property
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationConfiguration.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AllowedRedirectSites
    path: ../Microsoft.Health.Web/WebApplicationConfiguration.cs
    startLine: 248
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nGets the list of allowed redirect sites.\n"
  remarks: "\nApplications that use the <xref href=\"Microsoft.Health.Web.HealthServiceActionPage\" data-throw-if-not-resolved=\"false\"></xref>\ncan configure a list of allowed redirect sites. \n\nWhen a HealthVault shell redirect happens to a \n<xref href=\"Microsoft.Health.Web.HealthServiceActionPage\" data-throw-if-not-resolved=\"false\"></xref>, it will be allowed if the actionqs parameter\nis a relative URL or a URL that points to the site the application is running on. \nAll other sites will note be allowed.\nTo allow another site, the web.config should contain a key of\nWCPage_AllowedRedirectSites that has the site as part of a comma-\nseparated list.\n"
  example: []
  syntax:
    content: public static string AllowedRedirectSites { get; }
    content.vb: Public Shared ReadOnly Property AllowedRedirectSites As String
    parameters: []
    return:
      type: System.String
      description: "\nA comma-separated list of allowed url redirection sites.\n"
  overload: Microsoft.Health.Web.WebApplicationConfiguration.AllowedRedirectSites*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Health.Web.WebApplicationConfiguration.ActionUrlRedirectOverride
  commentId: P:Microsoft.Health.Web.WebApplicationConfiguration.ActionUrlRedirectOverride
  id: ActionUrlRedirectOverride
  parent: Microsoft.Health.Web.WebApplicationConfiguration
  langs:
  - csharp
  - vb
  name: ActionUrlRedirectOverride
  nameWithType: WebApplicationConfiguration.ActionUrlRedirectOverride
  fullName: Microsoft.Health.Web.WebApplicationConfiguration.ActionUrlRedirectOverride
  type: Property
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationConfiguration.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ActionUrlRedirectOverride
    path: ../Microsoft.Health.Web/WebApplicationConfiguration.cs
    startLine: 260
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nNon-production action url redirect override.\n"
  example: []
  syntax:
    content: public static string ActionUrlRedirectOverride { get; }
    content.vb: Public Shared ReadOnly Property ActionUrlRedirectOverride As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.Web.WebApplicationConfiguration.ActionUrlRedirectOverride*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Health.Web.WebApplicationConfiguration.DataGridItemsPerPage
  commentId: P:Microsoft.Health.Web.WebApplicationConfiguration.DataGridItemsPerPage
  id: DataGridItemsPerPage
  parent: Microsoft.Health.Web.WebApplicationConfiguration
  langs:
  - csharp
  - vb
  name: DataGridItemsPerPage
  nameWithType: WebApplicationConfiguration.DataGridItemsPerPage
  fullName: Microsoft.Health.Web.WebApplicationConfiguration.DataGridItemsPerPage
  type: Property
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationConfiguration.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DataGridItemsPerPage
    path: ../Microsoft.Health.Web/WebApplicationConfiguration.cs
    startLine: 275
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nGets the configured number of items that should be shown for a\n<xref href=\"Microsoft.Health.Web.HealthRecordItemDataGrid\" data-throw-if-not-resolved=\"false\"></xref> page.\n"
  example: []
  syntax:
    content: public static int DataGridItemsPerPage { get; }
    content.vb: Public Shared ReadOnly Property DataGridItemsPerPage As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Health.Web.WebApplicationConfiguration.DataGridItemsPerPage*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Microsoft.Health.Web
  commentId: N:Microsoft.Health.Web
  isExternal: false
  name: Microsoft.Health.Web
  nameWithType: Microsoft.Health.Web
  fullName: Microsoft.Health.Web
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Web.WebApplicationConfiguration.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<WebApplicationConfiguration>()
  nameWithType: TypeHelper.ValueOrDbNull<WebApplicationConfiguration>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Web.WebApplicationConfiguration>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of WebApplicationConfiguration)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Web.WebApplicationConfiguration)()
  name.vb: ValueOrDbNull(Of WebApplicationConfiguration)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<WebApplicationConfiguration>
    nameWithType: TypeHelper.ValueOrDbNull<WebApplicationConfiguration>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Web.WebApplicationConfiguration>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of WebApplicationConfiguration)
    nameWithType: TypeHelper.ValueOrDbNull(Of WebApplicationConfiguration)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Web.WebApplicationConfiguration)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.Web.WebApplicationConfiguration.ShellAuthenticationUrl*
  commentId: Overload:Microsoft.Health.Web.WebApplicationConfiguration.ShellAuthenticationUrl
  isExternal: false
  name: ShellAuthenticationUrl
  nameWithType: WebApplicationConfiguration.ShellAuthenticationUrl
  fullName: Microsoft.Health.Web.WebApplicationConfiguration.ShellAuthenticationUrl
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Microsoft.Health.Web.WebApplicationConfiguration.ShellUrl*
  commentId: Overload:Microsoft.Health.Web.WebApplicationConfiguration.ShellUrl
  isExternal: false
  name: ShellUrl
  nameWithType: WebApplicationConfiguration.ShellUrl
  fullName: Microsoft.Health.Web.WebApplicationConfiguration.ShellUrl
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.Health.Web.WebApplicationConfiguration.HealthServiceUrl*
  commentId: Overload:Microsoft.Health.Web.WebApplicationConfiguration.HealthServiceUrl
  isExternal: false
  name: HealthServiceUrl
  nameWithType: WebApplicationConfiguration.HealthServiceUrl
  fullName: Microsoft.Health.Web.WebApplicationConfiguration.HealthServiceUrl
- uid: Microsoft.Health.Web.WebApplicationConfiguration.HealthServiceRootUrl*
  commentId: Overload:Microsoft.Health.Web.WebApplicationConfiguration.HealthServiceRootUrl
  isExternal: false
  name: HealthServiceRootUrl
  nameWithType: WebApplicationConfiguration.HealthServiceRootUrl
  fullName: Microsoft.Health.Web.WebApplicationConfiguration.HealthServiceRootUrl
- uid: Microsoft.Health.Web.WebApplicationConfiguration.ShellRedirectorUrl*
  commentId: Overload:Microsoft.Health.Web.WebApplicationConfiguration.ShellRedirectorUrl
  isExternal: false
  name: ShellRedirectorUrl
  nameWithType: WebApplicationConfiguration.ShellRedirectorUrl
  fullName: Microsoft.Health.Web.WebApplicationConfiguration.ShellRedirectorUrl
- uid: Microsoft.Health.Web.WebApplicationConfiguration.HealthServiceHandlerUrl*
  commentId: Overload:Microsoft.Health.Web.WebApplicationConfiguration.HealthServiceHandlerUrl
  isExternal: false
  name: HealthServiceHandlerUrl
  nameWithType: WebApplicationConfiguration.HealthServiceHandlerUrl
  fullName: Microsoft.Health.Web.WebApplicationConfiguration.HealthServiceHandlerUrl
- uid: Microsoft.Health.Web.HealthServiceActionPage
  commentId: T:Microsoft.Health.Web.HealthServiceActionPage
  isExternal: false
  name: HealthServiceActionPage
  nameWithType: HealthServiceActionPage
  fullName: Microsoft.Health.Web.HealthServiceActionPage
- uid: Microsoft.Health.Web.WebApplicationConfiguration.GetActionUrl*
  commentId: Overload:Microsoft.Health.Web.WebApplicationConfiguration.GetActionUrl
  isExternal: false
  name: GetActionUrl
  nameWithType: WebApplicationConfiguration.GetActionUrl
  fullName: Microsoft.Health.Web.WebApplicationConfiguration.GetActionUrl
- uid: Microsoft.Health.Web.WebApplicationConfiguration.AllowedRedirectSites*
  commentId: Overload:Microsoft.Health.Web.WebApplicationConfiguration.AllowedRedirectSites
  isExternal: false
  name: AllowedRedirectSites
  nameWithType: WebApplicationConfiguration.AllowedRedirectSites
  fullName: Microsoft.Health.Web.WebApplicationConfiguration.AllowedRedirectSites
- uid: Microsoft.Health.Web.WebApplicationConfiguration.ActionUrlRedirectOverride*
  commentId: Overload:Microsoft.Health.Web.WebApplicationConfiguration.ActionUrlRedirectOverride
  isExternal: false
  name: ActionUrlRedirectOverride
  nameWithType: WebApplicationConfiguration.ActionUrlRedirectOverride
  fullName: Microsoft.Health.Web.WebApplicationConfiguration.ActionUrlRedirectOverride
- uid: Microsoft.Health.Web.HealthRecordItemDataGrid
  commentId: T:Microsoft.Health.Web.HealthRecordItemDataGrid
  isExternal: false
  name: HealthRecordItemDataGrid
  nameWithType: HealthRecordItemDataGrid
  fullName: Microsoft.Health.Web.HealthRecordItemDataGrid
- uid: Microsoft.Health.Web.WebApplicationConfiguration.DataGridItemsPerPage*
  commentId: Overload:Microsoft.Health.Web.WebApplicationConfiguration.DataGridItemsPerPage
  isExternal: false
  name: DataGridItemsPerPage
  nameWithType: WebApplicationConfiguration.DataGridItemsPerPage
  fullName: Microsoft.Health.Web.WebApplicationConfiguration.DataGridItemsPerPage
