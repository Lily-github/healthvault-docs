### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.ItemTypes.CarePlanTask
  commentId: T:Microsoft.Health.ItemTypes.CarePlanTask
  id: CarePlanTask
  parent: Microsoft.Health.ItemTypes
  children:
  - Microsoft.Health.ItemTypes.CarePlanTask.#ctor
  - Microsoft.Health.ItemTypes.CarePlanTask.#ctor(Microsoft.Health.ItemTypes.CodableValue)
  - Microsoft.Health.ItemTypes.CarePlanTask.Description
  - Microsoft.Health.ItemTypes.CarePlanTask.EndDate
  - Microsoft.Health.ItemTypes.CarePlanTask.Name
  - Microsoft.Health.ItemTypes.CarePlanTask.ParseXml(System.Xml.XPath.XPathNavigator)
  - Microsoft.Health.ItemTypes.CarePlanTask.Recurrence
  - Microsoft.Health.ItemTypes.CarePlanTask.ReferenceId
  - Microsoft.Health.ItemTypes.CarePlanTask.SequenceNumber
  - Microsoft.Health.ItemTypes.CarePlanTask.StartDate
  - Microsoft.Health.ItemTypes.CarePlanTask.TargetCompletionDate
  - Microsoft.Health.ItemTypes.CarePlanTask.TaskAssociatedTypeInfo
  - Microsoft.Health.ItemTypes.CarePlanTask.ToString
  - Microsoft.Health.ItemTypes.CarePlanTask.WriteXml(System.String,System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: CarePlanTask
  nameWithType: CarePlanTask
  fullName: Microsoft.Health.ItemTypes.CarePlanTask
  type: Class
  source:
    remote:
      path: Microsoft.Health.ItemTypes/CarePlanTask.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CarePlanTask
    path: ../Microsoft.Health.ItemTypes/CarePlanTask.cs
    startLine: 20
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nA task defines an action to be performed by the user.\n"
  example: []
  syntax:
    content: 'public class CarePlanTask : HealthRecordItemData'
    content.vb: >-
      Public Class CarePlanTask
          Inherits HealthRecordItemData
  inheritance:
  - System.Object
  - Microsoft.Health.ItemTypes.HealthRecordItemData
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.ItemTypes.CarePlanTask.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.ItemTypes.CarePlanTask.#ctor
  commentId: M:Microsoft.Health.ItemTypes.CarePlanTask.#ctor
  id: '#ctor'
  parent: Microsoft.Health.ItemTypes.CarePlanTask
  langs:
  - csharp
  - vb
  name: CarePlanTask()
  nameWithType: CarePlanTask.CarePlanTask()
  fullName: Microsoft.Health.ItemTypes.CarePlanTask.CarePlanTask()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/CarePlanTask.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.ItemTypes/CarePlanTask.cs
    startLine: 26
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.CarePlanTask\" data-throw-if-not-resolved=\"false\"></xref> class with default values.\n"
  example: []
  syntax:
    content: public CarePlanTask()
    content.vb: Public Sub New
  overload: Microsoft.Health.ItemTypes.CarePlanTask.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.CarePlanTask.#ctor(Microsoft.Health.ItemTypes.CodableValue)
  commentId: M:Microsoft.Health.ItemTypes.CarePlanTask.#ctor(Microsoft.Health.ItemTypes.CodableValue)
  id: '#ctor(Microsoft.Health.ItemTypes.CodableValue)'
  parent: Microsoft.Health.ItemTypes.CarePlanTask
  langs:
  - csharp
  - vb
  name: CarePlanTask(CodableValue)
  nameWithType: CarePlanTask.CarePlanTask(CodableValue)
  fullName: Microsoft.Health.ItemTypes.CarePlanTask.CarePlanTask(Microsoft.Health.ItemTypes.CodableValue)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/CarePlanTask.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.ItemTypes/CarePlanTask.cs
    startLine: 43
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.CarePlanTask\" data-throw-if-not-resolved=\"false\"></xref> class\nspecifying mandatory values.\n"
  example: []
  syntax:
    content: public CarePlanTask(CodableValue name)
    content.vb: Public Sub New(name As CodableValue)
    parameters:
    - id: name
      type: Microsoft.Health.ItemTypes.CodableValue
      description: "\nName of the task.\n"
  overload: Microsoft.Health.ItemTypes.CarePlanTask.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nIf <span class=\"paramref\">name</span> is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.CarePlanTask.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.CarePlanTask.ParseXml(System.Xml.XPath.XPathNavigator)
  id: ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.CarePlanTask
  langs:
  - csharp
  - vb
  name: ParseXml(XPathNavigator)
  nameWithType: CarePlanTask.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.CarePlanTask.ParseXml(System.Xml.XPath.XPathNavigator)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/CarePlanTask.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ParseXml
    path: ../Microsoft.Health.ItemTypes/CarePlanTask.cs
    startLine: 60
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nPopulates this <xref href=\"Microsoft.Health.ItemTypes.CarePlanTask\" data-throw-if-not-resolved=\"false\"></xref> instance from the data in the specified XML.\n"
  example: []
  syntax:
    content: public override void ParseXml(XPathNavigator navigator)
    content.vb: Public Overrides Sub ParseXml(navigator As XPathNavigator)
    parameters:
    - id: navigator
      type: System.Xml.XPath.XPathNavigator
      description: "\nThe XML to get the CarePlanTask data from.\n"
  overridden: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  overload: Microsoft.Health.ItemTypes.CarePlanTask.ParseXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nIf <span class=\"paramref\">navigator</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.CarePlanTask.WriteXml(System.String,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.CarePlanTask.WriteXml(System.String,System.Xml.XmlWriter)
  id: WriteXml(System.String,System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.CarePlanTask
  langs:
  - csharp
  - vb
  name: WriteXml(String, XmlWriter)
  nameWithType: CarePlanTask.WriteXml(String, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.CarePlanTask.WriteXml(System.String, System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/CarePlanTask.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteXml
    path: ../Microsoft.Health.ItemTypes/CarePlanTask.cs
    startLine: 102
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nWrites the XML representation of the CarePlanTask into\nthe specified XML writer.\n"
  example: []
  syntax:
    content: public override void WriteXml(string nodeName, XmlWriter writer)
    content.vb: Public Overrides Sub WriteXml(nodeName As String, writer As XmlWriter)
    parameters:
    - id: nodeName
      type: System.String
      description: "\nThe name of the outer node for the medical image study series.\n"
    - id: writer
      type: System.Xml.XmlWriter
      description: "\nThe XML writer into which the CarePlanTask should be\nwritten.\n"
  overridden: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  overload: Microsoft.Health.ItemTypes.CarePlanTask.WriteXml*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nIf <span class=\"paramref\">nodeName</span> parameter is <strong>null</strong> or empty.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nIf <span class=\"paramref\">writer</span> parameter is <strong>null</strong>.\n"
  - type: Microsoft.Health.HealthRecordItemSerializationException
    commentId: T:Microsoft.Health.HealthRecordItemSerializationException
    description: "\nIf <xref href=\"Microsoft.Health.ItemTypes.CarePlanTask.Name\" data-throw-if-not-resolved=\"false\"></xref> is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.CarePlanTask.Name
  commentId: P:Microsoft.Health.ItemTypes.CarePlanTask.Name
  id: Name
  parent: Microsoft.Health.ItemTypes.CarePlanTask
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: CarePlanTask.Name
  fullName: Microsoft.Health.ItemTypes.CarePlanTask.Name
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/CarePlanTask.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Name
    path: ../Microsoft.Health.ItemTypes/CarePlanTask.cs
    startLine: 137
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets name of the task.\n"
  remarks: "\nIf there is no information about name the value should be set to <strong>null</strong>.\n"
  example: []
  syntax:
    content: public CodableValue Name { get; set; }
    content.vb: Public Property Name As CodableValue
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.CodableValue
  overload: Microsoft.Health.ItemTypes.CarePlanTask.Name*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">value</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.CarePlanTask.Description
  commentId: P:Microsoft.Health.ItemTypes.CarePlanTask.Description
  id: Description
  parent: Microsoft.Health.ItemTypes.CarePlanTask
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: CarePlanTask.Description
  fullName: Microsoft.Health.ItemTypes.CarePlanTask.Description
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/CarePlanTask.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Description
    path: ../Microsoft.Health.ItemTypes/CarePlanTask.cs
    startLine: 166
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets description of the task.\n"
  remarks: "\nIf there is no information about description the value should be set to <strong>null</strong>.\n"
  example: []
  syntax:
    content: public string Description { get; set; }
    content.vb: Public Property Description As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.ItemTypes.CarePlanTask.Description*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">value</span> contains only whitespace.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.CarePlanTask.StartDate
  commentId: P:Microsoft.Health.ItemTypes.CarePlanTask.StartDate
  id: StartDate
  parent: Microsoft.Health.ItemTypes.CarePlanTask
  langs:
  - csharp
  - vb
  name: StartDate
  nameWithType: CarePlanTask.StartDate
  fullName: Microsoft.Health.ItemTypes.CarePlanTask.StartDate
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/CarePlanTask.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: StartDate
    path: ../Microsoft.Health.ItemTypes/CarePlanTask.cs
    startLine: 206
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the start date for the task.\n"
  remarks: "\nIf there is no information about startDate the value should be set to <strong>null</strong>.\n"
  example: []
  syntax:
    content: public ApproximateDateTime StartDate { get; set; }
    content.vb: Public Property StartDate As ApproximateDateTime
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.ApproximateDateTime
  overload: Microsoft.Health.ItemTypes.CarePlanTask.StartDate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.CarePlanTask.EndDate
  commentId: P:Microsoft.Health.ItemTypes.CarePlanTask.EndDate
  id: EndDate
  parent: Microsoft.Health.ItemTypes.CarePlanTask
  langs:
  - csharp
  - vb
  name: EndDate
  nameWithType: CarePlanTask.EndDate
  fullName: Microsoft.Health.ItemTypes.CarePlanTask.EndDate
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/CarePlanTask.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: EndDate
    path: ../Microsoft.Health.ItemTypes/CarePlanTask.cs
    startLine: 230
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the end date for the task.\n"
  remarks: "\nIf there is no information about endDate the value should be set to <strong>null</strong>.\n"
  example: []
  syntax:
    content: public ApproximateDateTime EndDate { get; set; }
    content.vb: Public Property EndDate As ApproximateDateTime
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.ApproximateDateTime
  overload: Microsoft.Health.ItemTypes.CarePlanTask.EndDate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.CarePlanTask.TargetCompletionDate
  commentId: P:Microsoft.Health.ItemTypes.CarePlanTask.TargetCompletionDate
  id: TargetCompletionDate
  parent: Microsoft.Health.ItemTypes.CarePlanTask
  langs:
  - csharp
  - vb
  name: TargetCompletionDate
  nameWithType: CarePlanTask.TargetCompletionDate
  fullName: Microsoft.Health.ItemTypes.CarePlanTask.TargetCompletionDate
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/CarePlanTask.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: TargetCompletionDate
    path: ../Microsoft.Health.ItemTypes/CarePlanTask.cs
    startLine: 254
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the date user intends to complete the task.\n"
  remarks: "\nIf there is no information about targetCompletionDate the value should be set to <strong>null</strong>.\n"
  example: []
  syntax:
    content: public ApproximateDateTime TargetCompletionDate { get; set; }
    content.vb: Public Property TargetCompletionDate As ApproximateDateTime
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.ApproximateDateTime
  overload: Microsoft.Health.ItemTypes.CarePlanTask.TargetCompletionDate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.CarePlanTask.SequenceNumber
  commentId: P:Microsoft.Health.ItemTypes.CarePlanTask.SequenceNumber
  id: SequenceNumber
  parent: Microsoft.Health.ItemTypes.CarePlanTask
  langs:
  - csharp
  - vb
  name: SequenceNumber
  nameWithType: CarePlanTask.SequenceNumber
  fullName: Microsoft.Health.ItemTypes.CarePlanTask.SequenceNumber
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/CarePlanTask.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SequenceNumber
    path: ../Microsoft.Health.ItemTypes/CarePlanTask.cs
    startLine: 277
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets sequence number associated with the task.\n"
  remarks: "\nSequence number could be used to decide the order in which the tasks should be performed.\n"
  example: []
  syntax:
    content: public int ? SequenceNumber { get; set; }
    content.vb: Public Property SequenceNumber As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Health.ItemTypes.CarePlanTask.SequenceNumber*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.CarePlanTask.TaskAssociatedTypeInfo
  commentId: P:Microsoft.Health.ItemTypes.CarePlanTask.TaskAssociatedTypeInfo
  id: TaskAssociatedTypeInfo
  parent: Microsoft.Health.ItemTypes.CarePlanTask
  langs:
  - csharp
  - vb
  name: TaskAssociatedTypeInfo
  nameWithType: CarePlanTask.TaskAssociatedTypeInfo
  fullName: Microsoft.Health.ItemTypes.CarePlanTask.TaskAssociatedTypeInfo
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/CarePlanTask.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: TaskAssociatedTypeInfo
    path: ../Microsoft.Health.ItemTypes/CarePlanTask.cs
    startLine: 305
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets HealthVault type information related to this task.\n"
  remarks: "\nIf there is no information about TaskAssociatedTypeInfo the value should be set to <strong>null</strong>.\n"
  example: []
  syntax:
    content: public AssociatedTypeInfo TaskAssociatedTypeInfo { get; set; }
    content.vb: Public Property TaskAssociatedTypeInfo As AssociatedTypeInfo
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.AssociatedTypeInfo
  overload: Microsoft.Health.ItemTypes.CarePlanTask.TaskAssociatedTypeInfo*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.CarePlanTask.Recurrence
  commentId: P:Microsoft.Health.ItemTypes.CarePlanTask.Recurrence
  id: Recurrence
  parent: Microsoft.Health.ItemTypes.CarePlanTask
  langs:
  - csharp
  - vb
  name: Recurrence
  nameWithType: CarePlanTask.Recurrence
  fullName: Microsoft.Health.ItemTypes.CarePlanTask.Recurrence
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/CarePlanTask.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Recurrence
    path: ../Microsoft.Health.ItemTypes/CarePlanTask.cs
    startLine: 328
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets recurrence of the task.\n"
  remarks: "\nIf there is no information about recurrence the value should be set to <strong>null</strong>.\n"
  example: []
  syntax:
    content: public CarePlanTaskRecurrence Recurrence { get; set; }
    content.vb: Public Property Recurrence As CarePlanTaskRecurrence
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.CarePlanTaskRecurrence
  overload: Microsoft.Health.ItemTypes.CarePlanTask.Recurrence*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.CarePlanTask.ReferenceId
  commentId: P:Microsoft.Health.ItemTypes.CarePlanTask.ReferenceId
  id: ReferenceId
  parent: Microsoft.Health.ItemTypes.CarePlanTask
  langs:
  - csharp
  - vb
  name: ReferenceId
  nameWithType: CarePlanTask.ReferenceId
  fullName: Microsoft.Health.ItemTypes.CarePlanTask.ReferenceId
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/CarePlanTask.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ReferenceId
    path: ../Microsoft.Health.ItemTypes/CarePlanTask.cs
    startLine: 355
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets an unique id to distinguish one task from another.\n"
  remarks: "\nIf there is no information about referenceId the value should be set to <strong>null</strong>.\n"
  example: []
  syntax:
    content: public string ReferenceId { get; set; }
    content.vb: Public Property ReferenceId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.ItemTypes.CarePlanTask.ReferenceId*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">value</span> contains only whitespace.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.CarePlanTask.ToString
  commentId: M:Microsoft.Health.ItemTypes.CarePlanTask.ToString
  id: ToString
  parent: Microsoft.Health.ItemTypes.CarePlanTask
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: CarePlanTask.ToString()
  fullName: Microsoft.Health.ItemTypes.CarePlanTask.ToString()
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/CarePlanTask.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ToString
    path: ../Microsoft.Health.ItemTypes/CarePlanTask.cs
    startLine: 379
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets a string representation of the CarePlanTask.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\nA string representation of the CarePlanTask.\n"
  overridden: System.Object.ToString
  overload: Microsoft.Health.ItemTypes.CarePlanTask.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Health.ItemTypes
  commentId: N:Microsoft.Health.ItemTypes
  isExternal: false
  name: Microsoft.Health.ItemTypes
  nameWithType: Microsoft.Health.ItemTypes
  fullName: Microsoft.Health.ItemTypes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData
  commentId: T:Microsoft.Health.ItemTypes.HealthRecordItemData
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: HealthRecordItemData
  nameWithType: HealthRecordItemData
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.CarePlanTask.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<CarePlanTask>()
  nameWithType: TypeHelper.ValueOrDbNull<CarePlanTask>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.ItemTypes.CarePlanTask>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of CarePlanTask)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.ItemTypes.CarePlanTask)()
  name.vb: ValueOrDbNull(Of CarePlanTask)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<CarePlanTask>
    nameWithType: TypeHelper.ValueOrDbNull<CarePlanTask>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.ItemTypes.CarePlanTask>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of CarePlanTask)
    nameWithType: TypeHelper.ValueOrDbNull(Of CarePlanTask)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.ItemTypes.CarePlanTask)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.ItemTypes.CarePlanTask
  commentId: T:Microsoft.Health.ItemTypes.CarePlanTask
  isExternal: false
  name: CarePlanTask
  nameWithType: CarePlanTask
  fullName: Microsoft.Health.ItemTypes.CarePlanTask
- uid: Microsoft.Health.ItemTypes.CarePlanTask.#ctor*
  commentId: Overload:Microsoft.Health.ItemTypes.CarePlanTask.#ctor
  isExternal: false
  name: CarePlanTask
  nameWithType: CarePlanTask.CarePlanTask
  fullName: Microsoft.Health.ItemTypes.CarePlanTask.CarePlanTask
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: Microsoft.Health.ItemTypes.CodableValue
  commentId: T:Microsoft.Health.ItemTypes.CodableValue
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: CodableValue
  nameWithType: CodableValue
  fullName: Microsoft.Health.ItemTypes.CodableValue
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.HealthRecordItemData
  isExternal: true
  name: ParseXml(XPathNavigator)
  nameWithType: HealthRecordItemData.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: HealthRecordItemData.ParseXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: HealthRecordItemData.ParseXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.CarePlanTask.ParseXml*
  commentId: Overload:Microsoft.Health.ItemTypes.CarePlanTask.ParseXml
  isExternal: false
  name: ParseXml
  nameWithType: CarePlanTask.ParseXml
  fullName: Microsoft.Health.ItemTypes.CarePlanTask.ParseXml
- uid: System.Xml.XPath.XPathNavigator
  commentId: T:System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: true
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: false
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: Microsoft.Health.ItemTypes.CarePlanTask.Name
  commentId: P:Microsoft.Health.ItemTypes.CarePlanTask.Name
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.HealthRecordItemData
  isExternal: true
  name: WriteXml(String, XmlWriter)
  nameWithType: HealthRecordItemData.WriteXml(String, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String, System.Xml.XmlWriter)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItemData.WriteXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItemData.WriteXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.CarePlanTask.WriteXml*
  commentId: Overload:Microsoft.Health.ItemTypes.CarePlanTask.WriteXml
  isExternal: false
  name: WriteXml
  nameWithType: CarePlanTask.WriteXml
  fullName: Microsoft.Health.ItemTypes.CarePlanTask.WriteXml
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: Microsoft.Health.HealthRecordItemSerializationException
  commentId: T:Microsoft.Health.HealthRecordItemSerializationException
  isExternal: false
  name: HealthRecordItemSerializationException
  nameWithType: HealthRecordItemSerializationException
  fullName: Microsoft.Health.HealthRecordItemSerializationException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: Microsoft.Health.ItemTypes.CarePlanTask.Name*
  commentId: Overload:Microsoft.Health.ItemTypes.CarePlanTask.Name
  isExternal: false
  name: Name
  nameWithType: CarePlanTask.Name
  fullName: Microsoft.Health.ItemTypes.CarePlanTask.Name
- uid: Microsoft.Health.ItemTypes.CarePlanTask.Description*
  commentId: Overload:Microsoft.Health.ItemTypes.CarePlanTask.Description
  isExternal: false
  name: Description
  nameWithType: CarePlanTask.Description
  fullName: Microsoft.Health.ItemTypes.CarePlanTask.Description
- uid: Microsoft.Health.ItemTypes.CarePlanTask.StartDate*
  commentId: Overload:Microsoft.Health.ItemTypes.CarePlanTask.StartDate
  isExternal: false
  name: StartDate
  nameWithType: CarePlanTask.StartDate
  fullName: Microsoft.Health.ItemTypes.CarePlanTask.StartDate
- uid: Microsoft.Health.ItemTypes.ApproximateDateTime
  commentId: T:Microsoft.Health.ItemTypes.ApproximateDateTime
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: ApproximateDateTime
  nameWithType: ApproximateDateTime
  fullName: Microsoft.Health.ItemTypes.ApproximateDateTime
- uid: Microsoft.Health.ItemTypes.CarePlanTask.EndDate*
  commentId: Overload:Microsoft.Health.ItemTypes.CarePlanTask.EndDate
  isExternal: false
  name: EndDate
  nameWithType: CarePlanTask.EndDate
  fullName: Microsoft.Health.ItemTypes.CarePlanTask.EndDate
- uid: Microsoft.Health.ItemTypes.CarePlanTask.TargetCompletionDate*
  commentId: Overload:Microsoft.Health.ItemTypes.CarePlanTask.TargetCompletionDate
  isExternal: false
  name: TargetCompletionDate
  nameWithType: CarePlanTask.TargetCompletionDate
  fullName: Microsoft.Health.ItemTypes.CarePlanTask.TargetCompletionDate
- uid: Microsoft.Health.ItemTypes.CarePlanTask.SequenceNumber*
  commentId: Overload:Microsoft.Health.ItemTypes.CarePlanTask.SequenceNumber
  isExternal: false
  name: SequenceNumber
  nameWithType: CarePlanTask.SequenceNumber
  fullName: Microsoft.Health.ItemTypes.CarePlanTask.SequenceNumber
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.CarePlanTask.TaskAssociatedTypeInfo*
  commentId: Overload:Microsoft.Health.ItemTypes.CarePlanTask.TaskAssociatedTypeInfo
  isExternal: false
  name: TaskAssociatedTypeInfo
  nameWithType: CarePlanTask.TaskAssociatedTypeInfo
  fullName: Microsoft.Health.ItemTypes.CarePlanTask.TaskAssociatedTypeInfo
- uid: Microsoft.Health.ItemTypes.AssociatedTypeInfo
  commentId: T:Microsoft.Health.ItemTypes.AssociatedTypeInfo
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: AssociatedTypeInfo
  nameWithType: AssociatedTypeInfo
  fullName: Microsoft.Health.ItemTypes.AssociatedTypeInfo
- uid: Microsoft.Health.ItemTypes.CarePlanTask.Recurrence*
  commentId: Overload:Microsoft.Health.ItemTypes.CarePlanTask.Recurrence
  isExternal: false
  name: Recurrence
  nameWithType: CarePlanTask.Recurrence
  fullName: Microsoft.Health.ItemTypes.CarePlanTask.Recurrence
- uid: Microsoft.Health.ItemTypes.CarePlanTaskRecurrence
  commentId: T:Microsoft.Health.ItemTypes.CarePlanTaskRecurrence
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: CarePlanTaskRecurrence
  nameWithType: CarePlanTaskRecurrence
  fullName: Microsoft.Health.ItemTypes.CarePlanTaskRecurrence
- uid: Microsoft.Health.ItemTypes.CarePlanTask.ReferenceId*
  commentId: Overload:Microsoft.Health.ItemTypes.CarePlanTask.ReferenceId
  isExternal: false
  name: ReferenceId
  nameWithType: CarePlanTask.ReferenceId
  fullName: Microsoft.Health.ItemTypes.CarePlanTask.ReferenceId
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.CarePlanTask.ToString*
  commentId: Overload:Microsoft.Health.ItemTypes.CarePlanTask.ToString
  isExternal: false
  name: ToString
  nameWithType: CarePlanTask.ToString
  fullName: Microsoft.Health.ItemTypes.CarePlanTask.ToString
