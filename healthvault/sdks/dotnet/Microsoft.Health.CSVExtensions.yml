### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.CSVExtensions
  commentId: T:Microsoft.Health.CSVExtensions
  id: CSVExtensions
  parent: Microsoft.Health
  children:
  - Microsoft.Health.CSVExtensions.Get``1(System.Collections.Generic.IList{System.String},System.Int32)
  - Microsoft.Health.CSVExtensions.GetOptional(System.Collections.Generic.IList{System.String},System.Int32)
  - Microsoft.Health.CSVExtensions.GetOptional(System.Collections.Generic.IList{System.String},System.Int32,System.String)
  - Microsoft.Health.CSVExtensions.GetOptional``1(System.Collections.Generic.IList{System.String},System.Int32,``0)
  langs:
  - csharp
  - vb
  name: CSVExtensions
  nameWithType: CSVExtensions
  fullName: Microsoft.Health.CSVExtensions
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/search/CSVReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CSVExtensions
    path: ../Microsoft.Health.Utility/search/CSVReader.cs
    startLine: 230
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health
  summary: "\n\n"
  example: []
  syntax:
    content: public static class CSVExtensions
    content.vb: Public Module CSVExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Health.CSVExtensions.GetOptional(System.Collections.Generic.IList{System.String},System.Int32)
  commentId: M:Microsoft.Health.CSVExtensions.GetOptional(System.Collections.Generic.IList{System.String},System.Int32)
  id: GetOptional(System.Collections.Generic.IList{System.String},System.Int32)
  isExtensionMethod: true
  parent: Microsoft.Health.CSVExtensions
  langs:
  - csharp
  - vb
  name: GetOptional(IList<String>, Int32)
  nameWithType: CSVExtensions.GetOptional(IList<String>, Int32)
  fullName: Microsoft.Health.CSVExtensions.GetOptional(System.Collections.Generic.IList<System.String>, System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/CSVReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetOptional
    path: ../Microsoft.Health.Utility/search/CSVReader.cs
    startLine: 239
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health
  summary: "\n\n"
  example: []
  syntax:
    content: public static string GetOptional(this IList<string> fields, int index)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetOptional(fields As IList(Of String), index As Integer) As String
    parameters:
    - id: fields
      type: System.Collections.Generic.IList{System.String}
      description: ''
    - id: index
      type: System.Int32
      description: ''
    return:
      type: System.String
      description: ''
  overload: Microsoft.Health.CSVExtensions.GetOptional*
  nameWithType.vb: CSVExtensions.GetOptional(IList(Of String), Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Health.CSVExtensions.GetOptional(System.Collections.Generic.IList(Of System.String), System.Int32)
  name.vb: GetOptional(IList(Of String), Int32)
- uid: Microsoft.Health.CSVExtensions.GetOptional(System.Collections.Generic.IList{System.String},System.Int32,System.String)
  commentId: M:Microsoft.Health.CSVExtensions.GetOptional(System.Collections.Generic.IList{System.String},System.Int32,System.String)
  id: GetOptional(System.Collections.Generic.IList{System.String},System.Int32,System.String)
  isExtensionMethod: true
  parent: Microsoft.Health.CSVExtensions
  langs:
  - csharp
  - vb
  name: GetOptional(IList<String>, Int32, String)
  nameWithType: CSVExtensions.GetOptional(IList<String>, Int32, String)
  fullName: Microsoft.Health.CSVExtensions.GetOptional(System.Collections.Generic.IList<System.String>, System.Int32, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/CSVReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetOptional
    path: ../Microsoft.Health.Utility/search/CSVReader.cs
    startLine: 256
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health
  summary: "\n\n"
  example: []
  syntax:
    content: public static string GetOptional(this IList<string> fields, int index, string defaultValue)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetOptional(fields As IList(Of String), index As Integer, defaultValue As String) As String
    parameters:
    - id: fields
      type: System.Collections.Generic.IList{System.String}
      description: ''
    - id: index
      type: System.Int32
      description: ''
    - id: defaultValue
      type: System.String
      description: ''
    return:
      type: System.String
      description: ''
  overload: Microsoft.Health.CSVExtensions.GetOptional*
  nameWithType.vb: CSVExtensions.GetOptional(IList(Of String), Int32, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Health.CSVExtensions.GetOptional(System.Collections.Generic.IList(Of System.String), System.Int32, System.String)
  name.vb: GetOptional(IList(Of String), Int32, String)
- uid: Microsoft.Health.CSVExtensions.GetOptional``1(System.Collections.Generic.IList{System.String},System.Int32,``0)
  commentId: M:Microsoft.Health.CSVExtensions.GetOptional``1(System.Collections.Generic.IList{System.String},System.Int32,``0)
  id: GetOptional``1(System.Collections.Generic.IList{System.String},System.Int32,``0)
  isExtensionMethod: true
  parent: Microsoft.Health.CSVExtensions
  langs:
  - csharp
  - vb
  name: GetOptional<T>(IList<String>, Int32, T)
  nameWithType: CSVExtensions.GetOptional<T>(IList<String>, Int32, T)
  fullName: Microsoft.Health.CSVExtensions.GetOptional<T>(System.Collections.Generic.IList<System.String>, System.Int32, T)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/CSVReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetOptional
    path: ../Microsoft.Health.Utility/search/CSVReader.cs
    startLine: 274
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health
  summary: "\n\n"
  example: []
  syntax:
    content: public static T GetOptional<T>(this IList<string> fields, int index, T defaultValue)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetOptional(Of T)(fields As IList(Of String), index As Integer, defaultValue As T) As T
    parameters:
    - id: fields
      type: System.Collections.Generic.IList{System.String}
      description: ''
    - id: index
      type: System.Int32
      description: ''
    - id: defaultValue
      type: '{T}'
      description: ''
    typeParameters:
    - id: T
      description: ''
    return:
      type: '{T}'
      description: ''
  overload: Microsoft.Health.CSVExtensions.GetOptional*
  nameWithType.vb: CSVExtensions.GetOptional(Of T)(IList(Of String), Int32, T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Health.CSVExtensions.GetOptional(Of T)(System.Collections.Generic.IList(Of System.String), System.Int32, T)
  name.vb: GetOptional(Of T)(IList(Of String), Int32, T)
- uid: Microsoft.Health.CSVExtensions.Get``1(System.Collections.Generic.IList{System.String},System.Int32)
  commentId: M:Microsoft.Health.CSVExtensions.Get``1(System.Collections.Generic.IList{System.String},System.Int32)
  id: Get``1(System.Collections.Generic.IList{System.String},System.Int32)
  isExtensionMethod: true
  parent: Microsoft.Health.CSVExtensions
  langs:
  - csharp
  - vb
  name: Get<T>(IList<String>, Int32)
  nameWithType: CSVExtensions.Get<T>(IList<String>, Int32)
  fullName: Microsoft.Health.CSVExtensions.Get<T>(System.Collections.Generic.IList<System.String>, System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/CSVReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Get
    path: ../Microsoft.Health.Utility/search/CSVReader.cs
    startLine: 294
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health
  summary: "\n\n"
  example: []
  syntax:
    content: public static T Get<T>(this IList<string> fields, int index)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Get(Of T)(fields As IList(Of String), index As Integer) As T
    parameters:
    - id: fields
      type: System.Collections.Generic.IList{System.String}
      description: ''
    - id: index
      type: System.Int32
      description: ''
    typeParameters:
    - id: T
      description: ''
    return:
      type: '{T}'
      description: ''
  overload: Microsoft.Health.CSVExtensions.Get*
  nameWithType.vb: CSVExtensions.Get(Of T)(IList(Of String), Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Health.CSVExtensions.Get(Of T)(System.Collections.Generic.IList(Of System.String), System.Int32)
  name.vb: Get(Of T)(IList(Of String), Int32)
references:
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.CSVExtensions.GetOptional*
  commentId: Overload:Microsoft.Health.CSVExtensions.GetOptional
  isExternal: false
  name: GetOptional
  nameWithType: CSVExtensions.GetOptional
  fullName: Microsoft.Health.CSVExtensions.GetOptional
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: Microsoft.Health.CSVExtensions.Get*
  commentId: Overload:Microsoft.Health.CSVExtensions.Get
  isExternal: false
  name: Get
  nameWithType: CSVExtensions.Get
  fullName: Microsoft.Health.CSVExtensions.Get
