### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Utility.Configurations.GlobalUrls
  commentId: T:Microsoft.Health.Utility.Configurations.GlobalUrls
  id: GlobalUrls
  parent: Microsoft.Health.Utility.Configurations
  children:
  - Microsoft.Health.Utility.Configurations.GlobalUrls.#ctor
  - Microsoft.Health.Utility.Configurations.GlobalUrls.#ctor(Microsoft.Health.Utility.Configurations.ConfigurationDictionary)
  - Microsoft.Health.Utility.Configurations.GlobalUrls.Acc
  - Microsoft.Health.Utility.Configurations.GlobalUrls.AccKey
  - Microsoft.Health.Utility.Configurations.GlobalUrls.CacheServerFailoverHandlers
  - Microsoft.Health.Utility.Configurations.GlobalUrls.CacheServerFailoverHandlersKey
  - Microsoft.Health.Utility.Configurations.GlobalUrls.CacheServerFailoverHandlerStrings
  - Microsoft.Health.Utility.Configurations.GlobalUrls.CacheServerHandlers
  - Microsoft.Health.Utility.Configurations.GlobalUrls.CacheServerHandlersKey
  - Microsoft.Health.Utility.Configurations.GlobalUrls.CacheServerHandlerStrings
  - Microsoft.Health.Utility.Configurations.GlobalUrls.Csr
  - Microsoft.Health.Utility.Configurations.GlobalUrls.CsrKey
  - Microsoft.Health.Utility.Configurations.GlobalUrls.HealthService
  - Microsoft.Health.Utility.Configurations.GlobalUrls.HealthServiceKey
  - Microsoft.Health.Utility.Configurations.GlobalUrls.HealthStatements
  - Microsoft.Health.Utility.Configurations.GlobalUrls.HealthStatementsKey
  - Microsoft.Health.Utility.Configurations.GlobalUrls.MessageCenter
  - Microsoft.Health.Utility.Configurations.GlobalUrls.MessageCenterKey
  - Microsoft.Health.Utility.Configurations.GlobalUrls.Reporting
  - Microsoft.Health.Utility.Configurations.GlobalUrls.ReportingKey
  - Microsoft.Health.Utility.Configurations.GlobalUrls.Shell
  - Microsoft.Health.Utility.Configurations.GlobalUrls.ShellKey
  langs:
  - csharp
  - vb
  name: GlobalUrls
  nameWithType: GlobalUrls
  fullName: Microsoft.Health.Utility.Configurations.GlobalUrls
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalUrls.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GlobalUrls
    path: ../Microsoft.Health.Utility/HVConfig/GlobalUrls.cs
    startLine: 16
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nProvides a set of keys for accessing HV global URL configs that are shared across multiple components.\nNote that this is to be used for core HV components that requires few global urls such as : Shell, HealthService, ACC, CacheServer and CacheServerFailOver\n"
  example: []
  syntax:
    content: >-
      [HVConfigurationClass("Global")]

      public class GlobalUrls
    content.vb: >-
      <HVConfigurationClass("Global")>

      Public Class GlobalUrls
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.Utility.Configurations.GlobalUrls.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  attributes:
  - type: Microsoft.Health.Utility.Configurations.HVConfigurationClassAttribute
    ctor: Microsoft.Health.Utility.Configurations.HVConfigurationClassAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Global
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.Utility.Configurations.GlobalUrls.AccKey
  commentId: F:Microsoft.Health.Utility.Configurations.GlobalUrls.AccKey
  id: AccKey
  parent: Microsoft.Health.Utility.Configurations.GlobalUrls
  langs:
  - csharp
  - vb
  name: AccKey
  nameWithType: GlobalUrls.AccKey
  fullName: Microsoft.Health.Utility.Configurations.GlobalUrls.AccKey
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalUrls.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AccKey
    path: ../Microsoft.Health.Utility/HVConfig/GlobalUrls.cs
    startLine: 24
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nKey to use to retrieve Acc URL = AccUrl\n"
  example: []
  syntax:
    content: public const string AccKey = "AccUrl"
    content.vb: Public Const AccKey As String = "AccUrl"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.Utility.Configurations.GlobalUrls.CacheServerHandlersKey
  commentId: F:Microsoft.Health.Utility.Configurations.GlobalUrls.CacheServerHandlersKey
  id: CacheServerHandlersKey
  parent: Microsoft.Health.Utility.Configurations.GlobalUrls
  langs:
  - csharp
  - vb
  name: CacheServerHandlersKey
  nameWithType: GlobalUrls.CacheServerHandlersKey
  fullName: Microsoft.Health.Utility.Configurations.GlobalUrls.CacheServerHandlersKey
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalUrls.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CacheServerHandlersKey
    path: ../Microsoft.Health.Utility/HVConfig/GlobalUrls.cs
    startLine: 29
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nKey to use to retrieve cache handler URLs = CacheServerHandlerUrls\n"
  example: []
  syntax:
    content: public const string CacheServerHandlersKey = "CacheServerHandlerUrls"
    content.vb: Public Const CacheServerHandlersKey As String = "CacheServerHandlerUrls"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.Utility.Configurations.GlobalUrls.CacheServerFailoverHandlersKey
  commentId: F:Microsoft.Health.Utility.Configurations.GlobalUrls.CacheServerFailoverHandlersKey
  id: CacheServerFailoverHandlersKey
  parent: Microsoft.Health.Utility.Configurations.GlobalUrls
  langs:
  - csharp
  - vb
  name: CacheServerFailoverHandlersKey
  nameWithType: GlobalUrls.CacheServerFailoverHandlersKey
  fullName: Microsoft.Health.Utility.Configurations.GlobalUrls.CacheServerFailoverHandlersKey
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalUrls.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CacheServerFailoverHandlersKey
    path: ../Microsoft.Health.Utility/HVConfig/GlobalUrls.cs
    startLine: 34
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nKey to use to retrieve cache failover handler URLs = CacheServerFailOverHandlerUrls\n"
  example: []
  syntax:
    content: public const string CacheServerFailoverHandlersKey = "CacheServerFailOverHandlerUrls"
    content.vb: Public Const CacheServerFailoverHandlersKey As String = "CacheServerFailOverHandlerUrls"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.Utility.Configurations.GlobalUrls.CsrKey
  commentId: F:Microsoft.Health.Utility.Configurations.GlobalUrls.CsrKey
  id: CsrKey
  parent: Microsoft.Health.Utility.Configurations.GlobalUrls
  langs:
  - csharp
  - vb
  name: CsrKey
  nameWithType: GlobalUrls.CsrKey
  fullName: Microsoft.Health.Utility.Configurations.GlobalUrls.CsrKey
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalUrls.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CsrKey
    path: ../Microsoft.Health.Utility/HVConfig/GlobalUrls.cs
    startLine: 39
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nKey to use to retrieve Csr URL = CsrUrl\n"
  example: []
  syntax:
    content: public const string CsrKey = "CsrUrl"
    content.vb: Public Const CsrKey As String = "CsrUrl"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.Utility.Configurations.GlobalUrls.HealthServiceKey
  commentId: F:Microsoft.Health.Utility.Configurations.GlobalUrls.HealthServiceKey
  id: HealthServiceKey
  parent: Microsoft.Health.Utility.Configurations.GlobalUrls
  langs:
  - csharp
  - vb
  name: HealthServiceKey
  nameWithType: GlobalUrls.HealthServiceKey
  fullName: Microsoft.Health.Utility.Configurations.GlobalUrls.HealthServiceKey
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalUrls.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: HealthServiceKey
    path: ../Microsoft.Health.Utility/HVConfig/GlobalUrls.cs
    startLine: 44
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nKey to use to retrieve Platform URL = HealthServiceUrl\n"
  example: []
  syntax:
    content: public const string HealthServiceKey = "HealthServiceUrl"
    content.vb: Public Const HealthServiceKey As String = "HealthServiceUrl"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.Utility.Configurations.GlobalUrls.HealthStatementsKey
  commentId: F:Microsoft.Health.Utility.Configurations.GlobalUrls.HealthStatementsKey
  id: HealthStatementsKey
  parent: Microsoft.Health.Utility.Configurations.GlobalUrls
  langs:
  - csharp
  - vb
  name: HealthStatementsKey
  nameWithType: GlobalUrls.HealthStatementsKey
  fullName: Microsoft.Health.Utility.Configurations.GlobalUrls.HealthStatementsKey
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalUrls.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: HealthStatementsKey
    path: ../Microsoft.Health.Utility/HVConfig/GlobalUrls.cs
    startLine: 49
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nKey to use to retrieve Health Statements URL = HealthStatementsUrl\n"
  example: []
  syntax:
    content: public const string HealthStatementsKey = "HealthStatementsUrl"
    content.vb: Public Const HealthStatementsKey As String = "HealthStatementsUrl"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.Utility.Configurations.GlobalUrls.MessageCenterKey
  commentId: F:Microsoft.Health.Utility.Configurations.GlobalUrls.MessageCenterKey
  id: MessageCenterKey
  parent: Microsoft.Health.Utility.Configurations.GlobalUrls
  langs:
  - csharp
  - vb
  name: MessageCenterKey
  nameWithType: GlobalUrls.MessageCenterKey
  fullName: Microsoft.Health.Utility.Configurations.GlobalUrls.MessageCenterKey
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalUrls.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: MessageCenterKey
    path: ../Microsoft.Health.Utility/HVConfig/GlobalUrls.cs
    startLine: 54
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nKey to use to retrieve Message Center URL = MessageCenterUrl\n"
  example: []
  syntax:
    content: public const string MessageCenterKey = "MessageCenterUrl"
    content.vb: Public Const MessageCenterKey As String = "MessageCenterUrl"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.Utility.Configurations.GlobalUrls.ShellKey
  commentId: F:Microsoft.Health.Utility.Configurations.GlobalUrls.ShellKey
  id: ShellKey
  parent: Microsoft.Health.Utility.Configurations.GlobalUrls
  langs:
  - csharp
  - vb
  name: ShellKey
  nameWithType: GlobalUrls.ShellKey
  fullName: Microsoft.Health.Utility.Configurations.GlobalUrls.ShellKey
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalUrls.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ShellKey
    path: ../Microsoft.Health.Utility/HVConfig/GlobalUrls.cs
    startLine: 59
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nKey to use to retrieve Shell URL = ShellUrl\n"
  example: []
  syntax:
    content: public const string ShellKey = "ShellUrl"
    content.vb: Public Const ShellKey As String = "ShellUrl"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.Utility.Configurations.GlobalUrls.ReportingKey
  commentId: F:Microsoft.Health.Utility.Configurations.GlobalUrls.ReportingKey
  id: ReportingKey
  parent: Microsoft.Health.Utility.Configurations.GlobalUrls
  langs:
  - csharp
  - vb
  name: ReportingKey
  nameWithType: GlobalUrls.ReportingKey
  fullName: Microsoft.Health.Utility.Configurations.GlobalUrls.ReportingKey
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalUrls.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ReportingKey
    path: ../Microsoft.Health.Utility/HVConfig/GlobalUrls.cs
    startLine: 64
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nKey to use to retrieve Reporting Service (SSRS) URL = ReportingUrl\n"
  example: []
  syntax:
    content: public const string ReportingKey = "ReportingUrl"
    content.vb: Public Const ReportingKey As String = "ReportingUrl"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.Utility.Configurations.GlobalUrls.#ctor
  commentId: M:Microsoft.Health.Utility.Configurations.GlobalUrls.#ctor
  id: '#ctor'
  parent: Microsoft.Health.Utility.Configurations.GlobalUrls
  langs:
  - csharp
  - vb
  name: GlobalUrls()
  nameWithType: GlobalUrls.GlobalUrls()
  fullName: Microsoft.Health.Utility.Configurations.GlobalUrls.GlobalUrls()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalUrls.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.Utility/HVConfig/GlobalUrls.cs
    startLine: 73
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nBasic constructor.\n"
  example: []
  syntax:
    content: public GlobalUrls()
    content.vb: Public Sub New
  overload: Microsoft.Health.Utility.Configurations.GlobalUrls.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Configurations.GlobalUrls.#ctor(Microsoft.Health.Utility.Configurations.ConfigurationDictionary)
  commentId: M:Microsoft.Health.Utility.Configurations.GlobalUrls.#ctor(Microsoft.Health.Utility.Configurations.ConfigurationDictionary)
  id: '#ctor(Microsoft.Health.Utility.Configurations.ConfigurationDictionary)'
  parent: Microsoft.Health.Utility.Configurations.GlobalUrls
  langs:
  - csharp
  - vb
  name: GlobalUrls(ConfigurationDictionary)
  nameWithType: GlobalUrls.GlobalUrls(ConfigurationDictionary)
  fullName: Microsoft.Health.Utility.Configurations.GlobalUrls.GlobalUrls(Microsoft.Health.Utility.Configurations.ConfigurationDictionary)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalUrls.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.Utility/HVConfig/GlobalUrls.cs
    startLine: 80
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nBasic constructor which requires non-null  configurationdictionary.\n"
  example: []
  syntax:
    content: public GlobalUrls(ConfigurationDictionary configurations)
    content.vb: Public Sub New(configurations As ConfigurationDictionary)
    parameters:
    - id: configurations
      type: Microsoft.Health.Utility.Configurations.ConfigurationDictionary
  overload: Microsoft.Health.Utility.Configurations.GlobalUrls.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Configurations.GlobalUrls.Acc
  commentId: P:Microsoft.Health.Utility.Configurations.GlobalUrls.Acc
  id: Acc
  parent: Microsoft.Health.Utility.Configurations.GlobalUrls
  langs:
  - csharp
  - vb
  name: Acc
  nameWithType: GlobalUrls.Acc
  fullName: Microsoft.Health.Utility.Configurations.GlobalUrls.Acc
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalUrls.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Acc
    path: ../Microsoft.Health.Utility/HVConfig/GlobalUrls.cs
    startLine: 97
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nAcc URL\n"
  example: []
  syntax:
    content: >-
      [Required]

      [HVConfiguration(ConfigurationKeyName = "AccUrl", Group = "Global URL", Description = "The URL for the ACC application.", Sample = "https://acc.domainName.com/")]

      public Uri Acc { get; set; }
    content.vb: >-
      <Required>

      <HVConfiguration(ConfigurationKeyName:="AccUrl", Group:="Global URL", Description:="The URL for the ACC application.", Sample:="https://acc.domainName.com/")>

      Public Property Acc As Uri
    parameters: []
    return:
      type: System.Uri
  overload: Microsoft.Health.Utility.Configurations.GlobalUrls.Acc*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: Microsoft.Health.Utility.Configurations.HVConfigurationAttribute
    ctor: Microsoft.Health.Utility.Configurations.HVConfigurationAttribute.#ctor
    arguments: []
    namedArguments:
    - name: ConfigurationKeyName
      type: System.String
      value: AccUrl
    - name: Group
      type: System.String
      value: Global URL
    - name: Description
      type: System.String
      value: The URL for the ACC application.
    - name: Sample
      type: System.String
      value: https://acc.domainName.com/
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Configurations.GlobalUrls.CacheServerHandlerStrings
  commentId: P:Microsoft.Health.Utility.Configurations.GlobalUrls.CacheServerHandlerStrings
  id: CacheServerHandlerStrings
  parent: Microsoft.Health.Utility.Configurations.GlobalUrls
  langs:
  - csharp
  - vb
  name: CacheServerHandlerStrings
  nameWithType: GlobalUrls.CacheServerHandlerStrings
  fullName: Microsoft.Health.Utility.Configurations.GlobalUrls.CacheServerHandlerStrings
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalUrls.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CacheServerHandlerStrings
    path: ../Microsoft.Health.Utility/HVConfig/GlobalUrls.cs
    startLine: 105
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  syntax:
    content: >-
      [Required]

      [HVConfiguration("CacheServerHandlerUrls", Group = "Global URL", Description = "A string collection of URLs for the Cache server handlers. Only required for first time deployment. When performing an upgrade, the installer uses the existing values from the database.", Sample = "<XmlSerializableCollection><string>https://cacheserver1/</string><string>https://cacheserver2/</string></XmlSerializableCollection>")]

      public XmlSerializableCollection<string> CacheServerHandlerStrings { get; set; }
    content.vb: >-
      <Required>

      <HVConfiguration("CacheServerHandlerUrls", Group:="Global URL", Description:="A string collection of URLs for the Cache server handlers. Only required for first time deployment. When performing an upgrade, the installer uses the existing values from the database.", Sample:="<XmlSerializableCollection><string>https://cacheserver1/</string><string>https://cacheserver2/</string></XmlSerializableCollection>")>

      Public Property CacheServerHandlerStrings As XmlSerializableCollection(Of String)
    parameters: []
    return:
      type: Microsoft.Health.Utility.Configurations.XmlSerializableCollection{System.String}
  overload: Microsoft.Health.Utility.Configurations.GlobalUrls.CacheServerHandlerStrings*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: Microsoft.Health.Utility.Configurations.HVConfigurationAttribute
    ctor: Microsoft.Health.Utility.Configurations.HVConfigurationAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: CacheServerHandlerUrls
    namedArguments:
    - name: Group
      type: System.String
      value: Global URL
    - name: Description
      type: System.String
      value: A string collection of URLs for the Cache server handlers. Only required for first time deployment. When performing an upgrade, the installer uses the existing values from the database.
    - name: Sample
      type: System.String
      value: <XmlSerializableCollection><string>https://cacheserver1/</string><string>https://cacheserver2/</string></XmlSerializableCollection>
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Configurations.GlobalUrls.CacheServerHandlers
  commentId: P:Microsoft.Health.Utility.Configurations.GlobalUrls.CacheServerHandlers
  id: CacheServerHandlers
  parent: Microsoft.Health.Utility.Configurations.GlobalUrls
  langs:
  - csharp
  - vb
  name: CacheServerHandlers
  nameWithType: GlobalUrls.CacheServerHandlers
  fullName: Microsoft.Health.Utility.Configurations.GlobalUrls.CacheServerHandlers
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalUrls.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CacheServerHandlers
    path: ../Microsoft.Health.Utility/HVConfig/GlobalUrls.cs
    startLine: 119
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nCache handler URLs\n"
  example: []
  syntax:
    content: >-
      [HVConfiguration("CacheServerHandlerUrls", false)]

      public Collection<Uri> CacheServerHandlers { get; set; }
    content.vb: >-
      <HVConfiguration("CacheServerHandlerUrls", False)>

      Public Property CacheServerHandlers As Collection(Of Uri)
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{System.Uri}
  overload: Microsoft.Health.Utility.Configurations.GlobalUrls.CacheServerHandlers*
  attributes:
  - type: Microsoft.Health.Utility.Configurations.HVConfigurationAttribute
    ctor: Microsoft.Health.Utility.Configurations.HVConfigurationAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: CacheServerHandlerUrls
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Configurations.GlobalUrls.CacheServerFailoverHandlerStrings
  commentId: P:Microsoft.Health.Utility.Configurations.GlobalUrls.CacheServerFailoverHandlerStrings
  id: CacheServerFailoverHandlerStrings
  parent: Microsoft.Health.Utility.Configurations.GlobalUrls
  langs:
  - csharp
  - vb
  name: CacheServerFailoverHandlerStrings
  nameWithType: GlobalUrls.CacheServerFailoverHandlerStrings
  fullName: Microsoft.Health.Utility.Configurations.GlobalUrls.CacheServerFailoverHandlerStrings
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalUrls.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CacheServerFailoverHandlerStrings
    path: ../Microsoft.Health.Utility/HVConfig/GlobalUrls.cs
    startLine: 122
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  syntax:
    content: >-
      [Required]

      [HVConfiguration("CacheServerFailOverHandlerUrls", Group = "Global URL", Description = "A string collection of URLs for the failover Cache server handlers. Only required for first time deployment. When performing an upgrade, the installer uses the existing values from the database.", Sample = "<XmlSerializableCollection><string>https://failovercacheserver1/</string><string>https://failovercacheserver2/</string></XmlSerializableCollection>")]

      public XmlSerializableCollection<string> CacheServerFailoverHandlerStrings { get; set; }
    content.vb: >-
      <Required>

      <HVConfiguration("CacheServerFailOverHandlerUrls", Group:="Global URL", Description:="A string collection of URLs for the failover Cache server handlers. Only required for first time deployment. When performing an upgrade, the installer uses the existing values from the database.", Sample:="<XmlSerializableCollection><string>https://failovercacheserver1/</string><string>https://failovercacheserver2/</string></XmlSerializableCollection>")>

      Public Property CacheServerFailoverHandlerStrings As XmlSerializableCollection(Of String)
    parameters: []
    return:
      type: Microsoft.Health.Utility.Configurations.XmlSerializableCollection{System.String}
  overload: Microsoft.Health.Utility.Configurations.GlobalUrls.CacheServerFailoverHandlerStrings*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: Microsoft.Health.Utility.Configurations.HVConfigurationAttribute
    ctor: Microsoft.Health.Utility.Configurations.HVConfigurationAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: CacheServerFailOverHandlerUrls
    namedArguments:
    - name: Group
      type: System.String
      value: Global URL
    - name: Description
      type: System.String
      value: A string collection of URLs for the failover Cache server handlers. Only required for first time deployment. When performing an upgrade, the installer uses the existing values from the database.
    - name: Sample
      type: System.String
      value: <XmlSerializableCollection><string>https://failovercacheserver1/</string><string>https://failovercacheserver2/</string></XmlSerializableCollection>
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Configurations.GlobalUrls.CacheServerFailoverHandlers
  commentId: P:Microsoft.Health.Utility.Configurations.GlobalUrls.CacheServerFailoverHandlers
  id: CacheServerFailoverHandlers
  parent: Microsoft.Health.Utility.Configurations.GlobalUrls
  langs:
  - csharp
  - vb
  name: CacheServerFailoverHandlers
  nameWithType: GlobalUrls.CacheServerFailoverHandlers
  fullName: Microsoft.Health.Utility.Configurations.GlobalUrls.CacheServerFailoverHandlers
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalUrls.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CacheServerFailoverHandlers
    path: ../Microsoft.Health.Utility/HVConfig/GlobalUrls.cs
    startLine: 135
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nCache failover handler URLs\n"
  example: []
  syntax:
    content: >-
      [HVConfiguration("CacheServerFailOverHandlerUrls", false)]

      public Collection<Uri> CacheServerFailoverHandlers { get; set; }
    content.vb: >-
      <HVConfiguration("CacheServerFailOverHandlerUrls", False)>

      Public Property CacheServerFailoverHandlers As Collection(Of Uri)
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{System.Uri}
  overload: Microsoft.Health.Utility.Configurations.GlobalUrls.CacheServerFailoverHandlers*
  attributes:
  - type: Microsoft.Health.Utility.Configurations.HVConfigurationAttribute
    ctor: Microsoft.Health.Utility.Configurations.HVConfigurationAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: CacheServerFailOverHandlerUrls
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Configurations.GlobalUrls.Csr
  commentId: P:Microsoft.Health.Utility.Configurations.GlobalUrls.Csr
  id: Csr
  parent: Microsoft.Health.Utility.Configurations.GlobalUrls
  langs:
  - csharp
  - vb
  name: Csr
  nameWithType: GlobalUrls.Csr
  fullName: Microsoft.Health.Utility.Configurations.GlobalUrls.Csr
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalUrls.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Csr
    path: ../Microsoft.Health.Utility/HVConfig/GlobalUrls.cs
    startLine: 141
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nCsr URL\n"
  example: []
  syntax:
    content: >-
      [HVConfiguration(ConfigurationKeyName = "CsrUrl", Group = "Global URL", Description = "The URL for the CSR application.", Sample = "https://csr.domainName.com/")]

      public Uri Csr { get; set; }
    content.vb: >-
      <HVConfiguration(ConfigurationKeyName:="CsrUrl", Group:="Global URL", Description:="The URL for the CSR application.", Sample:="https://csr.domainName.com/")>

      Public Property Csr As Uri
    parameters: []
    return:
      type: System.Uri
  overload: Microsoft.Health.Utility.Configurations.GlobalUrls.Csr*
  attributes:
  - type: Microsoft.Health.Utility.Configurations.HVConfigurationAttribute
    ctor: Microsoft.Health.Utility.Configurations.HVConfigurationAttribute.#ctor
    arguments: []
    namedArguments:
    - name: ConfigurationKeyName
      type: System.String
      value: CsrUrl
    - name: Group
      type: System.String
      value: Global URL
    - name: Description
      type: System.String
      value: The URL for the CSR application.
    - name: Sample
      type: System.String
      value: https://csr.domainName.com/
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Configurations.GlobalUrls.HealthService
  commentId: P:Microsoft.Health.Utility.Configurations.GlobalUrls.HealthService
  id: HealthService
  parent: Microsoft.Health.Utility.Configurations.GlobalUrls
  langs:
  - csharp
  - vb
  name: HealthService
  nameWithType: GlobalUrls.HealthService
  fullName: Microsoft.Health.Utility.Configurations.GlobalUrls.HealthService
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalUrls.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: HealthService
    path: ../Microsoft.Health.Utility/HVConfig/GlobalUrls.cs
    startLine: 151
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nHealthService URL\n"
  example: []
  syntax:
    content: >-
      [Required]

      [HVConfiguration(ConfigurationKeyName = "HealthServiceUrl", Group = "Global URL", Description = "The Platform service URL for the environment.", Sample = "https://platform.domainName.com/platform/")]

      public Uri HealthService { get; set; }
    content.vb: >-
      <Required>

      <HVConfiguration(ConfigurationKeyName:="HealthServiceUrl", Group:="Global URL", Description:="The Platform service URL for the environment.", Sample:="https://platform.domainName.com/platform/")>

      Public Property HealthService As Uri
    parameters: []
    return:
      type: System.Uri
  overload: Microsoft.Health.Utility.Configurations.GlobalUrls.HealthService*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: Microsoft.Health.Utility.Configurations.HVConfigurationAttribute
    ctor: Microsoft.Health.Utility.Configurations.HVConfigurationAttribute.#ctor
    arguments: []
    namedArguments:
    - name: ConfigurationKeyName
      type: System.String
      value: HealthServiceUrl
    - name: Group
      type: System.String
      value: Global URL
    - name: Description
      type: System.String
      value: The Platform service URL for the environment.
    - name: Sample
      type: System.String
      value: https://platform.domainName.com/platform/
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Configurations.GlobalUrls.HealthStatements
  commentId: P:Microsoft.Health.Utility.Configurations.GlobalUrls.HealthStatements
  id: HealthStatements
  parent: Microsoft.Health.Utility.Configurations.GlobalUrls
  langs:
  - csharp
  - vb
  name: HealthStatements
  nameWithType: GlobalUrls.HealthStatements
  fullName: Microsoft.Health.Utility.Configurations.GlobalUrls.HealthStatements
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalUrls.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: HealthStatements
    path: ../Microsoft.Health.Utility/HVConfig/GlobalUrls.cs
    startLine: 162
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nHealth Statements URL\n"
  example: []
  syntax:
    content: >-
      [HVConfiguration(ConfigurationKeyName = "HealthStatementsUrl", DocumentType = DocumentationType.Public, Group = "Global URL", Description = "The backend URL for the health statements application.")]

      public Uri HealthStatements { get; set; }
    content.vb: >-
      <HVConfiguration(ConfigurationKeyName:="HealthStatementsUrl", DocumentType:=DocumentationType.Public, Group:="Global URL", Description:="The backend URL for the health statements application.")>

      Public Property HealthStatements As Uri
    parameters: []
    return:
      type: System.Uri
  overload: Microsoft.Health.Utility.Configurations.GlobalUrls.HealthStatements*
  attributes:
  - type: Microsoft.Health.Utility.Configurations.HVConfigurationAttribute
    ctor: Microsoft.Health.Utility.Configurations.HVConfigurationAttribute.#ctor
    arguments: []
    namedArguments:
    - name: ConfigurationKeyName
      type: System.String
      value: HealthStatementsUrl
    - name: DocumentType
      type: Microsoft.Health.Utility.Configurations.DocumentationType
      value: 0
    - name: Group
      type: System.String
      value: Global URL
    - name: Description
      type: System.String
      value: The backend URL for the health statements application.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Configurations.GlobalUrls.MessageCenter
  commentId: P:Microsoft.Health.Utility.Configurations.GlobalUrls.MessageCenter
  id: MessageCenter
  parent: Microsoft.Health.Utility.Configurations.GlobalUrls
  langs:
  - csharp
  - vb
  name: MessageCenter
  nameWithType: GlobalUrls.MessageCenter
  fullName: Microsoft.Health.Utility.Configurations.GlobalUrls.MessageCenter
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalUrls.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: MessageCenter
    path: ../Microsoft.Health.Utility/HVConfig/GlobalUrls.cs
    startLine: 172
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nMessage Center URL\n"
  example: []
  syntax:
    content: >-
      [HVConfiguration(ConfigurationKeyName = "MessageCenterUrl", Group = "Global URL", Description = "The URL for the Message Center application.")]

      public Uri MessageCenter { get; set; }
    content.vb: >-
      <HVConfiguration(ConfigurationKeyName:="MessageCenterUrl", Group:="Global URL", Description:="The URL for the Message Center application.")>

      Public Property MessageCenter As Uri
    parameters: []
    return:
      type: System.Uri
  overload: Microsoft.Health.Utility.Configurations.GlobalUrls.MessageCenter*
  attributes:
  - type: Microsoft.Health.Utility.Configurations.HVConfigurationAttribute
    ctor: Microsoft.Health.Utility.Configurations.HVConfigurationAttribute.#ctor
    arguments: []
    namedArguments:
    - name: ConfigurationKeyName
      type: System.String
      value: MessageCenterUrl
    - name: Group
      type: System.String
      value: Global URL
    - name: Description
      type: System.String
      value: The URL for the Message Center application.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Configurations.GlobalUrls.Shell
  commentId: P:Microsoft.Health.Utility.Configurations.GlobalUrls.Shell
  id: Shell
  parent: Microsoft.Health.Utility.Configurations.GlobalUrls
  langs:
  - csharp
  - vb
  name: Shell
  nameWithType: GlobalUrls.Shell
  fullName: Microsoft.Health.Utility.Configurations.GlobalUrls.Shell
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalUrls.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Shell
    path: ../Microsoft.Health.Utility/HVConfig/GlobalUrls.cs
    startLine: 181
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nShell URL\n"
  example: []
  syntax:
    content: >-
      [Required]

      [HVConfiguration(ConfigurationKeyName = "ShellUrl", Group = "Global URL", Description = "The URL for the Shell application.", Sample = "https://shell.domainName.com/")]

      public Uri Shell { get; set; }
    content.vb: >-
      <Required>

      <HVConfiguration(ConfigurationKeyName:="ShellUrl", Group:="Global URL", Description:="The URL for the Shell application.", Sample:="https://shell.domainName.com/")>

      Public Property Shell As Uri
    parameters: []
    return:
      type: System.Uri
  overload: Microsoft.Health.Utility.Configurations.GlobalUrls.Shell*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: Microsoft.Health.Utility.Configurations.HVConfigurationAttribute
    ctor: Microsoft.Health.Utility.Configurations.HVConfigurationAttribute.#ctor
    arguments: []
    namedArguments:
    - name: ConfigurationKeyName
      type: System.String
      value: ShellUrl
    - name: Group
      type: System.String
      value: Global URL
    - name: Description
      type: System.String
      value: The URL for the Shell application.
    - name: Sample
      type: System.String
      value: https://shell.domainName.com/
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Configurations.GlobalUrls.Reporting
  commentId: P:Microsoft.Health.Utility.Configurations.GlobalUrls.Reporting
  id: Reporting
  parent: Microsoft.Health.Utility.Configurations.GlobalUrls
  langs:
  - csharp
  - vb
  name: Reporting
  nameWithType: GlobalUrls.Reporting
  fullName: Microsoft.Health.Utility.Configurations.GlobalUrls.Reporting
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalUrls.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Reporting
    path: ../Microsoft.Health.Utility/HVConfig/GlobalUrls.cs
    startLine: 192
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nReporting (SSRS) URL\n"
  example: []
  syntax:
    content: >-
      [HVConfiguration(ConfigurationKeyName = "ReportingUrl", DocumentType = DocumentationType.Private, Group = "Global URL", Description = "The URL of the reporting server, which is the URL of the SQL Server Reporting Services (SSRS) server. When an error or warning condition is detected, the associated Windows Event Log entry links to the report on the reporting server.")]

      public Uri Reporting { get; set; }
    content.vb: >-
      <HVConfiguration(ConfigurationKeyName:="ReportingUrl", DocumentType:=DocumentationType.Private, Group:="Global URL", Description:="The URL of the reporting server, which is the URL of the SQL Server Reporting Services (SSRS) server. When an error or warning condition is detected, the associated Windows Event Log entry links to the report on the reporting server.")>

      Public Property Reporting As Uri
    parameters: []
    return:
      type: System.Uri
  overload: Microsoft.Health.Utility.Configurations.GlobalUrls.Reporting*
  attributes:
  - type: Microsoft.Health.Utility.Configurations.HVConfigurationAttribute
    ctor: Microsoft.Health.Utility.Configurations.HVConfigurationAttribute.#ctor
    arguments: []
    namedArguments:
    - name: ConfigurationKeyName
      type: System.String
      value: ReportingUrl
    - name: DocumentType
      type: Microsoft.Health.Utility.Configurations.DocumentationType
      value: 2
    - name: Group
      type: System.String
      value: Global URL
    - name: Description
      type: System.String
      value: The URL of the reporting server, which is the URL of the SQL Server Reporting Services (SSRS) server. When an error or warning condition is detected, the associated Windows Event Log entry links to the report on the reporting server.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Health.Utility.Configurations
  commentId: N:Microsoft.Health.Utility.Configurations
  isExternal: false
  name: Microsoft.Health.Utility.Configurations
  nameWithType: Microsoft.Health.Utility.Configurations
  fullName: Microsoft.Health.Utility.Configurations
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Configurations.GlobalUrls.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<GlobalUrls>()
  nameWithType: TypeHelper.ValueOrDbNull<GlobalUrls>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Utility.Configurations.GlobalUrls>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of GlobalUrls)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Utility.Configurations.GlobalUrls)()
  name.vb: ValueOrDbNull(Of GlobalUrls)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<GlobalUrls>
    nameWithType: TypeHelper.ValueOrDbNull<GlobalUrls>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Utility.Configurations.GlobalUrls>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of GlobalUrls)
    nameWithType: TypeHelper.ValueOrDbNull(Of GlobalUrls)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Utility.Configurations.GlobalUrls)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.Utility.Configurations.GlobalUrls.#ctor*
  commentId: Overload:Microsoft.Health.Utility.Configurations.GlobalUrls.#ctor
  isExternal: false
  name: GlobalUrls
  nameWithType: GlobalUrls.GlobalUrls
  fullName: Microsoft.Health.Utility.Configurations.GlobalUrls.GlobalUrls
- uid: Microsoft.Health.Utility.Configurations.ConfigurationDictionary
  commentId: T:Microsoft.Health.Utility.Configurations.ConfigurationDictionary
  parent: Microsoft.Health.Utility.Configurations
  isExternal: false
  name: ConfigurationDictionary
  nameWithType: ConfigurationDictionary
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationDictionary
- uid: Microsoft.Health.Utility.Configurations.GlobalUrls.Acc*
  commentId: Overload:Microsoft.Health.Utility.Configurations.GlobalUrls.Acc
  isExternal: false
  name: Acc
  nameWithType: GlobalUrls.Acc
  fullName: Microsoft.Health.Utility.Configurations.GlobalUrls.Acc
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Microsoft.Health.Utility.Configurations.GlobalUrls.CacheServerHandlerStrings*
  commentId: Overload:Microsoft.Health.Utility.Configurations.GlobalUrls.CacheServerHandlerStrings
  isExternal: false
  name: CacheServerHandlerStrings
  nameWithType: GlobalUrls.CacheServerHandlerStrings
  fullName: Microsoft.Health.Utility.Configurations.GlobalUrls.CacheServerHandlerStrings
- uid: Microsoft.Health.Utility.Configurations.XmlSerializableCollection{System.String}
  commentId: T:Microsoft.Health.Utility.Configurations.XmlSerializableCollection{System.String}
  parent: Microsoft.Health.Utility.Configurations
  definition: Microsoft.Health.Utility.Configurations.XmlSerializableCollection`1
  name: XmlSerializableCollection<String>
  nameWithType: XmlSerializableCollection<String>
  fullName: Microsoft.Health.Utility.Configurations.XmlSerializableCollection<System.String>
  nameWithType.vb: XmlSerializableCollection(Of String)
  fullName.vb: Microsoft.Health.Utility.Configurations.XmlSerializableCollection(Of System.String)
  name.vb: XmlSerializableCollection(Of String)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Configurations.XmlSerializableCollection`1
    name: XmlSerializableCollection
    nameWithType: XmlSerializableCollection
    fullName: Microsoft.Health.Utility.Configurations.XmlSerializableCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.Utility.Configurations.XmlSerializableCollection`1
    name: XmlSerializableCollection
    nameWithType: XmlSerializableCollection
    fullName: Microsoft.Health.Utility.Configurations.XmlSerializableCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Configurations.XmlSerializableCollection`1
  commentId: T:Microsoft.Health.Utility.Configurations.XmlSerializableCollection`1
  isExternal: false
  name: XmlSerializableCollection<T>
  nameWithType: XmlSerializableCollection<T>
  fullName: Microsoft.Health.Utility.Configurations.XmlSerializableCollection<T>
  nameWithType.vb: XmlSerializableCollection(Of T)
  fullName.vb: Microsoft.Health.Utility.Configurations.XmlSerializableCollection(Of T)
  name.vb: XmlSerializableCollection(Of T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Configurations.XmlSerializableCollection`1
    name: XmlSerializableCollection
    nameWithType: XmlSerializableCollection
    fullName: Microsoft.Health.Utility.Configurations.XmlSerializableCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.Utility.Configurations.XmlSerializableCollection`1
    name: XmlSerializableCollection
    nameWithType: XmlSerializableCollection
    fullName: Microsoft.Health.Utility.Configurations.XmlSerializableCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Configurations.GlobalUrls.CacheServerHandlers*
  commentId: Overload:Microsoft.Health.Utility.Configurations.GlobalUrls.CacheServerHandlers
  isExternal: false
  name: CacheServerHandlers
  nameWithType: GlobalUrls.CacheServerHandlers
  fullName: Microsoft.Health.Utility.Configurations.GlobalUrls.CacheServerHandlers
- uid: System.Collections.ObjectModel.Collection{System.Uri}
  commentId: T:System.Collections.ObjectModel.Collection{System.Uri}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<Uri>
  nameWithType: Collection<Uri>
  fullName: System.Collections.ObjectModel.Collection<System.Uri>
  nameWithType.vb: Collection(Of Uri)
  fullName.vb: System.Collections.ObjectModel.Collection(Of System.Uri)
  name.vb: Collection(Of Uri)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1
  commentId: T:System.Collections.ObjectModel.Collection`1
  isExternal: true
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  nameWithType.vb: Collection(Of T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T)
  name.vb: Collection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: Microsoft.Health.Utility.Configurations.GlobalUrls.CacheServerFailoverHandlerStrings*
  commentId: Overload:Microsoft.Health.Utility.Configurations.GlobalUrls.CacheServerFailoverHandlerStrings
  isExternal: false
  name: CacheServerFailoverHandlerStrings
  nameWithType: GlobalUrls.CacheServerFailoverHandlerStrings
  fullName: Microsoft.Health.Utility.Configurations.GlobalUrls.CacheServerFailoverHandlerStrings
- uid: Microsoft.Health.Utility.Configurations.GlobalUrls.CacheServerFailoverHandlers*
  commentId: Overload:Microsoft.Health.Utility.Configurations.GlobalUrls.CacheServerFailoverHandlers
  isExternal: false
  name: CacheServerFailoverHandlers
  nameWithType: GlobalUrls.CacheServerFailoverHandlers
  fullName: Microsoft.Health.Utility.Configurations.GlobalUrls.CacheServerFailoverHandlers
- uid: Microsoft.Health.Utility.Configurations.GlobalUrls.Csr*
  commentId: Overload:Microsoft.Health.Utility.Configurations.GlobalUrls.Csr
  isExternal: false
  name: Csr
  nameWithType: GlobalUrls.Csr
  fullName: Microsoft.Health.Utility.Configurations.GlobalUrls.Csr
- uid: Microsoft.Health.Utility.Configurations.GlobalUrls.HealthService*
  commentId: Overload:Microsoft.Health.Utility.Configurations.GlobalUrls.HealthService
  isExternal: false
  name: HealthService
  nameWithType: GlobalUrls.HealthService
  fullName: Microsoft.Health.Utility.Configurations.GlobalUrls.HealthService
- uid: Microsoft.Health.Utility.Configurations.GlobalUrls.HealthStatements*
  commentId: Overload:Microsoft.Health.Utility.Configurations.GlobalUrls.HealthStatements
  isExternal: false
  name: HealthStatements
  nameWithType: GlobalUrls.HealthStatements
  fullName: Microsoft.Health.Utility.Configurations.GlobalUrls.HealthStatements
- uid: Microsoft.Health.Utility.Configurations.GlobalUrls.MessageCenter*
  commentId: Overload:Microsoft.Health.Utility.Configurations.GlobalUrls.MessageCenter
  isExternal: false
  name: MessageCenter
  nameWithType: GlobalUrls.MessageCenter
  fullName: Microsoft.Health.Utility.Configurations.GlobalUrls.MessageCenter
- uid: Microsoft.Health.Utility.Configurations.GlobalUrls.Shell*
  commentId: Overload:Microsoft.Health.Utility.Configurations.GlobalUrls.Shell
  isExternal: false
  name: Shell
  nameWithType: GlobalUrls.Shell
  fullName: Microsoft.Health.Utility.Configurations.GlobalUrls.Shell
- uid: Microsoft.Health.Utility.Configurations.GlobalUrls.Reporting*
  commentId: Overload:Microsoft.Health.Utility.Configurations.GlobalUrls.Reporting
  isExternal: false
  name: Reporting
  nameWithType: GlobalUrls.Reporting
  fullName: Microsoft.Health.Utility.Configurations.GlobalUrls.Reporting
