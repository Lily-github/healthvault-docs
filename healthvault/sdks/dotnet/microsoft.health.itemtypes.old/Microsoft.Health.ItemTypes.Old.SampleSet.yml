### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.ItemTypes.Old.SampleSet
  commentId: T:Microsoft.Health.ItemTypes.Old.SampleSet
  id: SampleSet
  parent: Microsoft.Health.ItemTypes.Old
  children:
  - Microsoft.Health.ItemTypes.Old.SampleSet.#ctor
  - Microsoft.Health.ItemTypes.Old.SampleSet.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime)
  - Microsoft.Health.ItemTypes.Old.SampleSet.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime,System.String,Microsoft.Health.ItemTypes.CodableValue)
  - Microsoft.Health.ItemTypes.Old.SampleSet.BaseTime
  - Microsoft.Health.ItemTypes.Old.SampleSet.ParseXml(System.Xml.XPath.XPathNavigator)
  - Microsoft.Health.ItemTypes.Old.SampleSet.Samples
  - Microsoft.Health.ItemTypes.Old.SampleSet.SampleUnit
  - Microsoft.Health.ItemTypes.Old.SampleSet.SampleUnitCode
  - Microsoft.Health.ItemTypes.Old.SampleSet.WriteXml(System.String,System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: SampleSet
  nameWithType: SampleSet
  fullName: Microsoft.Health.ItemTypes.Old.SampleSet
  type: Class
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/SampleSet.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SampleSet
    path: SampleSet.cs
    startLine: 24
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nRepresents a set of samples within a larger activity or reading.\n"
  remarks: "\nAn example of a sample set is a set of heart rate readings during an \naerobic activity.\n"
  example: []
  syntax:
    content: 'public class SampleSet : HealthRecordItemData'
    content.vb: >-
      Public Class SampleSet
          Inherits HealthRecordItemData
  inheritance:
  - System.Object
  - Microsoft.Health.ItemTypes.HealthRecordItemData
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.ItemTypes.Old.SampleSet.#ctor
  commentId: M:Microsoft.Health.ItemTypes.Old.SampleSet.#ctor
  id: '#ctor'
  parent: Microsoft.Health.ItemTypes.Old.SampleSet
  langs:
  - csharp
  - vb
  name: SampleSet()
  nameWithType: SampleSet.SampleSet()
  fullName: Microsoft.Health.ItemTypes.Old.SampleSet.SampleSet()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/SampleSet.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: SampleSet.cs
    startLine: 30
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.Old.SampleSet\" data-throw-if-not-resolved=\"false\"></xref> class with no value.\n"
  example: []
  syntax:
    content: public SampleSet()
    content.vb: Public Sub New
  overload: Microsoft.Health.ItemTypes.Old.SampleSet.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.SampleSet.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime)
  commentId: M:Microsoft.Health.ItemTypes.Old.SampleSet.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime)
  id: '#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime)'
  parent: Microsoft.Health.ItemTypes.Old.SampleSet
  langs:
  - csharp
  - vb
  name: SampleSet(HealthServiceDateTime)
  nameWithType: SampleSet.SampleSet(HealthServiceDateTime)
  fullName: Microsoft.Health.ItemTypes.Old.SampleSet.SampleSet(Microsoft.Health.ItemTypes.HealthServiceDateTime)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/SampleSet.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: SampleSet.cs
    startLine: 47
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.Old.SampleSet\" data-throw-if-not-resolved=\"false\"></xref> class with \nthe specified start time for the set.\n"
  example: []
  syntax:
    content: public SampleSet(HealthServiceDateTime baseTime)
    content.vb: Public Sub New(baseTime As HealthServiceDateTime)
    parameters:
    - id: baseTime
      type: Microsoft.Health.ItemTypes.HealthServiceDateTime
      description: "\nThe time when the samples in the set started.\n"
  overload: Microsoft.Health.ItemTypes.Old.SampleSet.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">baseTime</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.SampleSet.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime,System.String,Microsoft.Health.ItemTypes.CodableValue)
  commentId: M:Microsoft.Health.ItemTypes.Old.SampleSet.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime,System.String,Microsoft.Health.ItemTypes.CodableValue)
  id: '#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime,System.String,Microsoft.Health.ItemTypes.CodableValue)'
  parent: Microsoft.Health.ItemTypes.Old.SampleSet
  langs:
  - csharp
  - vb
  name: SampleSet(HealthServiceDateTime, String, CodableValue)
  nameWithType: SampleSet.SampleSet(HealthServiceDateTime, String, CodableValue)
  fullName: Microsoft.Health.ItemTypes.Old.SampleSet.SampleSet(Microsoft.Health.ItemTypes.HealthServiceDateTime, System.String, Microsoft.Health.ItemTypes.CodableValue)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/SampleSet.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: SampleSet.cs
    startLine: 79
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.Old.SampleSet\" data-throw-if-not-resolved=\"false\"></xref> class with \nthe specified start time for the set.\n"
  example: []
  syntax:
    content: public SampleSet(HealthServiceDateTime baseTime, string sampleUnit, CodableValue sampleUnitCode)
    content.vb: Public Sub New(baseTime As HealthServiceDateTime, sampleUnit As String, sampleUnitCode As CodableValue)
    parameters:
    - id: baseTime
      type: Microsoft.Health.ItemTypes.HealthServiceDateTime
      description: "\nThe time when the samples in the set started.\n"
    - id: sampleUnit
      type: System.String
      description: "\nText description of the unit of measure for the sample\nvalues in this set.\n"
    - id: sampleUnitCode
      type: Microsoft.Health.ItemTypes.CodableValue
      description: "\nVocabulary code for the unit of measure for the sample\nvalues in this set.\n"
  overload: Microsoft.Health.ItemTypes.Old.SampleSet.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">baseTime</span> or <span class=\"paramref\">sampleUnitCode</span> parameter is <strong>null</strong>.\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">sampleUnit</span> parameter is <strong>null</strong> or empty.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.SampleSet.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.Old.SampleSet.ParseXml(System.Xml.XPath.XPathNavigator)
  id: ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.Old.SampleSet
  langs:
  - csharp
  - vb
  name: ParseXml(XPathNavigator)
  nameWithType: SampleSet.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.Old.SampleSet.ParseXml(System.Xml.XPath.XPathNavigator)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/SampleSet.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ParseXml
    path: SampleSet.cs
    startLine: 101
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nPopulates the data for the sample set from the XML.\n"
  example: []
  syntax:
    content: public override void ParseXml(XPathNavigator navigator)
    content.vb: Public Overrides Sub ParseXml(navigator As XPathNavigator)
    parameters:
    - id: navigator
      type: System.Xml.XPath.XPathNavigator
      description: "\nThe XML node representing the sample set.\n"
  overridden: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  overload: Microsoft.Health.ItemTypes.Old.SampleSet.ParseXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">navigator</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.Old.SampleSet.WriteXml(System.String,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.Old.SampleSet.WriteXml(System.String,System.Xml.XmlWriter)
  id: WriteXml(System.String,System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.Old.SampleSet
  langs:
  - csharp
  - vb
  name: WriteXml(String, XmlWriter)
  nameWithType: SampleSet.WriteXml(String, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.Old.SampleSet.WriteXml(System.String, System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/SampleSet.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteXml
    path: SampleSet.cs
    startLine: 173
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nWrites the sample set to the specified XML writer.\n"
  example: []
  syntax:
    content: public override void WriteXml(string nodeName, XmlWriter writer)
    content.vb: Public Overrides Sub WriteXml(nodeName As String, writer As XmlWriter)
    parameters:
    - id: nodeName
      type: System.String
      description: "\nThe name of the outer element for the sample set.\n"
    - id: writer
      type: System.Xml.XmlWriter
      description: "\nThe XmlWriter to write the sample set to.\n"
  overridden: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  overload: Microsoft.Health.ItemTypes.Old.SampleSet.WriteXml*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">nodeName</span> parameter is <strong>null</strong> or empty.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">writer</span> parameter is <strong>null</strong>.\n"
  - type: Microsoft.Health.HealthRecordItemSerializationException
    commentId: T:Microsoft.Health.HealthRecordItemSerializationException
    description: "\nThe <xref href=\"Microsoft.Health.ItemTypes.Old.SampleSet.BaseTime\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Microsoft.Health.ItemTypes.Old.SampleSet.SampleUnit\" data-throw-if-not-resolved=\"false\"></xref>, or <xref href=\"Microsoft.Health.ItemTypes.Old.SampleSet.SampleUnitCode\" data-throw-if-not-resolved=\"false\"></xref> \nproperty has not been set.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.Old.SampleSet.BaseTime
  commentId: P:Microsoft.Health.ItemTypes.Old.SampleSet.BaseTime
  id: BaseTime
  parent: Microsoft.Health.ItemTypes.Old.SampleSet
  langs:
  - csharp
  - vb
  name: BaseTime
  nameWithType: SampleSet.BaseTime
  fullName: Microsoft.Health.ItemTypes.Old.SampleSet.BaseTime
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/SampleSet.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: BaseTime
    path: SampleSet.cs
    startLine: 219
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets or sets the time when the sample set started recording samples.\n"
  example: []
  syntax:
    content: public HealthServiceDateTime BaseTime { get; set; }
    content.vb: Public Property BaseTime As HealthServiceDateTime
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.HealthServiceDateTime
      description: "\nA <xref href=\"Microsoft.Health.ItemTypes.HealthServiceDateTime\" data-throw-if-not-resolved=\"false\"></xref> representing the starting \ntime for sample recording.\n"
  overload: Microsoft.Health.ItemTypes.Old.SampleSet.BaseTime*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">value</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.SampleSet.SampleUnit
  commentId: P:Microsoft.Health.ItemTypes.Old.SampleSet.SampleUnit
  id: SampleUnit
  parent: Microsoft.Health.ItemTypes.Old.SampleSet
  langs:
  - csharp
  - vb
  name: SampleUnit
  nameWithType: SampleSet.SampleUnit
  fullName: Microsoft.Health.ItemTypes.Old.SampleSet.SampleUnit
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/SampleSet.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SampleUnit
    path: SampleSet.cs
    startLine: 247
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets a text description of the unit of measure for the sample\nvalues in this set.\n"
  example: []
  syntax:
    content: public string SampleUnit { get; set; }
    content.vb: Public Property SampleUnit As String
    parameters: []
    return:
      type: System.String
      description: "\nA string representing the description.\n"
  overload: Microsoft.Health.ItemTypes.Old.SampleSet.SampleUnit*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">value</span> parameter is <strong>null</strong>, empty, or contains only whitespace.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.SampleSet.SampleUnitCode
  commentId: P:Microsoft.Health.ItemTypes.Old.SampleSet.SampleUnitCode
  id: SampleUnitCode
  parent: Microsoft.Health.ItemTypes.Old.SampleSet
  langs:
  - csharp
  - vb
  name: SampleUnitCode
  nameWithType: SampleSet.SampleUnitCode
  fullName: Microsoft.Health.ItemTypes.Old.SampleSet.SampleUnitCode
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/SampleSet.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SampleUnitCode
    path: SampleSet.cs
    startLine: 277
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets the vocabulary code for the unit of measure for the sample\nvalues in this set.\n"
  example: []
  syntax:
    content: public CodableValue SampleUnitCode { get; set; }
    content.vb: Public Property SampleUnitCode As CodableValue
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.CodableValue
      description: "\nA <xref href=\"Microsoft.Health.ItemTypes.CodableValue\" data-throw-if-not-resolved=\"false\"></xref> representing the vocabulary \ncode.\n"
  overload: Microsoft.Health.ItemTypes.Old.SampleSet.SampleUnitCode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">value</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.SampleSet.Samples
  commentId: P:Microsoft.Health.ItemTypes.Old.SampleSet.Samples
  id: Samples
  parent: Microsoft.Health.ItemTypes.Old.SampleSet
  langs:
  - csharp
  - vb
  name: Samples
  nameWithType: SampleSet.Samples
  fullName: Microsoft.Health.ItemTypes.Old.SampleSet.Samples
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/SampleSet.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Samples
    path: SampleSet.cs
    startLine: 300
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets a collection containing the samples in the set.\n"
  example: []
  syntax:
    content: public Collection<Sample> Samples { get; }
    content.vb: Public ReadOnly Property Samples As Collection(Of Sample)
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{Microsoft.Health.ItemTypes.Old.Sample}
      description: "\nA collection of samples.\n"
  overload: Microsoft.Health.ItemTypes.Old.SampleSet.Samples*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Health.ItemTypes.Old
  commentId: N:Microsoft.Health.ItemTypes.Old
  isExternal: false
  name: Microsoft.Health.ItemTypes.Old
  nameWithType: Microsoft.Health.ItemTypes.Old
  fullName: Microsoft.Health.ItemTypes.Old
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData
  commentId: T:Microsoft.Health.ItemTypes.HealthRecordItemData
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: HealthRecordItemData
  nameWithType: HealthRecordItemData
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.ItemTypes
  commentId: N:Microsoft.Health.ItemTypes
  isExternal: false
  name: Microsoft.Health.ItemTypes
  nameWithType: Microsoft.Health.ItemTypes
  fullName: Microsoft.Health.ItemTypes
- uid: Microsoft.Health.ItemTypes.Old.SampleSet
  commentId: T:Microsoft.Health.ItemTypes.Old.SampleSet
  parent: Microsoft.Health.ItemTypes.Old
  isExternal: false
  name: SampleSet
  nameWithType: SampleSet
  fullName: Microsoft.Health.ItemTypes.Old.SampleSet
- uid: Microsoft.Health.ItemTypes.Old.SampleSet.#ctor*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.SampleSet.#ctor
  isExternal: false
  name: SampleSet
  nameWithType: SampleSet.SampleSet
  fullName: Microsoft.Health.ItemTypes.Old.SampleSet.SampleSet
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: Microsoft.Health.ItemTypes.HealthServiceDateTime
  commentId: T:Microsoft.Health.ItemTypes.HealthServiceDateTime
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: HealthServiceDateTime
  nameWithType: HealthServiceDateTime
  fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.ItemTypes.CodableValue
  commentId: T:Microsoft.Health.ItemTypes.CodableValue
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: CodableValue
  nameWithType: CodableValue
  fullName: Microsoft.Health.ItemTypes.CodableValue
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.HealthRecordItemData
  isExternal: true
  name: ParseXml(XPathNavigator)
  nameWithType: HealthRecordItemData.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: HealthRecordItemData.ParseXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: HealthRecordItemData.ParseXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Old.SampleSet.ParseXml*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.SampleSet.ParseXml
  isExternal: false
  name: ParseXml
  nameWithType: SampleSet.ParseXml
  fullName: Microsoft.Health.ItemTypes.Old.SampleSet.ParseXml
- uid: System.Xml.XPath.XPathNavigator
  commentId: T:System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: true
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: false
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: Microsoft.Health.ItemTypes.Old.SampleSet.BaseTime
  commentId: P:Microsoft.Health.ItemTypes.Old.SampleSet.BaseTime
- uid: Microsoft.Health.ItemTypes.Old.SampleSet.SampleUnit
  commentId: P:Microsoft.Health.ItemTypes.Old.SampleSet.SampleUnit
- uid: Microsoft.Health.ItemTypes.Old.SampleSet.SampleUnitCode
  commentId: P:Microsoft.Health.ItemTypes.Old.SampleSet.SampleUnitCode
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.HealthRecordItemData
  isExternal: true
  name: WriteXml(String, XmlWriter)
  nameWithType: HealthRecordItemData.WriteXml(String, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String, System.Xml.XmlWriter)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItemData.WriteXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItemData.WriteXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Old.SampleSet.WriteXml*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.SampleSet.WriteXml
  isExternal: false
  name: WriteXml
  nameWithType: SampleSet.WriteXml
  fullName: Microsoft.Health.ItemTypes.Old.SampleSet.WriteXml
- uid: Microsoft.Health.HealthRecordItemSerializationException
  commentId: T:Microsoft.Health.HealthRecordItemSerializationException
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: Microsoft.Health.ItemTypes.Old.SampleSet.BaseTime*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.SampleSet.BaseTime
  isExternal: false
  name: BaseTime
  nameWithType: SampleSet.BaseTime
  fullName: Microsoft.Health.ItemTypes.Old.SampleSet.BaseTime
- uid: Microsoft.Health.ItemTypes.Old.SampleSet.SampleUnit*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.SampleSet.SampleUnit
  isExternal: false
  name: SampleUnit
  nameWithType: SampleSet.SampleUnit
  fullName: Microsoft.Health.ItemTypes.Old.SampleSet.SampleUnit
- uid: Microsoft.Health.ItemTypes.Old.SampleSet.SampleUnitCode*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.SampleSet.SampleUnitCode
  isExternal: false
  name: SampleUnitCode
  nameWithType: SampleSet.SampleUnitCode
  fullName: Microsoft.Health.ItemTypes.Old.SampleSet.SampleUnitCode
- uid: Microsoft.Health.ItemTypes.Old.SampleSet.Samples*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.SampleSet.Samples
  isExternal: false
  name: Samples
  nameWithType: SampleSet.Samples
  fullName: Microsoft.Health.ItemTypes.Old.SampleSet.Samples
- uid: System.Collections.ObjectModel.Collection{Microsoft.Health.ItemTypes.Old.Sample}
  commentId: T:System.Collections.ObjectModel.Collection{Microsoft.Health.ItemTypes.Old.Sample}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<Sample>
  nameWithType: Collection<Sample>
  fullName: System.Collections.ObjectModel.Collection<Microsoft.Health.ItemTypes.Old.Sample>
  nameWithType.vb: Collection(Of Sample)
  fullName.vb: System.Collections.ObjectModel.Collection(Of Microsoft.Health.ItemTypes.Old.Sample)
  name.vb: Collection(Of Sample)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.ItemTypes.Old.Sample
    name: Sample
    nameWithType: Sample
    fullName: Microsoft.Health.ItemTypes.Old.Sample
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.ItemTypes.Old.Sample
    name: Sample
    nameWithType: Sample
    fullName: Microsoft.Health.ItemTypes.Old.Sample
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1
  commentId: T:System.Collections.ObjectModel.Collection`1
  isExternal: true
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  nameWithType.vb: Collection(Of T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T)
  name.vb: Collection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
