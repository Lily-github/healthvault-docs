### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1
  commentId: T:Microsoft.Health.ItemTypes.Old.MedicationV1
  id: MedicationV1
  parent: Microsoft.Health.ItemTypes.Old
  children:
  - Microsoft.Health.ItemTypes.Old.MedicationV1.#ctor
  - Microsoft.Health.ItemTypes.Old.MedicationV1.AmountPrescribed
  - Microsoft.Health.ItemTypes.Old.MedicationV1.Code
  - Microsoft.Health.ItemTypes.Old.MedicationV1.DateDiscontinued
  - Microsoft.Health.ItemTypes.Old.MedicationV1.DateFilled
  - Microsoft.Health.ItemTypes.Old.MedicationV1.DatePrescribed
  - Microsoft.Health.ItemTypes.Old.MedicationV1.DaysSupply
  - Microsoft.Health.ItemTypes.Old.MedicationV1.DoseUnit
  - Microsoft.Health.ItemTypes.Old.MedicationV1.DoseValue
  - Microsoft.Health.ItemTypes.Old.MedicationV1.Duration
  - Microsoft.Health.ItemTypes.Old.MedicationV1.DurationUnit
  - Microsoft.Health.ItemTypes.Old.MedicationV1.Frequency
  - Microsoft.Health.ItemTypes.Old.MedicationV1.Indication
  - Microsoft.Health.ItemTypes.Old.MedicationV1.Instructions
  - Microsoft.Health.ItemTypes.Old.MedicationV1.IsPrescribed
  - Microsoft.Health.ItemTypes.Old.MedicationV1.Name
  - Microsoft.Health.ItemTypes.Old.MedicationV1.ParseXml(System.Xml.XPath.IXPathNavigable)
  - Microsoft.Health.ItemTypes.Old.MedicationV1.Pharmacy
  - Microsoft.Health.ItemTypes.Old.MedicationV1.PrescriptionDuration
  - Microsoft.Health.ItemTypes.Old.MedicationV1.PrescriptionNumber
  - Microsoft.Health.ItemTypes.Old.MedicationV1.Refills
  - Microsoft.Health.ItemTypes.Old.MedicationV1.RefillsLeft
  - Microsoft.Health.ItemTypes.Old.MedicationV1.Route
  - Microsoft.Health.ItemTypes.Old.MedicationV1.StrengthUnit
  - Microsoft.Health.ItemTypes.Old.MedicationV1.StrengthValue
  - Microsoft.Health.ItemTypes.Old.MedicationV1.SubstitutionPermitted
  - Microsoft.Health.ItemTypes.Old.MedicationV1.ToString
  - Microsoft.Health.ItemTypes.Old.MedicationV1.TypeId
  - Microsoft.Health.ItemTypes.Old.MedicationV1.WriteXml(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: MedicationV1
  nameWithType: MedicationV1
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1
  type: Class
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/MedicationV1.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: MedicationV1
    path: MedicationV1.cs
    startLine: 23
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nRepresents a medication health record item.\n"
  remarks: "\nNote: Please use the new version of this data type instead of this version.\n"
  example: []
  syntax:
    content: 'public class MedicationV1 : HealthRecordItem'
    content.vb: >-
      Public Class MedicationV1
          Inherits HealthRecordItem
  inheritance:
  - System.Object
  - Microsoft.Health.HealthRecordItem
  inheritedMembers:
  - Microsoft.Health.HealthRecordItem.Sign(System.Security.Cryptography.X509Certificates.X509Certificate2)
  - Microsoft.Health.HealthRecordItem.IsSignatureValid
  - Microsoft.Health.HealthRecordItem.ValidateCertificate
  - Microsoft.Health.HealthRecordItem.Key
  - Microsoft.Health.HealthRecordItem.TypeName
  - Microsoft.Health.HealthRecordItem.EffectiveDate
  - Microsoft.Health.HealthRecordItem.State
  - Microsoft.Health.HealthRecordItem.Flags
  - Microsoft.Health.HealthRecordItem.IsPersonal
  - Microsoft.Health.HealthRecordItem.IsDownVersioned
  - Microsoft.Health.HealthRecordItem.IsUpVersioned
  - Microsoft.Health.HealthRecordItem.UpdatedEndDate
  - Microsoft.Health.HealthRecordItem.LastUpdated
  - Microsoft.Health.HealthRecordItem.Created
  - Microsoft.Health.HealthRecordItem.EffectivePermissions
  - Microsoft.Health.HealthRecordItem.IsImmutable
  - Microsoft.Health.HealthRecordItem.IsReadOnly
  - Microsoft.Health.HealthRecordItem.TypeSpecificData
  - Microsoft.Health.HealthRecordItem.TransformedXmlData
  - Microsoft.Health.HealthRecordItem.CommonData
  - Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.HealthRecordAccessor)
  - Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.Package.ConnectPackageCreationParameters)
  - Microsoft.Health.HealthRecordItem.Tags
  - Microsoft.Health.HealthRecordItem.HealthRecordItemSignatures
  - Microsoft.Health.HealthRecordItem.Sections
  - Microsoft.Health.HealthRecordItem.GetSizeInBytes
  - Microsoft.Health.HealthRecordItem.GetItemXml
  - Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections)
  - Microsoft.Health.HealthRecordItem.GetItemXml(System.String)
  - Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections,System.String)
  - Microsoft.Health.HealthRecordItem.Serialize
  - Microsoft.Health.HealthRecordItem.Deserialize(System.String)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.#ctor
  commentId: M:Microsoft.Health.ItemTypes.Old.MedicationV1.#ctor
  id: '#ctor'
  parent: Microsoft.Health.ItemTypes.Old.MedicationV1
  langs:
  - csharp
  - vb
  name: MedicationV1()
  nameWithType: MedicationV1.MedicationV1()
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.MedicationV1()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/MedicationV1.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: MedicationV1.cs
    startLine: 36
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.Old.MedicationV1\" data-throw-if-not-resolved=\"false\"></xref> class with default \nvalues.\n"
  remarks: "\nThe item is not added to the health record until the\n<xref href=\"Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)\" data-throw-if-not-resolved=\"false\"></xref> method \nis called.\n"
  example: []
  syntax:
    content: public MedicationV1()
    content.vb: Public Sub New
  overload: Microsoft.Health.ItemTypes.Old.MedicationV1.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.TypeId
  commentId: F:Microsoft.Health.ItemTypes.Old.MedicationV1.TypeId
  id: TypeId
  parent: Microsoft.Health.ItemTypes.Old.MedicationV1
  langs:
  - csharp
  - vb
  name: TypeId
  nameWithType: MedicationV1.TypeId
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.TypeId
  type: Field
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/MedicationV1.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: TypeId
    path: MedicationV1.cs
    startLine: 45
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nThe unique identifier for the item type.\n"
  example: []
  syntax:
    content: public static readonly Guid TypeId
    content.vb: Public Shared ReadOnly TypeId As Guid
    return:
      type: System.Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.ParseXml(System.Xml.XPath.IXPathNavigable)
  commentId: M:Microsoft.Health.ItemTypes.Old.MedicationV1.ParseXml(System.Xml.XPath.IXPathNavigable)
  id: ParseXml(System.Xml.XPath.IXPathNavigable)
  parent: Microsoft.Health.ItemTypes.Old.MedicationV1
  langs:
  - csharp
  - vb
  name: ParseXml(IXPathNavigable)
  nameWithType: MedicationV1.ParseXml(IXPathNavigable)
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.ParseXml(System.Xml.XPath.IXPathNavigable)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/MedicationV1.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ParseXml
    path: MedicationV1.cs
    startLine: 61
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nPopulates this medication instance from the data in the XML.\n"
  example: []
  syntax:
    content: protected override void ParseXml(IXPathNavigable typeSpecificXml)
    content.vb: Protected Overrides Sub ParseXml(typeSpecificXml As IXPathNavigable)
    parameters:
    - id: typeSpecificXml
      type: System.Xml.XPath.IXPathNavigable
      description: "\nThe XML to get the medication data from.\n"
  overridden: Microsoft.Health.HealthRecordItem.ParseXml(System.Xml.XPath.IXPathNavigable)
  overload: Microsoft.Health.ItemTypes.Old.MedicationV1.ParseXml*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nIf the first node in <span class=\"paramref\">typeSpecificXml</span> is not\na medication node.\n"
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.WriteXml(System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.Old.MedicationV1.WriteXml(System.Xml.XmlWriter)
  id: WriteXml(System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.Old.MedicationV1
  langs:
  - csharp
  - vb
  name: WriteXml(XmlWriter)
  nameWithType: MedicationV1.WriteXml(XmlWriter)
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.WriteXml(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/MedicationV1.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteXml
    path: MedicationV1.cs
    startLine: 205
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nWrites the medication data to the specified XmlWriter.\n"
  example: []
  syntax:
    content: public override void WriteXml(XmlWriter writer)
    content.vb: Public Overrides Sub WriteXml(writer As XmlWriter)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "\nThe XmlWriter to write the medication data to.\n"
  overridden: Microsoft.Health.HealthRecordItem.WriteXml(System.Xml.XmlWriter)
  overload: Microsoft.Health.ItemTypes.Old.MedicationV1.WriteXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nIf <span class=\"paramref\">writer</span> is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.Name
  commentId: P:Microsoft.Health.ItemTypes.Old.MedicationV1.Name
  id: Name
  parent: Microsoft.Health.ItemTypes.Old.MedicationV1
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: MedicationV1.Name
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.Name
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/MedicationV1.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Name
    path: MedicationV1.cs
    startLine: 377
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets or sets the medication name.\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
      description: "\nA string representing the name.\n"
  overload: Microsoft.Health.ItemTypes.Old.MedicationV1.Name*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nIf <span class=\"paramref\">value</span> contains only whitespace.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.Code
  commentId: P:Microsoft.Health.ItemTypes.Old.MedicationV1.Code
  id: Code
  parent: Microsoft.Health.ItemTypes.Old.MedicationV1
  langs:
  - csharp
  - vb
  name: Code
  nameWithType: MedicationV1.Code
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.Code
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/MedicationV1.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Code
    path: MedicationV1.cs
    startLine: 396
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets one or more medication codes.\n"
  example: []
  syntax:
    content: public Collection<int> Code { get; }
    content.vb: Public ReadOnly Property Code As Collection(Of Integer)
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{System.Int32}
      description: "\nA collection of integers representing the medication code or codes.\n"
  overload: Microsoft.Health.ItemTypes.Old.MedicationV1.Code*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.DateDiscontinued
  commentId: P:Microsoft.Health.ItemTypes.Old.MedicationV1.DateDiscontinued
  id: DateDiscontinued
  parent: Microsoft.Health.ItemTypes.Old.MedicationV1
  langs:
  - csharp
  - vb
  name: DateDiscontinued
  nameWithType: MedicationV1.DateDiscontinued
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.DateDiscontinued
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/MedicationV1.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DateDiscontinued
    path: MedicationV1.cs
    startLine: 410
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets or sets the date the medication was discontinued.\n"
  example: []
  syntax:
    content: public ApproximateDateTime DateDiscontinued { get; set; }
    content.vb: Public Property DateDiscontinued As ApproximateDateTime
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.ApproximateDateTime
      description: "\nAn <xref href=\"Microsoft.Health.ItemTypes.ApproximateDateTime\" data-throw-if-not-resolved=\"false\"></xref> instance representing the date.\n"
  overload: Microsoft.Health.ItemTypes.Old.MedicationV1.DateDiscontinued*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.DateFilled
  commentId: P:Microsoft.Health.ItemTypes.Old.MedicationV1.DateFilled
  id: DateFilled
  parent: Microsoft.Health.ItemTypes.Old.MedicationV1
  langs:
  - csharp
  - vb
  name: DateFilled
  nameWithType: MedicationV1.DateFilled
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.DateFilled
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/MedicationV1.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DateFilled
    path: MedicationV1.cs
    startLine: 425
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets or sets the date the medication was filled.\n"
  example: []
  syntax:
    content: public ApproximateDateTime DateFilled { get; set; }
    content.vb: Public Property DateFilled As ApproximateDateTime
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.ApproximateDateTime
      description: "\nAn <xref href=\"Microsoft.Health.ItemTypes.ApproximateDateTime\" data-throw-if-not-resolved=\"false\"></xref> instance representing the date.\n"
  overload: Microsoft.Health.ItemTypes.Old.MedicationV1.DateFilled*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.DatePrescribed
  commentId: P:Microsoft.Health.ItemTypes.Old.MedicationV1.DatePrescribed
  id: DatePrescribed
  parent: Microsoft.Health.ItemTypes.Old.MedicationV1
  langs:
  - csharp
  - vb
  name: DatePrescribed
  nameWithType: MedicationV1.DatePrescribed
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.DatePrescribed
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/MedicationV1.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DatePrescribed
    path: MedicationV1.cs
    startLine: 440
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets or sets the date the medication was prescribed.\n"
  example: []
  syntax:
    content: public ApproximateDateTime DatePrescribed { get; set; }
    content.vb: Public Property DatePrescribed As ApproximateDateTime
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.ApproximateDateTime
      description: "\nAn <xref href=\"Microsoft.Health.ItemTypes.ApproximateDateTime\" data-throw-if-not-resolved=\"false\"></xref> instance representing the date.\n"
  overload: Microsoft.Health.ItemTypes.Old.MedicationV1.DatePrescribed*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.IsPrescribed
  commentId: P:Microsoft.Health.ItemTypes.Old.MedicationV1.IsPrescribed
  id: IsPrescribed
  parent: Microsoft.Health.ItemTypes.Old.MedicationV1
  langs:
  - csharp
  - vb
  name: IsPrescribed
  nameWithType: MedicationV1.IsPrescribed
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.IsPrescribed
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/MedicationV1.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: IsPrescribed
    path: MedicationV1.cs
    startLine: 457
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets whether medication is prescribed.\n"
  example: []
  syntax:
    content: public bool ? IsPrescribed { get; set; }
    content.vb: Public Property IsPrescribed As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
      description: "\n<strong>true</strong> if medication has been prescribed, <strong>false</strong> if \nmedication has not been prescribed, or <strong>null</strong> if t is unknown \nwhether medication is prescribed.\n"
  overload: Microsoft.Health.ItemTypes.Old.MedicationV1.IsPrescribed*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.Indication
  commentId: P:Microsoft.Health.ItemTypes.Old.MedicationV1.Indication
  id: Indication
  parent: Microsoft.Health.ItemTypes.Old.MedicationV1
  langs:
  - csharp
  - vb
  name: Indication
  nameWithType: MedicationV1.Indication
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.Indication
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/MedicationV1.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Indication
    path: MedicationV1.cs
    startLine: 481
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets or sets the indication for the medication.\n"
  remarks: "\nSet the value to <strong>null</strong> if the indication should not be \nstored.\n"
  example: []
  syntax:
    content: public string Indication { get; set; }
    content.vb: Public Property Indication As String
    parameters: []
    return:
      type: System.String
      description: "\nA string representing the indication.\n"
  overload: Microsoft.Health.ItemTypes.Old.MedicationV1.Indication*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nIf <span class=\"paramref\">value</span> contains only whitespace.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.AmountPrescribed
  commentId: P:Microsoft.Health.ItemTypes.Old.MedicationV1.AmountPrescribed
  id: AmountPrescribed
  parent: Microsoft.Health.ItemTypes.Old.MedicationV1
  langs:
  - csharp
  - vb
  name: AmountPrescribed
  nameWithType: MedicationV1.AmountPrescribed
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.AmountPrescribed
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/MedicationV1.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AmountPrescribed
    path: MedicationV1.cs
    startLine: 509
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets or sets the amount of medication prescribed.\n"
  remarks: "\nSet the value to <strong>null</strong> if the amount should not be \nstored.\n"
  example: []
  syntax:
    content: public string AmountPrescribed { get; set; }
    content.vb: Public Property AmountPrescribed As String
    parameters: []
    return:
      type: System.String
      description: "\nA string representing the amount.\n"
  overload: Microsoft.Health.ItemTypes.Old.MedicationV1.AmountPrescribed*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nIf <span class=\"paramref\">value</span> contains only whitespace.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.DoseValue
  commentId: P:Microsoft.Health.ItemTypes.Old.MedicationV1.DoseValue
  id: DoseValue
  parent: Microsoft.Health.ItemTypes.Old.MedicationV1
  langs:
  - csharp
  - vb
  name: DoseValue
  nameWithType: MedicationV1.DoseValue
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.DoseValue
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/MedicationV1.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DoseValue
    path: MedicationV1.cs
    startLine: 532
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets or sets the dose value for the medication.\n"
  remarks: "\nIf the dose value is unknown, set the value to <strong>null</strong>.\n"
  example: []
  syntax:
    content: public DoseValue DoseValue { get; set; }
    content.vb: Public Property DoseValue As DoseValue
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.DoseValue
      description: "\nAn integer representing the dose value.\n"
  overload: Microsoft.Health.ItemTypes.Old.MedicationV1.DoseValue*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.DoseUnit
  commentId: P:Microsoft.Health.ItemTypes.Old.MedicationV1.DoseUnit
  id: DoseUnit
  parent: Microsoft.Health.ItemTypes.Old.MedicationV1
  langs:
  - csharp
  - vb
  name: DoseUnit
  nameWithType: MedicationV1.DoseUnit
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.DoseUnit
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/MedicationV1.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DoseUnit
    path: MedicationV1.cs
    startLine: 552
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets or sets the dose unit for the medication prescribed.\n"
  remarks: "\nSet the value to <strong>null</strong> if the dose unit should not be \nstored.\n"
  example: []
  syntax:
    content: public CodableValue DoseUnit { get; set; }
    content.vb: Public Property DoseUnit As CodableValue
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.CodableValue
      description: "\nAn instance of <xref href=\"Microsoft.Health.ItemTypes.CodableValue\" data-throw-if-not-resolved=\"false\"></xref> representing the dose unit.\n"
  overload: Microsoft.Health.ItemTypes.Old.MedicationV1.DoseUnit*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.StrengthValue
  commentId: P:Microsoft.Health.ItemTypes.Old.MedicationV1.StrengthValue
  id: StrengthValue
  parent: Microsoft.Health.ItemTypes.Old.MedicationV1
  langs:
  - csharp
  - vb
  name: StrengthValue
  nameWithType: MedicationV1.StrengthValue
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.StrengthValue
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/MedicationV1.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: StrengthValue
    path: MedicationV1.cs
    startLine: 572
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets or sets the strength value for the medication.\n"
  remarks: "\nIf the strength value is unknown, the value can be set to\n<strong>null</strong>.\n"
  example: []
  syntax:
    content: public int ? StrengthValue { get; set; }
    content.vb: Public Property StrengthValue As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: "\nAn integer representing the strength value.\n"
  overload: Microsoft.Health.ItemTypes.Old.MedicationV1.StrengthValue*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.StrengthUnit
  commentId: P:Microsoft.Health.ItemTypes.Old.MedicationV1.StrengthUnit
  id: StrengthUnit
  parent: Microsoft.Health.ItemTypes.Old.MedicationV1
  langs:
  - csharp
  - vb
  name: StrengthUnit
  nameWithType: MedicationV1.StrengthUnit
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.StrengthUnit
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/MedicationV1.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: StrengthUnit
    path: MedicationV1.cs
    startLine: 594
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets or sets the strength unit for the medication prescribed.\n"
  remarks: "\nSet the value to <strong>null</strong> if the strength unit should not be \nstored.\n"
  example: []
  syntax:
    content: public CodableValue StrengthUnit { get; set; }
    content.vb: Public Property StrengthUnit As CodableValue
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.CodableValue
      description: "\nAn instance of <xref href=\"Microsoft.Health.ItemTypes.CodableValue\" data-throw-if-not-resolved=\"false\"></xref> representing the strength \nunit.\n"
  overload: Microsoft.Health.ItemTypes.Old.MedicationV1.StrengthUnit*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.Frequency
  commentId: P:Microsoft.Health.ItemTypes.Old.MedicationV1.Frequency
  id: Frequency
  parent: Microsoft.Health.ItemTypes.Old.MedicationV1
  langs:
  - csharp
  - vb
  name: Frequency
  nameWithType: MedicationV1.Frequency
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.Frequency
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/MedicationV1.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Frequency
    path: MedicationV1.cs
    startLine: 618
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets or sets the frequency for the medication.\n"
  remarks: "\nSet the value to <strong>null</strong> if the frequency should not be \nstored.\n"
  example: []
  syntax:
    content: public string Frequency { get; set; }
    content.vb: Public Property Frequency As String
    parameters: []
    return:
      type: System.String
      description: "\nA string representing the frequency.\n"
  overload: Microsoft.Health.ItemTypes.Old.MedicationV1.Frequency*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nIf <span class=\"paramref\">value</span> contains only whitespace.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.Route
  commentId: P:Microsoft.Health.ItemTypes.Old.MedicationV1.Route
  id: Route
  parent: Microsoft.Health.ItemTypes.Old.MedicationV1
  langs:
  - csharp
  - vb
  name: Route
  nameWithType: MedicationV1.Route
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.Route
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/MedicationV1.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Route
    path: MedicationV1.cs
    startLine: 642
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets or sets the route for the medication prescribed.\n"
  remarks: "\nSet the value to <strong>null</strong> if the route should not be \nstored.\n"
  example: []
  syntax:
    content: public CodableValue Route { get; set; }
    content.vb: Public Property Route As CodableValue
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.CodableValue
      description: "\nAn instance of <xref href=\"Microsoft.Health.ItemTypes.CodableValue\" data-throw-if-not-resolved=\"false\"></xref> representing the route.\n"
  overload: Microsoft.Health.ItemTypes.Old.MedicationV1.Route*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.Duration
  commentId: P:Microsoft.Health.ItemTypes.Old.MedicationV1.Duration
  id: Duration
  parent: Microsoft.Health.ItemTypes.Old.MedicationV1
  langs:
  - csharp
  - vb
  name: Duration
  nameWithType: MedicationV1.Duration
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.Duration
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/MedicationV1.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Duration
    path: MedicationV1.cs
    startLine: 666
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets or sets the duration for the medication.\n"
  remarks: "\nSet the value to <strong>null</strong> if the duration should not be \nstored.\n"
  example: []
  syntax:
    content: public string Duration { get; set; }
    content.vb: Public Property Duration As String
    parameters: []
    return:
      type: System.String
      description: "\nA string representing the duration.\n"
  overload: Microsoft.Health.ItemTypes.Old.MedicationV1.Duration*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nIf <span class=\"paramref\">value</span> contains only whitespace.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.DurationUnit
  commentId: P:Microsoft.Health.ItemTypes.Old.MedicationV1.DurationUnit
  id: DurationUnit
  parent: Microsoft.Health.ItemTypes.Old.MedicationV1
  langs:
  - csharp
  - vb
  name: DurationUnit
  nameWithType: MedicationV1.DurationUnit
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.DurationUnit
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/MedicationV1.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DurationUnit
    path: MedicationV1.cs
    startLine: 691
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets or sets the duration unit for the medication.\n"
  remarks: "\nSet the value to <strong>null</strong> if the duration unit should not be \nstored.\n"
  example: []
  syntax:
    content: public CodableValue DurationUnit { get; set; }
    content.vb: Public Property DurationUnit As CodableValue
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.CodableValue
      description: "\nAn instance of <xref href=\"Microsoft.Health.ItemTypes.CodableValue\" data-throw-if-not-resolved=\"false\"></xref> representing the duration \nunit.\n"
  overload: Microsoft.Health.ItemTypes.Old.MedicationV1.DurationUnit*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.Refills
  commentId: P:Microsoft.Health.ItemTypes.Old.MedicationV1.Refills
  id: Refills
  parent: Microsoft.Health.ItemTypes.Old.MedicationV1
  langs:
  - csharp
  - vb
  name: Refills
  nameWithType: MedicationV1.Refills
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.Refills
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/MedicationV1.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Refills
    path: MedicationV1.cs
    startLine: 711
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets or sets the number of total refills for the medication.\n"
  remarks: "\nIf the number of refills is not known the value can be set to\n<strong>null</strong>.\n"
  example: []
  syntax:
    content: public int ? Refills { get; set; }
    content.vb: Public Property Refills As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: "\nAn integer representing the number of refills.\n"
  overload: Microsoft.Health.ItemTypes.Old.MedicationV1.Refills*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.RefillsLeft
  commentId: P:Microsoft.Health.ItemTypes.Old.MedicationV1.RefillsLeft
  id: RefillsLeft
  parent: Microsoft.Health.ItemTypes.Old.MedicationV1
  langs:
  - csharp
  - vb
  name: RefillsLeft
  nameWithType: MedicationV1.RefillsLeft
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.RefillsLeft
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/MedicationV1.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: RefillsLeft
    path: MedicationV1.cs
    startLine: 731
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets or sets the number of remaining refills left of the medication.\n"
  remarks: "\nIf the number of refills left is not known the value can be set to\n<strong>null</strong>.\n"
  example: []
  syntax:
    content: public int ? RefillsLeft { get; set; }
    content.vb: Public Property RefillsLeft As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: "\nAn integer representing the number of refills.\n"
  overload: Microsoft.Health.ItemTypes.Old.MedicationV1.RefillsLeft*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.DaysSupply
  commentId: P:Microsoft.Health.ItemTypes.Old.MedicationV1.DaysSupply
  id: DaysSupply
  parent: Microsoft.Health.ItemTypes.Old.MedicationV1
  langs:
  - csharp
  - vb
  name: DaysSupply
  nameWithType: MedicationV1.DaysSupply
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.DaysSupply
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/MedicationV1.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DaysSupply
    path: MedicationV1.cs
    startLine: 751
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets or sets the days supply of the medication.\n"
  remarks: "\nIf the days supply is not known the value can be set to\n<strong>null</strong>.\n"
  example: []
  syntax:
    content: public int ? DaysSupply { get; set; }
    content.vb: Public Property DaysSupply As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: "\nAn integer representing the days supply.\n"
  overload: Microsoft.Health.ItemTypes.Old.MedicationV1.DaysSupply*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.PrescriptionDuration
  commentId: P:Microsoft.Health.ItemTypes.Old.MedicationV1.PrescriptionDuration
  id: PrescriptionDuration
  parent: Microsoft.Health.ItemTypes.Old.MedicationV1
  langs:
  - csharp
  - vb
  name: PrescriptionDuration
  nameWithType: MedicationV1.PrescriptionDuration
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.PrescriptionDuration
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/MedicationV1.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: PrescriptionDuration
    path: MedicationV1.cs
    startLine: 771
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets or sets the duration of the prescription.\n"
  remarks: "\nSet the value to <strong>null</strong> if the prescription duration should not be \nstored.\n"
  example: []
  syntax:
    content: public DurationValue PrescriptionDuration { get; set; }
    content.vb: Public Property PrescriptionDuration As DurationValue
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.DurationValue
      description: "\nA <xref href=\"Microsoft.Health.ItemTypes.DurationValue\" data-throw-if-not-resolved=\"false\"></xref> instance representing the duration.\n"
  overload: Microsoft.Health.ItemTypes.Old.MedicationV1.PrescriptionDuration*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.Instructions
  commentId: P:Microsoft.Health.ItemTypes.Old.MedicationV1.Instructions
  id: Instructions
  parent: Microsoft.Health.ItemTypes.Old.MedicationV1
  langs:
  - csharp
  - vb
  name: Instructions
  nameWithType: MedicationV1.Instructions
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.Instructions
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/MedicationV1.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Instructions
    path: MedicationV1.cs
    startLine: 795
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets or sets the instructions for the medication.\n"
  remarks: "\nSet the value to <strong>null</strong> if the instructions should not be \nstored.\n"
  example: []
  syntax:
    content: public string Instructions { get; set; }
    content.vb: Public Property Instructions As String
    parameters: []
    return:
      type: System.String
      description: "\nA string representing the instructions.\n"
  overload: Microsoft.Health.ItemTypes.Old.MedicationV1.Instructions*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nIf <span class=\"paramref\">value</span> contains only whitespace.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.SubstitutionPermitted
  commentId: P:Microsoft.Health.ItemTypes.Old.MedicationV1.SubstitutionPermitted
  id: SubstitutionPermitted
  parent: Microsoft.Health.ItemTypes.Old.MedicationV1
  langs:
  - csharp
  - vb
  name: SubstitutionPermitted
  nameWithType: MedicationV1.SubstitutionPermitted
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.SubstitutionPermitted
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/MedicationV1.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SubstitutionPermitted
    path: MedicationV1.cs
    startLine: 817
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets a value indicating whether a substitution for the medication \nis permitted.\n"
  example: []
  syntax:
    content: public bool ? SubstitutionPermitted { get; set; }
    content.vb: Public Property SubstitutionPermitted As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
      description: "\n<strong>true</strong> if a substitute medication is permitted, <strong>false</strong> if a substitute \nmedication is not permitted, or <strong>null</strong> if it is unknown whether a \nsubstitution is permitted.\n"
  overload: Microsoft.Health.ItemTypes.Old.MedicationV1.SubstitutionPermitted*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.Pharmacy
  commentId: P:Microsoft.Health.ItemTypes.Old.MedicationV1.Pharmacy
  id: Pharmacy
  parent: Microsoft.Health.ItemTypes.Old.MedicationV1
  langs:
  - csharp
  - vb
  name: Pharmacy
  nameWithType: MedicationV1.Pharmacy
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.Pharmacy
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/MedicationV1.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Pharmacy
    path: MedicationV1.cs
    startLine: 838
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets or sets the pharmacy contact information.\n"
  remarks: "\nSet the value to <strong>null</strong> if the pharmacy contact information\nshould not be stored.\n"
  example: []
  syntax:
    content: public ContactInfo Pharmacy { get; set; }
    content.vb: Public Property Pharmacy As ContactInfo
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.ContactInfo
      description: "\nAn instance of <xref href=\"Microsoft.Health.ItemTypes.ContactInfo\" data-throw-if-not-resolved=\"false\"></xref> representing the pharmacy \ninformation.\n"
  overload: Microsoft.Health.ItemTypes.Old.MedicationV1.Pharmacy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.PrescriptionNumber
  commentId: P:Microsoft.Health.ItemTypes.Old.MedicationV1.PrescriptionNumber
  id: PrescriptionNumber
  parent: Microsoft.Health.ItemTypes.Old.MedicationV1
  langs:
  - csharp
  - vb
  name: PrescriptionNumber
  nameWithType: MedicationV1.PrescriptionNumber
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.PrescriptionNumber
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/MedicationV1.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: PrescriptionNumber
    path: MedicationV1.cs
    startLine: 862
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets or sets the prescription number for the medication.\n"
  remarks: "\nSet the value to <strong>null</strong> if the prescription number should not be \nstored.\n"
  example: []
  syntax:
    content: public string PrescriptionNumber { get; set; }
    content.vb: Public Property PrescriptionNumber As String
    parameters: []
    return:
      type: System.String
      description: "\nA string representing the prescription number.\n"
  overload: Microsoft.Health.ItemTypes.Old.MedicationV1.PrescriptionNumber*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nIf <span class=\"paramref\">value</span> contains only whitespace.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.ToString
  commentId: M:Microsoft.Health.ItemTypes.Old.MedicationV1.ToString
  id: ToString
  parent: Microsoft.Health.ItemTypes.Old.MedicationV1
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: MedicationV1.ToString()
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.ToString()
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/MedicationV1.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ToString
    path: MedicationV1.cs
    startLine: 881
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets a string representation of the medication.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\nA string representation of the medication.\n"
  overridden: System.Object.ToString
  overload: Microsoft.Health.ItemTypes.Old.MedicationV1.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Health.ItemTypes.Old
  commentId: N:Microsoft.Health.ItemTypes.Old
  isExternal: false
  name: Microsoft.Health.ItemTypes.Old
  nameWithType: Microsoft.Health.ItemTypes.Old
  fullName: Microsoft.Health.ItemTypes.Old
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.HealthRecordItem
  commentId: T:Microsoft.Health.HealthRecordItem
  parent: Microsoft.Health
  isExternal: false
  name: HealthRecordItem
  nameWithType: HealthRecordItem
  fullName: Microsoft.Health.HealthRecordItem
- uid: Microsoft.Health.HealthRecordItem.Sign(System.Security.Cryptography.X509Certificates.X509Certificate2)
  commentId: M:Microsoft.Health.HealthRecordItem.Sign(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: true
  name: Sign(X509Certificate2)
  nameWithType: HealthRecordItem.Sign(X509Certificate2)
  fullName: Microsoft.Health.HealthRecordItem.Sign(System.Security.Cryptography.X509Certificates.X509Certificate2)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.Sign(System.Security.Cryptography.X509Certificates.X509Certificate2)
    name: Sign
    nameWithType: HealthRecordItem.Sign
    fullName: Microsoft.Health.HealthRecordItem.Sign
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2
    name: X509Certificate2
    nameWithType: X509Certificate2
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.Sign(System.Security.Cryptography.X509Certificates.X509Certificate2)
    name: Sign
    nameWithType: HealthRecordItem.Sign
    fullName: Microsoft.Health.HealthRecordItem.Sign
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2
    name: X509Certificate2
    nameWithType: X509Certificate2
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.IsSignatureValid
  commentId: M:Microsoft.Health.HealthRecordItem.IsSignatureValid
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: IsSignatureValid()
  nameWithType: HealthRecordItem.IsSignatureValid()
  fullName: Microsoft.Health.HealthRecordItem.IsSignatureValid()
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.IsSignatureValid
    name: IsSignatureValid
    nameWithType: HealthRecordItem.IsSignatureValid
    fullName: Microsoft.Health.HealthRecordItem.IsSignatureValid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.IsSignatureValid
    name: IsSignatureValid
    nameWithType: HealthRecordItem.IsSignatureValid
    fullName: Microsoft.Health.HealthRecordItem.IsSignatureValid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.ValidateCertificate
  commentId: M:Microsoft.Health.HealthRecordItem.ValidateCertificate
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: ValidateCertificate()
  nameWithType: HealthRecordItem.ValidateCertificate()
  fullName: Microsoft.Health.HealthRecordItem.ValidateCertificate()
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.ValidateCertificate
    name: ValidateCertificate
    nameWithType: HealthRecordItem.ValidateCertificate
    fullName: Microsoft.Health.HealthRecordItem.ValidateCertificate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.ValidateCertificate
    name: ValidateCertificate
    nameWithType: HealthRecordItem.ValidateCertificate
    fullName: Microsoft.Health.HealthRecordItem.ValidateCertificate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.Key
  commentId: P:Microsoft.Health.HealthRecordItem.Key
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: Key
  nameWithType: HealthRecordItem.Key
  fullName: Microsoft.Health.HealthRecordItem.Key
- uid: Microsoft.Health.HealthRecordItem.TypeName
  commentId: P:Microsoft.Health.HealthRecordItem.TypeName
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: TypeName
  nameWithType: HealthRecordItem.TypeName
  fullName: Microsoft.Health.HealthRecordItem.TypeName
- uid: Microsoft.Health.HealthRecordItem.EffectiveDate
  commentId: P:Microsoft.Health.HealthRecordItem.EffectiveDate
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: EffectiveDate
  nameWithType: HealthRecordItem.EffectiveDate
  fullName: Microsoft.Health.HealthRecordItem.EffectiveDate
- uid: Microsoft.Health.HealthRecordItem.State
  commentId: P:Microsoft.Health.HealthRecordItem.State
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: State
  nameWithType: HealthRecordItem.State
  fullName: Microsoft.Health.HealthRecordItem.State
- uid: Microsoft.Health.HealthRecordItem.Flags
  commentId: P:Microsoft.Health.HealthRecordItem.Flags
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: Flags
  nameWithType: HealthRecordItem.Flags
  fullName: Microsoft.Health.HealthRecordItem.Flags
- uid: Microsoft.Health.HealthRecordItem.IsPersonal
  commentId: P:Microsoft.Health.HealthRecordItem.IsPersonal
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: IsPersonal
  nameWithType: HealthRecordItem.IsPersonal
  fullName: Microsoft.Health.HealthRecordItem.IsPersonal
- uid: Microsoft.Health.HealthRecordItem.IsDownVersioned
  commentId: P:Microsoft.Health.HealthRecordItem.IsDownVersioned
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: IsDownVersioned
  nameWithType: HealthRecordItem.IsDownVersioned
  fullName: Microsoft.Health.HealthRecordItem.IsDownVersioned
- uid: Microsoft.Health.HealthRecordItem.IsUpVersioned
  commentId: P:Microsoft.Health.HealthRecordItem.IsUpVersioned
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: IsUpVersioned
  nameWithType: HealthRecordItem.IsUpVersioned
  fullName: Microsoft.Health.HealthRecordItem.IsUpVersioned
- uid: Microsoft.Health.HealthRecordItem.UpdatedEndDate
  commentId: P:Microsoft.Health.HealthRecordItem.UpdatedEndDate
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: UpdatedEndDate
  nameWithType: HealthRecordItem.UpdatedEndDate
  fullName: Microsoft.Health.HealthRecordItem.UpdatedEndDate
- uid: Microsoft.Health.HealthRecordItem.LastUpdated
  commentId: P:Microsoft.Health.HealthRecordItem.LastUpdated
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: LastUpdated
  nameWithType: HealthRecordItem.LastUpdated
  fullName: Microsoft.Health.HealthRecordItem.LastUpdated
- uid: Microsoft.Health.HealthRecordItem.Created
  commentId: P:Microsoft.Health.HealthRecordItem.Created
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: Created
  nameWithType: HealthRecordItem.Created
  fullName: Microsoft.Health.HealthRecordItem.Created
- uid: Microsoft.Health.HealthRecordItem.EffectivePermissions
  commentId: P:Microsoft.Health.HealthRecordItem.EffectivePermissions
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: EffectivePermissions
  nameWithType: HealthRecordItem.EffectivePermissions
  fullName: Microsoft.Health.HealthRecordItem.EffectivePermissions
- uid: Microsoft.Health.HealthRecordItem.IsImmutable
  commentId: P:Microsoft.Health.HealthRecordItem.IsImmutable
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: IsImmutable
  nameWithType: HealthRecordItem.IsImmutable
  fullName: Microsoft.Health.HealthRecordItem.IsImmutable
- uid: Microsoft.Health.HealthRecordItem.IsReadOnly
  commentId: P:Microsoft.Health.HealthRecordItem.IsReadOnly
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: IsReadOnly
  nameWithType: HealthRecordItem.IsReadOnly
  fullName: Microsoft.Health.HealthRecordItem.IsReadOnly
- uid: Microsoft.Health.HealthRecordItem.TypeSpecificData
  commentId: P:Microsoft.Health.HealthRecordItem.TypeSpecificData
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: TypeSpecificData
  nameWithType: HealthRecordItem.TypeSpecificData
  fullName: Microsoft.Health.HealthRecordItem.TypeSpecificData
- uid: Microsoft.Health.HealthRecordItem.TransformedXmlData
  commentId: P:Microsoft.Health.HealthRecordItem.TransformedXmlData
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: TransformedXmlData
  nameWithType: HealthRecordItem.TransformedXmlData
  fullName: Microsoft.Health.HealthRecordItem.TransformedXmlData
- uid: Microsoft.Health.HealthRecordItem.CommonData
  commentId: P:Microsoft.Health.HealthRecordItem.CommonData
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: CommonData
  nameWithType: HealthRecordItem.CommonData
  fullName: Microsoft.Health.HealthRecordItem.CommonData
- uid: Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.HealthRecordAccessor)
  commentId: M:Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.HealthRecordAccessor)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: GetBlobStore(HealthRecordAccessor)
  nameWithType: HealthRecordItem.GetBlobStore(HealthRecordAccessor)
  fullName: Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.HealthRecordAccessor)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.HealthRecordAccessor)
    name: GetBlobStore
    nameWithType: HealthRecordItem.GetBlobStore
    fullName: Microsoft.Health.HealthRecordItem.GetBlobStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.HealthRecordAccessor
    name: HealthRecordAccessor
    nameWithType: HealthRecordAccessor
    fullName: Microsoft.Health.HealthRecordAccessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.HealthRecordAccessor)
    name: GetBlobStore
    nameWithType: HealthRecordItem.GetBlobStore
    fullName: Microsoft.Health.HealthRecordItem.GetBlobStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.HealthRecordAccessor
    name: HealthRecordAccessor
    nameWithType: HealthRecordAccessor
    fullName: Microsoft.Health.HealthRecordAccessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.Package.ConnectPackageCreationParameters)
  commentId: M:Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.Package.ConnectPackageCreationParameters)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: GetBlobStore(ConnectPackageCreationParameters)
  nameWithType: HealthRecordItem.GetBlobStore(ConnectPackageCreationParameters)
  fullName: Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.Package.ConnectPackageCreationParameters)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.Package.ConnectPackageCreationParameters)
    name: GetBlobStore
    nameWithType: HealthRecordItem.GetBlobStore
    fullName: Microsoft.Health.HealthRecordItem.GetBlobStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.Package.ConnectPackageCreationParameters
    name: ConnectPackageCreationParameters
    nameWithType: ConnectPackageCreationParameters
    fullName: Microsoft.Health.Package.ConnectPackageCreationParameters
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.Package.ConnectPackageCreationParameters)
    name: GetBlobStore
    nameWithType: HealthRecordItem.GetBlobStore
    fullName: Microsoft.Health.HealthRecordItem.GetBlobStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.Package.ConnectPackageCreationParameters
    name: ConnectPackageCreationParameters
    nameWithType: ConnectPackageCreationParameters
    fullName: Microsoft.Health.Package.ConnectPackageCreationParameters
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.Tags
  commentId: P:Microsoft.Health.HealthRecordItem.Tags
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: Tags
  nameWithType: HealthRecordItem.Tags
  fullName: Microsoft.Health.HealthRecordItem.Tags
- uid: Microsoft.Health.HealthRecordItem.HealthRecordItemSignatures
  commentId: P:Microsoft.Health.HealthRecordItem.HealthRecordItemSignatures
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: HealthRecordItemSignatures
  nameWithType: HealthRecordItem.HealthRecordItemSignatures
  fullName: Microsoft.Health.HealthRecordItem.HealthRecordItemSignatures
- uid: Microsoft.Health.HealthRecordItem.Sections
  commentId: P:Microsoft.Health.HealthRecordItem.Sections
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: Sections
  nameWithType: HealthRecordItem.Sections
  fullName: Microsoft.Health.HealthRecordItem.Sections
- uid: Microsoft.Health.HealthRecordItem.GetSizeInBytes
  commentId: M:Microsoft.Health.HealthRecordItem.GetSizeInBytes
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: GetSizeInBytes()
  nameWithType: HealthRecordItem.GetSizeInBytes()
  fullName: Microsoft.Health.HealthRecordItem.GetSizeInBytes()
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.GetSizeInBytes
    name: GetSizeInBytes
    nameWithType: HealthRecordItem.GetSizeInBytes
    fullName: Microsoft.Health.HealthRecordItem.GetSizeInBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.GetSizeInBytes
    name: GetSizeInBytes
    nameWithType: HealthRecordItem.GetSizeInBytes
    fullName: Microsoft.Health.HealthRecordItem.GetSizeInBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.GetItemXml
  commentId: M:Microsoft.Health.HealthRecordItem.GetItemXml
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: GetItemXml()
  nameWithType: HealthRecordItem.GetItemXml()
  fullName: Microsoft.Health.HealthRecordItem.GetItemXml()
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.GetItemXml
    name: GetItemXml
    nameWithType: HealthRecordItem.GetItemXml
    fullName: Microsoft.Health.HealthRecordItem.GetItemXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.GetItemXml
    name: GetItemXml
    nameWithType: HealthRecordItem.GetItemXml
    fullName: Microsoft.Health.HealthRecordItem.GetItemXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections)
  commentId: M:Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: GetItemXml(HealthRecordItemSections)
  nameWithType: HealthRecordItem.GetItemXml(HealthRecordItemSections)
  fullName: Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections)
    name: GetItemXml
    nameWithType: HealthRecordItem.GetItemXml
    fullName: Microsoft.Health.HealthRecordItem.GetItemXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.HealthRecordItemSections
    name: HealthRecordItemSections
    nameWithType: HealthRecordItemSections
    fullName: Microsoft.Health.HealthRecordItemSections
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections)
    name: GetItemXml
    nameWithType: HealthRecordItem.GetItemXml
    fullName: Microsoft.Health.HealthRecordItem.GetItemXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.HealthRecordItemSections
    name: HealthRecordItemSections
    nameWithType: HealthRecordItemSections
    fullName: Microsoft.Health.HealthRecordItemSections
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.GetItemXml(System.String)
  commentId: M:Microsoft.Health.HealthRecordItem.GetItemXml(System.String)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: true
  name: GetItemXml(String)
  nameWithType: HealthRecordItem.GetItemXml(String)
  fullName: Microsoft.Health.HealthRecordItem.GetItemXml(System.String)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.GetItemXml(System.String)
    name: GetItemXml
    nameWithType: HealthRecordItem.GetItemXml
    fullName: Microsoft.Health.HealthRecordItem.GetItemXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.GetItemXml(System.String)
    name: GetItemXml
    nameWithType: HealthRecordItem.GetItemXml
    fullName: Microsoft.Health.HealthRecordItem.GetItemXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections,System.String)
  commentId: M:Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections,System.String)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: true
  name: GetItemXml(HealthRecordItemSections, String)
  nameWithType: HealthRecordItem.GetItemXml(HealthRecordItemSections, String)
  fullName: Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections, System.String)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections,System.String)
    name: GetItemXml
    nameWithType: HealthRecordItem.GetItemXml
    fullName: Microsoft.Health.HealthRecordItem.GetItemXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.HealthRecordItemSections
    name: HealthRecordItemSections
    nameWithType: HealthRecordItemSections
    fullName: Microsoft.Health.HealthRecordItemSections
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections,System.String)
    name: GetItemXml
    nameWithType: HealthRecordItem.GetItemXml
    fullName: Microsoft.Health.HealthRecordItem.GetItemXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.HealthRecordItemSections
    name: HealthRecordItemSections
    nameWithType: HealthRecordItemSections
    fullName: Microsoft.Health.HealthRecordItemSections
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.Serialize
  commentId: M:Microsoft.Health.HealthRecordItem.Serialize
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: Serialize()
  nameWithType: HealthRecordItem.Serialize()
  fullName: Microsoft.Health.HealthRecordItem.Serialize()
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.Serialize
    name: Serialize
    nameWithType: HealthRecordItem.Serialize
    fullName: Microsoft.Health.HealthRecordItem.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.Serialize
    name: Serialize
    nameWithType: HealthRecordItem.Serialize
    fullName: Microsoft.Health.HealthRecordItem.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.Deserialize(System.String)
  commentId: M:Microsoft.Health.HealthRecordItem.Deserialize(System.String)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: true
  name: Deserialize(String)
  nameWithType: HealthRecordItem.Deserialize(String)
  fullName: Microsoft.Health.HealthRecordItem.Deserialize(System.String)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.Deserialize(System.String)
    name: Deserialize
    nameWithType: HealthRecordItem.Deserialize
    fullName: Microsoft.Health.HealthRecordItem.Deserialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.Deserialize(System.String)
    name: Deserialize
    nameWithType: HealthRecordItem.Deserialize
    fullName: Microsoft.Health.HealthRecordItem.Deserialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1
  commentId: T:Microsoft.Health.ItemTypes.Old.MedicationV1
  isExternal: false
  name: MedicationV1
  nameWithType: MedicationV1
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1
- uid: Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)
  commentId: M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.#ctor*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.MedicationV1.#ctor
  isExternal: false
  name: MedicationV1
  nameWithType: MedicationV1.MedicationV1
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.MedicationV1
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Microsoft.Health.HealthRecordItem.ParseXml(System.Xml.XPath.IXPathNavigable)
  commentId: M:Microsoft.Health.HealthRecordItem.ParseXml(System.Xml.XPath.IXPathNavigable)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: true
  name: ParseXml(IXPathNavigable)
  nameWithType: HealthRecordItem.ParseXml(IXPathNavigable)
  fullName: Microsoft.Health.HealthRecordItem.ParseXml(System.Xml.XPath.IXPathNavigable)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.ParseXml(System.Xml.XPath.IXPathNavigable)
    name: ParseXml
    nameWithType: HealthRecordItem.ParseXml
    fullName: Microsoft.Health.HealthRecordItem.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.IXPathNavigable
    name: IXPathNavigable
    nameWithType: IXPathNavigable
    fullName: System.Xml.XPath.IXPathNavigable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.ParseXml(System.Xml.XPath.IXPathNavigable)
    name: ParseXml
    nameWithType: HealthRecordItem.ParseXml
    fullName: Microsoft.Health.HealthRecordItem.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.IXPathNavigable
    name: IXPathNavigable
    nameWithType: IXPathNavigable
    fullName: System.Xml.XPath.IXPathNavigable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.ParseXml*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.MedicationV1.ParseXml
  isExternal: false
  name: ParseXml
  nameWithType: MedicationV1.ParseXml
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.ParseXml
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
- uid: System.Xml.XPath.IXPathNavigable
  commentId: T:System.Xml.XPath.IXPathNavigable
  parent: System.Xml.XPath
  isExternal: true
  name: IXPathNavigable
  nameWithType: IXPathNavigable
  fullName: System.Xml.XPath.IXPathNavigable
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: false
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: Microsoft.Health.HealthRecordItem.WriteXml(System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.HealthRecordItem.WriteXml(System.Xml.XmlWriter)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: true
  name: WriteXml(XmlWriter)
  nameWithType: HealthRecordItem.WriteXml(XmlWriter)
  fullName: Microsoft.Health.HealthRecordItem.WriteXml(System.Xml.XmlWriter)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItem.WriteXml
    fullName: Microsoft.Health.HealthRecordItem.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItem.WriteXml
    fullName: Microsoft.Health.HealthRecordItem.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.WriteXml*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.MedicationV1.WriteXml
  isExternal: false
  name: WriteXml
  nameWithType: MedicationV1.WriteXml
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.WriteXml
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.Name*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.MedicationV1.Name
  isExternal: false
  name: Name
  nameWithType: MedicationV1.Name
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.Name
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.Code*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.MedicationV1.Code
  isExternal: false
  name: Code
  nameWithType: MedicationV1.Code
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.Code
- uid: System.Collections.ObjectModel.Collection{System.Int32}
  commentId: T:System.Collections.ObjectModel.Collection{System.Int32}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<Int32>
  nameWithType: Collection<Int32>
  fullName: System.Collections.ObjectModel.Collection<System.Int32>
  nameWithType.vb: Collection(Of Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of System.Int32)
  name.vb: Collection(Of Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1
  commentId: T:System.Collections.ObjectModel.Collection`1
  isExternal: true
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  nameWithType.vb: Collection(Of T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T)
  name.vb: Collection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: Microsoft.Health.ItemTypes.ApproximateDateTime
  commentId: T:Microsoft.Health.ItemTypes.ApproximateDateTime
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: ApproximateDateTime
  nameWithType: ApproximateDateTime
  fullName: Microsoft.Health.ItemTypes.ApproximateDateTime
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.DateDiscontinued*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.MedicationV1.DateDiscontinued
  isExternal: false
  name: DateDiscontinued
  nameWithType: MedicationV1.DateDiscontinued
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.DateDiscontinued
- uid: Microsoft.Health.ItemTypes
  commentId: N:Microsoft.Health.ItemTypes
  isExternal: false
  name: Microsoft.Health.ItemTypes
  nameWithType: Microsoft.Health.ItemTypes
  fullName: Microsoft.Health.ItemTypes
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.DateFilled*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.MedicationV1.DateFilled
  isExternal: false
  name: DateFilled
  nameWithType: MedicationV1.DateFilled
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.DateFilled
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.DatePrescribed*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.MedicationV1.DatePrescribed
  isExternal: false
  name: DatePrescribed
  nameWithType: MedicationV1.DatePrescribed
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.DatePrescribed
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.IsPrescribed*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.MedicationV1.IsPrescribed
  isExternal: false
  name: IsPrescribed
  nameWithType: MedicationV1.IsPrescribed
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.IsPrescribed
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.Indication*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.MedicationV1.Indication
  isExternal: false
  name: Indication
  nameWithType: MedicationV1.Indication
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.Indication
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.AmountPrescribed*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.MedicationV1.AmountPrescribed
  isExternal: false
  name: AmountPrescribed
  nameWithType: MedicationV1.AmountPrescribed
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.AmountPrescribed
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.DoseValue*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.MedicationV1.DoseValue
  isExternal: false
  name: DoseValue
  nameWithType: MedicationV1.DoseValue
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.DoseValue
- uid: Microsoft.Health.ItemTypes.DoseValue
  commentId: T:Microsoft.Health.ItemTypes.DoseValue
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: DoseValue
  nameWithType: DoseValue
  fullName: Microsoft.Health.ItemTypes.DoseValue
- uid: Microsoft.Health.ItemTypes.CodableValue
  commentId: T:Microsoft.Health.ItemTypes.CodableValue
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: CodableValue
  nameWithType: CodableValue
  fullName: Microsoft.Health.ItemTypes.CodableValue
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.DoseUnit*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.MedicationV1.DoseUnit
  isExternal: false
  name: DoseUnit
  nameWithType: MedicationV1.DoseUnit
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.DoseUnit
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.StrengthValue*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.MedicationV1.StrengthValue
  isExternal: false
  name: StrengthValue
  nameWithType: MedicationV1.StrengthValue
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.StrengthValue
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.StrengthUnit*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.MedicationV1.StrengthUnit
  isExternal: false
  name: StrengthUnit
  nameWithType: MedicationV1.StrengthUnit
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.StrengthUnit
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.Frequency*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.MedicationV1.Frequency
  isExternal: false
  name: Frequency
  nameWithType: MedicationV1.Frequency
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.Frequency
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.Route*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.MedicationV1.Route
  isExternal: false
  name: Route
  nameWithType: MedicationV1.Route
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.Route
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.Duration*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.MedicationV1.Duration
  isExternal: false
  name: Duration
  nameWithType: MedicationV1.Duration
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.Duration
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.DurationUnit*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.MedicationV1.DurationUnit
  isExternal: false
  name: DurationUnit
  nameWithType: MedicationV1.DurationUnit
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.DurationUnit
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.Refills*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.MedicationV1.Refills
  isExternal: false
  name: Refills
  nameWithType: MedicationV1.Refills
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.Refills
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.RefillsLeft*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.MedicationV1.RefillsLeft
  isExternal: false
  name: RefillsLeft
  nameWithType: MedicationV1.RefillsLeft
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.RefillsLeft
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.DaysSupply*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.MedicationV1.DaysSupply
  isExternal: false
  name: DaysSupply
  nameWithType: MedicationV1.DaysSupply
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.DaysSupply
- uid: Microsoft.Health.ItemTypes.DurationValue
  commentId: T:Microsoft.Health.ItemTypes.DurationValue
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: DurationValue
  nameWithType: DurationValue
  fullName: Microsoft.Health.ItemTypes.DurationValue
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.PrescriptionDuration*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.MedicationV1.PrescriptionDuration
  isExternal: false
  name: PrescriptionDuration
  nameWithType: MedicationV1.PrescriptionDuration
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.PrescriptionDuration
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.Instructions*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.MedicationV1.Instructions
  isExternal: false
  name: Instructions
  nameWithType: MedicationV1.Instructions
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.Instructions
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.SubstitutionPermitted*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.MedicationV1.SubstitutionPermitted
  isExternal: false
  name: SubstitutionPermitted
  nameWithType: MedicationV1.SubstitutionPermitted
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.SubstitutionPermitted
- uid: Microsoft.Health.ItemTypes.ContactInfo
  commentId: T:Microsoft.Health.ItemTypes.ContactInfo
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: ContactInfo
  nameWithType: ContactInfo
  fullName: Microsoft.Health.ItemTypes.ContactInfo
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.Pharmacy*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.MedicationV1.Pharmacy
  isExternal: false
  name: Pharmacy
  nameWithType: MedicationV1.Pharmacy
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.Pharmacy
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.PrescriptionNumber*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.MedicationV1.PrescriptionNumber
  isExternal: false
  name: PrescriptionNumber
  nameWithType: MedicationV1.PrescriptionNumber
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.PrescriptionNumber
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Old.MedicationV1.ToString*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.MedicationV1.ToString
  isExternal: false
  name: ToString
  nameWithType: MedicationV1.ToString
  fullName: Microsoft.Health.ItemTypes.Old.MedicationV1.ToString
