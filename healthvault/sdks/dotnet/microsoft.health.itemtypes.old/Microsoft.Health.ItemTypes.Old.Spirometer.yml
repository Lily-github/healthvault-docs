### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.ItemTypes.Old.Spirometer
  commentId: T:Microsoft.Health.ItemTypes.Old.Spirometer
  id: Spirometer
  parent: Microsoft.Health.ItemTypes.Old
  children:
  - Microsoft.Health.ItemTypes.Old.Spirometer.#ctor
  - Microsoft.Health.ItemTypes.Old.Spirometer.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime)
  - Microsoft.Health.ItemTypes.Old.Spirometer.Fef25to50
  - Microsoft.Health.ItemTypes.Old.Spirometer.Fef25to75
  - Microsoft.Health.ItemTypes.Old.Spirometer.FevOverFvc
  - Microsoft.Health.ItemTypes.Old.Spirometer.Fif25to50
  - Microsoft.Health.ItemTypes.Old.Spirometer.Fif25to75
  - Microsoft.Health.ItemTypes.Old.Spirometer.ForcedExpiratoryTime
  - Microsoft.Health.ItemTypes.Old.Spirometer.ForcedExpiratoryVolume
  - Microsoft.Health.ItemTypes.Old.Spirometer.MaxVoluntaryVentilation
  - Microsoft.Health.ItemTypes.Old.Spirometer.ParseXml(System.Xml.XPath.IXPathNavigable)
  - Microsoft.Health.ItemTypes.Old.Spirometer.PeakExpiratoryFlow
  - Microsoft.Health.ItemTypes.Old.Spirometer.Problems
  - Microsoft.Health.ItemTypes.Old.Spirometer.SlowVitalCapacity
  - Microsoft.Health.ItemTypes.Old.Spirometer.TidalVolume
  - Microsoft.Health.ItemTypes.Old.Spirometer.ToString
  - Microsoft.Health.ItemTypes.Old.Spirometer.TypeId
  - Microsoft.Health.ItemTypes.Old.Spirometer.Warnings
  - Microsoft.Health.ItemTypes.Old.Spirometer.When
  - Microsoft.Health.ItemTypes.Old.Spirometer.WriteXml(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: Spirometer
  nameWithType: Spirometer
  fullName: Microsoft.Health.ItemTypes.Old.Spirometer
  type: Class
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/Spirometer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Spirometer
    path: Spirometer.cs
    startLine: 24
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nRepresents a health record item that encapsulates a single reading \nfrom a spirometer.\n"
  remarks: "\nNote: Please use the peak flow type instead of this type.\n"
  example: []
  syntax:
    content: 'public class Spirometer : HealthRecordItem'
    content.vb: >-
      Public Class Spirometer
          Inherits HealthRecordItem
  inheritance:
  - System.Object
  - Microsoft.Health.HealthRecordItem
  inheritedMembers:
  - Microsoft.Health.HealthRecordItem.Sign(System.Security.Cryptography.X509Certificates.X509Certificate2)
  - Microsoft.Health.HealthRecordItem.IsSignatureValid
  - Microsoft.Health.HealthRecordItem.ValidateCertificate
  - Microsoft.Health.HealthRecordItem.Key
  - Microsoft.Health.HealthRecordItem.TypeName
  - Microsoft.Health.HealthRecordItem.EffectiveDate
  - Microsoft.Health.HealthRecordItem.State
  - Microsoft.Health.HealthRecordItem.Flags
  - Microsoft.Health.HealthRecordItem.IsPersonal
  - Microsoft.Health.HealthRecordItem.IsDownVersioned
  - Microsoft.Health.HealthRecordItem.IsUpVersioned
  - Microsoft.Health.HealthRecordItem.UpdatedEndDate
  - Microsoft.Health.HealthRecordItem.LastUpdated
  - Microsoft.Health.HealthRecordItem.Created
  - Microsoft.Health.HealthRecordItem.EffectivePermissions
  - Microsoft.Health.HealthRecordItem.IsImmutable
  - Microsoft.Health.HealthRecordItem.IsReadOnly
  - Microsoft.Health.HealthRecordItem.TypeSpecificData
  - Microsoft.Health.HealthRecordItem.TransformedXmlData
  - Microsoft.Health.HealthRecordItem.CommonData
  - Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.HealthRecordAccessor)
  - Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.Package.ConnectPackageCreationParameters)
  - Microsoft.Health.HealthRecordItem.Tags
  - Microsoft.Health.HealthRecordItem.HealthRecordItemSignatures
  - Microsoft.Health.HealthRecordItem.Sections
  - Microsoft.Health.HealthRecordItem.GetSizeInBytes
  - Microsoft.Health.HealthRecordItem.GetItemXml
  - Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections)
  - Microsoft.Health.HealthRecordItem.GetItemXml(System.String)
  - Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections,System.String)
  - Microsoft.Health.HealthRecordItem.Serialize
  - Microsoft.Health.HealthRecordItem.Deserialize(System.String)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.ItemTypes.Old.Spirometer.#ctor
  commentId: M:Microsoft.Health.ItemTypes.Old.Spirometer.#ctor
  id: '#ctor'
  parent: Microsoft.Health.ItemTypes.Old.Spirometer
  langs:
  - csharp
  - vb
  name: Spirometer()
  nameWithType: Spirometer.Spirometer()
  fullName: Microsoft.Health.ItemTypes.Old.Spirometer.Spirometer()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/Spirometer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: Spirometer.cs
    startLine: 36
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.Old.Spirometer\" data-throw-if-not-resolved=\"false\"></xref> class with default values.\n"
  remarks: "\nThe item is not added to the health record until the\n<xref href=\"Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)\" data-throw-if-not-resolved=\"false\"></xref> method \nis called.\n"
  example: []
  syntax:
    content: public Spirometer()
    content.vb: Public Sub New
  overload: Microsoft.Health.ItemTypes.Old.Spirometer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.Spirometer.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime)
  commentId: M:Microsoft.Health.ItemTypes.Old.Spirometer.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime)
  id: '#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime)'
  parent: Microsoft.Health.ItemTypes.Old.Spirometer
  langs:
  - csharp
  - vb
  name: Spirometer(HealthServiceDateTime)
  nameWithType: Spirometer.Spirometer(HealthServiceDateTime)
  fullName: Microsoft.Health.ItemTypes.Old.Spirometer.Spirometer(Microsoft.Health.ItemTypes.HealthServiceDateTime)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/Spirometer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: Spirometer.cs
    startLine: 54
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.Old.Spirometer\" data-throw-if-not-resolved=\"false\"></xref> class \nspecifying the mandatory values.\n"
  example: []
  syntax:
    content: public Spirometer(HealthServiceDateTime when)
    content.vb: Public Sub New(when As HealthServiceDateTime)
    parameters:
    - id: when
      type: Microsoft.Health.ItemTypes.HealthServiceDateTime
      description: "\nThe date and time when the spirometer reading occurred.\n"
  overload: Microsoft.Health.ItemTypes.Old.Spirometer.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">when</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.Spirometer.TypeId
  commentId: F:Microsoft.Health.ItemTypes.Old.Spirometer.TypeId
  id: TypeId
  parent: Microsoft.Health.ItemTypes.Old.Spirometer
  langs:
  - csharp
  - vb
  name: TypeId
  nameWithType: Spirometer.TypeId
  fullName: Microsoft.Health.ItemTypes.Old.Spirometer.TypeId
  type: Field
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/Spirometer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: TypeId
    path: Spirometer.cs
    startLine: 63
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nRetrieves the unique identifier for the item type.\n"
  example: []
  syntax:
    content: public static readonly Guid TypeId
    content.vb: Public Shared ReadOnly TypeId As Guid
    return:
      type: System.Guid
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Health.ItemTypes.Old.Spirometer.ParseXml(System.Xml.XPath.IXPathNavigable)
  commentId: M:Microsoft.Health.ItemTypes.Old.Spirometer.ParseXml(System.Xml.XPath.IXPathNavigable)
  id: ParseXml(System.Xml.XPath.IXPathNavigable)
  parent: Microsoft.Health.ItemTypes.Old.Spirometer
  langs:
  - csharp
  - vb
  name: ParseXml(IXPathNavigable)
  nameWithType: Spirometer.ParseXml(IXPathNavigable)
  fullName: Microsoft.Health.ItemTypes.Old.Spirometer.ParseXml(System.Xml.XPath.IXPathNavigable)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/Spirometer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ParseXml
    path: Spirometer.cs
    startLine: 79
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nPopulates this <xref href=\"Microsoft.Health.ItemTypes.Old.Spirometer\" data-throw-if-not-resolved=\"false\"></xref> instance from the data in the XML.\n"
  example: []
  syntax:
    content: protected override void ParseXml(IXPathNavigable typeSpecificXml)
    content.vb: Protected Overrides Sub ParseXml(typeSpecificXml As IXPathNavigable)
    parameters:
    - id: typeSpecificXml
      type: System.Xml.XPath.IXPathNavigable
      description: "\nThe XML to get the spirometer data from.\n"
  overridden: Microsoft.Health.HealthRecordItem.ParseXml(System.Xml.XPath.IXPathNavigable)
  overload: Microsoft.Health.ItemTypes.Old.Spirometer.ParseXml*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nThe first node in the <span class=\"paramref\">typeSpecificXml</span> parameter \nis not a spirometer node.\n"
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Health.ItemTypes.Old.Spirometer.WriteXml(System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.Old.Spirometer.WriteXml(System.Xml.XmlWriter)
  id: WriteXml(System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.Old.Spirometer
  langs:
  - csharp
  - vb
  name: WriteXml(XmlWriter)
  nameWithType: Spirometer.WriteXml(XmlWriter)
  fullName: Microsoft.Health.ItemTypes.Old.Spirometer.WriteXml(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/Spirometer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteXml
    path: Spirometer.cs
    startLine: 196
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nWrites the spirometer data to the specified XmlWriter.\n"
  example: []
  syntax:
    content: public override void WriteXml(XmlWriter writer)
    content.vb: Public Overrides Sub WriteXml(writer As XmlWriter)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "\nThe XmlWriter to write the spirometer use data to.\n"
  overridden: Microsoft.Health.HealthRecordItem.WriteXml(System.Xml.XmlWriter)
  overload: Microsoft.Health.ItemTypes.Old.Spirometer.WriteXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nIf <span class=\"paramref\">writer</span> is <strong>null</strong>.\n"
  - type: Microsoft.Health.HealthRecordItemSerializationException
    commentId: T:Microsoft.Health.HealthRecordItemSerializationException
    description: "\nIf <xref href=\"Microsoft.Health.ItemTypes.Old.Spirometer.When\" data-throw-if-not-resolved=\"false\"></xref> is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.Old.Spirometer.When
  commentId: P:Microsoft.Health.ItemTypes.Old.Spirometer.When
  id: When
  parent: Microsoft.Health.ItemTypes.Old.Spirometer
  langs:
  - csharp
  - vb
  name: When
  nameWithType: Spirometer.When
  fullName: Microsoft.Health.ItemTypes.Old.Spirometer.When
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/Spirometer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: When
    path: Spirometer.cs
    startLine: 308
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets or sets the date and time when the spirometer reading occurred.\n"
  remarks: "\nThe value defaults to the current year, month, and day.\n"
  example: []
  syntax:
    content: public HealthServiceDateTime When { get; set; }
    content.vb: Public Property When As HealthServiceDateTime
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.HealthServiceDateTime
      description: "\nA <xref href=\"Microsoft.Health.ItemTypes.HealthServiceDateTime\" data-throw-if-not-resolved=\"false\"></xref> instance representing the date \nand time.\n"
  overload: Microsoft.Health.ItemTypes.Old.Spirometer.When*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">value</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.Spirometer.ForcedExpiratoryVolume
  commentId: P:Microsoft.Health.ItemTypes.Old.Spirometer.ForcedExpiratoryVolume
  id: ForcedExpiratoryVolume
  parent: Microsoft.Health.ItemTypes.Old.Spirometer
  langs:
  - csharp
  - vb
  name: ForcedExpiratoryVolume
  nameWithType: Spirometer.ForcedExpiratoryVolume
  fullName: Microsoft.Health.ItemTypes.Old.Spirometer.ForcedExpiratoryVolume
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/Spirometer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ForcedExpiratoryVolume
    path: Spirometer.cs
    startLine: 334
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets or sets the forced expiratory volume measured in \nliters per second (L/s).\n"
  remarks: "\nSet the value to <strong>null</strong> if the forced expiratory volume should not\nbe stored.\n"
  example: []
  syntax:
    content: public FlowMeasurement ForcedExpiratoryVolume { get; set; }
    content.vb: Public Property ForcedExpiratoryVolume As FlowMeasurement
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.FlowMeasurement
      description: "\nA number representing the volume.\n"
  overload: Microsoft.Health.ItemTypes.Old.Spirometer.ForcedExpiratoryVolume*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.Spirometer.PeakExpiratoryFlow
  commentId: P:Microsoft.Health.ItemTypes.Old.Spirometer.PeakExpiratoryFlow
  id: PeakExpiratoryFlow
  parent: Microsoft.Health.ItemTypes.Old.Spirometer
  langs:
  - csharp
  - vb
  name: PeakExpiratoryFlow
  nameWithType: Spirometer.PeakExpiratoryFlow
  fullName: Microsoft.Health.ItemTypes.Old.Spirometer.PeakExpiratoryFlow
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/Spirometer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: PeakExpiratoryFlow
    path: Spirometer.cs
    startLine: 355
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets or sets the peak expiratory flow measured in liters per \nsecond (L/s).\n"
  remarks: "\nSet the value to <strong>null</strong> if the peak expiratory flow should not\nbe stored.\n"
  example: []
  syntax:
    content: public FlowMeasurement PeakExpiratoryFlow { get; set; }
    content.vb: Public Property PeakExpiratoryFlow As FlowMeasurement
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.FlowMeasurement
      description: "\nA number representing the peak flow.\n"
  overload: Microsoft.Health.ItemTypes.Old.Spirometer.PeakExpiratoryFlow*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.Spirometer.Warnings
  commentId: P:Microsoft.Health.ItemTypes.Old.Spirometer.Warnings
  id: Warnings
  parent: Microsoft.Health.ItemTypes.Old.Spirometer
  langs:
  - csharp
  - vb
  name: Warnings
  nameWithType: Spirometer.Warnings
  fullName: Microsoft.Health.ItemTypes.Old.Spirometer.Warnings
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/Spirometer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Warnings
    path: Spirometer.cs
    startLine: 378
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets a collection of the warnings that occurred during the reading.\n"
  remarks: "\nTo add a warning, pass a string containing the warning message \nto the Add method of a returned collection.\n<br /><br />\nWarnings indicate the reading was not normal. The text of the \nwarning tells what is of concern.\n"
  example: []
  syntax:
    content: public Collection<string> Warnings { get; }
    content.vb: Public ReadOnly Property Warnings As Collection(Of String)
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{System.String}
      description: "\nA collection of strings representing the warnings.\n"
  overload: Microsoft.Health.ItemTypes.Old.Spirometer.Warnings*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.ItemTypes.Old.Spirometer.Problems
  commentId: P:Microsoft.Health.ItemTypes.Old.Spirometer.Problems
  id: Problems
  parent: Microsoft.Health.ItemTypes.Old.Spirometer
  langs:
  - csharp
  - vb
  name: Problems
  nameWithType: Spirometer.Problems
  fullName: Microsoft.Health.ItemTypes.Old.Spirometer.Problems
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/Spirometer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Problems
    path: Spirometer.cs
    startLine: 401
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets a collection of the problems that occurred during the reading.\n"
  remarks: "\nTo add a problem, pass a string containing the problem message \nto the Add method of a returned collection.\n<br /><br />\nProblems indicate the reading was not normal and indicates an \naction should be taken. The text of the problem tells what is of \nconcern.\n"
  example: []
  syntax:
    content: public Collection<string> Problems { get; }
    content.vb: Public ReadOnly Property Problems As Collection(Of String)
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{System.String}
      description: "\nA collection of strings representing the problems.\n"
  overload: Microsoft.Health.ItemTypes.Old.Spirometer.Problems*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.ItemTypes.Old.Spirometer.FevOverFvc
  commentId: P:Microsoft.Health.ItemTypes.Old.Spirometer.FevOverFvc
  id: FevOverFvc
  parent: Microsoft.Health.ItemTypes.Old.Spirometer
  langs:
  - csharp
  - vb
  name: FevOverFvc
  nameWithType: Spirometer.FevOverFvc
  fullName: Microsoft.Health.ItemTypes.Old.Spirometer.FevOverFvc
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/Spirometer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: FevOverFvc
    path: Spirometer.cs
    startLine: 420
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets or sets the ratio of the Forced Expiratory Volume (FEV) over\nForced Vital Capacity (FVC).\n"
  remarks: "\nIn healthy adults, this value should be approximately 75-80%.\n"
  example: []
  syntax:
    content: public double ? FevOverFvc { get; set; }
    content.vb: Public Property FevOverFvc As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
      description: "\nA collection of strings representing the ratio.\n"
  overload: Microsoft.Health.ItemTypes.Old.Spirometer.FevOverFvc*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.Spirometer.Fef25to75
  commentId: P:Microsoft.Health.ItemTypes.Old.Spirometer.Fef25to75
  id: Fef25to75
  parent: Microsoft.Health.ItemTypes.Old.Spirometer
  langs:
  - csharp
  - vb
  name: Fef25to75
  nameWithType: Spirometer.Fef25to75
  fullName: Microsoft.Health.ItemTypes.Old.Spirometer.Fef25to75
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/Spirometer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Fef25to75
    path: Spirometer.cs
    startLine: 436
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets or sets the average flow of air coming out of the lungs \nduring the middle (25-75%) portion of the expiration.\n"
  example: []
  syntax:
    content: public double ? Fef25to75 { get; set; }
    content.vb: Public Property Fef25to75 As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
      description: "\nA number representing the flow.\n"
  overload: Microsoft.Health.ItemTypes.Old.Spirometer.Fef25to75*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.Spirometer.Fef25to50
  commentId: P:Microsoft.Health.ItemTypes.Old.Spirometer.Fef25to50
  id: Fef25to50
  parent: Microsoft.Health.ItemTypes.Old.Spirometer
  langs:
  - csharp
  - vb
  name: Fef25to50
  nameWithType: Spirometer.Fef25to50
  fullName: Microsoft.Health.ItemTypes.Old.Spirometer.Fef25to50
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/Spirometer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Fef25to50
    path: Spirometer.cs
    startLine: 452
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets or sets the average flow of air coming out of the lungs \nduring the middle (25-50%) portion of the expiration.\n"
  example: []
  syntax:
    content: public double ? Fef25to50 { get; set; }
    content.vb: Public Property Fef25to50 As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
      description: "\nA number representing the flow.\n"
  overload: Microsoft.Health.ItemTypes.Old.Spirometer.Fef25to50*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.Spirometer.Fif25to75
  commentId: P:Microsoft.Health.ItemTypes.Old.Spirometer.Fif25to75
  id: Fif25to75
  parent: Microsoft.Health.ItemTypes.Old.Spirometer
  langs:
  - csharp
  - vb
  name: Fif25to75
  nameWithType: Spirometer.Fif25to75
  fullName: Microsoft.Health.ItemTypes.Old.Spirometer.Fif25to75
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/Spirometer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Fif25to75
    path: Spirometer.cs
    startLine: 468
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets or sets the average inspiratory flow \nduring the middle (25-75%) portion of inspiration.\n"
  example: []
  syntax:
    content: public double ? Fif25to75 { get; set; }
    content.vb: Public Property Fif25to75 As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
      description: "\nA number representing the flow.\n"
  overload: Microsoft.Health.ItemTypes.Old.Spirometer.Fif25to75*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.Spirometer.Fif25to50
  commentId: P:Microsoft.Health.ItemTypes.Old.Spirometer.Fif25to50
  id: Fif25to50
  parent: Microsoft.Health.ItemTypes.Old.Spirometer
  langs:
  - csharp
  - vb
  name: Fif25to50
  nameWithType: Spirometer.Fif25to50
  fullName: Microsoft.Health.ItemTypes.Old.Spirometer.Fif25to50
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/Spirometer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Fif25to50
    path: Spirometer.cs
    startLine: 484
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets or sets the average inspiratory flow \nduring the middle (25-50%) portion of inspiration.\n"
  example: []
  syntax:
    content: public double ? Fif25to50 { get; set; }
    content.vb: Public Property Fif25to50 As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
      description: "\nA number representing the flow.\n"
  overload: Microsoft.Health.ItemTypes.Old.Spirometer.Fif25to50*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.Spirometer.ForcedExpiratoryTime
  commentId: P:Microsoft.Health.ItemTypes.Old.Spirometer.ForcedExpiratoryTime
  id: ForcedExpiratoryTime
  parent: Microsoft.Health.ItemTypes.Old.Spirometer
  langs:
  - csharp
  - vb
  name: ForcedExpiratoryTime
  nameWithType: Spirometer.ForcedExpiratoryTime
  fullName: Microsoft.Health.ItemTypes.Old.Spirometer.ForcedExpiratoryTime
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/Spirometer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ForcedExpiratoryTime
    path: Spirometer.cs
    startLine: 495
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets or sets the length of expiration in seconds.\n"
  example: []
  syntax:
    content: public double ? ForcedExpiratoryTime { get; set; }
    content.vb: Public Property ForcedExpiratoryTime As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  overload: Microsoft.Health.ItemTypes.Old.Spirometer.ForcedExpiratoryTime*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.Spirometer.SlowVitalCapacity
  commentId: P:Microsoft.Health.ItemTypes.Old.Spirometer.SlowVitalCapacity
  id: SlowVitalCapacity
  parent: Microsoft.Health.ItemTypes.Old.Spirometer
  langs:
  - csharp
  - vb
  name: SlowVitalCapacity
  nameWithType: Spirometer.SlowVitalCapacity
  fullName: Microsoft.Health.ItemTypes.Old.Spirometer.SlowVitalCapacity
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/Spirometer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SlowVitalCapacity
    path: Spirometer.cs
    startLine: 511
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets or sets the capacity of the lungs during expiration or\ninspiration, measured in liters (L).\n"
  example: []
  syntax:
    content: public VolumeMeasurement SlowVitalCapacity { get; set; }
    content.vb: Public Property SlowVitalCapacity As VolumeMeasurement
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.VolumeMeasurement
      description: "\nA number representing the capacity in liters (L).\n"
  overload: Microsoft.Health.ItemTypes.Old.Spirometer.SlowVitalCapacity*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.Spirometer.TidalVolume
  commentId: P:Microsoft.Health.ItemTypes.Old.Spirometer.TidalVolume
  id: TidalVolume
  parent: Microsoft.Health.ItemTypes.Old.Spirometer
  langs:
  - csharp
  - vb
  name: TidalVolume
  nameWithType: Spirometer.TidalVolume
  fullName: Microsoft.Health.ItemTypes.Old.Spirometer.TidalVolume
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/Spirometer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: TidalVolume
    path: Spirometer.cs
    startLine: 531
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets or sets the tidal volume, measured in liters (L).\n"
  remarks: "\nThis is the specific volume of air that is drawn\ninto and then expired out of the lungs.\n"
  example: []
  syntax:
    content: public VolumeMeasurement TidalVolume { get; set; }
    content.vb: Public Property TidalVolume As VolumeMeasurement
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.VolumeMeasurement
      description: "\nA number representing the volume measured in liters (L).\n"
  overload: Microsoft.Health.ItemTypes.Old.Spirometer.TidalVolume*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.Spirometer.MaxVoluntaryVentilation
  commentId: P:Microsoft.Health.ItemTypes.Old.Spirometer.MaxVoluntaryVentilation
  id: MaxVoluntaryVentilation
  parent: Microsoft.Health.ItemTypes.Old.Spirometer
  langs:
  - csharp
  - vb
  name: MaxVoluntaryVentilation
  nameWithType: Spirometer.MaxVoluntaryVentilation
  fullName: Microsoft.Health.ItemTypes.Old.Spirometer.MaxVoluntaryVentilation
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/Spirometer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: MaxVoluntaryVentilation
    path: Spirometer.cs
    startLine: 554
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets or sets the maximum voluntary ventilation (MVV) measured\nin liters per second (L/s).\n"
  remarks: "\nFor this test, patients inspire and expire\ninto the spirometer over and over again as fast \nas they can, for at least 12 seconds.\n"
  example: []
  syntax:
    content: public FlowMeasurement MaxVoluntaryVentilation { get; set; }
    content.vb: Public Property MaxVoluntaryVentilation As FlowMeasurement
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.FlowMeasurement
      description: "\nA number representing the ventilation measured in liters per \nsecond (L/s).\n"
  overload: Microsoft.Health.ItemTypes.Old.Spirometer.MaxVoluntaryVentilation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.Spirometer.ToString
  commentId: M:Microsoft.Health.ItemTypes.Old.Spirometer.ToString
  id: ToString
  parent: Microsoft.Health.ItemTypes.Old.Spirometer
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Spirometer.ToString()
  fullName: Microsoft.Health.ItemTypes.Old.Spirometer.ToString()
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/Spirometer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ToString
    path: Spirometer.cs
    startLine: 569
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets a string representation of the spirometer reading.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\nA string representing the vault of the spirometer reading.\n"
  overridden: System.Object.ToString
  overload: Microsoft.Health.ItemTypes.Old.Spirometer.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Health.ItemTypes.Old
  commentId: N:Microsoft.Health.ItemTypes.Old
  isExternal: false
  name: Microsoft.Health.ItemTypes.Old
  nameWithType: Microsoft.Health.ItemTypes.Old
  fullName: Microsoft.Health.ItemTypes.Old
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.HealthRecordItem
  commentId: T:Microsoft.Health.HealthRecordItem
  parent: Microsoft.Health
  isExternal: false
  name: HealthRecordItem
  nameWithType: HealthRecordItem
  fullName: Microsoft.Health.HealthRecordItem
- uid: Microsoft.Health.HealthRecordItem.Sign(System.Security.Cryptography.X509Certificates.X509Certificate2)
  commentId: M:Microsoft.Health.HealthRecordItem.Sign(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: true
  name: Sign(X509Certificate2)
  nameWithType: HealthRecordItem.Sign(X509Certificate2)
  fullName: Microsoft.Health.HealthRecordItem.Sign(System.Security.Cryptography.X509Certificates.X509Certificate2)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.Sign(System.Security.Cryptography.X509Certificates.X509Certificate2)
    name: Sign
    nameWithType: HealthRecordItem.Sign
    fullName: Microsoft.Health.HealthRecordItem.Sign
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2
    name: X509Certificate2
    nameWithType: X509Certificate2
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.Sign(System.Security.Cryptography.X509Certificates.X509Certificate2)
    name: Sign
    nameWithType: HealthRecordItem.Sign
    fullName: Microsoft.Health.HealthRecordItem.Sign
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2
    name: X509Certificate2
    nameWithType: X509Certificate2
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.IsSignatureValid
  commentId: M:Microsoft.Health.HealthRecordItem.IsSignatureValid
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: IsSignatureValid()
  nameWithType: HealthRecordItem.IsSignatureValid()
  fullName: Microsoft.Health.HealthRecordItem.IsSignatureValid()
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.IsSignatureValid
    name: IsSignatureValid
    nameWithType: HealthRecordItem.IsSignatureValid
    fullName: Microsoft.Health.HealthRecordItem.IsSignatureValid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.IsSignatureValid
    name: IsSignatureValid
    nameWithType: HealthRecordItem.IsSignatureValid
    fullName: Microsoft.Health.HealthRecordItem.IsSignatureValid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.ValidateCertificate
  commentId: M:Microsoft.Health.HealthRecordItem.ValidateCertificate
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: ValidateCertificate()
  nameWithType: HealthRecordItem.ValidateCertificate()
  fullName: Microsoft.Health.HealthRecordItem.ValidateCertificate()
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.ValidateCertificate
    name: ValidateCertificate
    nameWithType: HealthRecordItem.ValidateCertificate
    fullName: Microsoft.Health.HealthRecordItem.ValidateCertificate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.ValidateCertificate
    name: ValidateCertificate
    nameWithType: HealthRecordItem.ValidateCertificate
    fullName: Microsoft.Health.HealthRecordItem.ValidateCertificate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.Key
  commentId: P:Microsoft.Health.HealthRecordItem.Key
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: Key
  nameWithType: HealthRecordItem.Key
  fullName: Microsoft.Health.HealthRecordItem.Key
- uid: Microsoft.Health.HealthRecordItem.TypeName
  commentId: P:Microsoft.Health.HealthRecordItem.TypeName
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: TypeName
  nameWithType: HealthRecordItem.TypeName
  fullName: Microsoft.Health.HealthRecordItem.TypeName
- uid: Microsoft.Health.HealthRecordItem.EffectiveDate
  commentId: P:Microsoft.Health.HealthRecordItem.EffectiveDate
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: EffectiveDate
  nameWithType: HealthRecordItem.EffectiveDate
  fullName: Microsoft.Health.HealthRecordItem.EffectiveDate
- uid: Microsoft.Health.HealthRecordItem.State
  commentId: P:Microsoft.Health.HealthRecordItem.State
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: State
  nameWithType: HealthRecordItem.State
  fullName: Microsoft.Health.HealthRecordItem.State
- uid: Microsoft.Health.HealthRecordItem.Flags
  commentId: P:Microsoft.Health.HealthRecordItem.Flags
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: Flags
  nameWithType: HealthRecordItem.Flags
  fullName: Microsoft.Health.HealthRecordItem.Flags
- uid: Microsoft.Health.HealthRecordItem.IsPersonal
  commentId: P:Microsoft.Health.HealthRecordItem.IsPersonal
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: IsPersonal
  nameWithType: HealthRecordItem.IsPersonal
  fullName: Microsoft.Health.HealthRecordItem.IsPersonal
- uid: Microsoft.Health.HealthRecordItem.IsDownVersioned
  commentId: P:Microsoft.Health.HealthRecordItem.IsDownVersioned
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: IsDownVersioned
  nameWithType: HealthRecordItem.IsDownVersioned
  fullName: Microsoft.Health.HealthRecordItem.IsDownVersioned
- uid: Microsoft.Health.HealthRecordItem.IsUpVersioned
  commentId: P:Microsoft.Health.HealthRecordItem.IsUpVersioned
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: IsUpVersioned
  nameWithType: HealthRecordItem.IsUpVersioned
  fullName: Microsoft.Health.HealthRecordItem.IsUpVersioned
- uid: Microsoft.Health.HealthRecordItem.UpdatedEndDate
  commentId: P:Microsoft.Health.HealthRecordItem.UpdatedEndDate
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: UpdatedEndDate
  nameWithType: HealthRecordItem.UpdatedEndDate
  fullName: Microsoft.Health.HealthRecordItem.UpdatedEndDate
- uid: Microsoft.Health.HealthRecordItem.LastUpdated
  commentId: P:Microsoft.Health.HealthRecordItem.LastUpdated
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: LastUpdated
  nameWithType: HealthRecordItem.LastUpdated
  fullName: Microsoft.Health.HealthRecordItem.LastUpdated
- uid: Microsoft.Health.HealthRecordItem.Created
  commentId: P:Microsoft.Health.HealthRecordItem.Created
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: Created
  nameWithType: HealthRecordItem.Created
  fullName: Microsoft.Health.HealthRecordItem.Created
- uid: Microsoft.Health.HealthRecordItem.EffectivePermissions
  commentId: P:Microsoft.Health.HealthRecordItem.EffectivePermissions
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: EffectivePermissions
  nameWithType: HealthRecordItem.EffectivePermissions
  fullName: Microsoft.Health.HealthRecordItem.EffectivePermissions
- uid: Microsoft.Health.HealthRecordItem.IsImmutable
  commentId: P:Microsoft.Health.HealthRecordItem.IsImmutable
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: IsImmutable
  nameWithType: HealthRecordItem.IsImmutable
  fullName: Microsoft.Health.HealthRecordItem.IsImmutable
- uid: Microsoft.Health.HealthRecordItem.IsReadOnly
  commentId: P:Microsoft.Health.HealthRecordItem.IsReadOnly
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: IsReadOnly
  nameWithType: HealthRecordItem.IsReadOnly
  fullName: Microsoft.Health.HealthRecordItem.IsReadOnly
- uid: Microsoft.Health.HealthRecordItem.TypeSpecificData
  commentId: P:Microsoft.Health.HealthRecordItem.TypeSpecificData
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: TypeSpecificData
  nameWithType: HealthRecordItem.TypeSpecificData
  fullName: Microsoft.Health.HealthRecordItem.TypeSpecificData
- uid: Microsoft.Health.HealthRecordItem.TransformedXmlData
  commentId: P:Microsoft.Health.HealthRecordItem.TransformedXmlData
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: TransformedXmlData
  nameWithType: HealthRecordItem.TransformedXmlData
  fullName: Microsoft.Health.HealthRecordItem.TransformedXmlData
- uid: Microsoft.Health.HealthRecordItem.CommonData
  commentId: P:Microsoft.Health.HealthRecordItem.CommonData
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: CommonData
  nameWithType: HealthRecordItem.CommonData
  fullName: Microsoft.Health.HealthRecordItem.CommonData
- uid: Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.HealthRecordAccessor)
  commentId: M:Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.HealthRecordAccessor)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: GetBlobStore(HealthRecordAccessor)
  nameWithType: HealthRecordItem.GetBlobStore(HealthRecordAccessor)
  fullName: Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.HealthRecordAccessor)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.HealthRecordAccessor)
    name: GetBlobStore
    nameWithType: HealthRecordItem.GetBlobStore
    fullName: Microsoft.Health.HealthRecordItem.GetBlobStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.HealthRecordAccessor
    name: HealthRecordAccessor
    nameWithType: HealthRecordAccessor
    fullName: Microsoft.Health.HealthRecordAccessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.HealthRecordAccessor)
    name: GetBlobStore
    nameWithType: HealthRecordItem.GetBlobStore
    fullName: Microsoft.Health.HealthRecordItem.GetBlobStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.HealthRecordAccessor
    name: HealthRecordAccessor
    nameWithType: HealthRecordAccessor
    fullName: Microsoft.Health.HealthRecordAccessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.Package.ConnectPackageCreationParameters)
  commentId: M:Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.Package.ConnectPackageCreationParameters)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: GetBlobStore(ConnectPackageCreationParameters)
  nameWithType: HealthRecordItem.GetBlobStore(ConnectPackageCreationParameters)
  fullName: Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.Package.ConnectPackageCreationParameters)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.Package.ConnectPackageCreationParameters)
    name: GetBlobStore
    nameWithType: HealthRecordItem.GetBlobStore
    fullName: Microsoft.Health.HealthRecordItem.GetBlobStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.Package.ConnectPackageCreationParameters
    name: ConnectPackageCreationParameters
    nameWithType: ConnectPackageCreationParameters
    fullName: Microsoft.Health.Package.ConnectPackageCreationParameters
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.Package.ConnectPackageCreationParameters)
    name: GetBlobStore
    nameWithType: HealthRecordItem.GetBlobStore
    fullName: Microsoft.Health.HealthRecordItem.GetBlobStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.Package.ConnectPackageCreationParameters
    name: ConnectPackageCreationParameters
    nameWithType: ConnectPackageCreationParameters
    fullName: Microsoft.Health.Package.ConnectPackageCreationParameters
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.Tags
  commentId: P:Microsoft.Health.HealthRecordItem.Tags
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: Tags
  nameWithType: HealthRecordItem.Tags
  fullName: Microsoft.Health.HealthRecordItem.Tags
- uid: Microsoft.Health.HealthRecordItem.HealthRecordItemSignatures
  commentId: P:Microsoft.Health.HealthRecordItem.HealthRecordItemSignatures
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: HealthRecordItemSignatures
  nameWithType: HealthRecordItem.HealthRecordItemSignatures
  fullName: Microsoft.Health.HealthRecordItem.HealthRecordItemSignatures
- uid: Microsoft.Health.HealthRecordItem.Sections
  commentId: P:Microsoft.Health.HealthRecordItem.Sections
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: Sections
  nameWithType: HealthRecordItem.Sections
  fullName: Microsoft.Health.HealthRecordItem.Sections
- uid: Microsoft.Health.HealthRecordItem.GetSizeInBytes
  commentId: M:Microsoft.Health.HealthRecordItem.GetSizeInBytes
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: GetSizeInBytes()
  nameWithType: HealthRecordItem.GetSizeInBytes()
  fullName: Microsoft.Health.HealthRecordItem.GetSizeInBytes()
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.GetSizeInBytes
    name: GetSizeInBytes
    nameWithType: HealthRecordItem.GetSizeInBytes
    fullName: Microsoft.Health.HealthRecordItem.GetSizeInBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.GetSizeInBytes
    name: GetSizeInBytes
    nameWithType: HealthRecordItem.GetSizeInBytes
    fullName: Microsoft.Health.HealthRecordItem.GetSizeInBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.GetItemXml
  commentId: M:Microsoft.Health.HealthRecordItem.GetItemXml
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: GetItemXml()
  nameWithType: HealthRecordItem.GetItemXml()
  fullName: Microsoft.Health.HealthRecordItem.GetItemXml()
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.GetItemXml
    name: GetItemXml
    nameWithType: HealthRecordItem.GetItemXml
    fullName: Microsoft.Health.HealthRecordItem.GetItemXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.GetItemXml
    name: GetItemXml
    nameWithType: HealthRecordItem.GetItemXml
    fullName: Microsoft.Health.HealthRecordItem.GetItemXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections)
  commentId: M:Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: GetItemXml(HealthRecordItemSections)
  nameWithType: HealthRecordItem.GetItemXml(HealthRecordItemSections)
  fullName: Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections)
    name: GetItemXml
    nameWithType: HealthRecordItem.GetItemXml
    fullName: Microsoft.Health.HealthRecordItem.GetItemXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.HealthRecordItemSections
    name: HealthRecordItemSections
    nameWithType: HealthRecordItemSections
    fullName: Microsoft.Health.HealthRecordItemSections
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections)
    name: GetItemXml
    nameWithType: HealthRecordItem.GetItemXml
    fullName: Microsoft.Health.HealthRecordItem.GetItemXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.HealthRecordItemSections
    name: HealthRecordItemSections
    nameWithType: HealthRecordItemSections
    fullName: Microsoft.Health.HealthRecordItemSections
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.GetItemXml(System.String)
  commentId: M:Microsoft.Health.HealthRecordItem.GetItemXml(System.String)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: true
  name: GetItemXml(String)
  nameWithType: HealthRecordItem.GetItemXml(String)
  fullName: Microsoft.Health.HealthRecordItem.GetItemXml(System.String)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.GetItemXml(System.String)
    name: GetItemXml
    nameWithType: HealthRecordItem.GetItemXml
    fullName: Microsoft.Health.HealthRecordItem.GetItemXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.GetItemXml(System.String)
    name: GetItemXml
    nameWithType: HealthRecordItem.GetItemXml
    fullName: Microsoft.Health.HealthRecordItem.GetItemXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections,System.String)
  commentId: M:Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections,System.String)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: true
  name: GetItemXml(HealthRecordItemSections, String)
  nameWithType: HealthRecordItem.GetItemXml(HealthRecordItemSections, String)
  fullName: Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections, System.String)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections,System.String)
    name: GetItemXml
    nameWithType: HealthRecordItem.GetItemXml
    fullName: Microsoft.Health.HealthRecordItem.GetItemXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.HealthRecordItemSections
    name: HealthRecordItemSections
    nameWithType: HealthRecordItemSections
    fullName: Microsoft.Health.HealthRecordItemSections
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections,System.String)
    name: GetItemXml
    nameWithType: HealthRecordItem.GetItemXml
    fullName: Microsoft.Health.HealthRecordItem.GetItemXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.HealthRecordItemSections
    name: HealthRecordItemSections
    nameWithType: HealthRecordItemSections
    fullName: Microsoft.Health.HealthRecordItemSections
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.Serialize
  commentId: M:Microsoft.Health.HealthRecordItem.Serialize
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: Serialize()
  nameWithType: HealthRecordItem.Serialize()
  fullName: Microsoft.Health.HealthRecordItem.Serialize()
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.Serialize
    name: Serialize
    nameWithType: HealthRecordItem.Serialize
    fullName: Microsoft.Health.HealthRecordItem.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.Serialize
    name: Serialize
    nameWithType: HealthRecordItem.Serialize
    fullName: Microsoft.Health.HealthRecordItem.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.Deserialize(System.String)
  commentId: M:Microsoft.Health.HealthRecordItem.Deserialize(System.String)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: true
  name: Deserialize(String)
  nameWithType: HealthRecordItem.Deserialize(String)
  fullName: Microsoft.Health.HealthRecordItem.Deserialize(System.String)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.Deserialize(System.String)
    name: Deserialize
    nameWithType: HealthRecordItem.Deserialize
    fullName: Microsoft.Health.HealthRecordItem.Deserialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.Deserialize(System.String)
    name: Deserialize
    nameWithType: HealthRecordItem.Deserialize
    fullName: Microsoft.Health.HealthRecordItem.Deserialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: Microsoft.Health.ItemTypes.Old.Spirometer
  commentId: T:Microsoft.Health.ItemTypes.Old.Spirometer
  isExternal: false
  name: Spirometer
  nameWithType: Spirometer
  fullName: Microsoft.Health.ItemTypes.Old.Spirometer
- uid: Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)
  commentId: M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)
- uid: Microsoft.Health.ItemTypes.Old.Spirometer.#ctor*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.Spirometer.#ctor
  isExternal: false
  name: Spirometer
  nameWithType: Spirometer.Spirometer
  fullName: Microsoft.Health.ItemTypes.Old.Spirometer.Spirometer
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: Microsoft.Health.ItemTypes.HealthServiceDateTime
  commentId: T:Microsoft.Health.ItemTypes.HealthServiceDateTime
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: HealthServiceDateTime
  nameWithType: HealthServiceDateTime
  fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime
- uid: Microsoft.Health.ItemTypes
  commentId: N:Microsoft.Health.ItemTypes
  isExternal: false
  name: Microsoft.Health.ItemTypes
  nameWithType: Microsoft.Health.ItemTypes
  fullName: Microsoft.Health.ItemTypes
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Microsoft.Health.HealthRecordItem.ParseXml(System.Xml.XPath.IXPathNavigable)
  commentId: M:Microsoft.Health.HealthRecordItem.ParseXml(System.Xml.XPath.IXPathNavigable)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: true
  name: ParseXml(IXPathNavigable)
  nameWithType: HealthRecordItem.ParseXml(IXPathNavigable)
  fullName: Microsoft.Health.HealthRecordItem.ParseXml(System.Xml.XPath.IXPathNavigable)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.ParseXml(System.Xml.XPath.IXPathNavigable)
    name: ParseXml
    nameWithType: HealthRecordItem.ParseXml
    fullName: Microsoft.Health.HealthRecordItem.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.IXPathNavigable
    name: IXPathNavigable
    nameWithType: IXPathNavigable
    fullName: System.Xml.XPath.IXPathNavigable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.ParseXml(System.Xml.XPath.IXPathNavigable)
    name: ParseXml
    nameWithType: HealthRecordItem.ParseXml
    fullName: Microsoft.Health.HealthRecordItem.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.IXPathNavigable
    name: IXPathNavigable
    nameWithType: IXPathNavigable
    fullName: System.Xml.XPath.IXPathNavigable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Old.Spirometer.ParseXml*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.Spirometer.ParseXml
  isExternal: false
  name: ParseXml
  nameWithType: Spirometer.ParseXml
  fullName: Microsoft.Health.ItemTypes.Old.Spirometer.ParseXml
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
- uid: System.Xml.XPath.IXPathNavigable
  commentId: T:System.Xml.XPath.IXPathNavigable
  parent: System.Xml.XPath
  isExternal: true
  name: IXPathNavigable
  nameWithType: IXPathNavigable
  fullName: System.Xml.XPath.IXPathNavigable
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: false
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: Microsoft.Health.ItemTypes.Old.Spirometer.When
  commentId: P:Microsoft.Health.ItemTypes.Old.Spirometer.When
- uid: Microsoft.Health.HealthRecordItem.WriteXml(System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.HealthRecordItem.WriteXml(System.Xml.XmlWriter)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: true
  name: WriteXml(XmlWriter)
  nameWithType: HealthRecordItem.WriteXml(XmlWriter)
  fullName: Microsoft.Health.HealthRecordItem.WriteXml(System.Xml.XmlWriter)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItem.WriteXml
    fullName: Microsoft.Health.HealthRecordItem.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItem.WriteXml
    fullName: Microsoft.Health.HealthRecordItem.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Old.Spirometer.WriteXml*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.Spirometer.WriteXml
  isExternal: false
  name: WriteXml
  nameWithType: Spirometer.WriteXml
  fullName: Microsoft.Health.ItemTypes.Old.Spirometer.WriteXml
- uid: Microsoft.Health.HealthRecordItemSerializationException
  commentId: T:Microsoft.Health.HealthRecordItemSerializationException
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: Microsoft.Health.ItemTypes.Old.Spirometer.When*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.Spirometer.When
  isExternal: false
  name: When
  nameWithType: Spirometer.When
  fullName: Microsoft.Health.ItemTypes.Old.Spirometer.When
- uid: Microsoft.Health.ItemTypes.Old.Spirometer.ForcedExpiratoryVolume*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.Spirometer.ForcedExpiratoryVolume
  isExternal: false
  name: ForcedExpiratoryVolume
  nameWithType: Spirometer.ForcedExpiratoryVolume
  fullName: Microsoft.Health.ItemTypes.Old.Spirometer.ForcedExpiratoryVolume
- uid: Microsoft.Health.ItemTypes.FlowMeasurement
  commentId: T:Microsoft.Health.ItemTypes.FlowMeasurement
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: FlowMeasurement
  nameWithType: FlowMeasurement
  fullName: Microsoft.Health.ItemTypes.FlowMeasurement
- uid: Microsoft.Health.ItemTypes.Old.Spirometer.PeakExpiratoryFlow*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.Spirometer.PeakExpiratoryFlow
  isExternal: false
  name: PeakExpiratoryFlow
  nameWithType: Spirometer.PeakExpiratoryFlow
  fullName: Microsoft.Health.ItemTypes.Old.Spirometer.PeakExpiratoryFlow
- uid: Microsoft.Health.ItemTypes.Old.Spirometer.Warnings*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.Spirometer.Warnings
  isExternal: false
  name: Warnings
  nameWithType: Spirometer.Warnings
  fullName: Microsoft.Health.ItemTypes.Old.Spirometer.Warnings
- uid: System.Collections.ObjectModel.Collection{System.String}
  commentId: T:System.Collections.ObjectModel.Collection{System.String}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<String>
  nameWithType: Collection<String>
  fullName: System.Collections.ObjectModel.Collection<System.String>
  nameWithType.vb: Collection(Of String)
  fullName.vb: System.Collections.ObjectModel.Collection(Of System.String)
  name.vb: Collection(Of String)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1
  commentId: T:System.Collections.ObjectModel.Collection`1
  isExternal: true
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  nameWithType.vb: Collection(Of T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T)
  name.vb: Collection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: Microsoft.Health.ItemTypes.Old.Spirometer.Problems*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.Spirometer.Problems
  isExternal: false
  name: Problems
  nameWithType: Spirometer.Problems
  fullName: Microsoft.Health.ItemTypes.Old.Spirometer.Problems
- uid: Microsoft.Health.ItemTypes.Old.Spirometer.FevOverFvc*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.Spirometer.FevOverFvc
  isExternal: false
  name: FevOverFvc
  nameWithType: Spirometer.FevOverFvc
  fullName: Microsoft.Health.ItemTypes.Old.Spirometer.FevOverFvc
- uid: System.Nullable{System.Double}
  commentId: T:System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  nameWithType.vb: Nullable(Of Double)
  fullName.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Old.Spirometer.Fef25to75*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.Spirometer.Fef25to75
  isExternal: false
  name: Fef25to75
  nameWithType: Spirometer.Fef25to75
  fullName: Microsoft.Health.ItemTypes.Old.Spirometer.Fef25to75
- uid: Microsoft.Health.ItemTypes.Old.Spirometer.Fef25to50*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.Spirometer.Fef25to50
  isExternal: false
  name: Fef25to50
  nameWithType: Spirometer.Fef25to50
  fullName: Microsoft.Health.ItemTypes.Old.Spirometer.Fef25to50
- uid: Microsoft.Health.ItemTypes.Old.Spirometer.Fif25to75*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.Spirometer.Fif25to75
  isExternal: false
  name: Fif25to75
  nameWithType: Spirometer.Fif25to75
  fullName: Microsoft.Health.ItemTypes.Old.Spirometer.Fif25to75
- uid: Microsoft.Health.ItemTypes.Old.Spirometer.Fif25to50*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.Spirometer.Fif25to50
  isExternal: false
  name: Fif25to50
  nameWithType: Spirometer.Fif25to50
  fullName: Microsoft.Health.ItemTypes.Old.Spirometer.Fif25to50
- uid: Microsoft.Health.ItemTypes.Old.Spirometer.ForcedExpiratoryTime*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.Spirometer.ForcedExpiratoryTime
  isExternal: false
  name: ForcedExpiratoryTime
  nameWithType: Spirometer.ForcedExpiratoryTime
  fullName: Microsoft.Health.ItemTypes.Old.Spirometer.ForcedExpiratoryTime
- uid: Microsoft.Health.ItemTypes.Old.Spirometer.SlowVitalCapacity*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.Spirometer.SlowVitalCapacity
  isExternal: false
  name: SlowVitalCapacity
  nameWithType: Spirometer.SlowVitalCapacity
  fullName: Microsoft.Health.ItemTypes.Old.Spirometer.SlowVitalCapacity
- uid: Microsoft.Health.ItemTypes.VolumeMeasurement
  commentId: T:Microsoft.Health.ItemTypes.VolumeMeasurement
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: VolumeMeasurement
  nameWithType: VolumeMeasurement
  fullName: Microsoft.Health.ItemTypes.VolumeMeasurement
- uid: Microsoft.Health.ItemTypes.Old.Spirometer.TidalVolume*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.Spirometer.TidalVolume
  isExternal: false
  name: TidalVolume
  nameWithType: Spirometer.TidalVolume
  fullName: Microsoft.Health.ItemTypes.Old.Spirometer.TidalVolume
- uid: Microsoft.Health.ItemTypes.Old.Spirometer.MaxVoluntaryVentilation*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.Spirometer.MaxVoluntaryVentilation
  isExternal: false
  name: MaxVoluntaryVentilation
  nameWithType: Spirometer.MaxVoluntaryVentilation
  fullName: Microsoft.Health.ItemTypes.Old.Spirometer.MaxVoluntaryVentilation
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Old.Spirometer.ToString*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.Spirometer.ToString
  isExternal: false
  name: ToString
  nameWithType: Spirometer.ToString
  fullName: Microsoft.Health.ItemTypes.Old.Spirometer.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
