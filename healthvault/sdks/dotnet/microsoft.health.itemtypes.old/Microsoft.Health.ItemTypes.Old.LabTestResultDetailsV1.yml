### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1
  commentId: T:Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1
  id: LabTestResultDetailsV1
  parent: Microsoft.Health.ItemTypes.Old
  children:
  - Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.#ctor
  - Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.ClinicalCode
  - Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.CollectionMethod
  - Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.Name
  - Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.Note
  - Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.ParseXml(System.Xml.XPath.XPathNavigator)
  - Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.Status
  - Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.Substance
  - Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.ToString
  - Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.Value
  - Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.When
  - Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.WriteXml(System.String,System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: LabTestResultDetailsV1
  nameWithType: LabTestResultDetailsV1
  fullName: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1
  type: Class
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/LabTestResultDetailsV1.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: LabTestResultDetailsV1
    path: LabTestResultDetailsV1.cs
    startLine: 21
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nA single laboratory test.\n"
  example: []
  syntax:
    content: 'public class LabTestResultDetailsV1 : HealthRecordItemData'
    content.vb: >-
      Public Class LabTestResultDetailsV1
          Inherits HealthRecordItemData
  inheritance:
  - System.Object
  - Microsoft.Health.ItemTypes.HealthRecordItemData
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.#ctor
  commentId: M:Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.#ctor
  id: '#ctor'
  parent: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1
  langs:
  - csharp
  - vb
  name: LabTestResultDetailsV1()
  nameWithType: LabTestResultDetailsV1.LabTestResultDetailsV1()
  fullName: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.LabTestResultDetailsV1()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/LabTestResultDetailsV1.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: LabTestResultDetailsV1.cs
    startLine: 28
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nInitialize a new instance of the <xref href=\"Microsoft.Health.ItemTypes.LabTestResultDetails\" data-throw-if-not-resolved=\"false\"></xref> \nclass with default values.\n"
  example: []
  syntax:
    content: public LabTestResultDetailsV1()
    content.vb: Public Sub New
  overload: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.ParseXml(System.Xml.XPath.XPathNavigator)
  id: ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1
  langs:
  - csharp
  - vb
  name: ParseXml(XPathNavigator)
  nameWithType: LabTestResultDetailsV1.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.ParseXml(System.Xml.XPath.XPathNavigator)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/LabTestResultDetailsV1.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ParseXml
    path: LabTestResultDetailsV1.cs
    startLine: 45
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nPopulates this <xref href=\"Microsoft.Health.ItemTypes.LabTestResultDetails\" data-throw-if-not-resolved=\"false\"></xref> instance from the data in the XML. \n"
  example: []
  syntax:
    content: public override void ParseXml(XPathNavigator navigator)
    content.vb: Public Overrides Sub ParseXml(navigator As XPathNavigator)
    parameters:
    - id: navigator
      type: System.Xml.XPath.XPathNavigator
      description: "\nThe XML to get the lab test result type data from.\n"
  overridden: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  overload: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.ParseXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nIf the first node in <span class=\"paramref\">navigator</span> is not\na lab test result type node.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.WriteXml(System.String,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.WriteXml(System.String,System.Xml.XmlWriter)
  id: WriteXml(System.String,System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1
  langs:
  - csharp
  - vb
  name: WriteXml(String, XmlWriter)
  nameWithType: LabTestResultDetailsV1.WriteXml(String, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.WriteXml(System.String, System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/LabTestResultDetailsV1.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteXml
    path: LabTestResultDetailsV1.cs
    startLine: 102
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nWrites the lab test result type data to the specified XmlWriter.\n"
  example: []
  syntax:
    content: public override void WriteXml(string nodeName, XmlWriter writer)
    content.vb: Public Overrides Sub WriteXml(nodeName As String, writer As XmlWriter)
    parameters:
    - id: nodeName
      type: System.String
      description: "\nThe name of the node to write XML output.\n"
    - id: writer
      type: System.Xml.XmlWriter
      description: "\nThe XmlWriter to write the lab test result type data to.\n"
  overridden: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  overload: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.WriteXml*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nIf <span class=\"paramref\">nodeName</span> is <strong> null </strong> or empty.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nIf <span class=\"paramref\">writer</span> is <strong> null </strong>.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.When
  commentId: P:Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.When
  id: When
  parent: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1
  langs:
  - csharp
  - vb
  name: When
  nameWithType: LabTestResultDetailsV1.When
  fullName: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.When
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/LabTestResultDetailsV1.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: When
    path: LabTestResultDetailsV1.cs
    startLine: 171
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets or sets date and the time of the laboratory test.  \n"
  remarks: "\nThey should be set to <strong>null</strong> if they are unknown. \n"
  example: []
  syntax:
    content: public ApproximateDateTime When { get; set; }
    content.vb: Public Property When As ApproximateDateTime
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.ApproximateDateTime
  overload: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.When*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.Name
  commentId: P:Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.Name
  id: Name
  parent: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: LabTestResultDetailsV1.Name
  fullName: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.Name
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/LabTestResultDetailsV1.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Name
    path: LabTestResultDetailsV1.cs
    startLine: 186
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets or sets name of the laboratory test.  \n"
  remarks: "\nIt should be set to <strong>null</strong> or empty if it is unknown.\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.Substance
  commentId: P:Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.Substance
  id: Substance
  parent: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1
  langs:
  - csharp
  - vb
  name: Substance
  nameWithType: LabTestResultDetailsV1.Substance
  fullName: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.Substance
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/LabTestResultDetailsV1.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Substance
    path: LabTestResultDetailsV1.cs
    startLine: 201
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets or sets substance that is tested.  \n"
  remarks: "\nIt should be set to <strong>null</strong> if it is unknown.\n"
  example: []
  syntax:
    content: public CodableValue Substance { get; set; }
    content.vb: Public Property Substance As CodableValue
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.CodableValue
  overload: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.Substance*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.CollectionMethod
  commentId: P:Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.CollectionMethod
  id: CollectionMethod
  parent: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1
  langs:
  - csharp
  - vb
  name: CollectionMethod
  nameWithType: LabTestResultDetailsV1.CollectionMethod
  fullName: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.CollectionMethod
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/LabTestResultDetailsV1.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CollectionMethod
    path: LabTestResultDetailsV1.cs
    startLine: 216
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets or sets the collection method for the laboratory test.  \n"
  remarks: "\nIt should be set to <strong>null</strong> if it is unknown.\n"
  example: []
  syntax:
    content: public CodableValue CollectionMethod { get; set; }
    content.vb: Public Property CollectionMethod As CodableValue
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.CodableValue
  overload: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.CollectionMethod*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.ClinicalCode
  commentId: P:Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.ClinicalCode
  id: ClinicalCode
  parent: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1
  langs:
  - csharp
  - vb
  name: ClinicalCode
  nameWithType: LabTestResultDetailsV1.ClinicalCode
  fullName: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.ClinicalCode
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/LabTestResultDetailsV1.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ClinicalCode
    path: LabTestResultDetailsV1.cs
    startLine: 231
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets or sets the clinical code for the lab tests.  \n"
  remarks: "\nIt should be set to <strong>null</strong> if it is unknown.\n"
  example: []
  syntax:
    content: public CodableValue ClinicalCode { get; set; }
    content.vb: Public Property ClinicalCode As CodableValue
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.CodableValue
  overload: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.ClinicalCode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.Value
  commentId: P:Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.Value
  id: Value
  parent: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: LabTestResultDetailsV1.Value
  fullName: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.Value
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/LabTestResultDetailsV1.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Value
    path: LabTestResultDetailsV1.cs
    startLine: 248
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets or sets the clinical value within a laboratory result. \n"
  remarks: "\nThe type of value is defined within a laboratory result, which includes \nvalue, unit, reference and toxic range. It should be set to <strong>null</strong> \nif it is unknown.\n"
  example: []
  syntax:
    content: public LabTestResultValueV1 Value { get; set; }
    content.vb: Public Property Value As LabTestResultValueV1
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.Old.LabTestResultValueV1
  overload: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.Value*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.Status
  commentId: P:Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.Status
  id: Status
  parent: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: LabTestResultDetailsV1.Status
  fullName: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.Status
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/LabTestResultDetailsV1.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Status
    path: LabTestResultDetailsV1.cs
    startLine: 264
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets or sets the status of the laboratory results.  \n"
  remarks: "\nExamples of status include complete and pending. It should be \nset to <strong>null</strong> if it is unknown. \n"
  example: []
  syntax:
    content: public CodableValue Status { get; set; }
    content.vb: Public Property Status As CodableValue
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.CodableValue
  overload: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.Status*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.Note
  commentId: P:Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.Note
  id: Note
  parent: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1
  langs:
  - csharp
  - vb
  name: Note
  nameWithType: LabTestResultDetailsV1.Note
  fullName: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.Note
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/LabTestResultDetailsV1.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Note
    path: LabTestResultDetailsV1.cs
    startLine: 284
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets or sets a note that augments the laboratory result.  \n"
  remarks: "\nThere are two scenarios in which a note is typically added:\nA note may provide additional information about interpreting \nthe result beyond what is stored in the ranges associated with \nthe value. \nOr, a note may be use to provide the textual result of a lab test\nthat does not have a measured value.\n"
  example: []
  syntax:
    content: public string Note { get; set; }
    content.vb: Public Property Note As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.Note*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.ToString
  commentId: M:Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.ToString
  id: ToString
  parent: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: LabTestResultDetailsV1.ToString()
  fullName: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.ToString()
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes.Old/LabTestResultDetailsV1.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ToString
    path: LabTestResultDetailsV1.cs
    startLine: 299
  assemblies:
  - Microsoft.Health.ItemTypes.Old
  namespace: Microsoft.Health.ItemTypes.Old
  summary: "\nGets a string representation of the lab test result type item.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\nA string representation of the lab test result type item.\n"
  overridden: System.Object.ToString
  overload: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Health.ItemTypes.Old
  commentId: N:Microsoft.Health.ItemTypes.Old
  isExternal: false
  name: Microsoft.Health.ItemTypes.Old
  nameWithType: Microsoft.Health.ItemTypes.Old
  fullName: Microsoft.Health.ItemTypes.Old
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData
  commentId: T:Microsoft.Health.ItemTypes.HealthRecordItemData
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: HealthRecordItemData
  nameWithType: HealthRecordItemData
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.ItemTypes
  commentId: N:Microsoft.Health.ItemTypes
  isExternal: false
  name: Microsoft.Health.ItemTypes
  nameWithType: Microsoft.Health.ItemTypes
  fullName: Microsoft.Health.ItemTypes
- uid: Microsoft.Health.ItemTypes.LabTestResultDetails
  commentId: T:Microsoft.Health.ItemTypes.LabTestResultDetails
- uid: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.#ctor*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.#ctor
  isExternal: false
  name: LabTestResultDetailsV1
  nameWithType: LabTestResultDetailsV1.LabTestResultDetailsV1
  fullName: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.LabTestResultDetailsV1
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.HealthRecordItemData
  isExternal: true
  name: ParseXml(XPathNavigator)
  nameWithType: HealthRecordItemData.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: HealthRecordItemData.ParseXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: HealthRecordItemData.ParseXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.ParseXml*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.ParseXml
  isExternal: false
  name: ParseXml
  nameWithType: LabTestResultDetailsV1.ParseXml
  fullName: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.ParseXml
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.Xml.XPath.XPathNavigator
  commentId: T:System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: true
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: false
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.HealthRecordItemData
  isExternal: true
  name: WriteXml(String, XmlWriter)
  nameWithType: HealthRecordItemData.WriteXml(String, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String, System.Xml.XmlWriter)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItemData.WriteXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItemData.WriteXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.WriteXml*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.WriteXml
  isExternal: false
  name: WriteXml
  nameWithType: LabTestResultDetailsV1.WriteXml
  fullName: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.WriteXml
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.When*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.When
  isExternal: false
  name: When
  nameWithType: LabTestResultDetailsV1.When
  fullName: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.When
- uid: Microsoft.Health.ItemTypes.ApproximateDateTime
  commentId: T:Microsoft.Health.ItemTypes.ApproximateDateTime
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: ApproximateDateTime
  nameWithType: ApproximateDateTime
  fullName: Microsoft.Health.ItemTypes.ApproximateDateTime
- uid: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.Name*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.Name
  isExternal: false
  name: Name
  nameWithType: LabTestResultDetailsV1.Name
  fullName: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.Name
- uid: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.Substance*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.Substance
  isExternal: false
  name: Substance
  nameWithType: LabTestResultDetailsV1.Substance
  fullName: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.Substance
- uid: Microsoft.Health.ItemTypes.CodableValue
  commentId: T:Microsoft.Health.ItemTypes.CodableValue
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: CodableValue
  nameWithType: CodableValue
  fullName: Microsoft.Health.ItemTypes.CodableValue
- uid: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.CollectionMethod*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.CollectionMethod
  isExternal: false
  name: CollectionMethod
  nameWithType: LabTestResultDetailsV1.CollectionMethod
  fullName: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.CollectionMethod
- uid: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.ClinicalCode*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.ClinicalCode
  isExternal: false
  name: ClinicalCode
  nameWithType: LabTestResultDetailsV1.ClinicalCode
  fullName: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.ClinicalCode
- uid: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.Value*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.Value
  isExternal: false
  name: Value
  nameWithType: LabTestResultDetailsV1.Value
  fullName: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.Value
- uid: Microsoft.Health.ItemTypes.Old.LabTestResultValueV1
  commentId: T:Microsoft.Health.ItemTypes.Old.LabTestResultValueV1
  parent: Microsoft.Health.ItemTypes.Old
  isExternal: false
  name: LabTestResultValueV1
  nameWithType: LabTestResultValueV1
  fullName: Microsoft.Health.ItemTypes.Old.LabTestResultValueV1
- uid: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.Status*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.Status
  isExternal: false
  name: Status
  nameWithType: LabTestResultDetailsV1.Status
  fullName: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.Status
- uid: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.Note*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.Note
  isExternal: false
  name: Note
  nameWithType: LabTestResultDetailsV1.Note
  fullName: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.Note
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.ToString*
  commentId: Overload:Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.ToString
  isExternal: false
  name: ToString
  nameWithType: LabTestResultDetailsV1.ToString
  fullName: Microsoft.Health.ItemTypes.Old.LabTestResultDetailsV1.ToString
