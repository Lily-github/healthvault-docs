### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.ItemTypes.ApproximateDate
  commentId: T:Microsoft.Health.ItemTypes.ApproximateDate
  id: ApproximateDate
  parent: Microsoft.Health.ItemTypes
  children:
  - Microsoft.Health.ItemTypes.ApproximateDate.#ctor
  - Microsoft.Health.ItemTypes.ApproximateDate.#ctor(System.Int32)
  - Microsoft.Health.ItemTypes.ApproximateDate.#ctor(System.Int32,System.Int32)
  - Microsoft.Health.ItemTypes.ApproximateDate.#ctor(System.Int32,System.Int32,System.Int32)
  - Microsoft.Health.ItemTypes.ApproximateDate.CompareTo(Microsoft.Health.ItemTypes.ApproximateDate)
  - Microsoft.Health.ItemTypes.ApproximateDate.CompareTo(System.DateTime)
  - Microsoft.Health.ItemTypes.ApproximateDate.CompareTo(System.Object)
  - Microsoft.Health.ItemTypes.ApproximateDate.Day
  - Microsoft.Health.ItemTypes.ApproximateDate.Equals(System.Object)
  - Microsoft.Health.ItemTypes.ApproximateDate.GetHashCode
  - Microsoft.Health.ItemTypes.ApproximateDate.Month
  - Microsoft.Health.ItemTypes.ApproximateDate.op_Equality(Microsoft.Health.ItemTypes.ApproximateDate,System.Object)
  - Microsoft.Health.ItemTypes.ApproximateDate.op_GreaterThan(Microsoft.Health.ItemTypes.ApproximateDate,System.Object)
  - Microsoft.Health.ItemTypes.ApproximateDate.op_Inequality(Microsoft.Health.ItemTypes.ApproximateDate,System.Object)
  - Microsoft.Health.ItemTypes.ApproximateDate.op_LessThan(Microsoft.Health.ItemTypes.ApproximateDate,System.Object)
  - Microsoft.Health.ItemTypes.ApproximateDate.ParseXml(System.Xml.XPath.XPathNavigator)
  - Microsoft.Health.ItemTypes.ApproximateDate.ToString
  - Microsoft.Health.ItemTypes.ApproximateDate.WriteXml(System.String,System.Xml.XmlWriter)
  - Microsoft.Health.ItemTypes.ApproximateDate.Year
  langs:
  - csharp
  - vb
  name: ApproximateDate
  nameWithType: ApproximateDate
  fullName: Microsoft.Health.ItemTypes.ApproximateDate
  type: Class
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ApproximateDate.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ApproximateDate
    path: ../Microsoft.Health.ItemTypes/ApproximateDate.cs
    startLine: 26
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nRepresents an approximation of a date.\n"
  remarks: "\nAn approximation of a date must have a year. The month, day, or both \nare optional.\n"
  example: []
  syntax:
    content: 'public class ApproximateDate : HealthRecordItemData, IComparable, IComparable<ApproximateDate>, IComparable<DateTime>'
    content.vb: >-
      Public Class ApproximateDate
          Inherits HealthRecordItemData
          Implements IComparable, IComparable(Of ApproximateDate), IComparable(Of Date)
  inheritance:
  - System.Object
  - Microsoft.Health.ItemTypes.HealthRecordItemData
  implements:
  - System.IComparable
  - System.IComparable{Microsoft.Health.ItemTypes.ApproximateDate}
  - System.IComparable{System.DateTime}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.ItemTypes.ApproximateDate.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.ItemTypes.ApproximateDate.#ctor
  commentId: M:Microsoft.Health.ItemTypes.ApproximateDate.#ctor
  id: '#ctor'
  parent: Microsoft.Health.ItemTypes.ApproximateDate
  langs:
  - csharp
  - vb
  name: ApproximateDate()
  nameWithType: ApproximateDate.ApproximateDate()
  fullName: Microsoft.Health.ItemTypes.ApproximateDate.ApproximateDate()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ApproximateDate.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.ItemTypes/ApproximateDate.cs
    startLine: 37
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.ApproximateDate\" data-throw-if-not-resolved=\"false\"></xref> class \nusing default values.\n"
  example: []
  syntax:
    content: public ApproximateDate()
    content.vb: Public Sub New
  overload: Microsoft.Health.ItemTypes.ApproximateDate.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.ApproximateDate.#ctor(System.Int32)
  commentId: M:Microsoft.Health.ItemTypes.ApproximateDate.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: Microsoft.Health.ItemTypes.ApproximateDate
  langs:
  - csharp
  - vb
  name: ApproximateDate(Int32)
  nameWithType: ApproximateDate.ApproximateDate(Int32)
  fullName: Microsoft.Health.ItemTypes.ApproximateDate.ApproximateDate(System.Int32)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ApproximateDate.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.ItemTypes/ApproximateDate.cs
    startLine: 55
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.ApproximateDate\" data-throw-if-not-resolved=\"false\"></xref> class \nwith the specified year.\n"
  example: []
  syntax:
    content: public ApproximateDate(int year)
    content.vb: Public Sub New(year As Integer)
    parameters:
    - id: year
      type: System.Int32
      description: "\nA year between 1000 and 9999.\n"
  overload: Microsoft.Health.ItemTypes.ApproximateDate.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nThe <span class=\"paramref\">year</span> parameter is less than 1000 or greater \nthan 9999.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.ApproximateDate.#ctor(System.Int32,System.Int32)
  commentId: M:Microsoft.Health.ItemTypes.ApproximateDate.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: Microsoft.Health.ItemTypes.ApproximateDate
  langs:
  - csharp
  - vb
  name: ApproximateDate(Int32, Int32)
  nameWithType: ApproximateDate.ApproximateDate(Int32, Int32)
  fullName: Microsoft.Health.ItemTypes.ApproximateDate.ApproximateDate(System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ApproximateDate.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.ItemTypes/ApproximateDate.cs
    startLine: 80
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.ApproximateDate\" data-throw-if-not-resolved=\"false\"></xref> class \nwith the specified year and month.\n"
  example: []
  syntax:
    content: public ApproximateDate(int year, int month)
    content.vb: Public Sub New(year As Integer, month As Integer)
    parameters:
    - id: year
      type: System.Int32
      description: "\nA year between 1000 and 9999.\n"
    - id: month
      type: System.Int32
      description: "\nA month between 1 and 12.\n"
  overload: Microsoft.Health.ItemTypes.ApproximateDate.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nThe <span class=\"paramref\">year</span> parameter is less than 1000 or greater \nthan 9999, or the <span class=\"paramref\">month</span> parameter is less than \n1 or greater than 12.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.ApproximateDate.#ctor(System.Int32,System.Int32,System.Int32)
  commentId: M:Microsoft.Health.ItemTypes.ApproximateDate.#ctor(System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32)'
  parent: Microsoft.Health.ItemTypes.ApproximateDate
  langs:
  - csharp
  - vb
  name: ApproximateDate(Int32, Int32, Int32)
  nameWithType: ApproximateDate.ApproximateDate(Int32, Int32, Int32)
  fullName: Microsoft.Health.ItemTypes.ApproximateDate.ApproximateDate(System.Int32, System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ApproximateDate.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.ItemTypes/ApproximateDate.cs
    startLine: 110
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.ApproximateDate\" data-throw-if-not-resolved=\"false\"></xref> class \nwith the specified year, month, and day.\n"
  example: []
  syntax:
    content: public ApproximateDate(int year, int month, int day)
    content.vb: Public Sub New(year As Integer, month As Integer, day As Integer)
    parameters:
    - id: year
      type: System.Int32
      description: "\nA year between 1000 and 9999.\n"
    - id: month
      type: System.Int32
      description: "\nA month between 1 and 12.\n"
    - id: day
      type: System.Int32
      description: "\nA day between 1 and 31.\n"
  overload: Microsoft.Health.ItemTypes.ApproximateDate.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nThe <span class=\"paramref\">year</span> parameter is less than 1000 or greater than\n9999, or the <span class=\"paramref\">month</span> parameter is less than 1 or \ngreater than 12, or the <span class=\"paramref\">day</span> parameter is less \nthan 1 or greater than 31.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.ApproximateDate.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.ApproximateDate.ParseXml(System.Xml.XPath.XPathNavigator)
  id: ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.ApproximateDate
  langs:
  - csharp
  - vb
  name: ParseXml(XPathNavigator)
  nameWithType: ApproximateDate.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.ApproximateDate.ParseXml(System.Xml.XPath.XPathNavigator)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ApproximateDate.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ParseXml
    path: ../Microsoft.Health.ItemTypes/ApproximateDate.cs
    startLine: 129
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nPopulates the data for the approximate date from the XML.\n"
  example: []
  syntax:
    content: public override void ParseXml(XPathNavigator navigator)
    content.vb: Public Overrides Sub ParseXml(navigator As XPathNavigator)
    parameters:
    - id: navigator
      type: System.Xml.XPath.XPathNavigator
      description: "\nThe XML node representing the approximate date.\n"
  overridden: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  overload: Microsoft.Health.ItemTypes.ApproximateDate.ParseXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">navigator</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.ApproximateDate.WriteXml(System.String,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.ApproximateDate.WriteXml(System.String,System.Xml.XmlWriter)
  id: WriteXml(System.String,System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.ApproximateDate
  langs:
  - csharp
  - vb
  name: WriteXml(String, XmlWriter)
  nameWithType: ApproximateDate.WriteXml(String, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.ApproximateDate.WriteXml(System.String, System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ApproximateDate.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteXml
    path: ../Microsoft.Health.ItemTypes/ApproximateDate.cs
    startLine: 168
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nWrites the approximate date to the specified XML writer.\n"
  example: []
  syntax:
    content: public override void WriteXml(string nodeName, XmlWriter writer)
    content.vb: Public Overrides Sub WriteXml(nodeName As String, writer As XmlWriter)
    parameters:
    - id: nodeName
      type: System.String
      description: "\nThe name of the outer element for the approximate date.\n"
    - id: writer
      type: System.Xml.XmlWriter
      description: "\nThe XmlWriter to write the approximate date to.\n"
  overridden: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  overload: Microsoft.Health.ItemTypes.ApproximateDate.WriteXml*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">nodeName</span> parameter is <strong>null</strong> or empty.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">writer</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.ApproximateDate.Year
  commentId: P:Microsoft.Health.ItemTypes.ApproximateDate.Year
  id: Year
  parent: Microsoft.Health.ItemTypes.ApproximateDate
  langs:
  - csharp
  - vb
  name: Year
  nameWithType: ApproximateDate.Year
  fullName: Microsoft.Health.ItemTypes.ApproximateDate.Year
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ApproximateDate.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Year
    path: ../Microsoft.Health.ItemTypes/ApproximateDate.cs
    startLine: 210
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the year of the date approximation.\n"
  remarks: "\nThis value defaults to the current year.\n"
  example: []
  syntax:
    content: public int Year { get; set; }
    content.vb: Public Property Year As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\nAn integer representing the year.\n"
  overload: Microsoft.Health.ItemTypes.ApproximateDate.Year*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nThe <span class=\"paramref\">value</span> parameter is less than 1000 or greater than 9999.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.ApproximateDate.Month
  commentId: P:Microsoft.Health.ItemTypes.ApproximateDate.Month
  id: Month
  parent: Microsoft.Health.ItemTypes.ApproximateDate
  langs:
  - csharp
  - vb
  name: Month
  nameWithType: ApproximateDate.Month
  fullName: Microsoft.Health.ItemTypes.ApproximateDate.Month
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ApproximateDate.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Month
    path: ../Microsoft.Health.ItemTypes/ApproximateDate.cs
    startLine: 241
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the month of the date approximation.\n"
  remarks: "\nIf the month is unknown, it can be set to <strong>null</strong>. This value \ndefaults to <strong>null</strong>.\n"
  example: []
  syntax:
    content: public int ? Month { get; set; }
    content.vb: Public Property Month As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: "\nAn integer representing the month.\n"
  overload: Microsoft.Health.ItemTypes.ApproximateDate.Month*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nThe <span class=\"paramref\">value</span> parameter is less than 1 or greater than 12.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.ApproximateDate.Day
  commentId: P:Microsoft.Health.ItemTypes.ApproximateDate.Day
  id: Day
  parent: Microsoft.Health.ItemTypes.ApproximateDate
  langs:
  - csharp
  - vb
  name: Day
  nameWithType: ApproximateDate.Day
  fullName: Microsoft.Health.ItemTypes.ApproximateDate.Day
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ApproximateDate.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Day
    path: ../Microsoft.Health.ItemTypes/ApproximateDate.cs
    startLine: 272
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the day of the date approximation.\n"
  remarks: "\nIf the day is unknown, it can be set to <strong>null</strong>. This value \ndefaults to <strong>null</strong>.\n"
  example: []
  syntax:
    content: public int ? Day { get; set; }
    content.vb: Public Property Day As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: "\nAn integer representing the day.\n"
  overload: Microsoft.Health.ItemTypes.ApproximateDate.Day*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nThe <span class=\"paramref\">value</span> parameter is less than 1 or greater than 31.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.ApproximateDate.CompareTo(System.Object)
  commentId: M:Microsoft.Health.ItemTypes.ApproximateDate.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: Microsoft.Health.ItemTypes.ApproximateDate
  langs:
  - csharp
  - vb
  name: CompareTo(Object)
  nameWithType: ApproximateDate.CompareTo(Object)
  fullName: Microsoft.Health.ItemTypes.ApproximateDate.CompareTo(System.Object)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ApproximateDate.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CompareTo
    path: ../Microsoft.Health.ItemTypes/ApproximateDate.cs
    startLine: 310
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCompares the specified object to this ApproximateDate object.\n"
  example: []
  syntax:
    content: public int CompareTo(object obj)
    content.vb: Public Function CompareTo(obj As Object) As Integer
    parameters:
    - id: obj
      type: System.Object
      description: "\nThe object to be compared.\n"
    return:
      type: System.Int32
      description: "\nA 32-bit signed integer that indicates the relative order of the \nobjects being compared. If the result is less than zero, the \ninstance is less than <span class=\"paramref\">obj</span>. If the result is zero, \nthe instance is equal to <span class=\"paramref\">obj</span>. If the result is\ngreater than zero, the instance is greater than \n<span class=\"paramref\">obj</span>.\n"
  overload: Microsoft.Health.ItemTypes.ApproximateDate.CompareTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">obj</span> parameter is not an <xref href=\"Microsoft.Health.ItemTypes.ApproximateDate\" data-throw-if-not-resolved=\"false\"></xref>\nor <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  implements:
  - System.IComparable.CompareTo(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.ApproximateDate.CompareTo(Microsoft.Health.ItemTypes.ApproximateDate)
  commentId: M:Microsoft.Health.ItemTypes.ApproximateDate.CompareTo(Microsoft.Health.ItemTypes.ApproximateDate)
  id: CompareTo(Microsoft.Health.ItemTypes.ApproximateDate)
  parent: Microsoft.Health.ItemTypes.ApproximateDate
  langs:
  - csharp
  - vb
  name: CompareTo(ApproximateDate)
  nameWithType: ApproximateDate.CompareTo(ApproximateDate)
  fullName: Microsoft.Health.ItemTypes.ApproximateDate.CompareTo(Microsoft.Health.ItemTypes.ApproximateDate)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ApproximateDate.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CompareTo
    path: ../Microsoft.Health.ItemTypes/ApproximateDate.cs
    startLine: 359
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCompares the specified object to this <xref href=\"Microsoft.Health.ItemTypes.ApproximateDate\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  example: []
  syntax:
    content: public int CompareTo(ApproximateDate other)
    content.vb: Public Function CompareTo(other As ApproximateDate) As Integer
    parameters:
    - id: other
      type: Microsoft.Health.ItemTypes.ApproximateDate
      description: "\nThe date to be compared.\n"
    return:
      type: System.Int32
      description: "\nA 32-bit signed integer that indicates the relative order of the \nobjects being compared. If the result is less than zero, the \ninstance is less than <span class=\"paramref\">other</span>. If the result is zero, \nthe instance is equal to <span class=\"paramref\">other</span>. If the result is\ngreater than zero, the instance is greater than \n<span class=\"paramref\">other</span>.\n"
  overload: Microsoft.Health.ItemTypes.ApproximateDate.CompareTo*
  implements:
  - System.IComparable{Microsoft.Health.ItemTypes.ApproximateDate}.CompareTo(Microsoft.Health.ItemTypes.ApproximateDate)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.ApproximateDate.CompareTo(System.DateTime)
  commentId: M:Microsoft.Health.ItemTypes.ApproximateDate.CompareTo(System.DateTime)
  id: CompareTo(System.DateTime)
  parent: Microsoft.Health.ItemTypes.ApproximateDate
  langs:
  - csharp
  - vb
  name: CompareTo(DateTime)
  nameWithType: ApproximateDate.CompareTo(DateTime)
  fullName: Microsoft.Health.ItemTypes.ApproximateDate.CompareTo(System.DateTime)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ApproximateDate.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CompareTo
    path: ../Microsoft.Health.ItemTypes/ApproximateDate.cs
    startLine: 417
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCompares the specified object to this <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  example: []
  syntax:
    content: public int CompareTo(DateTime other)
    content.vb: Public Function CompareTo(other As Date) As Integer
    parameters:
    - id: other
      type: System.DateTime
      description: "\nThe date to be compared.\n"
    return:
      type: System.Int32
      description: "\nA 32-bit signed integer that indicates the relative order of the \nobjects being compared. If the result is less than zero, the \ninstance is less than <span class=\"paramref\">other</span>. If the result is zero, \nthe instance is equal to <span class=\"paramref\">other</span>. If the result is\ngreater than zero, the instance is greater than \n<span class=\"paramref\">other</span>.\n"
  overload: Microsoft.Health.ItemTypes.ApproximateDate.CompareTo*
  implements:
  - System.IComparable{System.DateTime}.CompareTo(System.DateTime)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.ApproximateDate.Equals(System.Object)
  commentId: M:Microsoft.Health.ItemTypes.ApproximateDate.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.Health.ItemTypes.ApproximateDate
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: ApproximateDate.Equals(Object)
  fullName: Microsoft.Health.ItemTypes.ApproximateDate.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ApproximateDate.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Equals
    path: ../Microsoft.Health.ItemTypes/ApproximateDate.cs
    startLine: 476
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets a value indicating whether the specified object is equal to this object.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: "\nThe object to be compared.\n"
    return:
      type: System.Boolean
      description: "\n<strong>true</strong> if the <span class=\"paramref\">obj</span> is an \n<xref href=\"Microsoft.Health.ItemTypes.ApproximateDate\" data-throw-if-not-resolved=\"false\"></xref> object and the year, month, and\nday exactly match the year, month, and day of this object; otherwise,\n<strong>false</strong>.\n"
  overridden: System.Object.Equals(System.Object)
  overload: Microsoft.Health.ItemTypes.ApproximateDate.Equals*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">obj</span> parameter is not an <xref href=\"Microsoft.Health.ItemTypes.ApproximateDate\" data-throw-if-not-resolved=\"false\"></xref> or\n<xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.ApproximateDate.GetHashCode
  commentId: M:Microsoft.Health.ItemTypes.ApproximateDate.GetHashCode
  id: GetHashCode
  parent: Microsoft.Health.ItemTypes.ApproximateDate
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: ApproximateDate.GetHashCode()
  fullName: Microsoft.Health.ItemTypes.ApproximateDate.GetHashCode()
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ApproximateDate.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetHashCode
    path: ../Microsoft.Health.ItemTypes/ApproximateDate.cs
    startLine: 489
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nSee the base class documentation.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: "\nSee the base class documentation.\n"
  overridden: System.Object.GetHashCode
  overload: Microsoft.Health.ItemTypes.ApproximateDate.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.ApproximateDate.op_Equality(Microsoft.Health.ItemTypes.ApproximateDate,System.Object)
  commentId: M:Microsoft.Health.ItemTypes.ApproximateDate.op_Equality(Microsoft.Health.ItemTypes.ApproximateDate,System.Object)
  id: op_Equality(Microsoft.Health.ItemTypes.ApproximateDate,System.Object)
  parent: Microsoft.Health.ItemTypes.ApproximateDate
  langs:
  - csharp
  - vb
  name: Equality(ApproximateDate, Object)
  nameWithType: ApproximateDate.Equality(ApproximateDate, Object)
  fullName: Microsoft.Health.ItemTypes.ApproximateDate.Equality(Microsoft.Health.ItemTypes.ApproximateDate, System.Object)
  type: Operator
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ApproximateDate.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: op_Equality
    path: ../Microsoft.Health.ItemTypes/ApproximateDate.cs
    startLine: 521
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets a value indicating whether the specified object is equal to the \nspecified date.\n"
  example: []
  syntax:
    content: public static bool operator ==(ApproximateDate date, object secondInstance)
    content.vb: Public Shared Operator =(date As ApproximateDate, secondInstance As Object) As Boolean
    parameters:
    - id: date
      type: Microsoft.Health.ItemTypes.ApproximateDate
      description: "\nThe date object to be compared.\n"
    - id: secondInstance
      type: System.Object
      description: "\nThe second object to be compared.\n"
    return:
      type: System.Boolean
      description: "\n<strong>true</strong> if the year, month, and day of the <span class=\"paramref\">date</span> \nexactly match the year, month, and day of <span class=\"paramref\">secondInstance</span>; otherwise,\n<strong>false</strong>.\n"
  overload: Microsoft.Health.ItemTypes.ApproximateDate.op_Equality*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">secondInstance</span> parameter is not an <xref href=\"Microsoft.Health.ItemTypes.ApproximateDate\" data-throw-if-not-resolved=\"false\"></xref> or \n<xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.ItemTypes.ApproximateDate.op_Inequality(Microsoft.Health.ItemTypes.ApproximateDate,System.Object)
  commentId: M:Microsoft.Health.ItemTypes.ApproximateDate.op_Inequality(Microsoft.Health.ItemTypes.ApproximateDate,System.Object)
  id: op_Inequality(Microsoft.Health.ItemTypes.ApproximateDate,System.Object)
  parent: Microsoft.Health.ItemTypes.ApproximateDate
  langs:
  - csharp
  - vb
  name: Inequality(ApproximateDate, Object)
  nameWithType: ApproximateDate.Inequality(ApproximateDate, Object)
  fullName: Microsoft.Health.ItemTypes.ApproximateDate.Inequality(Microsoft.Health.ItemTypes.ApproximateDate, System.Object)
  type: Operator
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ApproximateDate.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: op_Inequality
    path: ../Microsoft.Health.ItemTypes/ApproximateDate.cs
    startLine: 567
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets a value indicating whether the specified object is not equal to the specified\ndate.\n"
  example: []
  syntax:
    content: public static bool operator !=(ApproximateDate date, object secondInstance)
    content.vb: Public Shared Operator <>(date As ApproximateDate, secondInstance As Object) As Boolean
    parameters:
    - id: date
      type: Microsoft.Health.ItemTypes.ApproximateDate
      description: "\nThe date object to be compared.\n"
    - id: secondInstance
      type: System.Object
      description: "\nThe second object to be compared.\n"
    return:
      type: System.Boolean
      description: "\n<strong>false</strong> if the year, month, and day of the <span class=\"paramref\">date</span> \nexactly match the year, month, and day of <span class=\"paramref\">secondInstance</span>; \notherwise, <strong>true</strong>.\n"
  overload: Microsoft.Health.ItemTypes.ApproximateDate.op_Inequality*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">secondInstance</span> parameter is not an <xref href=\"Microsoft.Health.ItemTypes.ApproximateDate\" data-throw-if-not-resolved=\"false\"></xref> or\n<xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.ItemTypes.ApproximateDate.op_GreaterThan(Microsoft.Health.ItemTypes.ApproximateDate,System.Object)
  commentId: M:Microsoft.Health.ItemTypes.ApproximateDate.op_GreaterThan(Microsoft.Health.ItemTypes.ApproximateDate,System.Object)
  id: op_GreaterThan(Microsoft.Health.ItemTypes.ApproximateDate,System.Object)
  parent: Microsoft.Health.ItemTypes.ApproximateDate
  langs:
  - csharp
  - vb
  name: GreaterThan(ApproximateDate, Object)
  nameWithType: ApproximateDate.GreaterThan(ApproximateDate, Object)
  fullName: Microsoft.Health.ItemTypes.ApproximateDate.GreaterThan(Microsoft.Health.ItemTypes.ApproximateDate, System.Object)
  type: Operator
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ApproximateDate.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: op_GreaterThan
    path: ../Microsoft.Health.ItemTypes/ApproximateDate.cs
    startLine: 613
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets a value indicating whether the specified date is greater than \nthe specified object.\n"
  example: []
  syntax:
    content: public static bool operator>(ApproximateDate date, object secondInstance)
    content.vb: Public Shared Operator>(date As ApproximateDate, secondInstance As Object) As Boolean
    parameters:
    - id: date
      type: Microsoft.Health.ItemTypes.ApproximateDate
      description: "\nThe date object to be compared.\n"
    - id: secondInstance
      type: System.Object
      description: "\nThe second object to be compared.\n"
    return:
      type: System.Boolean
      description: "\n<strong>true</strong> if the year, month, and day of the <span class=\"paramref\">date</span> \nis greater than the year, month, and day of <span class=\"paramref\">secondInstance</span>; \notherwise, <strong>false</strong>.\n"
  overload: Microsoft.Health.ItemTypes.ApproximateDate.op_GreaterThan*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">secondInstance</span> parameter is not an <xref href=\"Microsoft.Health.ItemTypes.ApproximateDate\" data-throw-if-not-resolved=\"false\"></xref> or\n<xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.ItemTypes.ApproximateDate.op_LessThan(Microsoft.Health.ItemTypes.ApproximateDate,System.Object)
  commentId: M:Microsoft.Health.ItemTypes.ApproximateDate.op_LessThan(Microsoft.Health.ItemTypes.ApproximateDate,System.Object)
  id: op_LessThan(Microsoft.Health.ItemTypes.ApproximateDate,System.Object)
  parent: Microsoft.Health.ItemTypes.ApproximateDate
  langs:
  - csharp
  - vb
  name: LessThan(ApproximateDate, Object)
  nameWithType: ApproximateDate.LessThan(ApproximateDate, Object)
  fullName: Microsoft.Health.ItemTypes.ApproximateDate.LessThan(Microsoft.Health.ItemTypes.ApproximateDate, System.Object)
  type: Operator
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ApproximateDate.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: op_LessThan
    path: ../Microsoft.Health.ItemTypes/ApproximateDate.cs
    startLine: 660
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets a value indicating whether the specified date is less than the s\npecified\nobject.\n"
  example: []
  syntax:
    content: public static bool operator <(ApproximateDate date, object secondInstance)
    content.vb: Public Shared Operator <(date As ApproximateDate, secondInstance As Object) As Boolean
    parameters:
    - id: date
      type: Microsoft.Health.ItemTypes.ApproximateDate
      description: "\nThe date object to be compared.\n"
    - id: secondInstance
      type: System.Object
      description: "\nThe second object to be compared.\n"
    return:
      type: System.Boolean
      description: "\n<strong>true</strong> if the year, month, and day of the <span class=\"paramref\">date</span> \nis less than the year, month, and day of <span class=\"paramref\">secondInstance</span>; \notherwise, <strong>false</strong>.\n"
  overload: Microsoft.Health.ItemTypes.ApproximateDate.op_LessThan*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">secondInstance</span> parameter is not an <xref href=\"Microsoft.Health.ItemTypes.ApproximateDate\" data-throw-if-not-resolved=\"false\"></xref> or \n<xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.ItemTypes.ApproximateDate.ToString
  commentId: M:Microsoft.Health.ItemTypes.ApproximateDate.ToString
  id: ToString
  parent: Microsoft.Health.ItemTypes.ApproximateDate
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ApproximateDate.ToString()
  fullName: Microsoft.Health.ItemTypes.ApproximateDate.ToString()
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ApproximateDate.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ToString
    path: ../Microsoft.Health.ItemTypes/ApproximateDate.cs
    startLine: 696
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets a string representation of the approximate date.\n"
  remarks: "\nNote, this is not culture sensitive.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\nA string representation of the approximate date.\n"
  overridden: System.Object.ToString
  overload: Microsoft.Health.ItemTypes.ApproximateDate.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Health.ItemTypes
  commentId: N:Microsoft.Health.ItemTypes
  isExternal: false
  name: Microsoft.Health.ItemTypes
  nameWithType: Microsoft.Health.ItemTypes
  fullName: Microsoft.Health.ItemTypes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData
  commentId: T:Microsoft.Health.ItemTypes.HealthRecordItemData
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: HealthRecordItemData
  nameWithType: HealthRecordItemData
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData
- uid: System.IComparable
  commentId: T:System.IComparable
  parent: System
  isExternal: true
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: System.IComparable{Microsoft.Health.ItemTypes.ApproximateDate}
  commentId: T:System.IComparable{Microsoft.Health.ItemTypes.ApproximateDate}
  parent: System
  definition: System.IComparable`1
  name: IComparable<ApproximateDate>
  nameWithType: IComparable<ApproximateDate>
  fullName: System.IComparable<Microsoft.Health.ItemTypes.ApproximateDate>
  nameWithType.vb: IComparable(Of ApproximateDate)
  fullName.vb: System.IComparable(Of Microsoft.Health.ItemTypes.ApproximateDate)
  name.vb: IComparable(Of ApproximateDate)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.ItemTypes.ApproximateDate
    name: ApproximateDate
    nameWithType: ApproximateDate
    fullName: Microsoft.Health.ItemTypes.ApproximateDate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.ItemTypes.ApproximateDate
    name: ApproximateDate
    nameWithType: ApproximateDate
    fullName: Microsoft.Health.ItemTypes.ApproximateDate
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{System.DateTime}
  commentId: T:System.IComparable{System.DateTime}
  parent: System
  definition: System.IComparable`1
  name: IComparable<DateTime>
  nameWithType: IComparable<DateTime>
  fullName: System.IComparable<System.DateTime>
  nameWithType.vb: IComparable(Of DateTime)
  fullName.vb: System.IComparable(Of System.DateTime)
  name.vb: IComparable(Of DateTime)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.ApproximateDate.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<ApproximateDate>()
  nameWithType: TypeHelper.ValueOrDbNull<ApproximateDate>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.ItemTypes.ApproximateDate>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of ApproximateDate)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.ItemTypes.ApproximateDate)()
  name.vb: ValueOrDbNull(Of ApproximateDate)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<ApproximateDate>
    nameWithType: TypeHelper.ValueOrDbNull<ApproximateDate>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.ItemTypes.ApproximateDate>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of ApproximateDate)
    nameWithType: TypeHelper.ValueOrDbNull(Of ApproximateDate)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.ItemTypes.ApproximateDate)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullName.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.ItemTypes.ApproximateDate
  commentId: T:Microsoft.Health.ItemTypes.ApproximateDate
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: ApproximateDate
  nameWithType: ApproximateDate
  fullName: Microsoft.Health.ItemTypes.ApproximateDate
- uid: Microsoft.Health.ItemTypes.ApproximateDate.#ctor*
  commentId: Overload:Microsoft.Health.ItemTypes.ApproximateDate.#ctor
  isExternal: false
  name: ApproximateDate
  nameWithType: ApproximateDate.ApproximateDate
  fullName: Microsoft.Health.ItemTypes.ApproximateDate.ApproximateDate
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.HealthRecordItemData
  isExternal: true
  name: ParseXml(XPathNavigator)
  nameWithType: HealthRecordItemData.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: HealthRecordItemData.ParseXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: HealthRecordItemData.ParseXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.ApproximateDate.ParseXml*
  commentId: Overload:Microsoft.Health.ItemTypes.ApproximateDate.ParseXml
  isExternal: false
  name: ParseXml
  nameWithType: ApproximateDate.ParseXml
  fullName: Microsoft.Health.ItemTypes.ApproximateDate.ParseXml
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.Xml.XPath.XPathNavigator
  commentId: T:System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: true
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: false
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.HealthRecordItemData
  isExternal: true
  name: WriteXml(String, XmlWriter)
  nameWithType: HealthRecordItemData.WriteXml(String, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String, System.Xml.XmlWriter)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItemData.WriteXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItemData.WriteXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.ApproximateDate.WriteXml*
  commentId: Overload:Microsoft.Health.ItemTypes.ApproximateDate.WriteXml
  isExternal: false
  name: WriteXml
  nameWithType: ApproximateDate.WriteXml
  fullName: Microsoft.Health.ItemTypes.ApproximateDate.WriteXml
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: Microsoft.Health.ItemTypes.ApproximateDate.Year*
  commentId: Overload:Microsoft.Health.ItemTypes.ApproximateDate.Year
  isExternal: false
  name: Year
  nameWithType: ApproximateDate.Year
  fullName: Microsoft.Health.ItemTypes.ApproximateDate.Year
- uid: Microsoft.Health.ItemTypes.ApproximateDate.Month*
  commentId: Overload:Microsoft.Health.ItemTypes.ApproximateDate.Month
  isExternal: false
  name: Month
  nameWithType: ApproximateDate.Month
  fullName: Microsoft.Health.ItemTypes.ApproximateDate.Month
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.ApproximateDate.Day*
  commentId: Overload:Microsoft.Health.ItemTypes.ApproximateDate.Day
  isExternal: false
  name: Day
  nameWithType: ApproximateDate.Day
  fullName: Microsoft.Health.ItemTypes.ApproximateDate.Day
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Microsoft.Health.ItemTypes.ApproximateDate.CompareTo*
  commentId: Overload:Microsoft.Health.ItemTypes.ApproximateDate.CompareTo
  isExternal: false
  name: CompareTo
  nameWithType: ApproximateDate.CompareTo
  fullName: Microsoft.Health.ItemTypes.ApproximateDate.CompareTo
- uid: System.IComparable.CompareTo(System.Object)
  commentId: M:System.IComparable.CompareTo(System.Object)
  parent: System.IComparable
  isExternal: true
  name: CompareTo(Object)
  nameWithType: IComparable.CompareTo(Object)
  fullName: System.IComparable.CompareTo(System.Object)
  spec.csharp:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    nameWithType: IComparable.CompareTo
    fullName: System.IComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    nameWithType: IComparable.CompareTo
    fullName: System.IComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{Microsoft.Health.ItemTypes.ApproximateDate}.CompareTo(Microsoft.Health.ItemTypes.ApproximateDate)
  commentId: M:System.IComparable{Microsoft.Health.ItemTypes.ApproximateDate}.CompareTo(Microsoft.Health.ItemTypes.ApproximateDate)
  parent: System.IComparable{Microsoft.Health.ItemTypes.ApproximateDate}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(ApproximateDate)
  nameWithType: IComparable<ApproximateDate>.CompareTo(ApproximateDate)
  fullName: System.IComparable<Microsoft.Health.ItemTypes.ApproximateDate>.CompareTo(Microsoft.Health.ItemTypes.ApproximateDate)
  nameWithType.vb: IComparable(Of ApproximateDate).CompareTo(ApproximateDate)
  fullName.vb: System.IComparable(Of Microsoft.Health.ItemTypes.ApproximateDate).CompareTo(Microsoft.Health.ItemTypes.ApproximateDate)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<ApproximateDate>.CompareTo
    fullName: System.IComparable<Microsoft.Health.ItemTypes.ApproximateDate>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.ItemTypes.ApproximateDate
    name: ApproximateDate
    nameWithType: ApproximateDate
    fullName: Microsoft.Health.ItemTypes.ApproximateDate
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of ApproximateDate).CompareTo
    fullName: System.IComparable(Of Microsoft.Health.ItemTypes.ApproximateDate).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.ItemTypes.ApproximateDate
    name: ApproximateDate
    nameWithType: ApproximateDate
    fullName: Microsoft.Health.ItemTypes.ApproximateDate
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable`1.CompareTo(`0)
  commentId: M:System.IComparable`1.CompareTo(`0)
  isExternal: true
  name: CompareTo(T)
  nameWithType: IComparable<T>.CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  fullName.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<T>.CompareTo
    fullName: System.IComparable<T>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of T).CompareTo
    fullName: System.IComparable(Of T).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{System.DateTime}.CompareTo(System.DateTime)
  commentId: M:System.IComparable{System.DateTime}.CompareTo(System.DateTime)
  parent: System.IComparable{System.DateTime}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(DateTime)
  nameWithType: IComparable<DateTime>.CompareTo(DateTime)
  fullName: System.IComparable<System.DateTime>.CompareTo(System.DateTime)
  nameWithType.vb: IComparable(Of DateTime).CompareTo(DateTime)
  fullName.vb: System.IComparable(Of System.DateTime).CompareTo(System.DateTime)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<DateTime>.CompareTo
    fullName: System.IComparable<System.DateTime>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of DateTime).CompareTo
    fullName: System.IComparable(Of System.DateTime).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.ApproximateDate.Equals*
  commentId: Overload:Microsoft.Health.ItemTypes.ApproximateDate.Equals
  isExternal: false
  name: Equals
  nameWithType: ApproximateDate.Equals
  fullName: Microsoft.Health.ItemTypes.ApproximateDate.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.ApproximateDate.GetHashCode*
  commentId: Overload:Microsoft.Health.ItemTypes.ApproximateDate.GetHashCode
  isExternal: false
  name: GetHashCode
  nameWithType: ApproximateDate.GetHashCode
  fullName: Microsoft.Health.ItemTypes.ApproximateDate.GetHashCode
- uid: Microsoft.Health.ItemTypes.ApproximateDate.op_Equality*
  commentId: Overload:Microsoft.Health.ItemTypes.ApproximateDate.op_Equality
  isExternal: false
  name: Equality
  nameWithType: ApproximateDate.Equality
  fullName: Microsoft.Health.ItemTypes.ApproximateDate.Equality
- uid: Microsoft.Health.ItemTypes.ApproximateDate.op_Inequality*
  commentId: Overload:Microsoft.Health.ItemTypes.ApproximateDate.op_Inequality
  isExternal: false
  name: Inequality
  nameWithType: ApproximateDate.Inequality
  fullName: Microsoft.Health.ItemTypes.ApproximateDate.Inequality
- uid: Microsoft.Health.ItemTypes.ApproximateDate.op_GreaterThan*
  commentId: Overload:Microsoft.Health.ItemTypes.ApproximateDate.op_GreaterThan
  isExternal: false
  name: GreaterThan
  nameWithType: ApproximateDate.GreaterThan
  fullName: Microsoft.Health.ItemTypes.ApproximateDate.GreaterThan
- uid: Microsoft.Health.ItemTypes.ApproximateDate.op_LessThan*
  commentId: Overload:Microsoft.Health.ItemTypes.ApproximateDate.op_LessThan
  isExternal: false
  name: LessThan
  nameWithType: ApproximateDate.LessThan
  fullName: Microsoft.Health.ItemTypes.ApproximateDate.LessThan
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.ApproximateDate.ToString*
  commentId: Overload:Microsoft.Health.ItemTypes.ApproximateDate.ToString
  isExternal: false
  name: ToString
  nameWithType: ApproximateDate.ToString
  fullName: Microsoft.Health.ItemTypes.ApproximateDate.ToString
