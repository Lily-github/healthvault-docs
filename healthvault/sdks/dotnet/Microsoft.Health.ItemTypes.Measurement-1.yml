### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.ItemTypes.Measurement`1
  commentId: T:Microsoft.Health.ItemTypes.Measurement`1
  id: Measurement`1
  parent: Microsoft.Health.ItemTypes
  children:
  - Microsoft.Health.ItemTypes.Measurement`1.#ctor
  - Microsoft.Health.ItemTypes.Measurement`1.#ctor(`0)
  - Microsoft.Health.ItemTypes.Measurement`1.#ctor(`0,Microsoft.Health.ItemTypes.DisplayValue)
  - Microsoft.Health.ItemTypes.Measurement`1.AssertMeasurementValue(`0)
  - Microsoft.Health.ItemTypes.Measurement`1.DisplayValue
  - Microsoft.Health.ItemTypes.Measurement`1.GetValueString(`0)
  - Microsoft.Health.ItemTypes.Measurement`1.ParseValueXml(System.Xml.XPath.XPathNavigator)
  - Microsoft.Health.ItemTypes.Measurement`1.ParseXml(System.Xml.XPath.XPathNavigator)
  - Microsoft.Health.ItemTypes.Measurement`1.ToString
  - Microsoft.Health.ItemTypes.Measurement`1.Value
  - Microsoft.Health.ItemTypes.Measurement`1.WriteValueXml(System.Xml.XmlWriter)
  - Microsoft.Health.ItemTypes.Measurement`1.WriteXml(System.String,System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: Measurement<MeasurementType>
  nameWithType: Measurement<MeasurementType>
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>
  type: Class
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Measurement.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Measurement
    path: ../Microsoft.Health.ItemTypes/Measurement.cs
    startLine: 33
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nRepresents a length value and display. This class is abstract.\n"
  remarks: "\nHealthVault measurements are composed of the value and \na display value. All values are stored in a base unit for that type\nof measurement. An application can take a\nvalue using any scale the application chooses and can store the user- \nentered value as the display value, but the measurement value must be \nconverted to the appropriate base unit to be stored in HealthVault.\nThis abstract base class defines an interface from which all measurements \nderive. The <xref href=\"Microsoft.Health.ItemTypes.Measurement%601.Value\" data-throw-if-not-resolved=\"false\"></xref> property's type varies according \nto the derived class definition and affects the base unit for that\ntype. See the documentation for the derived class for more information\non the base unit type for that measurement.\n"
  example: []
  syntax:
    content: 'public abstract class Measurement<MeasurementType> : HealthRecordItemData'
    content.vb: >-
      Public MustInherit Class Measurement(Of MeasurementType)
          Inherits HealthRecordItemData
    typeParameters:
    - id: MeasurementType
  inheritance:
  - System.Object
  - Microsoft.Health.ItemTypes.HealthRecordItemData
  derivedClasses:
  - Microsoft.Health.ItemTypes.AltitudeMeasurement
  - Microsoft.Health.ItemTypes.BloodGlucoseMeasurement
  - Microsoft.Health.ItemTypes.ConcentrationMeasurement
  - Microsoft.Health.ItemTypes.DoubleMeasurement
  - Microsoft.Health.ItemTypes.FlowMeasurement
  - Microsoft.Health.ItemTypes.FoodEnergyValue
  - Microsoft.Health.ItemTypes.HbA1CMeasurement
  - Microsoft.Health.ItemTypes.InsulinInjectionMeasurement
  - Microsoft.Health.ItemTypes.Int32Measurement
  - Microsoft.Health.ItemTypes.Length
  - Microsoft.Health.ItemTypes.PaceMeasurement
  - Microsoft.Health.ItemTypes.PowerMeasurement
  - Microsoft.Health.ItemTypes.PressureMeasurement
  - Microsoft.Health.ItemTypes.RespiratoryRateMeasurement
  - Microsoft.Health.ItemTypes.SpeedMeasurement
  - Microsoft.Health.ItemTypes.StringMeasurement
  - Microsoft.Health.ItemTypes.TemperatureMeasurement
  - Microsoft.Health.ItemTypes.TorqueMeasurement
  - Microsoft.Health.ItemTypes.VolumeMeasurement
  - Microsoft.Health.ItemTypes.WeightValue
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.ItemTypes.Measurement`1.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  nameWithType.vb: Measurement(Of MeasurementType)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType)
  name.vb: Measurement(Of MeasurementType)
- uid: Microsoft.Health.ItemTypes.Measurement`1.#ctor
  commentId: M:Microsoft.Health.ItemTypes.Measurement`1.#ctor
  id: '#ctor'
  parent: Microsoft.Health.ItemTypes.Measurement`1
  langs:
  - csharp
  - vb
  name: Measurement()
  nameWithType: Measurement<MeasurementType>.Measurement()
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.Measurement()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Measurement.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.ItemTypes/Measurement.cs
    startLine: 40
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the Measurement class \nwith no value.\n"
  example: []
  syntax:
    content: public Measurement()
    content.vb: Public Sub New
  overload: Microsoft.Health.ItemTypes.Measurement`1.#ctor*
  nameWithType.vb: Measurement(Of MeasurementType).Measurement()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).Measurement()
- uid: Microsoft.Health.ItemTypes.Measurement`1.#ctor(`0)
  commentId: M:Microsoft.Health.ItemTypes.Measurement`1.#ctor(`0)
  id: '#ctor(`0)'
  parent: Microsoft.Health.ItemTypes.Measurement`1
  langs:
  - csharp
  - vb
  name: Measurement(MeasurementType)
  nameWithType: Measurement<MeasurementType>.Measurement(MeasurementType)
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.Measurement(MeasurementType)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Measurement.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.ItemTypes/Measurement.cs
    startLine: 53
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the Measurement class with \nthe specified value.\n"
  example: []
  syntax:
    content: public Measurement(MeasurementType value)
    content.vb: Public Sub New(value As MeasurementType)
    parameters:
    - id: value
      type: '{MeasurementType}'
      description: "\nAn instance of MeasurementType representing the value.\n"
  overload: Microsoft.Health.ItemTypes.Measurement`1.#ctor*
  nameWithType.vb: Measurement(Of MeasurementType).Measurement(MeasurementType)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).Measurement(MeasurementType)
- uid: Microsoft.Health.ItemTypes.Measurement`1.#ctor(`0,Microsoft.Health.ItemTypes.DisplayValue)
  commentId: M:Microsoft.Health.ItemTypes.Measurement`1.#ctor(`0,Microsoft.Health.ItemTypes.DisplayValue)
  id: '#ctor(`0,Microsoft.Health.ItemTypes.DisplayValue)'
  parent: Microsoft.Health.ItemTypes.Measurement`1
  langs:
  - csharp
  - vb
  name: Measurement(MeasurementType, DisplayValue)
  nameWithType: Measurement<MeasurementType>.Measurement(MeasurementType, DisplayValue)
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.Measurement(MeasurementType, Microsoft.Health.ItemTypes.DisplayValue)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Measurement.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.ItemTypes/Measurement.cs
    startLine: 77
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the Measurement class with \nthe specified value and optional display value.\n"
  example: []
  syntax:
    content: public Measurement(MeasurementType value, DisplayValue displayValue)
    content.vb: Public Sub New(value As MeasurementType, displayValue As DisplayValue)
    parameters:
    - id: value
      type: '{MeasurementType}'
      description: "\nAn instance of MeasurementType representing the value.\n"
    - id: displayValue
      type: Microsoft.Health.ItemTypes.DisplayValue
      description: "\nThe display value of the measurement. This should contain the\nexact measurement as entered by the user even if it uses a \nunit of measure other than the base unit of measure for the \ntype. The display value\n<xref href=\"Microsoft.Health.ItemTypes.DisplayValue.Units\" data-throw-if-not-resolved=\"false\"></xref> and \n<xref href=\"Microsoft.Health.ItemTypes.DisplayValue.UnitsCode\" data-throw-if-not-resolved=\"false\"></xref> \nrepresents the unit of measure for the user-entered value.\n"
  overload: Microsoft.Health.ItemTypes.Measurement`1.#ctor*
  nameWithType.vb: Measurement(Of MeasurementType).Measurement(MeasurementType, DisplayValue)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).Measurement(MeasurementType, Microsoft.Health.ItemTypes.DisplayValue)
- uid: Microsoft.Health.ItemTypes.Measurement`1.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.Measurement`1.ParseXml(System.Xml.XPath.XPathNavigator)
  id: ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.Measurement`1
  langs:
  - csharp
  - vb
  name: ParseXml(XPathNavigator)
  nameWithType: Measurement<MeasurementType>.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.ParseXml(System.Xml.XPath.XPathNavigator)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Measurement.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ParseXml
    path: ../Microsoft.Health.ItemTypes/Measurement.cs
    startLine: 95
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nPopulates the data for the measurement from the XML.\n"
  example: []
  syntax:
    content: public override void ParseXml(XPathNavigator navigator)
    content.vb: Public Overrides Sub ParseXml(navigator As XPathNavigator)
    parameters:
    - id: navigator
      type: System.Xml.XPath.XPathNavigator
      description: "\nThe XML node representing the measurement.\n"
  overridden: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  overload: Microsoft.Health.ItemTypes.Measurement`1.ParseXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">navigator</span> parameter is <strong>null</strong>.\n"
  nameWithType.vb: Measurement(Of MeasurementType).ParseXml(XPathNavigator)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).ParseXml(System.Xml.XPath.XPathNavigator)
- uid: Microsoft.Health.ItemTypes.Measurement`1.ParseValueXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.Measurement`1.ParseValueXml(System.Xml.XPath.XPathNavigator)
  id: ParseValueXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.Measurement`1
  langs:
  - csharp
  - vb
  name: ParseValueXml(XPathNavigator)
  nameWithType: Measurement<MeasurementType>.ParseValueXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.ParseValueXml(System.Xml.XPath.XPathNavigator)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Measurement.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ParseValueXml
    path: ../Microsoft.Health.ItemTypes/Measurement.cs
    startLine: 117
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nParses the measurement specific value from the XML.\n"
  example: []
  syntax:
    content: protected abstract void ParseValueXml(XPathNavigator navigator)
    content.vb: Protected MustOverride Sub ParseValueXml(navigator As XPathNavigator)
    parameters:
    - id: navigator
      type: System.Xml.XPath.XPathNavigator
      description: "\nThe XML node representing the measurement.\n"
  overload: Microsoft.Health.ItemTypes.Measurement`1.ParseValueXml*
  nameWithType.vb: Measurement(Of MeasurementType).ParseValueXml(XPathNavigator)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).ParseValueXml(System.Xml.XPath.XPathNavigator)
- uid: Microsoft.Health.ItemTypes.Measurement`1.WriteXml(System.String,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.Measurement`1.WriteXml(System.String,System.Xml.XmlWriter)
  id: WriteXml(System.String,System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.Measurement`1
  langs:
  - csharp
  - vb
  name: WriteXml(String, XmlWriter)
  nameWithType: Measurement<MeasurementType>.WriteXml(String, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.WriteXml(System.String, System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Measurement.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteXml
    path: ../Microsoft.Health.ItemTypes/Measurement.cs
    startLine: 139
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nWrites the measurement to the specified XML writer.\n"
  example: []
  syntax:
    content: public override void WriteXml(string nodeName, XmlWriter writer)
    content.vb: Public Overrides Sub WriteXml(nodeName As String, writer As XmlWriter)
    parameters:
    - id: nodeName
      type: System.String
      description: "\nThe name of the outer element for the measurement.\n"
    - id: writer
      type: System.Xml.XmlWriter
      description: "\nThe XmlWriter to write the measurement to.\n"
  overridden: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  overload: Microsoft.Health.ItemTypes.Measurement`1.WriteXml*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">nodeName</span> parameter is <strong>null</strong> or empty.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">writer</span> parameter is <strong>null</strong>.\n"
  nameWithType.vb: Measurement(Of MeasurementType).WriteXml(String, XmlWriter)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).WriteXml(System.String, System.Xml.XmlWriter)
- uid: Microsoft.Health.ItemTypes.Measurement`1.WriteValueXml(System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.Measurement`1.WriteValueXml(System.Xml.XmlWriter)
  id: WriteValueXml(System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.Measurement`1
  langs:
  - csharp
  - vb
  name: WriteValueXml(XmlWriter)
  nameWithType: Measurement<MeasurementType>.WriteValueXml(XmlWriter)
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.WriteValueXml(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Measurement.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteValueXml
    path: ../Microsoft.Health.ItemTypes/Measurement.cs
    startLine: 163
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nWrites the measurement value to the specified XML writer.\n"
  example: []
  syntax:
    content: protected abstract void WriteValueXml(XmlWriter writer)
    content.vb: Protected MustOverride Sub WriteValueXml(writer As XmlWriter)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "\nThe XmlWriter to write the measurement value to.\n"
  overload: Microsoft.Health.ItemTypes.Measurement`1.WriteValueXml*
  nameWithType.vb: Measurement(Of MeasurementType).WriteValueXml(XmlWriter)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).WriteValueXml(System.Xml.XmlWriter)
- uid: Microsoft.Health.ItemTypes.Measurement`1.Value
  commentId: P:Microsoft.Health.ItemTypes.Measurement`1.Value
  id: Value
  parent: Microsoft.Health.ItemTypes.Measurement`1
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: Measurement<MeasurementType>.Value
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.Value
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Measurement.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Value
    path: ../Microsoft.Health.ItemTypes/Measurement.cs
    startLine: 181
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the value of the measurement.\n"
  remarks: "\nThe value of the measurement must be within the tolerances for the\nspecific type of measurement and must be in the base unit of \nmeasure. See the derived classes documentation for the\n<xref href=\"Microsoft.Health.ItemTypes.Measurement%601.AssertMeasurementValue(%600)\" data-throw-if-not-resolved=\"false\"></xref> method to determine which \nexceptions can be thrown.\n"
  example: []
  syntax:
    content: public MeasurementType Value { get; set; }
    content.vb: Public Property Value As MeasurementType
    parameters: []
    return:
      type: '{MeasurementType}'
      description: "\nAn instance of MeasurementType representing the value.\n"
  overload: Microsoft.Health.ItemTypes.Measurement`1.Value*
  nameWithType.vb: Measurement(Of MeasurementType).Value
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).Value
- uid: Microsoft.Health.ItemTypes.Measurement`1.AssertMeasurementValue(`0)
  commentId: M:Microsoft.Health.ItemTypes.Measurement`1.AssertMeasurementValue(`0)
  id: AssertMeasurementValue(`0)
  parent: Microsoft.Health.ItemTypes.Measurement`1
  langs:
  - csharp
  - vb
  name: AssertMeasurementValue(MeasurementType)
  nameWithType: Measurement<MeasurementType>.AssertMeasurementValue(MeasurementType)
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.AssertMeasurementValue(MeasurementType)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Measurement.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AssertMeasurementValue
    path: ../Microsoft.Health.ItemTypes/Measurement.cs
    startLine: 207
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nVerifies the value is in the appropriate base unit of measure and\nis a legal value for the type.\n"
  remarks: "\nDerived class must override this method and ensure that value uses\nthe correct base unit of measurement and is a legal value for the\ntype. If not, an appropriate exception should be thrown.\n"
  example: []
  syntax:
    content: protected abstract void AssertMeasurementValue(MeasurementType value)
    content.vb: Protected MustOverride Sub AssertMeasurementValue(value As MeasurementType)
    parameters:
    - id: value
      type: '{MeasurementType}'
      description: "\nThe value to be verified.\n"
  overload: Microsoft.Health.ItemTypes.Measurement`1.AssertMeasurementValue*
  nameWithType.vb: Measurement(Of MeasurementType).AssertMeasurementValue(MeasurementType)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).AssertMeasurementValue(MeasurementType)
- uid: Microsoft.Health.ItemTypes.Measurement`1.DisplayValue
  commentId: P:Microsoft.Health.ItemTypes.Measurement`1.DisplayValue
  id: DisplayValue
  parent: Microsoft.Health.ItemTypes.Measurement`1
  langs:
  - csharp
  - vb
  name: DisplayValue
  nameWithType: Measurement<MeasurementType>.DisplayValue
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.DisplayValue
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Measurement.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DisplayValue
    path: ../Microsoft.Health.ItemTypes/Measurement.cs
    startLine: 219
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the display value of the HealthVault dictionary item.\n"
  example: []
  syntax:
    content: public DisplayValue DisplayValue { get; set; }
    content.vb: Public Property DisplayValue As DisplayValue
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.DisplayValue
      description: "\nAn instance of <xref href=\"Microsoft.Health.ItemTypes.Measurement%601.DisplayValue\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  overload: Microsoft.Health.ItemTypes.Measurement`1.DisplayValue*
  nameWithType.vb: Measurement(Of MeasurementType).DisplayValue
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).DisplayValue
- uid: Microsoft.Health.ItemTypes.Measurement`1.ToString
  commentId: M:Microsoft.Health.ItemTypes.Measurement`1.ToString
  id: ToString
  parent: Microsoft.Health.ItemTypes.Measurement`1
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Measurement<MeasurementType>.ToString()
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.ToString()
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Measurement.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ToString
    path: ../Microsoft.Health.ItemTypes/Measurement.cs
    startLine: 235
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nRetrieves a string representation of the measurement using the \n<xref href=\"Microsoft.Health.ItemTypes.Measurement%601.DisplayValue\" data-throw-if-not-resolved=\"false\"></xref> property.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\nThe measurement as a string including units if available.\n"
  overridden: System.Object.ToString
  overload: Microsoft.Health.ItemTypes.Measurement`1.ToString*
  nameWithType.vb: Measurement(Of MeasurementType).ToString()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).ToString()
- uid: Microsoft.Health.ItemTypes.Measurement`1.GetValueString(`0)
  commentId: M:Microsoft.Health.ItemTypes.Measurement`1.GetValueString(`0)
  id: GetValueString(`0)
  parent: Microsoft.Health.ItemTypes.Measurement`1
  langs:
  - csharp
  - vb
  name: GetValueString(MeasurementType)
  nameWithType: Measurement<MeasurementType>.GetValueString(MeasurementType)
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.GetValueString(MeasurementType)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/Measurement.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetValueString
    path: ../Microsoft.Health.ItemTypes/Measurement.cs
    startLine: 261
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nRetrieves the string representation of the value.\n"
  example: []
  syntax:
    content: protected abstract string GetValueString(MeasurementType value)
    content.vb: Protected MustOverride Function GetValueString(value As MeasurementType) As String
    parameters:
    - id: value
      type: '{MeasurementType}'
      description: "\nThe measurement value to get the string representation of.\n"
    return:
      type: System.String
      description: "\nA string representing the measurement value.\n"
  overload: Microsoft.Health.ItemTypes.Measurement`1.GetValueString*
  nameWithType.vb: Measurement(Of MeasurementType).GetValueString(MeasurementType)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).GetValueString(MeasurementType)
references:
- uid: Microsoft.Health.ItemTypes.Measurement`1.Value
  commentId: P:Microsoft.Health.ItemTypes.Measurement`1.Value
  isExternal: false
  name: Value
  nameWithType: Measurement<MeasurementType>.Value
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.Value
  nameWithType.vb: Measurement(Of MeasurementType).Value
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).Value
- uid: Microsoft.Health.ItemTypes
  commentId: N:Microsoft.Health.ItemTypes
  isExternal: false
  name: Microsoft.Health.ItemTypes
  nameWithType: Microsoft.Health.ItemTypes
  fullName: Microsoft.Health.ItemTypes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData
  commentId: T:Microsoft.Health.ItemTypes.HealthRecordItemData
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: HealthRecordItemData
  nameWithType: HealthRecordItemData
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Measurement`1.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<Measurement<MeasurementType>>()
  nameWithType: TypeHelper.ValueOrDbNull<Measurement<MeasurementType>>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.ItemTypes.Measurement<MeasurementType>>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of Measurement(Of MeasurementType))()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.ItemTypes.Measurement(Of MeasurementType))()
  name.vb: ValueOrDbNull(Of Measurement(Of MeasurementType))()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<Measurement<MeasurementType>>
    nameWithType: TypeHelper.ValueOrDbNull<Measurement<MeasurementType>>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.ItemTypes.Measurement<MeasurementType>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of Measurement(Of MeasurementType))
    nameWithType: TypeHelper.ValueOrDbNull(Of Measurement(Of MeasurementType))
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.ItemTypes.Measurement(Of MeasurementType))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.ItemTypes.Measurement`1.#ctor*
  commentId: Overload:Microsoft.Health.ItemTypes.Measurement`1.#ctor
  isExternal: false
  name: Measurement
  nameWithType: Measurement<MeasurementType>.Measurement
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.Measurement
  nameWithType.vb: Measurement(Of MeasurementType).Measurement
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).Measurement
- uid: '{MeasurementType}'
  commentId: '!:MeasurementType'
  definition: MeasurementType
  name: MeasurementType
  nameWithType: MeasurementType
  fullName: MeasurementType
- uid: MeasurementType
  isExternal: false
  name: MeasurementType
  nameWithType: MeasurementType
  fullName: MeasurementType
- uid: Microsoft.Health.ItemTypes.DisplayValue.Units
  commentId: P:Microsoft.Health.ItemTypes.DisplayValue.Units
- uid: Microsoft.Health.ItemTypes.DisplayValue.UnitsCode
  commentId: P:Microsoft.Health.ItemTypes.DisplayValue.UnitsCode
- uid: Microsoft.Health.ItemTypes.DisplayValue
  commentId: T:Microsoft.Health.ItemTypes.DisplayValue
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: DisplayValue
  nameWithType: DisplayValue
  fullName: Microsoft.Health.ItemTypes.DisplayValue
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.HealthRecordItemData
  isExternal: true
  name: ParseXml(XPathNavigator)
  nameWithType: HealthRecordItemData.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: HealthRecordItemData.ParseXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: HealthRecordItemData.ParseXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Measurement`1.ParseXml*
  commentId: Overload:Microsoft.Health.ItemTypes.Measurement`1.ParseXml
  isExternal: false
  name: ParseXml
  nameWithType: Measurement<MeasurementType>.ParseXml
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.ParseXml
  nameWithType.vb: Measurement(Of MeasurementType).ParseXml
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).ParseXml
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.Xml.XPath.XPathNavigator
  commentId: T:System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: true
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: false
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: Microsoft.Health.ItemTypes.Measurement`1.ParseValueXml*
  commentId: Overload:Microsoft.Health.ItemTypes.Measurement`1.ParseValueXml
  isExternal: false
  name: ParseValueXml
  nameWithType: Measurement<MeasurementType>.ParseValueXml
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.ParseValueXml
  nameWithType.vb: Measurement(Of MeasurementType).ParseValueXml
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).ParseValueXml
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.HealthRecordItemData
  isExternal: true
  name: WriteXml(String, XmlWriter)
  nameWithType: HealthRecordItemData.WriteXml(String, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String, System.Xml.XmlWriter)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItemData.WriteXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItemData.WriteXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Measurement`1.WriteXml*
  commentId: Overload:Microsoft.Health.ItemTypes.Measurement`1.WriteXml
  isExternal: false
  name: WriteXml
  nameWithType: Measurement<MeasurementType>.WriteXml
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.WriteXml
  nameWithType.vb: Measurement(Of MeasurementType).WriteXml
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).WriteXml
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: Microsoft.Health.ItemTypes.Measurement`1.WriteValueXml*
  commentId: Overload:Microsoft.Health.ItemTypes.Measurement`1.WriteValueXml
  isExternal: false
  name: WriteValueXml
  nameWithType: Measurement<MeasurementType>.WriteValueXml
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.WriteValueXml
  nameWithType.vb: Measurement(Of MeasurementType).WriteValueXml
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).WriteValueXml
- uid: Microsoft.Health.ItemTypes.Measurement`1.AssertMeasurementValue(`0)
  commentId: M:Microsoft.Health.ItemTypes.Measurement`1.AssertMeasurementValue(`0)
  isExternal: false
  name: AssertMeasurementValue(MeasurementType)
  nameWithType: Measurement<MeasurementType>.AssertMeasurementValue(MeasurementType)
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.AssertMeasurementValue(MeasurementType)
  nameWithType.vb: Measurement(Of MeasurementType).AssertMeasurementValue(MeasurementType)
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).AssertMeasurementValue(MeasurementType)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.AssertMeasurementValue(`0)
    name: AssertMeasurementValue
    nameWithType: Measurement<MeasurementType>.AssertMeasurementValue
    fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.AssertMeasurementValue
  - name: (
    nameWithType: (
    fullName: (
  - name: MeasurementType
    nameWithType: MeasurementType
    fullName: MeasurementType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.Measurement`1.AssertMeasurementValue(`0)
    name: AssertMeasurementValue
    nameWithType: Measurement(Of MeasurementType).AssertMeasurementValue
    fullName: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).AssertMeasurementValue
  - name: (
    nameWithType: (
    fullName: (
  - name: MeasurementType
    nameWithType: MeasurementType
    fullName: MeasurementType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Measurement`1.Value*
  commentId: Overload:Microsoft.Health.ItemTypes.Measurement`1.Value
  isExternal: false
  name: Value
  nameWithType: Measurement<MeasurementType>.Value
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.Value
  nameWithType.vb: Measurement(Of MeasurementType).Value
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).Value
- uid: Microsoft.Health.ItemTypes.Measurement`1.AssertMeasurementValue*
  commentId: Overload:Microsoft.Health.ItemTypes.Measurement`1.AssertMeasurementValue
  isExternal: false
  name: AssertMeasurementValue
  nameWithType: Measurement<MeasurementType>.AssertMeasurementValue
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.AssertMeasurementValue
  nameWithType.vb: Measurement(Of MeasurementType).AssertMeasurementValue
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).AssertMeasurementValue
- uid: Microsoft.Health.ItemTypes.Measurement`1.DisplayValue
  commentId: P:Microsoft.Health.ItemTypes.Measurement`1.DisplayValue
  isExternal: false
  name: DisplayValue
  nameWithType: Measurement<MeasurementType>.DisplayValue
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.DisplayValue
  nameWithType.vb: Measurement(Of MeasurementType).DisplayValue
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).DisplayValue
- uid: Microsoft.Health.ItemTypes.Measurement`1.DisplayValue*
  commentId: Overload:Microsoft.Health.ItemTypes.Measurement`1.DisplayValue
  isExternal: false
  name: DisplayValue
  nameWithType: Measurement<MeasurementType>.DisplayValue
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.DisplayValue
  nameWithType.vb: Measurement(Of MeasurementType).DisplayValue
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).DisplayValue
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.Measurement`1.ToString*
  commentId: Overload:Microsoft.Health.ItemTypes.Measurement`1.ToString
  isExternal: false
  name: ToString
  nameWithType: Measurement<MeasurementType>.ToString
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.ToString
  nameWithType.vb: Measurement(Of MeasurementType).ToString
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).ToString
- uid: Microsoft.Health.ItemTypes.Measurement`1.GetValueString*
  commentId: Overload:Microsoft.Health.ItemTypes.Measurement`1.GetValueString
  isExternal: false
  name: GetValueString
  nameWithType: Measurement<MeasurementType>.GetValueString
  fullName: Microsoft.Health.ItemTypes.Measurement<MeasurementType>.GetValueString
  nameWithType.vb: Measurement(Of MeasurementType).GetValueString
  fullName.vb: Microsoft.Health.ItemTypes.Measurement(Of MeasurementType).GetValueString
