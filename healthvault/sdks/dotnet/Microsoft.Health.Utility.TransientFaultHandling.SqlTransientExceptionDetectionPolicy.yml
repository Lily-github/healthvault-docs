### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy
  commentId: T:Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy
  id: SqlTransientExceptionDetectionPolicy
  parent: Microsoft.Health.Utility.TransientFaultHandling
  children:
  - Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.#ctor
  - Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.#ctor(System.Boolean,System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32})
  - Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.AdditionalSqlErrorCodes
  - Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.CreateTransientExceptionDetectionPolicy
  - Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.ExcludedSqlErrorCodes
  - Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.GetSchema
  - Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.IncludeTimeouts
  - Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.IsTransient(System.Exception)
  - Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.ReadXml(System.Xml.XmlReader)
  - Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.WriteXml(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: SqlTransientExceptionDetectionPolicy
  nameWithType: SqlTransientExceptionDetectionPolicy
  fullName: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/TransientFaultHandling/SqlTransientExceptionDetectionPolicy.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SqlTransientExceptionDetectionPolicy
    path: ../Microsoft.Health.Utility/utilities/TransientFaultHandling/SqlTransientExceptionDetectionPolicy.cs
    startLine: 22
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.TransientFaultHandling
  summary: "\nTransient exception detection for Microsoft SQL Server\nADO.NET client.\n"
  example: []
  syntax:
    content: 'public class SqlTransientExceptionDetectionPolicy : ITransientExceptionDetectionPolicy, ITransientExceptionDetectionPolicyFactory, IXmlSerializable'
    content.vb: >-
      Public Class SqlTransientExceptionDetectionPolicy
          Implements ITransientExceptionDetectionPolicy, ITransientExceptionDetectionPolicyFactory, IXmlSerializable
  inheritance:
  - System.Object
  implements:
  - Microsoft.Health.Utility.TransientFaultHandling.ITransientExceptionDetectionPolicy
  - Microsoft.Health.Utility.TransientFaultHandling.ITransientExceptionDetectionPolicyFactory
  - System.Xml.Serialization.IXmlSerializable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.#ctor
  commentId: M:Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.#ctor
  id: '#ctor'
  parent: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy
  langs:
  - csharp
  - vb
  name: SqlTransientExceptionDetectionPolicy()
  nameWithType: SqlTransientExceptionDetectionPolicy.SqlTransientExceptionDetectionPolicy()
  fullName: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.SqlTransientExceptionDetectionPolicy()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/TransientFaultHandling/SqlTransientExceptionDetectionPolicy.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.Utility/utilities/TransientFaultHandling/SqlTransientExceptionDetectionPolicy.cs
    startLine: 30
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.TransientFaultHandling
  summary: "\nDefault constructor for deserialization.\n"
  example: []
  syntax:
    content: public SqlTransientExceptionDetectionPolicy()
    content.vb: Public Sub New
  overload: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.#ctor(System.Boolean,System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32})
  commentId: M:Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.#ctor(System.Boolean,System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32})
  id: '#ctor(System.Boolean,System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32})'
  parent: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy
  langs:
  - csharp
  - vb
  name: SqlTransientExceptionDetectionPolicy(Boolean, IEnumerable<Int32>, IEnumerable<Int32>)
  nameWithType: SqlTransientExceptionDetectionPolicy.SqlTransientExceptionDetectionPolicy(Boolean, IEnumerable<Int32>, IEnumerable<Int32>)
  fullName: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.SqlTransientExceptionDetectionPolicy(System.Boolean, System.Collections.Generic.IEnumerable<System.Int32>, System.Collections.Generic.IEnumerable<System.Int32>)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/TransientFaultHandling/SqlTransientExceptionDetectionPolicy.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.Utility/utilities/TransientFaultHandling/SqlTransientExceptionDetectionPolicy.cs
    startLine: 37
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.TransientFaultHandling
  syntax:
    content: public SqlTransientExceptionDetectionPolicy(bool includeTimeouts, IEnumerable<int> additionalSqlErrorCodes, IEnumerable<int> excludeSqlErrorCodes)
    content.vb: Public Sub New(includeTimeouts As Boolean, additionalSqlErrorCodes As IEnumerable(Of Integer), excludeSqlErrorCodes As IEnumerable(Of Integer))
    parameters:
    - id: includeTimeouts
      type: System.Boolean
    - id: additionalSqlErrorCodes
      type: System.Collections.Generic.IEnumerable{System.Int32}
    - id: excludeSqlErrorCodes
      type: System.Collections.Generic.IEnumerable{System.Int32}
  overload: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.#ctor*
  nameWithType.vb: SqlTransientExceptionDetectionPolicy.SqlTransientExceptionDetectionPolicy(Boolean, IEnumerable(Of Int32), IEnumerable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.SqlTransientExceptionDetectionPolicy(System.Boolean, System.Collections.Generic.IEnumerable(Of System.Int32), System.Collections.Generic.IEnumerable(Of System.Int32))
  name.vb: SqlTransientExceptionDetectionPolicy(Boolean, IEnumerable(Of Int32), IEnumerable(Of Int32))
- uid: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.IncludeTimeouts
  commentId: P:Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.IncludeTimeouts
  id: IncludeTimeouts
  parent: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy
  langs:
  - csharp
  - vb
  name: IncludeTimeouts
  nameWithType: SqlTransientExceptionDetectionPolicy.IncludeTimeouts
  fullName: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.IncludeTimeouts
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/TransientFaultHandling/SqlTransientExceptionDetectionPolicy.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: IncludeTimeouts
    path: ../Microsoft.Health.Utility/utilities/TransientFaultHandling/SqlTransientExceptionDetectionPolicy.cs
    startLine: 50
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.TransientFaultHandling
  summary: "\nWhether to consider timeouts as transient.\n"
  example: []
  syntax:
    content: public bool IncludeTimeouts { get; set; }
    content.vb: Public Property IncludeTimeouts As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.IncludeTimeouts*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.AdditionalSqlErrorCodes
  commentId: P:Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.AdditionalSqlErrorCodes
  id: AdditionalSqlErrorCodes
  parent: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy
  langs:
  - csharp
  - vb
  name: AdditionalSqlErrorCodes
  nameWithType: SqlTransientExceptionDetectionPolicy.AdditionalSqlErrorCodes
  fullName: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.AdditionalSqlErrorCodes
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/TransientFaultHandling/SqlTransientExceptionDetectionPolicy.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AdditionalSqlErrorCodes
    path: ../Microsoft.Health.Utility/utilities/TransientFaultHandling/SqlTransientExceptionDetectionPolicy.cs
    startLine: 55
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.TransientFaultHandling
  summary: "\nAdditional SQL error numbers that should be considered transient.\n"
  example: []
  syntax:
    content: public HashSet<int> AdditionalSqlErrorCodes { get; }
    content.vb: Public ReadOnly Property AdditionalSqlErrorCodes As HashSet(Of Integer)
    parameters: []
    return:
      type: System.Collections.Generic.HashSet{System.Int32}
  overload: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.AdditionalSqlErrorCodes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.ExcludedSqlErrorCodes
  commentId: P:Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.ExcludedSqlErrorCodes
  id: ExcludedSqlErrorCodes
  parent: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy
  langs:
  - csharp
  - vb
  name: ExcludedSqlErrorCodes
  nameWithType: SqlTransientExceptionDetectionPolicy.ExcludedSqlErrorCodes
  fullName: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.ExcludedSqlErrorCodes
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/TransientFaultHandling/SqlTransientExceptionDetectionPolicy.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ExcludedSqlErrorCodes
    path: ../Microsoft.Health.Utility/utilities/TransientFaultHandling/SqlTransientExceptionDetectionPolicy.cs
    startLine: 60
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.TransientFaultHandling
  summary: "\nSQL error numbers that should not be considered transient.\n"
  example: []
  syntax:
    content: public HashSet<int> ExcludedSqlErrorCodes { get; }
    content.vb: Public ReadOnly Property ExcludedSqlErrorCodes As HashSet(Of Integer)
    parameters: []
    return:
      type: System.Collections.Generic.HashSet{System.Int32}
  overload: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.ExcludedSqlErrorCodes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.IsTransient(System.Exception)
  commentId: M:Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.IsTransient(System.Exception)
  id: IsTransient(System.Exception)
  parent: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy
  langs:
  - csharp
  - vb
  name: IsTransient(Exception)
  nameWithType: SqlTransientExceptionDetectionPolicy.IsTransient(Exception)
  fullName: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.IsTransient(System.Exception)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/TransientFaultHandling/SqlTransientExceptionDetectionPolicy.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: IsTransient
    path: ../Microsoft.Health.Utility/utilities/TransientFaultHandling/SqlTransientExceptionDetectionPolicy.cs
    startLine: 62
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.TransientFaultHandling
  syntax:
    content: public bool IsTransient(Exception exception)
    content.vb: Public Function IsTransient(exception As Exception) As Boolean
    parameters:
    - id: exception
      type: System.Exception
    return:
      type: System.Boolean
  overload: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.IsTransient*
  implements:
  - Microsoft.Health.Utility.TransientFaultHandling.ITransientExceptionDetectionPolicy.IsTransient(System.Exception)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.CreateTransientExceptionDetectionPolicy
  commentId: M:Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.CreateTransientExceptionDetectionPolicy
  id: CreateTransientExceptionDetectionPolicy
  parent: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy
  langs:
  - csharp
  - vb
  name: CreateTransientExceptionDetectionPolicy()
  nameWithType: SqlTransientExceptionDetectionPolicy.CreateTransientExceptionDetectionPolicy()
  fullName: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.CreateTransientExceptionDetectionPolicy()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/TransientFaultHandling/SqlTransientExceptionDetectionPolicy.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CreateTransientExceptionDetectionPolicy
    path: ../Microsoft.Health.Utility/utilities/TransientFaultHandling/SqlTransientExceptionDetectionPolicy.cs
    startLine: 125
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.TransientFaultHandling
  syntax:
    content: public ITransientExceptionDetectionPolicy CreateTransientExceptionDetectionPolicy()
    content.vb: Public Function CreateTransientExceptionDetectionPolicy As ITransientExceptionDetectionPolicy
    return:
      type: Microsoft.Health.Utility.TransientFaultHandling.ITransientExceptionDetectionPolicy
  overload: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.CreateTransientExceptionDetectionPolicy*
  implements:
  - Microsoft.Health.Utility.TransientFaultHandling.ITransientExceptionDetectionPolicyFactory.CreateTransientExceptionDetectionPolicy
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.GetSchema
  commentId: M:Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.GetSchema
  id: GetSchema
  parent: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy
  langs:
  - csharp
  - vb
  name: GetSchema()
  nameWithType: SqlTransientExceptionDetectionPolicy.GetSchema()
  fullName: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.GetSchema()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/TransientFaultHandling/SqlTransientExceptionDetectionPolicy.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetSchema
    path: ../Microsoft.Health.Utility/utilities/TransientFaultHandling/SqlTransientExceptionDetectionPolicy.cs
    startLine: 130
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.TransientFaultHandling
  syntax:
    content: public XmlSchema GetSchema()
    content.vb: Public Function GetSchema As XmlSchema
    return:
      type: System.Xml.Schema.XmlSchema
  overload: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.GetSchema*
  implements:
  - System.Xml.Serialization.IXmlSerializable.GetSchema
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.ReadXml(System.Xml.XmlReader)
  commentId: M:Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.ReadXml(System.Xml.XmlReader)
  id: ReadXml(System.Xml.XmlReader)
  parent: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy
  langs:
  - csharp
  - vb
  name: ReadXml(XmlReader)
  nameWithType: SqlTransientExceptionDetectionPolicy.ReadXml(XmlReader)
  fullName: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.ReadXml(System.Xml.XmlReader)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/TransientFaultHandling/SqlTransientExceptionDetectionPolicy.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ReadXml
    path: ../Microsoft.Health.Utility/utilities/TransientFaultHandling/SqlTransientExceptionDetectionPolicy.cs
    startLine: 135
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.TransientFaultHandling
  syntax:
    content: public void ReadXml(XmlReader reader)
    content.vb: Public Sub ReadXml(reader As XmlReader)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
  overload: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.ReadXml*
  implements:
  - System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.WriteXml(System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.WriteXml(System.Xml.XmlWriter)
  id: WriteXml(System.Xml.XmlWriter)
  parent: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy
  langs:
  - csharp
  - vb
  name: WriteXml(XmlWriter)
  nameWithType: SqlTransientExceptionDetectionPolicy.WriteXml(XmlWriter)
  fullName: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.WriteXml(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/TransientFaultHandling/SqlTransientExceptionDetectionPolicy.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteXml
    path: ../Microsoft.Health.Utility/utilities/TransientFaultHandling/SqlTransientExceptionDetectionPolicy.cs
    startLine: 173
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.TransientFaultHandling
  syntax:
    content: public void WriteXml(XmlWriter writer)
    content.vb: Public Sub WriteXml(writer As XmlWriter)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
  overload: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.WriteXml*
  implements:
  - System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Health.Utility.TransientFaultHandling
  commentId: N:Microsoft.Health.Utility.TransientFaultHandling
  isExternal: false
  name: Microsoft.Health.Utility.TransientFaultHandling
  nameWithType: Microsoft.Health.Utility.TransientFaultHandling
  fullName: Microsoft.Health.Utility.TransientFaultHandling
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.Utility.TransientFaultHandling.ITransientExceptionDetectionPolicy
  commentId: T:Microsoft.Health.Utility.TransientFaultHandling.ITransientExceptionDetectionPolicy
  parent: Microsoft.Health.Utility.TransientFaultHandling
  isExternal: false
  name: ITransientExceptionDetectionPolicy
  nameWithType: ITransientExceptionDetectionPolicy
  fullName: Microsoft.Health.Utility.TransientFaultHandling.ITransientExceptionDetectionPolicy
- uid: Microsoft.Health.Utility.TransientFaultHandling.ITransientExceptionDetectionPolicyFactory
  commentId: T:Microsoft.Health.Utility.TransientFaultHandling.ITransientExceptionDetectionPolicyFactory
  parent: Microsoft.Health.Utility.TransientFaultHandling
  isExternal: false
  name: ITransientExceptionDetectionPolicyFactory
  nameWithType: ITransientExceptionDetectionPolicyFactory
  fullName: Microsoft.Health.Utility.TransientFaultHandling.ITransientExceptionDetectionPolicyFactory
- uid: System.Xml.Serialization.IXmlSerializable
  commentId: T:System.Xml.Serialization.IXmlSerializable
  parent: System.Xml.Serialization
  isExternal: true
  name: IXmlSerializable
  nameWithType: IXmlSerializable
  fullName: System.Xml.Serialization.IXmlSerializable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<SqlTransientExceptionDetectionPolicy>()
  nameWithType: TypeHelper.ValueOrDbNull<SqlTransientExceptionDetectionPolicy>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of SqlTransientExceptionDetectionPolicy)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy)()
  name.vb: ValueOrDbNull(Of SqlTransientExceptionDetectionPolicy)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<SqlTransientExceptionDetectionPolicy>
    nameWithType: TypeHelper.ValueOrDbNull<SqlTransientExceptionDetectionPolicy>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of SqlTransientExceptionDetectionPolicy)
    nameWithType: TypeHelper.ValueOrDbNull(Of SqlTransientExceptionDetectionPolicy)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Xml.Serialization
  commentId: N:System.Xml.Serialization
  isExternal: false
  name: System.Xml.Serialization
  nameWithType: System.Xml.Serialization
  fullName: System.Xml.Serialization
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.#ctor*
  commentId: Overload:Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.#ctor
  isExternal: false
  name: SqlTransientExceptionDetectionPolicy
  nameWithType: SqlTransientExceptionDetectionPolicy.SqlTransientExceptionDetectionPolicy
  fullName: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.SqlTransientExceptionDetectionPolicy
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IEnumerable{System.Int32}
  commentId: T:System.Collections.Generic.IEnumerable{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Int32>
  nameWithType: IEnumerable<Int32>
  fullName: System.Collections.Generic.IEnumerable<System.Int32>
  nameWithType.vb: IEnumerable(Of Int32)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Int32)
  name.vb: IEnumerable(Of Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.IncludeTimeouts*
  commentId: Overload:Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.IncludeTimeouts
  isExternal: false
  name: IncludeTimeouts
  nameWithType: SqlTransientExceptionDetectionPolicy.IncludeTimeouts
  fullName: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.IncludeTimeouts
- uid: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.AdditionalSqlErrorCodes*
  commentId: Overload:Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.AdditionalSqlErrorCodes
  isExternal: false
  name: AdditionalSqlErrorCodes
  nameWithType: SqlTransientExceptionDetectionPolicy.AdditionalSqlErrorCodes
  fullName: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.AdditionalSqlErrorCodes
- uid: System.Collections.Generic.HashSet{System.Int32}
  commentId: T:System.Collections.Generic.HashSet{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  name: HashSet<Int32>
  nameWithType: HashSet<Int32>
  fullName: System.Collections.Generic.HashSet<System.Int32>
  nameWithType.vb: HashSet(Of Int32)
  fullName.vb: System.Collections.Generic.HashSet(Of System.Int32)
  name.vb: HashSet(Of Int32)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet`1
  commentId: T:System.Collections.Generic.HashSet`1
  isExternal: true
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.ExcludedSqlErrorCodes*
  commentId: Overload:Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.ExcludedSqlErrorCodes
  isExternal: false
  name: ExcludedSqlErrorCodes
  nameWithType: SqlTransientExceptionDetectionPolicy.ExcludedSqlErrorCodes
  fullName: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.ExcludedSqlErrorCodes
- uid: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.IsTransient*
  commentId: Overload:Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.IsTransient
  isExternal: false
  name: IsTransient
  nameWithType: SqlTransientExceptionDetectionPolicy.IsTransient
  fullName: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.IsTransient
- uid: Microsoft.Health.Utility.TransientFaultHandling.ITransientExceptionDetectionPolicy.IsTransient(System.Exception)
  commentId: M:Microsoft.Health.Utility.TransientFaultHandling.ITransientExceptionDetectionPolicy.IsTransient(System.Exception)
  parent: Microsoft.Health.Utility.TransientFaultHandling.ITransientExceptionDetectionPolicy
  isExternal: true
  name: IsTransient(Exception)
  nameWithType: ITransientExceptionDetectionPolicy.IsTransient(Exception)
  fullName: Microsoft.Health.Utility.TransientFaultHandling.ITransientExceptionDetectionPolicy.IsTransient(System.Exception)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TransientFaultHandling.ITransientExceptionDetectionPolicy.IsTransient(System.Exception)
    name: IsTransient
    nameWithType: ITransientExceptionDetectionPolicy.IsTransient
    fullName: Microsoft.Health.Utility.TransientFaultHandling.ITransientExceptionDetectionPolicy.IsTransient
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TransientFaultHandling.ITransientExceptionDetectionPolicy.IsTransient(System.Exception)
    name: IsTransient
    nameWithType: ITransientExceptionDetectionPolicy.IsTransient
    fullName: Microsoft.Health.Utility.TransientFaultHandling.ITransientExceptionDetectionPolicy.IsTransient
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.CreateTransientExceptionDetectionPolicy*
  commentId: Overload:Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.CreateTransientExceptionDetectionPolicy
  isExternal: false
  name: CreateTransientExceptionDetectionPolicy
  nameWithType: SqlTransientExceptionDetectionPolicy.CreateTransientExceptionDetectionPolicy
  fullName: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.CreateTransientExceptionDetectionPolicy
- uid: Microsoft.Health.Utility.TransientFaultHandling.ITransientExceptionDetectionPolicyFactory.CreateTransientExceptionDetectionPolicy
  commentId: M:Microsoft.Health.Utility.TransientFaultHandling.ITransientExceptionDetectionPolicyFactory.CreateTransientExceptionDetectionPolicy
  parent: Microsoft.Health.Utility.TransientFaultHandling.ITransientExceptionDetectionPolicyFactory
  isExternal: false
  name: CreateTransientExceptionDetectionPolicy()
  nameWithType: ITransientExceptionDetectionPolicyFactory.CreateTransientExceptionDetectionPolicy()
  fullName: Microsoft.Health.Utility.TransientFaultHandling.ITransientExceptionDetectionPolicyFactory.CreateTransientExceptionDetectionPolicy()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TransientFaultHandling.ITransientExceptionDetectionPolicyFactory.CreateTransientExceptionDetectionPolicy
    name: CreateTransientExceptionDetectionPolicy
    nameWithType: ITransientExceptionDetectionPolicyFactory.CreateTransientExceptionDetectionPolicy
    fullName: Microsoft.Health.Utility.TransientFaultHandling.ITransientExceptionDetectionPolicyFactory.CreateTransientExceptionDetectionPolicy
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TransientFaultHandling.ITransientExceptionDetectionPolicyFactory.CreateTransientExceptionDetectionPolicy
    name: CreateTransientExceptionDetectionPolicy
    nameWithType: ITransientExceptionDetectionPolicyFactory.CreateTransientExceptionDetectionPolicy
    fullName: Microsoft.Health.Utility.TransientFaultHandling.ITransientExceptionDetectionPolicyFactory.CreateTransientExceptionDetectionPolicy
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.GetSchema*
  commentId: Overload:Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.GetSchema
  isExternal: false
  name: GetSchema
  nameWithType: SqlTransientExceptionDetectionPolicy.GetSchema
  fullName: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.GetSchema
- uid: System.Xml.Serialization.IXmlSerializable.GetSchema
  commentId: M:System.Xml.Serialization.IXmlSerializable.GetSchema
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  name: GetSchema()
  nameWithType: IXmlSerializable.GetSchema()
  fullName: System.Xml.Serialization.IXmlSerializable.GetSchema()
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.GetSchema
    name: GetSchema
    nameWithType: IXmlSerializable.GetSchema
    fullName: System.Xml.Serialization.IXmlSerializable.GetSchema
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.GetSchema
    name: GetSchema
    nameWithType: IXmlSerializable.GetSchema
    fullName: System.Xml.Serialization.IXmlSerializable.GetSchema
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.Schema.XmlSchema
  commentId: T:System.Xml.Schema.XmlSchema
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema
- uid: System.Xml.Schema
  commentId: N:System.Xml.Schema
  isExternal: false
  name: System.Xml.Schema
  nameWithType: System.Xml.Schema
  fullName: System.Xml.Schema
- uid: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.ReadXml*
  commentId: Overload:Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.ReadXml
  isExternal: false
  name: ReadXml
  nameWithType: SqlTransientExceptionDetectionPolicy.ReadXml
  fullName: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.ReadXml
- uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  commentId: M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  name: ReadXml(XmlReader)
  nameWithType: IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
    name: ReadXml
    nameWithType: IXmlSerializable.ReadXml
    fullName: System.Xml.Serialization.IXmlSerializable.ReadXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
    name: ReadXml
    nameWithType: IXmlSerializable.ReadXml
    fullName: System.Xml.Serialization.IXmlSerializable.ReadXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlReader
  commentId: T:System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.WriteXml*
  commentId: Overload:Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.WriteXml
  isExternal: false
  name: WriteXml
  nameWithType: SqlTransientExceptionDetectionPolicy.WriteXml
  fullName: Microsoft.Health.Utility.TransientFaultHandling.SqlTransientExceptionDetectionPolicy.WriteXml
- uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  commentId: M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  name: WriteXml(XmlWriter)
  nameWithType: IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: IXmlSerializable.WriteXml
    fullName: System.Xml.Serialization.IXmlSerializable.WriteXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: IXmlSerializable.WriteXml
    fullName: System.Xml.Serialization.IXmlSerializable.WriteXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
