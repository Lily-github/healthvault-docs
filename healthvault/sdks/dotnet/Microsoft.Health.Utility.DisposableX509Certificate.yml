### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Utility.DisposableX509Certificate
  commentId: T:Microsoft.Health.Utility.DisposableX509Certificate
  id: DisposableX509Certificate
  parent: Microsoft.Health.Utility
  children:
  - Microsoft.Health.Utility.DisposableX509Certificate.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - Microsoft.Health.Utility.DisposableX509Certificate.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)
  - Microsoft.Health.Utility.DisposableX509Certificate.Dispose
  - Microsoft.Health.Utility.DisposableX509Certificate.Dispose(System.Boolean)
  langs:
  - csharp
  - vb
  name: DisposableX509Certificate
  nameWithType: DisposableX509Certificate
  fullName: Microsoft.Health.Utility.DisposableX509Certificate
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/DisposableX509Certificate.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DisposableX509Certificate
    path: ../Microsoft.Health.Utility/utilities/DisposableX509Certificate.cs
    startLine: 16
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\nAllows certificates to be disposed of real time instead\nof waiting for a finalizer or direct calls to Reset().\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public class DisposableX509Certificate : X509Certificate2, IDeserializationCallback, ISerializable, IDisposable
    content.vb: >-
      <Serializable>

      Public Class DisposableX509Certificate
          Inherits X509Certificate2
          Implements IDeserializationCallback, ISerializable, IDisposable
  inheritance:
  - System.Object
  - System.Security.Cryptography.X509Certificates.X509Certificate
  - System.Security.Cryptography.X509Certificates.X509Certificate2
  implements:
  - System.Runtime.Serialization.IDeserializationCallback
  - System.Runtime.Serialization.ISerializable
  - System.IDisposable
  inheritedMembers:
  - System.Security.Cryptography.X509Certificates.X509Certificate2.ToString
  - System.Security.Cryptography.X509Certificates.X509Certificate2.ToString(System.Boolean)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo(System.Security.Cryptography.X509Certificates.X509NameType,System.Boolean)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[])
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Reset
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Verify
  - System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.Byte[])
  - System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Archived
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions
  - System.Security.Cryptography.X509Certificates.X509Certificate2.FriendlyName
  - System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName
  - System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter
  - System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore
  - System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey
  - System.Security.Cryptography.X509Certificates.X509Certificate2.PrivateKey
  - System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey
  - System.Security.Cryptography.X509Certificates.X509Certificate2.RawData
  - System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber
  - System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName
  - System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Version
  - System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile(System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile(System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetName
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString
  - System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Object)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode
  - System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate(System.DateTime)
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat
  - System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.Security.SecureString)
  - System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Handle
  - System.Security.Cryptography.X509Certificates.X509Certificate.Issuer
  - System.Security.Cryptography.X509Certificates.X509Certificate.Subject
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.Utility.DisposableX509Certificate.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.Utility.DisposableX509Certificate.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)
  commentId: M:Microsoft.Health.Utility.DisposableX509Certificate.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)
  id: '#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)'
  parent: Microsoft.Health.Utility.DisposableX509Certificate
  langs:
  - csharp
  - vb
  name: DisposableX509Certificate(X509Certificate2)
  nameWithType: DisposableX509Certificate.DisposableX509Certificate(X509Certificate2)
  fullName: Microsoft.Health.Utility.DisposableX509Certificate.DisposableX509Certificate(System.Security.Cryptography.X509Certificates.X509Certificate2)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/DisposableX509Certificate.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.Utility/utilities/DisposableX509Certificate.cs
    startLine: 21
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  syntax:
    content: public DisposableX509Certificate(X509Certificate2 certificate)
    content.vb: Public Sub New(certificate As X509Certificate2)
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
  overload: Microsoft.Health.Utility.DisposableX509Certificate.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.DisposableX509Certificate.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:Microsoft.Health.Utility.DisposableX509Certificate.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: Microsoft.Health.Utility.DisposableX509Certificate
  langs:
  - csharp
  - vb
  name: DisposableX509Certificate(SerializationInfo, StreamingContext)
  nameWithType: DisposableX509Certificate.DisposableX509Certificate(SerializationInfo, StreamingContext)
  fullName: Microsoft.Health.Utility.DisposableX509Certificate.DisposableX509Certificate(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/DisposableX509Certificate.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.Utility/utilities/DisposableX509Certificate.cs
    startLine: 26
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  syntax:
    content: protected DisposableX509Certificate(SerializationInfo info, StreamingContext context)
    content.vb: Protected Sub New(info As SerializationInfo, context As StreamingContext)
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
    - id: context
      type: System.Runtime.Serialization.StreamingContext
  overload: Microsoft.Health.Utility.DisposableX509Certificate.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.Health.Utility.DisposableX509Certificate.Dispose
  commentId: M:Microsoft.Health.Utility.DisposableX509Certificate.Dispose
  id: Dispose
  parent: Microsoft.Health.Utility.DisposableX509Certificate
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: DisposableX509Certificate.Dispose()
  fullName: Microsoft.Health.Utility.DisposableX509Certificate.Dispose()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/DisposableX509Certificate.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Dispose
    path: ../Microsoft.Health.Utility/utilities/DisposableX509Certificate.cs
    startLine: 31
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Microsoft.Health.Utility.DisposableX509Certificate.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.DisposableX509Certificate.Dispose(System.Boolean)
  commentId: M:Microsoft.Health.Utility.DisposableX509Certificate.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Microsoft.Health.Utility.DisposableX509Certificate
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: DisposableX509Certificate.Dispose(Boolean)
  fullName: Microsoft.Health.Utility.DisposableX509Certificate.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/DisposableX509Certificate.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Dispose
    path: ../Microsoft.Health.Utility/utilities/DisposableX509Certificate.cs
    startLine: 36
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  syntax:
    content: protected virtual void Dispose(bool isDisposing)
    content.vb: Protected Overridable Sub Dispose(isDisposing As Boolean)
    parameters:
    - id: isDisposing
      type: System.Boolean
  overload: Microsoft.Health.Utility.DisposableX509Certificate.Dispose*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Cryptography.X509Certificates.X509Certificate
  commentId: T:System.Security.Cryptography.X509Certificates.X509Certificate
  parent: System.Security.Cryptography.X509Certificates
  isExternal: true
  name: X509Certificate
  nameWithType: X509Certificate
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  commentId: T:System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: true
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.Runtime.Serialization.IDeserializationCallback
  commentId: T:System.Runtime.Serialization.IDeserializationCallback
  parent: System.Runtime.Serialization
  isExternal: true
  name: IDeserializationCallback
  nameWithType: IDeserializationCallback
  fullName: System.Runtime.Serialization.IDeserializationCallback
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: true
  name: ToString()
  nameWithType: X509Certificate2.ToString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString()
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString
    name: ToString
    nameWithType: X509Certificate2.ToString
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString
    name: ToString
    nameWithType: X509Certificate2.ToString
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString(System.Boolean)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString(System.Boolean)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: true
  name: ToString(Boolean)
  nameWithType: X509Certificate2.ToString(Boolean)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString(System.Boolean)
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString(System.Boolean)
    name: ToString
    nameWithType: X509Certificate2.ToString
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString(System.Boolean)
    name: ToString
    nameWithType: X509Certificate2.ToString
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo(System.Security.Cryptography.X509Certificates.X509NameType,System.Boolean)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo(System.Security.Cryptography.X509Certificates.X509NameType,System.Boolean)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: true
  name: GetNameInfo(X509NameType, Boolean)
  nameWithType: X509Certificate2.GetNameInfo(X509NameType, Boolean)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo(System.Security.Cryptography.X509Certificates.X509NameType, System.Boolean)
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo(System.Security.Cryptography.X509Certificates.X509NameType,System.Boolean)
    name: GetNameInfo
    nameWithType: X509Certificate2.GetNameInfo
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Cryptography.X509Certificates.X509NameType
    name: X509NameType
    nameWithType: X509NameType
    fullName: System.Security.Cryptography.X509Certificates.X509NameType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo(System.Security.Cryptography.X509Certificates.X509NameType,System.Boolean)
    name: GetNameInfo
    nameWithType: X509Certificate2.GetNameInfo
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Cryptography.X509Certificates.X509NameType
    name: X509NameType
    nameWithType: X509NameType
    fullName: System.Security.Cryptography.X509Certificates.X509NameType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[])
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[])
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: true
  name: Import(Byte[])
  nameWithType: X509Certificate2.Import(Byte[])
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[])
  nameWithType.vb: X509Certificate2.Import(Byte())
  fullName.vb: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte())
  name.vb: Import(Byte())
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[])
    name: Import
    nameWithType: X509Certificate2.Import
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[])
    name: Import
    nameWithType: X509Certificate2.Import
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: true
  name: Import(Byte[], String, X509KeyStorageFlags)
  nameWithType: X509Certificate2.Import(Byte[], String, X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[], System.String, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  nameWithType.vb: X509Certificate2.Import(Byte(), String, X509KeyStorageFlags)
  fullName.vb: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte(), System.String, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  name.vb: Import(Byte(), String, X509KeyStorageFlags)
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
    name: Import
    nameWithType: X509Certificate2.Import
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
    name: X509KeyStorageFlags
    nameWithType: X509KeyStorageFlags
    fullName: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
    name: Import
    nameWithType: X509Certificate2.Import
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
    name: X509KeyStorageFlags
    nameWithType: X509KeyStorageFlags
    fullName: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: true
  name: Import(Byte[], SecureString, X509KeyStorageFlags)
  nameWithType: X509Certificate2.Import(Byte[], SecureString, X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[], System.Security.SecureString, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  nameWithType.vb: X509Certificate2.Import(Byte(), SecureString, X509KeyStorageFlags)
  fullName.vb: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte(), System.Security.SecureString, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  name.vb: Import(Byte(), SecureString, X509KeyStorageFlags)
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
    name: Import
    nameWithType: X509Certificate2.Import
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.SecureString
    name: SecureString
    nameWithType: SecureString
    fullName: System.Security.SecureString
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
    name: X509KeyStorageFlags
    nameWithType: X509KeyStorageFlags
    fullName: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
    name: Import
    nameWithType: X509Certificate2.Import
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.SecureString
    name: SecureString
    nameWithType: SecureString
    fullName: System.Security.SecureString
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
    name: X509KeyStorageFlags
    nameWithType: X509KeyStorageFlags
    fullName: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: true
  name: Import(String)
  nameWithType: X509Certificate2.Import(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String)
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String)
    name: Import
    nameWithType: X509Certificate2.Import
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String)
    name: Import
    nameWithType: X509Certificate2.Import
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: true
  name: Import(String, String, X509KeyStorageFlags)
  nameWithType: X509Certificate2.Import(String, String, X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String, System.String, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
    name: Import
    nameWithType: X509Certificate2.Import
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
    name: X509KeyStorageFlags
    nameWithType: X509KeyStorageFlags
    fullName: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
    name: Import
    nameWithType: X509Certificate2.Import
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
    name: X509KeyStorageFlags
    nameWithType: X509KeyStorageFlags
    fullName: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: true
  name: Import(String, SecureString, X509KeyStorageFlags)
  nameWithType: X509Certificate2.Import(String, SecureString, X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String, System.Security.SecureString, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
    name: Import
    nameWithType: X509Certificate2.Import
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.SecureString
    name: SecureString
    nameWithType: SecureString
    fullName: System.Security.SecureString
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
    name: X509KeyStorageFlags
    nameWithType: X509KeyStorageFlags
    fullName: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
    name: Import
    nameWithType: X509Certificate2.Import
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.SecureString
    name: SecureString
    nameWithType: SecureString
    fullName: System.Security.SecureString
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
    name: X509KeyStorageFlags
    nameWithType: X509KeyStorageFlags
    fullName: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Reset
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2.Reset
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: true
  name: Reset()
  nameWithType: X509Certificate2.Reset()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Reset()
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Reset
    name: Reset
    nameWithType: X509Certificate2.Reset
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Reset
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Reset
    name: Reset
    nameWithType: X509Certificate2.Reset
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Reset
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Verify
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2.Verify
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: true
  name: Verify()
  nameWithType: X509Certificate2.Verify()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Verify()
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Verify
    name: Verify
    nameWithType: X509Certificate2.Verify
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Verify
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Verify
    name: Verify
    nameWithType: X509Certificate2.Verify
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Verify
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.Byte[])
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.Byte[])
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: true
  name: GetCertContentType(Byte[])
  nameWithType: X509Certificate2.GetCertContentType(Byte[])
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.Byte[])
  nameWithType.vb: X509Certificate2.GetCertContentType(Byte())
  fullName.vb: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.Byte())
  name.vb: GetCertContentType(Byte())
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.Byte[])
    name: GetCertContentType
    nameWithType: X509Certificate2.GetCertContentType
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.Byte[])
    name: GetCertContentType
    nameWithType: X509Certificate2.GetCertContentType
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.String)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: true
  name: GetCertContentType(String)
  nameWithType: X509Certificate2.GetCertContentType(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.String)
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.String)
    name: GetCertContentType
    nameWithType: X509Certificate2.GetCertContentType
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.String)
    name: GetCertContentType
    nameWithType: X509Certificate2.GetCertContentType
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Archived
  commentId: P:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: true
  name: Archived
  nameWithType: X509Certificate2.Archived
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Archived
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions
  commentId: P:System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: true
  name: Extensions
  nameWithType: X509Certificate2.Extensions
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.FriendlyName
  commentId: P:System.Security.Cryptography.X509Certificates.X509Certificate2.FriendlyName
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: true
  name: FriendlyName
  nameWithType: X509Certificate2.FriendlyName
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.FriendlyName
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName
  commentId: P:System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: true
  name: IssuerName
  nameWithType: X509Certificate2.IssuerName
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter
  commentId: P:System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: true
  name: NotAfter
  nameWithType: X509Certificate2.NotAfter
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore
  commentId: P:System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: true
  name: NotBefore
  nameWithType: X509Certificate2.NotBefore
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey
  commentId: P:System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: true
  name: HasPrivateKey
  nameWithType: X509Certificate2.HasPrivateKey
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.PrivateKey
  commentId: P:System.Security.Cryptography.X509Certificates.X509Certificate2.PrivateKey
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: true
  name: PrivateKey
  nameWithType: X509Certificate2.PrivateKey
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.PrivateKey
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey
  commentId: P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: true
  name: PublicKey
  nameWithType: X509Certificate2.PublicKey
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.RawData
  commentId: P:System.Security.Cryptography.X509Certificates.X509Certificate2.RawData
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: true
  name: RawData
  nameWithType: X509Certificate2.RawData
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.RawData
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber
  commentId: P:System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: true
  name: SerialNumber
  nameWithType: X509Certificate2.SerialNumber
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName
  commentId: P:System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: true
  name: SubjectName
  nameWithType: X509Certificate2.SubjectName
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm
  commentId: P:System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: true
  name: SignatureAlgorithm
  nameWithType: X509Certificate2.SignatureAlgorithm
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint
  commentId: P:System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: true
  name: Thumbprint
  nameWithType: X509Certificate2.Thumbprint
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Version
  commentId: P:System.Security.Cryptography.X509Certificates.X509Certificate2.Version
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: true
  name: Version
  nameWithType: X509Certificate2.Version
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Version
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile(System.String)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: true
  name: CreateFromCertFile(String)
  nameWithType: X509Certificate.CreateFromCertFile(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile(System.String)
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile(System.String)
    name: CreateFromCertFile
    nameWithType: X509Certificate.CreateFromCertFile
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile(System.String)
    name: CreateFromCertFile
    nameWithType: X509Certificate.CreateFromCertFile
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile(System.String)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: true
  name: CreateFromSignedFile(String)
  nameWithType: X509Certificate.CreateFromSignedFile(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile(System.String)
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile(System.String)
    name: CreateFromSignedFile
    nameWithType: X509Certificate.CreateFromSignedFile
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile(System.String)
    name: CreateFromSignedFile
    nameWithType: X509Certificate.CreateFromSignedFile
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetName
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.GetName
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: true
  name: GetName()
  nameWithType: X509Certificate.GetName()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetName()
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetName
    name: GetName
    nameWithType: X509Certificate.GetName
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetName
    name: GetName
    nameWithType: X509Certificate.GetName
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: true
  name: GetIssuerName()
  nameWithType: X509Certificate.GetIssuerName()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName()
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName
    name: GetIssuerName
    nameWithType: X509Certificate.GetIssuerName
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName
    name: GetIssuerName
    nameWithType: X509Certificate.GetIssuerName
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: true
  name: GetSerialNumber()
  nameWithType: X509Certificate.GetSerialNumber()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber()
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber
    name: GetSerialNumber
    nameWithType: X509Certificate.GetSerialNumber
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber
    name: GetSerialNumber
    nameWithType: X509Certificate.GetSerialNumber
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: true
  name: GetSerialNumberString()
  nameWithType: X509Certificate.GetSerialNumberString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString()
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString
    name: GetSerialNumberString
    nameWithType: X509Certificate.GetSerialNumberString
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString
    name: GetSerialNumberString
    nameWithType: X509Certificate.GetSerialNumberString
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: true
  name: GetKeyAlgorithmParameters()
  nameWithType: X509Certificate.GetKeyAlgorithmParameters()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters()
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters
    name: GetKeyAlgorithmParameters
    nameWithType: X509Certificate.GetKeyAlgorithmParameters
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters
    name: GetKeyAlgorithmParameters
    nameWithType: X509Certificate.GetKeyAlgorithmParameters
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: true
  name: GetKeyAlgorithmParametersString()
  nameWithType: X509Certificate.GetKeyAlgorithmParametersString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString()
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString
    name: GetKeyAlgorithmParametersString
    nameWithType: X509Certificate.GetKeyAlgorithmParametersString
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString
    name: GetKeyAlgorithmParametersString
    nameWithType: X509Certificate.GetKeyAlgorithmParametersString
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: true
  name: GetKeyAlgorithm()
  nameWithType: X509Certificate.GetKeyAlgorithm()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm()
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm
    name: GetKeyAlgorithm
    nameWithType: X509Certificate.GetKeyAlgorithm
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm
    name: GetKeyAlgorithm
    nameWithType: X509Certificate.GetKeyAlgorithm
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: true
  name: GetPublicKey()
  nameWithType: X509Certificate.GetPublicKey()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey()
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey
    name: GetPublicKey
    nameWithType: X509Certificate.GetPublicKey
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey
    name: GetPublicKey
    nameWithType: X509Certificate.GetPublicKey
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: true
  name: GetPublicKeyString()
  nameWithType: X509Certificate.GetPublicKeyString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString()
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString
    name: GetPublicKeyString
    nameWithType: X509Certificate.GetPublicKeyString
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString
    name: GetPublicKeyString
    nameWithType: X509Certificate.GetPublicKeyString
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: true
  name: GetRawCertData()
  nameWithType: X509Certificate.GetRawCertData()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData()
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData
    name: GetRawCertData
    nameWithType: X509Certificate.GetRawCertData
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData
    name: GetRawCertData
    nameWithType: X509Certificate.GetRawCertData
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: true
  name: GetRawCertDataString()
  nameWithType: X509Certificate.GetRawCertDataString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString()
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString
    name: GetRawCertDataString
    nameWithType: X509Certificate.GetRawCertDataString
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString
    name: GetRawCertDataString
    nameWithType: X509Certificate.GetRawCertDataString
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: true
  name: GetCertHash()
  nameWithType: X509Certificate.GetCertHash()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash()
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash
    name: GetCertHash
    nameWithType: X509Certificate.GetCertHash
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash
    name: GetCertHash
    nameWithType: X509Certificate.GetCertHash
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: true
  name: GetCertHashString()
  nameWithType: X509Certificate.GetCertHashString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString()
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString
    name: GetCertHashString
    nameWithType: X509Certificate.GetCertHashString
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString
    name: GetCertHashString
    nameWithType: X509Certificate.GetCertHashString
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: true
  name: GetEffectiveDateString()
  nameWithType: X509Certificate.GetEffectiveDateString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString()
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString
    name: GetEffectiveDateString
    nameWithType: X509Certificate.GetEffectiveDateString
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString
    name: GetEffectiveDateString
    nameWithType: X509Certificate.GetEffectiveDateString
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: true
  name: GetExpirationDateString()
  nameWithType: X509Certificate.GetExpirationDateString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString()
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString
    name: GetExpirationDateString
    nameWithType: X509Certificate.GetExpirationDateString
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString
    name: GetExpirationDateString
    nameWithType: X509Certificate.GetExpirationDateString
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Object)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Object)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: true
  name: Equals(Object)
  nameWithType: X509Certificate.Equals(Object)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Object)
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Object)
    name: Equals
    nameWithType: X509Certificate.Equals
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Object)
    name: Equals
    nameWithType: X509Certificate.Equals
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Security.Cryptography.X509Certificates.X509Certificate)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: true
  name: Equals(X509Certificate)
  nameWithType: X509Certificate.Equals(X509Certificate)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Security.Cryptography.X509Certificates.X509Certificate)
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Security.Cryptography.X509Certificates.X509Certificate)
    name: Equals
    nameWithType: X509Certificate.Equals
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate
    name: X509Certificate
    nameWithType: X509Certificate
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Security.Cryptography.X509Certificates.X509Certificate)
    name: Equals
    nameWithType: X509Certificate.Equals
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate
    name: X509Certificate
    nameWithType: X509Certificate
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: true
  name: GetHashCode()
  nameWithType: X509Certificate.GetHashCode()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode()
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode
    name: GetHashCode
    nameWithType: X509Certificate.GetHashCode
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode
    name: GetHashCode
    nameWithType: X509Certificate.GetHashCode
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate(System.DateTime)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate(System.DateTime)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: true
  name: FormatDate(DateTime)
  nameWithType: X509Certificate.FormatDate(DateTime)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate(System.DateTime)
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate(System.DateTime)
    name: FormatDate
    nameWithType: X509Certificate.FormatDate
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate(System.DateTime)
    name: FormatDate
    nameWithType: X509Certificate.FormatDate
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: true
  name: GetFormat()
  nameWithType: X509Certificate.GetFormat()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat()
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat
    name: GetFormat
    nameWithType: X509Certificate.GetFormat
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat
    name: GetFormat
    nameWithType: X509Certificate.GetFormat
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: true
  name: Export(X509ContentType)
  nameWithType: X509Certificate.Export(X509ContentType)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType)
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType)
    name: Export
    nameWithType: X509Certificate.Export
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Cryptography.X509Certificates.X509ContentType
    name: X509ContentType
    nameWithType: X509ContentType
    fullName: System.Security.Cryptography.X509Certificates.X509ContentType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType)
    name: Export
    nameWithType: X509Certificate.Export
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Cryptography.X509Certificates.X509ContentType
    name: X509ContentType
    nameWithType: X509ContentType
    fullName: System.Security.Cryptography.X509Certificates.X509ContentType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: true
  name: Export(X509ContentType, String)
  nameWithType: X509Certificate.Export(X509ContentType, String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType, System.String)
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)
    name: Export
    nameWithType: X509Certificate.Export
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Cryptography.X509Certificates.X509ContentType
    name: X509ContentType
    nameWithType: X509ContentType
    fullName: System.Security.Cryptography.X509Certificates.X509ContentType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)
    name: Export
    nameWithType: X509Certificate.Export
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Cryptography.X509Certificates.X509ContentType
    name: X509ContentType
    nameWithType: X509ContentType
    fullName: System.Security.Cryptography.X509Certificates.X509ContentType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.Security.SecureString)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.Security.SecureString)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: true
  name: Export(X509ContentType, SecureString)
  nameWithType: X509Certificate.Export(X509ContentType, SecureString)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType, System.Security.SecureString)
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.Security.SecureString)
    name: Export
    nameWithType: X509Certificate.Export
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Cryptography.X509Certificates.X509ContentType
    name: X509ContentType
    nameWithType: X509ContentType
    fullName: System.Security.Cryptography.X509Certificates.X509ContentType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.SecureString
    name: SecureString
    nameWithType: SecureString
    fullName: System.Security.SecureString
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.Security.SecureString)
    name: Export
    nameWithType: X509Certificate.Export
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Cryptography.X509Certificates.X509ContentType
    name: X509ContentType
    nameWithType: X509ContentType
    fullName: System.Security.Cryptography.X509Certificates.X509ContentType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.SecureString
    name: SecureString
    nameWithType: SecureString
    fullName: System.Security.SecureString
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: true
  name: ISerializable.GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: X509Certificate.ISerializable.GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType.vb: X509Certificate.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo, StreamingContext)
  name.vb: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo, StreamingContext)
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: ISerializable.GetObjectData
    nameWithType: X509Certificate.ISerializable.GetObjectData
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.System.Runtime.Serialization.ISerializable.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: System.Runtime.Serialization.ISerializable.GetObjectData
    nameWithType: X509Certificate.System.Runtime.Serialization.ISerializable.GetObjectData
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.System.Runtime.Serialization.ISerializable.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: true
  name: IDeserializationCallback.OnDeserialization(Object)
  nameWithType: X509Certificate.IDeserializationCallback.OnDeserialization(Object)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)
  nameWithType.vb: X509Certificate.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)
  name.vb: System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)
    name: IDeserializationCallback.OnDeserialization
    nameWithType: X509Certificate.IDeserializationCallback.OnDeserialization
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)
    name: System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
    nameWithType: X509Certificate.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Handle
  commentId: P:System.Security.Cryptography.X509Certificates.X509Certificate.Handle
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: true
  name: Handle
  nameWithType: X509Certificate.Handle
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Handle
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Issuer
  commentId: P:System.Security.Cryptography.X509Certificates.X509Certificate.Issuer
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: true
  name: Issuer
  nameWithType: X509Certificate.Issuer
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Issuer
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Subject
  commentId: P:System.Security.Cryptography.X509Certificates.X509Certificate.Subject
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: true
  name: Subject
  nameWithType: X509Certificate.Subject
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Subject
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.DisposableX509Certificate.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<DisposableX509Certificate>()
  nameWithType: TypeHelper.ValueOrDbNull<DisposableX509Certificate>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Utility.DisposableX509Certificate>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of DisposableX509Certificate)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Utility.DisposableX509Certificate)()
  name.vb: ValueOrDbNull(Of DisposableX509Certificate)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<DisposableX509Certificate>
    nameWithType: TypeHelper.ValueOrDbNull<DisposableX509Certificate>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Utility.DisposableX509Certificate>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of DisposableX509Certificate)
    nameWithType: TypeHelper.ValueOrDbNull(Of DisposableX509Certificate)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Utility.DisposableX509Certificate)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Security.Cryptography.X509Certificates
  commentId: N:System.Security.Cryptography.X509Certificates
  isExternal: false
  name: System.Security.Cryptography.X509Certificates
  nameWithType: System.Security.Cryptography.X509Certificates
  fullName: System.Security.Cryptography.X509Certificates
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: false
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility.DisposableX509Certificate.#ctor*
  commentId: Overload:Microsoft.Health.Utility.DisposableX509Certificate.#ctor
  isExternal: false
  name: DisposableX509Certificate
  nameWithType: DisposableX509Certificate.DisposableX509Certificate
  fullName: Microsoft.Health.Utility.DisposableX509Certificate.DisposableX509Certificate
- uid: System.Runtime.Serialization.SerializationInfo
  commentId: T:System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: true
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  commentId: T:System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: Microsoft.Health.Utility.DisposableX509Certificate.Dispose*
  commentId: Overload:Microsoft.Health.Utility.DisposableX509Certificate.Dispose
  isExternal: false
  name: Dispose
  nameWithType: DisposableX509Certificate.Dispose
  fullName: Microsoft.Health.Utility.DisposableX509Certificate.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
