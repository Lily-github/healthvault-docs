### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.InvertedIndex.TermList
  commentId: T:Microsoft.Health.InvertedIndex.TermList
  id: TermList
  parent: Microsoft.Health.InvertedIndex
  children:
  - Microsoft.Health.InvertedIndex.TermList.#ctor
  - Microsoft.Health.InvertedIndex.TermList.#ctor(System.Int32)
  - Microsoft.Health.InvertedIndex.TermList.Add(System.String)
  - Microsoft.Health.InvertedIndex.TermList.Add(System.String,System.Single)
  - Microsoft.Health.InvertedIndex.TermList.AddNoCheck(System.String)
  - Microsoft.Health.InvertedIndex.TermList.AddNoCheck(System.String,System.Single)
  - Microsoft.Health.InvertedIndex.TermList.CalculateWeights
  - Microsoft.Health.InvertedIndex.TermList.Compare(Microsoft.Health.InvertedIndex.WeightedTerm,Microsoft.Health.InvertedIndex.WeightedTerm)
  - Microsoft.Health.InvertedIndex.TermList.Contains(System.String)
  - Microsoft.Health.InvertedIndex.TermList.CopyTo(System.String[],System.Int32)
  - Microsoft.Health.InvertedIndex.TermList.Dedupe
  - Microsoft.Health.InvertedIndex.TermList.GetEnumerator
  - Microsoft.Health.InvertedIndex.TermList.IndexOf(System.String)
  - Microsoft.Health.InvertedIndex.TermList.Insert(System.Int32,System.String)
  - Microsoft.Health.InvertedIndex.TermList.Item(System.Int32)
  - Microsoft.Health.InvertedIndex.TermList.Remove(System.String)
  - Microsoft.Health.InvertedIndex.TermList.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  - vb
  name: TermList
  nameWithType: TermList
  fullName: Microsoft.Health.InvertedIndex.TermList
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/TermList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: TermList
    path: ../Microsoft.Health.Utility/search/InvertedIndex/TermList.cs
    startLine: 84
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: 'public class TermList : FastList<WeightedTerm>, IList<WeightedTerm>, ICollection<WeightedTerm>, IEnumerable<WeightedTerm>, IComparer<WeightedTerm>, IList<string>, ICollection<string>, IEnumerable<string>, IEnumerable'
    content.vb: >-
      Public Class TermList
          Inherits FastList(Of WeightedTerm)
          Implements IList(Of WeightedTerm), ICollection(Of WeightedTerm), IEnumerable(Of WeightedTerm), IComparer(Of WeightedTerm), IList(Of String), ICollection(Of String), IEnumerable(Of String), IEnumerable
  inheritance:
  - System.Object
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}
  implements:
  - System.Collections.Generic.IList{Microsoft.Health.InvertedIndex.WeightedTerm}
  - System.Collections.Generic.ICollection{Microsoft.Health.InvertedIndex.WeightedTerm}
  - System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.WeightedTerm}
  - System.Collections.Generic.IComparer{Microsoft.Health.InvertedIndex.WeightedTerm}
  - System.Collections.Generic.IList{System.String}
  - System.Collections.Generic.ICollection{System.String}
  - System.Collections.Generic.IEnumerable{System.String}
  - System.Collections.IEnumerable
  inheritedMembers:
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.Buffer
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.Count
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.IsReadOnly
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.Add(Microsoft.Health.InvertedIndex.WeightedTerm)
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.AddNoCheck(Microsoft.Health.InvertedIndex.WeightedTerm)
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.AddRange(System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.WeightedTerm})
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.AddRange(System.Collections.Generic.IList{Microsoft.Health.InvertedIndex.WeightedTerm})
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.AddRange(Microsoft.Health.InvertedIndex.WeightedTerm[])
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.AddRange(Microsoft.Health.InvertedIndex.WeightedTerm[],System.Int32,System.Int32)
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.Clear
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.Erase
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.GetAt(System.Int32)
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.Contains(Microsoft.Health.InvertedIndex.WeightedTerm)
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.IndexOf(Microsoft.Health.InvertedIndex.WeightedTerm)
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.Insert(System.Int32,Microsoft.Health.InvertedIndex.WeightedTerm)
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.RemoveAt(System.Int32)
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.CopyTo(Microsoft.Health.InvertedIndex.WeightedTerm[],System.Int32)
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.Remove(Microsoft.Health.InvertedIndex.WeightedTerm)
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.Trim
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.Sort
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.Sort(System.Collections.Generic.IComparer{Microsoft.Health.InvertedIndex.WeightedTerm})
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.BinarySearch(Microsoft.Health.InvertedIndex.WeightedTerm)
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.BinarySearch(Microsoft.Health.InvertedIndex.WeightedTerm,System.Collections.Generic.IComparer{Microsoft.Health.InvertedIndex.WeightedTerm})
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.CalculateNewSize(System.Int32)
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.EnsureCapacity
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.EnsureCapacity(System.Int32)
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.Init(System.Int32)
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.ToArray
  - Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.GetTrimmedBuffer
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Collections.Generic.IList{System.String}.Microsoft.Health.CSVExtensions.GetOptional(System.Int32)
  - System.Collections.Generic.IList{System.String}.Microsoft.Health.CSVExtensions.GetOptional(System.Int32,System.String)
  - System.Collections.Generic.IList{System.String}.Microsoft.Health.CSVExtensions.GetOptional``1(System.Int32,{T})
  - System.Collections.Generic.IList{System.String}.Microsoft.Health.CSVExtensions.Get``1(System.Int32)
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.InvertedIndex.TermList.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.InvertedIndex.TermList.#ctor
  commentId: M:Microsoft.Health.InvertedIndex.TermList.#ctor
  id: '#ctor'
  parent: Microsoft.Health.InvertedIndex.TermList
  langs:
  - csharp
  - vb
  name: TermList()
  nameWithType: TermList.TermList()
  fullName: Microsoft.Health.InvertedIndex.TermList.TermList()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/TermList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.Utility/search/InvertedIndex/TermList.cs
    startLine: 89
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public TermList()
    content.vb: Public Sub New
  overload: Microsoft.Health.InvertedIndex.TermList.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.TermList.#ctor(System.Int32)
  commentId: M:Microsoft.Health.InvertedIndex.TermList.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: Microsoft.Health.InvertedIndex.TermList
  langs:
  - csharp
  - vb
  name: TermList(Int32)
  nameWithType: TermList.TermList(Int32)
  fullName: Microsoft.Health.InvertedIndex.TermList.TermList(System.Int32)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/TermList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.Utility/search/InvertedIndex/TermList.cs
    startLine: 97
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public TermList(int capacity)
    content.vb: Public Sub New(capacity As Integer)
    parameters:
    - id: capacity
      type: System.Int32
      description: ''
  overload: Microsoft.Health.InvertedIndex.TermList.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.TermList.Add(System.String)
  commentId: M:Microsoft.Health.InvertedIndex.TermList.Add(System.String)
  id: Add(System.String)
  parent: Microsoft.Health.InvertedIndex.TermList
  langs:
  - csharp
  - vb
  name: Add(String)
  nameWithType: TermList.Add(String)
  fullName: Microsoft.Health.InvertedIndex.TermList.Add(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/TermList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Add
    path: ../Microsoft.Health.Utility/search/InvertedIndex/TermList.cs
    startLine: 106
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Add(string item)
    content.vb: Public Sub Add(item As String)
    parameters:
    - id: item
      type: System.String
      description: ''
  overload: Microsoft.Health.InvertedIndex.TermList.Add*
  implements:
  - System.Collections.Generic.ICollection{System.String}.Add(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.TermList.Add(System.String,System.Single)
  commentId: M:Microsoft.Health.InvertedIndex.TermList.Add(System.String,System.Single)
  id: Add(System.String,System.Single)
  parent: Microsoft.Health.InvertedIndex.TermList
  langs:
  - csharp
  - vb
  name: Add(String, Single)
  nameWithType: TermList.Add(String, Single)
  fullName: Microsoft.Health.InvertedIndex.TermList.Add(System.String, System.Single)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/TermList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Add
    path: ../Microsoft.Health.Utility/search/InvertedIndex/TermList.cs
    startLine: 116
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Add(string item, float weight)
    content.vb: Public Sub Add(item As String, weight As Single)
    parameters:
    - id: item
      type: System.String
      description: ''
    - id: weight
      type: System.Single
      description: ''
  overload: Microsoft.Health.InvertedIndex.TermList.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.TermList.AddNoCheck(System.String)
  commentId: M:Microsoft.Health.InvertedIndex.TermList.AddNoCheck(System.String)
  id: AddNoCheck(System.String)
  parent: Microsoft.Health.InvertedIndex.TermList
  langs:
  - csharp
  - vb
  name: AddNoCheck(String)
  nameWithType: TermList.AddNoCheck(String)
  fullName: Microsoft.Health.InvertedIndex.TermList.AddNoCheck(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/TermList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AddNoCheck
    path: ../Microsoft.Health.Utility/search/InvertedIndex/TermList.cs
    startLine: 125
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void AddNoCheck(string term)
    content.vb: Public Sub AddNoCheck(term As String)
    parameters:
    - id: term
      type: System.String
      description: ''
  overload: Microsoft.Health.InvertedIndex.TermList.AddNoCheck*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.TermList.AddNoCheck(System.String,System.Single)
  commentId: M:Microsoft.Health.InvertedIndex.TermList.AddNoCheck(System.String,System.Single)
  id: AddNoCheck(System.String,System.Single)
  parent: Microsoft.Health.InvertedIndex.TermList
  langs:
  - csharp
  - vb
  name: AddNoCheck(String, Single)
  nameWithType: TermList.AddNoCheck(String, Single)
  fullName: Microsoft.Health.InvertedIndex.TermList.AddNoCheck(System.String, System.Single)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/TermList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AddNoCheck
    path: ../Microsoft.Health.Utility/search/InvertedIndex/TermList.cs
    startLine: 135
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void AddNoCheck(string term, float weight)
    content.vb: Public Sub AddNoCheck(term As String, weight As Single)
    parameters:
    - id: term
      type: System.String
      description: ''
    - id: weight
      type: System.Single
      description: ''
  overload: Microsoft.Health.InvertedIndex.TermList.AddNoCheck*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.TermList.CalculateWeights
  commentId: M:Microsoft.Health.InvertedIndex.TermList.CalculateWeights
  id: CalculateWeights
  parent: Microsoft.Health.InvertedIndex.TermList
  langs:
  - csharp
  - vb
  name: CalculateWeights()
  nameWithType: TermList.CalculateWeights()
  fullName: Microsoft.Health.InvertedIndex.TermList.CalculateWeights()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/TermList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CalculateWeights
    path: ../Microsoft.Health.Utility/search/InvertedIndex/TermList.cs
    startLine: 143
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void CalculateWeights()
    content.vb: Public Sub CalculateWeights
  overload: Microsoft.Health.InvertedIndex.TermList.CalculateWeights*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.TermList.Dedupe
  commentId: M:Microsoft.Health.InvertedIndex.TermList.Dedupe
  id: Dedupe
  parent: Microsoft.Health.InvertedIndex.TermList
  langs:
  - csharp
  - vb
  name: Dedupe()
  nameWithType: TermList.Dedupe()
  fullName: Microsoft.Health.InvertedIndex.TermList.Dedupe()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/TermList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Dedupe
    path: ../Microsoft.Health.Utility/search/InvertedIndex/TermList.cs
    startLine: 197
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Dedupe()
    content.vb: Public Sub Dedupe
  overload: Microsoft.Health.InvertedIndex.TermList.Dedupe*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.TermList.Compare(Microsoft.Health.InvertedIndex.WeightedTerm,Microsoft.Health.InvertedIndex.WeightedTerm)
  commentId: M:Microsoft.Health.InvertedIndex.TermList.Compare(Microsoft.Health.InvertedIndex.WeightedTerm,Microsoft.Health.InvertedIndex.WeightedTerm)
  id: Compare(Microsoft.Health.InvertedIndex.WeightedTerm,Microsoft.Health.InvertedIndex.WeightedTerm)
  parent: Microsoft.Health.InvertedIndex.TermList
  langs:
  - csharp
  - vb
  name: Compare(WeightedTerm, WeightedTerm)
  nameWithType: TermList.Compare(WeightedTerm, WeightedTerm)
  fullName: Microsoft.Health.InvertedIndex.TermList.Compare(Microsoft.Health.InvertedIndex.WeightedTerm, Microsoft.Health.InvertedIndex.WeightedTerm)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/TermList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Compare
    path: ../Microsoft.Health.Utility/search/InvertedIndex/TermList.cs
    startLine: 259
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public int Compare(WeightedTerm x, WeightedTerm y)
    content.vb: Public Function Compare(x As WeightedTerm, y As WeightedTerm) As Integer
    parameters:
    - id: x
      type: Microsoft.Health.InvertedIndex.WeightedTerm
      description: ''
    - id: y
      type: Microsoft.Health.InvertedIndex.WeightedTerm
      description: ''
    return:
      type: System.Int32
      description: ''
  overload: Microsoft.Health.InvertedIndex.TermList.Compare*
  implements:
  - System.Collections.Generic.IComparer{Microsoft.Health.InvertedIndex.WeightedTerm}.Compare(Microsoft.Health.InvertedIndex.WeightedTerm,Microsoft.Health.InvertedIndex.WeightedTerm)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.TermList.IndexOf(System.String)
  commentId: M:Microsoft.Health.InvertedIndex.TermList.IndexOf(System.String)
  id: IndexOf(System.String)
  parent: Microsoft.Health.InvertedIndex.TermList
  langs:
  - csharp
  - vb
  name: IndexOf(String)
  nameWithType: TermList.IndexOf(String)
  fullName: Microsoft.Health.InvertedIndex.TermList.IndexOf(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/TermList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: IndexOf
    path: ../Microsoft.Health.Utility/search/InvertedIndex/TermList.cs
    startLine: 272
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public int IndexOf(string item)
    content.vb: Public Function IndexOf(item As String) As Integer
    parameters:
    - id: item
      type: System.String
      description: ''
    return:
      type: System.Int32
      description: ''
  overload: Microsoft.Health.InvertedIndex.TermList.IndexOf*
  implements:
  - System.Collections.Generic.IList{System.String}.IndexOf(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.TermList.Insert(System.Int32,System.String)
  commentId: M:Microsoft.Health.InvertedIndex.TermList.Insert(System.Int32,System.String)
  id: Insert(System.Int32,System.String)
  parent: Microsoft.Health.InvertedIndex.TermList
  langs:
  - csharp
  - vb
  name: Insert(Int32, String)
  nameWithType: TermList.Insert(Int32, String)
  fullName: Microsoft.Health.InvertedIndex.TermList.Insert(System.Int32, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/TermList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Insert
    path: ../Microsoft.Health.Utility/search/InvertedIndex/TermList.cs
    startLine: 291
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Insert(int index, string item)
    content.vb: Public Sub Insert(index As Integer, item As String)
    parameters:
    - id: index
      type: System.Int32
      description: ''
    - id: item
      type: System.String
      description: ''
  overload: Microsoft.Health.InvertedIndex.TermList.Insert*
  implements:
  - System.Collections.Generic.IList{System.String}.Insert(System.Int32,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.TermList.Item(System.Int32)
  commentId: P:Microsoft.Health.InvertedIndex.TermList.Item(System.Int32)
  id: Item(System.Int32)
  parent: Microsoft.Health.InvertedIndex.TermList
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: TermList.Item[Int32]
  fullName: Microsoft.Health.InvertedIndex.TermList.Item[System.Int32]
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/TermList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: this[]
    path: ../Microsoft.Health.Utility/search/InvertedIndex/TermList.cs
    startLine: 301
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public string this[int index] { get; set; }
    content.vb: Public Property Item(index As Integer) As String
    parameters:
    - id: index
      type: System.Int32
      description: ''
    return:
      type: System.String
      description: ''
  overload: Microsoft.Health.InvertedIndex.TermList.Item*
  implements:
  - System.Collections.Generic.IList{System.String}.Item(System.Int32)
  nameWithType.vb: TermList.Item(Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.TermList.Item(System.Int32)
  name.vb: Item(Int32)
- uid: Microsoft.Health.InvertedIndex.TermList.Contains(System.String)
  commentId: M:Microsoft.Health.InvertedIndex.TermList.Contains(System.String)
  id: Contains(System.String)
  parent: Microsoft.Health.InvertedIndex.TermList
  langs:
  - csharp
  - vb
  name: Contains(String)
  nameWithType: TermList.Contains(String)
  fullName: Microsoft.Health.InvertedIndex.TermList.Contains(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/TermList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Contains
    path: ../Microsoft.Health.Utility/search/InvertedIndex/TermList.cs
    startLine: 321
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public bool Contains(string item)
    content.vb: Public Function Contains(item As String) As Boolean
    parameters:
    - id: item
      type: System.String
      description: ''
    return:
      type: System.Boolean
      description: ''
  overload: Microsoft.Health.InvertedIndex.TermList.Contains*
  implements:
  - System.Collections.Generic.ICollection{System.String}.Contains(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.TermList.CopyTo(System.String[],System.Int32)
  commentId: M:Microsoft.Health.InvertedIndex.TermList.CopyTo(System.String[],System.Int32)
  id: CopyTo(System.String[],System.Int32)
  parent: Microsoft.Health.InvertedIndex.TermList
  langs:
  - csharp
  - vb
  name: CopyTo(String[], Int32)
  nameWithType: TermList.CopyTo(String[], Int32)
  fullName: Microsoft.Health.InvertedIndex.TermList.CopyTo(System.String[], System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/TermList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CopyTo
    path: ../Microsoft.Health.Utility/search/InvertedIndex/TermList.cs
    startLine: 331
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void CopyTo(string[] array, int arrayIndex)
    content.vb: Public Sub CopyTo(array As String(), arrayIndex As Integer)
    parameters:
    - id: array
      type: System.String[]
      description: ''
    - id: arrayIndex
      type: System.Int32
      description: ''
  overload: Microsoft.Health.InvertedIndex.TermList.CopyTo*
  implements:
  - System.Collections.Generic.ICollection{System.String}.CopyTo(System.String[],System.Int32)
  nameWithType.vb: TermList.CopyTo(String(), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.TermList.CopyTo(System.String(), System.Int32)
  name.vb: CopyTo(String(), Int32)
- uid: Microsoft.Health.InvertedIndex.TermList.Remove(System.String)
  commentId: M:Microsoft.Health.InvertedIndex.TermList.Remove(System.String)
  id: Remove(System.String)
  parent: Microsoft.Health.InvertedIndex.TermList
  langs:
  - csharp
  - vb
  name: Remove(String)
  nameWithType: TermList.Remove(String)
  fullName: Microsoft.Health.InvertedIndex.TermList.Remove(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/TermList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Remove
    path: ../Microsoft.Health.Utility/search/InvertedIndex/TermList.cs
    startLine: 341
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public bool Remove(string item)
    content.vb: Public Function Remove(item As String) As Boolean
    parameters:
    - id: item
      type: System.String
      description: ''
    return:
      type: System.Boolean
      description: ''
  overload: Microsoft.Health.InvertedIndex.TermList.Remove*
  implements:
  - System.Collections.Generic.ICollection{System.String}.Remove(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.TermList.GetEnumerator
  commentId: M:Microsoft.Health.InvertedIndex.TermList.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.Health.InvertedIndex.TermList
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: TermList.GetEnumerator()
  fullName: Microsoft.Health.InvertedIndex.TermList.GetEnumerator()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/TermList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetEnumerator
    path: ../Microsoft.Health.Utility/search/InvertedIndex/TermList.cs
    startLine: 360
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public IEnumerator<string> GetEnumerator()
    content.vb: Public Function GetEnumerator As IEnumerator(Of String)
    return:
      type: System.Collections.Generic.IEnumerator{System.String}
      description: ''
  overload: Microsoft.Health.InvertedIndex.TermList.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{System.String}.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.TermList.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Microsoft.Health.InvertedIndex.TermList.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: Microsoft.Health.InvertedIndex.TermList
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: TermList.IEnumerable.GetEnumerator()
  fullName: Microsoft.Health.InvertedIndex.TermList.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/TermList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: System.Collections.IEnumerable.GetEnumerator
    path: ../Microsoft.Health.Utility/search/InvertedIndex/TermList.cs
    startLine: 372
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
    return:
      type: System.Collections.IEnumerator
  overload: Microsoft.Health.InvertedIndex.TermList.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: TermList.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
references:
- uid: Microsoft.Health.InvertedIndex
  commentId: N:Microsoft.Health.InvertedIndex
  isExternal: false
  name: Microsoft.Health.InvertedIndex
  nameWithType: Microsoft.Health.InvertedIndex
  fullName: Microsoft.Health.InvertedIndex
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}
  commentId: T:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}
  parent: Microsoft.Health
  definition: Microsoft.Health.FastList`1
  name: FastList<WeightedTerm>
  nameWithType: FastList<WeightedTerm>
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>
  nameWithType.vb: FastList(Of WeightedTerm)
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm)
  name.vb: FastList(Of WeightedTerm)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1
    name: FastList
    nameWithType: FastList
    fullName: Microsoft.Health.FastList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.InvertedIndex.WeightedTerm
    name: WeightedTerm
    nameWithType: WeightedTerm
    fullName: Microsoft.Health.InvertedIndex.WeightedTerm
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.FastList`1
    name: FastList
    nameWithType: FastList
    fullName: Microsoft.Health.FastList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.InvertedIndex.WeightedTerm
    name: WeightedTerm
    nameWithType: WeightedTerm
    fullName: Microsoft.Health.InvertedIndex.WeightedTerm
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Health.InvertedIndex.WeightedTerm}
  commentId: T:System.Collections.Generic.IList{Microsoft.Health.InvertedIndex.WeightedTerm}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<WeightedTerm>
  nameWithType: IList<WeightedTerm>
  fullName: System.Collections.Generic.IList<Microsoft.Health.InvertedIndex.WeightedTerm>
  nameWithType.vb: IList(Of WeightedTerm)
  fullName.vb: System.Collections.Generic.IList(Of Microsoft.Health.InvertedIndex.WeightedTerm)
  name.vb: IList(Of WeightedTerm)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.InvertedIndex.WeightedTerm
    name: WeightedTerm
    nameWithType: WeightedTerm
    fullName: Microsoft.Health.InvertedIndex.WeightedTerm
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.InvertedIndex.WeightedTerm
    name: WeightedTerm
    nameWithType: WeightedTerm
    fullName: Microsoft.Health.InvertedIndex.WeightedTerm
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{Microsoft.Health.InvertedIndex.WeightedTerm}
  commentId: T:System.Collections.Generic.ICollection{Microsoft.Health.InvertedIndex.WeightedTerm}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<WeightedTerm>
  nameWithType: ICollection<WeightedTerm>
  fullName: System.Collections.Generic.ICollection<Microsoft.Health.InvertedIndex.WeightedTerm>
  nameWithType.vb: ICollection(Of WeightedTerm)
  fullName.vb: System.Collections.Generic.ICollection(Of Microsoft.Health.InvertedIndex.WeightedTerm)
  name.vb: ICollection(Of WeightedTerm)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.InvertedIndex.WeightedTerm
    name: WeightedTerm
    nameWithType: WeightedTerm
    fullName: Microsoft.Health.InvertedIndex.WeightedTerm
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.InvertedIndex.WeightedTerm
    name: WeightedTerm
    nameWithType: WeightedTerm
    fullName: Microsoft.Health.InvertedIndex.WeightedTerm
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.WeightedTerm}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.WeightedTerm}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<WeightedTerm>
  nameWithType: IEnumerable<WeightedTerm>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Health.InvertedIndex.WeightedTerm>
  nameWithType.vb: IEnumerable(Of WeightedTerm)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Health.InvertedIndex.WeightedTerm)
  name.vb: IEnumerable(Of WeightedTerm)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.InvertedIndex.WeightedTerm
    name: WeightedTerm
    nameWithType: WeightedTerm
    fullName: Microsoft.Health.InvertedIndex.WeightedTerm
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.InvertedIndex.WeightedTerm
    name: WeightedTerm
    nameWithType: WeightedTerm
    fullName: Microsoft.Health.InvertedIndex.WeightedTerm
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IComparer{Microsoft.Health.InvertedIndex.WeightedTerm}
  commentId: T:System.Collections.Generic.IComparer{Microsoft.Health.InvertedIndex.WeightedTerm}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IComparer`1
  name: IComparer<WeightedTerm>
  nameWithType: IComparer<WeightedTerm>
  fullName: System.Collections.Generic.IComparer<Microsoft.Health.InvertedIndex.WeightedTerm>
  nameWithType.vb: IComparer(Of WeightedTerm)
  fullName.vb: System.Collections.Generic.IComparer(Of Microsoft.Health.InvertedIndex.WeightedTerm)
  name.vb: IComparer(Of WeightedTerm)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.InvertedIndex.WeightedTerm
    name: WeightedTerm
    nameWithType: WeightedTerm
    fullName: Microsoft.Health.InvertedIndex.WeightedTerm
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.InvertedIndex.WeightedTerm
    name: WeightedTerm
    nameWithType: WeightedTerm
    fullName: Microsoft.Health.InvertedIndex.WeightedTerm
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{System.String}
  commentId: T:System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<String>
  nameWithType: ICollection<String>
  fullName: System.Collections.Generic.ICollection<System.String>
  nameWithType.vb: ICollection(Of String)
  fullName.vb: System.Collections.Generic.ICollection(Of System.String)
  name.vb: ICollection(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.Buffer
  commentId: P:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.Buffer
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}
  definition: Microsoft.Health.FastList`1.Buffer
  name: Buffer
  nameWithType: FastList<WeightedTerm>.Buffer
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.Buffer
  nameWithType.vb: FastList(Of WeightedTerm).Buffer
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).Buffer
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.Count
  commentId: P:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.Count
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}
  definition: Microsoft.Health.FastList`1.Count
  name: Count
  nameWithType: FastList<WeightedTerm>.Count
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.Count
  nameWithType.vb: FastList(Of WeightedTerm).Count
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).Count
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.IsReadOnly
  commentId: P:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.IsReadOnly
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}
  definition: Microsoft.Health.FastList`1.IsReadOnly
  name: IsReadOnly
  nameWithType: FastList<WeightedTerm>.IsReadOnly
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.IsReadOnly
  nameWithType.vb: FastList(Of WeightedTerm).IsReadOnly
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).IsReadOnly
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.Add(Microsoft.Health.InvertedIndex.WeightedTerm)
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.Add(Microsoft.Health.InvertedIndex.WeightedTerm)
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}
  definition: Microsoft.Health.FastList`1.Add(`0)
  name: Add(WeightedTerm)
  nameWithType: FastList<WeightedTerm>.Add(WeightedTerm)
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.Add(Microsoft.Health.InvertedIndex.WeightedTerm)
  nameWithType.vb: FastList(Of WeightedTerm).Add(WeightedTerm)
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).Add(Microsoft.Health.InvertedIndex.WeightedTerm)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.Add(`0)
    name: Add
    nameWithType: FastList<WeightedTerm>.Add
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.InvertedIndex.WeightedTerm
    name: WeightedTerm
    nameWithType: WeightedTerm
    fullName: Microsoft.Health.InvertedIndex.WeightedTerm
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.Add(`0)
    name: Add
    nameWithType: FastList(Of WeightedTerm).Add
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.InvertedIndex.WeightedTerm
    name: WeightedTerm
    nameWithType: WeightedTerm
    fullName: Microsoft.Health.InvertedIndex.WeightedTerm
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.AddNoCheck(Microsoft.Health.InvertedIndex.WeightedTerm)
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.AddNoCheck(Microsoft.Health.InvertedIndex.WeightedTerm)
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}
  definition: Microsoft.Health.FastList`1.AddNoCheck(`0)
  name: AddNoCheck(WeightedTerm)
  nameWithType: FastList<WeightedTerm>.AddNoCheck(WeightedTerm)
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.AddNoCheck(Microsoft.Health.InvertedIndex.WeightedTerm)
  nameWithType.vb: FastList(Of WeightedTerm).AddNoCheck(WeightedTerm)
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).AddNoCheck(Microsoft.Health.InvertedIndex.WeightedTerm)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.AddNoCheck(`0)
    name: AddNoCheck
    nameWithType: FastList<WeightedTerm>.AddNoCheck
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.AddNoCheck
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.InvertedIndex.WeightedTerm
    name: WeightedTerm
    nameWithType: WeightedTerm
    fullName: Microsoft.Health.InvertedIndex.WeightedTerm
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.AddNoCheck(`0)
    name: AddNoCheck
    nameWithType: FastList(Of WeightedTerm).AddNoCheck
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).AddNoCheck
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.InvertedIndex.WeightedTerm
    name: WeightedTerm
    nameWithType: WeightedTerm
    fullName: Microsoft.Health.InvertedIndex.WeightedTerm
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.AddRange(System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.WeightedTerm})
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.AddRange(System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.WeightedTerm})
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}
  definition: Microsoft.Health.FastList`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  name: AddRange(IEnumerable<WeightedTerm>)
  nameWithType: FastList<WeightedTerm>.AddRange(IEnumerable<WeightedTerm>)
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.AddRange(System.Collections.Generic.IEnumerable<Microsoft.Health.InvertedIndex.WeightedTerm>)
  nameWithType.vb: FastList(Of WeightedTerm).AddRange(IEnumerable(Of WeightedTerm))
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).AddRange(System.Collections.Generic.IEnumerable(Of Microsoft.Health.InvertedIndex.WeightedTerm))
  name.vb: AddRange(IEnumerable(Of WeightedTerm))
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    nameWithType: FastList<WeightedTerm>.AddRange
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.AddRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.InvertedIndex.WeightedTerm
    name: WeightedTerm
    nameWithType: WeightedTerm
    fullName: Microsoft.Health.InvertedIndex.WeightedTerm
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    nameWithType: FastList(Of WeightedTerm).AddRange
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).AddRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.InvertedIndex.WeightedTerm
    name: WeightedTerm
    nameWithType: WeightedTerm
    fullName: Microsoft.Health.InvertedIndex.WeightedTerm
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.AddRange(System.Collections.Generic.IList{Microsoft.Health.InvertedIndex.WeightedTerm})
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.AddRange(System.Collections.Generic.IList{Microsoft.Health.InvertedIndex.WeightedTerm})
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}
  definition: Microsoft.Health.FastList`1.AddRange(System.Collections.Generic.IList{`0})
  name: AddRange(IList<WeightedTerm>)
  nameWithType: FastList<WeightedTerm>.AddRange(IList<WeightedTerm>)
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.AddRange(System.Collections.Generic.IList<Microsoft.Health.InvertedIndex.WeightedTerm>)
  nameWithType.vb: FastList(Of WeightedTerm).AddRange(IList(Of WeightedTerm))
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).AddRange(System.Collections.Generic.IList(Of Microsoft.Health.InvertedIndex.WeightedTerm))
  name.vb: AddRange(IList(Of WeightedTerm))
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.AddRange(System.Collections.Generic.IList{`0})
    name: AddRange
    nameWithType: FastList<WeightedTerm>.AddRange
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.AddRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.InvertedIndex.WeightedTerm
    name: WeightedTerm
    nameWithType: WeightedTerm
    fullName: Microsoft.Health.InvertedIndex.WeightedTerm
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.AddRange(System.Collections.Generic.IList{`0})
    name: AddRange
    nameWithType: FastList(Of WeightedTerm).AddRange
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).AddRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.InvertedIndex.WeightedTerm
    name: WeightedTerm
    nameWithType: WeightedTerm
    fullName: Microsoft.Health.InvertedIndex.WeightedTerm
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.AddRange(Microsoft.Health.InvertedIndex.WeightedTerm[])
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.AddRange(Microsoft.Health.InvertedIndex.WeightedTerm[])
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}
  definition: Microsoft.Health.FastList`1.AddRange(`0[])
  name: AddRange(WeightedTerm[])
  nameWithType: FastList<WeightedTerm>.AddRange(WeightedTerm[])
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.AddRange(Microsoft.Health.InvertedIndex.WeightedTerm[])
  nameWithType.vb: FastList(Of WeightedTerm).AddRange(WeightedTerm())
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).AddRange(Microsoft.Health.InvertedIndex.WeightedTerm())
  name.vb: AddRange(WeightedTerm())
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.AddRange(`0[])
    name: AddRange
    nameWithType: FastList<WeightedTerm>.AddRange
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.AddRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.InvertedIndex.WeightedTerm
    name: WeightedTerm
    nameWithType: WeightedTerm
    fullName: Microsoft.Health.InvertedIndex.WeightedTerm
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.AddRange(`0[])
    name: AddRange
    nameWithType: FastList(Of WeightedTerm).AddRange
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).AddRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.InvertedIndex.WeightedTerm
    name: WeightedTerm
    nameWithType: WeightedTerm
    fullName: Microsoft.Health.InvertedIndex.WeightedTerm
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.AddRange(Microsoft.Health.InvertedIndex.WeightedTerm[],System.Int32,System.Int32)
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.AddRange(Microsoft.Health.InvertedIndex.WeightedTerm[],System.Int32,System.Int32)
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}
  definition: Microsoft.Health.FastList`1.AddRange(`0[],System.Int32,System.Int32)
  name: AddRange(WeightedTerm[], Int32, Int32)
  nameWithType: FastList<WeightedTerm>.AddRange(WeightedTerm[], Int32, Int32)
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.AddRange(Microsoft.Health.InvertedIndex.WeightedTerm[], System.Int32, System.Int32)
  nameWithType.vb: FastList(Of WeightedTerm).AddRange(WeightedTerm(), Int32, Int32)
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).AddRange(Microsoft.Health.InvertedIndex.WeightedTerm(), System.Int32, System.Int32)
  name.vb: AddRange(WeightedTerm(), Int32, Int32)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.AddRange(`0[],System.Int32,System.Int32)
    name: AddRange
    nameWithType: FastList<WeightedTerm>.AddRange
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.AddRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.InvertedIndex.WeightedTerm
    name: WeightedTerm
    nameWithType: WeightedTerm
    fullName: Microsoft.Health.InvertedIndex.WeightedTerm
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.AddRange(`0[],System.Int32,System.Int32)
    name: AddRange
    nameWithType: FastList(Of WeightedTerm).AddRange
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).AddRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.InvertedIndex.WeightedTerm
    name: WeightedTerm
    nameWithType: WeightedTerm
    fullName: Microsoft.Health.InvertedIndex.WeightedTerm
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.Clear
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.Clear
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}
  definition: Microsoft.Health.FastList`1.Clear
  name: Clear()
  nameWithType: FastList<WeightedTerm>.Clear()
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.Clear()
  nameWithType.vb: FastList(Of WeightedTerm).Clear()
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).Clear()
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.Clear
    name: Clear
    nameWithType: FastList<WeightedTerm>.Clear
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.Clear
    name: Clear
    nameWithType: FastList(Of WeightedTerm).Clear
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.Erase
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.Erase
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}
  definition: Microsoft.Health.FastList`1.Erase
  name: Erase()
  nameWithType: FastList<WeightedTerm>.Erase()
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.Erase()
  nameWithType.vb: FastList(Of WeightedTerm).Erase()
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).Erase()
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.Erase
    name: Erase
    nameWithType: FastList<WeightedTerm>.Erase
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.Erase
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.Erase
    name: Erase
    nameWithType: FastList(Of WeightedTerm).Erase
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).Erase
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.GetAt(System.Int32)
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.GetAt(System.Int32)
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}
  definition: Microsoft.Health.FastList`1.GetAt(System.Int32)
  name: GetAt(Int32)
  nameWithType: FastList<WeightedTerm>.GetAt(Int32)
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.GetAt(System.Int32)
  nameWithType.vb: FastList(Of WeightedTerm).GetAt(Int32)
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).GetAt(System.Int32)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.GetAt(System.Int32)
    name: GetAt
    nameWithType: FastList<WeightedTerm>.GetAt
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.GetAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.GetAt(System.Int32)
    name: GetAt
    nameWithType: FastList(Of WeightedTerm).GetAt
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).GetAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.Contains(Microsoft.Health.InvertedIndex.WeightedTerm)
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.Contains(Microsoft.Health.InvertedIndex.WeightedTerm)
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}
  definition: Microsoft.Health.FastList`1.Contains(`0)
  name: Contains(WeightedTerm)
  nameWithType: FastList<WeightedTerm>.Contains(WeightedTerm)
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.Contains(Microsoft.Health.InvertedIndex.WeightedTerm)
  nameWithType.vb: FastList(Of WeightedTerm).Contains(WeightedTerm)
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).Contains(Microsoft.Health.InvertedIndex.WeightedTerm)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.Contains(`0)
    name: Contains
    nameWithType: FastList<WeightedTerm>.Contains
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.Contains
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.InvertedIndex.WeightedTerm
    name: WeightedTerm
    nameWithType: WeightedTerm
    fullName: Microsoft.Health.InvertedIndex.WeightedTerm
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.Contains(`0)
    name: Contains
    nameWithType: FastList(Of WeightedTerm).Contains
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).Contains
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.InvertedIndex.WeightedTerm
    name: WeightedTerm
    nameWithType: WeightedTerm
    fullName: Microsoft.Health.InvertedIndex.WeightedTerm
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.IndexOf(Microsoft.Health.InvertedIndex.WeightedTerm)
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.IndexOf(Microsoft.Health.InvertedIndex.WeightedTerm)
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}
  definition: Microsoft.Health.FastList`1.IndexOf(`0)
  name: IndexOf(WeightedTerm)
  nameWithType: FastList<WeightedTerm>.IndexOf(WeightedTerm)
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.IndexOf(Microsoft.Health.InvertedIndex.WeightedTerm)
  nameWithType.vb: FastList(Of WeightedTerm).IndexOf(WeightedTerm)
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).IndexOf(Microsoft.Health.InvertedIndex.WeightedTerm)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: FastList<WeightedTerm>.IndexOf
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.IndexOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.InvertedIndex.WeightedTerm
    name: WeightedTerm
    nameWithType: WeightedTerm
    fullName: Microsoft.Health.InvertedIndex.WeightedTerm
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: FastList(Of WeightedTerm).IndexOf
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).IndexOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.InvertedIndex.WeightedTerm
    name: WeightedTerm
    nameWithType: WeightedTerm
    fullName: Microsoft.Health.InvertedIndex.WeightedTerm
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.Insert(System.Int32,Microsoft.Health.InvertedIndex.WeightedTerm)
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.Insert(System.Int32,Microsoft.Health.InvertedIndex.WeightedTerm)
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}
  definition: Microsoft.Health.FastList`1.Insert(System.Int32,`0)
  name: Insert(Int32, WeightedTerm)
  nameWithType: FastList<WeightedTerm>.Insert(Int32, WeightedTerm)
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.Insert(System.Int32, Microsoft.Health.InvertedIndex.WeightedTerm)
  nameWithType.vb: FastList(Of WeightedTerm).Insert(Int32, WeightedTerm)
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).Insert(System.Int32, Microsoft.Health.InvertedIndex.WeightedTerm)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: FastList<WeightedTerm>.Insert
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.Insert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.InvertedIndex.WeightedTerm
    name: WeightedTerm
    nameWithType: WeightedTerm
    fullName: Microsoft.Health.InvertedIndex.WeightedTerm
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: FastList(Of WeightedTerm).Insert
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).Insert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.InvertedIndex.WeightedTerm
    name: WeightedTerm
    nameWithType: WeightedTerm
    fullName: Microsoft.Health.InvertedIndex.WeightedTerm
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.RemoveAt(System.Int32)
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.RemoveAt(System.Int32)
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}
  definition: Microsoft.Health.FastList`1.RemoveAt(System.Int32)
  name: RemoveAt(Int32)
  nameWithType: FastList<WeightedTerm>.RemoveAt(Int32)
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.RemoveAt(System.Int32)
  nameWithType.vb: FastList(Of WeightedTerm).RemoveAt(Int32)
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).RemoveAt(System.Int32)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: FastList<WeightedTerm>.RemoveAt
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.RemoveAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: FastList(Of WeightedTerm).RemoveAt
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).RemoveAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.CopyTo(Microsoft.Health.InvertedIndex.WeightedTerm[],System.Int32)
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.CopyTo(Microsoft.Health.InvertedIndex.WeightedTerm[],System.Int32)
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}
  definition: Microsoft.Health.FastList`1.CopyTo(`0[],System.Int32)
  name: CopyTo(WeightedTerm[], Int32)
  nameWithType: FastList<WeightedTerm>.CopyTo(WeightedTerm[], Int32)
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.CopyTo(Microsoft.Health.InvertedIndex.WeightedTerm[], System.Int32)
  nameWithType.vb: FastList(Of WeightedTerm).CopyTo(WeightedTerm(), Int32)
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).CopyTo(Microsoft.Health.InvertedIndex.WeightedTerm(), System.Int32)
  name.vb: CopyTo(WeightedTerm(), Int32)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: FastList<WeightedTerm>.CopyTo
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.CopyTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.InvertedIndex.WeightedTerm
    name: WeightedTerm
    nameWithType: WeightedTerm
    fullName: Microsoft.Health.InvertedIndex.WeightedTerm
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: FastList(Of WeightedTerm).CopyTo
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).CopyTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.InvertedIndex.WeightedTerm
    name: WeightedTerm
    nameWithType: WeightedTerm
    fullName: Microsoft.Health.InvertedIndex.WeightedTerm
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.Remove(Microsoft.Health.InvertedIndex.WeightedTerm)
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.Remove(Microsoft.Health.InvertedIndex.WeightedTerm)
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}
  definition: Microsoft.Health.FastList`1.Remove(`0)
  name: Remove(WeightedTerm)
  nameWithType: FastList<WeightedTerm>.Remove(WeightedTerm)
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.Remove(Microsoft.Health.InvertedIndex.WeightedTerm)
  nameWithType.vb: FastList(Of WeightedTerm).Remove(WeightedTerm)
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).Remove(Microsoft.Health.InvertedIndex.WeightedTerm)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.Remove(`0)
    name: Remove
    nameWithType: FastList<WeightedTerm>.Remove
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.InvertedIndex.WeightedTerm
    name: WeightedTerm
    nameWithType: WeightedTerm
    fullName: Microsoft.Health.InvertedIndex.WeightedTerm
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.Remove(`0)
    name: Remove
    nameWithType: FastList(Of WeightedTerm).Remove
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.InvertedIndex.WeightedTerm
    name: WeightedTerm
    nameWithType: WeightedTerm
    fullName: Microsoft.Health.InvertedIndex.WeightedTerm
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.Trim
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.Trim
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}
  definition: Microsoft.Health.FastList`1.Trim
  name: Trim()
  nameWithType: FastList<WeightedTerm>.Trim()
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.Trim()
  nameWithType.vb: FastList(Of WeightedTerm).Trim()
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).Trim()
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.Trim
    name: Trim
    nameWithType: FastList<WeightedTerm>.Trim
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.Trim
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.Trim
    name: Trim
    nameWithType: FastList(Of WeightedTerm).Trim
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).Trim
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.Sort
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.Sort
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}
  definition: Microsoft.Health.FastList`1.Sort
  name: Sort()
  nameWithType: FastList<WeightedTerm>.Sort()
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.Sort()
  nameWithType.vb: FastList(Of WeightedTerm).Sort()
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).Sort()
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.Sort
    name: Sort
    nameWithType: FastList<WeightedTerm>.Sort
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.Sort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.Sort
    name: Sort
    nameWithType: FastList(Of WeightedTerm).Sort
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).Sort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.Sort(System.Collections.Generic.IComparer{Microsoft.Health.InvertedIndex.WeightedTerm})
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.Sort(System.Collections.Generic.IComparer{Microsoft.Health.InvertedIndex.WeightedTerm})
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}
  definition: Microsoft.Health.FastList`1.Sort(System.Collections.Generic.IComparer{`0})
  name: Sort(IComparer<WeightedTerm>)
  nameWithType: FastList<WeightedTerm>.Sort(IComparer<WeightedTerm>)
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.Sort(System.Collections.Generic.IComparer<Microsoft.Health.InvertedIndex.WeightedTerm>)
  nameWithType.vb: FastList(Of WeightedTerm).Sort(IComparer(Of WeightedTerm))
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).Sort(System.Collections.Generic.IComparer(Of Microsoft.Health.InvertedIndex.WeightedTerm))
  name.vb: Sort(IComparer(Of WeightedTerm))
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.Sort(System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: FastList<WeightedTerm>.Sort
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.Sort
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.InvertedIndex.WeightedTerm
    name: WeightedTerm
    nameWithType: WeightedTerm
    fullName: Microsoft.Health.InvertedIndex.WeightedTerm
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.Sort(System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: FastList(Of WeightedTerm).Sort
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).Sort
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.InvertedIndex.WeightedTerm
    name: WeightedTerm
    nameWithType: WeightedTerm
    fullName: Microsoft.Health.InvertedIndex.WeightedTerm
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.BinarySearch(Microsoft.Health.InvertedIndex.WeightedTerm)
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.BinarySearch(Microsoft.Health.InvertedIndex.WeightedTerm)
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}
  definition: Microsoft.Health.FastList`1.BinarySearch(`0)
  name: BinarySearch(WeightedTerm)
  nameWithType: FastList<WeightedTerm>.BinarySearch(WeightedTerm)
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.BinarySearch(Microsoft.Health.InvertedIndex.WeightedTerm)
  nameWithType.vb: FastList(Of WeightedTerm).BinarySearch(WeightedTerm)
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).BinarySearch(Microsoft.Health.InvertedIndex.WeightedTerm)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.BinarySearch(`0)
    name: BinarySearch
    nameWithType: FastList<WeightedTerm>.BinarySearch
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.BinarySearch
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.InvertedIndex.WeightedTerm
    name: WeightedTerm
    nameWithType: WeightedTerm
    fullName: Microsoft.Health.InvertedIndex.WeightedTerm
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.BinarySearch(`0)
    name: BinarySearch
    nameWithType: FastList(Of WeightedTerm).BinarySearch
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).BinarySearch
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.InvertedIndex.WeightedTerm
    name: WeightedTerm
    nameWithType: WeightedTerm
    fullName: Microsoft.Health.InvertedIndex.WeightedTerm
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.BinarySearch(Microsoft.Health.InvertedIndex.WeightedTerm,System.Collections.Generic.IComparer{Microsoft.Health.InvertedIndex.WeightedTerm})
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.BinarySearch(Microsoft.Health.InvertedIndex.WeightedTerm,System.Collections.Generic.IComparer{Microsoft.Health.InvertedIndex.WeightedTerm})
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}
  definition: Microsoft.Health.FastList`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
  name: BinarySearch(WeightedTerm, IComparer<WeightedTerm>)
  nameWithType: FastList<WeightedTerm>.BinarySearch(WeightedTerm, IComparer<WeightedTerm>)
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.BinarySearch(Microsoft.Health.InvertedIndex.WeightedTerm, System.Collections.Generic.IComparer<Microsoft.Health.InvertedIndex.WeightedTerm>)
  nameWithType.vb: FastList(Of WeightedTerm).BinarySearch(WeightedTerm, IComparer(Of WeightedTerm))
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).BinarySearch(Microsoft.Health.InvertedIndex.WeightedTerm, System.Collections.Generic.IComparer(Of Microsoft.Health.InvertedIndex.WeightedTerm))
  name.vb: BinarySearch(WeightedTerm, IComparer(Of WeightedTerm))
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: FastList<WeightedTerm>.BinarySearch
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.BinarySearch
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.InvertedIndex.WeightedTerm
    name: WeightedTerm
    nameWithType: WeightedTerm
    fullName: Microsoft.Health.InvertedIndex.WeightedTerm
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.InvertedIndex.WeightedTerm
    name: WeightedTerm
    nameWithType: WeightedTerm
    fullName: Microsoft.Health.InvertedIndex.WeightedTerm
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: FastList(Of WeightedTerm).BinarySearch
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).BinarySearch
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.InvertedIndex.WeightedTerm
    name: WeightedTerm
    nameWithType: WeightedTerm
    fullName: Microsoft.Health.InvertedIndex.WeightedTerm
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.InvertedIndex.WeightedTerm
    name: WeightedTerm
    nameWithType: WeightedTerm
    fullName: Microsoft.Health.InvertedIndex.WeightedTerm
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.CalculateNewSize(System.Int32)
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.CalculateNewSize(System.Int32)
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}
  definition: Microsoft.Health.FastList`1.CalculateNewSize(System.Int32)
  name: CalculateNewSize(Int32)
  nameWithType: FastList<WeightedTerm>.CalculateNewSize(Int32)
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.CalculateNewSize(System.Int32)
  nameWithType.vb: FastList(Of WeightedTerm).CalculateNewSize(Int32)
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).CalculateNewSize(System.Int32)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.CalculateNewSize(System.Int32)
    name: CalculateNewSize
    nameWithType: FastList<WeightedTerm>.CalculateNewSize
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.CalculateNewSize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.CalculateNewSize(System.Int32)
    name: CalculateNewSize
    nameWithType: FastList(Of WeightedTerm).CalculateNewSize
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).CalculateNewSize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.EnsureCapacity
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.EnsureCapacity
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}
  definition: Microsoft.Health.FastList`1.EnsureCapacity
  name: EnsureCapacity()
  nameWithType: FastList<WeightedTerm>.EnsureCapacity()
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.EnsureCapacity()
  nameWithType.vb: FastList(Of WeightedTerm).EnsureCapacity()
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).EnsureCapacity()
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.EnsureCapacity
    name: EnsureCapacity
    nameWithType: FastList<WeightedTerm>.EnsureCapacity
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.EnsureCapacity
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.EnsureCapacity
    name: EnsureCapacity
    nameWithType: FastList(Of WeightedTerm).EnsureCapacity
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).EnsureCapacity
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.EnsureCapacity(System.Int32)
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.EnsureCapacity(System.Int32)
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}
  definition: Microsoft.Health.FastList`1.EnsureCapacity(System.Int32)
  name: EnsureCapacity(Int32)
  nameWithType: FastList<WeightedTerm>.EnsureCapacity(Int32)
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.EnsureCapacity(System.Int32)
  nameWithType.vb: FastList(Of WeightedTerm).EnsureCapacity(Int32)
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).EnsureCapacity(System.Int32)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.EnsureCapacity(System.Int32)
    name: EnsureCapacity
    nameWithType: FastList<WeightedTerm>.EnsureCapacity
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.EnsureCapacity
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.EnsureCapacity(System.Int32)
    name: EnsureCapacity
    nameWithType: FastList(Of WeightedTerm).EnsureCapacity
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).EnsureCapacity
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.Init(System.Int32)
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.Init(System.Int32)
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}
  definition: Microsoft.Health.FastList`1.Init(System.Int32)
  name: Init(Int32)
  nameWithType: FastList<WeightedTerm>.Init(Int32)
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.Init(System.Int32)
  nameWithType.vb: FastList(Of WeightedTerm).Init(Int32)
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).Init(System.Int32)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.Init(System.Int32)
    name: Init
    nameWithType: FastList<WeightedTerm>.Init
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.Init(System.Int32)
    name: Init
    nameWithType: FastList(Of WeightedTerm).Init
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.ToArray
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.ToArray
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}
  definition: Microsoft.Health.FastList`1.ToArray
  name: ToArray()
  nameWithType: FastList<WeightedTerm>.ToArray()
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.ToArray()
  nameWithType.vb: FastList(Of WeightedTerm).ToArray()
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).ToArray()
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.ToArray
    name: ToArray
    nameWithType: FastList<WeightedTerm>.ToArray
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.ToArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.ToArray
    name: ToArray
    nameWithType: FastList(Of WeightedTerm).ToArray
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).ToArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.GetTrimmedBuffer
  commentId: M:Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}.GetTrimmedBuffer
  parent: Microsoft.Health.FastList{Microsoft.Health.InvertedIndex.WeightedTerm}
  definition: Microsoft.Health.FastList`1.GetTrimmedBuffer
  name: GetTrimmedBuffer()
  nameWithType: FastList<WeightedTerm>.GetTrimmedBuffer()
  fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.GetTrimmedBuffer()
  nameWithType.vb: FastList(Of WeightedTerm).GetTrimmedBuffer()
  fullName.vb: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).GetTrimmedBuffer()
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.GetTrimmedBuffer
    name: GetTrimmedBuffer
    nameWithType: FastList<WeightedTerm>.GetTrimmedBuffer
    fullName: Microsoft.Health.FastList<Microsoft.Health.InvertedIndex.WeightedTerm>.GetTrimmedBuffer
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.GetTrimmedBuffer
    name: GetTrimmedBuffer
    nameWithType: FastList(Of WeightedTerm).GetTrimmedBuffer
    fullName: Microsoft.Health.FastList(Of Microsoft.Health.InvertedIndex.WeightedTerm).GetTrimmedBuffer
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{System.String}.Microsoft.Health.CSVExtensions.GetOptional(System.Int32)
  commentId: M:Microsoft.Health.CSVExtensions.GetOptional(System.Collections.Generic.IList{System.String},System.Int32)
  parent: Microsoft.Health.CSVExtensions
  definition: Microsoft.Health.CSVExtensions.GetOptional(System.Collections.Generic.IList{System.String},System.Int32)
  name: GetOptional(Int32)
  nameWithType: CSVExtensions.GetOptional(Int32)
  fullName: Microsoft.Health.CSVExtensions.GetOptional(System.Int32)
  spec.csharp:
  - uid: Microsoft.Health.CSVExtensions.GetOptional(System.Int32)
    name: GetOptional
    nameWithType: CSVExtensions.GetOptional
    fullName: Microsoft.Health.CSVExtensions.GetOptional
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.CSVExtensions.GetOptional(System.Int32)
    name: GetOptional
    nameWithType: CSVExtensions.GetOptional
    fullName: Microsoft.Health.CSVExtensions.GetOptional
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{System.String}.Microsoft.Health.CSVExtensions.GetOptional(System.Int32,System.String)
  commentId: M:Microsoft.Health.CSVExtensions.GetOptional(System.Collections.Generic.IList{System.String},System.Int32,System.String)
  parent: Microsoft.Health.CSVExtensions
  definition: Microsoft.Health.CSVExtensions.GetOptional(System.Collections.Generic.IList{System.String},System.Int32,System.String)
  name: GetOptional(Int32, String)
  nameWithType: CSVExtensions.GetOptional(Int32, String)
  fullName: Microsoft.Health.CSVExtensions.GetOptional(System.Int32, System.String)
  spec.csharp:
  - uid: Microsoft.Health.CSVExtensions.GetOptional(System.Int32,System.String)
    name: GetOptional
    nameWithType: CSVExtensions.GetOptional
    fullName: Microsoft.Health.CSVExtensions.GetOptional
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.CSVExtensions.GetOptional(System.Int32,System.String)
    name: GetOptional
    nameWithType: CSVExtensions.GetOptional
    fullName: Microsoft.Health.CSVExtensions.GetOptional
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{System.String}.Microsoft.Health.CSVExtensions.GetOptional``1(System.Int32,{T})
  commentId: M:Microsoft.Health.CSVExtensions.GetOptional``1(System.Collections.Generic.IList{System.String},System.Int32,``0)
  parent: Microsoft.Health.CSVExtensions
  definition: Microsoft.Health.CSVExtensions.GetOptional``1(System.Collections.Generic.IList{System.String},System.Int32,``0)
  name: GetOptional<T>(Int32, T)
  nameWithType: CSVExtensions.GetOptional<T>(Int32, T)
  fullName: Microsoft.Health.CSVExtensions.GetOptional<T>(System.Int32, T)
  nameWithType.vb: CSVExtensions.GetOptional(Of T)(Int32, T)
  fullName.vb: Microsoft.Health.CSVExtensions.GetOptional(Of T)(System.Int32, T)
  name.vb: GetOptional(Of T)(Int32, T)
  spec.csharp:
  - uid: Microsoft.Health.CSVExtensions.GetOptional``1(System.Int32,``0)
    name: GetOptional<T>
    nameWithType: CSVExtensions.GetOptional<T>
    fullName: Microsoft.Health.CSVExtensions.GetOptional<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.CSVExtensions.GetOptional``1(System.Int32,``0)
    name: GetOptional(Of T)
    nameWithType: CSVExtensions.GetOptional(Of T)
    fullName: Microsoft.Health.CSVExtensions.GetOptional(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{System.String}.Microsoft.Health.CSVExtensions.Get``1(System.Int32)
  commentId: M:Microsoft.Health.CSVExtensions.Get``1(System.Collections.Generic.IList{System.String},System.Int32)
  parent: Microsoft.Health.CSVExtensions
  definition: Microsoft.Health.CSVExtensions.Get``1(System.Collections.Generic.IList{System.String},System.Int32)
  name: Get<T>(Int32)
  nameWithType: CSVExtensions.Get<T>(Int32)
  fullName: Microsoft.Health.CSVExtensions.Get<T>(System.Int32)
  nameWithType.vb: CSVExtensions.Get(Of T)(Int32)
  fullName.vb: Microsoft.Health.CSVExtensions.Get(Of T)(System.Int32)
  name.vb: Get(Of T)(Int32)
  spec.csharp:
  - uid: Microsoft.Health.CSVExtensions.Get``1(System.Int32)
    name: Get<T>
    nameWithType: CSVExtensions.Get<T>
    fullName: Microsoft.Health.CSVExtensions.Get<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.CSVExtensions.Get``1(System.Int32)
    name: Get(Of T)
    nameWithType: CSVExtensions.Get(Of T)
    fullName: Microsoft.Health.CSVExtensions.Get(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.TermList.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<TermList>()
  nameWithType: TypeHelper.ValueOrDbNull<TermList>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.InvertedIndex.TermList>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of TermList)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.InvertedIndex.TermList)()
  name.vb: ValueOrDbNull(Of TermList)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<TermList>
    nameWithType: TypeHelper.ValueOrDbNull<TermList>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.InvertedIndex.TermList>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of TermList)
    nameWithType: TypeHelper.ValueOrDbNull(Of TermList)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.InvertedIndex.TermList)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.FastList`1
  commentId: T:Microsoft.Health.FastList`1
  isExternal: false
  name: FastList<T>
  nameWithType: FastList<T>
  fullName: Microsoft.Health.FastList<T>
  nameWithType.vb: FastList(Of T)
  fullName.vb: Microsoft.Health.FastList(Of T)
  name.vb: FastList(Of T)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1
    name: FastList
    nameWithType: FastList
    fullName: Microsoft.Health.FastList
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.FastList`1
    name: FastList
    nameWithType: FastList
    fullName: Microsoft.Health.FastList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IComparer`1
  commentId: T:System.Collections.Generic.IComparer`1
  isExternal: true
  name: IComparer<T>
  nameWithType: IComparer<T>
  fullName: System.Collections.Generic.IComparer<T>
  nameWithType.vb: IComparer(Of T)
  fullName.vb: System.Collections.Generic.IComparer(Of T)
  name.vb: IComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Microsoft.Health.FastList`1.Buffer
  commentId: P:Microsoft.Health.FastList`1.Buffer
  isExternal: false
  name: Buffer
  nameWithType: FastList<T>.Buffer
  fullName: Microsoft.Health.FastList<T>.Buffer
  nameWithType.vb: FastList(Of T).Buffer
  fullName.vb: Microsoft.Health.FastList(Of T).Buffer
- uid: Microsoft.Health.FastList`1.Count
  commentId: P:Microsoft.Health.FastList`1.Count
  isExternal: false
  name: Count
  nameWithType: FastList<T>.Count
  fullName: Microsoft.Health.FastList<T>.Count
  nameWithType.vb: FastList(Of T).Count
  fullName.vb: Microsoft.Health.FastList(Of T).Count
- uid: Microsoft.Health.FastList`1.IsReadOnly
  commentId: P:Microsoft.Health.FastList`1.IsReadOnly
  isExternal: false
  name: IsReadOnly
  nameWithType: FastList<T>.IsReadOnly
  fullName: Microsoft.Health.FastList<T>.IsReadOnly
  nameWithType.vb: FastList(Of T).IsReadOnly
  fullName.vb: Microsoft.Health.FastList(Of T).IsReadOnly
- uid: Microsoft.Health.FastList`1.Add(`0)
  commentId: M:Microsoft.Health.FastList`1.Add(`0)
  isExternal: false
  name: Add(T)
  nameWithType: FastList<T>.Add(T)
  fullName: Microsoft.Health.FastList<T>.Add(T)
  nameWithType.vb: FastList(Of T).Add(T)
  fullName.vb: Microsoft.Health.FastList(Of T).Add(T)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.Add(`0)
    name: Add
    nameWithType: FastList<T>.Add
    fullName: Microsoft.Health.FastList<T>.Add
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.Add(`0)
    name: Add
    nameWithType: FastList(Of T).Add
    fullName: Microsoft.Health.FastList(Of T).Add
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.AddNoCheck(`0)
  commentId: M:Microsoft.Health.FastList`1.AddNoCheck(`0)
  isExternal: false
  name: AddNoCheck(T)
  nameWithType: FastList<T>.AddNoCheck(T)
  fullName: Microsoft.Health.FastList<T>.AddNoCheck(T)
  nameWithType.vb: FastList(Of T).AddNoCheck(T)
  fullName.vb: Microsoft.Health.FastList(Of T).AddNoCheck(T)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.AddNoCheck(`0)
    name: AddNoCheck
    nameWithType: FastList<T>.AddNoCheck
    fullName: Microsoft.Health.FastList<T>.AddNoCheck
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.AddNoCheck(`0)
    name: AddNoCheck
    nameWithType: FastList(Of T).AddNoCheck
    fullName: Microsoft.Health.FastList(Of T).AddNoCheck
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  commentId: M:Microsoft.Health.FastList`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: AddRange(IEnumerable<T>)
  nameWithType: FastList<T>.AddRange(IEnumerable<T>)
  fullName: Microsoft.Health.FastList<T>.AddRange(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: FastList(Of T).AddRange(IEnumerable(Of T))
  fullName.vb: Microsoft.Health.FastList(Of T).AddRange(System.Collections.Generic.IEnumerable(Of T))
  name.vb: AddRange(IEnumerable(Of T))
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    nameWithType: FastList<T>.AddRange
    fullName: Microsoft.Health.FastList<T>.AddRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    nameWithType: FastList(Of T).AddRange
    fullName: Microsoft.Health.FastList(Of T).AddRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.AddRange(System.Collections.Generic.IList{`0})
  commentId: M:Microsoft.Health.FastList`1.AddRange(System.Collections.Generic.IList{`0})
  isExternal: true
  name: AddRange(IList<T>)
  nameWithType: FastList<T>.AddRange(IList<T>)
  fullName: Microsoft.Health.FastList<T>.AddRange(System.Collections.Generic.IList<T>)
  nameWithType.vb: FastList(Of T).AddRange(IList(Of T))
  fullName.vb: Microsoft.Health.FastList(Of T).AddRange(System.Collections.Generic.IList(Of T))
  name.vb: AddRange(IList(Of T))
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.AddRange(System.Collections.Generic.IList{`0})
    name: AddRange
    nameWithType: FastList<T>.AddRange
    fullName: Microsoft.Health.FastList<T>.AddRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.AddRange(System.Collections.Generic.IList{`0})
    name: AddRange
    nameWithType: FastList(Of T).AddRange
    fullName: Microsoft.Health.FastList(Of T).AddRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.AddRange(`0[])
  commentId: M:Microsoft.Health.FastList`1.AddRange(`0[])
  isExternal: false
  name: AddRange(T[])
  nameWithType: FastList<T>.AddRange(T[])
  fullName: Microsoft.Health.FastList<T>.AddRange(T[])
  nameWithType.vb: FastList(Of T).AddRange(T())
  fullName.vb: Microsoft.Health.FastList(Of T).AddRange(T())
  name.vb: AddRange(T())
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.AddRange(`0[])
    name: AddRange
    nameWithType: FastList<T>.AddRange
    fullName: Microsoft.Health.FastList<T>.AddRange
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.AddRange(`0[])
    name: AddRange
    nameWithType: FastList(Of T).AddRange
    fullName: Microsoft.Health.FastList(Of T).AddRange
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.AddRange(`0[],System.Int32,System.Int32)
  commentId: M:Microsoft.Health.FastList`1.AddRange(`0[],System.Int32,System.Int32)
  isExternal: true
  name: AddRange(T[], Int32, Int32)
  nameWithType: FastList<T>.AddRange(T[], Int32, Int32)
  fullName: Microsoft.Health.FastList<T>.AddRange(T[], System.Int32, System.Int32)
  nameWithType.vb: FastList(Of T).AddRange(T(), Int32, Int32)
  fullName.vb: Microsoft.Health.FastList(Of T).AddRange(T(), System.Int32, System.Int32)
  name.vb: AddRange(T(), Int32, Int32)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.AddRange(`0[],System.Int32,System.Int32)
    name: AddRange
    nameWithType: FastList<T>.AddRange
    fullName: Microsoft.Health.FastList<T>.AddRange
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.AddRange(`0[],System.Int32,System.Int32)
    name: AddRange
    nameWithType: FastList(Of T).AddRange
    fullName: Microsoft.Health.FastList(Of T).AddRange
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.Clear
  commentId: M:Microsoft.Health.FastList`1.Clear
  isExternal: false
  name: Clear()
  nameWithType: FastList<T>.Clear()
  fullName: Microsoft.Health.FastList<T>.Clear()
  nameWithType.vb: FastList(Of T).Clear()
  fullName.vb: Microsoft.Health.FastList(Of T).Clear()
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.Clear
    name: Clear
    nameWithType: FastList<T>.Clear
    fullName: Microsoft.Health.FastList<T>.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.Clear
    name: Clear
    nameWithType: FastList(Of T).Clear
    fullName: Microsoft.Health.FastList(Of T).Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.Erase
  commentId: M:Microsoft.Health.FastList`1.Erase
  isExternal: false
  name: Erase()
  nameWithType: FastList<T>.Erase()
  fullName: Microsoft.Health.FastList<T>.Erase()
  nameWithType.vb: FastList(Of T).Erase()
  fullName.vb: Microsoft.Health.FastList(Of T).Erase()
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.Erase
    name: Erase
    nameWithType: FastList<T>.Erase
    fullName: Microsoft.Health.FastList<T>.Erase
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.Erase
    name: Erase
    nameWithType: FastList(Of T).Erase
    fullName: Microsoft.Health.FastList(Of T).Erase
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.GetAt(System.Int32)
  commentId: M:Microsoft.Health.FastList`1.GetAt(System.Int32)
  isExternal: true
  name: GetAt(Int32)
  nameWithType: FastList<T>.GetAt(Int32)
  fullName: Microsoft.Health.FastList<T>.GetAt(System.Int32)
  nameWithType.vb: FastList(Of T).GetAt(Int32)
  fullName.vb: Microsoft.Health.FastList(Of T).GetAt(System.Int32)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.GetAt(System.Int32)
    name: GetAt
    nameWithType: FastList<T>.GetAt
    fullName: Microsoft.Health.FastList<T>.GetAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.GetAt(System.Int32)
    name: GetAt
    nameWithType: FastList(Of T).GetAt
    fullName: Microsoft.Health.FastList(Of T).GetAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.Contains(`0)
  commentId: M:Microsoft.Health.FastList`1.Contains(`0)
  isExternal: false
  name: Contains(T)
  nameWithType: FastList<T>.Contains(T)
  fullName: Microsoft.Health.FastList<T>.Contains(T)
  nameWithType.vb: FastList(Of T).Contains(T)
  fullName.vb: Microsoft.Health.FastList(Of T).Contains(T)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.Contains(`0)
    name: Contains
    nameWithType: FastList<T>.Contains
    fullName: Microsoft.Health.FastList<T>.Contains
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.Contains(`0)
    name: Contains
    nameWithType: FastList(Of T).Contains
    fullName: Microsoft.Health.FastList(Of T).Contains
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.IndexOf(`0)
  commentId: M:Microsoft.Health.FastList`1.IndexOf(`0)
  isExternal: false
  name: IndexOf(T)
  nameWithType: FastList<T>.IndexOf(T)
  fullName: Microsoft.Health.FastList<T>.IndexOf(T)
  nameWithType.vb: FastList(Of T).IndexOf(T)
  fullName.vb: Microsoft.Health.FastList(Of T).IndexOf(T)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: FastList<T>.IndexOf
    fullName: Microsoft.Health.FastList<T>.IndexOf
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: FastList(Of T).IndexOf
    fullName: Microsoft.Health.FastList(Of T).IndexOf
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.Insert(System.Int32,`0)
  commentId: M:Microsoft.Health.FastList`1.Insert(System.Int32,`0)
  isExternal: true
  name: Insert(Int32, T)
  nameWithType: FastList<T>.Insert(Int32, T)
  fullName: Microsoft.Health.FastList<T>.Insert(System.Int32, T)
  nameWithType.vb: FastList(Of T).Insert(Int32, T)
  fullName.vb: Microsoft.Health.FastList(Of T).Insert(System.Int32, T)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: FastList<T>.Insert
    fullName: Microsoft.Health.FastList<T>.Insert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: FastList(Of T).Insert
    fullName: Microsoft.Health.FastList(Of T).Insert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.RemoveAt(System.Int32)
  commentId: M:Microsoft.Health.FastList`1.RemoveAt(System.Int32)
  isExternal: true
  name: RemoveAt(Int32)
  nameWithType: FastList<T>.RemoveAt(Int32)
  fullName: Microsoft.Health.FastList<T>.RemoveAt(System.Int32)
  nameWithType.vb: FastList(Of T).RemoveAt(Int32)
  fullName.vb: Microsoft.Health.FastList(Of T).RemoveAt(System.Int32)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: FastList<T>.RemoveAt
    fullName: Microsoft.Health.FastList<T>.RemoveAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: FastList(Of T).RemoveAt
    fullName: Microsoft.Health.FastList(Of T).RemoveAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.CopyTo(`0[],System.Int32)
  commentId: M:Microsoft.Health.FastList`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: FastList<T>.CopyTo(T[], Int32)
  fullName: Microsoft.Health.FastList<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: FastList(Of T).CopyTo(T(), Int32)
  fullName.vb: Microsoft.Health.FastList(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: FastList<T>.CopyTo
    fullName: Microsoft.Health.FastList<T>.CopyTo
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: FastList(Of T).CopyTo
    fullName: Microsoft.Health.FastList(Of T).CopyTo
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.Remove(`0)
  commentId: M:Microsoft.Health.FastList`1.Remove(`0)
  isExternal: false
  name: Remove(T)
  nameWithType: FastList<T>.Remove(T)
  fullName: Microsoft.Health.FastList<T>.Remove(T)
  nameWithType.vb: FastList(Of T).Remove(T)
  fullName.vb: Microsoft.Health.FastList(Of T).Remove(T)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.Remove(`0)
    name: Remove
    nameWithType: FastList<T>.Remove
    fullName: Microsoft.Health.FastList<T>.Remove
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.Remove(`0)
    name: Remove
    nameWithType: FastList(Of T).Remove
    fullName: Microsoft.Health.FastList(Of T).Remove
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.Trim
  commentId: M:Microsoft.Health.FastList`1.Trim
  isExternal: false
  name: Trim()
  nameWithType: FastList<T>.Trim()
  fullName: Microsoft.Health.FastList<T>.Trim()
  nameWithType.vb: FastList(Of T).Trim()
  fullName.vb: Microsoft.Health.FastList(Of T).Trim()
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.Trim
    name: Trim
    nameWithType: FastList<T>.Trim
    fullName: Microsoft.Health.FastList<T>.Trim
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.Trim
    name: Trim
    nameWithType: FastList(Of T).Trim
    fullName: Microsoft.Health.FastList(Of T).Trim
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.Sort
  commentId: M:Microsoft.Health.FastList`1.Sort
  isExternal: false
  name: Sort()
  nameWithType: FastList<T>.Sort()
  fullName: Microsoft.Health.FastList<T>.Sort()
  nameWithType.vb: FastList(Of T).Sort()
  fullName.vb: Microsoft.Health.FastList(Of T).Sort()
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.Sort
    name: Sort
    nameWithType: FastList<T>.Sort
    fullName: Microsoft.Health.FastList<T>.Sort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.Sort
    name: Sort
    nameWithType: FastList(Of T).Sort
    fullName: Microsoft.Health.FastList(Of T).Sort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.Sort(System.Collections.Generic.IComparer{`0})
  commentId: M:Microsoft.Health.FastList`1.Sort(System.Collections.Generic.IComparer{`0})
  isExternal: true
  name: Sort(IComparer<T>)
  nameWithType: FastList<T>.Sort(IComparer<T>)
  fullName: Microsoft.Health.FastList<T>.Sort(System.Collections.Generic.IComparer<T>)
  nameWithType.vb: FastList(Of T).Sort(IComparer(Of T))
  fullName.vb: Microsoft.Health.FastList(Of T).Sort(System.Collections.Generic.IComparer(Of T))
  name.vb: Sort(IComparer(Of T))
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.Sort(System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: FastList<T>.Sort
    fullName: Microsoft.Health.FastList<T>.Sort
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.Sort(System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: FastList(Of T).Sort
    fullName: Microsoft.Health.FastList(Of T).Sort
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.BinarySearch(`0)
  commentId: M:Microsoft.Health.FastList`1.BinarySearch(`0)
  isExternal: false
  name: BinarySearch(T)
  nameWithType: FastList<T>.BinarySearch(T)
  fullName: Microsoft.Health.FastList<T>.BinarySearch(T)
  nameWithType.vb: FastList(Of T).BinarySearch(T)
  fullName.vb: Microsoft.Health.FastList(Of T).BinarySearch(T)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.BinarySearch(`0)
    name: BinarySearch
    nameWithType: FastList<T>.BinarySearch
    fullName: Microsoft.Health.FastList<T>.BinarySearch
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.BinarySearch(`0)
    name: BinarySearch
    nameWithType: FastList(Of T).BinarySearch
    fullName: Microsoft.Health.FastList(Of T).BinarySearch
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
  commentId: M:Microsoft.Health.FastList`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
  isExternal: true
  name: BinarySearch(T, IComparer<T>)
  nameWithType: FastList<T>.BinarySearch(T, IComparer<T>)
  fullName: Microsoft.Health.FastList<T>.BinarySearch(T, System.Collections.Generic.IComparer<T>)
  nameWithType.vb: FastList(Of T).BinarySearch(T, IComparer(Of T))
  fullName.vb: Microsoft.Health.FastList(Of T).BinarySearch(T, System.Collections.Generic.IComparer(Of T))
  name.vb: BinarySearch(T, IComparer(Of T))
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: FastList<T>.BinarySearch
    fullName: Microsoft.Health.FastList<T>.BinarySearch
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: FastList(Of T).BinarySearch
    fullName: Microsoft.Health.FastList(Of T).BinarySearch
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.CalculateNewSize(System.Int32)
  commentId: M:Microsoft.Health.FastList`1.CalculateNewSize(System.Int32)
  isExternal: true
  name: CalculateNewSize(Int32)
  nameWithType: FastList<T>.CalculateNewSize(Int32)
  fullName: Microsoft.Health.FastList<T>.CalculateNewSize(System.Int32)
  nameWithType.vb: FastList(Of T).CalculateNewSize(Int32)
  fullName.vb: Microsoft.Health.FastList(Of T).CalculateNewSize(System.Int32)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.CalculateNewSize(System.Int32)
    name: CalculateNewSize
    nameWithType: FastList<T>.CalculateNewSize
    fullName: Microsoft.Health.FastList<T>.CalculateNewSize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.CalculateNewSize(System.Int32)
    name: CalculateNewSize
    nameWithType: FastList(Of T).CalculateNewSize
    fullName: Microsoft.Health.FastList(Of T).CalculateNewSize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.EnsureCapacity
  commentId: M:Microsoft.Health.FastList`1.EnsureCapacity
  isExternal: false
  name: EnsureCapacity()
  nameWithType: FastList<T>.EnsureCapacity()
  fullName: Microsoft.Health.FastList<T>.EnsureCapacity()
  nameWithType.vb: FastList(Of T).EnsureCapacity()
  fullName.vb: Microsoft.Health.FastList(Of T).EnsureCapacity()
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.EnsureCapacity
    name: EnsureCapacity
    nameWithType: FastList<T>.EnsureCapacity
    fullName: Microsoft.Health.FastList<T>.EnsureCapacity
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.EnsureCapacity
    name: EnsureCapacity
    nameWithType: FastList(Of T).EnsureCapacity
    fullName: Microsoft.Health.FastList(Of T).EnsureCapacity
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.EnsureCapacity(System.Int32)
  commentId: M:Microsoft.Health.FastList`1.EnsureCapacity(System.Int32)
  isExternal: true
  name: EnsureCapacity(Int32)
  nameWithType: FastList<T>.EnsureCapacity(Int32)
  fullName: Microsoft.Health.FastList<T>.EnsureCapacity(System.Int32)
  nameWithType.vb: FastList(Of T).EnsureCapacity(Int32)
  fullName.vb: Microsoft.Health.FastList(Of T).EnsureCapacity(System.Int32)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.EnsureCapacity(System.Int32)
    name: EnsureCapacity
    nameWithType: FastList<T>.EnsureCapacity
    fullName: Microsoft.Health.FastList<T>.EnsureCapacity
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.EnsureCapacity(System.Int32)
    name: EnsureCapacity
    nameWithType: FastList(Of T).EnsureCapacity
    fullName: Microsoft.Health.FastList(Of T).EnsureCapacity
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.Init(System.Int32)
  commentId: M:Microsoft.Health.FastList`1.Init(System.Int32)
  isExternal: true
  name: Init(Int32)
  nameWithType: FastList<T>.Init(Int32)
  fullName: Microsoft.Health.FastList<T>.Init(System.Int32)
  nameWithType.vb: FastList(Of T).Init(Int32)
  fullName.vb: Microsoft.Health.FastList(Of T).Init(System.Int32)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.Init(System.Int32)
    name: Init
    nameWithType: FastList<T>.Init
    fullName: Microsoft.Health.FastList<T>.Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.Init(System.Int32)
    name: Init
    nameWithType: FastList(Of T).Init
    fullName: Microsoft.Health.FastList(Of T).Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.ToArray
  commentId: M:Microsoft.Health.FastList`1.ToArray
  isExternal: false
  name: ToArray()
  nameWithType: FastList<T>.ToArray()
  fullName: Microsoft.Health.FastList<T>.ToArray()
  nameWithType.vb: FastList(Of T).ToArray()
  fullName.vb: Microsoft.Health.FastList(Of T).ToArray()
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.ToArray
    name: ToArray
    nameWithType: FastList<T>.ToArray
    fullName: Microsoft.Health.FastList<T>.ToArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.ToArray
    name: ToArray
    nameWithType: FastList(Of T).ToArray
    fullName: Microsoft.Health.FastList(Of T).ToArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.GetTrimmedBuffer
  commentId: M:Microsoft.Health.FastList`1.GetTrimmedBuffer
  isExternal: false
  name: GetTrimmedBuffer()
  nameWithType: FastList<T>.GetTrimmedBuffer()
  fullName: Microsoft.Health.FastList<T>.GetTrimmedBuffer()
  nameWithType.vb: FastList(Of T).GetTrimmedBuffer()
  fullName.vb: Microsoft.Health.FastList(Of T).GetTrimmedBuffer()
  spec.csharp:
  - uid: Microsoft.Health.FastList`1.GetTrimmedBuffer
    name: GetTrimmedBuffer
    nameWithType: FastList<T>.GetTrimmedBuffer
    fullName: Microsoft.Health.FastList<T>.GetTrimmedBuffer
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.FastList`1.GetTrimmedBuffer
    name: GetTrimmedBuffer
    nameWithType: FastList(Of T).GetTrimmedBuffer
    fullName: Microsoft.Health.FastList(Of T).GetTrimmedBuffer
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.CSVExtensions.GetOptional(System.Collections.Generic.IList{System.String},System.Int32)
  commentId: M:Microsoft.Health.CSVExtensions.GetOptional(System.Collections.Generic.IList{System.String},System.Int32)
  isExternal: true
  name: GetOptional(IList<String>, Int32)
  nameWithType: CSVExtensions.GetOptional(IList<String>, Int32)
  fullName: Microsoft.Health.CSVExtensions.GetOptional(System.Collections.Generic.IList<System.String>, System.Int32)
  nameWithType.vb: CSVExtensions.GetOptional(IList(Of String), Int32)
  fullName.vb: Microsoft.Health.CSVExtensions.GetOptional(System.Collections.Generic.IList(Of System.String), System.Int32)
  name.vb: GetOptional(IList(Of String), Int32)
  spec.csharp:
  - uid: Microsoft.Health.CSVExtensions.GetOptional(System.Collections.Generic.IList{System.String},System.Int32)
    name: GetOptional
    nameWithType: CSVExtensions.GetOptional
    fullName: Microsoft.Health.CSVExtensions.GetOptional
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.CSVExtensions.GetOptional(System.Collections.Generic.IList{System.String},System.Int32)
    name: GetOptional
    nameWithType: CSVExtensions.GetOptional
    fullName: Microsoft.Health.CSVExtensions.GetOptional
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.CSVExtensions
  commentId: T:Microsoft.Health.CSVExtensions
  parent: Microsoft.Health
  isExternal: false
  name: CSVExtensions
  nameWithType: CSVExtensions
  fullName: Microsoft.Health.CSVExtensions
- uid: Microsoft.Health.CSVExtensions.GetOptional(System.Collections.Generic.IList{System.String},System.Int32,System.String)
  commentId: M:Microsoft.Health.CSVExtensions.GetOptional(System.Collections.Generic.IList{System.String},System.Int32,System.String)
  isExternal: true
  name: GetOptional(IList<String>, Int32, String)
  nameWithType: CSVExtensions.GetOptional(IList<String>, Int32, String)
  fullName: Microsoft.Health.CSVExtensions.GetOptional(System.Collections.Generic.IList<System.String>, System.Int32, System.String)
  nameWithType.vb: CSVExtensions.GetOptional(IList(Of String), Int32, String)
  fullName.vb: Microsoft.Health.CSVExtensions.GetOptional(System.Collections.Generic.IList(Of System.String), System.Int32, System.String)
  name.vb: GetOptional(IList(Of String), Int32, String)
  spec.csharp:
  - uid: Microsoft.Health.CSVExtensions.GetOptional(System.Collections.Generic.IList{System.String},System.Int32,System.String)
    name: GetOptional
    nameWithType: CSVExtensions.GetOptional
    fullName: Microsoft.Health.CSVExtensions.GetOptional
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.CSVExtensions.GetOptional(System.Collections.Generic.IList{System.String},System.Int32,System.String)
    name: GetOptional
    nameWithType: CSVExtensions.GetOptional
    fullName: Microsoft.Health.CSVExtensions.GetOptional
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.CSVExtensions.GetOptional``1(System.Collections.Generic.IList{System.String},System.Int32,``0)
  commentId: M:Microsoft.Health.CSVExtensions.GetOptional``1(System.Collections.Generic.IList{System.String},System.Int32,``0)
  isExternal: true
  name: GetOptional<T>(IList<String>, Int32, T)
  nameWithType: CSVExtensions.GetOptional<T>(IList<String>, Int32, T)
  fullName: Microsoft.Health.CSVExtensions.GetOptional<T>(System.Collections.Generic.IList<System.String>, System.Int32, T)
  nameWithType.vb: CSVExtensions.GetOptional(Of T)(IList(Of String), Int32, T)
  fullName.vb: Microsoft.Health.CSVExtensions.GetOptional(Of T)(System.Collections.Generic.IList(Of System.String), System.Int32, T)
  name.vb: GetOptional(Of T)(IList(Of String), Int32, T)
  spec.csharp:
  - uid: Microsoft.Health.CSVExtensions.GetOptional``1(System.Collections.Generic.IList{System.String},System.Int32,``0)
    name: GetOptional<T>
    nameWithType: CSVExtensions.GetOptional<T>
    fullName: Microsoft.Health.CSVExtensions.GetOptional<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.CSVExtensions.GetOptional``1(System.Collections.Generic.IList{System.String},System.Int32,``0)
    name: GetOptional(Of T)
    nameWithType: CSVExtensions.GetOptional(Of T)
    fullName: Microsoft.Health.CSVExtensions.GetOptional(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.CSVExtensions.Get``1(System.Collections.Generic.IList{System.String},System.Int32)
  commentId: M:Microsoft.Health.CSVExtensions.Get``1(System.Collections.Generic.IList{System.String},System.Int32)
  isExternal: true
  name: Get<T>(IList<String>, Int32)
  nameWithType: CSVExtensions.Get<T>(IList<String>, Int32)
  fullName: Microsoft.Health.CSVExtensions.Get<T>(System.Collections.Generic.IList<System.String>, System.Int32)
  nameWithType.vb: CSVExtensions.Get(Of T)(IList(Of String), Int32)
  fullName.vb: Microsoft.Health.CSVExtensions.Get(Of T)(System.Collections.Generic.IList(Of System.String), System.Int32)
  name.vb: Get(Of T)(IList(Of String), Int32)
  spec.csharp:
  - uid: Microsoft.Health.CSVExtensions.Get``1(System.Collections.Generic.IList{System.String},System.Int32)
    name: Get<T>
    nameWithType: CSVExtensions.Get<T>
    fullName: Microsoft.Health.CSVExtensions.Get<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.CSVExtensions.Get``1(System.Collections.Generic.IList{System.String},System.Int32)
    name: Get(Of T)
    nameWithType: CSVExtensions.Get(Of T)
    fullName: Microsoft.Health.CSVExtensions.Get(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.InvertedIndex.TermList.#ctor*
  commentId: Overload:Microsoft.Health.InvertedIndex.TermList.#ctor
  isExternal: false
  name: TermList
  nameWithType: TermList.TermList
  fullName: Microsoft.Health.InvertedIndex.TermList.TermList
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Health.InvertedIndex.TermList.Add*
  commentId: Overload:Microsoft.Health.InvertedIndex.TermList.Add
  isExternal: false
  name: Add
  nameWithType: TermList.Add
  fullName: Microsoft.Health.InvertedIndex.TermList.Add
- uid: System.Collections.Generic.ICollection{System.String}.Add(System.String)
  commentId: M:System.Collections.Generic.ICollection{System.String}.Add(System.String)
  parent: System.Collections.Generic.ICollection{System.String}
  definition: System.Collections.Generic.ICollection`1.Add(`0)
  name: Add(String)
  nameWithType: ICollection<String>.Add(String)
  fullName: System.Collections.Generic.ICollection<System.String>.Add(System.String)
  nameWithType.vb: ICollection(Of String).Add(String)
  fullName.vb: System.Collections.Generic.ICollection(Of System.String).Add(System.String)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<String>.Add
    fullName: System.Collections.Generic.ICollection<System.String>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of String).Add
    fullName: System.Collections.Generic.ICollection(Of System.String).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.ICollection`1.Add(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)
  isExternal: true
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<T>.Add
    fullName: System.Collections.Generic.ICollection<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of T).Add
    fullName: System.Collections.Generic.ICollection(Of T).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Microsoft.Health.InvertedIndex.TermList.AddNoCheck*
  commentId: Overload:Microsoft.Health.InvertedIndex.TermList.AddNoCheck
  isExternal: false
  name: AddNoCheck
  nameWithType: TermList.AddNoCheck
  fullName: Microsoft.Health.InvertedIndex.TermList.AddNoCheck
- uid: Microsoft.Health.InvertedIndex.TermList.CalculateWeights*
  commentId: Overload:Microsoft.Health.InvertedIndex.TermList.CalculateWeights
  isExternal: false
  name: CalculateWeights
  nameWithType: TermList.CalculateWeights
  fullName: Microsoft.Health.InvertedIndex.TermList.CalculateWeights
- uid: Microsoft.Health.InvertedIndex.TermList.Dedupe*
  commentId: Overload:Microsoft.Health.InvertedIndex.TermList.Dedupe
  isExternal: false
  name: Dedupe
  nameWithType: TermList.Dedupe
  fullName: Microsoft.Health.InvertedIndex.TermList.Dedupe
- uid: Microsoft.Health.InvertedIndex.TermList.Compare*
  commentId: Overload:Microsoft.Health.InvertedIndex.TermList.Compare
  isExternal: false
  name: Compare
  nameWithType: TermList.Compare
  fullName: Microsoft.Health.InvertedIndex.TermList.Compare
- uid: System.Collections.Generic.IComparer{Microsoft.Health.InvertedIndex.WeightedTerm}.Compare(Microsoft.Health.InvertedIndex.WeightedTerm,Microsoft.Health.InvertedIndex.WeightedTerm)
  commentId: M:System.Collections.Generic.IComparer{Microsoft.Health.InvertedIndex.WeightedTerm}.Compare(Microsoft.Health.InvertedIndex.WeightedTerm,Microsoft.Health.InvertedIndex.WeightedTerm)
  parent: System.Collections.Generic.IComparer{Microsoft.Health.InvertedIndex.WeightedTerm}
  definition: System.Collections.Generic.IComparer`1.Compare(`0,`0)
  name: Compare(WeightedTerm, WeightedTerm)
  nameWithType: IComparer<WeightedTerm>.Compare(WeightedTerm, WeightedTerm)
  fullName: System.Collections.Generic.IComparer<Microsoft.Health.InvertedIndex.WeightedTerm>.Compare(Microsoft.Health.InvertedIndex.WeightedTerm, Microsoft.Health.InvertedIndex.WeightedTerm)
  nameWithType.vb: IComparer(Of WeightedTerm).Compare(WeightedTerm, WeightedTerm)
  fullName.vb: System.Collections.Generic.IComparer(Of Microsoft.Health.InvertedIndex.WeightedTerm).Compare(Microsoft.Health.InvertedIndex.WeightedTerm, Microsoft.Health.InvertedIndex.WeightedTerm)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer<WeightedTerm>.Compare
    fullName: System.Collections.Generic.IComparer<Microsoft.Health.InvertedIndex.WeightedTerm>.Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.InvertedIndex.WeightedTerm
    name: WeightedTerm
    nameWithType: WeightedTerm
    fullName: Microsoft.Health.InvertedIndex.WeightedTerm
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.InvertedIndex.WeightedTerm
    name: WeightedTerm
    nameWithType: WeightedTerm
    fullName: Microsoft.Health.InvertedIndex.WeightedTerm
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer(Of WeightedTerm).Compare
    fullName: System.Collections.Generic.IComparer(Of Microsoft.Health.InvertedIndex.WeightedTerm).Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.InvertedIndex.WeightedTerm
    name: WeightedTerm
    nameWithType: WeightedTerm
    fullName: Microsoft.Health.InvertedIndex.WeightedTerm
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.InvertedIndex.WeightedTerm
    name: WeightedTerm
    nameWithType: WeightedTerm
    fullName: Microsoft.Health.InvertedIndex.WeightedTerm
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.WeightedTerm
  commentId: T:Microsoft.Health.InvertedIndex.WeightedTerm
  parent: Microsoft.Health.InvertedIndex
  isExternal: false
  name: WeightedTerm
  nameWithType: WeightedTerm
  fullName: Microsoft.Health.InvertedIndex.WeightedTerm
- uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
  commentId: M:System.Collections.Generic.IComparer`1.Compare(`0,`0)
  isExternal: true
  name: Compare(T, T)
  nameWithType: IComparer<T>.Compare(T, T)
  fullName: System.Collections.Generic.IComparer<T>.Compare(T, T)
  nameWithType.vb: IComparer(Of T).Compare(T, T)
  fullName.vb: System.Collections.Generic.IComparer(Of T).Compare(T, T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer<T>.Compare
    fullName: System.Collections.Generic.IComparer<T>.Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer(Of T).Compare
    fullName: System.Collections.Generic.IComparer(Of T).Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.TermList.IndexOf*
  commentId: Overload:Microsoft.Health.InvertedIndex.TermList.IndexOf
  isExternal: false
  name: IndexOf
  nameWithType: TermList.IndexOf
  fullName: Microsoft.Health.InvertedIndex.TermList.IndexOf
- uid: System.Collections.Generic.IList{System.String}.IndexOf(System.String)
  commentId: M:System.Collections.Generic.IList{System.String}.IndexOf(System.String)
  parent: System.Collections.Generic.IList{System.String}
  definition: System.Collections.Generic.IList`1.IndexOf(`0)
  name: IndexOf(String)
  nameWithType: IList<String>.IndexOf(String)
  fullName: System.Collections.Generic.IList<System.String>.IndexOf(System.String)
  nameWithType.vb: IList(Of String).IndexOf(String)
  fullName.vb: System.Collections.Generic.IList(Of System.String).IndexOf(System.String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList<String>.IndexOf
    fullName: System.Collections.Generic.IList<System.String>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList(Of String).IndexOf
    fullName: System.Collections.Generic.IList(Of System.String).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1.IndexOf(`0)
  commentId: M:System.Collections.Generic.IList`1.IndexOf(`0)
  isExternal: true
  name: IndexOf(T)
  nameWithType: IList<T>.IndexOf(T)
  fullName: System.Collections.Generic.IList<T>.IndexOf(T)
  nameWithType.vb: IList(Of T).IndexOf(T)
  fullName.vb: System.Collections.Generic.IList(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList<T>.IndexOf
    fullName: System.Collections.Generic.IList<T>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList(Of T).IndexOf
    fullName: System.Collections.Generic.IList(Of T).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.TermList.Insert*
  commentId: Overload:Microsoft.Health.InvertedIndex.TermList.Insert
  isExternal: false
  name: Insert
  nameWithType: TermList.Insert
  fullName: Microsoft.Health.InvertedIndex.TermList.Insert
- uid: System.Collections.Generic.IList{System.String}.Insert(System.Int32,System.String)
  commentId: M:System.Collections.Generic.IList{System.String}.Insert(System.Int32,System.String)
  parent: System.Collections.Generic.IList{System.String}
  definition: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  name: Insert(Int32, String)
  nameWithType: IList<String>.Insert(Int32, String)
  fullName: System.Collections.Generic.IList<System.String>.Insert(System.Int32, System.String)
  nameWithType.vb: IList(Of String).Insert(Int32, String)
  fullName.vb: System.Collections.Generic.IList(Of System.String).Insert(System.Int32, System.String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList<String>.Insert
    fullName: System.Collections.Generic.IList<System.String>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList(Of String).Insert
    fullName: System.Collections.Generic.IList(Of System.String).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  commentId: M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  isExternal: true
  name: Insert(Int32, T)
  nameWithType: IList<T>.Insert(Int32, T)
  fullName: System.Collections.Generic.IList<T>.Insert(System.Int32, T)
  nameWithType.vb: IList(Of T).Insert(Int32, T)
  fullName.vb: System.Collections.Generic.IList(Of T).Insert(System.Int32, T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList<T>.Insert
    fullName: System.Collections.Generic.IList<T>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList(Of T).Insert
    fullName: System.Collections.Generic.IList(Of T).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.TermList.Item*
  commentId: Overload:Microsoft.Health.InvertedIndex.TermList.Item
  isExternal: false
  name: Item
  nameWithType: TermList.Item
  fullName: Microsoft.Health.InvertedIndex.TermList.Item
- uid: System.Collections.Generic.IList{System.String}.Item(System.Int32)
  commentId: P:System.Collections.Generic.IList{System.String}.Item(System.Int32)
  parent: System.Collections.Generic.IList{System.String}
  definition: System.Collections.Generic.IList`1.Item(System.Int32)
  name: Item[Int32]
  nameWithType: IList<String>.Item[Int32]
  fullName: System.Collections.Generic.IList<System.String>.Item[System.Int32]
  nameWithType.vb: IList(Of String).Item(Int32)
  fullName.vb: System.Collections.Generic.IList(Of System.String).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList<String>.Item
    fullName: System.Collections.Generic.IList<System.String>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList(Of String).Item
    fullName: System.Collections.Generic.IList(Of System.String).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1.Item(System.Int32)
  commentId: P:System.Collections.Generic.IList`1.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: IList<T>.Item[Int32]
  fullName: System.Collections.Generic.IList<T>.Item[System.Int32]
  nameWithType.vb: IList(Of T).Item(Int32)
  fullName.vb: System.Collections.Generic.IList(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList<T>.Item
    fullName: System.Collections.Generic.IList<T>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList(Of T).Item
    fullName: System.Collections.Generic.IList(Of T).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.TermList.Contains*
  commentId: Overload:Microsoft.Health.InvertedIndex.TermList.Contains
  isExternal: false
  name: Contains
  nameWithType: TermList.Contains
  fullName: Microsoft.Health.InvertedIndex.TermList.Contains
- uid: System.Collections.Generic.ICollection{System.String}.Contains(System.String)
  commentId: M:System.Collections.Generic.ICollection{System.String}.Contains(System.String)
  parent: System.Collections.Generic.ICollection{System.String}
  definition: System.Collections.Generic.ICollection`1.Contains(`0)
  name: Contains(String)
  nameWithType: ICollection<String>.Contains(String)
  fullName: System.Collections.Generic.ICollection<System.String>.Contains(System.String)
  nameWithType.vb: ICollection(Of String).Contains(String)
  fullName.vb: System.Collections.Generic.ICollection(Of System.String).Contains(System.String)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<String>.Contains
    fullName: System.Collections.Generic.ICollection<System.String>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of String).Contains
    fullName: System.Collections.Generic.ICollection(Of System.String).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)
  isExternal: true
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<T>.Contains
    fullName: System.Collections.Generic.ICollection<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of T).Contains
    fullName: System.Collections.Generic.ICollection(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.TermList.CopyTo*
  commentId: Overload:Microsoft.Health.InvertedIndex.TermList.CopyTo
  isExternal: false
  name: CopyTo
  nameWithType: TermList.CopyTo
  fullName: Microsoft.Health.InvertedIndex.TermList.CopyTo
- uid: System.Collections.Generic.ICollection{System.String}.CopyTo(System.String[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection{System.String}.CopyTo(System.String[],System.Int32)
  parent: System.Collections.Generic.ICollection{System.String}
  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  name: CopyTo(String[], Int32)
  nameWithType: ICollection<String>.CopyTo(String[], Int32)
  fullName: System.Collections.Generic.ICollection<System.String>.CopyTo(System.String[], System.Int32)
  nameWithType.vb: ICollection(Of String).CopyTo(String(), Int32)
  fullName.vb: System.Collections.Generic.ICollection(Of System.String).CopyTo(System.String(), System.Int32)
  name.vb: CopyTo(String(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<String>.CopyTo
    fullName: System.Collections.Generic.ICollection<System.String>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of String).CopyTo
    fullName: System.Collections.Generic.ICollection(Of System.String).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: ICollection<T>.CopyTo(T[], Int32)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Int32)
  fullName.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<T>.CopyTo
    fullName: System.Collections.Generic.ICollection<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of T).CopyTo
    fullName: System.Collections.Generic.ICollection(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.TermList.Remove*
  commentId: Overload:Microsoft.Health.InvertedIndex.TermList.Remove
  isExternal: false
  name: Remove
  nameWithType: TermList.Remove
  fullName: Microsoft.Health.InvertedIndex.TermList.Remove
- uid: System.Collections.Generic.ICollection{System.String}.Remove(System.String)
  commentId: M:System.Collections.Generic.ICollection{System.String}.Remove(System.String)
  parent: System.Collections.Generic.ICollection{System.String}
  definition: System.Collections.Generic.ICollection`1.Remove(`0)
  name: Remove(String)
  nameWithType: ICollection<String>.Remove(String)
  fullName: System.Collections.Generic.ICollection<System.String>.Remove(System.String)
  nameWithType.vb: ICollection(Of String).Remove(String)
  fullName.vb: System.Collections.Generic.ICollection(Of System.String).Remove(System.String)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<String>.Remove
    fullName: System.Collections.Generic.ICollection<System.String>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of String).Remove
    fullName: System.Collections.Generic.ICollection(Of System.String).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)
  isExternal: true
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<T>.Remove
    fullName: System.Collections.Generic.ICollection<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of T).Remove
    fullName: System.Collections.Generic.ICollection(Of T).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.TermList.GetEnumerator*
  commentId: Overload:Microsoft.Health.InvertedIndex.TermList.GetEnumerator
  isExternal: false
  name: GetEnumerator
  nameWithType: TermList.GetEnumerator
  fullName: Microsoft.Health.InvertedIndex.TermList.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{System.String}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{System.String}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{System.String}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<String>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<System.String>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of String).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<String>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<System.String>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of String).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of System.String).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{System.String}
  commentId: T:System.Collections.Generic.IEnumerator{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<String>
  nameWithType: IEnumerator<String>
  fullName: System.Collections.Generic.IEnumerator<System.String>
  nameWithType.vb: IEnumerator(Of String)
  fullName.vb: System.Collections.Generic.IEnumerator(Of System.String)
  name.vb: IEnumerator(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.TermList.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:Microsoft.Health.InvertedIndex.TermList.System#Collections#IEnumerable#GetEnumerator
  isExternal: false
  name: IEnumerable.GetEnumerator
  nameWithType: TermList.IEnumerable.GetEnumerator
  fullName: Microsoft.Health.InvertedIndex.TermList.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: TermList.System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
