### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Utility.WCWebConfig
  commentId: T:Microsoft.Health.Utility.WCWebConfig
  id: WCWebConfig
  parent: Microsoft.Health.Utility
  children:
  - Microsoft.Health.Utility.WCWebConfig.GetAppSetting(System.String)
  - Microsoft.Health.Utility.WCWebConfig.GetAppSetting(System.String,System.String)
  - Microsoft.Health.Utility.WCWebConfig.GetConnectionString(System.String)
  - Microsoft.Health.Utility.WCWebConfig.GetConnectionStringCollection
  - Microsoft.Health.Utility.WCWebConfig.GetMaxRequestLengthKb
  - Microsoft.Health.Utility.WCWebConfig.GetMaxWorkerThreads
  - Microsoft.Health.Utility.WCWebConfig.GetMinWorkerThreads
  - Microsoft.Health.Utility.WCWebConfig.GetProcessorCount
  - Microsoft.Health.Utility.WCWebConfig.IsDebug
  langs:
  - csharp
  - vb
  name: WCWebConfig
  nameWithType: WCWebConfig
  fullName: Microsoft.Health.Utility.WCWebConfig
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/Config.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WCWebConfig
    path: ../Microsoft.Health.Utility/utilities/Config.cs
    startLine: 18
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\nConfiguration helpers\n"
  example: []
  syntax:
    content: public static class WCWebConfig
    content.vb: Public Module WCWebConfig
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Health.Utility.WCWebConfig.GetAppSetting(System.String)
  commentId: M:Microsoft.Health.Utility.WCWebConfig.GetAppSetting(System.String)
  id: GetAppSetting(System.String)
  parent: Microsoft.Health.Utility.WCWebConfig
  langs:
  - csharp
  - vb
  name: GetAppSetting(String)
  nameWithType: WCWebConfig.GetAppSetting(String)
  fullName: Microsoft.Health.Utility.WCWebConfig.GetAppSetting(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/Config.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetAppSetting
    path: ../Microsoft.Health.Utility/utilities/Config.cs
    startLine: 26
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\nCover for standard config api that allows customization\nvia non-source-controlled file UserAppSettings.config\n"
  example: []
  syntax:
    content: public static string GetAppSetting(string key)
    content.vb: Public Shared Function GetAppSetting(key As String) As String
    parameters:
    - id: key
      type: System.String
      description: ''
    return:
      type: System.String
      description: ''
  overload: Microsoft.Health.Utility.WCWebConfig.GetAppSetting*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Utility.WCWebConfig.GetAppSetting(System.String,System.String)
  commentId: M:Microsoft.Health.Utility.WCWebConfig.GetAppSetting(System.String,System.String)
  id: GetAppSetting(System.String,System.String)
  parent: Microsoft.Health.Utility.WCWebConfig
  langs:
  - csharp
  - vb
  name: GetAppSetting(String, String)
  nameWithType: WCWebConfig.GetAppSetting(String, String)
  fullName: Microsoft.Health.Utility.WCWebConfig.GetAppSetting(System.String, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/Config.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetAppSetting
    path: ../Microsoft.Health.Utility/utilities/Config.cs
    startLine: 51
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\nCover for standard config api that allows customization\nvia non-source-controlled file UserAppSettings.config\n"
  example: []
  syntax:
    content: public static string GetAppSetting(string key, string defaultValue)
    content.vb: Public Shared Function GetAppSetting(key As String, defaultValue As String) As String
    parameters:
    - id: key
      type: System.String
      description: ''
    - id: defaultValue
      type: System.String
      description: "\ndefault value to be returned in case the value specified by\nthe key does not exit\n"
    return:
      type: System.String
      description: ''
  overload: Microsoft.Health.Utility.WCWebConfig.GetAppSetting*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Utility.WCWebConfig.GetConnectionString(System.String)
  commentId: M:Microsoft.Health.Utility.WCWebConfig.GetConnectionString(System.String)
  id: GetConnectionString(System.String)
  parent: Microsoft.Health.Utility.WCWebConfig
  langs:
  - csharp
  - vb
  name: GetConnectionString(String)
  nameWithType: WCWebConfig.GetConnectionString(String)
  fullName: Microsoft.Health.Utility.WCWebConfig.GetConnectionString(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/Config.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetConnectionString
    path: ../Microsoft.Health.Utility/utilities/Config.cs
    startLine: 68
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\nCover for standard config api that allows customization\nvia non-source-controlled file UserConnectionStrings.config\n"
  example: []
  syntax:
    content: public static ConnectionStringSettings GetConnectionString(string key)
    content.vb: Public Shared Function GetConnectionString(key As String) As ConnectionStringSettings
    parameters:
    - id: key
      type: System.String
      description: ''
    return:
      type: System.Configuration.ConnectionStringSettings
      description: ''
  overload: Microsoft.Health.Utility.WCWebConfig.GetConnectionString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Utility.WCWebConfig.GetConnectionStringCollection
  commentId: M:Microsoft.Health.Utility.WCWebConfig.GetConnectionStringCollection
  id: GetConnectionStringCollection
  parent: Microsoft.Health.Utility.WCWebConfig
  langs:
  - csharp
  - vb
  name: GetConnectionStringCollection()
  nameWithType: WCWebConfig.GetConnectionStringCollection()
  fullName: Microsoft.Health.Utility.WCWebConfig.GetConnectionStringCollection()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/Config.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetConnectionStringCollection
    path: ../Microsoft.Health.Utility/utilities/Config.cs
    startLine: 86
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\nReturns the userconnectionstring collection if it exists, \notherwise returns the default connectionstring collection.        \n"
  example: []
  syntax:
    content: public static ConnectionStringSettingsCollection GetConnectionStringCollection()
    content.vb: Public Shared Function GetConnectionStringCollection As ConnectionStringSettingsCollection
    return:
      type: System.Configuration.ConnectionStringSettingsCollection
      description: ''
  overload: Microsoft.Health.Utility.WCWebConfig.GetConnectionStringCollection*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Utility.WCWebConfig.GetMaxWorkerThreads
  commentId: M:Microsoft.Health.Utility.WCWebConfig.GetMaxWorkerThreads
  id: GetMaxWorkerThreads
  parent: Microsoft.Health.Utility.WCWebConfig
  langs:
  - csharp
  - vb
  name: GetMaxWorkerThreads()
  nameWithType: WCWebConfig.GetMaxWorkerThreads()
  fullName: Microsoft.Health.Utility.WCWebConfig.GetMaxWorkerThreads()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/Config.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetMaxWorkerThreads
    path: ../Microsoft.Health.Utility/utilities/Config.cs
    startLine: 160
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\nGets the MaxWorkerThreads from the Web.Config ProcessModelSection.\n"
  remarks: "\nIf there is not a ProcessModelSection in the web.config file,\nthen the default value is used.\n"
  example: []
  syntax:
    content: public static int GetMaxWorkerThreads()
    content.vb: Public Shared Function GetMaxWorkerThreads As Integer
    return:
      type: System.Int32
      description: "\nThe MaxWorkerThreads value.\n"
  overload: Microsoft.Health.Utility.WCWebConfig.GetMaxWorkerThreads*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Utility.WCWebConfig.GetMinWorkerThreads
  commentId: M:Microsoft.Health.Utility.WCWebConfig.GetMinWorkerThreads
  id: GetMinWorkerThreads
  parent: Microsoft.Health.Utility.WCWebConfig
  langs:
  - csharp
  - vb
  name: GetMinWorkerThreads()
  nameWithType: WCWebConfig.GetMinWorkerThreads()
  fullName: Microsoft.Health.Utility.WCWebConfig.GetMinWorkerThreads()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/Config.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetMinWorkerThreads
    path: ../Microsoft.Health.Utility/utilities/Config.cs
    startLine: 192
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\nGets the MinWorkerThreads from the Web.Config ProcessModelSection.\n"
  remarks: "\nIf there is not a ProcessModelSection in the web.config file,\nthen the default value is used.\n"
  example: []
  syntax:
    content: public static int GetMinWorkerThreads()
    content.vb: Public Shared Function GetMinWorkerThreads As Integer
    return:
      type: System.Int32
      description: "\nThe MinWorkerThreads value.\n"
  overload: Microsoft.Health.Utility.WCWebConfig.GetMinWorkerThreads*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Utility.WCWebConfig.GetProcessorCount
  commentId: M:Microsoft.Health.Utility.WCWebConfig.GetProcessorCount
  id: GetProcessorCount
  parent: Microsoft.Health.Utility.WCWebConfig
  langs:
  - csharp
  - vb
  name: GetProcessorCount()
  nameWithType: WCWebConfig.GetProcessorCount()
  fullName: Microsoft.Health.Utility.WCWebConfig.GetProcessorCount()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/Config.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetProcessorCount
    path: ../Microsoft.Health.Utility/utilities/Config.cs
    startLine: 224
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\nGets the number of processors in the system.\n"
  remarks: "\nFor simplicity, this method does not account for the CPUMASK in the \nWeb.Config ProcessModelSection.\n"
  example: []
  syntax:
    content: public static int GetProcessorCount()
    content.vb: Public Shared Function GetProcessorCount As Integer
    return:
      type: System.Int32
      description: "\nThe number of processors in the system.\n"
  overload: Microsoft.Health.Utility.WCWebConfig.GetProcessorCount*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Utility.WCWebConfig.GetMaxRequestLengthKb
  commentId: M:Microsoft.Health.Utility.WCWebConfig.GetMaxRequestLengthKb
  id: GetMaxRequestLengthKb
  parent: Microsoft.Health.Utility.WCWebConfig
  langs:
  - csharp
  - vb
  name: GetMaxRequestLengthKb()
  nameWithType: WCWebConfig.GetMaxRequestLengthKb()
  fullName: Microsoft.Health.Utility.WCWebConfig.GetMaxRequestLengthKb()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/Config.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetMaxRequestLengthKb
    path: ../Microsoft.Health.Utility/utilities/Config.cs
    startLine: 290
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\nGets httpuntime section's MaxRequestLength in kilo-bytes\n"
  example: []
  syntax:
    content: public static int GetMaxRequestLengthKb()
    content.vb: Public Shared Function GetMaxRequestLengthKb As Integer
    return:
      type: System.Int32
      description: ''
  overload: Microsoft.Health.Utility.WCWebConfig.GetMaxRequestLengthKb*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Utility.WCWebConfig.IsDebug
  commentId: M:Microsoft.Health.Utility.WCWebConfig.IsDebug
  id: IsDebug
  parent: Microsoft.Health.Utility.WCWebConfig
  langs:
  - csharp
  - vb
  name: IsDebug()
  nameWithType: WCWebConfig.IsDebug()
  fullName: Microsoft.Health.Utility.WCWebConfig.IsDebug()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/Config.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: IsDebug
    path: ../Microsoft.Health.Utility/utilities/Config.cs
    startLine: 351
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\nGets compilation debug setting\n"
  example: []
  syntax:
    content: public static bool IsDebug()
    content.vb: Public Shared Function IsDebug As Boolean
    return:
      type: System.Boolean
      description: Returns true of system.web/compilation/@debug=true
  overload: Microsoft.Health.Utility.WCWebConfig.IsDebug*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Utility.WCWebConfig.GetAppSetting*
  commentId: Overload:Microsoft.Health.Utility.WCWebConfig.GetAppSetting
  isExternal: false
  name: GetAppSetting
  nameWithType: WCWebConfig.GetAppSetting
  fullName: Microsoft.Health.Utility.WCWebConfig.GetAppSetting
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.Utility.WCWebConfig.GetConnectionString*
  commentId: Overload:Microsoft.Health.Utility.WCWebConfig.GetConnectionString
  isExternal: false
  name: GetConnectionString
  nameWithType: WCWebConfig.GetConnectionString
  fullName: Microsoft.Health.Utility.WCWebConfig.GetConnectionString
- uid: System.Configuration.ConnectionStringSettings
  commentId: T:System.Configuration.ConnectionStringSettings
  parent: System.Configuration
  isExternal: true
  name: ConnectionStringSettings
  nameWithType: ConnectionStringSettings
  fullName: System.Configuration.ConnectionStringSettings
- uid: System.Configuration
  commentId: N:System.Configuration
  isExternal: false
  name: System.Configuration
  nameWithType: System.Configuration
  fullName: System.Configuration
- uid: Microsoft.Health.Utility.WCWebConfig.GetConnectionStringCollection*
  commentId: Overload:Microsoft.Health.Utility.WCWebConfig.GetConnectionStringCollection
  isExternal: false
  name: GetConnectionStringCollection
  nameWithType: WCWebConfig.GetConnectionStringCollection
  fullName: Microsoft.Health.Utility.WCWebConfig.GetConnectionStringCollection
- uid: System.Configuration.ConnectionStringSettingsCollection
  commentId: T:System.Configuration.ConnectionStringSettingsCollection
  parent: System.Configuration
  isExternal: true
  name: ConnectionStringSettingsCollection
  nameWithType: ConnectionStringSettingsCollection
  fullName: System.Configuration.ConnectionStringSettingsCollection
- uid: Microsoft.Health.Utility.WCWebConfig.GetMaxWorkerThreads*
  commentId: Overload:Microsoft.Health.Utility.WCWebConfig.GetMaxWorkerThreads
  isExternal: false
  name: GetMaxWorkerThreads
  nameWithType: WCWebConfig.GetMaxWorkerThreads
  fullName: Microsoft.Health.Utility.WCWebConfig.GetMaxWorkerThreads
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Health.Utility.WCWebConfig.GetMinWorkerThreads*
  commentId: Overload:Microsoft.Health.Utility.WCWebConfig.GetMinWorkerThreads
  isExternal: false
  name: GetMinWorkerThreads
  nameWithType: WCWebConfig.GetMinWorkerThreads
  fullName: Microsoft.Health.Utility.WCWebConfig.GetMinWorkerThreads
- uid: Microsoft.Health.Utility.WCWebConfig.GetProcessorCount*
  commentId: Overload:Microsoft.Health.Utility.WCWebConfig.GetProcessorCount
  isExternal: false
  name: GetProcessorCount
  nameWithType: WCWebConfig.GetProcessorCount
  fullName: Microsoft.Health.Utility.WCWebConfig.GetProcessorCount
- uid: Microsoft.Health.Utility.WCWebConfig.GetMaxRequestLengthKb*
  commentId: Overload:Microsoft.Health.Utility.WCWebConfig.GetMaxRequestLengthKb
  isExternal: false
  name: GetMaxRequestLengthKb
  nameWithType: WCWebConfig.GetMaxRequestLengthKb
  fullName: Microsoft.Health.Utility.WCWebConfig.GetMaxRequestLengthKb
- uid: Microsoft.Health.Utility.WCWebConfig.IsDebug*
  commentId: Overload:Microsoft.Health.Utility.WCWebConfig.IsDebug
  isExternal: false
  name: IsDebug
  nameWithType: WCWebConfig.IsDebug
  fullName: Microsoft.Health.Utility.WCWebConfig.IsDebug
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
