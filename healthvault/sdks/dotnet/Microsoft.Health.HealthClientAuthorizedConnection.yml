### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.HealthClientAuthorizedConnection
  commentId: T:Microsoft.Health.HealthClientAuthorizedConnection
  id: HealthClientAuthorizedConnection
  parent: Microsoft.Health
  children:
  - Microsoft.Health.HealthClientAuthorizedConnection.#ctor
  - Microsoft.Health.HealthClientAuthorizedConnection.#ctor(Microsoft.Health.Web.Authentication.WebApplicationCredential)
  - Microsoft.Health.HealthClientAuthorizedConnection.#ctor(Microsoft.Health.Web.Authentication.WebApplicationCredential,Microsoft.Health.HealthServiceInstance)
  - Microsoft.Health.HealthClientAuthorizedConnection.#ctor(Microsoft.Health.Web.Authentication.WebApplicationCredential,System.Guid,Microsoft.Health.HealthServiceInstance)
  - Microsoft.Health.HealthClientAuthorizedConnection.#ctor(Microsoft.Health.Web.Authentication.WebApplicationCredential,System.Guid,Microsoft.Health.HealthServiceInstance,System.Guid)
  - Microsoft.Health.HealthClientAuthorizedConnection.#ctor(Microsoft.Health.Web.Authentication.WebApplicationCredential,System.Guid,System.Uri)
  - Microsoft.Health.HealthClientAuthorizedConnection.#ctor(Microsoft.Health.Web.Authentication.WebApplicationCredential,System.Guid,System.Uri,System.Guid)
  - Microsoft.Health.HealthClientAuthorizedConnection.GetMeaningfulUseTimelyAccessDocumentReport(Microsoft.Health.DateRange)
  - Microsoft.Health.HealthClientAuthorizedConnection.GetMeaningfulUseTimelyAccessDOPUDocumentReport(Microsoft.Health.DateRange)
  - Microsoft.Health.HealthClientAuthorizedConnection.GetMeaningfulUseVDTReport(Microsoft.Health.DateRange)
  langs:
  - csharp
  - vb
  name: HealthClientAuthorizedConnection
  nameWithType: HealthClientAuthorizedConnection
  fullName: Microsoft.Health.HealthClientAuthorizedConnection
  type: Class
  source:
    remote:
      path: Microsoft.Health/HealthClientAuthorizedConnection.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: HealthClientAuthorizedConnection
    path: ../Microsoft.Health/HealthClientAuthorizedConnection.cs
    startLine: 26
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nRepresents an authorized connection between a HealthVault client application\nand the HealthVault service.\n"
  remarks: "\nHealthClientAuthorizedConnection is a connection used by a HealthVault client \napplication. The connection is authenticated using an\napplication certificate in the user store, and does not require an authenticated user.\nThe connection is only valid for <xref href=\"Microsoft.Health.HealthClientApplication\" data-throw-if-not-resolved=\"false\"></xref> instances, and \neach instance must be authorized using the HealthVault Shell service.\n"
  example: []
  syntax:
    content: 'public class HealthClientAuthorizedConnection : OfflineWebApplicationConnection'
    content.vb: >-
      Public Class HealthClientAuthorizedConnection
          Inherits OfflineWebApplicationConnection
  inheritance:
  - System.Object
  - Microsoft.Health.HealthServiceConnection
  - Microsoft.Health.ApplicationConnection
  - Microsoft.Health.Web.OfflineWebApplicationConnection
  inheritedMembers:
  - Microsoft.Health.Web.OfflineWebApplicationConnection.Authenticate
  - Microsoft.Health.Web.OfflineWebApplicationConnection.GetAllApplicationSettings
  - Microsoft.Health.Web.OfflineWebApplicationConnection.GetApplicationSettings
  - Microsoft.Health.Web.OfflineWebApplicationConnection.SetApplicationSettings(System.Xml.XPath.IXPathNavigable)
  - Microsoft.Health.Web.OfflineWebApplicationConnection.OfflinePersonId
  - Microsoft.Health.ApplicationConnection.CreateRequest(Microsoft.Health.HealthRecordAccessor,System.String,System.Int32)
  - Microsoft.Health.ApplicationConnection.GetVocabulary(System.String)
  - Microsoft.Health.ApplicationConnection.GetVocabulary(Microsoft.Health.VocabularyKey,System.Boolean)
  - Microsoft.Health.ApplicationConnection.GetVocabulary(System.Collections.Generic.IList{Microsoft.Health.VocabularyKey},System.Boolean)
  - Microsoft.Health.ApplicationConnection.GetVocabularyKeys
  - Microsoft.Health.ApplicationConnection.SearchVocabularyKeys(System.String,Microsoft.Health.VocabularySearchType,System.Nullable{System.Int32})
  - Microsoft.Health.ApplicationConnection.SearchVocabulary(Microsoft.Health.VocabularyKey,System.String,Microsoft.Health.VocabularySearchType,System.Nullable{System.Int32})
  - Microsoft.Health.ApplicationConnection.SendInsecureMessageFromApplication(System.Collections.Generic.IList{Microsoft.Health.MailRecipient},System.String,System.String,System.String,System.String,System.String)
  - Microsoft.Health.ApplicationConnection.SendInsecureMessageFromApplication(System.Collections.Generic.IList{System.Guid},System.Boolean,System.String,System.String,System.String,System.String,System.String)
  - Microsoft.Health.ApplicationConnection.SendInsecureMessageToCustodiansFromApplication(System.Guid,System.Boolean,System.String,System.String,System.String,System.String,System.String)
  - Microsoft.Health.ApplicationConnection.GetPersonInfo
  - Microsoft.Health.ApplicationConnection.GetAuthorizedPeople
  - Microsoft.Health.ApplicationConnection.GetAuthorizedPeople(Microsoft.Health.GetAuthorizedPeopleSettings)
  - Microsoft.Health.ApplicationConnection.GetAuthorizedRecords(System.Collections.Generic.IList{System.Guid})
  - Microsoft.Health.ApplicationConnection.GetApplicationInfo
  - Microsoft.Health.ApplicationConnection.GetApplicationInfo(System.Boolean)
  - Microsoft.Health.ApplicationConnection.GetUpdatedRecordsForApplication(System.Nullable{System.DateTime})
  - Microsoft.Health.ApplicationConnection.GetUpdatedRecordInfoForApplication(System.Nullable{System.DateTime})
  - Microsoft.Health.ApplicationConnection.NewSignupCode
  - Microsoft.Health.ApplicationConnection.SelectInstance(Microsoft.Health.Location)
  - Microsoft.Health.HealthServiceConnection.CreateRequest(System.String,System.Int32)
  - Microsoft.Health.HealthServiceConnection.CancelAllRequests
  - Microsoft.Health.HealthServiceConnection.GetServiceDefinition
  - Microsoft.Health.HealthServiceConnection.GetServiceDefinition(System.DateTime)
  - Microsoft.Health.HealthServiceConnection.GetServiceDefinition(Microsoft.Health.ServiceInfoSections)
  - Microsoft.Health.HealthServiceConnection.GetServiceDefinition(Microsoft.Health.ServiceInfoSections,System.DateTime)
  - Microsoft.Health.HealthServiceConnection.WebProxy
  - Microsoft.Health.HealthServiceConnection.ApplicationId
  - Microsoft.Health.HealthServiceConnection.RequestUrl
  - Microsoft.Health.HealthServiceConnection.ServiceInstance
  - Microsoft.Health.HealthServiceConnection.RequestTimeoutSeconds
  - Microsoft.Health.HealthServiceConnection.RequestTimeToLive
  - Microsoft.Health.HealthServiceConnection.Culture
  - Microsoft.Health.HealthServiceConnection.RequestCompressionMethod
  - Microsoft.Health.HealthServiceConnection.ResponseCompressionMethods
  - Microsoft.Health.HealthServiceConnection.AuthenticationToken
  - Microsoft.Health.HealthServiceConnection.Credential
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.HealthClientAuthorizedConnection.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.HealthClientAuthorizedConnection.#ctor
  commentId: M:Microsoft.Health.HealthClientAuthorizedConnection.#ctor
  id: '#ctor'
  parent: Microsoft.Health.HealthClientAuthorizedConnection
  langs:
  - csharp
  - vb
  name: HealthClientAuthorizedConnection()
  nameWithType: HealthClientAuthorizedConnection.HealthClientAuthorizedConnection()
  fullName: Microsoft.Health.HealthClientAuthorizedConnection.HealthClientAuthorizedConnection()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/HealthClientAuthorizedConnection.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health/HealthClientAuthorizedConnection.cs
    startLine: 40
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nCreates an instance of HealthClientAuthorizedConnection using\nconnection information stored in a configuration file.\n"
  example: []
  syntax:
    content: public HealthClientAuthorizedConnection()
    content.vb: Public Sub New
  overload: Microsoft.Health.HealthClientAuthorizedConnection.#ctor*
  exceptions:
  - type: Microsoft.Health.InvalidConfigurationException
    commentId: T:Microsoft.Health.InvalidConfigurationException
    description: "\nThe web or application configuration file does not contain \nconfiguration entries for \"ApplicationID\" or \"HealthServiceUrl\".\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthClientAuthorizedConnection.#ctor(Microsoft.Health.Web.Authentication.WebApplicationCredential)
  commentId: M:Microsoft.Health.HealthClientAuthorizedConnection.#ctor(Microsoft.Health.Web.Authentication.WebApplicationCredential)
  id: '#ctor(Microsoft.Health.Web.Authentication.WebApplicationCredential)'
  parent: Microsoft.Health.HealthClientAuthorizedConnection
  langs:
  - csharp
  - vb
  name: HealthClientAuthorizedConnection(WebApplicationCredential)
  nameWithType: HealthClientAuthorizedConnection.HealthClientAuthorizedConnection(WebApplicationCredential)
  fullName: Microsoft.Health.HealthClientAuthorizedConnection.HealthClientAuthorizedConnection(Microsoft.Health.Web.Authentication.WebApplicationCredential)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/HealthClientAuthorizedConnection.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health/HealthClientAuthorizedConnection.cs
    startLine: 59
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nCreates an instance of HealthClientAuthorizedConnection\nusing a specified <xref href=\"Microsoft.Health.Web.Authentication.WebApplicationCredential\" data-throw-if-not-resolved=\"false\"></xref> and\nconnection information stored in a configuration file..\n"
  example: []
  syntax:
    content: public HealthClientAuthorizedConnection(WebApplicationCredential webApplicationCredential)
    content.vb: Public Sub New(webApplicationCredential As WebApplicationCredential)
    parameters:
    - id: webApplicationCredential
      type: Microsoft.Health.Web.Authentication.WebApplicationCredential
      description: "\nCredential for authenticating the application.\n"
  overload: Microsoft.Health.HealthClientAuthorizedConnection.#ctor*
  exceptions:
  - type: Microsoft.Health.InvalidConfigurationException
    commentId: T:Microsoft.Health.InvalidConfigurationException
    description: "\nThe web or application configuration file does not contain \nconfiguration entries for \"ApplicationID\" or \"HealthServiceUrl\".\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthClientAuthorizedConnection.#ctor(Microsoft.Health.Web.Authentication.WebApplicationCredential,Microsoft.Health.HealthServiceInstance)
  commentId: M:Microsoft.Health.HealthClientAuthorizedConnection.#ctor(Microsoft.Health.Web.Authentication.WebApplicationCredential,Microsoft.Health.HealthServiceInstance)
  id: '#ctor(Microsoft.Health.Web.Authentication.WebApplicationCredential,Microsoft.Health.HealthServiceInstance)'
  parent: Microsoft.Health.HealthClientAuthorizedConnection
  langs:
  - csharp
  - vb
  name: HealthClientAuthorizedConnection(WebApplicationCredential, HealthServiceInstance)
  nameWithType: HealthClientAuthorizedConnection.HealthClientAuthorizedConnection(WebApplicationCredential, HealthServiceInstance)
  fullName: Microsoft.Health.HealthClientAuthorizedConnection.HealthClientAuthorizedConnection(Microsoft.Health.Web.Authentication.WebApplicationCredential, Microsoft.Health.HealthServiceInstance)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/HealthClientAuthorizedConnection.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health/HealthClientAuthorizedConnection.cs
    startLine: 83
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nCreates a new instance of HealthClientAuthorizedConnection\nusing a specified <xref href=\"Microsoft.Health.Web.Authentication.WebApplicationCredential\" data-throw-if-not-resolved=\"false\"></xref> and HealthVault web-service instance.\n"
  remarks: "\nIf <span class=\"paramref\">serviceInstance</span> is <strong>null</strong>, the URL for the configured\ndefault HealthVault web-service instance is used.\n"
  example: []
  syntax:
    content: public HealthClientAuthorizedConnection(WebApplicationCredential webApplicationCredential, HealthServiceInstance serviceInstance)
    content.vb: Public Sub New(webApplicationCredential As WebApplicationCredential, serviceInstance As HealthServiceInstance)
    parameters:
    - id: webApplicationCredential
      type: Microsoft.Health.Web.Authentication.WebApplicationCredential
      description: "\nCredential for authenticating the application.\n"
    - id: serviceInstance
      type: Microsoft.Health.HealthServiceInstance
      description: "\nThe HealthVault web-service instance.\n"
  overload: Microsoft.Health.HealthClientAuthorizedConnection.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthClientAuthorizedConnection.#ctor(Microsoft.Health.Web.Authentication.WebApplicationCredential,System.Guid,Microsoft.Health.HealthServiceInstance)
  commentId: M:Microsoft.Health.HealthClientAuthorizedConnection.#ctor(Microsoft.Health.Web.Authentication.WebApplicationCredential,System.Guid,Microsoft.Health.HealthServiceInstance)
  id: '#ctor(Microsoft.Health.Web.Authentication.WebApplicationCredential,System.Guid,Microsoft.Health.HealthServiceInstance)'
  parent: Microsoft.Health.HealthClientAuthorizedConnection
  langs:
  - csharp
  - vb
  name: HealthClientAuthorizedConnection(WebApplicationCredential, Guid, HealthServiceInstance)
  nameWithType: HealthClientAuthorizedConnection.HealthClientAuthorizedConnection(WebApplicationCredential, Guid, HealthServiceInstance)
  fullName: Microsoft.Health.HealthClientAuthorizedConnection.HealthClientAuthorizedConnection(Microsoft.Health.Web.Authentication.WebApplicationCredential, System.Guid, Microsoft.Health.HealthServiceInstance)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/HealthClientAuthorizedConnection.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health/HealthClientAuthorizedConnection.cs
    startLine: 112
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nCreates a new instance of HealthClientAuthorizedConnection\nusing a specified <xref href=\"Microsoft.Health.Web.Authentication.WebApplicationCredential\" data-throw-if-not-resolved=\"false\"></xref>, application ID, and HealthVault web-service instance.\n"
  remarks: "\nIf <span class=\"paramref\">serviceInstance</span> is <strong>null</strong>, the URL for the configured\ndefault HealthVault web-service instance is used.\n"
  example: []
  syntax:
    content: public HealthClientAuthorizedConnection(WebApplicationCredential webApplicationCredential, Guid applicationId, HealthServiceInstance serviceInstance)
    content.vb: Public Sub New(webApplicationCredential As WebApplicationCredential, applicationId As Guid, serviceInstance As HealthServiceInstance)
    parameters:
    - id: webApplicationCredential
      type: Microsoft.Health.Web.Authentication.WebApplicationCredential
      description: "\nCredential for authenticating the application.\n"
    - id: applicationId
      type: System.Guid
      description: "\nThe ID of the client application.\n"
    - id: serviceInstance
      type: Microsoft.Health.HealthServiceInstance
      description: "\nThe HealthVault web-service instance.\n"
  overload: Microsoft.Health.HealthClientAuthorizedConnection.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthClientAuthorizedConnection.#ctor(Microsoft.Health.Web.Authentication.WebApplicationCredential,System.Guid,System.Uri)
  commentId: M:Microsoft.Health.HealthClientAuthorizedConnection.#ctor(Microsoft.Health.Web.Authentication.WebApplicationCredential,System.Guid,System.Uri)
  id: '#ctor(Microsoft.Health.Web.Authentication.WebApplicationCredential,System.Guid,System.Uri)'
  parent: Microsoft.Health.HealthClientAuthorizedConnection
  langs:
  - csharp
  - vb
  name: HealthClientAuthorizedConnection(WebApplicationCredential, Guid, Uri)
  nameWithType: HealthClientAuthorizedConnection.HealthClientAuthorizedConnection(WebApplicationCredential, Guid, Uri)
  fullName: Microsoft.Health.HealthClientAuthorizedConnection.HealthClientAuthorizedConnection(Microsoft.Health.Web.Authentication.WebApplicationCredential, System.Guid, System.Uri)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/HealthClientAuthorizedConnection.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health/HealthClientAuthorizedConnection.cs
    startLine: 146
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nCreates a new instance of HealthClientAuthorizedConnection\nusing a specified <xref href=\"Microsoft.Health.Web.Authentication.WebApplicationCredential\" data-throw-if-not-resolved=\"false\"></xref>, application ID, and health service URL.\n"
  example: []
  syntax:
    content: public HealthClientAuthorizedConnection(WebApplicationCredential webApplicationCredential, Guid applicationId, Uri healthServiceUri)
    content.vb: Public Sub New(webApplicationCredential As WebApplicationCredential, applicationId As Guid, healthServiceUri As Uri)
    parameters:
    - id: webApplicationCredential
      type: Microsoft.Health.Web.Authentication.WebApplicationCredential
      description: "\nCredential for authenticating the application.\n"
    - id: applicationId
      type: System.Guid
      description: "\nThe ID of the client application.\n"
    - id: healthServiceUri
      type: System.Uri
      description: "\nThe URL of the HealthVault platform service.\n"
  overload: Microsoft.Health.HealthClientAuthorizedConnection.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">healthServiceUri</span> parameter is <strong>null</strong>.\n"
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "\nThe <span class=\"paramref\">healthServiceUri</span> parameter is not a properly \nformatted URL.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthClientAuthorizedConnection.#ctor(Microsoft.Health.Web.Authentication.WebApplicationCredential,System.Guid,Microsoft.Health.HealthServiceInstance,System.Guid)
  commentId: M:Microsoft.Health.HealthClientAuthorizedConnection.#ctor(Microsoft.Health.Web.Authentication.WebApplicationCredential,System.Guid,Microsoft.Health.HealthServiceInstance,System.Guid)
  id: '#ctor(Microsoft.Health.Web.Authentication.WebApplicationCredential,System.Guid,Microsoft.Health.HealthServiceInstance,System.Guid)'
  parent: Microsoft.Health.HealthClientAuthorizedConnection
  langs:
  - csharp
  - vb
  name: HealthClientAuthorizedConnection(WebApplicationCredential, Guid, HealthServiceInstance, Guid)
  nameWithType: HealthClientAuthorizedConnection.HealthClientAuthorizedConnection(WebApplicationCredential, Guid, HealthServiceInstance, Guid)
  fullName: Microsoft.Health.HealthClientAuthorizedConnection.HealthClientAuthorizedConnection(Microsoft.Health.Web.Authentication.WebApplicationCredential, System.Guid, Microsoft.Health.HealthServiceInstance, System.Guid)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/HealthClientAuthorizedConnection.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health/HealthClientAuthorizedConnection.cs
    startLine: 181
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nCreates a new instance of HealthClientAuthorizedConnection\nwith a WebApplicationCredential, an application ID, \nHealthVault web-service instance, and person ID.\n"
  remarks: "\nIf <span class=\"paramref\">serviceInstance</span> is <strong>null</strong>, the URL for the configured\ndefault HealthVault web-service instance is used.\n"
  example: []
  syntax:
    content: public HealthClientAuthorizedConnection(WebApplicationCredential webApplicationCredential, Guid applicationId, HealthServiceInstance serviceInstance, Guid personId)
    content.vb: Public Sub New(webApplicationCredential As WebApplicationCredential, applicationId As Guid, serviceInstance As HealthServiceInstance, personId As Guid)
    parameters:
    - id: webApplicationCredential
      type: Microsoft.Health.Web.Authentication.WebApplicationCredential
      description: "\nCredential for authenticating the application.\n"
    - id: applicationId
      type: System.Guid
      description: "\nThe ID of the client application.\n"
    - id: serviceInstance
      type: Microsoft.Health.HealthServiceInstance
      description: "\nThe HealthVault web-service instance.\n"
    - id: personId
      type: System.Guid
      description: "\nThe ID of the person for whom the authorized connection is created.\n"
  overload: Microsoft.Health.HealthClientAuthorizedConnection.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthClientAuthorizedConnection.#ctor(Microsoft.Health.Web.Authentication.WebApplicationCredential,System.Guid,System.Uri,System.Guid)
  commentId: M:Microsoft.Health.HealthClientAuthorizedConnection.#ctor(Microsoft.Health.Web.Authentication.WebApplicationCredential,System.Guid,System.Uri,System.Guid)
  id: '#ctor(Microsoft.Health.Web.Authentication.WebApplicationCredential,System.Guid,System.Uri,System.Guid)'
  parent: Microsoft.Health.HealthClientAuthorizedConnection
  langs:
  - csharp
  - vb
  name: HealthClientAuthorizedConnection(WebApplicationCredential, Guid, Uri, Guid)
  nameWithType: HealthClientAuthorizedConnection.HealthClientAuthorizedConnection(WebApplicationCredential, Guid, Uri, Guid)
  fullName: Microsoft.Health.HealthClientAuthorizedConnection.HealthClientAuthorizedConnection(Microsoft.Health.Web.Authentication.WebApplicationCredential, System.Guid, System.Uri, System.Guid)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/HealthClientAuthorizedConnection.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health/HealthClientAuthorizedConnection.cs
    startLine: 221
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nCreates a new instance of HealthClientAuthorizedConnection\nwith a WebApplicationCredential, an applicationID, \nhealthServiceUri and personId\n"
  example: []
  syntax:
    content: public HealthClientAuthorizedConnection(WebApplicationCredential webApplicationCredential, Guid applicationId, Uri healthServiceUri, Guid personId)
    content.vb: Public Sub New(webApplicationCredential As WebApplicationCredential, applicationId As Guid, healthServiceUri As Uri, personId As Guid)
    parameters:
    - id: webApplicationCredential
      type: Microsoft.Health.Web.Authentication.WebApplicationCredential
      description: "\nCredential for authenticating the application\n"
    - id: applicationId
      type: System.Guid
      description: "\nThe ID of the client application.\n"
    - id: healthServiceUri
      type: System.Uri
      description: "\nThe URL of the HealthVault platform service.\n"
    - id: personId
      type: System.Guid
      description: "\nThe ID of the person for whom the authorized connection is created.\n"
  overload: Microsoft.Health.HealthClientAuthorizedConnection.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">healthServiceUri</span> parameter is <strong>null</strong>.\n"
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "\nThe <span class=\"paramref\">healthServiceUri</span> parameter is not a properly \nformatted URL.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthClientAuthorizedConnection.GetMeaningfulUseVDTReport(Microsoft.Health.DateRange)
  commentId: M:Microsoft.Health.HealthClientAuthorizedConnection.GetMeaningfulUseVDTReport(Microsoft.Health.DateRange)
  id: GetMeaningfulUseVDTReport(Microsoft.Health.DateRange)
  parent: Microsoft.Health.HealthClientAuthorizedConnection
  langs:
  - csharp
  - vb
  name: GetMeaningfulUseVDTReport(DateRange)
  nameWithType: HealthClientAuthorizedConnection.GetMeaningfulUseVDTReport(DateRange)
  fullName: Microsoft.Health.HealthClientAuthorizedConnection.GetMeaningfulUseVDTReport(Microsoft.Health.DateRange)
  type: Method
  source:
    remote:
      path: Microsoft.Health/HealthClientAuthorizedConnection.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetMeaningfulUseVDTReport
    path: ../Microsoft.Health/HealthClientAuthorizedConnection.cs
    startLine: 255
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nRetrieves the Meaningful Use View, Download, and Transmit (VDT) Report for the application.\n"
  remarks: "\nNot supported for this connection.\n"
  example: []
  syntax:
    content: public override IEnumerable<PatientActivity> GetMeaningfulUseVDTReport(DateRange reportingPeriodFilter)
    content.vb: Public Overrides Function GetMeaningfulUseVDTReport(reportingPeriodFilter As DateRange) As IEnumerable(Of PatientActivity)
    parameters:
    - id: reportingPeriodFilter
      type: Microsoft.Health.DateRange
      description: "\nThe UTC reporting period to be used to retrieve the VDT Report.\n"
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.Health.MeaningfulUse.PatientActivity}
      description: "\nAn IEnumerable iterator of <xref href=\"Microsoft.Health.MeaningfulUse.PatientActivity\" data-throw-if-not-resolved=\"false\"></xref> objects which contains the list of patients to which the\ndata source sent a CCDA document where the event date (visit or discharge date) is within the specified reporting period,\nand additionally, the patient viewed, downloaded or transmitted to a 3rd party, health information in the record.\n"
  overridden: Microsoft.Health.ApplicationConnection.GetMeaningfulUseVDTReport(Microsoft.Health.DateRange)
  overload: Microsoft.Health.HealthClientAuthorizedConnection.GetMeaningfulUseVDTReport*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nNot supported.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.HealthClientAuthorizedConnection.GetMeaningfulUseTimelyAccessDocumentReport(Microsoft.Health.DateRange)
  commentId: M:Microsoft.Health.HealthClientAuthorizedConnection.GetMeaningfulUseTimelyAccessDocumentReport(Microsoft.Health.DateRange)
  id: GetMeaningfulUseTimelyAccessDocumentReport(Microsoft.Health.DateRange)
  parent: Microsoft.Health.HealthClientAuthorizedConnection
  langs:
  - csharp
  - vb
  name: GetMeaningfulUseTimelyAccessDocumentReport(DateRange)
  nameWithType: HealthClientAuthorizedConnection.GetMeaningfulUseTimelyAccessDocumentReport(DateRange)
  fullName: Microsoft.Health.HealthClientAuthorizedConnection.GetMeaningfulUseTimelyAccessDocumentReport(Microsoft.Health.DateRange)
  type: Method
  source:
    remote:
      path: Microsoft.Health/HealthClientAuthorizedConnection.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetMeaningfulUseTimelyAccessDocumentReport
    path: ../Microsoft.Health/HealthClientAuthorizedConnection.cs
    startLine: 282
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nRetrieves the Meaningful Use Timely Access Report for the application.\n"
  remarks: "\nNot supported for this connection.\n"
  example: []
  syntax:
    content: public override IEnumerable<DocumentReceipt> GetMeaningfulUseTimelyAccessDocumentReport(DateRange reportingPeriodFilter)
    content.vb: Public Overrides Function GetMeaningfulUseTimelyAccessDocumentReport(reportingPeriodFilter As DateRange) As IEnumerable(Of DocumentReceipt)
    parameters:
    - id: reportingPeriodFilter
      type: Microsoft.Health.DateRange
      description: "\nThe UTC reporting period to be used to retrieve the Timely Access Report.\n"
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.Health.MeaningfulUse.DocumentReceipt}
      description: "\nAn IEnumerable iterator of <xref href=\"Microsoft.Health.MeaningfulUse.DocumentReceipt\" data-throw-if-not-resolved=\"false\"></xref> objects which contains the\nlist of document receipts having an event date (visit or discharge date) within the specified reporting period.\n"
  overridden: Microsoft.Health.ApplicationConnection.GetMeaningfulUseTimelyAccessDocumentReport(Microsoft.Health.DateRange)
  overload: Microsoft.Health.HealthClientAuthorizedConnection.GetMeaningfulUseTimelyAccessDocumentReport*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nNot supported.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.HealthClientAuthorizedConnection.GetMeaningfulUseTimelyAccessDOPUDocumentReport(Microsoft.Health.DateRange)
  commentId: M:Microsoft.Health.HealthClientAuthorizedConnection.GetMeaningfulUseTimelyAccessDOPUDocumentReport(Microsoft.Health.DateRange)
  id: GetMeaningfulUseTimelyAccessDOPUDocumentReport(Microsoft.Health.DateRange)
  parent: Microsoft.Health.HealthClientAuthorizedConnection
  langs:
  - csharp
  - vb
  name: GetMeaningfulUseTimelyAccessDOPUDocumentReport(DateRange)
  nameWithType: HealthClientAuthorizedConnection.GetMeaningfulUseTimelyAccessDOPUDocumentReport(DateRange)
  fullName: Microsoft.Health.HealthClientAuthorizedConnection.GetMeaningfulUseTimelyAccessDOPUDocumentReport(Microsoft.Health.DateRange)
  type: Method
  source:
    remote:
      path: Microsoft.Health/HealthClientAuthorizedConnection.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetMeaningfulUseTimelyAccessDOPUDocumentReport
    path: ../Microsoft.Health/HealthClientAuthorizedConnection.cs
    startLine: 308
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nRetrieves the Meaningful Use Timely Access Report for applications that use DOPU to transfer CCDA documents to HealthVault.\n"
  remarks: "\nNot supported for this connection.\n"
  example: []
  syntax:
    content: public override IEnumerable<DOPUDocumentReceipt> GetMeaningfulUseTimelyAccessDOPUDocumentReport(DateRange availableDateFilter)
    content.vb: Public Overrides Function GetMeaningfulUseTimelyAccessDOPUDocumentReport(availableDateFilter As DateRange) As IEnumerable(Of DOPUDocumentReceipt)
    parameters:
    - id: availableDateFilter
      type: Microsoft.Health.DateRange
      description: "\nThe UTC date range used to filter the entries in the Timely Access Report by the date the CCDA document was made available to HealthVault.\n"
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.Health.MeaningfulUse.DOPUDocumentReceipt}
      description: "\nAn IEnumerable iterator of <xref href=\"Microsoft.Health.MeaningfulUse.DOPUDocumentReceipt\" data-throw-if-not-resolved=\"false\"></xref> objects which contains the list of CCDA document receipts sent to HealthVault using DOPU, filtered by the available date range. \n"
  overridden: Microsoft.Health.ApplicationConnection.GetMeaningfulUseTimelyAccessDOPUDocumentReport(Microsoft.Health.DateRange)
  overload: Microsoft.Health.HealthClientAuthorizedConnection.GetMeaningfulUseTimelyAccessDOPUDocumentReport*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nNot supported.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Health.HealthClientApplication
  commentId: T:Microsoft.Health.HealthClientApplication
  parent: Microsoft.Health
  isExternal: false
  name: HealthClientApplication
  nameWithType: HealthClientApplication
  fullName: Microsoft.Health.HealthClientApplication
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.HealthServiceConnection
  commentId: T:Microsoft.Health.HealthServiceConnection
  parent: Microsoft.Health
  isExternal: false
  name: HealthServiceConnection
  nameWithType: HealthServiceConnection
  fullName: Microsoft.Health.HealthServiceConnection
- uid: Microsoft.Health.ApplicationConnection
  commentId: T:Microsoft.Health.ApplicationConnection
  parent: Microsoft.Health
  isExternal: false
  name: ApplicationConnection
  nameWithType: ApplicationConnection
  fullName: Microsoft.Health.ApplicationConnection
- uid: Microsoft.Health.Web.OfflineWebApplicationConnection
  commentId: T:Microsoft.Health.Web.OfflineWebApplicationConnection
  parent: Microsoft.Health.Web
  isExternal: false
  name: OfflineWebApplicationConnection
  nameWithType: OfflineWebApplicationConnection
  fullName: Microsoft.Health.Web.OfflineWebApplicationConnection
- uid: Microsoft.Health.Web.OfflineWebApplicationConnection.Authenticate
  commentId: M:Microsoft.Health.Web.OfflineWebApplicationConnection.Authenticate
  parent: Microsoft.Health.Web.OfflineWebApplicationConnection
  isExternal: false
  name: Authenticate()
  nameWithType: OfflineWebApplicationConnection.Authenticate()
  fullName: Microsoft.Health.Web.OfflineWebApplicationConnection.Authenticate()
  spec.csharp:
  - uid: Microsoft.Health.Web.OfflineWebApplicationConnection.Authenticate
    name: Authenticate
    nameWithType: OfflineWebApplicationConnection.Authenticate
    fullName: Microsoft.Health.Web.OfflineWebApplicationConnection.Authenticate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Web.OfflineWebApplicationConnection.Authenticate
    name: Authenticate
    nameWithType: OfflineWebApplicationConnection.Authenticate
    fullName: Microsoft.Health.Web.OfflineWebApplicationConnection.Authenticate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Web.OfflineWebApplicationConnection.GetAllApplicationSettings
  commentId: M:Microsoft.Health.Web.OfflineWebApplicationConnection.GetAllApplicationSettings
  parent: Microsoft.Health.Web.OfflineWebApplicationConnection
  isExternal: false
  name: GetAllApplicationSettings()
  nameWithType: OfflineWebApplicationConnection.GetAllApplicationSettings()
  fullName: Microsoft.Health.Web.OfflineWebApplicationConnection.GetAllApplicationSettings()
  spec.csharp:
  - uid: Microsoft.Health.Web.OfflineWebApplicationConnection.GetAllApplicationSettings
    name: GetAllApplicationSettings
    nameWithType: OfflineWebApplicationConnection.GetAllApplicationSettings
    fullName: Microsoft.Health.Web.OfflineWebApplicationConnection.GetAllApplicationSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Web.OfflineWebApplicationConnection.GetAllApplicationSettings
    name: GetAllApplicationSettings
    nameWithType: OfflineWebApplicationConnection.GetAllApplicationSettings
    fullName: Microsoft.Health.Web.OfflineWebApplicationConnection.GetAllApplicationSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Web.OfflineWebApplicationConnection.GetApplicationSettings
  commentId: M:Microsoft.Health.Web.OfflineWebApplicationConnection.GetApplicationSettings
  parent: Microsoft.Health.Web.OfflineWebApplicationConnection
  isExternal: false
  name: GetApplicationSettings()
  nameWithType: OfflineWebApplicationConnection.GetApplicationSettings()
  fullName: Microsoft.Health.Web.OfflineWebApplicationConnection.GetApplicationSettings()
  spec.csharp:
  - uid: Microsoft.Health.Web.OfflineWebApplicationConnection.GetApplicationSettings
    name: GetApplicationSettings
    nameWithType: OfflineWebApplicationConnection.GetApplicationSettings
    fullName: Microsoft.Health.Web.OfflineWebApplicationConnection.GetApplicationSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Web.OfflineWebApplicationConnection.GetApplicationSettings
    name: GetApplicationSettings
    nameWithType: OfflineWebApplicationConnection.GetApplicationSettings
    fullName: Microsoft.Health.Web.OfflineWebApplicationConnection.GetApplicationSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Web.OfflineWebApplicationConnection.SetApplicationSettings(System.Xml.XPath.IXPathNavigable)
  commentId: M:Microsoft.Health.Web.OfflineWebApplicationConnection.SetApplicationSettings(System.Xml.XPath.IXPathNavigable)
  parent: Microsoft.Health.Web.OfflineWebApplicationConnection
  isExternal: true
  name: SetApplicationSettings(IXPathNavigable)
  nameWithType: OfflineWebApplicationConnection.SetApplicationSettings(IXPathNavigable)
  fullName: Microsoft.Health.Web.OfflineWebApplicationConnection.SetApplicationSettings(System.Xml.XPath.IXPathNavigable)
  spec.csharp:
  - uid: Microsoft.Health.Web.OfflineWebApplicationConnection.SetApplicationSettings(System.Xml.XPath.IXPathNavigable)
    name: SetApplicationSettings
    nameWithType: OfflineWebApplicationConnection.SetApplicationSettings
    fullName: Microsoft.Health.Web.OfflineWebApplicationConnection.SetApplicationSettings
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.IXPathNavigable
    name: IXPathNavigable
    nameWithType: IXPathNavigable
    fullName: System.Xml.XPath.IXPathNavigable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Web.OfflineWebApplicationConnection.SetApplicationSettings(System.Xml.XPath.IXPathNavigable)
    name: SetApplicationSettings
    nameWithType: OfflineWebApplicationConnection.SetApplicationSettings
    fullName: Microsoft.Health.Web.OfflineWebApplicationConnection.SetApplicationSettings
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.IXPathNavigable
    name: IXPathNavigable
    nameWithType: IXPathNavigable
    fullName: System.Xml.XPath.IXPathNavigable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Web.OfflineWebApplicationConnection.OfflinePersonId
  commentId: P:Microsoft.Health.Web.OfflineWebApplicationConnection.OfflinePersonId
  parent: Microsoft.Health.Web.OfflineWebApplicationConnection
  isExternal: false
  name: OfflinePersonId
  nameWithType: OfflineWebApplicationConnection.OfflinePersonId
  fullName: Microsoft.Health.Web.OfflineWebApplicationConnection.OfflinePersonId
- uid: Microsoft.Health.ApplicationConnection.CreateRequest(Microsoft.Health.HealthRecordAccessor,System.String,System.Int32)
  commentId: M:Microsoft.Health.ApplicationConnection.CreateRequest(Microsoft.Health.HealthRecordAccessor,System.String,System.Int32)
  parent: Microsoft.Health.ApplicationConnection
  isExternal: true
  name: CreateRequest(HealthRecordAccessor, String, Int32)
  nameWithType: ApplicationConnection.CreateRequest(HealthRecordAccessor, String, Int32)
  fullName: Microsoft.Health.ApplicationConnection.CreateRequest(Microsoft.Health.HealthRecordAccessor, System.String, System.Int32)
  spec.csharp:
  - uid: Microsoft.Health.ApplicationConnection.CreateRequest(Microsoft.Health.HealthRecordAccessor,System.String,System.Int32)
    name: CreateRequest
    nameWithType: ApplicationConnection.CreateRequest
    fullName: Microsoft.Health.ApplicationConnection.CreateRequest
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.HealthRecordAccessor
    name: HealthRecordAccessor
    nameWithType: HealthRecordAccessor
    fullName: Microsoft.Health.HealthRecordAccessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ApplicationConnection.CreateRequest(Microsoft.Health.HealthRecordAccessor,System.String,System.Int32)
    name: CreateRequest
    nameWithType: ApplicationConnection.CreateRequest
    fullName: Microsoft.Health.ApplicationConnection.CreateRequest
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.HealthRecordAccessor
    name: HealthRecordAccessor
    nameWithType: HealthRecordAccessor
    fullName: Microsoft.Health.HealthRecordAccessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ApplicationConnection.GetVocabulary(System.String)
  commentId: M:Microsoft.Health.ApplicationConnection.GetVocabulary(System.String)
  parent: Microsoft.Health.ApplicationConnection
  isExternal: true
  name: GetVocabulary(String)
  nameWithType: ApplicationConnection.GetVocabulary(String)
  fullName: Microsoft.Health.ApplicationConnection.GetVocabulary(System.String)
  spec.csharp:
  - uid: Microsoft.Health.ApplicationConnection.GetVocabulary(System.String)
    name: GetVocabulary
    nameWithType: ApplicationConnection.GetVocabulary
    fullName: Microsoft.Health.ApplicationConnection.GetVocabulary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ApplicationConnection.GetVocabulary(System.String)
    name: GetVocabulary
    nameWithType: ApplicationConnection.GetVocabulary
    fullName: Microsoft.Health.ApplicationConnection.GetVocabulary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ApplicationConnection.GetVocabulary(Microsoft.Health.VocabularyKey,System.Boolean)
  commentId: M:Microsoft.Health.ApplicationConnection.GetVocabulary(Microsoft.Health.VocabularyKey,System.Boolean)
  parent: Microsoft.Health.ApplicationConnection
  isExternal: true
  name: GetVocabulary(VocabularyKey, Boolean)
  nameWithType: ApplicationConnection.GetVocabulary(VocabularyKey, Boolean)
  fullName: Microsoft.Health.ApplicationConnection.GetVocabulary(Microsoft.Health.VocabularyKey, System.Boolean)
  spec.csharp:
  - uid: Microsoft.Health.ApplicationConnection.GetVocabulary(Microsoft.Health.VocabularyKey,System.Boolean)
    name: GetVocabulary
    nameWithType: ApplicationConnection.GetVocabulary
    fullName: Microsoft.Health.ApplicationConnection.GetVocabulary
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.VocabularyKey
    name: VocabularyKey
    nameWithType: VocabularyKey
    fullName: Microsoft.Health.VocabularyKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ApplicationConnection.GetVocabulary(Microsoft.Health.VocabularyKey,System.Boolean)
    name: GetVocabulary
    nameWithType: ApplicationConnection.GetVocabulary
    fullName: Microsoft.Health.ApplicationConnection.GetVocabulary
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.VocabularyKey
    name: VocabularyKey
    nameWithType: VocabularyKey
    fullName: Microsoft.Health.VocabularyKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ApplicationConnection.GetVocabulary(System.Collections.Generic.IList{Microsoft.Health.VocabularyKey},System.Boolean)
  commentId: M:Microsoft.Health.ApplicationConnection.GetVocabulary(System.Collections.Generic.IList{Microsoft.Health.VocabularyKey},System.Boolean)
  parent: Microsoft.Health.ApplicationConnection
  isExternal: true
  name: GetVocabulary(IList<VocabularyKey>, Boolean)
  nameWithType: ApplicationConnection.GetVocabulary(IList<VocabularyKey>, Boolean)
  fullName: Microsoft.Health.ApplicationConnection.GetVocabulary(System.Collections.Generic.IList<Microsoft.Health.VocabularyKey>, System.Boolean)
  nameWithType.vb: ApplicationConnection.GetVocabulary(IList(Of VocabularyKey), Boolean)
  fullName.vb: Microsoft.Health.ApplicationConnection.GetVocabulary(System.Collections.Generic.IList(Of Microsoft.Health.VocabularyKey), System.Boolean)
  name.vb: GetVocabulary(IList(Of VocabularyKey), Boolean)
  spec.csharp:
  - uid: Microsoft.Health.ApplicationConnection.GetVocabulary(System.Collections.Generic.IList{Microsoft.Health.VocabularyKey},System.Boolean)
    name: GetVocabulary
    nameWithType: ApplicationConnection.GetVocabulary
    fullName: Microsoft.Health.ApplicationConnection.GetVocabulary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.VocabularyKey
    name: VocabularyKey
    nameWithType: VocabularyKey
    fullName: Microsoft.Health.VocabularyKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ApplicationConnection.GetVocabulary(System.Collections.Generic.IList{Microsoft.Health.VocabularyKey},System.Boolean)
    name: GetVocabulary
    nameWithType: ApplicationConnection.GetVocabulary
    fullName: Microsoft.Health.ApplicationConnection.GetVocabulary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.VocabularyKey
    name: VocabularyKey
    nameWithType: VocabularyKey
    fullName: Microsoft.Health.VocabularyKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ApplicationConnection.GetVocabularyKeys
  commentId: M:Microsoft.Health.ApplicationConnection.GetVocabularyKeys
  parent: Microsoft.Health.ApplicationConnection
  isExternal: false
  name: GetVocabularyKeys()
  nameWithType: ApplicationConnection.GetVocabularyKeys()
  fullName: Microsoft.Health.ApplicationConnection.GetVocabularyKeys()
  spec.csharp:
  - uid: Microsoft.Health.ApplicationConnection.GetVocabularyKeys
    name: GetVocabularyKeys
    nameWithType: ApplicationConnection.GetVocabularyKeys
    fullName: Microsoft.Health.ApplicationConnection.GetVocabularyKeys
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ApplicationConnection.GetVocabularyKeys
    name: GetVocabularyKeys
    nameWithType: ApplicationConnection.GetVocabularyKeys
    fullName: Microsoft.Health.ApplicationConnection.GetVocabularyKeys
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ApplicationConnection.SearchVocabularyKeys(System.String,Microsoft.Health.VocabularySearchType,System.Nullable{System.Int32})
  commentId: M:Microsoft.Health.ApplicationConnection.SearchVocabularyKeys(System.String,Microsoft.Health.VocabularySearchType,System.Nullable{System.Int32})
  parent: Microsoft.Health.ApplicationConnection
  isExternal: true
  name: SearchVocabularyKeys(String, VocabularySearchType, Nullable<Int32>)
  nameWithType: ApplicationConnection.SearchVocabularyKeys(String, VocabularySearchType, Nullable<Int32>)
  fullName: Microsoft.Health.ApplicationConnection.SearchVocabularyKeys(System.String, Microsoft.Health.VocabularySearchType, System.Nullable<System.Int32>)
  nameWithType.vb: ApplicationConnection.SearchVocabularyKeys(String, VocabularySearchType, Nullable(Of Int32))
  fullName.vb: Microsoft.Health.ApplicationConnection.SearchVocabularyKeys(System.String, Microsoft.Health.VocabularySearchType, System.Nullable(Of System.Int32))
  name.vb: SearchVocabularyKeys(String, VocabularySearchType, Nullable(Of Int32))
  spec.csharp:
  - uid: Microsoft.Health.ApplicationConnection.SearchVocabularyKeys(System.String,Microsoft.Health.VocabularySearchType,System.Nullable{System.Int32})
    name: SearchVocabularyKeys
    nameWithType: ApplicationConnection.SearchVocabularyKeys
    fullName: Microsoft.Health.ApplicationConnection.SearchVocabularyKeys
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.VocabularySearchType
    name: VocabularySearchType
    nameWithType: VocabularySearchType
    fullName: Microsoft.Health.VocabularySearchType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ApplicationConnection.SearchVocabularyKeys(System.String,Microsoft.Health.VocabularySearchType,System.Nullable{System.Int32})
    name: SearchVocabularyKeys
    nameWithType: ApplicationConnection.SearchVocabularyKeys
    fullName: Microsoft.Health.ApplicationConnection.SearchVocabularyKeys
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.VocabularySearchType
    name: VocabularySearchType
    nameWithType: VocabularySearchType
    fullName: Microsoft.Health.VocabularySearchType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ApplicationConnection.SearchVocabulary(Microsoft.Health.VocabularyKey,System.String,Microsoft.Health.VocabularySearchType,System.Nullable{System.Int32})
  commentId: M:Microsoft.Health.ApplicationConnection.SearchVocabulary(Microsoft.Health.VocabularyKey,System.String,Microsoft.Health.VocabularySearchType,System.Nullable{System.Int32})
  parent: Microsoft.Health.ApplicationConnection
  isExternal: true
  name: SearchVocabulary(VocabularyKey, String, VocabularySearchType, Nullable<Int32>)
  nameWithType: ApplicationConnection.SearchVocabulary(VocabularyKey, String, VocabularySearchType, Nullable<Int32>)
  fullName: Microsoft.Health.ApplicationConnection.SearchVocabulary(Microsoft.Health.VocabularyKey, System.String, Microsoft.Health.VocabularySearchType, System.Nullable<System.Int32>)
  nameWithType.vb: ApplicationConnection.SearchVocabulary(VocabularyKey, String, VocabularySearchType, Nullable(Of Int32))
  fullName.vb: Microsoft.Health.ApplicationConnection.SearchVocabulary(Microsoft.Health.VocabularyKey, System.String, Microsoft.Health.VocabularySearchType, System.Nullable(Of System.Int32))
  name.vb: SearchVocabulary(VocabularyKey, String, VocabularySearchType, Nullable(Of Int32))
  spec.csharp:
  - uid: Microsoft.Health.ApplicationConnection.SearchVocabulary(Microsoft.Health.VocabularyKey,System.String,Microsoft.Health.VocabularySearchType,System.Nullable{System.Int32})
    name: SearchVocabulary
    nameWithType: ApplicationConnection.SearchVocabulary
    fullName: Microsoft.Health.ApplicationConnection.SearchVocabulary
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.VocabularyKey
    name: VocabularyKey
    nameWithType: VocabularyKey
    fullName: Microsoft.Health.VocabularyKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.VocabularySearchType
    name: VocabularySearchType
    nameWithType: VocabularySearchType
    fullName: Microsoft.Health.VocabularySearchType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ApplicationConnection.SearchVocabulary(Microsoft.Health.VocabularyKey,System.String,Microsoft.Health.VocabularySearchType,System.Nullable{System.Int32})
    name: SearchVocabulary
    nameWithType: ApplicationConnection.SearchVocabulary
    fullName: Microsoft.Health.ApplicationConnection.SearchVocabulary
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.VocabularyKey
    name: VocabularyKey
    nameWithType: VocabularyKey
    fullName: Microsoft.Health.VocabularyKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.VocabularySearchType
    name: VocabularySearchType
    nameWithType: VocabularySearchType
    fullName: Microsoft.Health.VocabularySearchType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ApplicationConnection.SendInsecureMessageFromApplication(System.Collections.Generic.IList{Microsoft.Health.MailRecipient},System.String,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Health.ApplicationConnection.SendInsecureMessageFromApplication(System.Collections.Generic.IList{Microsoft.Health.MailRecipient},System.String,System.String,System.String,System.String,System.String)
  parent: Microsoft.Health.ApplicationConnection
  isExternal: true
  name: SendInsecureMessageFromApplication(IList<MailRecipient>, String, String, String, String, String)
  nameWithType: ApplicationConnection.SendInsecureMessageFromApplication(IList<MailRecipient>, String, String, String, String, String)
  fullName: Microsoft.Health.ApplicationConnection.SendInsecureMessageFromApplication(System.Collections.Generic.IList<Microsoft.Health.MailRecipient>, System.String, System.String, System.String, System.String, System.String)
  nameWithType.vb: ApplicationConnection.SendInsecureMessageFromApplication(IList(Of MailRecipient), String, String, String, String, String)
  fullName.vb: Microsoft.Health.ApplicationConnection.SendInsecureMessageFromApplication(System.Collections.Generic.IList(Of Microsoft.Health.MailRecipient), System.String, System.String, System.String, System.String, System.String)
  name.vb: SendInsecureMessageFromApplication(IList(Of MailRecipient), String, String, String, String, String)
  spec.csharp:
  - uid: Microsoft.Health.ApplicationConnection.SendInsecureMessageFromApplication(System.Collections.Generic.IList{Microsoft.Health.MailRecipient},System.String,System.String,System.String,System.String,System.String)
    name: SendInsecureMessageFromApplication
    nameWithType: ApplicationConnection.SendInsecureMessageFromApplication
    fullName: Microsoft.Health.ApplicationConnection.SendInsecureMessageFromApplication
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.MailRecipient
    name: MailRecipient
    nameWithType: MailRecipient
    fullName: Microsoft.Health.MailRecipient
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ApplicationConnection.SendInsecureMessageFromApplication(System.Collections.Generic.IList{Microsoft.Health.MailRecipient},System.String,System.String,System.String,System.String,System.String)
    name: SendInsecureMessageFromApplication
    nameWithType: ApplicationConnection.SendInsecureMessageFromApplication
    fullName: Microsoft.Health.ApplicationConnection.SendInsecureMessageFromApplication
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.MailRecipient
    name: MailRecipient
    nameWithType: MailRecipient
    fullName: Microsoft.Health.MailRecipient
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ApplicationConnection.SendInsecureMessageFromApplication(System.Collections.Generic.IList{System.Guid},System.Boolean,System.String,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Health.ApplicationConnection.SendInsecureMessageFromApplication(System.Collections.Generic.IList{System.Guid},System.Boolean,System.String,System.String,System.String,System.String,System.String)
  parent: Microsoft.Health.ApplicationConnection
  isExternal: true
  name: SendInsecureMessageFromApplication(IList<Guid>, Boolean, String, String, String, String, String)
  nameWithType: ApplicationConnection.SendInsecureMessageFromApplication(IList<Guid>, Boolean, String, String, String, String, String)
  fullName: Microsoft.Health.ApplicationConnection.SendInsecureMessageFromApplication(System.Collections.Generic.IList<System.Guid>, System.Boolean, System.String, System.String, System.String, System.String, System.String)
  nameWithType.vb: ApplicationConnection.SendInsecureMessageFromApplication(IList(Of Guid), Boolean, String, String, String, String, String)
  fullName.vb: Microsoft.Health.ApplicationConnection.SendInsecureMessageFromApplication(System.Collections.Generic.IList(Of System.Guid), System.Boolean, System.String, System.String, System.String, System.String, System.String)
  name.vb: SendInsecureMessageFromApplication(IList(Of Guid), Boolean, String, String, String, String, String)
  spec.csharp:
  - uid: Microsoft.Health.ApplicationConnection.SendInsecureMessageFromApplication(System.Collections.Generic.IList{System.Guid},System.Boolean,System.String,System.String,System.String,System.String,System.String)
    name: SendInsecureMessageFromApplication
    nameWithType: ApplicationConnection.SendInsecureMessageFromApplication
    fullName: Microsoft.Health.ApplicationConnection.SendInsecureMessageFromApplication
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ApplicationConnection.SendInsecureMessageFromApplication(System.Collections.Generic.IList{System.Guid},System.Boolean,System.String,System.String,System.String,System.String,System.String)
    name: SendInsecureMessageFromApplication
    nameWithType: ApplicationConnection.SendInsecureMessageFromApplication
    fullName: Microsoft.Health.ApplicationConnection.SendInsecureMessageFromApplication
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ApplicationConnection.SendInsecureMessageToCustodiansFromApplication(System.Guid,System.Boolean,System.String,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Health.ApplicationConnection.SendInsecureMessageToCustodiansFromApplication(System.Guid,System.Boolean,System.String,System.String,System.String,System.String,System.String)
  parent: Microsoft.Health.ApplicationConnection
  isExternal: true
  name: SendInsecureMessageToCustodiansFromApplication(Guid, Boolean, String, String, String, String, String)
  nameWithType: ApplicationConnection.SendInsecureMessageToCustodiansFromApplication(Guid, Boolean, String, String, String, String, String)
  fullName: Microsoft.Health.ApplicationConnection.SendInsecureMessageToCustodiansFromApplication(System.Guid, System.Boolean, System.String, System.String, System.String, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.Health.ApplicationConnection.SendInsecureMessageToCustodiansFromApplication(System.Guid,System.Boolean,System.String,System.String,System.String,System.String,System.String)
    name: SendInsecureMessageToCustodiansFromApplication
    nameWithType: ApplicationConnection.SendInsecureMessageToCustodiansFromApplication
    fullName: Microsoft.Health.ApplicationConnection.SendInsecureMessageToCustodiansFromApplication
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ApplicationConnection.SendInsecureMessageToCustodiansFromApplication(System.Guid,System.Boolean,System.String,System.String,System.String,System.String,System.String)
    name: SendInsecureMessageToCustodiansFromApplication
    nameWithType: ApplicationConnection.SendInsecureMessageToCustodiansFromApplication
    fullName: Microsoft.Health.ApplicationConnection.SendInsecureMessageToCustodiansFromApplication
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ApplicationConnection.GetPersonInfo
  commentId: M:Microsoft.Health.ApplicationConnection.GetPersonInfo
  parent: Microsoft.Health.ApplicationConnection
  isExternal: false
  name: GetPersonInfo()
  nameWithType: ApplicationConnection.GetPersonInfo()
  fullName: Microsoft.Health.ApplicationConnection.GetPersonInfo()
  spec.csharp:
  - uid: Microsoft.Health.ApplicationConnection.GetPersonInfo
    name: GetPersonInfo
    nameWithType: ApplicationConnection.GetPersonInfo
    fullName: Microsoft.Health.ApplicationConnection.GetPersonInfo
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ApplicationConnection.GetPersonInfo
    name: GetPersonInfo
    nameWithType: ApplicationConnection.GetPersonInfo
    fullName: Microsoft.Health.ApplicationConnection.GetPersonInfo
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ApplicationConnection.GetAuthorizedPeople
  commentId: M:Microsoft.Health.ApplicationConnection.GetAuthorizedPeople
  parent: Microsoft.Health.ApplicationConnection
  isExternal: false
  name: GetAuthorizedPeople()
  nameWithType: ApplicationConnection.GetAuthorizedPeople()
  fullName: Microsoft.Health.ApplicationConnection.GetAuthorizedPeople()
  spec.csharp:
  - uid: Microsoft.Health.ApplicationConnection.GetAuthorizedPeople
    name: GetAuthorizedPeople
    nameWithType: ApplicationConnection.GetAuthorizedPeople
    fullName: Microsoft.Health.ApplicationConnection.GetAuthorizedPeople
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ApplicationConnection.GetAuthorizedPeople
    name: GetAuthorizedPeople
    nameWithType: ApplicationConnection.GetAuthorizedPeople
    fullName: Microsoft.Health.ApplicationConnection.GetAuthorizedPeople
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ApplicationConnection.GetAuthorizedPeople(Microsoft.Health.GetAuthorizedPeopleSettings)
  commentId: M:Microsoft.Health.ApplicationConnection.GetAuthorizedPeople(Microsoft.Health.GetAuthorizedPeopleSettings)
  parent: Microsoft.Health.ApplicationConnection
  isExternal: false
  name: GetAuthorizedPeople(GetAuthorizedPeopleSettings)
  nameWithType: ApplicationConnection.GetAuthorizedPeople(GetAuthorizedPeopleSettings)
  fullName: Microsoft.Health.ApplicationConnection.GetAuthorizedPeople(Microsoft.Health.GetAuthorizedPeopleSettings)
  spec.csharp:
  - uid: Microsoft.Health.ApplicationConnection.GetAuthorizedPeople(Microsoft.Health.GetAuthorizedPeopleSettings)
    name: GetAuthorizedPeople
    nameWithType: ApplicationConnection.GetAuthorizedPeople
    fullName: Microsoft.Health.ApplicationConnection.GetAuthorizedPeople
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.GetAuthorizedPeopleSettings
    name: GetAuthorizedPeopleSettings
    nameWithType: GetAuthorizedPeopleSettings
    fullName: Microsoft.Health.GetAuthorizedPeopleSettings
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ApplicationConnection.GetAuthorizedPeople(Microsoft.Health.GetAuthorizedPeopleSettings)
    name: GetAuthorizedPeople
    nameWithType: ApplicationConnection.GetAuthorizedPeople
    fullName: Microsoft.Health.ApplicationConnection.GetAuthorizedPeople
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.GetAuthorizedPeopleSettings
    name: GetAuthorizedPeopleSettings
    nameWithType: GetAuthorizedPeopleSettings
    fullName: Microsoft.Health.GetAuthorizedPeopleSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ApplicationConnection.GetAuthorizedRecords(System.Collections.Generic.IList{System.Guid})
  commentId: M:Microsoft.Health.ApplicationConnection.GetAuthorizedRecords(System.Collections.Generic.IList{System.Guid})
  parent: Microsoft.Health.ApplicationConnection
  isExternal: true
  name: GetAuthorizedRecords(IList<Guid>)
  nameWithType: ApplicationConnection.GetAuthorizedRecords(IList<Guid>)
  fullName: Microsoft.Health.ApplicationConnection.GetAuthorizedRecords(System.Collections.Generic.IList<System.Guid>)
  nameWithType.vb: ApplicationConnection.GetAuthorizedRecords(IList(Of Guid))
  fullName.vb: Microsoft.Health.ApplicationConnection.GetAuthorizedRecords(System.Collections.Generic.IList(Of System.Guid))
  name.vb: GetAuthorizedRecords(IList(Of Guid))
  spec.csharp:
  - uid: Microsoft.Health.ApplicationConnection.GetAuthorizedRecords(System.Collections.Generic.IList{System.Guid})
    name: GetAuthorizedRecords
    nameWithType: ApplicationConnection.GetAuthorizedRecords
    fullName: Microsoft.Health.ApplicationConnection.GetAuthorizedRecords
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ApplicationConnection.GetAuthorizedRecords(System.Collections.Generic.IList{System.Guid})
    name: GetAuthorizedRecords
    nameWithType: ApplicationConnection.GetAuthorizedRecords
    fullName: Microsoft.Health.ApplicationConnection.GetAuthorizedRecords
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ApplicationConnection.GetApplicationInfo
  commentId: M:Microsoft.Health.ApplicationConnection.GetApplicationInfo
  parent: Microsoft.Health.ApplicationConnection
  isExternal: false
  name: GetApplicationInfo()
  nameWithType: ApplicationConnection.GetApplicationInfo()
  fullName: Microsoft.Health.ApplicationConnection.GetApplicationInfo()
  spec.csharp:
  - uid: Microsoft.Health.ApplicationConnection.GetApplicationInfo
    name: GetApplicationInfo
    nameWithType: ApplicationConnection.GetApplicationInfo
    fullName: Microsoft.Health.ApplicationConnection.GetApplicationInfo
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ApplicationConnection.GetApplicationInfo
    name: GetApplicationInfo
    nameWithType: ApplicationConnection.GetApplicationInfo
    fullName: Microsoft.Health.ApplicationConnection.GetApplicationInfo
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ApplicationConnection.GetApplicationInfo(System.Boolean)
  commentId: M:Microsoft.Health.ApplicationConnection.GetApplicationInfo(System.Boolean)
  parent: Microsoft.Health.ApplicationConnection
  isExternal: true
  name: GetApplicationInfo(Boolean)
  nameWithType: ApplicationConnection.GetApplicationInfo(Boolean)
  fullName: Microsoft.Health.ApplicationConnection.GetApplicationInfo(System.Boolean)
  spec.csharp:
  - uid: Microsoft.Health.ApplicationConnection.GetApplicationInfo(System.Boolean)
    name: GetApplicationInfo
    nameWithType: ApplicationConnection.GetApplicationInfo
    fullName: Microsoft.Health.ApplicationConnection.GetApplicationInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ApplicationConnection.GetApplicationInfo(System.Boolean)
    name: GetApplicationInfo
    nameWithType: ApplicationConnection.GetApplicationInfo
    fullName: Microsoft.Health.ApplicationConnection.GetApplicationInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ApplicationConnection.GetUpdatedRecordsForApplication(System.Nullable{System.DateTime})
  commentId: M:Microsoft.Health.ApplicationConnection.GetUpdatedRecordsForApplication(System.Nullable{System.DateTime})
  parent: Microsoft.Health.ApplicationConnection
  isExternal: true
  name: GetUpdatedRecordsForApplication(Nullable<DateTime>)
  nameWithType: ApplicationConnection.GetUpdatedRecordsForApplication(Nullable<DateTime>)
  fullName: Microsoft.Health.ApplicationConnection.GetUpdatedRecordsForApplication(System.Nullable<System.DateTime>)
  nameWithType.vb: ApplicationConnection.GetUpdatedRecordsForApplication(Nullable(Of DateTime))
  fullName.vb: Microsoft.Health.ApplicationConnection.GetUpdatedRecordsForApplication(System.Nullable(Of System.DateTime))
  name.vb: GetUpdatedRecordsForApplication(Nullable(Of DateTime))
  spec.csharp:
  - uid: Microsoft.Health.ApplicationConnection.GetUpdatedRecordsForApplication(System.Nullable{System.DateTime})
    name: GetUpdatedRecordsForApplication
    nameWithType: ApplicationConnection.GetUpdatedRecordsForApplication
    fullName: Microsoft.Health.ApplicationConnection.GetUpdatedRecordsForApplication
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ApplicationConnection.GetUpdatedRecordsForApplication(System.Nullable{System.DateTime})
    name: GetUpdatedRecordsForApplication
    nameWithType: ApplicationConnection.GetUpdatedRecordsForApplication
    fullName: Microsoft.Health.ApplicationConnection.GetUpdatedRecordsForApplication
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ApplicationConnection.GetUpdatedRecordInfoForApplication(System.Nullable{System.DateTime})
  commentId: M:Microsoft.Health.ApplicationConnection.GetUpdatedRecordInfoForApplication(System.Nullable{System.DateTime})
  parent: Microsoft.Health.ApplicationConnection
  isExternal: true
  name: GetUpdatedRecordInfoForApplication(Nullable<DateTime>)
  nameWithType: ApplicationConnection.GetUpdatedRecordInfoForApplication(Nullable<DateTime>)
  fullName: Microsoft.Health.ApplicationConnection.GetUpdatedRecordInfoForApplication(System.Nullable<System.DateTime>)
  nameWithType.vb: ApplicationConnection.GetUpdatedRecordInfoForApplication(Nullable(Of DateTime))
  fullName.vb: Microsoft.Health.ApplicationConnection.GetUpdatedRecordInfoForApplication(System.Nullable(Of System.DateTime))
  name.vb: GetUpdatedRecordInfoForApplication(Nullable(Of DateTime))
  spec.csharp:
  - uid: Microsoft.Health.ApplicationConnection.GetUpdatedRecordInfoForApplication(System.Nullable{System.DateTime})
    name: GetUpdatedRecordInfoForApplication
    nameWithType: ApplicationConnection.GetUpdatedRecordInfoForApplication
    fullName: Microsoft.Health.ApplicationConnection.GetUpdatedRecordInfoForApplication
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ApplicationConnection.GetUpdatedRecordInfoForApplication(System.Nullable{System.DateTime})
    name: GetUpdatedRecordInfoForApplication
    nameWithType: ApplicationConnection.GetUpdatedRecordInfoForApplication
    fullName: Microsoft.Health.ApplicationConnection.GetUpdatedRecordInfoForApplication
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ApplicationConnection.NewSignupCode
  commentId: M:Microsoft.Health.ApplicationConnection.NewSignupCode
  parent: Microsoft.Health.ApplicationConnection
  isExternal: false
  name: NewSignupCode()
  nameWithType: ApplicationConnection.NewSignupCode()
  fullName: Microsoft.Health.ApplicationConnection.NewSignupCode()
  spec.csharp:
  - uid: Microsoft.Health.ApplicationConnection.NewSignupCode
    name: NewSignupCode
    nameWithType: ApplicationConnection.NewSignupCode
    fullName: Microsoft.Health.ApplicationConnection.NewSignupCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ApplicationConnection.NewSignupCode
    name: NewSignupCode
    nameWithType: ApplicationConnection.NewSignupCode
    fullName: Microsoft.Health.ApplicationConnection.NewSignupCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ApplicationConnection.SelectInstance(Microsoft.Health.Location)
  commentId: M:Microsoft.Health.ApplicationConnection.SelectInstance(Microsoft.Health.Location)
  parent: Microsoft.Health.ApplicationConnection
  isExternal: false
  name: SelectInstance(Location)
  nameWithType: ApplicationConnection.SelectInstance(Location)
  fullName: Microsoft.Health.ApplicationConnection.SelectInstance(Microsoft.Health.Location)
  spec.csharp:
  - uid: Microsoft.Health.ApplicationConnection.SelectInstance(Microsoft.Health.Location)
    name: SelectInstance
    nameWithType: ApplicationConnection.SelectInstance
    fullName: Microsoft.Health.ApplicationConnection.SelectInstance
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.Location
    name: Location
    nameWithType: Location
    fullName: Microsoft.Health.Location
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ApplicationConnection.SelectInstance(Microsoft.Health.Location)
    name: SelectInstance
    nameWithType: ApplicationConnection.SelectInstance
    fullName: Microsoft.Health.ApplicationConnection.SelectInstance
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.Location
    name: Location
    nameWithType: Location
    fullName: Microsoft.Health.Location
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthServiceConnection.CreateRequest(System.String,System.Int32)
  commentId: M:Microsoft.Health.HealthServiceConnection.CreateRequest(System.String,System.Int32)
  parent: Microsoft.Health.HealthServiceConnection
  isExternal: true
  name: CreateRequest(String, Int32)
  nameWithType: HealthServiceConnection.CreateRequest(String, Int32)
  fullName: Microsoft.Health.HealthServiceConnection.CreateRequest(System.String, System.Int32)
  spec.csharp:
  - uid: Microsoft.Health.HealthServiceConnection.CreateRequest(System.String,System.Int32)
    name: CreateRequest
    nameWithType: HealthServiceConnection.CreateRequest
    fullName: Microsoft.Health.HealthServiceConnection.CreateRequest
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthServiceConnection.CreateRequest(System.String,System.Int32)
    name: CreateRequest
    nameWithType: HealthServiceConnection.CreateRequest
    fullName: Microsoft.Health.HealthServiceConnection.CreateRequest
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthServiceConnection.CancelAllRequests
  commentId: P:Microsoft.Health.HealthServiceConnection.CancelAllRequests
  parent: Microsoft.Health.HealthServiceConnection
  isExternal: false
  name: CancelAllRequests
  nameWithType: HealthServiceConnection.CancelAllRequests
  fullName: Microsoft.Health.HealthServiceConnection.CancelAllRequests
- uid: Microsoft.Health.HealthServiceConnection.GetServiceDefinition
  commentId: M:Microsoft.Health.HealthServiceConnection.GetServiceDefinition
  parent: Microsoft.Health.HealthServiceConnection
  isExternal: false
  name: GetServiceDefinition()
  nameWithType: HealthServiceConnection.GetServiceDefinition()
  fullName: Microsoft.Health.HealthServiceConnection.GetServiceDefinition()
  spec.csharp:
  - uid: Microsoft.Health.HealthServiceConnection.GetServiceDefinition
    name: GetServiceDefinition
    nameWithType: HealthServiceConnection.GetServiceDefinition
    fullName: Microsoft.Health.HealthServiceConnection.GetServiceDefinition
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthServiceConnection.GetServiceDefinition
    name: GetServiceDefinition
    nameWithType: HealthServiceConnection.GetServiceDefinition
    fullName: Microsoft.Health.HealthServiceConnection.GetServiceDefinition
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthServiceConnection.GetServiceDefinition(System.DateTime)
  commentId: M:Microsoft.Health.HealthServiceConnection.GetServiceDefinition(System.DateTime)
  parent: Microsoft.Health.HealthServiceConnection
  isExternal: true
  name: GetServiceDefinition(DateTime)
  nameWithType: HealthServiceConnection.GetServiceDefinition(DateTime)
  fullName: Microsoft.Health.HealthServiceConnection.GetServiceDefinition(System.DateTime)
  spec.csharp:
  - uid: Microsoft.Health.HealthServiceConnection.GetServiceDefinition(System.DateTime)
    name: GetServiceDefinition
    nameWithType: HealthServiceConnection.GetServiceDefinition
    fullName: Microsoft.Health.HealthServiceConnection.GetServiceDefinition
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthServiceConnection.GetServiceDefinition(System.DateTime)
    name: GetServiceDefinition
    nameWithType: HealthServiceConnection.GetServiceDefinition
    fullName: Microsoft.Health.HealthServiceConnection.GetServiceDefinition
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthServiceConnection.GetServiceDefinition(Microsoft.Health.ServiceInfoSections)
  commentId: M:Microsoft.Health.HealthServiceConnection.GetServiceDefinition(Microsoft.Health.ServiceInfoSections)
  parent: Microsoft.Health.HealthServiceConnection
  isExternal: false
  name: GetServiceDefinition(ServiceInfoSections)
  nameWithType: HealthServiceConnection.GetServiceDefinition(ServiceInfoSections)
  fullName: Microsoft.Health.HealthServiceConnection.GetServiceDefinition(Microsoft.Health.ServiceInfoSections)
  spec.csharp:
  - uid: Microsoft.Health.HealthServiceConnection.GetServiceDefinition(Microsoft.Health.ServiceInfoSections)
    name: GetServiceDefinition
    nameWithType: HealthServiceConnection.GetServiceDefinition
    fullName: Microsoft.Health.HealthServiceConnection.GetServiceDefinition
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.ServiceInfoSections
    name: ServiceInfoSections
    nameWithType: ServiceInfoSections
    fullName: Microsoft.Health.ServiceInfoSections
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthServiceConnection.GetServiceDefinition(Microsoft.Health.ServiceInfoSections)
    name: GetServiceDefinition
    nameWithType: HealthServiceConnection.GetServiceDefinition
    fullName: Microsoft.Health.HealthServiceConnection.GetServiceDefinition
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.ServiceInfoSections
    name: ServiceInfoSections
    nameWithType: ServiceInfoSections
    fullName: Microsoft.Health.ServiceInfoSections
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthServiceConnection.GetServiceDefinition(Microsoft.Health.ServiceInfoSections,System.DateTime)
  commentId: M:Microsoft.Health.HealthServiceConnection.GetServiceDefinition(Microsoft.Health.ServiceInfoSections,System.DateTime)
  parent: Microsoft.Health.HealthServiceConnection
  isExternal: true
  name: GetServiceDefinition(ServiceInfoSections, DateTime)
  nameWithType: HealthServiceConnection.GetServiceDefinition(ServiceInfoSections, DateTime)
  fullName: Microsoft.Health.HealthServiceConnection.GetServiceDefinition(Microsoft.Health.ServiceInfoSections, System.DateTime)
  spec.csharp:
  - uid: Microsoft.Health.HealthServiceConnection.GetServiceDefinition(Microsoft.Health.ServiceInfoSections,System.DateTime)
    name: GetServiceDefinition
    nameWithType: HealthServiceConnection.GetServiceDefinition
    fullName: Microsoft.Health.HealthServiceConnection.GetServiceDefinition
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.ServiceInfoSections
    name: ServiceInfoSections
    nameWithType: ServiceInfoSections
    fullName: Microsoft.Health.ServiceInfoSections
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthServiceConnection.GetServiceDefinition(Microsoft.Health.ServiceInfoSections,System.DateTime)
    name: GetServiceDefinition
    nameWithType: HealthServiceConnection.GetServiceDefinition
    fullName: Microsoft.Health.HealthServiceConnection.GetServiceDefinition
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.ServiceInfoSections
    name: ServiceInfoSections
    nameWithType: ServiceInfoSections
    fullName: Microsoft.Health.ServiceInfoSections
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthServiceConnection.WebProxy
  commentId: P:Microsoft.Health.HealthServiceConnection.WebProxy
  parent: Microsoft.Health.HealthServiceConnection
  isExternal: false
  name: WebProxy
  nameWithType: HealthServiceConnection.WebProxy
  fullName: Microsoft.Health.HealthServiceConnection.WebProxy
- uid: Microsoft.Health.HealthServiceConnection.ApplicationId
  commentId: P:Microsoft.Health.HealthServiceConnection.ApplicationId
  parent: Microsoft.Health.HealthServiceConnection
  isExternal: false
  name: ApplicationId
  nameWithType: HealthServiceConnection.ApplicationId
  fullName: Microsoft.Health.HealthServiceConnection.ApplicationId
- uid: Microsoft.Health.HealthServiceConnection.RequestUrl
  commentId: P:Microsoft.Health.HealthServiceConnection.RequestUrl
  parent: Microsoft.Health.HealthServiceConnection
  isExternal: false
  name: RequestUrl
  nameWithType: HealthServiceConnection.RequestUrl
  fullName: Microsoft.Health.HealthServiceConnection.RequestUrl
- uid: Microsoft.Health.HealthServiceConnection.ServiceInstance
  commentId: P:Microsoft.Health.HealthServiceConnection.ServiceInstance
  parent: Microsoft.Health.HealthServiceConnection
  isExternal: false
  name: ServiceInstance
  nameWithType: HealthServiceConnection.ServiceInstance
  fullName: Microsoft.Health.HealthServiceConnection.ServiceInstance
- uid: Microsoft.Health.HealthServiceConnection.RequestTimeoutSeconds
  commentId: P:Microsoft.Health.HealthServiceConnection.RequestTimeoutSeconds
  parent: Microsoft.Health.HealthServiceConnection
  isExternal: false
  name: RequestTimeoutSeconds
  nameWithType: HealthServiceConnection.RequestTimeoutSeconds
  fullName: Microsoft.Health.HealthServiceConnection.RequestTimeoutSeconds
- uid: Microsoft.Health.HealthServiceConnection.RequestTimeToLive
  commentId: P:Microsoft.Health.HealthServiceConnection.RequestTimeToLive
  parent: Microsoft.Health.HealthServiceConnection
  isExternal: false
  name: RequestTimeToLive
  nameWithType: HealthServiceConnection.RequestTimeToLive
  fullName: Microsoft.Health.HealthServiceConnection.RequestTimeToLive
- uid: Microsoft.Health.HealthServiceConnection.Culture
  commentId: P:Microsoft.Health.HealthServiceConnection.Culture
  parent: Microsoft.Health.HealthServiceConnection
  isExternal: false
  name: Culture
  nameWithType: HealthServiceConnection.Culture
  fullName: Microsoft.Health.HealthServiceConnection.Culture
- uid: Microsoft.Health.HealthServiceConnection.RequestCompressionMethod
  commentId: P:Microsoft.Health.HealthServiceConnection.RequestCompressionMethod
  parent: Microsoft.Health.HealthServiceConnection
  isExternal: false
  name: RequestCompressionMethod
  nameWithType: HealthServiceConnection.RequestCompressionMethod
  fullName: Microsoft.Health.HealthServiceConnection.RequestCompressionMethod
- uid: Microsoft.Health.HealthServiceConnection.ResponseCompressionMethods
  commentId: P:Microsoft.Health.HealthServiceConnection.ResponseCompressionMethods
  parent: Microsoft.Health.HealthServiceConnection
  isExternal: false
  name: ResponseCompressionMethods
  nameWithType: HealthServiceConnection.ResponseCompressionMethods
  fullName: Microsoft.Health.HealthServiceConnection.ResponseCompressionMethods
- uid: Microsoft.Health.HealthServiceConnection.AuthenticationToken
  commentId: P:Microsoft.Health.HealthServiceConnection.AuthenticationToken
  parent: Microsoft.Health.HealthServiceConnection
  isExternal: false
  name: AuthenticationToken
  nameWithType: HealthServiceConnection.AuthenticationToken
  fullName: Microsoft.Health.HealthServiceConnection.AuthenticationToken
- uid: Microsoft.Health.HealthServiceConnection.Credential
  commentId: P:Microsoft.Health.HealthServiceConnection.Credential
  parent: Microsoft.Health.HealthServiceConnection
  isExternal: false
  name: Credential
  nameWithType: HealthServiceConnection.Credential
  fullName: Microsoft.Health.HealthServiceConnection.Credential
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthClientAuthorizedConnection.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<HealthClientAuthorizedConnection>()
  nameWithType: TypeHelper.ValueOrDbNull<HealthClientAuthorizedConnection>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.HealthClientAuthorizedConnection>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of HealthClientAuthorizedConnection)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.HealthClientAuthorizedConnection)()
  name.vb: ValueOrDbNull(Of HealthClientAuthorizedConnection)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<HealthClientAuthorizedConnection>
    nameWithType: TypeHelper.ValueOrDbNull<HealthClientAuthorizedConnection>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.HealthClientAuthorizedConnection>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of HealthClientAuthorizedConnection)
    nameWithType: TypeHelper.ValueOrDbNull(Of HealthClientAuthorizedConnection)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.HealthClientAuthorizedConnection)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Web
  commentId: N:Microsoft.Health.Web
  isExternal: false
  name: Microsoft.Health.Web
  nameWithType: Microsoft.Health.Web
  fullName: Microsoft.Health.Web
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.HealthClientAuthorizedConnection.#ctor*
  commentId: Overload:Microsoft.Health.HealthClientAuthorizedConnection.#ctor
  isExternal: false
  name: HealthClientAuthorizedConnection
  nameWithType: HealthClientAuthorizedConnection.HealthClientAuthorizedConnection
  fullName: Microsoft.Health.HealthClientAuthorizedConnection.HealthClientAuthorizedConnection
- uid: Microsoft.Health.InvalidConfigurationException
  commentId: T:Microsoft.Health.InvalidConfigurationException
  isExternal: false
  name: InvalidConfigurationException
  nameWithType: InvalidConfigurationException
  fullName: Microsoft.Health.InvalidConfigurationException
- uid: Microsoft.Health.Web.Authentication.WebApplicationCredential
  commentId: T:Microsoft.Health.Web.Authentication.WebApplicationCredential
  parent: Microsoft.Health.Web.Authentication
  isExternal: false
  name: WebApplicationCredential
  nameWithType: WebApplicationCredential
  fullName: Microsoft.Health.Web.Authentication.WebApplicationCredential
- uid: Microsoft.Health.Web.Authentication
  commentId: N:Microsoft.Health.Web.Authentication
  isExternal: false
  name: Microsoft.Health.Web.Authentication
  nameWithType: Microsoft.Health.Web.Authentication
  fullName: Microsoft.Health.Web.Authentication
- uid: Microsoft.Health.HealthServiceInstance
  commentId: T:Microsoft.Health.HealthServiceInstance
  parent: Microsoft.Health
  isExternal: false
  name: HealthServiceInstance
  nameWithType: HealthServiceInstance
  fullName: Microsoft.Health.HealthServiceInstance
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.UriFormatException
  commentId: T:System.UriFormatException
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Microsoft.Health.MeaningfulUse.PatientActivity
  commentId: T:Microsoft.Health.MeaningfulUse.PatientActivity
  isExternal: false
  name: PatientActivity
  nameWithType: PatientActivity
  fullName: Microsoft.Health.MeaningfulUse.PatientActivity
- uid: Microsoft.Health.ApplicationConnection.GetMeaningfulUseVDTReport(Microsoft.Health.DateRange)
  commentId: M:Microsoft.Health.ApplicationConnection.GetMeaningfulUseVDTReport(Microsoft.Health.DateRange)
  parent: Microsoft.Health.ApplicationConnection
  isExternal: false
  name: GetMeaningfulUseVDTReport(DateRange)
  nameWithType: ApplicationConnection.GetMeaningfulUseVDTReport(DateRange)
  fullName: Microsoft.Health.ApplicationConnection.GetMeaningfulUseVDTReport(Microsoft.Health.DateRange)
  spec.csharp:
  - uid: Microsoft.Health.ApplicationConnection.GetMeaningfulUseVDTReport(Microsoft.Health.DateRange)
    name: GetMeaningfulUseVDTReport
    nameWithType: ApplicationConnection.GetMeaningfulUseVDTReport
    fullName: Microsoft.Health.ApplicationConnection.GetMeaningfulUseVDTReport
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.DateRange
    name: DateRange
    nameWithType: DateRange
    fullName: Microsoft.Health.DateRange
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ApplicationConnection.GetMeaningfulUseVDTReport(Microsoft.Health.DateRange)
    name: GetMeaningfulUseVDTReport
    nameWithType: ApplicationConnection.GetMeaningfulUseVDTReport
    fullName: Microsoft.Health.ApplicationConnection.GetMeaningfulUseVDTReport
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.DateRange
    name: DateRange
    nameWithType: DateRange
    fullName: Microsoft.Health.DateRange
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthClientAuthorizedConnection.GetMeaningfulUseVDTReport*
  commentId: Overload:Microsoft.Health.HealthClientAuthorizedConnection.GetMeaningfulUseVDTReport
  isExternal: false
  name: GetMeaningfulUseVDTReport
  nameWithType: HealthClientAuthorizedConnection.GetMeaningfulUseVDTReport
  fullName: Microsoft.Health.HealthClientAuthorizedConnection.GetMeaningfulUseVDTReport
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
- uid: Microsoft.Health.DateRange
  commentId: T:Microsoft.Health.DateRange
  parent: Microsoft.Health
  isExternal: false
  name: DateRange
  nameWithType: DateRange
  fullName: Microsoft.Health.DateRange
- uid: System.Collections.Generic.IEnumerable{Microsoft.Health.MeaningfulUse.PatientActivity}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.Health.MeaningfulUse.PatientActivity}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<PatientActivity>
  nameWithType: IEnumerable<PatientActivity>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Health.MeaningfulUse.PatientActivity>
  nameWithType.vb: IEnumerable(Of PatientActivity)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Health.MeaningfulUse.PatientActivity)
  name.vb: IEnumerable(Of PatientActivity)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.MeaningfulUse.PatientActivity
    name: PatientActivity
    nameWithType: PatientActivity
    fullName: Microsoft.Health.MeaningfulUse.PatientActivity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.MeaningfulUse.PatientActivity
    name: PatientActivity
    nameWithType: PatientActivity
    fullName: Microsoft.Health.MeaningfulUse.PatientActivity
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Health.MeaningfulUse.DocumentReceipt
  commentId: T:Microsoft.Health.MeaningfulUse.DocumentReceipt
  isExternal: false
  name: DocumentReceipt
  nameWithType: DocumentReceipt
  fullName: Microsoft.Health.MeaningfulUse.DocumentReceipt
- uid: Microsoft.Health.ApplicationConnection.GetMeaningfulUseTimelyAccessDocumentReport(Microsoft.Health.DateRange)
  commentId: M:Microsoft.Health.ApplicationConnection.GetMeaningfulUseTimelyAccessDocumentReport(Microsoft.Health.DateRange)
  parent: Microsoft.Health.ApplicationConnection
  isExternal: false
  name: GetMeaningfulUseTimelyAccessDocumentReport(DateRange)
  nameWithType: ApplicationConnection.GetMeaningfulUseTimelyAccessDocumentReport(DateRange)
  fullName: Microsoft.Health.ApplicationConnection.GetMeaningfulUseTimelyAccessDocumentReport(Microsoft.Health.DateRange)
  spec.csharp:
  - uid: Microsoft.Health.ApplicationConnection.GetMeaningfulUseTimelyAccessDocumentReport(Microsoft.Health.DateRange)
    name: GetMeaningfulUseTimelyAccessDocumentReport
    nameWithType: ApplicationConnection.GetMeaningfulUseTimelyAccessDocumentReport
    fullName: Microsoft.Health.ApplicationConnection.GetMeaningfulUseTimelyAccessDocumentReport
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.DateRange
    name: DateRange
    nameWithType: DateRange
    fullName: Microsoft.Health.DateRange
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ApplicationConnection.GetMeaningfulUseTimelyAccessDocumentReport(Microsoft.Health.DateRange)
    name: GetMeaningfulUseTimelyAccessDocumentReport
    nameWithType: ApplicationConnection.GetMeaningfulUseTimelyAccessDocumentReport
    fullName: Microsoft.Health.ApplicationConnection.GetMeaningfulUseTimelyAccessDocumentReport
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.DateRange
    name: DateRange
    nameWithType: DateRange
    fullName: Microsoft.Health.DateRange
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthClientAuthorizedConnection.GetMeaningfulUseTimelyAccessDocumentReport*
  commentId: Overload:Microsoft.Health.HealthClientAuthorizedConnection.GetMeaningfulUseTimelyAccessDocumentReport
  isExternal: false
  name: GetMeaningfulUseTimelyAccessDocumentReport
  nameWithType: HealthClientAuthorizedConnection.GetMeaningfulUseTimelyAccessDocumentReport
  fullName: Microsoft.Health.HealthClientAuthorizedConnection.GetMeaningfulUseTimelyAccessDocumentReport
- uid: System.Collections.Generic.IEnumerable{Microsoft.Health.MeaningfulUse.DocumentReceipt}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.Health.MeaningfulUse.DocumentReceipt}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<DocumentReceipt>
  nameWithType: IEnumerable<DocumentReceipt>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Health.MeaningfulUse.DocumentReceipt>
  nameWithType.vb: IEnumerable(Of DocumentReceipt)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Health.MeaningfulUse.DocumentReceipt)
  name.vb: IEnumerable(Of DocumentReceipt)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.MeaningfulUse.DocumentReceipt
    name: DocumentReceipt
    nameWithType: DocumentReceipt
    fullName: Microsoft.Health.MeaningfulUse.DocumentReceipt
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.MeaningfulUse.DocumentReceipt
    name: DocumentReceipt
    nameWithType: DocumentReceipt
    fullName: Microsoft.Health.MeaningfulUse.DocumentReceipt
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.MeaningfulUse.DOPUDocumentReceipt
  commentId: T:Microsoft.Health.MeaningfulUse.DOPUDocumentReceipt
  isExternal: false
  name: DOPUDocumentReceipt
  nameWithType: DOPUDocumentReceipt
  fullName: Microsoft.Health.MeaningfulUse.DOPUDocumentReceipt
- uid: Microsoft.Health.ApplicationConnection.GetMeaningfulUseTimelyAccessDOPUDocumentReport(Microsoft.Health.DateRange)
  commentId: M:Microsoft.Health.ApplicationConnection.GetMeaningfulUseTimelyAccessDOPUDocumentReport(Microsoft.Health.DateRange)
  parent: Microsoft.Health.ApplicationConnection
  isExternal: false
  name: GetMeaningfulUseTimelyAccessDOPUDocumentReport(DateRange)
  nameWithType: ApplicationConnection.GetMeaningfulUseTimelyAccessDOPUDocumentReport(DateRange)
  fullName: Microsoft.Health.ApplicationConnection.GetMeaningfulUseTimelyAccessDOPUDocumentReport(Microsoft.Health.DateRange)
  spec.csharp:
  - uid: Microsoft.Health.ApplicationConnection.GetMeaningfulUseTimelyAccessDOPUDocumentReport(Microsoft.Health.DateRange)
    name: GetMeaningfulUseTimelyAccessDOPUDocumentReport
    nameWithType: ApplicationConnection.GetMeaningfulUseTimelyAccessDOPUDocumentReport
    fullName: Microsoft.Health.ApplicationConnection.GetMeaningfulUseTimelyAccessDOPUDocumentReport
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.DateRange
    name: DateRange
    nameWithType: DateRange
    fullName: Microsoft.Health.DateRange
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ApplicationConnection.GetMeaningfulUseTimelyAccessDOPUDocumentReport(Microsoft.Health.DateRange)
    name: GetMeaningfulUseTimelyAccessDOPUDocumentReport
    nameWithType: ApplicationConnection.GetMeaningfulUseTimelyAccessDOPUDocumentReport
    fullName: Microsoft.Health.ApplicationConnection.GetMeaningfulUseTimelyAccessDOPUDocumentReport
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.DateRange
    name: DateRange
    nameWithType: DateRange
    fullName: Microsoft.Health.DateRange
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthClientAuthorizedConnection.GetMeaningfulUseTimelyAccessDOPUDocumentReport*
  commentId: Overload:Microsoft.Health.HealthClientAuthorizedConnection.GetMeaningfulUseTimelyAccessDOPUDocumentReport
  isExternal: false
  name: GetMeaningfulUseTimelyAccessDOPUDocumentReport
  nameWithType: HealthClientAuthorizedConnection.GetMeaningfulUseTimelyAccessDOPUDocumentReport
  fullName: Microsoft.Health.HealthClientAuthorizedConnection.GetMeaningfulUseTimelyAccessDOPUDocumentReport
- uid: System.Collections.Generic.IEnumerable{Microsoft.Health.MeaningfulUse.DOPUDocumentReceipt}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.Health.MeaningfulUse.DOPUDocumentReceipt}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<DOPUDocumentReceipt>
  nameWithType: IEnumerable<DOPUDocumentReceipt>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Health.MeaningfulUse.DOPUDocumentReceipt>
  nameWithType.vb: IEnumerable(Of DOPUDocumentReceipt)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Health.MeaningfulUse.DOPUDocumentReceipt)
  name.vb: IEnumerable(Of DOPUDocumentReceipt)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.MeaningfulUse.DOPUDocumentReceipt
    name: DOPUDocumentReceipt
    nameWithType: DOPUDocumentReceipt
    fullName: Microsoft.Health.MeaningfulUse.DOPUDocumentReceipt
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.MeaningfulUse.DOPUDocumentReceipt
    name: DOPUDocumentReceipt
    nameWithType: DOPUDocumentReceipt
    fullName: Microsoft.Health.MeaningfulUse.DOPUDocumentReceipt
  - name: )
    nameWithType: )
    fullName: )
