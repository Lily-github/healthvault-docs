### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Utility.Diagnostics.TraceLog
  commentId: T:Microsoft.Health.Utility.Diagnostics.TraceLog
  id: TraceLog
  parent: Microsoft.Health.Utility.Diagnostics
  children:
  - Microsoft.Health.Utility.Diagnostics.TraceLog.#ctor(System.String,System.String)
  - Microsoft.Health.Utility.Diagnostics.TraceLog.#ctor(System.String,System.String,Microsoft.Health.Utility.Diagnostics.TraceTarget,System.String)
  - Microsoft.Health.Utility.Diagnostics.TraceLog.#ctor(System.String,System.String,Microsoft.Health.Utility.Diagnostics.TraceTarget,System.String,System.String,System.String)
  - Microsoft.Health.Utility.Diagnostics.TraceLog.#ctor(System.String,System.String,System.String,System.String)
  - Microsoft.Health.Utility.Diagnostics.TraceLog.AppendException(System.UInt16,System.String,System.Exception,System.String)
  - Microsoft.Health.Utility.Diagnostics.TraceLog.DebugTrace(System.String,System.String,System.Object[])
  - Microsoft.Health.Utility.Diagnostics.TraceLog.EnabledCategories
  - Microsoft.Health.Utility.Diagnostics.TraceLog.IsDebugTraceEnabled(System.UInt32)
  - Microsoft.Health.Utility.Diagnostics.TraceLog.IsErrorLevelEnabled(Microsoft.Health.Utility.Diagnostics.ErrorLevel)
  - Microsoft.Health.Utility.Diagnostics.TraceLog.LogAudit(System.UInt16,System.UInt16,System.String,System.String,System.Exception,System.Boolean)
  - Microsoft.Health.Utility.Diagnostics.TraceLog.ReadLogSettings
  - Microsoft.Health.Utility.Diagnostics.TraceLog.TraceEventLog(System.UInt16,System.String,System.Exception)
  - Microsoft.Health.Utility.Diagnostics.TraceLog.TraceEventLog(System.UInt16,System.String,System.Exception,System.Boolean)
  - Microsoft.Health.Utility.Diagnostics.TraceLog.TraceEventLog(System.UInt16,System.UInt16,System.String,System.Exception)
  - Microsoft.Health.Utility.Diagnostics.TraceLog.TraceEventLog(System.UInt16,System.UInt16,System.String,System.Exception,System.Boolean)
  - Microsoft.Health.Utility.Diagnostics.TraceLog.TraceEventLog(System.UInt16,System.UInt16,System.String,System.Exception,System.Boolean,System.Guid,System.Guid,System.Guid,System.Guid)
  - Microsoft.Health.Utility.Diagnostics.TraceLog.TraceEventLog(System.UInt16,System.UInt16,System.String,System.Exception,System.Boolean,System.Guid,System.Guid,System.Guid,System.Guid,System.Guid)
  - Microsoft.Health.Utility.Diagnostics.TraceLog.TraceEventLog(System.UInt16,System.UInt16,System.String,System.Exception,System.String)
  - Microsoft.Health.Utility.Diagnostics.TraceLog.TraceEventLog(System.UInt16,System.UInt16,System.String,System.Exception,System.String,System.Boolean)
  - Microsoft.Health.Utility.Diagnostics.TraceLog.TraceEventLog(System.UInt16,System.UInt16,System.String,System.Exception,System.String,System.Boolean,System.Guid,System.Guid,System.Guid,System.Guid,System.Guid)
  langs:
  - csharp
  - vb
  name: TraceLog
  nameWithType: TraceLog
  fullName: Microsoft.Health.Utility.Diagnostics.TraceLog
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/TraceLog.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: TraceLog
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/TraceLog.cs
    startLine: 18
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nTraceLog class provides options to write trace log to Console, file,\ncache, or EventLog.\n"
  example: []
  syntax:
    content: 'public class TraceLog : Log<TraceLogEntry>, IDisposable'
    content.vb: >-
      Public Class TraceLog
          Inherits Log(Of TraceLogEntry)
          Implements IDisposable
  inheritance:
  - System.Object
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}
  implements:
  - System.IDisposable
  inheritedMembers:
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.MaxLogIntervalMilliseconds
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.LogBatchSize
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.MaxEventLogEntryPeriodSeconds
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.LogContextName
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.DatabaseConnectionString
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.LogTableName
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.ConfigurationParametersQuery
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.TraceTarget
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.LogFileName
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.TruncateLogFile
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.CreateLoggerFailed
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.EventLogName
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.EventSourceName
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.EventLog
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.BaseLogger
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.LogParameters
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.Init
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.ReadComponentSettings
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.NormalizeEventsOnSaveToDB(System.Collections.Generic.IList{Microsoft.Health.Utility.Diagnostics.TraceLogEntry})
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.UpdateLogSettings
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.GetParameterValue(System.String,System.String)
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.GetSeverity(System.UInt16)
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.GetFunctionalArea(System.UInt16)
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.DetermineEventLogEntryType(System.UInt16)
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.SafeWriteEventLog(System.UInt16,System.UInt16,System.String,System.Exception)
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.Dispose
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.Dispose(System.Boolean)
  - Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.DisposeLogger
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.Utility.Diagnostics.TraceLog.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.Utility.Diagnostics.TraceLog.#ctor(System.String,System.String)
  commentId: M:Microsoft.Health.Utility.Diagnostics.TraceLog.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Microsoft.Health.Utility.Diagnostics.TraceLog
  langs:
  - csharp
  - vb
  name: TraceLog(String, String)
  nameWithType: TraceLog.TraceLog(String, String)
  fullName: Microsoft.Health.Utility.Diagnostics.TraceLog.TraceLog(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/TraceLog.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/TraceLog.cs
    startLine: 38
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nConstructs an TraceLog object for a Wildcat trace.\n"
  example: []
  syntax:
    content: public TraceLog(string loggerName, string eventLogName)
    content.vb: Public Sub New(loggerName As String, eventLogName As String)
    parameters:
    - id: loggerName
      type: System.String
      description: 'The name of the logging entity '
    - id: eventLogName
      type: System.String
      description: >
        The name of the Windows Event Log
  overload: Microsoft.Health.Utility.Diagnostics.TraceLog.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Diagnostics.TraceLog.#ctor(System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Health.Utility.Diagnostics.TraceLog.#ctor(System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String)'
  parent: Microsoft.Health.Utility.Diagnostics.TraceLog
  langs:
  - csharp
  - vb
  name: TraceLog(String, String, String, String)
  nameWithType: TraceLog.TraceLog(String, String, String, String)
  fullName: Microsoft.Health.Utility.Diagnostics.TraceLog.TraceLog(System.String, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/TraceLog.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/TraceLog.cs
    startLine: 56
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nConstructs an TraceLog object for a Wildcat trace.\n"
  example: []
  syntax:
    content: public TraceLog(string loggerName, string eventLogName, string targetStr, string connectionString)
    content.vb: Public Sub New(loggerName As String, eventLogName As String, targetStr As String, connectionString As String)
    parameters:
    - id: loggerName
      type: System.String
      description: 'The name of the logging entity '
    - id: eventLogName
      type: System.String
      description: "The name of the Windows Event Log to \nuse for logging critical errors\n"
    - id: targetStr
      type: System.String
      description: String representing TraceTarget
    - id: connectionString
      type: System.String
      description: >
        Connection string for DB TraceTarget
  overload: Microsoft.Health.Utility.Diagnostics.TraceLog.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Diagnostics.TraceLog.#ctor(System.String,System.String,Microsoft.Health.Utility.Diagnostics.TraceTarget,System.String)
  commentId: M:Microsoft.Health.Utility.Diagnostics.TraceLog.#ctor(System.String,System.String,Microsoft.Health.Utility.Diagnostics.TraceTarget,System.String)
  id: '#ctor(System.String,System.String,Microsoft.Health.Utility.Diagnostics.TraceTarget,System.String)'
  parent: Microsoft.Health.Utility.Diagnostics.TraceLog
  langs:
  - csharp
  - vb
  name: TraceLog(String, String, TraceTarget, String)
  nameWithType: TraceLog.TraceLog(String, String, TraceTarget, String)
  fullName: Microsoft.Health.Utility.Diagnostics.TraceLog.TraceLog(System.String, System.String, Microsoft.Health.Utility.Diagnostics.TraceTarget, System.String)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/TraceLog.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/TraceLog.cs
    startLine: 74
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nConstructs an TraceLog object for a Wildcat trace.\n"
  example: []
  syntax:
    content: public TraceLog(string loggerName, string eventLogName, TraceTarget target, string connectionString)
    content.vb: Public Sub New(loggerName As String, eventLogName As String, target As TraceTarget, connectionString As String)
    parameters:
    - id: loggerName
      type: System.String
      description: 'The name of the logging entity '
    - id: eventLogName
      type: System.String
      description: "The name of the Windows Event Log to \nuse for logging critical errors\n"
    - id: target
      type: Microsoft.Health.Utility.Diagnostics.TraceTarget
      description: Enum representing TraceTarget
    - id: connectionString
      type: System.String
      description: >
        Connection string for DB TraceTarget
  overload: Microsoft.Health.Utility.Diagnostics.TraceLog.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Diagnostics.TraceLog.#ctor(System.String,System.String,Microsoft.Health.Utility.Diagnostics.TraceTarget,System.String,System.String,System.String)
  commentId: M:Microsoft.Health.Utility.Diagnostics.TraceLog.#ctor(System.String,System.String,Microsoft.Health.Utility.Diagnostics.TraceTarget,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,Microsoft.Health.Utility.Diagnostics.TraceTarget,System.String,System.String,System.String)'
  parent: Microsoft.Health.Utility.Diagnostics.TraceLog
  langs:
  - csharp
  - vb
  name: TraceLog(String, String, TraceTarget, String, String, String)
  nameWithType: TraceLog.TraceLog(String, String, TraceTarget, String, String, String)
  fullName: Microsoft.Health.Utility.Diagnostics.TraceLog.TraceLog(System.String, System.String, Microsoft.Health.Utility.Diagnostics.TraceTarget, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/TraceLog.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/TraceLog.cs
    startLine: 91
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nClass constructor.\n"
  example: []
  syntax:
    content: public TraceLog(string loggerName, string eventLogName, TraceTarget target, string connectionString, string tableName, string settingsQuery)
    content.vb: Public Sub New(loggerName As String, eventLogName As String, target As TraceTarget, connectionString As String, tableName As String, settingsQuery As String)
    parameters:
    - id: loggerName
      type: System.String
    - id: eventLogName
      type: System.String
    - id: target
      type: Microsoft.Health.Utility.Diagnostics.TraceTarget
    - id: connectionString
      type: System.String
    - id: tableName
      type: System.String
    - id: settingsQuery
      type: System.String
  overload: Microsoft.Health.Utility.Diagnostics.TraceLog.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Diagnostics.TraceLog.TraceEventLog(System.UInt16,System.String,System.Exception)
  commentId: M:Microsoft.Health.Utility.Diagnostics.TraceLog.TraceEventLog(System.UInt16,System.String,System.Exception)
  id: TraceEventLog(System.UInt16,System.String,System.Exception)
  parent: Microsoft.Health.Utility.Diagnostics.TraceLog
  langs:
  - csharp
  - vb
  name: TraceEventLog(UInt16, String, Exception)
  nameWithType: TraceLog.TraceEventLog(UInt16, String, Exception)
  fullName: Microsoft.Health.Utility.Diagnostics.TraceLog.TraceEventLog(System.UInt16, System.String, System.Exception)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/TraceLog.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: TraceEventLog
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/TraceLog.cs
    startLine: 143
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nTraceEventLog basically an overloaded method to reduce the \nnumber of params.\nThis mathod adds filename and line number params to the \noverloaded method.\n"
  example: []
  syntax:
    content: public void TraceEventLog(ushort category, string eventMsg, Exception e)
    content.vb: Public Sub TraceEventLog(category As UShort, eventMsg As String, e As Exception)
    parameters:
    - id: category
      type: System.UInt16
      description: Category of the trace message.
    - id: eventMsg
      type: System.String
      description: The message String.
    - id: e
      type: System.Exception
      description: Optional exception object
  overload: Microsoft.Health.Utility.Diagnostics.TraceLog.TraceEventLog*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Diagnostics.TraceLog.TraceEventLog(System.UInt16,System.String,System.Exception,System.Boolean)
  commentId: M:Microsoft.Health.Utility.Diagnostics.TraceLog.TraceEventLog(System.UInt16,System.String,System.Exception,System.Boolean)
  id: TraceEventLog(System.UInt16,System.String,System.Exception,System.Boolean)
  parent: Microsoft.Health.Utility.Diagnostics.TraceLog
  langs:
  - csharp
  - vb
  name: TraceEventLog(UInt16, String, Exception, Boolean)
  nameWithType: TraceLog.TraceEventLog(UInt16, String, Exception, Boolean)
  fullName: Microsoft.Health.Utility.Diagnostics.TraceLog.TraceEventLog(System.UInt16, System.String, System.Exception, System.Boolean)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/TraceLog.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: TraceEventLog
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/TraceLog.cs
    startLine: 164
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nTraceEventLog basically an overloaded method to reduce the \nnumber of params.\nThis mathod adds filename and line number params to the \noverloaded method.\n"
  example: []
  syntax:
    content: public void TraceEventLog(ushort category, string eventMsg, Exception exception, bool forceIntoEventLog)
    content.vb: Public Sub TraceEventLog(category As UShort, eventMsg As String, exception As Exception, forceIntoEventLog As Boolean)
    parameters:
    - id: category
      type: System.UInt16
      description: Category of the trace message.
    - id: eventMsg
      type: System.String
      description: The message String.
    - id: exception
      type: System.Exception
      description: Optional exception object
    - id: forceIntoEventLog
      type: System.Boolean
      description: "\nIf true, the event will go into the event log even if not fatal.\n"
  overload: Microsoft.Health.Utility.Diagnostics.TraceLog.TraceEventLog*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Diagnostics.TraceLog.TraceEventLog(System.UInt16,System.UInt16,System.String,System.Exception)
  commentId: M:Microsoft.Health.Utility.Diagnostics.TraceLog.TraceEventLog(System.UInt16,System.UInt16,System.String,System.Exception)
  id: TraceEventLog(System.UInt16,System.UInt16,System.String,System.Exception)
  parent: Microsoft.Health.Utility.Diagnostics.TraceLog
  langs:
  - csharp
  - vb
  name: TraceEventLog(UInt16, UInt16, String, Exception)
  nameWithType: TraceLog.TraceEventLog(UInt16, UInt16, String, Exception)
  fullName: Microsoft.Health.Utility.Diagnostics.TraceLog.TraceEventLog(System.UInt16, System.UInt16, System.String, System.Exception)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/TraceLog.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: TraceEventLog
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/TraceLog.cs
    startLine: 185
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nTraceEventLog basically an overloaded method to reduce the \nnumber of params.\nThis mathod adds filename and line number params to the \noverloaded method.\n"
  example: []
  syntax:
    content: public void TraceEventLog(ushort eventId, ushort category, string eventMsg, Exception e)
    content.vb: Public Sub TraceEventLog(eventId As UShort, category As UShort, eventMsg As String, e As Exception)
    parameters:
    - id: eventId
      type: System.UInt16
      description: Specific event to log
    - id: category
      type: System.UInt16
      description: Category of the trace message.
    - id: eventMsg
      type: System.String
      description: The message String.
    - id: e
      type: System.Exception
      description: Optional exception object
  overload: Microsoft.Health.Utility.Diagnostics.TraceLog.TraceEventLog*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Diagnostics.TraceLog.TraceEventLog(System.UInt16,System.UInt16,System.String,System.Exception,System.String)
  commentId: M:Microsoft.Health.Utility.Diagnostics.TraceLog.TraceEventLog(System.UInt16,System.UInt16,System.String,System.Exception,System.String)
  id: TraceEventLog(System.UInt16,System.UInt16,System.String,System.Exception,System.String)
  parent: Microsoft.Health.Utility.Diagnostics.TraceLog
  langs:
  - csharp
  - vb
  name: TraceEventLog(UInt16, UInt16, String, Exception, String)
  nameWithType: TraceLog.TraceEventLog(UInt16, UInt16, String, Exception, String)
  fullName: Microsoft.Health.Utility.Diagnostics.TraceLog.TraceEventLog(System.UInt16, System.UInt16, System.String, System.Exception, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/TraceLog.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: TraceEventLog
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/TraceLog.cs
    startLine: 206
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nTraceEventLog basically an overloaded method to reduce the \nnumber of params.\nThis mathod adds filename and line number params to the \noverloaded method.\n"
  example: []
  syntax:
    content: public void TraceEventLog(ushort eventId, ushort category, string eventMsg, Exception exception, string callStackTrace)
    content.vb: Public Sub TraceEventLog(eventId As UShort, category As UShort, eventMsg As String, exception As Exception, callStackTrace As String)
    parameters:
    - id: eventId
      type: System.UInt16
      description: Specific event to log
    - id: category
      type: System.UInt16
      description: Category of the trace message.
    - id: eventMsg
      type: System.String
      description: The message String.
    - id: exception
      type: System.Exception
      description: Optional exception object
    - id: callStackTrace
      type: System.String
      description: The stack trace of the call
  overload: Microsoft.Health.Utility.Diagnostics.TraceLog.TraceEventLog*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Diagnostics.TraceLog.TraceEventLog(System.UInt16,System.UInt16,System.String,System.Exception,System.Boolean)
  commentId: M:Microsoft.Health.Utility.Diagnostics.TraceLog.TraceEventLog(System.UInt16,System.UInt16,System.String,System.Exception,System.Boolean)
  id: TraceEventLog(System.UInt16,System.UInt16,System.String,System.Exception,System.Boolean)
  parent: Microsoft.Health.Utility.Diagnostics.TraceLog
  langs:
  - csharp
  - vb
  name: TraceEventLog(UInt16, UInt16, String, Exception, Boolean)
  nameWithType: TraceLog.TraceEventLog(UInt16, UInt16, String, Exception, Boolean)
  fullName: Microsoft.Health.Utility.Diagnostics.TraceLog.TraceEventLog(System.UInt16, System.UInt16, System.String, System.Exception, System.Boolean)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/TraceLog.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: TraceEventLog
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/TraceLog.cs
    startLine: 232
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nTraceEventLog basically an overloaded method to reduce the \nnumber of params.\nThis mathod adds filename and line number params to the \noverloaded method.\n"
  example: []
  syntax:
    content: public void TraceEventLog(ushort eventId, ushort category, string eventMsg, Exception exception, bool forceEventLog)
    content.vb: Public Sub TraceEventLog(eventId As UShort, category As UShort, eventMsg As String, exception As Exception, forceEventLog As Boolean)
    parameters:
    - id: eventId
      type: System.UInt16
      description: Specific event to log
    - id: category
      type: System.UInt16
      description: Category of the trace message.
    - id: eventMsg
      type: System.String
      description: The message String.
    - id: exception
      type: System.Exception
      description: Optional exception object
    - id: forceEventLog
      type: System.Boolean
      description: "\\\nForce logging the event to the event log regardless of the \nseverity. The event will be logged with matching severity.\n"
  overload: Microsoft.Health.Utility.Diagnostics.TraceLog.TraceEventLog*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Diagnostics.TraceLog.TraceEventLog(System.UInt16,System.UInt16,System.String,System.Exception,System.String,System.Boolean)
  commentId: M:Microsoft.Health.Utility.Diagnostics.TraceLog.TraceEventLog(System.UInt16,System.UInt16,System.String,System.Exception,System.String,System.Boolean)
  id: TraceEventLog(System.UInt16,System.UInt16,System.String,System.Exception,System.String,System.Boolean)
  parent: Microsoft.Health.Utility.Diagnostics.TraceLog
  langs:
  - csharp
  - vb
  name: TraceEventLog(UInt16, UInt16, String, Exception, String, Boolean)
  nameWithType: TraceLog.TraceEventLog(UInt16, UInt16, String, Exception, String, Boolean)
  fullName: Microsoft.Health.Utility.Diagnostics.TraceLog.TraceEventLog(System.UInt16, System.UInt16, System.String, System.Exception, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/TraceLog.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: TraceEventLog
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/TraceLog.cs
    startLine: 259
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nTraceEventLog basically an overloaded method to reduce the \nnumber of params.\nThis mathod adds filename and line number params to the \noverloaded method.\n"
  example: []
  syntax:
    content: public void TraceEventLog(ushort eventId, ushort category, string eventMsg, Exception exception, string callStackTrace, bool forceEventLog)
    content.vb: Public Sub TraceEventLog(eventId As UShort, category As UShort, eventMsg As String, exception As Exception, callStackTrace As String, forceEventLog As Boolean)
    parameters:
    - id: eventId
      type: System.UInt16
      description: Specific event to log
    - id: category
      type: System.UInt16
      description: Category of the trace message.
    - id: eventMsg
      type: System.String
      description: The message String.
    - id: exception
      type: System.Exception
      description: Optional exception object
    - id: callStackTrace
      type: System.String
      description: The stack trace of the call
    - id: forceEventLog
      type: System.Boolean
      description: "\\\nForce logging the event to the event log regardless of the \nseverity. The event will be logged with matching severity.\n"
  overload: Microsoft.Health.Utility.Diagnostics.TraceLog.TraceEventLog*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Diagnostics.TraceLog.TraceEventLog(System.UInt16,System.UInt16,System.String,System.Exception,System.Boolean,System.Guid,System.Guid,System.Guid,System.Guid,System.Guid)
  commentId: M:Microsoft.Health.Utility.Diagnostics.TraceLog.TraceEventLog(System.UInt16,System.UInt16,System.String,System.Exception,System.Boolean,System.Guid,System.Guid,System.Guid,System.Guid,System.Guid)
  id: TraceEventLog(System.UInt16,System.UInt16,System.String,System.Exception,System.Boolean,System.Guid,System.Guid,System.Guid,System.Guid,System.Guid)
  parent: Microsoft.Health.Utility.Diagnostics.TraceLog
  langs:
  - csharp
  - vb
  name: TraceEventLog(UInt16, UInt16, String, Exception, Boolean, Guid, Guid, Guid, Guid, Guid)
  nameWithType: TraceLog.TraceEventLog(UInt16, UInt16, String, Exception, Boolean, Guid, Guid, Guid, Guid, Guid)
  fullName: Microsoft.Health.Utility.Diagnostics.TraceLog.TraceEventLog(System.UInt16, System.UInt16, System.String, System.Exception, System.Boolean, System.Guid, System.Guid, System.Guid, System.Guid, System.Guid)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/TraceLog.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: TraceEventLog
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/TraceLog.cs
    startLine: 292
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nTraceEventLog basically an overloaded method to reduce the \nnumber of params.\nThis mathod adds filename and line number params to the \noverloaded method.\n"
  example: []
  syntax:
    content: public void TraceEventLog(ushort eventId, ushort category, string eventMsg, Exception exception, bool forceEventLog, Guid sessionId, Guid applicationId, Guid personId, Guid recordId, Guid requestId)
    content.vb: Public Sub TraceEventLog(eventId As UShort, category As UShort, eventMsg As String, exception As Exception, forceEventLog As Boolean, sessionId As Guid, applicationId As Guid, personId As Guid, recordId As Guid, requestId As Guid)
    parameters:
    - id: eventId
      type: System.UInt16
      description: Specific event to log
    - id: category
      type: System.UInt16
      description: Category of the trace message.
    - id: eventMsg
      type: System.String
      description: The message String.
    - id: exception
      type: System.Exception
      description: Optional exception object
    - id: forceEventLog
      type: System.Boolean
      description: "\\\nForce logging the event to the event log regardless of the \nseverity. The event will be logged with matching severity.\n"
    - id: sessionId
      type: System.Guid
      description: ''
    - id: applicationId
      type: System.Guid
      description: ''
    - id: personId
      type: System.Guid
      description: ''
    - id: recordId
      type: System.Guid
      description: ''
    - id: requestId
      type: System.Guid
      description: ''
  overload: Microsoft.Health.Utility.Diagnostics.TraceLog.TraceEventLog*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Diagnostics.TraceLog.TraceEventLog(System.UInt16,System.UInt16,System.String,System.Exception,System.String,System.Boolean,System.Guid,System.Guid,System.Guid,System.Guid,System.Guid)
  commentId: M:Microsoft.Health.Utility.Diagnostics.TraceLog.TraceEventLog(System.UInt16,System.UInt16,System.String,System.Exception,System.String,System.Boolean,System.Guid,System.Guid,System.Guid,System.Guid,System.Guid)
  id: TraceEventLog(System.UInt16,System.UInt16,System.String,System.Exception,System.String,System.Boolean,System.Guid,System.Guid,System.Guid,System.Guid,System.Guid)
  parent: Microsoft.Health.Utility.Diagnostics.TraceLog
  langs:
  - csharp
  - vb
  name: TraceEventLog(UInt16, UInt16, String, Exception, String, Boolean, Guid, Guid, Guid, Guid, Guid)
  nameWithType: TraceLog.TraceEventLog(UInt16, UInt16, String, Exception, String, Boolean, Guid, Guid, Guid, Guid, Guid)
  fullName: Microsoft.Health.Utility.Diagnostics.TraceLog.TraceEventLog(System.UInt16, System.UInt16, System.String, System.Exception, System.String, System.Boolean, System.Guid, System.Guid, System.Guid, System.Guid, System.Guid)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/TraceLog.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: TraceEventLog
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/TraceLog.cs
    startLine: 328
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nTraceEventLog basically an overloaded method to reduce the \nnumber of params.\nThis mathod adds filename and line number params to the \noverloaded method.\n"
  example: []
  syntax:
    content: public virtual void TraceEventLog(ushort eventId, ushort category, string eventMsg, Exception exception, string callStackTrace, bool forceEventLog, Guid sessionId, Guid applicationId, Guid personId, Guid recordId, Guid requestId)
    content.vb: Public Overridable Sub TraceEventLog(eventId As UShort, category As UShort, eventMsg As String, exception As Exception, callStackTrace As String, forceEventLog As Boolean, sessionId As Guid, applicationId As Guid, personId As Guid, recordId As Guid, requestId As Guid)
    parameters:
    - id: eventId
      type: System.UInt16
      description: Specific event to log
    - id: category
      type: System.UInt16
      description: Category of the trace message.
    - id: eventMsg
      type: System.String
      description: The message String.
    - id: exception
      type: System.Exception
      description: Optional exception object
    - id: callStackTrace
      type: System.String
      description: The stack trace of the call
    - id: forceEventLog
      type: System.Boolean
      description: "\\\n Force logging the event to the event log regardless of the \n severity. The event will be logged with matching severity.\n"
    - id: sessionId
      type: System.Guid
      description: ''
    - id: applicationId
      type: System.Guid
      description: ''
    - id: personId
      type: System.Guid
      description: ''
    - id: recordId
      type: System.Guid
      description: ''
    - id: requestId
      type: System.Guid
      description: ''
  overload: Microsoft.Health.Utility.Diagnostics.TraceLog.TraceEventLog*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.Health.Utility.Diagnostics.TraceLog.TraceEventLog(System.UInt16,System.UInt16,System.String,System.Exception,System.Boolean,System.Guid,System.Guid,System.Guid,System.Guid)
  commentId: M:Microsoft.Health.Utility.Diagnostics.TraceLog.TraceEventLog(System.UInt16,System.UInt16,System.String,System.Exception,System.Boolean,System.Guid,System.Guid,System.Guid,System.Guid)
  id: TraceEventLog(System.UInt16,System.UInt16,System.String,System.Exception,System.Boolean,System.Guid,System.Guid,System.Guid,System.Guid)
  parent: Microsoft.Health.Utility.Diagnostics.TraceLog
  langs:
  - csharp
  - vb
  name: TraceEventLog(UInt16, UInt16, String, Exception, Boolean, Guid, Guid, Guid, Guid)
  nameWithType: TraceLog.TraceEventLog(UInt16, UInt16, String, Exception, Boolean, Guid, Guid, Guid, Guid)
  fullName: Microsoft.Health.Utility.Diagnostics.TraceLog.TraceEventLog(System.UInt16, System.UInt16, System.String, System.Exception, System.Boolean, System.Guid, System.Guid, System.Guid, System.Guid)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/TraceLog.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: TraceEventLog
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/TraceLog.cs
    startLine: 414
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nTraceEventLog basically an overloaded method to reduce the \nnumber of params.\nThis mathod adds filename and line number params to the \noverloaded method.\n"
  example: []
  syntax:
    content: public void TraceEventLog(ushort eventId, ushort category, string eventMsg, Exception exception, bool forceEventLog, Guid applicationId, Guid personId, Guid recordId, Guid requestId)
    content.vb: Public Sub TraceEventLog(eventId As UShort, category As UShort, eventMsg As String, exception As Exception, forceEventLog As Boolean, applicationId As Guid, personId As Guid, recordId As Guid, requestId As Guid)
    parameters:
    - id: eventId
      type: System.UInt16
      description: Specific event to log
    - id: category
      type: System.UInt16
      description: Category of the trace message.
    - id: eventMsg
      type: System.String
      description: The message String.
    - id: exception
      type: System.Exception
      description: Optional exception object
    - id: forceEventLog
      type: System.Boolean
      description: "\\\nForce logging the event to the event log regardless of the \nseverity. The event will be logged with matching severity.\n"
    - id: applicationId
      type: System.Guid
      description: ''
    - id: personId
      type: System.Guid
      description: ''
    - id: recordId
      type: System.Guid
      description: ''
    - id: requestId
      type: System.Guid
      description: ''
  overload: Microsoft.Health.Utility.Diagnostics.TraceLog.TraceEventLog*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Diagnostics.TraceLog.LogAudit(System.UInt16,System.UInt16,System.String,System.String,System.Exception,System.Boolean)
  commentId: M:Microsoft.Health.Utility.Diagnostics.TraceLog.LogAudit(System.UInt16,System.UInt16,System.String,System.String,System.Exception,System.Boolean)
  id: LogAudit(System.UInt16,System.UInt16,System.String,System.String,System.Exception,System.Boolean)
  parent: Microsoft.Health.Utility.Diagnostics.TraceLog
  langs:
  - csharp
  - vb
  name: LogAudit(UInt16, UInt16, String, String, Exception, Boolean)
  nameWithType: TraceLog.LogAudit(UInt16, UInt16, String, String, Exception, Boolean)
  fullName: Microsoft.Health.Utility.Diagnostics.TraceLog.LogAudit(System.UInt16, System.UInt16, System.String, System.String, System.Exception, System.Boolean)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/TraceLog.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: LogAudit
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/TraceLog.cs
    startLine: 457
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nLogs an event to the audit log table. \n\n"
  example: []
  syntax:
    content: public void LogAudit(ushort eventId, ushort category, string executingEntity, string eventMsg, Exception exception, bool forceIntoEventLog)
    content.vb: Public Sub LogAudit(eventId As UShort, category As UShort, executingEntity As String, eventMsg As String, exception As Exception, forceIntoEventLog As Boolean)
    parameters:
    - id: eventId
      type: System.UInt16
      description: Specific event to log
    - id: category
      type: System.UInt16
      description: Category of the trace message.
    - id: executingEntity
      type: System.String
      description: "Token identifying the entity who \nperformed the action. For example the domain account \nusername used to perform the action.\n"
    - id: eventMsg
      type: System.String
      description: "An optional message with details about \nthe event."
    - id: exception
      type: System.Exception
      description: Optional exception object
    - id: forceIntoEventLog
      type: System.Boolean
      description: "\\\nForce logging the event to the event log regardless of the \nseverity. The event will be logged with matching severity.\n"
  overload: Microsoft.Health.Utility.Diagnostics.TraceLog.LogAudit*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Diagnostics.TraceLog.IsDebugTraceEnabled(System.UInt32)
  commentId: M:Microsoft.Health.Utility.Diagnostics.TraceLog.IsDebugTraceEnabled(System.UInt32)
  id: IsDebugTraceEnabled(System.UInt32)
  parent: Microsoft.Health.Utility.Diagnostics.TraceLog
  langs:
  - csharp
  - vb
  name: IsDebugTraceEnabled(UInt32)
  nameWithType: TraceLog.IsDebugTraceEnabled(UInt32)
  fullName: Microsoft.Health.Utility.Diagnostics.TraceLog.IsDebugTraceEnabled(System.UInt32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/TraceLog.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: IsDebugTraceEnabled
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/TraceLog.cs
    startLine: 547
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nDetermine whether or not debug tracing is enabled for the specified\ntracePointId.  All tracepoints are uniquely identifed by their id.  \nIt is the responsibility of all Logger subclasses to configure \nthemselves for enabling/disabling debug tracing.\n"
  example: []
  syntax:
    content: protected virtual bool IsDebugTraceEnabled(uint tracePointId)
    content.vb: Protected Overridable Function IsDebugTraceEnabled(tracePointId As UInteger) As Boolean
    parameters:
    - id: tracePointId
      type: System.UInt32
      description: the tracePointId to check
    return:
      type: System.Boolean
      description: true if enabled, otherwise false
  overload: Microsoft.Health.Utility.Diagnostics.TraceLog.IsDebugTraceEnabled*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.Health.Utility.Diagnostics.TraceLog.DebugTrace(System.String,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.Diagnostics.TraceLog.DebugTrace(System.String,System.String,System.Object[])
  id: DebugTrace(System.String,System.String,System.Object[])
  parent: Microsoft.Health.Utility.Diagnostics.TraceLog
  langs:
  - csharp
  - vb
  name: DebugTrace(String, String, Object[])
  nameWithType: TraceLog.DebugTrace(String, String, Object[])
  fullName: Microsoft.Health.Utility.Diagnostics.TraceLog.DebugTrace(System.String, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/TraceLog.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DebugTrace
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/TraceLog.cs
    startLine: 575
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nPlace the traced functionality into the log.\n"
  example: []
  syntax:
    content: protected void DebugTrace(string tracePointName, string format, params object[] args)
    content.vb: Protected Sub DebugTrace(tracePointName As String, format As String, ParamArray args As Object())
    parameters:
    - id: tracePointName
      type: System.String
      description: string identifying the trace point
    - id: format
      type: System.String
      description: the format string
    - id: args
      type: System.Object[]
      description: the args to the format string
  overload: Microsoft.Health.Utility.Diagnostics.TraceLog.DebugTrace*
  nameWithType.vb: TraceLog.DebugTrace(String, String, Object())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.Health.Utility.Diagnostics.TraceLog.DebugTrace(System.String, System.String, System.Object())
  name.vb: DebugTrace(String, String, Object())
- uid: Microsoft.Health.Utility.Diagnostics.TraceLog.AppendException(System.UInt16,System.String,System.Exception,System.String)
  commentId: M:Microsoft.Health.Utility.Diagnostics.TraceLog.AppendException(System.UInt16,System.String,System.Exception,System.String)
  id: AppendException(System.UInt16,System.String,System.Exception,System.String)
  parent: Microsoft.Health.Utility.Diagnostics.TraceLog
  langs:
  - csharp
  - vb
  name: AppendException(UInt16, String, Exception, String)
  nameWithType: TraceLog.AppendException(UInt16, String, Exception, String)
  fullName: Microsoft.Health.Utility.Diagnostics.TraceLog.AppendException(System.UInt16, System.String, System.Exception, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/TraceLog.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AppendException
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/TraceLog.cs
    startLine: 645
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nAppends the exception string to eventMsg.\n"
  example: []
  syntax:
    content: protected override string AppendException(ushort category, string eventMsg, Exception ex, string callStackTrace)
    content.vb: Protected Overrides Function AppendException(category As UShort, eventMsg As String, ex As Exception, callStackTrace As String) As String
    parameters:
    - id: category
      type: System.UInt16
    - id: eventMsg
      type: System.String
    - id: ex
      type: System.Exception
    - id: callStackTrace
      type: System.String
    return:
      type: System.String
  overridden: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.AppendException(System.UInt16,System.String,System.Exception,System.String)
  overload: Microsoft.Health.Utility.Diagnostics.TraceLog.AppendException*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Health.Utility.Diagnostics.TraceLog.EnabledCategories
  commentId: P:Microsoft.Health.Utility.Diagnostics.TraceLog.EnabledCategories
  id: EnabledCategories
  parent: Microsoft.Health.Utility.Diagnostics.TraceLog
  langs:
  - csharp
  - vb
  name: EnabledCategories
  nameWithType: TraceLog.EnabledCategories
  fullName: Microsoft.Health.Utility.Diagnostics.TraceLog.EnabledCategories
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/TraceLog.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: EnabledCategories
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/TraceLog.cs
    startLine: 706
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nEnabled categories for this trace logger.\nThe low byte specifies the enabled error levels\n(from ErrorLevel enum).\n"
  example: []
  syntax:
    content: public ushort EnabledCategories { get; }
    content.vb: Public ReadOnly Property EnabledCategories As UShort
    parameters: []
    return:
      type: System.UInt16
  overload: Microsoft.Health.Utility.Diagnostics.TraceLog.EnabledCategories*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.Diagnostics.TraceLog.IsErrorLevelEnabled(Microsoft.Health.Utility.Diagnostics.ErrorLevel)
  commentId: M:Microsoft.Health.Utility.Diagnostics.TraceLog.IsErrorLevelEnabled(Microsoft.Health.Utility.Diagnostics.ErrorLevel)
  id: IsErrorLevelEnabled(Microsoft.Health.Utility.Diagnostics.ErrorLevel)
  parent: Microsoft.Health.Utility.Diagnostics.TraceLog
  langs:
  - csharp
  - vb
  name: IsErrorLevelEnabled(ErrorLevel)
  nameWithType: TraceLog.IsErrorLevelEnabled(ErrorLevel)
  fullName: Microsoft.Health.Utility.Diagnostics.TraceLog.IsErrorLevelEnabled(Microsoft.Health.Utility.Diagnostics.ErrorLevel)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/TraceLog.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: IsErrorLevelEnabled
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/TraceLog.cs
    startLine: 716
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nReturns true\n"
  example: []
  syntax:
    content: public bool IsErrorLevelEnabled(ErrorLevel errorLevel)
    content.vb: Public Function IsErrorLevelEnabled(errorLevel As ErrorLevel) As Boolean
    parameters:
    - id: errorLevel
      type: Microsoft.Health.Utility.Diagnostics.ErrorLevel
      description: ''
    return:
      type: System.Boolean
      description: ''
  overload: Microsoft.Health.Utility.Diagnostics.TraceLog.IsErrorLevelEnabled*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Diagnostics.TraceLog.ReadLogSettings
  commentId: M:Microsoft.Health.Utility.Diagnostics.TraceLog.ReadLogSettings
  id: ReadLogSettings
  parent: Microsoft.Health.Utility.Diagnostics.TraceLog
  langs:
  - csharp
  - vb
  name: ReadLogSettings()
  nameWithType: TraceLog.ReadLogSettings()
  fullName: Microsoft.Health.Utility.Diagnostics.TraceLog.ReadLogSettings()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/TraceLog.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ReadLogSettings
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/TraceLog.cs
    startLine: 724
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nReads the TraceLog specific settings.\n"
  example: []
  syntax:
    content: protected override bool ReadLogSettings()
    content.vb: Protected Overrides Function ReadLogSettings As Boolean
    return:
      type: System.Boolean
  overridden: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.ReadLogSettings
  overload: Microsoft.Health.Utility.Diagnostics.TraceLog.ReadLogSettings*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Microsoft.Health.Utility.Diagnostics
  commentId: N:Microsoft.Health.Utility.Diagnostics
  isExternal: false
  name: Microsoft.Health.Utility.Diagnostics
  nameWithType: Microsoft.Health.Utility.Diagnostics
  fullName: Microsoft.Health.Utility.Diagnostics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}
  commentId: T:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}
  parent: Microsoft.Health.Utility.Diagnostics
  definition: Microsoft.Health.Utility.Diagnostics.Log`1
  name: Log<TraceLogEntry>
  nameWithType: Log<TraceLogEntry>
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.TraceLogEntry>
  nameWithType.vb: Log(Of TraceLogEntry)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.TraceLogEntry)
  name.vb: Log(Of TraceLogEntry)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1
    name: Log
    nameWithType: Log
    fullName: Microsoft.Health.Utility.Diagnostics.Log
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.Utility.Diagnostics.TraceLogEntry
    name: TraceLogEntry
    nameWithType: TraceLogEntry
    fullName: Microsoft.Health.Utility.Diagnostics.TraceLogEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1
    name: Log
    nameWithType: Log
    fullName: Microsoft.Health.Utility.Diagnostics.Log
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.Utility.Diagnostics.TraceLogEntry
    name: TraceLogEntry
    nameWithType: TraceLogEntry
    fullName: Microsoft.Health.Utility.Diagnostics.TraceLogEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.MaxLogIntervalMilliseconds
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.MaxLogIntervalMilliseconds
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.MaxLogIntervalMilliseconds
  name: MaxLogIntervalMilliseconds
  nameWithType: Log<TraceLogEntry>.MaxLogIntervalMilliseconds
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.TraceLogEntry>.MaxLogIntervalMilliseconds
  nameWithType.vb: Log(Of TraceLogEntry).MaxLogIntervalMilliseconds
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.TraceLogEntry).MaxLogIntervalMilliseconds
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.LogBatchSize
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.LogBatchSize
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.LogBatchSize
  name: LogBatchSize
  nameWithType: Log<TraceLogEntry>.LogBatchSize
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.TraceLogEntry>.LogBatchSize
  nameWithType.vb: Log(Of TraceLogEntry).LogBatchSize
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.TraceLogEntry).LogBatchSize
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.MaxEventLogEntryPeriodSeconds
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.MaxEventLogEntryPeriodSeconds
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.MaxEventLogEntryPeriodSeconds
  name: MaxEventLogEntryPeriodSeconds
  nameWithType: Log<TraceLogEntry>.MaxEventLogEntryPeriodSeconds
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.TraceLogEntry>.MaxEventLogEntryPeriodSeconds
  nameWithType.vb: Log(Of TraceLogEntry).MaxEventLogEntryPeriodSeconds
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.TraceLogEntry).MaxEventLogEntryPeriodSeconds
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.LogContextName
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.LogContextName
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.LogContextName
  name: LogContextName
  nameWithType: Log<TraceLogEntry>.LogContextName
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.TraceLogEntry>.LogContextName
  nameWithType.vb: Log(Of TraceLogEntry).LogContextName
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.TraceLogEntry).LogContextName
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.DatabaseConnectionString
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.DatabaseConnectionString
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.DatabaseConnectionString
  name: DatabaseConnectionString
  nameWithType: Log<TraceLogEntry>.DatabaseConnectionString
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.TraceLogEntry>.DatabaseConnectionString
  nameWithType.vb: Log(Of TraceLogEntry).DatabaseConnectionString
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.TraceLogEntry).DatabaseConnectionString
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.LogTableName
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.LogTableName
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.LogTableName
  name: LogTableName
  nameWithType: Log<TraceLogEntry>.LogTableName
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.TraceLogEntry>.LogTableName
  nameWithType.vb: Log(Of TraceLogEntry).LogTableName
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.TraceLogEntry).LogTableName
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.ConfigurationParametersQuery
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.ConfigurationParametersQuery
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.ConfigurationParametersQuery
  name: ConfigurationParametersQuery
  nameWithType: Log<TraceLogEntry>.ConfigurationParametersQuery
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.TraceLogEntry>.ConfigurationParametersQuery
  nameWithType.vb: Log(Of TraceLogEntry).ConfigurationParametersQuery
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.TraceLogEntry).ConfigurationParametersQuery
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.TraceTarget
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.TraceTarget
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.TraceTarget
  name: TraceTarget
  nameWithType: Log<TraceLogEntry>.TraceTarget
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.TraceLogEntry>.TraceTarget
  nameWithType.vb: Log(Of TraceLogEntry).TraceTarget
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.TraceLogEntry).TraceTarget
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.LogFileName
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.LogFileName
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.LogFileName
  name: LogFileName
  nameWithType: Log<TraceLogEntry>.LogFileName
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.TraceLogEntry>.LogFileName
  nameWithType.vb: Log(Of TraceLogEntry).LogFileName
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.TraceLogEntry).LogFileName
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.TruncateLogFile
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.TruncateLogFile
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.TruncateLogFile
  name: TruncateLogFile
  nameWithType: Log<TraceLogEntry>.TruncateLogFile
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.TraceLogEntry>.TruncateLogFile
  nameWithType.vb: Log(Of TraceLogEntry).TruncateLogFile
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.TraceLogEntry).TruncateLogFile
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.CreateLoggerFailed
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.CreateLoggerFailed
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.CreateLoggerFailed
  name: CreateLoggerFailed
  nameWithType: Log<TraceLogEntry>.CreateLoggerFailed
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.TraceLogEntry>.CreateLoggerFailed
  nameWithType.vb: Log(Of TraceLogEntry).CreateLoggerFailed
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.TraceLogEntry).CreateLoggerFailed
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.EventLogName
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.EventLogName
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.EventLogName
  name: EventLogName
  nameWithType: Log<TraceLogEntry>.EventLogName
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.TraceLogEntry>.EventLogName
  nameWithType.vb: Log(Of TraceLogEntry).EventLogName
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.TraceLogEntry).EventLogName
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.EventSourceName
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.EventSourceName
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.EventSourceName
  name: EventSourceName
  nameWithType: Log<TraceLogEntry>.EventSourceName
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.TraceLogEntry>.EventSourceName
  nameWithType.vb: Log(Of TraceLogEntry).EventSourceName
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.TraceLogEntry).EventSourceName
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.EventLog
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.EventLog
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.EventLog
  name: EventLog
  nameWithType: Log<TraceLogEntry>.EventLog
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.TraceLogEntry>.EventLog
  nameWithType.vb: Log(Of TraceLogEntry).EventLog
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.TraceLogEntry).EventLog
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.BaseLogger
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.BaseLogger
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.BaseLogger
  name: BaseLogger
  nameWithType: Log<TraceLogEntry>.BaseLogger
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.TraceLogEntry>.BaseLogger
  nameWithType.vb: Log(Of TraceLogEntry).BaseLogger
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.TraceLogEntry).BaseLogger
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.LogParameters
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.LogParameters
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.LogParameters
  name: LogParameters
  nameWithType: Log<TraceLogEntry>.LogParameters
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.TraceLogEntry>.LogParameters
  nameWithType.vb: Log(Of TraceLogEntry).LogParameters
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.TraceLogEntry).LogParameters
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.Init
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.Init
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.Init
  name: Init()
  nameWithType: Log<TraceLogEntry>.Init()
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.TraceLogEntry>.Init()
  nameWithType.vb: Log(Of TraceLogEntry).Init()
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.TraceLogEntry).Init()
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.Init
    name: Init
    nameWithType: Log<TraceLogEntry>.Init
    fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.TraceLogEntry>.Init
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.Init
    name: Init
    nameWithType: Log(Of TraceLogEntry).Init
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.TraceLogEntry).Init
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.ReadComponentSettings
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.ReadComponentSettings
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.ReadComponentSettings
  name: ReadComponentSettings()
  nameWithType: Log<TraceLogEntry>.ReadComponentSettings()
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.TraceLogEntry>.ReadComponentSettings()
  nameWithType.vb: Log(Of TraceLogEntry).ReadComponentSettings()
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.TraceLogEntry).ReadComponentSettings()
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.ReadComponentSettings
    name: ReadComponentSettings
    nameWithType: Log<TraceLogEntry>.ReadComponentSettings
    fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.TraceLogEntry>.ReadComponentSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.ReadComponentSettings
    name: ReadComponentSettings
    nameWithType: Log(Of TraceLogEntry).ReadComponentSettings
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.TraceLogEntry).ReadComponentSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.NormalizeEventsOnSaveToDB(System.Collections.Generic.IList{Microsoft.Health.Utility.Diagnostics.TraceLogEntry})
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.NormalizeEventsOnSaveToDB(System.Collections.Generic.IList{Microsoft.Health.Utility.Diagnostics.TraceLogEntry})
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.NormalizeEventsOnSaveToDB(System.Collections.Generic.IList{`0})
  name: NormalizeEventsOnSaveToDB(IList<TraceLogEntry>)
  nameWithType: Log<TraceLogEntry>.NormalizeEventsOnSaveToDB(IList<TraceLogEntry>)
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.TraceLogEntry>.NormalizeEventsOnSaveToDB(System.Collections.Generic.IList<Microsoft.Health.Utility.Diagnostics.TraceLogEntry>)
  nameWithType.vb: Log(Of TraceLogEntry).NormalizeEventsOnSaveToDB(IList(Of TraceLogEntry))
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.TraceLogEntry).NormalizeEventsOnSaveToDB(System.Collections.Generic.IList(Of Microsoft.Health.Utility.Diagnostics.TraceLogEntry))
  name.vb: NormalizeEventsOnSaveToDB(IList(Of TraceLogEntry))
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.NormalizeEventsOnSaveToDB(System.Collections.Generic.IList{`0})
    name: NormalizeEventsOnSaveToDB
    nameWithType: Log<TraceLogEntry>.NormalizeEventsOnSaveToDB
    fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.TraceLogEntry>.NormalizeEventsOnSaveToDB
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.Utility.Diagnostics.TraceLogEntry
    name: TraceLogEntry
    nameWithType: TraceLogEntry
    fullName: Microsoft.Health.Utility.Diagnostics.TraceLogEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.NormalizeEventsOnSaveToDB(System.Collections.Generic.IList{`0})
    name: NormalizeEventsOnSaveToDB
    nameWithType: Log(Of TraceLogEntry).NormalizeEventsOnSaveToDB
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.TraceLogEntry).NormalizeEventsOnSaveToDB
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.Utility.Diagnostics.TraceLogEntry
    name: TraceLogEntry
    nameWithType: TraceLogEntry
    fullName: Microsoft.Health.Utility.Diagnostics.TraceLogEntry
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.UpdateLogSettings
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.UpdateLogSettings
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.UpdateLogSettings
  name: UpdateLogSettings()
  nameWithType: Log<TraceLogEntry>.UpdateLogSettings()
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.TraceLogEntry>.UpdateLogSettings()
  nameWithType.vb: Log(Of TraceLogEntry).UpdateLogSettings()
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.TraceLogEntry).UpdateLogSettings()
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.UpdateLogSettings
    name: UpdateLogSettings
    nameWithType: Log<TraceLogEntry>.UpdateLogSettings
    fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.TraceLogEntry>.UpdateLogSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.UpdateLogSettings
    name: UpdateLogSettings
    nameWithType: Log(Of TraceLogEntry).UpdateLogSettings
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.TraceLogEntry).UpdateLogSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.GetParameterValue(System.String,System.String)
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.GetParameterValue(System.String,System.String)
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.GetParameterValue(System.String,System.String)
  name: GetParameterValue(String, String)
  nameWithType: Log<TraceLogEntry>.GetParameterValue(String, String)
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.TraceLogEntry>.GetParameterValue(System.String, System.String)
  nameWithType.vb: Log(Of TraceLogEntry).GetParameterValue(String, String)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.TraceLogEntry).GetParameterValue(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.GetParameterValue(System.String,System.String)
    name: GetParameterValue
    nameWithType: Log<TraceLogEntry>.GetParameterValue
    fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.TraceLogEntry>.GetParameterValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.GetParameterValue(System.String,System.String)
    name: GetParameterValue
    nameWithType: Log(Of TraceLogEntry).GetParameterValue
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.TraceLogEntry).GetParameterValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.GetSeverity(System.UInt16)
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.GetSeverity(System.UInt16)
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.GetSeverity(System.UInt16)
  name: GetSeverity(UInt16)
  nameWithType: Log<TraceLogEntry>.GetSeverity(UInt16)
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.TraceLogEntry>.GetSeverity(System.UInt16)
  nameWithType.vb: Log(Of TraceLogEntry).GetSeverity(UInt16)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.TraceLogEntry).GetSeverity(System.UInt16)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.GetSeverity(System.UInt16)
    name: GetSeverity
    nameWithType: Log<TraceLogEntry>.GetSeverity
    fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.TraceLogEntry>.GetSeverity
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.GetSeverity(System.UInt16)
    name: GetSeverity
    nameWithType: Log(Of TraceLogEntry).GetSeverity
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.TraceLogEntry).GetSeverity
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.GetFunctionalArea(System.UInt16)
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.GetFunctionalArea(System.UInt16)
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.GetFunctionalArea(System.UInt16)
  name: GetFunctionalArea(UInt16)
  nameWithType: Log<TraceLogEntry>.GetFunctionalArea(UInt16)
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.TraceLogEntry>.GetFunctionalArea(System.UInt16)
  nameWithType.vb: Log(Of TraceLogEntry).GetFunctionalArea(UInt16)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.TraceLogEntry).GetFunctionalArea(System.UInt16)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.GetFunctionalArea(System.UInt16)
    name: GetFunctionalArea
    nameWithType: Log<TraceLogEntry>.GetFunctionalArea
    fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.TraceLogEntry>.GetFunctionalArea
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.GetFunctionalArea(System.UInt16)
    name: GetFunctionalArea
    nameWithType: Log(Of TraceLogEntry).GetFunctionalArea
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.TraceLogEntry).GetFunctionalArea
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.DetermineEventLogEntryType(System.UInt16)
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.DetermineEventLogEntryType(System.UInt16)
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.DetermineEventLogEntryType(System.UInt16)
  name: DetermineEventLogEntryType(UInt16)
  nameWithType: Log<TraceLogEntry>.DetermineEventLogEntryType(UInt16)
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.TraceLogEntry>.DetermineEventLogEntryType(System.UInt16)
  nameWithType.vb: Log(Of TraceLogEntry).DetermineEventLogEntryType(UInt16)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.TraceLogEntry).DetermineEventLogEntryType(System.UInt16)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.DetermineEventLogEntryType(System.UInt16)
    name: DetermineEventLogEntryType
    nameWithType: Log<TraceLogEntry>.DetermineEventLogEntryType
    fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.TraceLogEntry>.DetermineEventLogEntryType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.DetermineEventLogEntryType(System.UInt16)
    name: DetermineEventLogEntryType
    nameWithType: Log(Of TraceLogEntry).DetermineEventLogEntryType
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.TraceLogEntry).DetermineEventLogEntryType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.SafeWriteEventLog(System.UInt16,System.UInt16,System.String,System.Exception)
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.SafeWriteEventLog(System.UInt16,System.UInt16,System.String,System.Exception)
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.SafeWriteEventLog(System.UInt16,System.UInt16,System.String,System.Exception)
  name: SafeWriteEventLog(UInt16, UInt16, String, Exception)
  nameWithType: Log<TraceLogEntry>.SafeWriteEventLog(UInt16, UInt16, String, Exception)
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.TraceLogEntry>.SafeWriteEventLog(System.UInt16, System.UInt16, System.String, System.Exception)
  nameWithType.vb: Log(Of TraceLogEntry).SafeWriteEventLog(UInt16, UInt16, String, Exception)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.TraceLogEntry).SafeWriteEventLog(System.UInt16, System.UInt16, System.String, System.Exception)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.SafeWriteEventLog(System.UInt16,System.UInt16,System.String,System.Exception)
    name: SafeWriteEventLog
    nameWithType: Log<TraceLogEntry>.SafeWriteEventLog
    fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.TraceLogEntry>.SafeWriteEventLog
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.SafeWriteEventLog(System.UInt16,System.UInt16,System.String,System.Exception)
    name: SafeWriteEventLog
    nameWithType: Log(Of TraceLogEntry).SafeWriteEventLog
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.TraceLogEntry).SafeWriteEventLog
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.Dispose
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.Dispose
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.Dispose
  name: Dispose()
  nameWithType: Log<TraceLogEntry>.Dispose()
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.TraceLogEntry>.Dispose()
  nameWithType.vb: Log(Of TraceLogEntry).Dispose()
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.TraceLogEntry).Dispose()
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.Dispose
    name: Dispose
    nameWithType: Log<TraceLogEntry>.Dispose
    fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.TraceLogEntry>.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.Dispose
    name: Dispose
    nameWithType: Log(Of TraceLogEntry).Dispose
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.TraceLogEntry).Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.Dispose(System.Boolean)
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.Dispose(System.Boolean)
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.Dispose(System.Boolean)
  name: Dispose(Boolean)
  nameWithType: Log<TraceLogEntry>.Dispose(Boolean)
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.TraceLogEntry>.Dispose(System.Boolean)
  nameWithType.vb: Log(Of TraceLogEntry).Dispose(Boolean)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.TraceLogEntry).Dispose(System.Boolean)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.Dispose(System.Boolean)
    name: Dispose
    nameWithType: Log<TraceLogEntry>.Dispose
    fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.TraceLogEntry>.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.Dispose(System.Boolean)
    name: Dispose
    nameWithType: Log(Of TraceLogEntry).Dispose
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.TraceLogEntry).Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.DisposeLogger
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.DisposeLogger
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.DisposeLogger
  name: DisposeLogger()
  nameWithType: Log<TraceLogEntry>.DisposeLogger()
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.TraceLogEntry>.DisposeLogger()
  nameWithType.vb: Log(Of TraceLogEntry).DisposeLogger()
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.TraceLogEntry).DisposeLogger()
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.DisposeLogger
    name: DisposeLogger
    nameWithType: Log<TraceLogEntry>.DisposeLogger
    fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.TraceLogEntry>.DisposeLogger
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.DisposeLogger
    name: DisposeLogger
    nameWithType: Log(Of TraceLogEntry).DisposeLogger
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.TraceLogEntry).DisposeLogger
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.TraceLog.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<TraceLog>()
  nameWithType: TypeHelper.ValueOrDbNull<TraceLog>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Utility.Diagnostics.TraceLog>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of TraceLog)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Utility.Diagnostics.TraceLog)()
  name.vb: ValueOrDbNull(Of TraceLog)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<TraceLog>
    nameWithType: TypeHelper.ValueOrDbNull<TraceLog>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Utility.Diagnostics.TraceLog>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of TraceLog)
    nameWithType: TypeHelper.ValueOrDbNull(Of TraceLog)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Utility.Diagnostics.TraceLog)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Utility.Diagnostics.Log`1
  commentId: T:Microsoft.Health.Utility.Diagnostics.Log`1
  isExternal: false
  name: Log<T>
  nameWithType: Log<T>
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>
  nameWithType.vb: Log(Of T)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T)
  name.vb: Log(Of T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1
    name: Log
    nameWithType: Log
    fullName: Microsoft.Health.Utility.Diagnostics.Log
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1
    name: Log
    nameWithType: Log
    fullName: Microsoft.Health.Utility.Diagnostics.Log
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.MaxLogIntervalMilliseconds
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log`1.MaxLogIntervalMilliseconds
  isExternal: false
  name: MaxLogIntervalMilliseconds
  nameWithType: Log<T>.MaxLogIntervalMilliseconds
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.MaxLogIntervalMilliseconds
  nameWithType.vb: Log(Of T).MaxLogIntervalMilliseconds
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).MaxLogIntervalMilliseconds
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.LogBatchSize
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log`1.LogBatchSize
  isExternal: false
  name: LogBatchSize
  nameWithType: Log<T>.LogBatchSize
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.LogBatchSize
  nameWithType.vb: Log(Of T).LogBatchSize
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).LogBatchSize
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.MaxEventLogEntryPeriodSeconds
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log`1.MaxEventLogEntryPeriodSeconds
  isExternal: false
  name: MaxEventLogEntryPeriodSeconds
  nameWithType: Log<T>.MaxEventLogEntryPeriodSeconds
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.MaxEventLogEntryPeriodSeconds
  nameWithType.vb: Log(Of T).MaxEventLogEntryPeriodSeconds
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).MaxEventLogEntryPeriodSeconds
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.LogContextName
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log`1.LogContextName
  isExternal: false
  name: LogContextName
  nameWithType: Log<T>.LogContextName
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.LogContextName
  nameWithType.vb: Log(Of T).LogContextName
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).LogContextName
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.DatabaseConnectionString
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log`1.DatabaseConnectionString
  isExternal: false
  name: DatabaseConnectionString
  nameWithType: Log<T>.DatabaseConnectionString
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.DatabaseConnectionString
  nameWithType.vb: Log(Of T).DatabaseConnectionString
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).DatabaseConnectionString
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.LogTableName
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log`1.LogTableName
  isExternal: false
  name: LogTableName
  nameWithType: Log<T>.LogTableName
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.LogTableName
  nameWithType.vb: Log(Of T).LogTableName
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).LogTableName
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.ConfigurationParametersQuery
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log`1.ConfigurationParametersQuery
  isExternal: false
  name: ConfigurationParametersQuery
  nameWithType: Log<T>.ConfigurationParametersQuery
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.ConfigurationParametersQuery
  nameWithType.vb: Log(Of T).ConfigurationParametersQuery
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).ConfigurationParametersQuery
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.TraceTarget
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log`1.TraceTarget
  isExternal: false
  name: TraceTarget
  nameWithType: Log<T>.TraceTarget
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.TraceTarget
  nameWithType.vb: Log(Of T).TraceTarget
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).TraceTarget
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.LogFileName
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log`1.LogFileName
  isExternal: false
  name: LogFileName
  nameWithType: Log<T>.LogFileName
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.LogFileName
  nameWithType.vb: Log(Of T).LogFileName
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).LogFileName
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.TruncateLogFile
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log`1.TruncateLogFile
  isExternal: false
  name: TruncateLogFile
  nameWithType: Log<T>.TruncateLogFile
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.TruncateLogFile
  nameWithType.vb: Log(Of T).TruncateLogFile
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).TruncateLogFile
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.CreateLoggerFailed
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log`1.CreateLoggerFailed
  isExternal: false
  name: CreateLoggerFailed
  nameWithType: Log<T>.CreateLoggerFailed
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.CreateLoggerFailed
  nameWithType.vb: Log(Of T).CreateLoggerFailed
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).CreateLoggerFailed
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.EventLogName
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log`1.EventLogName
  isExternal: false
  name: EventLogName
  nameWithType: Log<T>.EventLogName
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.EventLogName
  nameWithType.vb: Log(Of T).EventLogName
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).EventLogName
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.EventSourceName
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log`1.EventSourceName
  isExternal: false
  name: EventSourceName
  nameWithType: Log<T>.EventSourceName
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.EventSourceName
  nameWithType.vb: Log(Of T).EventSourceName
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).EventSourceName
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.EventLog
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log`1.EventLog
  isExternal: false
  name: EventLog
  nameWithType: Log<T>.EventLog
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.EventLog
  nameWithType.vb: Log(Of T).EventLog
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).EventLog
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.BaseLogger
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log`1.BaseLogger
  isExternal: false
  name: BaseLogger
  nameWithType: Log<T>.BaseLogger
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.BaseLogger
  nameWithType.vb: Log(Of T).BaseLogger
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).BaseLogger
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.LogParameters
  commentId: P:Microsoft.Health.Utility.Diagnostics.Log`1.LogParameters
  isExternal: false
  name: LogParameters
  nameWithType: Log<T>.LogParameters
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.LogParameters
  nameWithType.vb: Log(Of T).LogParameters
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).LogParameters
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.Init
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log`1.Init
  isExternal: false
  name: Init()
  nameWithType: Log<T>.Init()
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.Init()
  nameWithType.vb: Log(Of T).Init()
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).Init()
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.Init
    name: Init
    nameWithType: Log<T>.Init
    fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.Init
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.Init
    name: Init
    nameWithType: Log(Of T).Init
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of T).Init
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.ReadComponentSettings
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log`1.ReadComponentSettings
  isExternal: false
  name: ReadComponentSettings()
  nameWithType: Log<T>.ReadComponentSettings()
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.ReadComponentSettings()
  nameWithType.vb: Log(Of T).ReadComponentSettings()
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).ReadComponentSettings()
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.ReadComponentSettings
    name: ReadComponentSettings
    nameWithType: Log<T>.ReadComponentSettings
    fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.ReadComponentSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.ReadComponentSettings
    name: ReadComponentSettings
    nameWithType: Log(Of T).ReadComponentSettings
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of T).ReadComponentSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.NormalizeEventsOnSaveToDB(System.Collections.Generic.IList{`0})
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log`1.NormalizeEventsOnSaveToDB(System.Collections.Generic.IList{`0})
  isExternal: true
  name: NormalizeEventsOnSaveToDB(IList<T>)
  nameWithType: Log<T>.NormalizeEventsOnSaveToDB(IList<T>)
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.NormalizeEventsOnSaveToDB(System.Collections.Generic.IList<T>)
  nameWithType.vb: Log(Of T).NormalizeEventsOnSaveToDB(IList(Of T))
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).NormalizeEventsOnSaveToDB(System.Collections.Generic.IList(Of T))
  name.vb: NormalizeEventsOnSaveToDB(IList(Of T))
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.NormalizeEventsOnSaveToDB(System.Collections.Generic.IList{`0})
    name: NormalizeEventsOnSaveToDB
    nameWithType: Log<T>.NormalizeEventsOnSaveToDB
    fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.NormalizeEventsOnSaveToDB
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.NormalizeEventsOnSaveToDB(System.Collections.Generic.IList{`0})
    name: NormalizeEventsOnSaveToDB
    nameWithType: Log(Of T).NormalizeEventsOnSaveToDB
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of T).NormalizeEventsOnSaveToDB
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.UpdateLogSettings
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log`1.UpdateLogSettings
  isExternal: false
  name: UpdateLogSettings()
  nameWithType: Log<T>.UpdateLogSettings()
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.UpdateLogSettings()
  nameWithType.vb: Log(Of T).UpdateLogSettings()
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).UpdateLogSettings()
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.UpdateLogSettings
    name: UpdateLogSettings
    nameWithType: Log<T>.UpdateLogSettings
    fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.UpdateLogSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.UpdateLogSettings
    name: UpdateLogSettings
    nameWithType: Log(Of T).UpdateLogSettings
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of T).UpdateLogSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.GetParameterValue(System.String,System.String)
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log`1.GetParameterValue(System.String,System.String)
  isExternal: true
  name: GetParameterValue(String, String)
  nameWithType: Log<T>.GetParameterValue(String, String)
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.GetParameterValue(System.String, System.String)
  nameWithType.vb: Log(Of T).GetParameterValue(String, String)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).GetParameterValue(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.GetParameterValue(System.String,System.String)
    name: GetParameterValue
    nameWithType: Log<T>.GetParameterValue
    fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.GetParameterValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.GetParameterValue(System.String,System.String)
    name: GetParameterValue
    nameWithType: Log(Of T).GetParameterValue
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of T).GetParameterValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.GetSeverity(System.UInt16)
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log`1.GetSeverity(System.UInt16)
  isExternal: true
  name: GetSeverity(UInt16)
  nameWithType: Log<T>.GetSeverity(UInt16)
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.GetSeverity(System.UInt16)
  nameWithType.vb: Log(Of T).GetSeverity(UInt16)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).GetSeverity(System.UInt16)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.GetSeverity(System.UInt16)
    name: GetSeverity
    nameWithType: Log<T>.GetSeverity
    fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.GetSeverity
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.GetSeverity(System.UInt16)
    name: GetSeverity
    nameWithType: Log(Of T).GetSeverity
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of T).GetSeverity
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.GetFunctionalArea(System.UInt16)
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log`1.GetFunctionalArea(System.UInt16)
  isExternal: true
  name: GetFunctionalArea(UInt16)
  nameWithType: Log<T>.GetFunctionalArea(UInt16)
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.GetFunctionalArea(System.UInt16)
  nameWithType.vb: Log(Of T).GetFunctionalArea(UInt16)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).GetFunctionalArea(System.UInt16)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.GetFunctionalArea(System.UInt16)
    name: GetFunctionalArea
    nameWithType: Log<T>.GetFunctionalArea
    fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.GetFunctionalArea
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.GetFunctionalArea(System.UInt16)
    name: GetFunctionalArea
    nameWithType: Log(Of T).GetFunctionalArea
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of T).GetFunctionalArea
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.DetermineEventLogEntryType(System.UInt16)
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log`1.DetermineEventLogEntryType(System.UInt16)
  isExternal: true
  name: DetermineEventLogEntryType(UInt16)
  nameWithType: Log<T>.DetermineEventLogEntryType(UInt16)
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.DetermineEventLogEntryType(System.UInt16)
  nameWithType.vb: Log(Of T).DetermineEventLogEntryType(UInt16)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).DetermineEventLogEntryType(System.UInt16)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.DetermineEventLogEntryType(System.UInt16)
    name: DetermineEventLogEntryType
    nameWithType: Log<T>.DetermineEventLogEntryType
    fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.DetermineEventLogEntryType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.DetermineEventLogEntryType(System.UInt16)
    name: DetermineEventLogEntryType
    nameWithType: Log(Of T).DetermineEventLogEntryType
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of T).DetermineEventLogEntryType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.SafeWriteEventLog(System.UInt16,System.UInt16,System.String,System.Exception)
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log`1.SafeWriteEventLog(System.UInt16,System.UInt16,System.String,System.Exception)
  isExternal: true
  name: SafeWriteEventLog(UInt16, UInt16, String, Exception)
  nameWithType: Log<T>.SafeWriteEventLog(UInt16, UInt16, String, Exception)
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.SafeWriteEventLog(System.UInt16, System.UInt16, System.String, System.Exception)
  nameWithType.vb: Log(Of T).SafeWriteEventLog(UInt16, UInt16, String, Exception)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).SafeWriteEventLog(System.UInt16, System.UInt16, System.String, System.Exception)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.SafeWriteEventLog(System.UInt16,System.UInt16,System.String,System.Exception)
    name: SafeWriteEventLog
    nameWithType: Log<T>.SafeWriteEventLog
    fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.SafeWriteEventLog
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.SafeWriteEventLog(System.UInt16,System.UInt16,System.String,System.Exception)
    name: SafeWriteEventLog
    nameWithType: Log(Of T).SafeWriteEventLog
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of T).SafeWriteEventLog
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.Dispose
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log`1.Dispose
  isExternal: false
  name: Dispose()
  nameWithType: Log<T>.Dispose()
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.Dispose()
  nameWithType.vb: Log(Of T).Dispose()
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).Dispose()
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.Dispose
    name: Dispose
    nameWithType: Log<T>.Dispose
    fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.Dispose
    name: Dispose
    nameWithType: Log(Of T).Dispose
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of T).Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.Dispose(System.Boolean)
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log`1.Dispose(System.Boolean)
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: Log<T>.Dispose(Boolean)
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.Dispose(System.Boolean)
  nameWithType.vb: Log(Of T).Dispose(Boolean)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).Dispose(System.Boolean)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.Dispose(System.Boolean)
    name: Dispose
    nameWithType: Log<T>.Dispose
    fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.Dispose(System.Boolean)
    name: Dispose
    nameWithType: Log(Of T).Dispose
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of T).Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.DisposeLogger
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log`1.DisposeLogger
  isExternal: false
  name: DisposeLogger()
  nameWithType: Log<T>.DisposeLogger()
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.DisposeLogger()
  nameWithType.vb: Log(Of T).DisposeLogger()
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).DisposeLogger()
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.DisposeLogger
    name: DisposeLogger
    nameWithType: Log<T>.DisposeLogger
    fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.DisposeLogger
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.DisposeLogger
    name: DisposeLogger
    nameWithType: Log(Of T).DisposeLogger
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of T).DisposeLogger
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.Utility.Diagnostics.TraceLog.#ctor*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.TraceLog.#ctor
  isExternal: false
  name: TraceLog
  nameWithType: TraceLog.TraceLog
  fullName: Microsoft.Health.Utility.Diagnostics.TraceLog.TraceLog
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.Utility.Diagnostics.TraceTarget
  commentId: T:Microsoft.Health.Utility.Diagnostics.TraceTarget
  parent: Microsoft.Health.Utility.Diagnostics
  isExternal: false
  name: TraceTarget
  nameWithType: TraceTarget
  fullName: Microsoft.Health.Utility.Diagnostics.TraceTarget
- uid: Microsoft.Health.Utility.Diagnostics.TraceLog.TraceEventLog*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.TraceLog.TraceEventLog
  isExternal: false
  name: TraceEventLog
  nameWithType: TraceLog.TraceEventLog
  fullName: Microsoft.Health.Utility.Diagnostics.TraceLog.TraceEventLog
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Microsoft.Health.Utility.Diagnostics.TraceLog.LogAudit*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.TraceLog.LogAudit
  isExternal: false
  name: LogAudit
  nameWithType: TraceLog.LogAudit
  fullName: Microsoft.Health.Utility.Diagnostics.TraceLog.LogAudit
- uid: Microsoft.Health.Utility.Diagnostics.TraceLog.IsDebugTraceEnabled*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.TraceLog.IsDebugTraceEnabled
  isExternal: false
  name: IsDebugTraceEnabled
  nameWithType: TraceLog.IsDebugTraceEnabled
  fullName: Microsoft.Health.Utility.Diagnostics.TraceLog.IsDebugTraceEnabled
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: Microsoft.Health.Utility.Diagnostics.TraceLog.DebugTrace*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.TraceLog.DebugTrace
  isExternal: false
  name: DebugTrace
  nameWithType: TraceLog.DebugTrace
  fullName: Microsoft.Health.Utility.Diagnostics.TraceLog.DebugTrace
- uid: System.Object[]
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.AppendException(System.UInt16,System.String,System.Exception,System.String)
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.AppendException(System.UInt16,System.String,System.Exception,System.String)
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.AppendException(System.UInt16,System.String,System.Exception,System.String)
  name: AppendException(UInt16, String, Exception, String)
  nameWithType: Log<TraceLogEntry>.AppendException(UInt16, String, Exception, String)
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.TraceLogEntry>.AppendException(System.UInt16, System.String, System.Exception, System.String)
  nameWithType.vb: Log(Of TraceLogEntry).AppendException(UInt16, String, Exception, String)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.TraceLogEntry).AppendException(System.UInt16, System.String, System.Exception, System.String)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.AppendException(System.UInt16,System.String,System.Exception,System.String)
    name: AppendException
    nameWithType: Log<TraceLogEntry>.AppendException
    fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.TraceLogEntry>.AppendException
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.AppendException(System.UInt16,System.String,System.Exception,System.String)
    name: AppendException
    nameWithType: Log(Of TraceLogEntry).AppendException
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.TraceLogEntry).AppendException
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.TraceLog.AppendException*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.TraceLog.AppendException
  isExternal: false
  name: AppendException
  nameWithType: TraceLog.AppendException
  fullName: Microsoft.Health.Utility.Diagnostics.TraceLog.AppendException
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.AppendException(System.UInt16,System.String,System.Exception,System.String)
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log`1.AppendException(System.UInt16,System.String,System.Exception,System.String)
  isExternal: true
  name: AppendException(UInt16, String, Exception, String)
  nameWithType: Log<T>.AppendException(UInt16, String, Exception, String)
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.AppendException(System.UInt16, System.String, System.Exception, System.String)
  nameWithType.vb: Log(Of T).AppendException(UInt16, String, Exception, String)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).AppendException(System.UInt16, System.String, System.Exception, System.String)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.AppendException(System.UInt16,System.String,System.Exception,System.String)
    name: AppendException
    nameWithType: Log<T>.AppendException
    fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.AppendException
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.AppendException(System.UInt16,System.String,System.Exception,System.String)
    name: AppendException
    nameWithType: Log(Of T).AppendException
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of T).AppendException
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.TraceLog.EnabledCategories*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.TraceLog.EnabledCategories
  isExternal: false
  name: EnabledCategories
  nameWithType: TraceLog.EnabledCategories
  fullName: Microsoft.Health.Utility.Diagnostics.TraceLog.EnabledCategories
- uid: Microsoft.Health.Utility.Diagnostics.TraceLog.IsErrorLevelEnabled*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.TraceLog.IsErrorLevelEnabled
  isExternal: false
  name: IsErrorLevelEnabled
  nameWithType: TraceLog.IsErrorLevelEnabled
  fullName: Microsoft.Health.Utility.Diagnostics.TraceLog.IsErrorLevelEnabled
- uid: Microsoft.Health.Utility.Diagnostics.ErrorLevel
  commentId: T:Microsoft.Health.Utility.Diagnostics.ErrorLevel
  parent: Microsoft.Health.Utility.Diagnostics
  isExternal: false
  name: ErrorLevel
  nameWithType: ErrorLevel
  fullName: Microsoft.Health.Utility.Diagnostics.ErrorLevel
- uid: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.ReadLogSettings
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}.ReadLogSettings
  parent: Microsoft.Health.Utility.Diagnostics.Log{Microsoft.Health.Utility.Diagnostics.TraceLogEntry}
  definition: Microsoft.Health.Utility.Diagnostics.Log`1.ReadLogSettings
  name: ReadLogSettings()
  nameWithType: Log<TraceLogEntry>.ReadLogSettings()
  fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.TraceLogEntry>.ReadLogSettings()
  nameWithType.vb: Log(Of TraceLogEntry).ReadLogSettings()
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.TraceLogEntry).ReadLogSettings()
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.ReadLogSettings
    name: ReadLogSettings
    nameWithType: Log<TraceLogEntry>.ReadLogSettings
    fullName: Microsoft.Health.Utility.Diagnostics.Log<Microsoft.Health.Utility.Diagnostics.TraceLogEntry>.ReadLogSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.ReadLogSettings
    name: ReadLogSettings
    nameWithType: Log(Of TraceLogEntry).ReadLogSettings
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of Microsoft.Health.Utility.Diagnostics.TraceLogEntry).ReadLogSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.TraceLog.ReadLogSettings*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.TraceLog.ReadLogSettings
  isExternal: false
  name: ReadLogSettings
  nameWithType: TraceLog.ReadLogSettings
  fullName: Microsoft.Health.Utility.Diagnostics.TraceLog.ReadLogSettings
- uid: Microsoft.Health.Utility.Diagnostics.Log`1.ReadLogSettings
  commentId: M:Microsoft.Health.Utility.Diagnostics.Log`1.ReadLogSettings
  isExternal: false
  name: ReadLogSettings()
  nameWithType: Log<T>.ReadLogSettings()
  fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.ReadLogSettings()
  nameWithType.vb: Log(Of T).ReadLogSettings()
  fullName.vb: Microsoft.Health.Utility.Diagnostics.Log(Of T).ReadLogSettings()
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.ReadLogSettings
    name: ReadLogSettings
    nameWithType: Log<T>.ReadLogSettings
    fullName: Microsoft.Health.Utility.Diagnostics.Log<T>.ReadLogSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.Log`1.ReadLogSettings
    name: ReadLogSettings
    nameWithType: Log(Of T).ReadLogSettings
    fullName: Microsoft.Health.Utility.Diagnostics.Log(Of T).ReadLogSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
