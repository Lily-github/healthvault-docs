### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson
  commentId: T:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson
  id: HealthVaultPlatformPerson
  parent: Microsoft.Health.PlatformPrimitives
  children:
  - Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.DisableMock
  - Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.EnableMock(Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson)
  - Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.GetApplicationSettings(Microsoft.Health.HealthServiceConnection)
  - Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.GetAuthorizedRecords(Microsoft.Health.ApplicationConnection,System.Collections.Generic.IList{System.Guid})
  - Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.GetPersonInfo(Microsoft.Health.ApplicationConnection)
  - Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.SetApplicationSettings(Microsoft.Health.HealthServiceConnection,System.String)
  - Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.SetApplicationSettings(Microsoft.Health.HealthServiceConnection,System.Xml.XPath.IXPathNavigable)
  langs:
  - csharp
  - vb
  name: HealthVaultPlatformPerson
  nameWithType: HealthVaultPlatformPerson
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson
  type: Class
  source:
    remote:
      path: Microsoft.Health/HealthVaultPlatformPerson.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: HealthVaultPlatformPerson
    path: ../Microsoft.Health/HealthVaultPlatformPerson.cs
    startLine: 22
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.PlatformPrimitives
  summary: "\nProvides low-level access to the HealthVault message operations.\n"
  remarks: "\n<xref href=\"Microsoft.Health.HealthVaultPlatform\" data-throw-if-not-resolved=\"false\"></xref> uses this class to perform operations. Set \nHealthVaultPlatformPerson.Current to a derived class to intercept all message calls.\n"
  example: []
  syntax:
    content: public class HealthVaultPlatformPerson
    content.vb: Public Class HealthVaultPlatformPerson
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.EnableMock(Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson)
  commentId: M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.EnableMock(Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson)
  id: EnableMock(Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson)
  parent: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson
  langs:
  - csharp
  - vb
  name: EnableMock(HealthVaultPlatformPerson)
  nameWithType: HealthVaultPlatformPerson.EnableMock(HealthVaultPlatformPerson)
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.EnableMock(Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson)
  type: Method
  source:
    remote:
      path: Microsoft.Health/HealthVaultPlatformPerson.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: EnableMock
    path: ../Microsoft.Health/HealthVaultPlatformPerson.cs
    startLine: 39
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.PlatformPrimitives
  summary: "\nEnables mocking of calls to this class.\n"
  remarks: "\nThe calling class should pass in a class that derives from this\nclass and overrides the calls to be mocked. \n"
  example: []
  syntax:
    content: public static void EnableMock(HealthVaultPlatformPerson mock)
    content.vb: Public Shared Sub EnableMock(mock As HealthVaultPlatformPerson)
    parameters:
    - id: mock
      type: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson
      description: The mocking class.
  overload: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.EnableMock*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nThere is already a mock registered for this class.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.DisableMock
  commentId: M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.DisableMock
  id: DisableMock
  parent: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson
  langs:
  - csharp
  - vb
  name: DisableMock()
  nameWithType: HealthVaultPlatformPerson.DisableMock()
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.DisableMock()
  type: Method
  source:
    remote:
      path: Microsoft.Health/HealthVaultPlatformPerson.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DisableMock
    path: ../Microsoft.Health/HealthVaultPlatformPerson.cs
    startLine: 55
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.PlatformPrimitives
  summary: "\nRemoves mocking of calls to this class.\n"
  example: []
  syntax:
    content: public static void DisableMock()
    content.vb: Public Shared Sub DisableMock
  overload: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.DisableMock*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nThere is no mock registered for this class.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.GetApplicationSettings(Microsoft.Health.HealthServiceConnection)
  commentId: M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.GetApplicationSettings(Microsoft.Health.HealthServiceConnection)
  id: GetApplicationSettings(Microsoft.Health.HealthServiceConnection)
  parent: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson
  langs:
  - csharp
  - vb
  name: GetApplicationSettings(HealthServiceConnection)
  nameWithType: HealthVaultPlatformPerson.GetApplicationSettings(HealthServiceConnection)
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.GetApplicationSettings(Microsoft.Health.HealthServiceConnection)
  type: Method
  source:
    remote:
      path: Microsoft.Health/HealthVaultPlatformPerson.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetApplicationSettings
    path: ../Microsoft.Health/HealthVaultPlatformPerson.cs
    startLine: 82
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.PlatformPrimitives
  summary: "\nGets the application settings for the current application and\nperson.\n"
  example: []
  syntax:
    content: public virtual ApplicationSettings GetApplicationSettings(HealthServiceConnection connection)
    content.vb: Public Overridable Function GetApplicationSettings(connection As HealthServiceConnection) As ApplicationSettings
    parameters:
    - id: connection
      type: Microsoft.Health.HealthServiceConnection
      description: "The connection to use to perform the operation. This connection\nmust be authenticated. "
    return:
      type: Microsoft.Health.ApplicationSettings
      description: "\nThe complete set application settings including the XML settings, selected record ID, etc.\n"
  overload: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.GetApplicationSettings*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.SetApplicationSettings(Microsoft.Health.HealthServiceConnection,System.Xml.XPath.IXPathNavigable)
  commentId: M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.SetApplicationSettings(Microsoft.Health.HealthServiceConnection,System.Xml.XPath.IXPathNavigable)
  id: SetApplicationSettings(Microsoft.Health.HealthServiceConnection,System.Xml.XPath.IXPathNavigable)
  parent: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson
  langs:
  - csharp
  - vb
  name: SetApplicationSettings(HealthServiceConnection, IXPathNavigable)
  nameWithType: HealthVaultPlatformPerson.SetApplicationSettings(HealthServiceConnection, IXPathNavigable)
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.SetApplicationSettings(Microsoft.Health.HealthServiceConnection, System.Xml.XPath.IXPathNavigable)
  type: Method
  source:
    remote:
      path: Microsoft.Health/HealthVaultPlatformPerson.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SetApplicationSettings
    path: ../Microsoft.Health/HealthVaultPlatformPerson.cs
    startLine: 124
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.PlatformPrimitives
  summary: "\nSets the application settings for the current application and\nperson.\n"
  remarks: "\nThis may be <strong>null</strong> if no application settings have been \nstored for the application or user.\n"
  example: []
  syntax:
    content: public virtual void SetApplicationSettings(HealthServiceConnection connection, IXPathNavigable applicationSettings)
    content.vb: Public Overridable Sub SetApplicationSettings(connection As HealthServiceConnection, applicationSettings As IXPathNavigable)
    parameters:
    - id: connection
      type: Microsoft.Health.HealthServiceConnection
      description: "The connection to use to perform the operation. This connection\nmust be authenticated. "
    - id: applicationSettings
      type: System.Xml.XPath.IXPathNavigable
      description: "\nThe application settings XML.\n"
  overload: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.SetApplicationSettings*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.SetApplicationSettings(Microsoft.Health.HealthServiceConnection,System.String)
  commentId: M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.SetApplicationSettings(Microsoft.Health.HealthServiceConnection,System.String)
  id: SetApplicationSettings(Microsoft.Health.HealthServiceConnection,System.String)
  parent: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson
  langs:
  - csharp
  - vb
  name: SetApplicationSettings(HealthServiceConnection, String)
  nameWithType: HealthVaultPlatformPerson.SetApplicationSettings(HealthServiceConnection, String)
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.SetApplicationSettings(Microsoft.Health.HealthServiceConnection, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health/HealthVaultPlatformPerson.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SetApplicationSettings
    path: ../Microsoft.Health/HealthVaultPlatformPerson.cs
    startLine: 151
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.PlatformPrimitives
  summary: "\nSets the application settings for the current application and\nperson.\n"
  remarks: "\nThis may be <strong>null</strong> if no application settings have been \nstored for the application or user.\n"
  example: []
  syntax:
    content: public virtual void SetApplicationSettings(HealthServiceConnection connection, string requestParameters)
    content.vb: Public Overridable Sub SetApplicationSettings(connection As HealthServiceConnection, requestParameters As String)
    parameters:
    - id: connection
      type: Microsoft.Health.HealthServiceConnection
      description: "The connection to use to perform the operation. This connection\nmust be authenticated. "
    - id: requestParameters
      type: System.String
      description: "\nThe request parameters.\n"
  overload: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.SetApplicationSettings*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.GetPersonInfo(Microsoft.Health.ApplicationConnection)
  commentId: M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.GetPersonInfo(Microsoft.Health.ApplicationConnection)
  id: GetPersonInfo(Microsoft.Health.ApplicationConnection)
  parent: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson
  langs:
  - csharp
  - vb
  name: GetPersonInfo(ApplicationConnection)
  nameWithType: HealthVaultPlatformPerson.GetPersonInfo(ApplicationConnection)
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.GetPersonInfo(Microsoft.Health.ApplicationConnection)
  type: Method
  source:
    remote:
      path: Microsoft.Health/HealthVaultPlatformPerson.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetPersonInfo
    path: ../Microsoft.Health/HealthVaultPlatformPerson.cs
    startLine: 228
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.PlatformPrimitives
  summary: "\nGets the information about the person specified.\n"
  remarks: "\nThis method always calls the HealthVault service to get the latest \ninformation. It is recommended that the calling application cache \nthe return value and only call this method again if it needs to \nrefresh the cache.\n"
  example: []
  syntax:
    content: public virtual PersonInfo GetPersonInfo(ApplicationConnection connection)
    content.vb: Public Overridable Function GetPersonInfo(connection As ApplicationConnection) As PersonInfo
    parameters:
    - id: connection
      type: Microsoft.Health.ApplicationConnection
      description: "The connection to use to perform the operation. This connection\nmust be authenticated. "
    return:
      type: Microsoft.Health.PersonInfo
      description: "\nInformation about the person's HealthVault account.\n"
  overload: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.GetPersonInfo*
  exceptions:
  - type: Microsoft.Health.HealthServiceException
    commentId: T:Microsoft.Health.HealthServiceException
    description: "\nThe HealthVault service returned an error.\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.GetAuthorizedRecords(Microsoft.Health.ApplicationConnection,System.Collections.Generic.IList{System.Guid})
  commentId: M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.GetAuthorizedRecords(Microsoft.Health.ApplicationConnection,System.Collections.Generic.IList{System.Guid})
  id: GetAuthorizedRecords(Microsoft.Health.ApplicationConnection,System.Collections.Generic.IList{System.Guid})
  parent: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson
  langs:
  - csharp
  - vb
  name: GetAuthorizedRecords(ApplicationConnection, IList<Guid>)
  nameWithType: HealthVaultPlatformPerson.GetAuthorizedRecords(ApplicationConnection, IList<Guid>)
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.GetAuthorizedRecords(Microsoft.Health.ApplicationConnection, System.Collections.Generic.IList<System.Guid>)
  type: Method
  source:
    remote:
      path: Microsoft.Health/HealthVaultPlatformPerson.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetAuthorizedRecords
    path: ../Microsoft.Health/HealthVaultPlatformPerson.cs
    startLine: 295
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.PlatformPrimitives
  summary: "\nGets the <xref href=\"Microsoft.Health.HealthRecordInfo\" data-throw-if-not-resolved=\"false\"></xref> for the records identified\nby the specified <span class=\"paramref\">recordIds</span>.\n"
  remarks: "\nThis method is useful in cases where the application is storing\nrecord identifiers and needs access to the functionality provided\nby the object model.\n"
  example: []
  syntax:
    content: public virtual Collection<HealthRecordInfo> GetAuthorizedRecords(ApplicationConnection connection, IList<Guid> recordIds)
    content.vb: Public Overridable Function GetAuthorizedRecords(connection As ApplicationConnection, recordIds As IList(Of Guid)) As Collection(Of HealthRecordInfo)
    parameters:
    - id: connection
      type: Microsoft.Health.ApplicationConnection
      description: "The connection to use to perform the operation. This connection\nmust be authenticated. "
    - id: recordIds
      type: System.Collections.Generic.IList{System.Guid}
      description: "\nThe unique identifiers for the records to retrieve.\n"
    return:
      type: System.Collections.ObjectModel.Collection{Microsoft.Health.HealthRecordInfo}
      description: "\nA collection of the records matching the specified record \nidentifiers and authorized for the authenticated person.\n"
  overload: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.GetAuthorizedRecords*
  nameWithType.vb: HealthVaultPlatformPerson.GetAuthorizedRecords(ApplicationConnection, IList(Of Guid))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.GetAuthorizedRecords(Microsoft.Health.ApplicationConnection, System.Collections.Generic.IList(Of System.Guid))
  name.vb: GetAuthorizedRecords(ApplicationConnection, IList(Of Guid))
references:
- uid: Microsoft.Health.HealthVaultPlatform
  commentId: T:Microsoft.Health.HealthVaultPlatform
  isExternal: false
  name: HealthVaultPlatform
  nameWithType: HealthVaultPlatform
  fullName: Microsoft.Health.HealthVaultPlatform
- uid: Microsoft.Health.PlatformPrimitives
  commentId: N:Microsoft.Health.PlatformPrimitives
  isExternal: false
  name: Microsoft.Health.PlatformPrimitives
  nameWithType: Microsoft.Health.PlatformPrimitives
  fullName: Microsoft.Health.PlatformPrimitives
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<HealthVaultPlatformPerson>()
  nameWithType: TypeHelper.ValueOrDbNull<HealthVaultPlatformPerson>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of HealthVaultPlatformPerson)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson)()
  name.vb: ValueOrDbNull(Of HealthVaultPlatformPerson)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<HealthVaultPlatformPerson>
    nameWithType: TypeHelper.ValueOrDbNull<HealthVaultPlatformPerson>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of HealthVaultPlatformPerson)
    nameWithType: TypeHelper.ValueOrDbNull(Of HealthVaultPlatformPerson)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.EnableMock*
  commentId: Overload:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.EnableMock
  isExternal: false
  name: EnableMock
  nameWithType: HealthVaultPlatformPerson.EnableMock
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.EnableMock
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson
  commentId: T:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson
  parent: Microsoft.Health.PlatformPrimitives
  isExternal: false
  name: HealthVaultPlatformPerson
  nameWithType: HealthVaultPlatformPerson
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.DisableMock*
  commentId: Overload:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.DisableMock
  isExternal: false
  name: DisableMock
  nameWithType: HealthVaultPlatformPerson.DisableMock
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.DisableMock
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.GetApplicationSettings*
  commentId: Overload:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.GetApplicationSettings
  isExternal: false
  name: GetApplicationSettings
  nameWithType: HealthVaultPlatformPerson.GetApplicationSettings
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.GetApplicationSettings
- uid: Microsoft.Health.HealthServiceConnection
  commentId: T:Microsoft.Health.HealthServiceConnection
  parent: Microsoft.Health
  isExternal: false
  name: HealthServiceConnection
  nameWithType: HealthServiceConnection
  fullName: Microsoft.Health.HealthServiceConnection
- uid: Microsoft.Health.ApplicationSettings
  commentId: T:Microsoft.Health.ApplicationSettings
  parent: Microsoft.Health
  isExternal: false
  name: ApplicationSettings
  nameWithType: ApplicationSettings
  fullName: Microsoft.Health.ApplicationSettings
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.SetApplicationSettings*
  commentId: Overload:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.SetApplicationSettings
  isExternal: false
  name: SetApplicationSettings
  nameWithType: HealthVaultPlatformPerson.SetApplicationSettings
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.SetApplicationSettings
- uid: System.Xml.XPath.IXPathNavigable
  commentId: T:System.Xml.XPath.IXPathNavigable
  parent: System.Xml.XPath
  isExternal: true
  name: IXPathNavigable
  nameWithType: IXPathNavigable
  fullName: System.Xml.XPath.IXPathNavigable
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: false
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.GetPersonInfo*
  commentId: Overload:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.GetPersonInfo
  isExternal: false
  name: GetPersonInfo
  nameWithType: HealthVaultPlatformPerson.GetPersonInfo
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.GetPersonInfo
- uid: Microsoft.Health.HealthServiceException
  commentId: T:Microsoft.Health.HealthServiceException
  parent: Microsoft.Health
  isExternal: false
  name: HealthServiceException
  nameWithType: HealthServiceException
  fullName: Microsoft.Health.HealthServiceException
- uid: Microsoft.Health.ApplicationConnection
  commentId: T:Microsoft.Health.ApplicationConnection
  parent: Microsoft.Health
  isExternal: false
  name: ApplicationConnection
  nameWithType: ApplicationConnection
  fullName: Microsoft.Health.ApplicationConnection
- uid: Microsoft.Health.PersonInfo
  commentId: T:Microsoft.Health.PersonInfo
  parent: Microsoft.Health
  isExternal: false
  name: PersonInfo
  nameWithType: PersonInfo
  fullName: Microsoft.Health.PersonInfo
- uid: Microsoft.Health.HealthRecordInfo
  commentId: T:Microsoft.Health.HealthRecordInfo
  parent: Microsoft.Health
  isExternal: false
  name: HealthRecordInfo
  nameWithType: HealthRecordInfo
  fullName: Microsoft.Health.HealthRecordInfo
- uid: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.GetAuthorizedRecords*
  commentId: Overload:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.GetAuthorizedRecords
  isExternal: false
  name: GetAuthorizedRecords
  nameWithType: HealthVaultPlatformPerson.GetAuthorizedRecords
  fullName: Microsoft.Health.PlatformPrimitives.HealthVaultPlatformPerson.GetAuthorizedRecords
- uid: System.Collections.Generic.IList{System.Guid}
  commentId: T:System.Collections.Generic.IList{System.Guid}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Guid>
  nameWithType: IList<Guid>
  fullName: System.Collections.Generic.IList<System.Guid>
  nameWithType.vb: IList(Of Guid)
  fullName.vb: System.Collections.Generic.IList(Of System.Guid)
  name.vb: IList(Of Guid)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{Microsoft.Health.HealthRecordInfo}
  commentId: T:System.Collections.ObjectModel.Collection{Microsoft.Health.HealthRecordInfo}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<HealthRecordInfo>
  nameWithType: Collection<HealthRecordInfo>
  fullName: System.Collections.ObjectModel.Collection<Microsoft.Health.HealthRecordInfo>
  nameWithType.vb: Collection(Of HealthRecordInfo)
  fullName.vb: System.Collections.ObjectModel.Collection(Of Microsoft.Health.HealthRecordInfo)
  name.vb: Collection(Of HealthRecordInfo)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.HealthRecordInfo
    name: HealthRecordInfo
    nameWithType: HealthRecordInfo
    fullName: Microsoft.Health.HealthRecordInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.HealthRecordInfo
    name: HealthRecordInfo
    nameWithType: HealthRecordInfo
    fullName: Microsoft.Health.HealthRecordInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.ObjectModel.Collection`1
  commentId: T:System.Collections.ObjectModel.Collection`1
  isExternal: true
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  nameWithType.vb: Collection(Of T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T)
  name.vb: Collection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
