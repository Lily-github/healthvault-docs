### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.InvertedIndex.RecordIDArray
  commentId: T:Microsoft.Health.InvertedIndex.RecordIDArray
  id: RecordIDArray
  parent: Microsoft.Health.InvertedIndex
  children:
  - Microsoft.Health.InvertedIndex.RecordIDArray.#ctor(System.Single,System.UInt32[])
  - Microsoft.Health.InvertedIndex.RecordIDArray.#ctor(System.UInt32[])
  - Microsoft.Health.InvertedIndex.RecordIDArray.Count
  - Microsoft.Health.InvertedIndex.RecordIDArray.CreateEnumerator(System.UInt32[])
  - Microsoft.Health.InvertedIndex.RecordIDArray.DefaultValue
  - Microsoft.Health.InvertedIndex.RecordIDArray.GetEnumerator
  - Microsoft.Health.InvertedIndex.RecordIDArray.GetIDs
  - Microsoft.Health.InvertedIndex.RecordIDArray.GetPropertyEnumerator
  - Microsoft.Health.InvertedIndex.RecordIDArray.GetSkipEnumerator
  - Microsoft.Health.InvertedIndex.RecordIDArray.RecordIDs
  - Microsoft.Health.InvertedIndex.RecordIDArray.SerializationTokenName
  - Microsoft.Health.InvertedIndex.RecordIDArray.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  - vb
  name: RecordIDArray
  nameWithType: RecordIDArray
  fullName: Microsoft.Health.InvertedIndex.RecordIDArray
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/RecordIDArray.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: RecordIDArray
    path: ../Microsoft.Health.Utility/search/InvertedIndex/RecordIDArray.cs
    startLine: 16
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\nA record ID array is what is claims it is - a sorted list of record ids\nHowever, it also masquerades as a record property list, where each record is given the SAME\nfixed value. \n"
  example: []
  syntax:
    content: 'public class RecordIDArray : IRecordPropertyList<float>, IRecordIDList, ISkipEnumerable<uint>, IEnumerable<uint>, IEnumerable, ISerializableIndexType'
    content.vb: >-
      Public Class RecordIDArray
          Implements IRecordPropertyList(Of Single), IRecordIDList, ISkipEnumerable(Of UInteger), IEnumerable(Of UInteger), IEnumerable, ISerializableIndexType
  inheritance:
  - System.Object
  implements:
  - Microsoft.Health.InvertedIndex.IRecordPropertyList{System.Single}
  - Microsoft.Health.InvertedIndex.IRecordIDList
  - Microsoft.Health.InvertedIndex.ISkipEnumerable{System.UInt32}
  - System.Collections.Generic.IEnumerable{System.UInt32}
  - System.Collections.IEnumerable
  - Microsoft.Health.InvertedIndex.ISerializableIndexType
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.InvertedIndex.RecordIDArray.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.InvertedIndex.RecordIDArray.#ctor(System.UInt32[])
  commentId: M:Microsoft.Health.InvertedIndex.RecordIDArray.#ctor(System.UInt32[])
  id: '#ctor(System.UInt32[])'
  parent: Microsoft.Health.InvertedIndex.RecordIDArray
  langs:
  - csharp
  - vb
  name: RecordIDArray(UInt32[])
  nameWithType: RecordIDArray.RecordIDArray(UInt32[])
  fullName: Microsoft.Health.InvertedIndex.RecordIDArray.RecordIDArray(System.UInt32[])
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/RecordIDArray.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.Utility/search/InvertedIndex/RecordIDArray.cs
    startLine: 25
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public RecordIDArray(uint[] recordIDs)
    content.vb: Public Sub New(recordIDs As UInteger())
    parameters:
    - id: recordIDs
      type: System.UInt32[]
      description: ''
  overload: Microsoft.Health.InvertedIndex.RecordIDArray.#ctor*
  nameWithType.vb: RecordIDArray.RecordIDArray(UInt32())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.RecordIDArray.RecordIDArray(System.UInt32())
  name.vb: RecordIDArray(UInt32())
- uid: Microsoft.Health.InvertedIndex.RecordIDArray.#ctor(System.Single,System.UInt32[])
  commentId: M:Microsoft.Health.InvertedIndex.RecordIDArray.#ctor(System.Single,System.UInt32[])
  id: '#ctor(System.Single,System.UInt32[])'
  parent: Microsoft.Health.InvertedIndex.RecordIDArray
  langs:
  - csharp
  - vb
  name: RecordIDArray(Single, UInt32[])
  nameWithType: RecordIDArray.RecordIDArray(Single, UInt32[])
  fullName: Microsoft.Health.InvertedIndex.RecordIDArray.RecordIDArray(System.Single, System.UInt32[])
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/RecordIDArray.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.Utility/search/InvertedIndex/RecordIDArray.cs
    startLine: 35
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public RecordIDArray(float value, uint[] recordIDs)
    content.vb: Public Sub New(value As Single, recordIDs As UInteger())
    parameters:
    - id: value
      type: System.Single
      description: ''
    - id: recordIDs
      type: System.UInt32[]
      description: ''
  overload: Microsoft.Health.InvertedIndex.RecordIDArray.#ctor*
  nameWithType.vb: RecordIDArray.RecordIDArray(Single, UInt32())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.RecordIDArray.RecordIDArray(System.Single, System.UInt32())
  name.vb: RecordIDArray(Single, UInt32())
- uid: Microsoft.Health.InvertedIndex.RecordIDArray.Count
  commentId: P:Microsoft.Health.InvertedIndex.RecordIDArray.Count
  id: Count
  parent: Microsoft.Health.InvertedIndex.RecordIDArray
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: RecordIDArray.Count
  fullName: Microsoft.Health.InvertedIndex.RecordIDArray.Count
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/RecordIDArray.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Count
    path: ../Microsoft.Health.Utility/search/InvertedIndex/RecordIDArray.cs
    startLine: 49
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Health.InvertedIndex.RecordIDArray.Count*
  implements:
  - Microsoft.Health.InvertedIndex.IRecordIDList.Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.InvertedIndex.RecordIDArray.RecordIDs
  commentId: P:Microsoft.Health.InvertedIndex.RecordIDArray.RecordIDs
  id: RecordIDs
  parent: Microsoft.Health.InvertedIndex.RecordIDArray
  langs:
  - csharp
  - vb
  name: RecordIDs
  nameWithType: RecordIDArray.RecordIDs
  fullName: Microsoft.Health.InvertedIndex.RecordIDArray.RecordIDs
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/RecordIDArray.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: RecordIDs
    path: ../Microsoft.Health.Utility/search/InvertedIndex/RecordIDArray.cs
    startLine: 60
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public uint[] RecordIDs { get; }
    content.vb: Public ReadOnly Property RecordIDs As UInteger()
    parameters: []
    return:
      type: System.UInt32[]
  overload: Microsoft.Health.InvertedIndex.RecordIDArray.RecordIDs*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.InvertedIndex.RecordIDArray.DefaultValue
  commentId: P:Microsoft.Health.InvertedIndex.RecordIDArray.DefaultValue
  id: DefaultValue
  parent: Microsoft.Health.InvertedIndex.RecordIDArray
  langs:
  - csharp
  - vb
  name: DefaultValue
  nameWithType: RecordIDArray.DefaultValue
  fullName: Microsoft.Health.InvertedIndex.RecordIDArray.DefaultValue
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/RecordIDArray.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DefaultValue
    path: ../Microsoft.Health.Utility/search/InvertedIndex/RecordIDArray.cs
    startLine: 71
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public float DefaultValue { get; set; }
    content.vb: Public Property DefaultValue As Single
    parameters: []
    return:
      type: System.Single
  overload: Microsoft.Health.InvertedIndex.RecordIDArray.DefaultValue*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.RecordIDArray.SerializationTokenName
  commentId: P:Microsoft.Health.InvertedIndex.RecordIDArray.SerializationTokenName
  id: SerializationTokenName
  parent: Microsoft.Health.InvertedIndex.RecordIDArray
  langs:
  - csharp
  - vb
  name: SerializationTokenName
  nameWithType: RecordIDArray.SerializationTokenName
  fullName: Microsoft.Health.InvertedIndex.RecordIDArray.SerializationTokenName
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/RecordIDArray.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SerializationTokenName
    path: ../Microsoft.Health.Utility/search/InvertedIndex/RecordIDArray.cs
    startLine: 86
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public string SerializationTokenName { get; }
    content.vb: Public ReadOnly Property SerializationTokenName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.InvertedIndex.RecordIDArray.SerializationTokenName*
  implements:
  - Microsoft.Health.InvertedIndex.ISerializableIndexType.SerializationTokenName
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.InvertedIndex.RecordIDArray.GetSkipEnumerator
  commentId: M:Microsoft.Health.InvertedIndex.RecordIDArray.GetSkipEnumerator
  id: GetSkipEnumerator
  parent: Microsoft.Health.InvertedIndex.RecordIDArray
  langs:
  - csharp
  - vb
  name: GetSkipEnumerator()
  nameWithType: RecordIDArray.GetSkipEnumerator()
  fullName: Microsoft.Health.InvertedIndex.RecordIDArray.GetSkipEnumerator()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/RecordIDArray.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetSkipEnumerator
    path: ../Microsoft.Health.Utility/search/InvertedIndex/RecordIDArray.cs
    startLine: 98
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public ISkipEnumerator<uint> GetSkipEnumerator()
    content.vb: Public Function GetSkipEnumerator As ISkipEnumerator(Of UInteger)
    return:
      type: Microsoft.Health.InvertedIndex.ISkipEnumerator{System.UInt32}
      description: ''
  overload: Microsoft.Health.InvertedIndex.RecordIDArray.GetSkipEnumerator*
  implements:
  - Microsoft.Health.InvertedIndex.ISkipEnumerable{System.UInt32}.GetSkipEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.RecordIDArray.GetEnumerator
  commentId: M:Microsoft.Health.InvertedIndex.RecordIDArray.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.Health.InvertedIndex.RecordIDArray
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: RecordIDArray.GetEnumerator()
  fullName: Microsoft.Health.InvertedIndex.RecordIDArray.GetEnumerator()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/RecordIDArray.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetEnumerator
    path: ../Microsoft.Health.Utility/search/InvertedIndex/RecordIDArray.cs
    startLine: 107
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public IEnumerator<uint> GetEnumerator()
    content.vb: Public Function GetEnumerator As IEnumerator(Of UInteger)
    return:
      type: System.Collections.Generic.IEnumerator{System.UInt32}
      description: ''
  overload: Microsoft.Health.InvertedIndex.RecordIDArray.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{System.UInt32}.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.RecordIDArray.GetIDs
  commentId: M:Microsoft.Health.InvertedIndex.RecordIDArray.GetIDs
  id: GetIDs
  parent: Microsoft.Health.InvertedIndex.RecordIDArray
  langs:
  - csharp
  - vb
  name: GetIDs()
  nameWithType: RecordIDArray.GetIDs()
  fullName: Microsoft.Health.InvertedIndex.RecordIDArray.GetIDs()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/RecordIDArray.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetIDs
    path: ../Microsoft.Health.Utility/search/InvertedIndex/RecordIDArray.cs
    startLine: 119
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public RecordIDEnumerator GetIDs()
    content.vb: Public Function GetIDs As RecordIDEnumerator
    return:
      type: Microsoft.Health.InvertedIndex.RecordIDEnumerator
      description: ''
  overload: Microsoft.Health.InvertedIndex.RecordIDArray.GetIDs*
  implements:
  - Microsoft.Health.InvertedIndex.IRecordIDList.GetIDs
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.RecordIDArray.GetPropertyEnumerator
  commentId: M:Microsoft.Health.InvertedIndex.RecordIDArray.GetPropertyEnumerator
  id: GetPropertyEnumerator
  parent: Microsoft.Health.InvertedIndex.RecordIDArray
  langs:
  - csharp
  - vb
  name: GetPropertyEnumerator()
  nameWithType: RecordIDArray.GetPropertyEnumerator()
  fullName: Microsoft.Health.InvertedIndex.RecordIDArray.GetPropertyEnumerator()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/RecordIDArray.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetPropertyEnumerator
    path: ../Microsoft.Health.Utility/search/InvertedIndex/RecordIDArray.cs
    startLine: 128
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public RecordPropertyEnumerator<float> GetPropertyEnumerator()
    content.vb: Public Function GetPropertyEnumerator As RecordPropertyEnumerator(Of Single)
    return:
      type: Microsoft.Health.InvertedIndex.RecordPropertyEnumerator{System.Single}
      description: ''
  overload: Microsoft.Health.InvertedIndex.RecordIDArray.GetPropertyEnumerator*
  implements:
  - Microsoft.Health.InvertedIndex.IRecordPropertyList{System.Single}.GetPropertyEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.RecordIDArray.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Microsoft.Health.InvertedIndex.RecordIDArray.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: Microsoft.Health.InvertedIndex.RecordIDArray
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: RecordIDArray.IEnumerable.GetEnumerator()
  fullName: Microsoft.Health.InvertedIndex.RecordIDArray.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/RecordIDArray.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: System.Collections.IEnumerable.GetEnumerator
    path: ../Microsoft.Health.Utility/search/InvertedIndex/RecordIDArray.cs
    startLine: 133
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
    return:
      type: System.Collections.IEnumerator
  overload: Microsoft.Health.InvertedIndex.RecordIDArray.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: RecordIDArray.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
- uid: Microsoft.Health.InvertedIndex.RecordIDArray.CreateEnumerator(System.UInt32[])
  commentId: M:Microsoft.Health.InvertedIndex.RecordIDArray.CreateEnumerator(System.UInt32[])
  id: CreateEnumerator(System.UInt32[])
  parent: Microsoft.Health.InvertedIndex.RecordIDArray
  langs:
  - csharp
  - vb
  name: CreateEnumerator(UInt32[])
  nameWithType: RecordIDArray.CreateEnumerator(UInt32[])
  fullName: Microsoft.Health.InvertedIndex.RecordIDArray.CreateEnumerator(System.UInt32[])
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/RecordIDArray.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CreateEnumerator
    path: ../Microsoft.Health.Utility/search/InvertedIndex/RecordIDArray.cs
    startLine: 143
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: protected virtual RecordPropertyEnumerator<float> CreateEnumerator(uint[] recordIDs)
    content.vb: Protected Overridable Function CreateEnumerator(recordIDs As UInteger()) As RecordPropertyEnumerator(Of Single)
    parameters:
    - id: recordIDs
      type: System.UInt32[]
      description: ''
    return:
      type: Microsoft.Health.InvertedIndex.RecordPropertyEnumerator{System.Single}
      description: ''
  overload: Microsoft.Health.InvertedIndex.RecordIDArray.CreateEnumerator*
  nameWithType.vb: RecordIDArray.CreateEnumerator(UInt32())
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.Health.InvertedIndex.RecordIDArray.CreateEnumerator(System.UInt32())
  name.vb: CreateEnumerator(UInt32())
references:
- uid: Microsoft.Health.InvertedIndex
  commentId: N:Microsoft.Health.InvertedIndex
  isExternal: false
  name: Microsoft.Health.InvertedIndex
  nameWithType: Microsoft.Health.InvertedIndex
  fullName: Microsoft.Health.InvertedIndex
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.InvertedIndex.IRecordPropertyList{System.Single}
  commentId: T:Microsoft.Health.InvertedIndex.IRecordPropertyList{System.Single}
  parent: Microsoft.Health.InvertedIndex
  definition: Microsoft.Health.InvertedIndex.IRecordPropertyList`1
  name: IRecordPropertyList<Single>
  nameWithType: IRecordPropertyList<Single>
  fullName: Microsoft.Health.InvertedIndex.IRecordPropertyList<System.Single>
  nameWithType.vb: IRecordPropertyList(Of Single)
  fullName.vb: Microsoft.Health.InvertedIndex.IRecordPropertyList(Of System.Single)
  name.vb: IRecordPropertyList(Of Single)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.IRecordPropertyList`1
    name: IRecordPropertyList
    nameWithType: IRecordPropertyList
    fullName: Microsoft.Health.InvertedIndex.IRecordPropertyList
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.IRecordPropertyList`1
    name: IRecordPropertyList
    nameWithType: IRecordPropertyList
    fullName: Microsoft.Health.InvertedIndex.IRecordPropertyList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.IRecordIDList
  commentId: T:Microsoft.Health.InvertedIndex.IRecordIDList
  parent: Microsoft.Health.InvertedIndex
  isExternal: false
  name: IRecordIDList
  nameWithType: IRecordIDList
  fullName: Microsoft.Health.InvertedIndex.IRecordIDList
- uid: Microsoft.Health.InvertedIndex.ISkipEnumerable{System.UInt32}
  commentId: T:Microsoft.Health.InvertedIndex.ISkipEnumerable{System.UInt32}
  parent: Microsoft.Health.InvertedIndex
  definition: Microsoft.Health.InvertedIndex.ISkipEnumerable`1
  name: ISkipEnumerable<UInt32>
  nameWithType: ISkipEnumerable<UInt32>
  fullName: Microsoft.Health.InvertedIndex.ISkipEnumerable<System.UInt32>
  nameWithType.vb: ISkipEnumerable(Of UInt32)
  fullName.vb: Microsoft.Health.InvertedIndex.ISkipEnumerable(Of System.UInt32)
  name.vb: ISkipEnumerable(Of UInt32)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.ISkipEnumerable`1
    name: ISkipEnumerable
    nameWithType: ISkipEnumerable
    fullName: Microsoft.Health.InvertedIndex.ISkipEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.ISkipEnumerable`1
    name: ISkipEnumerable
    nameWithType: ISkipEnumerable
    fullName: Microsoft.Health.InvertedIndex.ISkipEnumerable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.UInt32}
  commentId: T:System.Collections.Generic.IEnumerable{System.UInt32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<UInt32>
  nameWithType: IEnumerable<UInt32>
  fullName: System.Collections.Generic.IEnumerable<System.UInt32>
  nameWithType.vb: IEnumerable(Of UInt32)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.UInt32)
  name.vb: IEnumerable(Of UInt32)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: Microsoft.Health.InvertedIndex.ISerializableIndexType
  commentId: T:Microsoft.Health.InvertedIndex.ISerializableIndexType
  parent: Microsoft.Health.InvertedIndex
  isExternal: false
  name: ISerializableIndexType
  nameWithType: ISerializableIndexType
  fullName: Microsoft.Health.InvertedIndex.ISerializableIndexType
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.RecordIDArray.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<RecordIDArray>()
  nameWithType: TypeHelper.ValueOrDbNull<RecordIDArray>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.InvertedIndex.RecordIDArray>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of RecordIDArray)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.InvertedIndex.RecordIDArray)()
  name.vb: ValueOrDbNull(Of RecordIDArray)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<RecordIDArray>
    nameWithType: TypeHelper.ValueOrDbNull<RecordIDArray>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.InvertedIndex.RecordIDArray>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of RecordIDArray)
    nameWithType: TypeHelper.ValueOrDbNull(Of RecordIDArray)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.InvertedIndex.RecordIDArray)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.InvertedIndex.IRecordPropertyList`1
  commentId: T:Microsoft.Health.InvertedIndex.IRecordPropertyList`1
  isExternal: false
  name: IRecordPropertyList<T>
  nameWithType: IRecordPropertyList<T>
  fullName: Microsoft.Health.InvertedIndex.IRecordPropertyList<T>
  nameWithType.vb: IRecordPropertyList(Of T)
  fullName.vb: Microsoft.Health.InvertedIndex.IRecordPropertyList(Of T)
  name.vb: IRecordPropertyList(Of T)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.IRecordPropertyList`1
    name: IRecordPropertyList
    nameWithType: IRecordPropertyList
    fullName: Microsoft.Health.InvertedIndex.IRecordPropertyList
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.IRecordPropertyList`1
    name: IRecordPropertyList
    nameWithType: IRecordPropertyList
    fullName: Microsoft.Health.InvertedIndex.IRecordPropertyList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.ISkipEnumerable`1
  commentId: T:Microsoft.Health.InvertedIndex.ISkipEnumerable`1
  isExternal: false
  name: ISkipEnumerable<T>
  nameWithType: ISkipEnumerable<T>
  fullName: Microsoft.Health.InvertedIndex.ISkipEnumerable<T>
  nameWithType.vb: ISkipEnumerable(Of T)
  fullName.vb: Microsoft.Health.InvertedIndex.ISkipEnumerable(Of T)
  name.vb: ISkipEnumerable(Of T)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.ISkipEnumerable`1
    name: ISkipEnumerable
    nameWithType: ISkipEnumerable
    fullName: Microsoft.Health.InvertedIndex.ISkipEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.ISkipEnumerable`1
    name: ISkipEnumerable
    nameWithType: ISkipEnumerable
    fullName: Microsoft.Health.InvertedIndex.ISkipEnumerable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.InvertedIndex.RecordIDArray.#ctor*
  commentId: Overload:Microsoft.Health.InvertedIndex.RecordIDArray.#ctor
  isExternal: false
  name: RecordIDArray
  nameWithType: RecordIDArray.RecordIDArray
  fullName: Microsoft.Health.InvertedIndex.RecordIDArray.RecordIDArray
- uid: System.UInt32[]
  name: UInt32[]
  nameWithType: UInt32[]
  fullName: System.UInt32[]
  nameWithType.vb: UInt32()
  fullName.vb: System.UInt32()
  name.vb: UInt32()
  spec.csharp:
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Microsoft.Health.InvertedIndex.RecordIDArray.Count*
  commentId: Overload:Microsoft.Health.InvertedIndex.RecordIDArray.Count
  isExternal: false
  name: Count
  nameWithType: RecordIDArray.Count
  fullName: Microsoft.Health.InvertedIndex.RecordIDArray.Count
- uid: Microsoft.Health.InvertedIndex.IRecordIDList.Count
  commentId: P:Microsoft.Health.InvertedIndex.IRecordIDList.Count
  parent: Microsoft.Health.InvertedIndex.IRecordIDList
  isExternal: false
  name: Count
  nameWithType: IRecordIDList.Count
  fullName: Microsoft.Health.InvertedIndex.IRecordIDList.Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Health.InvertedIndex.RecordIDArray.RecordIDs*
  commentId: Overload:Microsoft.Health.InvertedIndex.RecordIDArray.RecordIDs
  isExternal: false
  name: RecordIDs
  nameWithType: RecordIDArray.RecordIDs
  fullName: Microsoft.Health.InvertedIndex.RecordIDArray.RecordIDs
- uid: Microsoft.Health.InvertedIndex.RecordIDArray.DefaultValue*
  commentId: Overload:Microsoft.Health.InvertedIndex.RecordIDArray.DefaultValue
  isExternal: false
  name: DefaultValue
  nameWithType: RecordIDArray.DefaultValue
  fullName: Microsoft.Health.InvertedIndex.RecordIDArray.DefaultValue
- uid: Microsoft.Health.InvertedIndex.RecordIDArray.SerializationTokenName*
  commentId: Overload:Microsoft.Health.InvertedIndex.RecordIDArray.SerializationTokenName
  isExternal: false
  name: SerializationTokenName
  nameWithType: RecordIDArray.SerializationTokenName
  fullName: Microsoft.Health.InvertedIndex.RecordIDArray.SerializationTokenName
- uid: Microsoft.Health.InvertedIndex.ISerializableIndexType.SerializationTokenName
  commentId: P:Microsoft.Health.InvertedIndex.ISerializableIndexType.SerializationTokenName
  parent: Microsoft.Health.InvertedIndex.ISerializableIndexType
  isExternal: false
  name: SerializationTokenName
  nameWithType: ISerializableIndexType.SerializationTokenName
  fullName: Microsoft.Health.InvertedIndex.ISerializableIndexType.SerializationTokenName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.InvertedIndex.RecordIDArray.GetSkipEnumerator*
  commentId: Overload:Microsoft.Health.InvertedIndex.RecordIDArray.GetSkipEnumerator
  isExternal: false
  name: GetSkipEnumerator
  nameWithType: RecordIDArray.GetSkipEnumerator
  fullName: Microsoft.Health.InvertedIndex.RecordIDArray.GetSkipEnumerator
- uid: Microsoft.Health.InvertedIndex.ISkipEnumerable{System.UInt32}.GetSkipEnumerator
  commentId: M:Microsoft.Health.InvertedIndex.ISkipEnumerable{System.UInt32}.GetSkipEnumerator
  parent: Microsoft.Health.InvertedIndex.ISkipEnumerable{System.UInt32}
  definition: Microsoft.Health.InvertedIndex.ISkipEnumerable`1.GetSkipEnumerator
  name: GetSkipEnumerator()
  nameWithType: ISkipEnumerable<UInt32>.GetSkipEnumerator()
  fullName: Microsoft.Health.InvertedIndex.ISkipEnumerable<System.UInt32>.GetSkipEnumerator()
  nameWithType.vb: ISkipEnumerable(Of UInt32).GetSkipEnumerator()
  fullName.vb: Microsoft.Health.InvertedIndex.ISkipEnumerable(Of System.UInt32).GetSkipEnumerator()
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.ISkipEnumerable`1.GetSkipEnumerator
    name: GetSkipEnumerator
    nameWithType: ISkipEnumerable<UInt32>.GetSkipEnumerator
    fullName: Microsoft.Health.InvertedIndex.ISkipEnumerable<System.UInt32>.GetSkipEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.ISkipEnumerable`1.GetSkipEnumerator
    name: GetSkipEnumerator
    nameWithType: ISkipEnumerable(Of UInt32).GetSkipEnumerator
    fullName: Microsoft.Health.InvertedIndex.ISkipEnumerable(Of System.UInt32).GetSkipEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.ISkipEnumerator{System.UInt32}
  commentId: T:Microsoft.Health.InvertedIndex.ISkipEnumerator{System.UInt32}
  parent: Microsoft.Health.InvertedIndex
  definition: Microsoft.Health.InvertedIndex.ISkipEnumerator`1
  name: ISkipEnumerator<UInt32>
  nameWithType: ISkipEnumerator<UInt32>
  fullName: Microsoft.Health.InvertedIndex.ISkipEnumerator<System.UInt32>
  nameWithType.vb: ISkipEnumerator(Of UInt32)
  fullName.vb: Microsoft.Health.InvertedIndex.ISkipEnumerator(Of System.UInt32)
  name.vb: ISkipEnumerator(Of UInt32)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.ISkipEnumerator`1
    name: ISkipEnumerator
    nameWithType: ISkipEnumerator
    fullName: Microsoft.Health.InvertedIndex.ISkipEnumerator
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.ISkipEnumerator`1
    name: ISkipEnumerator
    nameWithType: ISkipEnumerator
    fullName: Microsoft.Health.InvertedIndex.ISkipEnumerator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.ISkipEnumerable`1.GetSkipEnumerator
  commentId: M:Microsoft.Health.InvertedIndex.ISkipEnumerable`1.GetSkipEnumerator
  isExternal: false
  name: GetSkipEnumerator()
  nameWithType: ISkipEnumerable<T>.GetSkipEnumerator()
  fullName: Microsoft.Health.InvertedIndex.ISkipEnumerable<T>.GetSkipEnumerator()
  nameWithType.vb: ISkipEnumerable(Of T).GetSkipEnumerator()
  fullName.vb: Microsoft.Health.InvertedIndex.ISkipEnumerable(Of T).GetSkipEnumerator()
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.ISkipEnumerable`1.GetSkipEnumerator
    name: GetSkipEnumerator
    nameWithType: ISkipEnumerable<T>.GetSkipEnumerator
    fullName: Microsoft.Health.InvertedIndex.ISkipEnumerable<T>.GetSkipEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.ISkipEnumerable`1.GetSkipEnumerator
    name: GetSkipEnumerator
    nameWithType: ISkipEnumerable(Of T).GetSkipEnumerator
    fullName: Microsoft.Health.InvertedIndex.ISkipEnumerable(Of T).GetSkipEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.ISkipEnumerator`1
  commentId: T:Microsoft.Health.InvertedIndex.ISkipEnumerator`1
  isExternal: false
  name: ISkipEnumerator<T>
  nameWithType: ISkipEnumerator<T>
  fullName: Microsoft.Health.InvertedIndex.ISkipEnumerator<T>
  nameWithType.vb: ISkipEnumerator(Of T)
  fullName.vb: Microsoft.Health.InvertedIndex.ISkipEnumerator(Of T)
  name.vb: ISkipEnumerator(Of T)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.ISkipEnumerator`1
    name: ISkipEnumerator
    nameWithType: ISkipEnumerator
    fullName: Microsoft.Health.InvertedIndex.ISkipEnumerator
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.ISkipEnumerator`1
    name: ISkipEnumerator
    nameWithType: ISkipEnumerator
    fullName: Microsoft.Health.InvertedIndex.ISkipEnumerator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.RecordIDArray.GetEnumerator*
  commentId: Overload:Microsoft.Health.InvertedIndex.RecordIDArray.GetEnumerator
  isExternal: false
  name: GetEnumerator
  nameWithType: RecordIDArray.GetEnumerator
  fullName: Microsoft.Health.InvertedIndex.RecordIDArray.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{System.UInt32}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{System.UInt32}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{System.UInt32}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<UInt32>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<System.UInt32>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of UInt32).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.UInt32).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<UInt32>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<System.UInt32>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of UInt32).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of System.UInt32).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{System.UInt32}
  commentId: T:System.Collections.Generic.IEnumerator{System.UInt32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<UInt32>
  nameWithType: IEnumerator<UInt32>
  fullName: System.Collections.Generic.IEnumerator<System.UInt32>
  nameWithType.vb: IEnumerator(Of UInt32)
  fullName.vb: System.Collections.Generic.IEnumerator(Of System.UInt32)
  name.vb: IEnumerator(Of UInt32)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.RecordIDArray.GetIDs*
  commentId: Overload:Microsoft.Health.InvertedIndex.RecordIDArray.GetIDs
  isExternal: false
  name: GetIDs
  nameWithType: RecordIDArray.GetIDs
  fullName: Microsoft.Health.InvertedIndex.RecordIDArray.GetIDs
- uid: Microsoft.Health.InvertedIndex.IRecordIDList.GetIDs
  commentId: M:Microsoft.Health.InvertedIndex.IRecordIDList.GetIDs
  parent: Microsoft.Health.InvertedIndex.IRecordIDList
  isExternal: false
  name: GetIDs()
  nameWithType: IRecordIDList.GetIDs()
  fullName: Microsoft.Health.InvertedIndex.IRecordIDList.GetIDs()
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.IRecordIDList.GetIDs
    name: GetIDs
    nameWithType: IRecordIDList.GetIDs
    fullName: Microsoft.Health.InvertedIndex.IRecordIDList.GetIDs
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.IRecordIDList.GetIDs
    name: GetIDs
    nameWithType: IRecordIDList.GetIDs
    fullName: Microsoft.Health.InvertedIndex.IRecordIDList.GetIDs
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.RecordIDEnumerator
  commentId: T:Microsoft.Health.InvertedIndex.RecordIDEnumerator
  parent: Microsoft.Health.InvertedIndex
  isExternal: false
  name: RecordIDEnumerator
  nameWithType: RecordIDEnumerator
  fullName: Microsoft.Health.InvertedIndex.RecordIDEnumerator
- uid: Microsoft.Health.InvertedIndex.RecordIDArray.GetPropertyEnumerator*
  commentId: Overload:Microsoft.Health.InvertedIndex.RecordIDArray.GetPropertyEnumerator
  isExternal: false
  name: GetPropertyEnumerator
  nameWithType: RecordIDArray.GetPropertyEnumerator
  fullName: Microsoft.Health.InvertedIndex.RecordIDArray.GetPropertyEnumerator
- uid: Microsoft.Health.InvertedIndex.IRecordPropertyList{System.Single}.GetPropertyEnumerator
  commentId: M:Microsoft.Health.InvertedIndex.IRecordPropertyList{System.Single}.GetPropertyEnumerator
  parent: Microsoft.Health.InvertedIndex.IRecordPropertyList{System.Single}
  definition: Microsoft.Health.InvertedIndex.IRecordPropertyList`1.GetPropertyEnumerator
  name: GetPropertyEnumerator()
  nameWithType: IRecordPropertyList<Single>.GetPropertyEnumerator()
  fullName: Microsoft.Health.InvertedIndex.IRecordPropertyList<System.Single>.GetPropertyEnumerator()
  nameWithType.vb: IRecordPropertyList(Of Single).GetPropertyEnumerator()
  fullName.vb: Microsoft.Health.InvertedIndex.IRecordPropertyList(Of System.Single).GetPropertyEnumerator()
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.IRecordPropertyList`1.GetPropertyEnumerator
    name: GetPropertyEnumerator
    nameWithType: IRecordPropertyList<Single>.GetPropertyEnumerator
    fullName: Microsoft.Health.InvertedIndex.IRecordPropertyList<System.Single>.GetPropertyEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.IRecordPropertyList`1.GetPropertyEnumerator
    name: GetPropertyEnumerator
    nameWithType: IRecordPropertyList(Of Single).GetPropertyEnumerator
    fullName: Microsoft.Health.InvertedIndex.IRecordPropertyList(Of System.Single).GetPropertyEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.RecordPropertyEnumerator{System.Single}
  commentId: T:Microsoft.Health.InvertedIndex.RecordPropertyEnumerator{System.Single}
  parent: Microsoft.Health.InvertedIndex
  definition: Microsoft.Health.InvertedIndex.RecordPropertyEnumerator`1
  name: RecordPropertyEnumerator<Single>
  nameWithType: RecordPropertyEnumerator<Single>
  fullName: Microsoft.Health.InvertedIndex.RecordPropertyEnumerator<System.Single>
  nameWithType.vb: RecordPropertyEnumerator(Of Single)
  fullName.vb: Microsoft.Health.InvertedIndex.RecordPropertyEnumerator(Of System.Single)
  name.vb: RecordPropertyEnumerator(Of Single)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.RecordPropertyEnumerator`1
    name: RecordPropertyEnumerator
    nameWithType: RecordPropertyEnumerator
    fullName: Microsoft.Health.InvertedIndex.RecordPropertyEnumerator
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.RecordPropertyEnumerator`1
    name: RecordPropertyEnumerator
    nameWithType: RecordPropertyEnumerator
    fullName: Microsoft.Health.InvertedIndex.RecordPropertyEnumerator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.IRecordPropertyList`1.GetPropertyEnumerator
  commentId: M:Microsoft.Health.InvertedIndex.IRecordPropertyList`1.GetPropertyEnumerator
  isExternal: false
  name: GetPropertyEnumerator()
  nameWithType: IRecordPropertyList<T>.GetPropertyEnumerator()
  fullName: Microsoft.Health.InvertedIndex.IRecordPropertyList<T>.GetPropertyEnumerator()
  nameWithType.vb: IRecordPropertyList(Of T).GetPropertyEnumerator()
  fullName.vb: Microsoft.Health.InvertedIndex.IRecordPropertyList(Of T).GetPropertyEnumerator()
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.IRecordPropertyList`1.GetPropertyEnumerator
    name: GetPropertyEnumerator
    nameWithType: IRecordPropertyList<T>.GetPropertyEnumerator
    fullName: Microsoft.Health.InvertedIndex.IRecordPropertyList<T>.GetPropertyEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.IRecordPropertyList`1.GetPropertyEnumerator
    name: GetPropertyEnumerator
    nameWithType: IRecordPropertyList(Of T).GetPropertyEnumerator
    fullName: Microsoft.Health.InvertedIndex.IRecordPropertyList(Of T).GetPropertyEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.RecordPropertyEnumerator`1
  commentId: T:Microsoft.Health.InvertedIndex.RecordPropertyEnumerator`1
  isExternal: false
  name: RecordPropertyEnumerator<T>
  nameWithType: RecordPropertyEnumerator<T>
  fullName: Microsoft.Health.InvertedIndex.RecordPropertyEnumerator<T>
  nameWithType.vb: RecordPropertyEnumerator(Of T)
  fullName.vb: Microsoft.Health.InvertedIndex.RecordPropertyEnumerator(Of T)
  name.vb: RecordPropertyEnumerator(Of T)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.RecordPropertyEnumerator`1
    name: RecordPropertyEnumerator
    nameWithType: RecordPropertyEnumerator
    fullName: Microsoft.Health.InvertedIndex.RecordPropertyEnumerator
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.RecordPropertyEnumerator`1
    name: RecordPropertyEnumerator
    nameWithType: RecordPropertyEnumerator
    fullName: Microsoft.Health.InvertedIndex.RecordPropertyEnumerator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.RecordIDArray.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:Microsoft.Health.InvertedIndex.RecordIDArray.System#Collections#IEnumerable#GetEnumerator
  isExternal: false
  name: IEnumerable.GetEnumerator
  nameWithType: RecordIDArray.IEnumerable.GetEnumerator
  fullName: Microsoft.Health.InvertedIndex.RecordIDArray.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: RecordIDArray.System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: Microsoft.Health.InvertedIndex.RecordIDArray.CreateEnumerator*
  commentId: Overload:Microsoft.Health.InvertedIndex.RecordIDArray.CreateEnumerator
  isExternal: false
  name: CreateEnumerator
  nameWithType: RecordIDArray.CreateEnumerator
  fullName: Microsoft.Health.InvertedIndex.RecordIDArray.CreateEnumerator
