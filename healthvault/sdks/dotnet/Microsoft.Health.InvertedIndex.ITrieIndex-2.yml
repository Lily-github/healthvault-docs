### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.InvertedIndex.ITrieIndex`2
  commentId: T:Microsoft.Health.InvertedIndex.ITrieIndex`2
  id: ITrieIndex`2
  parent: Microsoft.Health.InvertedIndex
  children: []
  langs:
  - csharp
  - vb
  name: ITrieIndex<T, TRecordIDList>
  nameWithType: ITrieIndex<T, TRecordIDList>
  fullName: Microsoft.Health.InvertedIndex.ITrieIndex<T, TRecordIDList>
  type: Interface
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/TrieIndex.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ITrieIndex
    path: ../Microsoft.Health.Utility/search/InvertedIndex/TrieIndex.cs
    startLine: 12
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  syntax:
    content: 'public interface ITrieIndex<T, TRecordIDList> : ISearchIndex<IEnumerable<T>, TRecordIDList> where TRecordIDList : class, IRecordIDList'
    content.vb: >-
      Public Interface ITrieIndex(Of T, TRecordIDList As {Class, IRecordIDList})
          Inherits ISearchIndex(Of IEnumerable(Of T), TRecordIDList)
    typeParameters:
    - id: T
    - id: TRecordIDList
  inheritedMembers:
  - Microsoft.Health.InvertedIndex.ISearchIndex{System.Collections.Generic.IEnumerable{{T}},{TRecordIDList}}.Item(System.Collections.Generic.IEnumerable{{T}})
  - Microsoft.Health.InvertedIndex.ISearchIndex{System.Collections.Generic.IEnumerable{{T}},{TRecordIDList}}.Resolve(System.Collections.Generic.IEnumerable{{T}})
  - Microsoft.Health.InvertedIndex.ISearchIndex{System.Collections.Generic.IEnumerable{{T}},{TRecordIDList}}.Resolve(System.Collections.Generic.IList{System.Collections.Generic.IEnumerable{{T}}})
  - Microsoft.Health.InvertedIndex.ISearchIndex{System.Collections.Generic.IEnumerable{{T}},{TRecordIDList}}.Resolve(System.Collections.Generic.IList{System.Collections.Generic.IEnumerable{{T}}},System.Int32,System.Int32)
  - Microsoft.Health.InvertedIndex.ISearchIndex{System.Collections.Generic.IEnumerable{{T}},{TRecordIDList}}.Resolve(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{{T}}})
  - Microsoft.Health.InvertedIndex.ISearchIndex{System.Collections.Generic.IEnumerable{{T}},{TRecordIDList}}.Resolve(System.Collections.Generic.IList{System.Collections.Generic.IEnumerable{{T}}},Microsoft.Health.StructList{Microsoft.Health.InvertedIndex.RecordIDEnumerator}@)
  - Microsoft.Health.InvertedIndex.ISearchIndex{System.Collections.Generic.IEnumerable{{T}},{TRecordIDList}}.Resolve(System.Collections.Generic.IList{System.Collections.Generic.IEnumerable{{T}}},System.Int32,System.Int32,Microsoft.Health.StructList{Microsoft.Health.InvertedIndex.RecordIDEnumerator}@)
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.InvertedIndex.ITrieIndex`2.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  nameWithType.vb: ITrieIndex(Of T, TRecordIDList)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Microsoft.Health.InvertedIndex.ITrieIndex(Of T, TRecordIDList)
  name.vb: ITrieIndex(Of T, TRecordIDList)
references:
- uid: Microsoft.Health.InvertedIndex
  commentId: N:Microsoft.Health.InvertedIndex
  isExternal: false
  name: Microsoft.Health.InvertedIndex
  nameWithType: Microsoft.Health.InvertedIndex
  fullName: Microsoft.Health.InvertedIndex
- uid: Microsoft.Health.InvertedIndex.ISearchIndex{System.Collections.Generic.IEnumerable{{T}},{TRecordIDList}}.Item(System.Collections.Generic.IEnumerable{{T}})
  commentId: P:Microsoft.Health.InvertedIndex.ISearchIndex{System.Collections.Generic.IEnumerable{`0},`1}.Item(System.Collections.Generic.IEnumerable{`0})
  parent: Microsoft.Health.InvertedIndex.ISearchIndex{System.Collections.Generic.IEnumerable{{T}},{TRecordIDList}}
  definition: Microsoft.Health.InvertedIndex.ISearchIndex`2.Item(`0)
  name: Item[IEnumerable<T>]
  nameWithType: ISearchIndex<IEnumerable<T>, TRecordIDList>.Item[IEnumerable<T>]
  fullName: Microsoft.Health.InvertedIndex.ISearchIndex<System.Collections.Generic.IEnumerable<T>, TRecordIDList>.Item[System.Collections.Generic.IEnumerable<T>]
  nameWithType.vb: ISearchIndex(Of IEnumerable(Of T), TRecordIDList).Item(IEnumerable(Of T))
  fullName.vb: Microsoft.Health.InvertedIndex.ISearchIndex(Of System.Collections.Generic.IEnumerable(Of T), TRecordIDList).Item(System.Collections.Generic.IEnumerable(Of T))
  name.vb: Item(IEnumerable(Of T))
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndex`2.Item(`0)
    name: Item
    nameWithType: ISearchIndex<IEnumerable<T>, TRecordIDList>.Item
    fullName: Microsoft.Health.InvertedIndex.ISearchIndex<System.Collections.Generic.IEnumerable<T>, TRecordIDList>.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndex`2.Item(`0)
    name: Item
    nameWithType: ISearchIndex(Of IEnumerable(Of T), TRecordIDList).Item
    fullName: Microsoft.Health.InvertedIndex.ISearchIndex(Of System.Collections.Generic.IEnumerable(Of T), TRecordIDList).Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.ISearchIndex{System.Collections.Generic.IEnumerable{{T}},{TRecordIDList}}.Resolve(System.Collections.Generic.IEnumerable{{T}})
  commentId: M:Microsoft.Health.InvertedIndex.ISearchIndex{System.Collections.Generic.IEnumerable{`0},`1}.Resolve(System.Collections.Generic.IEnumerable{`0})
  parent: Microsoft.Health.InvertedIndex.ISearchIndex{System.Collections.Generic.IEnumerable{{T}},{TRecordIDList}}
  definition: Microsoft.Health.InvertedIndex.ISearchIndex`2.Resolve(`0)
  name: Resolve(IEnumerable<T>)
  nameWithType: ISearchIndex<IEnumerable<T>, TRecordIDList>.Resolve(IEnumerable<T>)
  fullName: Microsoft.Health.InvertedIndex.ISearchIndex<System.Collections.Generic.IEnumerable<T>, TRecordIDList>.Resolve(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: ISearchIndex(Of IEnumerable(Of T), TRecordIDList).Resolve(IEnumerable(Of T))
  fullName.vb: Microsoft.Health.InvertedIndex.ISearchIndex(Of System.Collections.Generic.IEnumerable(Of T), TRecordIDList).Resolve(System.Collections.Generic.IEnumerable(Of T))
  name.vb: Resolve(IEnumerable(Of T))
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndex`2.Resolve(`0)
    name: Resolve
    nameWithType: ISearchIndex<IEnumerable<T>, TRecordIDList>.Resolve
    fullName: Microsoft.Health.InvertedIndex.ISearchIndex<System.Collections.Generic.IEnumerable<T>, TRecordIDList>.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndex`2.Resolve(`0)
    name: Resolve
    nameWithType: ISearchIndex(Of IEnumerable(Of T), TRecordIDList).Resolve
    fullName: Microsoft.Health.InvertedIndex.ISearchIndex(Of System.Collections.Generic.IEnumerable(Of T), TRecordIDList).Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.ISearchIndex{System.Collections.Generic.IEnumerable{{T}},{TRecordIDList}}.Resolve(System.Collections.Generic.IList{System.Collections.Generic.IEnumerable{{T}}})
  commentId: M:Microsoft.Health.InvertedIndex.ISearchIndex{System.Collections.Generic.IEnumerable{`0},`1}.Resolve(System.Collections.Generic.IList{System.Collections.Generic.IEnumerable{`0}})
  parent: Microsoft.Health.InvertedIndex.ISearchIndex{System.Collections.Generic.IEnumerable{{T}},{TRecordIDList}}
  definition: Microsoft.Health.InvertedIndex.ISearchIndex`2.Resolve(System.Collections.Generic.IList{`0})
  name: Resolve(IList<IEnumerable<T>>)
  nameWithType: ISearchIndex<IEnumerable<T>, TRecordIDList>.Resolve(IList<IEnumerable<T>>)
  fullName: Microsoft.Health.InvertedIndex.ISearchIndex<System.Collections.Generic.IEnumerable<T>, TRecordIDList>.Resolve(System.Collections.Generic.IList<System.Collections.Generic.IEnumerable<T>>)
  nameWithType.vb: ISearchIndex(Of IEnumerable(Of T), TRecordIDList).Resolve(IList(Of IEnumerable(Of T)))
  fullName.vb: Microsoft.Health.InvertedIndex.ISearchIndex(Of System.Collections.Generic.IEnumerable(Of T), TRecordIDList).Resolve(System.Collections.Generic.IList(Of System.Collections.Generic.IEnumerable(Of T)))
  name.vb: Resolve(IList(Of IEnumerable(Of T)))
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndex`2.Resolve(System.Collections.Generic.IList{`0})
    name: Resolve
    nameWithType: ISearchIndex<IEnumerable<T>, TRecordIDList>.Resolve
    fullName: Microsoft.Health.InvertedIndex.ISearchIndex<System.Collections.Generic.IEnumerable<T>, TRecordIDList>.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndex`2.Resolve(System.Collections.Generic.IList{`0})
    name: Resolve
    nameWithType: ISearchIndex(Of IEnumerable(Of T), TRecordIDList).Resolve
    fullName: Microsoft.Health.InvertedIndex.ISearchIndex(Of System.Collections.Generic.IEnumerable(Of T), TRecordIDList).Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.ISearchIndex{System.Collections.Generic.IEnumerable{{T}},{TRecordIDList}}.Resolve(System.Collections.Generic.IList{System.Collections.Generic.IEnumerable{{T}}},System.Int32,System.Int32)
  commentId: M:Microsoft.Health.InvertedIndex.ISearchIndex{System.Collections.Generic.IEnumerable{`0},`1}.Resolve(System.Collections.Generic.IList{System.Collections.Generic.IEnumerable{`0}},System.Int32,System.Int32)
  parent: Microsoft.Health.InvertedIndex.ISearchIndex{System.Collections.Generic.IEnumerable{{T}},{TRecordIDList}}
  definition: Microsoft.Health.InvertedIndex.ISearchIndex`2.Resolve(System.Collections.Generic.IList{`0},System.Int32,System.Int32)
  name: Resolve(IList<IEnumerable<T>>, Int32, Int32)
  nameWithType: ISearchIndex<IEnumerable<T>, TRecordIDList>.Resolve(IList<IEnumerable<T>>, Int32, Int32)
  fullName: Microsoft.Health.InvertedIndex.ISearchIndex<System.Collections.Generic.IEnumerable<T>, TRecordIDList>.Resolve(System.Collections.Generic.IList<System.Collections.Generic.IEnumerable<T>>, System.Int32, System.Int32)
  nameWithType.vb: ISearchIndex(Of IEnumerable(Of T), TRecordIDList).Resolve(IList(Of IEnumerable(Of T)), Int32, Int32)
  fullName.vb: Microsoft.Health.InvertedIndex.ISearchIndex(Of System.Collections.Generic.IEnumerable(Of T), TRecordIDList).Resolve(System.Collections.Generic.IList(Of System.Collections.Generic.IEnumerable(Of T)), System.Int32, System.Int32)
  name.vb: Resolve(IList(Of IEnumerable(Of T)), Int32, Int32)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndex`2.Resolve(System.Collections.Generic.IList{`0},System.Int32,System.Int32)
    name: Resolve
    nameWithType: ISearchIndex<IEnumerable<T>, TRecordIDList>.Resolve
    fullName: Microsoft.Health.InvertedIndex.ISearchIndex<System.Collections.Generic.IEnumerable<T>, TRecordIDList>.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndex`2.Resolve(System.Collections.Generic.IList{`0},System.Int32,System.Int32)
    name: Resolve
    nameWithType: ISearchIndex(Of IEnumerable(Of T), TRecordIDList).Resolve
    fullName: Microsoft.Health.InvertedIndex.ISearchIndex(Of System.Collections.Generic.IEnumerable(Of T), TRecordIDList).Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.ISearchIndex{System.Collections.Generic.IEnumerable{{T}},{TRecordIDList}}.Resolve(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{{T}}})
  commentId: M:Microsoft.Health.InvertedIndex.ISearchIndex{System.Collections.Generic.IEnumerable{`0},`1}.Resolve(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{`0}})
  parent: Microsoft.Health.InvertedIndex.ISearchIndex{System.Collections.Generic.IEnumerable{{T}},{TRecordIDList}}
  definition: Microsoft.Health.InvertedIndex.ISearchIndex`2.Resolve(System.Collections.Generic.IEnumerable{`0})
  name: Resolve(IEnumerable<IEnumerable<T>>)
  nameWithType: ISearchIndex<IEnumerable<T>, TRecordIDList>.Resolve(IEnumerable<IEnumerable<T>>)
  fullName: Microsoft.Health.InvertedIndex.ISearchIndex<System.Collections.Generic.IEnumerable<T>, TRecordIDList>.Resolve(System.Collections.Generic.IEnumerable<System.Collections.Generic.IEnumerable<T>>)
  nameWithType.vb: ISearchIndex(Of IEnumerable(Of T), TRecordIDList).Resolve(IEnumerable(Of IEnumerable(Of T)))
  fullName.vb: Microsoft.Health.InvertedIndex.ISearchIndex(Of System.Collections.Generic.IEnumerable(Of T), TRecordIDList).Resolve(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.IEnumerable(Of T)))
  name.vb: Resolve(IEnumerable(Of IEnumerable(Of T)))
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndex`2.Resolve(System.Collections.Generic.IEnumerable{`0})
    name: Resolve
    nameWithType: ISearchIndex<IEnumerable<T>, TRecordIDList>.Resolve
    fullName: Microsoft.Health.InvertedIndex.ISearchIndex<System.Collections.Generic.IEnumerable<T>, TRecordIDList>.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndex`2.Resolve(System.Collections.Generic.IEnumerable{`0})
    name: Resolve
    nameWithType: ISearchIndex(Of IEnumerable(Of T), TRecordIDList).Resolve
    fullName: Microsoft.Health.InvertedIndex.ISearchIndex(Of System.Collections.Generic.IEnumerable(Of T), TRecordIDList).Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.ISearchIndex{System.Collections.Generic.IEnumerable{{T}},{TRecordIDList}}.Resolve(System.Collections.Generic.IList{System.Collections.Generic.IEnumerable{{T}}},Microsoft.Health.StructList{Microsoft.Health.InvertedIndex.RecordIDEnumerator}@)
  commentId: M:Microsoft.Health.InvertedIndex.ISearchIndex{System.Collections.Generic.IEnumerable{`0},`1}.Resolve(System.Collections.Generic.IList{System.Collections.Generic.IEnumerable{`0}},Microsoft.Health.StructList{Microsoft.Health.InvertedIndex.RecordIDEnumerator}@)
  parent: Microsoft.Health.InvertedIndex.ISearchIndex{System.Collections.Generic.IEnumerable{{T}},{TRecordIDList}}
  definition: Microsoft.Health.InvertedIndex.ISearchIndex`2.Resolve(System.Collections.Generic.IList{`0},Microsoft.Health.StructList{Microsoft.Health.InvertedIndex.RecordIDEnumerator}@)
  name: Resolve(IList<IEnumerable<T>>, StructList<RecordIDEnumerator>)
  nameWithType: ISearchIndex<IEnumerable<T>, TRecordIDList>.Resolve(IList<IEnumerable<T>>, StructList<RecordIDEnumerator>)
  fullName: Microsoft.Health.InvertedIndex.ISearchIndex<System.Collections.Generic.IEnumerable<T>, TRecordIDList>.Resolve(System.Collections.Generic.IList<System.Collections.Generic.IEnumerable<T>>, Microsoft.Health.StructList<Microsoft.Health.InvertedIndex.RecordIDEnumerator>)
  nameWithType.vb: ISearchIndex(Of IEnumerable(Of T), TRecordIDList).Resolve(IList(Of IEnumerable(Of T)), StructList(Of RecordIDEnumerator))
  fullName.vb: Microsoft.Health.InvertedIndex.ISearchIndex(Of System.Collections.Generic.IEnumerable(Of T), TRecordIDList).Resolve(System.Collections.Generic.IList(Of System.Collections.Generic.IEnumerable(Of T)), Microsoft.Health.StructList(Of Microsoft.Health.InvertedIndex.RecordIDEnumerator))
  name.vb: Resolve(IList(Of IEnumerable(Of T)), StructList(Of RecordIDEnumerator))
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndex`2.Resolve(System.Collections.Generic.IList{`0},Microsoft.Health.StructList{Microsoft.Health.InvertedIndex.RecordIDEnumerator}@)
    name: Resolve
    nameWithType: ISearchIndex<IEnumerable<T>, TRecordIDList>.Resolve
    fullName: Microsoft.Health.InvertedIndex.ISearchIndex<System.Collections.Generic.IEnumerable<T>, TRecordIDList>.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.StructList`1
    name: StructList
    nameWithType: StructList
    fullName: Microsoft.Health.StructList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.InvertedIndex.RecordIDEnumerator
    name: RecordIDEnumerator
    nameWithType: RecordIDEnumerator
    fullName: Microsoft.Health.InvertedIndex.RecordIDEnumerator
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndex`2.Resolve(System.Collections.Generic.IList{`0},Microsoft.Health.StructList{Microsoft.Health.InvertedIndex.RecordIDEnumerator}@)
    name: Resolve
    nameWithType: ISearchIndex(Of IEnumerable(Of T), TRecordIDList).Resolve
    fullName: Microsoft.Health.InvertedIndex.ISearchIndex(Of System.Collections.Generic.IEnumerable(Of T), TRecordIDList).Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.StructList`1
    name: StructList
    nameWithType: StructList
    fullName: Microsoft.Health.StructList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.InvertedIndex.RecordIDEnumerator
    name: RecordIDEnumerator
    nameWithType: RecordIDEnumerator
    fullName: Microsoft.Health.InvertedIndex.RecordIDEnumerator
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.ISearchIndex{System.Collections.Generic.IEnumerable{{T}},{TRecordIDList}}.Resolve(System.Collections.Generic.IList{System.Collections.Generic.IEnumerable{{T}}},System.Int32,System.Int32,Microsoft.Health.StructList{Microsoft.Health.InvertedIndex.RecordIDEnumerator}@)
  commentId: M:Microsoft.Health.InvertedIndex.ISearchIndex{System.Collections.Generic.IEnumerable{`0},`1}.Resolve(System.Collections.Generic.IList{System.Collections.Generic.IEnumerable{`0}},System.Int32,System.Int32,Microsoft.Health.StructList{Microsoft.Health.InvertedIndex.RecordIDEnumerator}@)
  parent: Microsoft.Health.InvertedIndex.ISearchIndex{System.Collections.Generic.IEnumerable{{T}},{TRecordIDList}}
  definition: Microsoft.Health.InvertedIndex.ISearchIndex`2.Resolve(System.Collections.Generic.IList{`0},System.Int32,System.Int32,Microsoft.Health.StructList{Microsoft.Health.InvertedIndex.RecordIDEnumerator}@)
  name: Resolve(IList<IEnumerable<T>>, Int32, Int32, StructList<RecordIDEnumerator>)
  nameWithType: ISearchIndex<IEnumerable<T>, TRecordIDList>.Resolve(IList<IEnumerable<T>>, Int32, Int32, StructList<RecordIDEnumerator>)
  fullName: Microsoft.Health.InvertedIndex.ISearchIndex<System.Collections.Generic.IEnumerable<T>, TRecordIDList>.Resolve(System.Collections.Generic.IList<System.Collections.Generic.IEnumerable<T>>, System.Int32, System.Int32, Microsoft.Health.StructList<Microsoft.Health.InvertedIndex.RecordIDEnumerator>)
  nameWithType.vb: ISearchIndex(Of IEnumerable(Of T), TRecordIDList).Resolve(IList(Of IEnumerable(Of T)), Int32, Int32, StructList(Of RecordIDEnumerator))
  fullName.vb: Microsoft.Health.InvertedIndex.ISearchIndex(Of System.Collections.Generic.IEnumerable(Of T), TRecordIDList).Resolve(System.Collections.Generic.IList(Of System.Collections.Generic.IEnumerable(Of T)), System.Int32, System.Int32, Microsoft.Health.StructList(Of Microsoft.Health.InvertedIndex.RecordIDEnumerator))
  name.vb: Resolve(IList(Of IEnumerable(Of T)), Int32, Int32, StructList(Of RecordIDEnumerator))
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndex`2.Resolve(System.Collections.Generic.IList{`0},System.Int32,System.Int32,Microsoft.Health.StructList{Microsoft.Health.InvertedIndex.RecordIDEnumerator}@)
    name: Resolve
    nameWithType: ISearchIndex<IEnumerable<T>, TRecordIDList>.Resolve
    fullName: Microsoft.Health.InvertedIndex.ISearchIndex<System.Collections.Generic.IEnumerable<T>, TRecordIDList>.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.StructList`1
    name: StructList
    nameWithType: StructList
    fullName: Microsoft.Health.StructList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.InvertedIndex.RecordIDEnumerator
    name: RecordIDEnumerator
    nameWithType: RecordIDEnumerator
    fullName: Microsoft.Health.InvertedIndex.RecordIDEnumerator
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndex`2.Resolve(System.Collections.Generic.IList{`0},System.Int32,System.Int32,Microsoft.Health.StructList{Microsoft.Health.InvertedIndex.RecordIDEnumerator}@)
    name: Resolve
    nameWithType: ISearchIndex(Of IEnumerable(Of T), TRecordIDList).Resolve
    fullName: Microsoft.Health.InvertedIndex.ISearchIndex(Of System.Collections.Generic.IEnumerable(Of T), TRecordIDList).Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.StructList`1
    name: StructList
    nameWithType: StructList
    fullName: Microsoft.Health.StructList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.InvertedIndex.RecordIDEnumerator
    name: RecordIDEnumerator
    nameWithType: RecordIDEnumerator
    fullName: Microsoft.Health.InvertedIndex.RecordIDEnumerator
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.ITrieIndex`2.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<ITrieIndex<T, TRecordIDList>>()
  nameWithType: TypeHelper.ValueOrDbNull<ITrieIndex<T, TRecordIDList>>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.InvertedIndex.ITrieIndex<T, TRecordIDList>>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of ITrieIndex(Of T, TRecordIDList))()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.InvertedIndex.ITrieIndex(Of T, TRecordIDList))()
  name.vb: ValueOrDbNull(Of ITrieIndex(Of T, TRecordIDList))()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<ITrieIndex<T, TRecordIDList>>
    nameWithType: TypeHelper.ValueOrDbNull<ITrieIndex<T, TRecordIDList>>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.InvertedIndex.ITrieIndex<T, TRecordIDList>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of ITrieIndex(Of T, TRecordIDList))
    nameWithType: TypeHelper.ValueOrDbNull(Of ITrieIndex(Of T, TRecordIDList))
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.InvertedIndex.ITrieIndex(Of T, TRecordIDList))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.ISearchIndex`2.Item(`0)
  commentId: P:Microsoft.Health.InvertedIndex.ISearchIndex`2.Item(`0)
  isExternal: false
  name: Item[T]
  nameWithType: ISearchIndex<T, TRecordIDList>.Item[T]
  fullName: Microsoft.Health.InvertedIndex.ISearchIndex<T, TRecordIDList>.Item[T]
  nameWithType.vb: ISearchIndex(Of T, TRecordIDList).Item(T)
  fullName.vb: Microsoft.Health.InvertedIndex.ISearchIndex(Of T, TRecordIDList).Item(T)
  name.vb: Item(T)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndex`2.Item(`0)
    name: Item
    nameWithType: ISearchIndex<T, TRecordIDList>.Item
    fullName: Microsoft.Health.InvertedIndex.ISearchIndex<T, TRecordIDList>.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - name: T
    nameWithType: T
    fullName: T
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndex`2.Item(`0)
    name: Item
    nameWithType: ISearchIndex(Of T, TRecordIDList).Item
    fullName: Microsoft.Health.InvertedIndex.ISearchIndex(Of T, TRecordIDList).Item
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.ISearchIndex{System.Collections.Generic.IEnumerable{{T}},{TRecordIDList}}
  commentId: T:Microsoft.Health.InvertedIndex.ISearchIndex{System.Collections.Generic.IEnumerable{`0},`1}
  parent: Microsoft.Health.InvertedIndex
  definition: Microsoft.Health.InvertedIndex.ISearchIndex`2
  name: ISearchIndex<IEnumerable<T>, TRecordIDList>
  nameWithType: ISearchIndex<IEnumerable<T>, TRecordIDList>
  fullName: Microsoft.Health.InvertedIndex.ISearchIndex<System.Collections.Generic.IEnumerable<T>, TRecordIDList>
  nameWithType.vb: ISearchIndex(Of IEnumerable(Of T), TRecordIDList)
  fullName.vb: Microsoft.Health.InvertedIndex.ISearchIndex(Of System.Collections.Generic.IEnumerable(Of T), TRecordIDList)
  name.vb: ISearchIndex(Of IEnumerable(Of T), TRecordIDList)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndex`2
    name: ISearchIndex
    nameWithType: ISearchIndex
    fullName: Microsoft.Health.InvertedIndex.ISearchIndex
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRecordIDList
    nameWithType: TRecordIDList
    fullName: TRecordIDList
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndex`2
    name: ISearchIndex
    nameWithType: ISearchIndex
    fullName: Microsoft.Health.InvertedIndex.ISearchIndex
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRecordIDList
    nameWithType: TRecordIDList
    fullName: TRecordIDList
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.ISearchIndex`2.Resolve(`0)
  commentId: M:Microsoft.Health.InvertedIndex.ISearchIndex`2.Resolve(`0)
  isExternal: false
  name: Resolve(T)
  nameWithType: ISearchIndex<T, TRecordIDList>.Resolve(T)
  fullName: Microsoft.Health.InvertedIndex.ISearchIndex<T, TRecordIDList>.Resolve(T)
  nameWithType.vb: ISearchIndex(Of T, TRecordIDList).Resolve(T)
  fullName.vb: Microsoft.Health.InvertedIndex.ISearchIndex(Of T, TRecordIDList).Resolve(T)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndex`2.Resolve(`0)
    name: Resolve
    nameWithType: ISearchIndex<T, TRecordIDList>.Resolve
    fullName: Microsoft.Health.InvertedIndex.ISearchIndex<T, TRecordIDList>.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndex`2.Resolve(`0)
    name: Resolve
    nameWithType: ISearchIndex(Of T, TRecordIDList).Resolve
    fullName: Microsoft.Health.InvertedIndex.ISearchIndex(Of T, TRecordIDList).Resolve
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.ISearchIndex`2.Resolve(System.Collections.Generic.IList{`0})
  commentId: M:Microsoft.Health.InvertedIndex.ISearchIndex`2.Resolve(System.Collections.Generic.IList{`0})
  isExternal: true
  name: Resolve(IList<T>)
  nameWithType: ISearchIndex<T, TRecordIDList>.Resolve(IList<T>)
  fullName: Microsoft.Health.InvertedIndex.ISearchIndex<T, TRecordIDList>.Resolve(System.Collections.Generic.IList<T>)
  nameWithType.vb: ISearchIndex(Of T, TRecordIDList).Resolve(IList(Of T))
  fullName.vb: Microsoft.Health.InvertedIndex.ISearchIndex(Of T, TRecordIDList).Resolve(System.Collections.Generic.IList(Of T))
  name.vb: Resolve(IList(Of T))
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndex`2.Resolve(System.Collections.Generic.IList{`0})
    name: Resolve
    nameWithType: ISearchIndex<T, TRecordIDList>.Resolve
    fullName: Microsoft.Health.InvertedIndex.ISearchIndex<T, TRecordIDList>.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndex`2.Resolve(System.Collections.Generic.IList{`0})
    name: Resolve
    nameWithType: ISearchIndex(Of T, TRecordIDList).Resolve
    fullName: Microsoft.Health.InvertedIndex.ISearchIndex(Of T, TRecordIDList).Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.ISearchIndex`2.Resolve(System.Collections.Generic.IList{`0},System.Int32,System.Int32)
  commentId: M:Microsoft.Health.InvertedIndex.ISearchIndex`2.Resolve(System.Collections.Generic.IList{`0},System.Int32,System.Int32)
  isExternal: true
  name: Resolve(IList<T>, Int32, Int32)
  nameWithType: ISearchIndex<T, TRecordIDList>.Resolve(IList<T>, Int32, Int32)
  fullName: Microsoft.Health.InvertedIndex.ISearchIndex<T, TRecordIDList>.Resolve(System.Collections.Generic.IList<T>, System.Int32, System.Int32)
  nameWithType.vb: ISearchIndex(Of T, TRecordIDList).Resolve(IList(Of T), Int32, Int32)
  fullName.vb: Microsoft.Health.InvertedIndex.ISearchIndex(Of T, TRecordIDList).Resolve(System.Collections.Generic.IList(Of T), System.Int32, System.Int32)
  name.vb: Resolve(IList(Of T), Int32, Int32)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndex`2.Resolve(System.Collections.Generic.IList{`0},System.Int32,System.Int32)
    name: Resolve
    nameWithType: ISearchIndex<T, TRecordIDList>.Resolve
    fullName: Microsoft.Health.InvertedIndex.ISearchIndex<T, TRecordIDList>.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndex`2.Resolve(System.Collections.Generic.IList{`0},System.Int32,System.Int32)
    name: Resolve
    nameWithType: ISearchIndex(Of T, TRecordIDList).Resolve
    fullName: Microsoft.Health.InvertedIndex.ISearchIndex(Of T, TRecordIDList).Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.ISearchIndex`2.Resolve(System.Collections.Generic.IEnumerable{`0})
  commentId: M:Microsoft.Health.InvertedIndex.ISearchIndex`2.Resolve(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: Resolve(IEnumerable<T>)
  nameWithType: ISearchIndex<T, TRecordIDList>.Resolve(IEnumerable<T>)
  fullName: Microsoft.Health.InvertedIndex.ISearchIndex<T, TRecordIDList>.Resolve(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: ISearchIndex(Of T, TRecordIDList).Resolve(IEnumerable(Of T))
  fullName.vb: Microsoft.Health.InvertedIndex.ISearchIndex(Of T, TRecordIDList).Resolve(System.Collections.Generic.IEnumerable(Of T))
  name.vb: Resolve(IEnumerable(Of T))
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndex`2.Resolve(System.Collections.Generic.IEnumerable{`0})
    name: Resolve
    nameWithType: ISearchIndex<T, TRecordIDList>.Resolve
    fullName: Microsoft.Health.InvertedIndex.ISearchIndex<T, TRecordIDList>.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndex`2.Resolve(System.Collections.Generic.IEnumerable{`0})
    name: Resolve
    nameWithType: ISearchIndex(Of T, TRecordIDList).Resolve
    fullName: Microsoft.Health.InvertedIndex.ISearchIndex(Of T, TRecordIDList).Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.ISearchIndex`2.Resolve(System.Collections.Generic.IList{`0},Microsoft.Health.StructList{Microsoft.Health.InvertedIndex.RecordIDEnumerator}@)
  commentId: M:Microsoft.Health.InvertedIndex.ISearchIndex`2.Resolve(System.Collections.Generic.IList{`0},Microsoft.Health.StructList{Microsoft.Health.InvertedIndex.RecordIDEnumerator}@)
  isExternal: true
  name: Resolve(IList<T>, StructList<RecordIDEnumerator>)
  nameWithType: ISearchIndex<T, TRecordIDList>.Resolve(IList<T>, StructList<RecordIDEnumerator>)
  fullName: Microsoft.Health.InvertedIndex.ISearchIndex<T, TRecordIDList>.Resolve(System.Collections.Generic.IList<T>, Microsoft.Health.StructList<Microsoft.Health.InvertedIndex.RecordIDEnumerator>)
  nameWithType.vb: ISearchIndex(Of T, TRecordIDList).Resolve(IList(Of T), StructList(Of RecordIDEnumerator))
  fullName.vb: Microsoft.Health.InvertedIndex.ISearchIndex(Of T, TRecordIDList).Resolve(System.Collections.Generic.IList(Of T), Microsoft.Health.StructList(Of Microsoft.Health.InvertedIndex.RecordIDEnumerator))
  name.vb: Resolve(IList(Of T), StructList(Of RecordIDEnumerator))
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndex`2.Resolve(System.Collections.Generic.IList{`0},Microsoft.Health.StructList{Microsoft.Health.InvertedIndex.RecordIDEnumerator}@)
    name: Resolve
    nameWithType: ISearchIndex<T, TRecordIDList>.Resolve
    fullName: Microsoft.Health.InvertedIndex.ISearchIndex<T, TRecordIDList>.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.StructList`1
    name: StructList
    nameWithType: StructList
    fullName: Microsoft.Health.StructList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.InvertedIndex.RecordIDEnumerator
    name: RecordIDEnumerator
    nameWithType: RecordIDEnumerator
    fullName: Microsoft.Health.InvertedIndex.RecordIDEnumerator
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndex`2.Resolve(System.Collections.Generic.IList{`0},Microsoft.Health.StructList{Microsoft.Health.InvertedIndex.RecordIDEnumerator}@)
    name: Resolve
    nameWithType: ISearchIndex(Of T, TRecordIDList).Resolve
    fullName: Microsoft.Health.InvertedIndex.ISearchIndex(Of T, TRecordIDList).Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.StructList`1
    name: StructList
    nameWithType: StructList
    fullName: Microsoft.Health.StructList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.InvertedIndex.RecordIDEnumerator
    name: RecordIDEnumerator
    nameWithType: RecordIDEnumerator
    fullName: Microsoft.Health.InvertedIndex.RecordIDEnumerator
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.ISearchIndex`2.Resolve(System.Collections.Generic.IList{`0},System.Int32,System.Int32,Microsoft.Health.StructList{Microsoft.Health.InvertedIndex.RecordIDEnumerator}@)
  commentId: M:Microsoft.Health.InvertedIndex.ISearchIndex`2.Resolve(System.Collections.Generic.IList{`0},System.Int32,System.Int32,Microsoft.Health.StructList{Microsoft.Health.InvertedIndex.RecordIDEnumerator}@)
  isExternal: true
  name: Resolve(IList<T>, Int32, Int32, StructList<RecordIDEnumerator>)
  nameWithType: ISearchIndex<T, TRecordIDList>.Resolve(IList<T>, Int32, Int32, StructList<RecordIDEnumerator>)
  fullName: Microsoft.Health.InvertedIndex.ISearchIndex<T, TRecordIDList>.Resolve(System.Collections.Generic.IList<T>, System.Int32, System.Int32, Microsoft.Health.StructList<Microsoft.Health.InvertedIndex.RecordIDEnumerator>)
  nameWithType.vb: ISearchIndex(Of T, TRecordIDList).Resolve(IList(Of T), Int32, Int32, StructList(Of RecordIDEnumerator))
  fullName.vb: Microsoft.Health.InvertedIndex.ISearchIndex(Of T, TRecordIDList).Resolve(System.Collections.Generic.IList(Of T), System.Int32, System.Int32, Microsoft.Health.StructList(Of Microsoft.Health.InvertedIndex.RecordIDEnumerator))
  name.vb: Resolve(IList(Of T), Int32, Int32, StructList(Of RecordIDEnumerator))
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndex`2.Resolve(System.Collections.Generic.IList{`0},System.Int32,System.Int32,Microsoft.Health.StructList{Microsoft.Health.InvertedIndex.RecordIDEnumerator}@)
    name: Resolve
    nameWithType: ISearchIndex<T, TRecordIDList>.Resolve
    fullName: Microsoft.Health.InvertedIndex.ISearchIndex<T, TRecordIDList>.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.StructList`1
    name: StructList
    nameWithType: StructList
    fullName: Microsoft.Health.StructList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.InvertedIndex.RecordIDEnumerator
    name: RecordIDEnumerator
    nameWithType: RecordIDEnumerator
    fullName: Microsoft.Health.InvertedIndex.RecordIDEnumerator
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndex`2.Resolve(System.Collections.Generic.IList{`0},System.Int32,System.Int32,Microsoft.Health.StructList{Microsoft.Health.InvertedIndex.RecordIDEnumerator}@)
    name: Resolve
    nameWithType: ISearchIndex(Of T, TRecordIDList).Resolve
    fullName: Microsoft.Health.InvertedIndex.ISearchIndex(Of T, TRecordIDList).Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.StructList`1
    name: StructList
    nameWithType: StructList
    fullName: Microsoft.Health.StructList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.InvertedIndex.RecordIDEnumerator
    name: RecordIDEnumerator
    nameWithType: RecordIDEnumerator
    fullName: Microsoft.Health.InvertedIndex.RecordIDEnumerator
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.InvertedIndex.ISearchIndex`2
  commentId: T:Microsoft.Health.InvertedIndex.ISearchIndex`2
  isExternal: false
  name: ISearchIndex<T, TRecordIDList>
  nameWithType: ISearchIndex<T, TRecordIDList>
  fullName: Microsoft.Health.InvertedIndex.ISearchIndex<T, TRecordIDList>
  nameWithType.vb: ISearchIndex(Of T, TRecordIDList)
  fullName.vb: Microsoft.Health.InvertedIndex.ISearchIndex(Of T, TRecordIDList)
  name.vb: ISearchIndex(Of T, TRecordIDList)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndex`2
    name: ISearchIndex
    nameWithType: ISearchIndex
    fullName: Microsoft.Health.InvertedIndex.ISearchIndex
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRecordIDList
    nameWithType: TRecordIDList
    fullName: TRecordIDList
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndex`2
    name: ISearchIndex
    nameWithType: ISearchIndex
    fullName: Microsoft.Health.InvertedIndex.ISearchIndex
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRecordIDList
    nameWithType: TRecordIDList
    fullName: TRecordIDList
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
