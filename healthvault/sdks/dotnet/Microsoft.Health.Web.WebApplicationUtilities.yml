### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Web.WebApplicationUtilities
  commentId: T:Microsoft.Health.Web.WebApplicationUtilities
  id: WebApplicationUtilities
  parent: Microsoft.Health.Web
  children:
  - Microsoft.Health.Web.WebApplicationUtilities.AnonymousConnection
  - Microsoft.Health.Web.WebApplicationUtilities.ApplicationAuthenticationCredential
  - Microsoft.Health.Web.WebApplicationUtilities.ApplicationConnection
  - Microsoft.Health.Web.WebApplicationUtilities.Compress(System.String)
  - Microsoft.Health.Web.WebApplicationUtilities.Compress(System.String,System.Int32@)
  - Microsoft.Health.Web.WebApplicationUtilities.ConstructShellTargetUrl(System.Web.HttpContext,Microsoft.Health.ShellRedirectParameters)
  - Microsoft.Health.Web.WebApplicationUtilities.ConstructShellTargetUrl(System.Web.HttpContext,System.String)
  - Microsoft.Health.Web.WebApplicationUtilities.ConstructShellTargetUrl(System.Web.HttpContext,System.String,System.String)
  - Microsoft.Health.Web.WebApplicationUtilities.ConstructShellTargetUrl(System.Web.HttpContext,System.String,System.String,System.String)
  - Microsoft.Health.Web.WebApplicationUtilities.Decompress(System.String)
  - Microsoft.Health.Web.WebApplicationUtilities.DictionaryConnection
  - Microsoft.Health.Web.WebApplicationUtilities.GetAnonymousConnectionForInstance(Microsoft.Health.HealthServiceInstance)
  - Microsoft.Health.Web.WebApplicationUtilities.GetApplicationAuthenticationCredential(System.Guid)
  - Microsoft.Health.Web.WebApplicationUtilities.GetApplicationConnection(Microsoft.Health.HealthServiceInstance)
  - Microsoft.Health.Web.WebApplicationUtilities.GetApplicationConnection(System.Guid)
  - Microsoft.Health.Web.WebApplicationUtilities.GetApplicationConnection(System.Guid,Microsoft.Health.HealthServiceInstance)
  - Microsoft.Health.Web.WebApplicationUtilities.GetAuthenticatedConnection(System.Web.HttpContext)
  - Microsoft.Health.Web.WebApplicationUtilities.GetDictionaryConnectionForInstance(Microsoft.Health.HealthServiceInstance)
  - Microsoft.Health.Web.WebApplicationUtilities.GetPersonInfo(System.String)
  - Microsoft.Health.Web.WebApplicationUtilities.GetPersonInfo(System.String,Microsoft.Health.HealthServiceInstance)
  - Microsoft.Health.Web.WebApplicationUtilities.GetPersonInfo(System.String,System.Guid)
  - Microsoft.Health.Web.WebApplicationUtilities.GetPersonInfo(System.String,System.Guid,Microsoft.Health.HealthServiceInstance)
  - Microsoft.Health.Web.WebApplicationUtilities.GotoHelp(System.Web.HttpContext,System.String)
  - Microsoft.Health.Web.WebApplicationUtilities.LoadPersonInfoFromCookie(System.Web.HttpContext)
  - Microsoft.Health.Web.WebApplicationUtilities.LoadPersonInfoFromCookie(System.Web.HttpCookie)
  - Microsoft.Health.Web.WebApplicationUtilities.PageOnInit(System.Web.HttpContext,System.Boolean)
  - Microsoft.Health.Web.WebApplicationUtilities.PageOnPreLoad(System.Web.HttpContext,System.Boolean)
  - Microsoft.Health.Web.WebApplicationUtilities.PageOnPreLoad(System.Web.HttpContext,System.Boolean,System.Boolean)
  - Microsoft.Health.Web.WebApplicationUtilities.PageOnPreLoad(System.Web.HttpContext,System.Boolean,System.Boolean,System.Guid)
  - Microsoft.Health.Web.WebApplicationUtilities.PageOnPreLoad(System.Web.HttpContext,System.Boolean,System.Guid)
  - Microsoft.Health.Web.WebApplicationUtilities.RedirectToLogOn(System.Web.HttpContext)
  - Microsoft.Health.Web.WebApplicationUtilities.RedirectToLogOn(System.Web.HttpContext,Microsoft.Health.ShellRedirectParameters)
  - Microsoft.Health.Web.WebApplicationUtilities.RedirectToLogOn(System.Web.HttpContext,System.Boolean)
  - Microsoft.Health.Web.WebApplicationUtilities.RedirectToLogOn(System.Web.HttpContext,System.Boolean,System.String)
  - Microsoft.Health.Web.WebApplicationUtilities.RedirectToLogOn(System.Web.HttpContext,System.Boolean,System.String,System.String)
  - Microsoft.Health.Web.WebApplicationUtilities.RedirectToShellUrl(System.Web.HttpContext,Microsoft.Health.ShellRedirectParameters)
  - Microsoft.Health.Web.WebApplicationUtilities.RedirectToShellUrl(System.Web.HttpContext,System.String)
  - Microsoft.Health.Web.WebApplicationUtilities.RedirectToShellUrl(System.Web.HttpContext,System.String,System.String)
  - Microsoft.Health.Web.WebApplicationUtilities.RedirectToShellUrl(System.Web.HttpContext,System.String,System.String,System.String)
  - Microsoft.Health.Web.WebApplicationUtilities.RefreshAndSavePersonInfoToCookie(System.Web.HttpContext,Microsoft.Health.PersonInfo)
  - Microsoft.Health.Web.WebApplicationUtilities.RefreshAndSavePersonInfoToCookie(System.Web.HttpContext,System.String)
  - Microsoft.Health.Web.WebApplicationUtilities.RefreshAndSavePersonInfoToCookie(System.Web.HttpContext,System.String,Microsoft.Health.HealthServiceInstance)
  - Microsoft.Health.Web.WebApplicationUtilities.SavePersonInfoToCookie(Microsoft.Health.PersonInfo)
  - Microsoft.Health.Web.WebApplicationUtilities.SavePersonInfoToCookie(Microsoft.Health.PersonInfo,System.Web.HttpCookie)
  - Microsoft.Health.Web.WebApplicationUtilities.SavePersonInfoToCookie(System.Web.HttpContext,Microsoft.Health.PersonInfo)
  - Microsoft.Health.Web.WebApplicationUtilities.SavePersonInfoToCookie(System.Web.HttpContext,Microsoft.Health.PersonInfo,System.Boolean)
  - Microsoft.Health.Web.WebApplicationUtilities.SignOut(System.Web.HttpContext)
  - Microsoft.Health.Web.WebApplicationUtilities.SignOut(System.Web.HttpContext,System.Guid)
  - Microsoft.Health.Web.WebApplicationUtilities.SignOut(System.Web.HttpContext,System.String)
  - Microsoft.Health.Web.WebApplicationUtilities.SignOut(System.Web.HttpContext,System.String,System.Guid)
  - Microsoft.Health.Web.WebApplicationUtilities.SignOut(System.Web.HttpContext,System.String,System.Guid,System.String)
  - Microsoft.Health.Web.WebApplicationUtilities.SignOut(System.Web.HttpContext,System.String,System.Guid,System.String,Microsoft.Health.HealthServiceInstance)
  - Microsoft.Health.Web.WebApplicationUtilities.SignOut(System.Web.HttpContext,System.String,System.Guid,System.String,System.String)
  langs:
  - csharp
  - vb
  name: WebApplicationUtilities
  nameWithType: WebApplicationUtilities
  fullName: Microsoft.Health.Web.WebApplicationUtilities
  type: Class
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WebApplicationUtilities
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 49
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nA collection of utility functions to help HealthVault web application developers \nauthenticate and perform other actions with HealthVault.\n"
  remarks: "\nIf possible, it is recommended that HealthVault applications derive from\n<xref href=\"Microsoft.Health.Web.HealthServicePage\" data-throw-if-not-resolved=\"false\"></xref>. If the requirements for the application don't allow for\nderivation due to deriving from another base class or needing access from control classes,\nthe static utility methods in this class give the developer access to the same functionality\nthat is available in the <xref href=\"Microsoft.Health.Web.HealthServicePage\" data-throw-if-not-resolved=\"false\"></xref>.\n<br /><br />\nMethods like <xref href=\"Microsoft.Health.Web.WebApplicationUtilities.PageOnInit(System.Web.HttpContext%2cSystem.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> and \n<xref href=\"Microsoft.Health.Web.WebApplicationUtilities.PageOnPreLoad(System.Web.HttpContext%2cSystem.Boolean%2cSystem.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> should be called from\nthe application's page <xref href=\"System.Web.UI.Page.OnInit(System.EventArgs)\" data-throw-if-not-resolved=\"false\"></xref> and \n<xref href=\"System.Web.UI.Page.OnPreLoad(System.EventArgs)\" data-throw-if-not-resolved=\"false\"></xref> methods respectively.\n<br /><br />\nOther methods help the application with management of the HealthVault cookie. For instance,\n<xref href=\"Microsoft.Health.Web.WebApplicationUtilities.LoadPersonInfoFromCookie(System.Web.HttpContext)\" data-throw-if-not-resolved=\"false\"></xref> reads the HealthVault cookie from the request and\ninstantiates the <xref href=\"Microsoft.Health.PersonInfo\" data-throw-if-not-resolved=\"false\"></xref> instance for the logged in person. Note, some\nmethods like <xref href=\"Microsoft.Health.Web.WebApplicationUtilities.LoadPersonInfoFromCookie(System.Web.HttpContext)\" data-throw-if-not-resolved=\"false\"></xref> require another method be called first\nto handle the user's authentication token. Methods like \n<xref href=\"Microsoft.Health.Web.WebApplicationUtilities.SavePersonInfoToCookie(System.Web.HttpContext%2cMicrosoft.Health.PersonInfo)\" data-throw-if-not-resolved=\"false\"></xref> and \n<xref href=\"Microsoft.Health.Web.WebApplicationUtilities.RefreshAndSavePersonInfoToCookie(System.Web.HttpContext%2cMicrosoft.Health.PersonInfo)\" data-throw-if-not-resolved=\"false\"></xref> deal with storing the HealthVault user information in a \ncookie or session.\n"
  example: []
  syntax:
    content: public static class WebApplicationUtilities
    content.vb: Public Module WebApplicationUtilities
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Health.Web.WebApplicationUtilities.PageOnInit(System.Web.HttpContext,System.Boolean)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.PageOnInit(System.Web.HttpContext,System.Boolean)
  id: PageOnInit(System.Web.HttpContext,System.Boolean)
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: PageOnInit(HttpContext, Boolean)
  nameWithType: WebApplicationUtilities.PageOnInit(HttpContext, Boolean)
  fullName: Microsoft.Health.Web.WebApplicationUtilities.PageOnInit(System.Web.HttpContext, System.Boolean)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: PageOnInit
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 85
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nReplicates the <xref href=\"Microsoft.Health.Web.HealthServicePage.OnInit(System.EventArgs)\" data-throw-if-not-resolved=\"false\"></xref> behavior by redirecting to a \nsecure version of the page if the URL requested is insecure and the application requires\na secure connection.\n"
  remarks: "\nApplications can require certain pages (or all pages) to be accessed only over a secure\nSSL channel. To do this the application must set the \"WCPage_SSLForSecure\" config value\nin the web.config file and pass \"true\" to <span class=\"paramref\">isPageSslSecure</span>.\n<br /><br />\nIf the conditions above are true the user's browser will automatically be redirected\nto a secure version of the page.\n"
  example: []
  syntax:
    content: public static void PageOnInit(HttpContext context, bool isPageSslSecure)
    content.vb: Public Shared Sub PageOnInit(context As HttpContext, isPageSslSecure As Boolean)
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "\nThe current request context.\n"
    - id: isPageSslSecure
      type: System.Boolean
      description: "\nIf true, the application requires all connections to this page be over a secure SSL\nchannel.\n"
  overload: Microsoft.Health.Web.WebApplicationUtilities.PageOnInit*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.WebApplicationUtilities.PageOnPreLoad(System.Web.HttpContext,System.Boolean)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.PageOnPreLoad(System.Web.HttpContext,System.Boolean)
  id: PageOnPreLoad(System.Web.HttpContext,System.Boolean)
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: PageOnPreLoad(HttpContext, Boolean)
  nameWithType: WebApplicationUtilities.PageOnPreLoad(HttpContext, Boolean)
  fullName: Microsoft.Health.Web.WebApplicationUtilities.PageOnPreLoad(System.Web.HttpContext, System.Boolean)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: PageOnPreLoad
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 167
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nEnsures that the person is logged on if <span class=\"paramref\">logOnRequired</span> is true.\n"
  remarks: "\nIt is recommended that HealthVault applications that cannot derive from \n<xref href=\"Microsoft.Health.Web.HealthServicePage\" data-throw-if-not-resolved=\"false\"></xref> call this method during their pages OnPreLoad. This\nmethod will ensure that the HealthVault token is extracted from the URL query string,\nthe authenticated person's <xref href=\"Microsoft.Health.PersonInfo\" data-throw-if-not-resolved=\"false\"></xref> is retrieved and stored in a cookie.\nThis will make the person's information available through the cookie on all future \nrequests until they log off.\n"
  example: []
  syntax:
    content: public static PersonInfo PageOnPreLoad(HttpContext context, bool logOnRequired)
    content.vb: Public Shared Function PageOnPreLoad(context As HttpContext, logOnRequired As Boolean) As PersonInfo
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "\nThe current request context.\n"
    - id: logOnRequired
      type: System.Boolean
      description: "\nTrue if the requested page requires the user to be logged on to HealthVault, or false\notherwise. If true and the user isn't logged on, the user's browser will be automatically\nredirected to the HealthVault authentication page.\n"
    return:
      type: Microsoft.Health.PersonInfo
  overload: Microsoft.Health.Web.WebApplicationUtilities.PageOnPreLoad*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.WebApplicationUtilities.PageOnPreLoad(System.Web.HttpContext,System.Boolean,System.Guid)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.PageOnPreLoad(System.Web.HttpContext,System.Boolean,System.Guid)
  id: PageOnPreLoad(System.Web.HttpContext,System.Boolean,System.Guid)
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: PageOnPreLoad(HttpContext, Boolean, Guid)
  nameWithType: WebApplicationUtilities.PageOnPreLoad(HttpContext, Boolean, Guid)
  fullName: Microsoft.Health.Web.WebApplicationUtilities.PageOnPreLoad(System.Web.HttpContext, System.Boolean, System.Guid)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: PageOnPreLoad
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 204
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nEnsures that the person is logged on if <span class=\"paramref\">logOnRequired</span> is true.\n"
  remarks: "\nIt is recommended that HealthVault applications that cannot derive from \n<xref href=\"Microsoft.Health.Web.HealthServicePage\" data-throw-if-not-resolved=\"false\"></xref> call this method during their pages OnPreLoad. This\nmethod will ensure that the HealthVault token is extracted from the URL query string,\nthe authenticated person's <xref href=\"Microsoft.Health.PersonInfo\" data-throw-if-not-resolved=\"false\"></xref> is retrieved and stored in a cookie.\nThis will make the person's information available through the cookie on all future \nrequests until they log off.\n"
  example: []
  syntax:
    content: public static PersonInfo PageOnPreLoad(HttpContext context, bool logOnRequired, Guid appId)
    content.vb: Public Shared Function PageOnPreLoad(context As HttpContext, logOnRequired As Boolean, appId As Guid) As PersonInfo
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "\nThe current request context.\n"
    - id: logOnRequired
      type: System.Boolean
      description: "\nTrue if the requested page requires the user to be logged on to HealthVault, or false\notherwise. If true and the user isn't logged on, the user's browser will be automatically\nredirected to the HealthVault authentication page.\n"
    - id: appId
      type: System.Guid
      description: "\nThe unique application identifier.\n"
    return:
      type: Microsoft.Health.PersonInfo
  overload: Microsoft.Health.Web.WebApplicationUtilities.PageOnPreLoad*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.WebApplicationUtilities.PageOnPreLoad(System.Web.HttpContext,System.Boolean,System.Boolean)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.PageOnPreLoad(System.Web.HttpContext,System.Boolean,System.Boolean)
  id: PageOnPreLoad(System.Web.HttpContext,System.Boolean,System.Boolean)
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: PageOnPreLoad(HttpContext, Boolean, Boolean)
  nameWithType: WebApplicationUtilities.PageOnPreLoad(HttpContext, Boolean, Boolean)
  fullName: Microsoft.Health.Web.WebApplicationUtilities.PageOnPreLoad(System.Web.HttpContext, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: PageOnPreLoad
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 237
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nEnsures that the person is logged on if <span class=\"paramref\">logOnRequired</span> is true.\n"
  remarks: "\nIt is recommended that HealthVault applications that cannot derive from \n<xref href=\"Microsoft.Health.Web.HealthServicePage\" data-throw-if-not-resolved=\"false\"></xref> call this method during their pages OnPreLoad. This\nmethod will ensure that the HealthVault token is extracted from the URL query string,\nthe authenticated person's <xref href=\"Microsoft.Health.PersonInfo\" data-throw-if-not-resolved=\"false\"></xref> is retrieved and stored in a cookie.\nThis will make the person's information available through the cookie on all future \nrequests until they log off.\n"
  example: []
  syntax:
    content: public static PersonInfo PageOnPreLoad(HttpContext context, bool logOnRequired, bool isMra)
    content.vb: Public Shared Function PageOnPreLoad(context As HttpContext, logOnRequired As Boolean, isMra As Boolean) As PersonInfo
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "\nThe current request context.\n"
    - id: logOnRequired
      type: System.Boolean
      description: "\nTrue if the requested page requires the user to be logged on to HealthVault, or false\notherwise. If true and the user isn't logged on, the user's browser will be automatically\nredirected to the HealthVault authentication page.\n"
    - id: isMra
      type: System.Boolean
      description: "\nWhether this application simultaneously deals with multiple records\nfor the same person.\n"
    return:
      type: Microsoft.Health.PersonInfo
  overload: Microsoft.Health.Web.WebApplicationUtilities.PageOnPreLoad*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.WebApplicationUtilities.PageOnPreLoad(System.Web.HttpContext,System.Boolean,System.Boolean,System.Guid)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.PageOnPreLoad(System.Web.HttpContext,System.Boolean,System.Boolean,System.Guid)
  id: PageOnPreLoad(System.Web.HttpContext,System.Boolean,System.Boolean,System.Guid)
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: PageOnPreLoad(HttpContext, Boolean, Boolean, Guid)
  nameWithType: WebApplicationUtilities.PageOnPreLoad(HttpContext, Boolean, Boolean, Guid)
  fullName: Microsoft.Health.Web.WebApplicationUtilities.PageOnPreLoad(System.Web.HttpContext, System.Boolean, System.Boolean, System.Guid)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: PageOnPreLoad
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 279
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nEnsures that the person is logged on if <span class=\"paramref\">logOnRequired</span> is true.\n"
  remarks: "\nIt is recommended that HealthVault applications that cannot derive from \n<xref href=\"Microsoft.Health.Web.HealthServicePage\" data-throw-if-not-resolved=\"false\"></xref> call this method during their pages OnPreLoad. This\nmethod will ensure that the HealthVault token is extracted from the URL query string,\nthe authenticated person's <xref href=\"Microsoft.Health.PersonInfo\" data-throw-if-not-resolved=\"false\"></xref> is retrieved and stored in a cookie.\nThis will make the person's information available through the cookie on all future \nrequests until they log off.\n"
  example: []
  syntax:
    content: public static PersonInfo PageOnPreLoad(HttpContext context, bool logOnRequired, bool isMra, Guid appId)
    content.vb: Public Shared Function PageOnPreLoad(context As HttpContext, logOnRequired As Boolean, isMra As Boolean, appId As Guid) As PersonInfo
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "\nThe current request context.\n"
    - id: logOnRequired
      type: System.Boolean
      description: "\nTrue if the requested page requires the user to be logged on to HealthVault, or false\notherwise. If true and the user isn't logged on, the user's browser will be automatically\nredirected to the HealthVault authentication page.\n"
    - id: isMra
      type: System.Boolean
      description: "\nWhether this application simultaneously deals with multiple records\nfor the same person.\n"
    - id: appId
      type: System.Guid
      description: "\nThe unique identifier for the application.\n"
    return:
      type: Microsoft.Health.PersonInfo
  overload: Microsoft.Health.Web.WebApplicationUtilities.PageOnPreLoad*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.WebApplicationUtilities.ApplicationAuthenticationCredential
  commentId: P:Microsoft.Health.Web.WebApplicationUtilities.ApplicationAuthenticationCredential
  id: ApplicationAuthenticationCredential
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: ApplicationAuthenticationCredential
  nameWithType: WebApplicationUtilities.ApplicationAuthenticationCredential
  fullName: Microsoft.Health.Web.WebApplicationUtilities.ApplicationAuthenticationCredential
  type: Property
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ApplicationAuthenticationCredential
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 318
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nGets a credential used to authenticate the web application to\nHealthVault.\n"
  example: []
  syntax:
    content: public static WebApplicationCredential ApplicationAuthenticationCredential { get; }
    content.vb: Public Shared ReadOnly Property ApplicationAuthenticationCredential As WebApplicationCredential
    parameters: []
    return:
      type: Microsoft.Health.Web.Authentication.WebApplicationCredential
  overload: Microsoft.Health.Web.WebApplicationUtilities.ApplicationAuthenticationCredential*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Health.Web.WebApplicationUtilities.GetApplicationAuthenticationCredential(System.Guid)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.GetApplicationAuthenticationCredential(System.Guid)
  id: GetApplicationAuthenticationCredential(System.Guid)
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: GetApplicationAuthenticationCredential(Guid)
  nameWithType: WebApplicationUtilities.GetApplicationAuthenticationCredential(Guid)
  fullName: Microsoft.Health.Web.WebApplicationUtilities.GetApplicationAuthenticationCredential(System.Guid)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetApplicationAuthenticationCredential
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 340
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nGets a credential used to authenticate the web application to\nMicrosoft HealthVault.\n"
  example: []
  syntax:
    content: public static WebApplicationCredential GetApplicationAuthenticationCredential(Guid appId)
    content.vb: Public Shared Function GetApplicationAuthenticationCredential(appId As Guid) As WebApplicationCredential
    parameters:
    - id: appId
      type: System.Guid
      description: "\nThe unique application identifier to get the credential for.\n"
    return:
      type: Microsoft.Health.Web.Authentication.WebApplicationCredential
      description: "\nThe application credential for the specified application.\n"
  overload: Microsoft.Health.Web.WebApplicationUtilities.GetApplicationAuthenticationCredential*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.WebApplicationUtilities.ApplicationConnection
  commentId: P:Microsoft.Health.Web.WebApplicationUtilities.ApplicationConnection
  id: ApplicationConnection
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: ApplicationConnection
  nameWithType: WebApplicationUtilities.ApplicationConnection
  fullName: Microsoft.Health.Web.WebApplicationUtilities.ApplicationConnection
  type: Property
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ApplicationConnection
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 362
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nGets a HealthVault application connection without a user context for the\nconfigured default HealthVault web-service instance.\n"
  example: []
  syntax:
    content: public static ApplicationConnection ApplicationConnection { get; }
    content.vb: Public Shared ReadOnly Property ApplicationConnection As ApplicationConnection
    parameters: []
    return:
      type: Microsoft.Health.ApplicationConnection
      description: "\nA <xref href=\"Microsoft.Health.ApplicationConnection\" data-throw-if-not-resolved=\"false\"></xref> connection.\n"
  overload: Microsoft.Health.Web.WebApplicationUtilities.ApplicationConnection*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nIf the application private key could not be found in the \ncertificate store to sign requests.\n"
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Health.Web.WebApplicationUtilities.GetApplicationConnection(Microsoft.Health.HealthServiceInstance)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.GetApplicationConnection(Microsoft.Health.HealthServiceInstance)
  id: GetApplicationConnection(Microsoft.Health.HealthServiceInstance)
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: GetApplicationConnection(HealthServiceInstance)
  nameWithType: WebApplicationUtilities.GetApplicationConnection(HealthServiceInstance)
  fullName: Microsoft.Health.Web.WebApplicationUtilities.GetApplicationConnection(Microsoft.Health.HealthServiceInstance)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetApplicationConnection
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 389
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nGets a HealthVault application connection without a user context for the\nspecified HealthVault web-service instance.\n"
  example: []
  syntax:
    content: public static ApplicationConnection GetApplicationConnection(HealthServiceInstance serviceInstance)
    content.vb: Public Shared Function GetApplicationConnection(serviceInstance As HealthServiceInstance) As ApplicationConnection
    parameters:
    - id: serviceInstance
      type: Microsoft.Health.HealthServiceInstance
      description: "\nThe HealthVault web-service instance.\n"
    return:
      type: Microsoft.Health.ApplicationConnection
      description: "\nA <xref href=\"Microsoft.Health.ApplicationConnection\" data-throw-if-not-resolved=\"false\"></xref> connection.\n"
  overload: Microsoft.Health.Web.WebApplicationUtilities.GetApplicationConnection*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nIf the application private key could not be found in the \ncertificate store to sign requests.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.WebApplicationUtilities.GetApplicationConnection(System.Guid)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.GetApplicationConnection(System.Guid)
  id: GetApplicationConnection(System.Guid)
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: GetApplicationConnection(Guid)
  nameWithType: WebApplicationUtilities.GetApplicationConnection(Guid)
  fullName: Microsoft.Health.Web.WebApplicationUtilities.GetApplicationConnection(System.Guid)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetApplicationConnection
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 412
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nGets a HealthVault application connection without a user context for the\nconfigured default HealthVault web-service instance.\n"
  example: []
  syntax:
    content: public static ApplicationConnection GetApplicationConnection(Guid appId)
    content.vb: Public Shared Function GetApplicationConnection(appId As Guid) As ApplicationConnection
    parameters:
    - id: appId
      type: System.Guid
      description: "\nThe unique application identifier for the application to get the connection for.\n"
    return:
      type: Microsoft.Health.ApplicationConnection
      description: "\nA <xref href=\"Microsoft.Health.ApplicationConnection\" data-throw-if-not-resolved=\"false\"></xref> connection.\n"
  overload: Microsoft.Health.Web.WebApplicationUtilities.GetApplicationConnection*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nIf the application private key could not be found in the \ncertificate store to sign requests.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.WebApplicationUtilities.GetApplicationConnection(System.Guid,Microsoft.Health.HealthServiceInstance)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.GetApplicationConnection(System.Guid,Microsoft.Health.HealthServiceInstance)
  id: GetApplicationConnection(System.Guid,Microsoft.Health.HealthServiceInstance)
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: GetApplicationConnection(Guid, HealthServiceInstance)
  nameWithType: WebApplicationUtilities.GetApplicationConnection(Guid, HealthServiceInstance)
  fullName: Microsoft.Health.Web.WebApplicationUtilities.GetApplicationConnection(System.Guid, Microsoft.Health.HealthServiceInstance)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetApplicationConnection
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 440
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nGets a HealthVault application connection without a user context for the\nspecified HealthVault web-service instance.\n"
  example: []
  syntax:
    content: public static ApplicationConnection GetApplicationConnection(Guid appId, HealthServiceInstance serviceInstance)
    content.vb: Public Shared Function GetApplicationConnection(appId As Guid, serviceInstance As HealthServiceInstance) As ApplicationConnection
    parameters:
    - id: appId
      type: System.Guid
      description: "\nThe unique application identifier for the application to get the connection for.\n"
    - id: serviceInstance
      type: Microsoft.Health.HealthServiceInstance
      description: "\nThe HealthVault web-service instance.\n"
    return:
      type: Microsoft.Health.ApplicationConnection
      description: "\nA <xref href=\"Microsoft.Health.ApplicationConnection\" data-throw-if-not-resolved=\"false\"></xref> connection.\n"
  overload: Microsoft.Health.Web.WebApplicationUtilities.GetApplicationConnection*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nIf the application private key could not be found in the \ncertificate store to sign requests.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.WebApplicationUtilities.GetAuthenticatedConnection(System.Web.HttpContext)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.GetAuthenticatedConnection(System.Web.HttpContext)
  id: GetAuthenticatedConnection(System.Web.HttpContext)
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: GetAuthenticatedConnection(HttpContext)
  nameWithType: WebApplicationUtilities.GetAuthenticatedConnection(HttpContext)
  fullName: Microsoft.Health.Web.WebApplicationUtilities.GetAuthenticatedConnection(System.Web.HttpContext)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetAuthenticatedConnection
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 466
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nGets a HealthVault connection for the authenticated user.\n"
  example: []
  syntax:
    content: public static WebApplicationConnection GetAuthenticatedConnection(HttpContext context)
    content.vb: Public Shared Function GetAuthenticatedConnection(context As HttpContext) As WebApplicationConnection
    parameters:
    - id: context
      type: System.Web.HttpContext
    return:
      type: Microsoft.Health.Web.WebApplicationConnection
      description: "\nA <xref href=\"Microsoft.Health.Web.WebApplicationConnection\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  overload: Microsoft.Health.Web.WebApplicationUtilities.GetAuthenticatedConnection*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nIf the application private key could not be found in the \ncertificate store to sign requests.\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nIf a person has not been logged in.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.WebApplicationUtilities.DictionaryConnection
  commentId: P:Microsoft.Health.Web.WebApplicationUtilities.DictionaryConnection
  id: DictionaryConnection
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: DictionaryConnection
  nameWithType: WebApplicationUtilities.DictionaryConnection
  fullName: Microsoft.Health.Web.WebApplicationUtilities.DictionaryConnection
  type: Property
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DictionaryConnection
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 494
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nGets a HealthVault connection for the configured default HealthVault web-service instance,\nwithout an authentication token for the user but with an application authentication token,\nwhich can be used to access vocabularies.\n"
  example: []
  syntax:
    content: public static ApplicationConnection DictionaryConnection { get; }
    content.vb: Public Shared ReadOnly Property DictionaryConnection As ApplicationConnection
    parameters: []
    return:
      type: Microsoft.Health.ApplicationConnection
      description: "\nA <xref href=\"Microsoft.Health.Web.WebApplicationUtilities.ApplicationConnection\" data-throw-if-not-resolved=\"false\"></xref> connection.\n"
  overload: Microsoft.Health.Web.WebApplicationUtilities.DictionaryConnection*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nIf the application private key could not be found in the \ncertificate store to sign requests.\n"
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Health.Web.WebApplicationUtilities.GetDictionaryConnectionForInstance(Microsoft.Health.HealthServiceInstance)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.GetDictionaryConnectionForInstance(Microsoft.Health.HealthServiceInstance)
  id: GetDictionaryConnectionForInstance(Microsoft.Health.HealthServiceInstance)
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: GetDictionaryConnectionForInstance(HealthServiceInstance)
  nameWithType: WebApplicationUtilities.GetDictionaryConnectionForInstance(HealthServiceInstance)
  fullName: Microsoft.Health.Web.WebApplicationUtilities.GetDictionaryConnectionForInstance(Microsoft.Health.HealthServiceInstance)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetDictionaryConnectionForInstance
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 517
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nGets a HealthVault connection for the specified HealthVault web-service instance, without\nan authentication token for the user but with an application authentication token, which\ncan be used to access vocabularies.\n"
  example: []
  syntax:
    content: public static ApplicationConnection GetDictionaryConnectionForInstance(HealthServiceInstance serviceInstance)
    content.vb: Public Shared Function GetDictionaryConnectionForInstance(serviceInstance As HealthServiceInstance) As ApplicationConnection
    parameters:
    - id: serviceInstance
      type: Microsoft.Health.HealthServiceInstance
    return:
      type: Microsoft.Health.ApplicationConnection
      description: "\nA <xref href=\"Microsoft.Health.Web.WebApplicationUtilities.ApplicationConnection\" data-throw-if-not-resolved=\"false\"></xref> connection.\n"
  overload: Microsoft.Health.Web.WebApplicationUtilities.GetDictionaryConnectionForInstance*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nIf the application private key could not be found in the \ncertificate store to sign requests.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.WebApplicationUtilities.AnonymousConnection
  commentId: P:Microsoft.Health.Web.WebApplicationUtilities.AnonymousConnection
  id: AnonymousConnection
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: AnonymousConnection
  nameWithType: WebApplicationUtilities.AnonymousConnection
  fullName: Microsoft.Health.Web.WebApplicationUtilities.AnonymousConnection
  type: Property
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AnonymousConnection
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 537
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nGets a HealthVault connection for the configured default HealthVault web-service instance\nwithout an authentication token for either the user or the application.\n"
  example: []
  syntax:
    content: public static AnonymousConnection AnonymousConnection { get; }
    content.vb: Public Shared ReadOnly Property AnonymousConnection As AnonymousConnection
    parameters: []
    return:
      type: Microsoft.Health.AnonymousConnection
      description: "\nA connection to HealthVault that does not contain user or application\nauthentication information.\n"
  overload: Microsoft.Health.Web.WebApplicationUtilities.AnonymousConnection*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nIf the application private key could not be found in the \ncertificate store to sign requests.\n"
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Health.Web.WebApplicationUtilities.GetAnonymousConnectionForInstance(Microsoft.Health.HealthServiceInstance)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.GetAnonymousConnectionForInstance(Microsoft.Health.HealthServiceInstance)
  id: GetAnonymousConnectionForInstance(Microsoft.Health.HealthServiceInstance)
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: GetAnonymousConnectionForInstance(HealthServiceInstance)
  nameWithType: WebApplicationUtilities.GetAnonymousConnectionForInstance(HealthServiceInstance)
  fullName: Microsoft.Health.Web.WebApplicationUtilities.GetAnonymousConnectionForInstance(Microsoft.Health.HealthServiceInstance)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetAnonymousConnectionForInstance
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 565
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nGets a HealthVault connection for the specified HealthVault web-service instance\nwithout an authentication token for either the user or the application.\n"
  example: []
  syntax:
    content: public static AnonymousConnection GetAnonymousConnectionForInstance(HealthServiceInstance serviceInstance)
    content.vb: Public Shared Function GetAnonymousConnectionForInstance(serviceInstance As HealthServiceInstance) As AnonymousConnection
    parameters:
    - id: serviceInstance
      type: Microsoft.Health.HealthServiceInstance
      description: "\nThe HealthVault web-service instance.\n"
    return:
      type: Microsoft.Health.AnonymousConnection
      description: "\nA connection to HealthVault that does not contain user or application\nauthentication information.\n"
  overload: Microsoft.Health.Web.WebApplicationUtilities.GetAnonymousConnectionForInstance*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nIf the application private key could not be found in the \ncertificate store to sign requests.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.WebApplicationUtilities.RefreshAndSavePersonInfoToCookie(System.Web.HttpContext,Microsoft.Health.PersonInfo)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.RefreshAndSavePersonInfoToCookie(System.Web.HttpContext,Microsoft.Health.PersonInfo)
  id: RefreshAndSavePersonInfoToCookie(System.Web.HttpContext,Microsoft.Health.PersonInfo)
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: RefreshAndSavePersonInfoToCookie(HttpContext, PersonInfo)
  nameWithType: WebApplicationUtilities.RefreshAndSavePersonInfoToCookie(HttpContext, PersonInfo)
  fullName: Microsoft.Health.Web.WebApplicationUtilities.RefreshAndSavePersonInfoToCookie(System.Web.HttpContext, Microsoft.Health.PersonInfo)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: RefreshAndSavePersonInfoToCookie
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 593
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nCleans the application's session of HealthVault information and \nthen repopulates it.\n"
  remarks: "\nThis method should be called anytime an action occurs that will affect the \n<xref href=\"Microsoft.Health.PersonInfo\" data-throw-if-not-resolved=\"false\"></xref> object for the authenticated person. This includes changing\nthe person's authorization for the application or changing the selected record.\n"
  example: []
  syntax:
    content: public static PersonInfo RefreshAndSavePersonInfoToCookie(HttpContext context, PersonInfo personInfo)
    content.vb: Public Shared Function RefreshAndSavePersonInfoToCookie(context As HttpContext, personInfo As PersonInfo) As PersonInfo
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "\nThe current request context.\n"
    - id: personInfo
      type: Microsoft.Health.PersonInfo
      description: "\nThe information about the authenticated person that needs refreshing.\n"
    return:
      type: Microsoft.Health.PersonInfo
  overload: Microsoft.Health.Web.WebApplicationUtilities.RefreshAndSavePersonInfoToCookie*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nIf a person isn't logged on when this is called.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.WebApplicationUtilities.SavePersonInfoToCookie(System.Web.HttpContext,Microsoft.Health.PersonInfo)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.SavePersonInfoToCookie(System.Web.HttpContext,Microsoft.Health.PersonInfo)
  id: SavePersonInfoToCookie(System.Web.HttpContext,Microsoft.Health.PersonInfo)
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: SavePersonInfoToCookie(HttpContext, PersonInfo)
  nameWithType: WebApplicationUtilities.SavePersonInfoToCookie(HttpContext, PersonInfo)
  fullName: Microsoft.Health.Web.WebApplicationUtilities.SavePersonInfoToCookie(System.Web.HttpContext, Microsoft.Health.PersonInfo)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SavePersonInfoToCookie
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 631
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nStores the specified person's information in the cookie.\n"
  remarks: "\nIf <span class=\"paramref\">personInfo</span> is null, this call will not clear the cookie.\n"
  example: []
  syntax:
    content: public static void SavePersonInfoToCookie(HttpContext context, PersonInfo personInfo)
    content.vb: Public Shared Sub SavePersonInfoToCookie(context As HttpContext, personInfo As PersonInfo)
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "\nThe current request context.\n"
    - id: personInfo
      type: Microsoft.Health.PersonInfo
      description: "\nThe authenticated person's information.\n"
  overload: Microsoft.Health.Web.WebApplicationUtilities.SavePersonInfoToCookie*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.WebApplicationUtilities.RefreshAndSavePersonInfoToCookie(System.Web.HttpContext,System.String)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.RefreshAndSavePersonInfoToCookie(System.Web.HttpContext,System.String)
  id: RefreshAndSavePersonInfoToCookie(System.Web.HttpContext,System.String)
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: RefreshAndSavePersonInfoToCookie(HttpContext, String)
  nameWithType: WebApplicationUtilities.RefreshAndSavePersonInfoToCookie(HttpContext, String)
  fullName: Microsoft.Health.Web.WebApplicationUtilities.RefreshAndSavePersonInfoToCookie(System.Web.HttpContext, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: RefreshAndSavePersonInfoToCookie
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 661
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nCleans the application's session of HealthVault information and \nthen repopulates it using the specified authentication.\n"
  remarks: "\nThis method should be called anytime the application takes a redirect from the \nHealthVault shell and there is a WCToken on the query string. Note, if you are calling\n<xref href=\"Microsoft.Health.Web.WebApplicationUtilities.PageOnPreLoad(System.Web.HttpContext%2cSystem.Boolean%2cSystem.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> or \n<xref href=\"Microsoft.Health.Web.WebApplicationUtilities.PageOnPreLoad(System.Web.HttpContext%2cSystem.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> this is handled for you.\n"
  example: []
  syntax:
    content: public static PersonInfo RefreshAndSavePersonInfoToCookie(HttpContext context, string authToken)
    content.vb: Public Shared Function RefreshAndSavePersonInfoToCookie(context As HttpContext, authToken As String) As PersonInfo
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "\nThe current request context.\n"
    - id: authToken
      type: System.String
      description: "\nThe authentication to use to populate the session with HealthVault\ninformation.\n"
    return:
      type: Microsoft.Health.PersonInfo
  overload: Microsoft.Health.Web.WebApplicationUtilities.RefreshAndSavePersonInfoToCookie*
  exceptions:
  - type: Microsoft.Health.HealthServiceException
    commentId: T:Microsoft.Health.HealthServiceException
    description: "\nIf HealthVault returns an error when getting information\nabout the person in the <span class=\"paramref\">authToken</span>.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.WebApplicationUtilities.RefreshAndSavePersonInfoToCookie(System.Web.HttpContext,System.String,Microsoft.Health.HealthServiceInstance)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.RefreshAndSavePersonInfoToCookie(System.Web.HttpContext,System.String,Microsoft.Health.HealthServiceInstance)
  id: RefreshAndSavePersonInfoToCookie(System.Web.HttpContext,System.String,Microsoft.Health.HealthServiceInstance)
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: RefreshAndSavePersonInfoToCookie(HttpContext, String, HealthServiceInstance)
  nameWithType: WebApplicationUtilities.RefreshAndSavePersonInfoToCookie(HttpContext, String, HealthServiceInstance)
  fullName: Microsoft.Health.Web.WebApplicationUtilities.RefreshAndSavePersonInfoToCookie(System.Web.HttpContext, System.String, Microsoft.Health.HealthServiceInstance)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: RefreshAndSavePersonInfoToCookie
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 701
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nCleans the application's session of HealthVault information and \nthen repopulates it using the specified authentication token and\nHealthVault web-service instance.\n"
  remarks: "\nThis method should be called anytime the application takes a redirect from the \nHealthVault shell and there is a WCToken on the query string. Note, if you are calling\n<xref href=\"Microsoft.Health.Web.WebApplicationUtilities.PageOnPreLoad(System.Web.HttpContext%2cSystem.Boolean%2cSystem.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> or \n<xref href=\"Microsoft.Health.Web.WebApplicationUtilities.PageOnPreLoad(System.Web.HttpContext%2cSystem.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> this is handled for you.\n"
  example: []
  syntax:
    content: public static PersonInfo RefreshAndSavePersonInfoToCookie(HttpContext context, string authToken, HealthServiceInstance serviceInstance)
    content.vb: Public Shared Function RefreshAndSavePersonInfoToCookie(context As HttpContext, authToken As String, serviceInstance As HealthServiceInstance) As PersonInfo
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "\nThe current request context.\n"
    - id: authToken
      type: System.String
      description: "\nThe authentication to use to populate the session with HealthVault\ninformation.\n"
    - id: serviceInstance
      type: Microsoft.Health.HealthServiceInstance
      description: "\nThe HealthVault web-service instance that the session auth token\nwas originally received from.\n"
    return:
      type: Microsoft.Health.PersonInfo
  overload: Microsoft.Health.Web.WebApplicationUtilities.RefreshAndSavePersonInfoToCookie*
  exceptions:
  - type: Microsoft.Health.HealthServiceException
    commentId: T:Microsoft.Health.HealthServiceException
    description: "\nIf HealthVault returns an error when getting information\nabout the person in the <span class=\"paramref\">authToken</span>.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.WebApplicationUtilities.RedirectToShellUrl(System.Web.HttpContext,System.String,System.String)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.RedirectToShellUrl(System.Web.HttpContext,System.String,System.String)
  id: RedirectToShellUrl(System.Web.HttpContext,System.String,System.String)
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: RedirectToShellUrl(HttpContext, String, String)
  nameWithType: WebApplicationUtilities.RedirectToShellUrl(HttpContext, String, String)
  fullName: Microsoft.Health.Web.WebApplicationUtilities.RedirectToShellUrl(System.Web.HttpContext, System.String, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: RedirectToShellUrl
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 738
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nRedirects to the HealthVault Shell URL with the queryString params \nappended.\n"
  remarks: "\nThe <span class=\"paramref\">targetLocation</span> will be passed as the target parameter value to\nthe redirector URL.\nThe <span class=\"paramref\">targetQuery</span> will be URL encoded and passed as the targetqs \nparameter value to the redirector URL.\n"
  example: []
  syntax:
    content: public static void RedirectToShellUrl(HttpContext context, string targetLocation, string targetQuery)
    content.vb: Public Shared Sub RedirectToShellUrl(context As HttpContext, targetLocation As String, targetQuery As String)
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "\nThe current request context.\n"
    - id: targetLocation
      type: System.String
      description: "\nA known constant indicating the internal HealthVault \nservice Shell location to redirect to.\nSee <a href=\"http://msdn.microsoft.com/en-us/library/ff803620.aspx\">Shell redirect interface</a>.\n"
    - id: targetQuery
      type: System.String
      description: "\nThe query string value to pass to the URL to which redirection is \ntaking place. \n"
  overload: Microsoft.Health.Web.WebApplicationUtilities.RedirectToShellUrl*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.WebApplicationUtilities.RedirectToShellUrl(System.Web.HttpContext,System.String,System.String,System.String)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.RedirectToShellUrl(System.Web.HttpContext,System.String,System.String,System.String)
  id: RedirectToShellUrl(System.Web.HttpContext,System.String,System.String,System.String)
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: RedirectToShellUrl(HttpContext, String, String, String)
  nameWithType: WebApplicationUtilities.RedirectToShellUrl(HttpContext, String, String, String)
  fullName: Microsoft.Health.Web.WebApplicationUtilities.RedirectToShellUrl(System.Web.HttpContext, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: RedirectToShellUrl
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 784
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nRedirects to the HealthVault Shell URL with the queryString params \nappended.\n"
  remarks: "\nThe <span class=\"paramref\">targetLocation</span> will be passed as the target parameter value to\nthe redirector URL.\nThe <span class=\"paramref\">targetQuery</span> will be URL encoded and passed as the targetqs \nparameter value to the redirector URL.\nThe <span class=\"paramref\">actionUrlQueryString</span> will be URL encoded and passed as the actionqs\nparameter value to the redirector URL.\n"
  example: []
  syntax:
    content: public static void RedirectToShellUrl(HttpContext context, string targetLocation, string targetQuery, string actionUrlQueryString)
    content.vb: Public Shared Sub RedirectToShellUrl(context As HttpContext, targetLocation As String, targetQuery As String, actionUrlQueryString As String)
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "\nThe current request context.\n"
    - id: targetLocation
      type: System.String
      description: "\nA known constant indicating the internal HealthVault \nservice Shell location to redirect to.\nSee <a href=\"http://msdn.microsoft.com/en-us/library/ff803620.aspx\">Shell redirect interface</a>.\n"
    - id: targetQuery
      type: System.String
      description: "\nThe query string value to pass to the URL to which redirection is \ntaking place. \n"
    - id: actionUrlQueryString
      type: System.String
      description: "\nThe query string parameters passed to the calling application action URL after the\ntarget action is completed in the Shell.\n"
  overload: Microsoft.Health.Web.WebApplicationUtilities.RedirectToShellUrl*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.WebApplicationUtilities.RedirectToShellUrl(System.Web.HttpContext,System.String)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.RedirectToShellUrl(System.Web.HttpContext,System.String)
  id: RedirectToShellUrl(System.Web.HttpContext,System.String)
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: RedirectToShellUrl(HttpContext, String)
  nameWithType: WebApplicationUtilities.RedirectToShellUrl(HttpContext, String)
  fullName: Microsoft.Health.Web.WebApplicationUtilities.RedirectToShellUrl(System.Web.HttpContext, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: RedirectToShellUrl
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 818
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nRedirects to the HealthVault Shell URL with the query string params \nappended.\n"
  remarks: "\nThe <span class=\"paramref\">targetLocation</span> will be passed as the target parameter value to\nthe redirector URL.\n"
  example: []
  syntax:
    content: public static void RedirectToShellUrl(HttpContext context, string targetLocation)
    content.vb: Public Shared Sub RedirectToShellUrl(context As HttpContext, targetLocation As String)
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "\nThe current request context.\n"
    - id: targetLocation
      type: System.String
      description: "\nA known constant indicating the internal HealthVault \nservice Shell location to redirect to.\nSee <a href=\"http://msdn.microsoft.com/en-us/library/ff803620.aspx\">Shell redirect interface</a>.\n"
  overload: Microsoft.Health.Web.WebApplicationUtilities.RedirectToShellUrl*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.WebApplicationUtilities.RedirectToShellUrl(System.Web.HttpContext,Microsoft.Health.ShellRedirectParameters)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.RedirectToShellUrl(System.Web.HttpContext,Microsoft.Health.ShellRedirectParameters)
  id: RedirectToShellUrl(System.Web.HttpContext,Microsoft.Health.ShellRedirectParameters)
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: RedirectToShellUrl(HttpContext, ShellRedirectParameters)
  nameWithType: WebApplicationUtilities.RedirectToShellUrl(HttpContext, ShellRedirectParameters)
  fullName: Microsoft.Health.Web.WebApplicationUtilities.RedirectToShellUrl(System.Web.HttpContext, Microsoft.Health.ShellRedirectParameters)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: RedirectToShellUrl
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 839
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nRedirects to the HealthVault Shell URL with the query string params \nappended.\n"
  example: []
  syntax:
    content: public static void RedirectToShellUrl(HttpContext context, ShellRedirectParameters redirectParameters)
    content.vb: Public Shared Sub RedirectToShellUrl(context As HttpContext, redirectParameters As ShellRedirectParameters)
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "\nThe current request context.\n"
    - id: redirectParameters
      type: Microsoft.Health.ShellRedirectParameters
      description: "\nHealthVault Shell redirect parameters.\n"
  overload: Microsoft.Health.Web.WebApplicationUtilities.RedirectToShellUrl*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.WebApplicationUtilities.ConstructShellTargetUrl(System.Web.HttpContext,System.String,System.String)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.ConstructShellTargetUrl(System.Web.HttpContext,System.String,System.String)
  id: ConstructShellTargetUrl(System.Web.HttpContext,System.String,System.String)
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: ConstructShellTargetUrl(HttpContext, String, String)
  nameWithType: WebApplicationUtilities.ConstructShellTargetUrl(HttpContext, String, String)
  fullName: Microsoft.Health.Web.WebApplicationUtilities.ConstructShellTargetUrl(System.Web.HttpContext, System.String, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ConstructShellTargetUrl
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 884
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nConstructs a URL to be redirected to via the HealthVault URL \nredirector.\n"
  remarks: "\nThe <span class=\"paramref\">targetLocation</span> will be passed as the target parameter value to\nthe redirector URL.\nThe <span class=\"paramref\">targetQuery</span> will be URL encoded and passed as the targetqs \nparameter value to the redirector URL.\n"
  example: []
  syntax:
    content: public static Uri ConstructShellTargetUrl(HttpContext context, string targetLocation, string targetQuery)
    content.vb: Public Shared Function ConstructShellTargetUrl(context As HttpContext, targetLocation As String, targetQuery As String) As Uri
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "\nThe current request context.\n"
    - id: targetLocation
      type: System.String
      description: "\nA known constant indicating the internal HealthVault \nservice Shell location to redirect to.\nSee <a href=\"http://msdn.microsoft.com/en-us/library/ff803620.aspx\">Shell redirect interface</a>.\n"
    - id: targetQuery
      type: System.String
      description: "\nThe query string value to pass to the URL to which redirection is \ntaking place.\n"
    return:
      type: System.Uri
      description: "\nThe constructed URL.\n"
  overload: Microsoft.Health.Web.WebApplicationUtilities.ConstructShellTargetUrl*
  exceptions:
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "\nIf the specific target location causes an improper URL to be\nconstructed.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.WebApplicationUtilities.ConstructShellTargetUrl(System.Web.HttpContext,System.String,System.String,System.String)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.ConstructShellTargetUrl(System.Web.HttpContext,System.String,System.String,System.String)
  id: ConstructShellTargetUrl(System.Web.HttpContext,System.String,System.String,System.String)
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: ConstructShellTargetUrl(HttpContext, String, String, String)
  nameWithType: WebApplicationUtilities.ConstructShellTargetUrl(HttpContext, String, String, String)
  fullName: Microsoft.Health.Web.WebApplicationUtilities.ConstructShellTargetUrl(System.Web.HttpContext, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ConstructShellTargetUrl
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 936
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nConstructs a URL to be redirected to via the HealthVault URL \nredirector.\n"
  remarks: "\nThe <span class=\"paramref\">targetLocation</span> will be passed as the target parameter value to\nthe redirector URL.\nThe <span class=\"paramref\">targetQuery</span> will be URL encoded and passed as the targetqs \nparameter value to the redirector URL.\nThe <span class=\"paramref\">actionUrlQueryString</span> will be URL encoded and passed as the actionqs\nparameter value to the redirector URL.\n"
  example: []
  syntax:
    content: public static Uri ConstructShellTargetUrl(HttpContext context, string targetLocation, string targetQuery, string actionUrlQueryString)
    content.vb: Public Shared Function ConstructShellTargetUrl(context As HttpContext, targetLocation As String, targetQuery As String, actionUrlQueryString As String) As Uri
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "\nThe current request context.\n"
    - id: targetLocation
      type: System.String
      description: "\nA known constant indicating the internal HealthVault \nservice Shell location to redirect to.\nSee <a href=\"http://msdn.microsoft.com/en-us/library/ff803620.aspx\">Shell redirect interface</a>.\n"
    - id: targetQuery
      type: System.String
      description: "\nThe query string value to pass to the URL to which redirection is \ntaking place.\n"
    - id: actionUrlQueryString
      type: System.String
      description: "\nThe query string parameters passed to the calling application action URL after the\ntarget action is completed in the Shell.\n"
    return:
      type: System.Uri
      description: "\nThe constructed URL.\n"
  overload: Microsoft.Health.Web.WebApplicationUtilities.ConstructShellTargetUrl*
  exceptions:
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "\nIf the specific target location causes an improper URL to be\nconstructed.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.WebApplicationUtilities.ConstructShellTargetUrl(System.Web.HttpContext,Microsoft.Health.ShellRedirectParameters)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.ConstructShellTargetUrl(System.Web.HttpContext,Microsoft.Health.ShellRedirectParameters)
  id: ConstructShellTargetUrl(System.Web.HttpContext,Microsoft.Health.ShellRedirectParameters)
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: ConstructShellTargetUrl(HttpContext, ShellRedirectParameters)
  nameWithType: WebApplicationUtilities.ConstructShellTargetUrl(HttpContext, ShellRedirectParameters)
  fullName: Microsoft.Health.Web.WebApplicationUtilities.ConstructShellTargetUrl(System.Web.HttpContext, Microsoft.Health.ShellRedirectParameters)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ConstructShellTargetUrl
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 972
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nConstructs a URL to be redirected to via the HealthVault URL \nredirector.\n"
  example: []
  syntax:
    content: public static Uri ConstructShellTargetUrl(HttpContext context, ShellRedirectParameters redirectParameters)
    content.vb: Public Shared Function ConstructShellTargetUrl(context As HttpContext, redirectParameters As ShellRedirectParameters) As Uri
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "\nThe current request context.\n"
    - id: redirectParameters
      type: Microsoft.Health.ShellRedirectParameters
      description: "\nHealthVault Shell redirect parameters.\n"
    return:
      type: System.Uri
      description: "\nThe constructed URL.\n"
  overload: Microsoft.Health.Web.WebApplicationUtilities.ConstructShellTargetUrl*
  exceptions:
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "\nIf the specific target location causes an improper URL to be\nconstructed.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.WebApplicationUtilities.ConstructShellTargetUrl(System.Web.HttpContext,System.String)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.ConstructShellTargetUrl(System.Web.HttpContext,System.String)
  id: ConstructShellTargetUrl(System.Web.HttpContext,System.String)
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: ConstructShellTargetUrl(HttpContext, String)
  nameWithType: WebApplicationUtilities.ConstructShellTargetUrl(HttpContext, String)
  fullName: Microsoft.Health.Web.WebApplicationUtilities.ConstructShellTargetUrl(System.Web.HttpContext, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ConstructShellTargetUrl
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 1012
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nConstructs a URL to be redirected to via the HealthVault URL \nredirector.\n"
  remarks: "\nThe <span class=\"paramref\">targetLocation</span> will be passed as the target parameter value to\nthe redirector URL.\n"
  example: []
  syntax:
    content: public static Uri ConstructShellTargetUrl(HttpContext context, string targetLocation)
    content.vb: Public Shared Function ConstructShellTargetUrl(context As HttpContext, targetLocation As String) As Uri
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "\nThe current request context.\n"
    - id: targetLocation
      type: System.String
      description: "\nA known constant indicating the internal HealthVault \nservice Shell location to redirect to.\nSee <a href=\"http://msdn.microsoft.com/en-us/library/ff803620.aspx\">Shell redirect interface</a>.\n"
    return:
      type: System.Uri
      description: "\nThe constructed URL.\n"
  overload: Microsoft.Health.Web.WebApplicationUtilities.ConstructShellTargetUrl*
  exceptions:
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "\nIf the specific target location causes an improper URL to be\nconstructed.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.WebApplicationUtilities.GetPersonInfo(System.String)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.GetPersonInfo(System.String)
  id: GetPersonInfo(System.String)
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: GetPersonInfo(String)
  nameWithType: WebApplicationUtilities.GetPersonInfo(String)
  fullName: Microsoft.Health.Web.WebApplicationUtilities.GetPersonInfo(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetPersonInfo
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 1040
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nGets the authenticated person's information using the specified authentication token from\nthe configured default HealthVault web-service instance.\n"
  remarks: "\nApplications that work with more than one HealthVault instance should not call this method.\nInstead, call the overload which takes an <xref href=\"Microsoft.Health.HealthServiceInstance\" data-throw-if-not-resolved=\"false\"></xref>, specifying the\nHealthVault instance where the session auth token was created.\n"
  example: []
  syntax:
    content: public static PersonInfo GetPersonInfo(string authToken)
    content.vb: Public Shared Function GetPersonInfo(authToken As String) As PersonInfo
    parameters:
    - id: authToken
      type: System.String
      description: "\nThe authentication token for a user. This can be retrieved by extracting the WCToken\nquery string parameter from the request after the user has been redirected to the\nHealthVault AUTH page. See <xref href=\"Microsoft.Health.Web.WebApplicationUtilities.RedirectToShellUrl(System.Web.HttpContext%2cSystem.String)\" data-throw-if-not-resolved=\"false\"></xref> for more information.\n"
    return:
      type: Microsoft.Health.PersonInfo
      description: "\nThe information about the logged in person.\n"
  overload: Microsoft.Health.Web.WebApplicationUtilities.GetPersonInfo*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.WebApplicationUtilities.GetPersonInfo(System.String,Microsoft.Health.HealthServiceInstance)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.GetPersonInfo(System.String,Microsoft.Health.HealthServiceInstance)
  id: GetPersonInfo(System.String,Microsoft.Health.HealthServiceInstance)
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: GetPersonInfo(String, HealthServiceInstance)
  nameWithType: WebApplicationUtilities.GetPersonInfo(String, HealthServiceInstance)
  fullName: Microsoft.Health.Web.WebApplicationUtilities.GetPersonInfo(System.String, Microsoft.Health.HealthServiceInstance)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetPersonInfo
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 1065
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nGets the authenticated person's information using the specified authentication token from\nthe specified HealthVault web-service instance.\n"
  example: []
  syntax:
    content: public static PersonInfo GetPersonInfo(string authToken, HealthServiceInstance serviceInstance)
    content.vb: Public Shared Function GetPersonInfo(authToken As String, serviceInstance As HealthServiceInstance) As PersonInfo
    parameters:
    - id: authToken
      type: System.String
      description: "\nThe authentication token for a user. This can be retrieved by extracting the WCToken\nquery string parameter from the request after the user has been redirected to the\nHealthVault AUTH page. See <xref href=\"Microsoft.Health.Web.WebApplicationUtilities.RedirectToShellUrl(System.Web.HttpContext%2cSystem.String)\" data-throw-if-not-resolved=\"false\"></xref> for more information.\n"
    - id: serviceInstance
      type: Microsoft.Health.HealthServiceInstance
      description: "\nThe HealthVault web-service instance where the session auth token was received from.\n"
    return:
      type: Microsoft.Health.PersonInfo
      description: "\nThe information about the logged in person.\n"
  overload: Microsoft.Health.Web.WebApplicationUtilities.GetPersonInfo*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.WebApplicationUtilities.GetPersonInfo(System.String,System.Guid)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.GetPersonInfo(System.String,System.Guid)
  id: GetPersonInfo(System.String,System.Guid)
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: GetPersonInfo(String, Guid)
  nameWithType: WebApplicationUtilities.GetPersonInfo(String, Guid)
  fullName: Microsoft.Health.Web.WebApplicationUtilities.GetPersonInfo(System.String, System.Guid)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetPersonInfo
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 1098
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nGets the authenticated person's information using the specified authentication token,\nfrom the specified HealthVault web-service instance.\n"
  remarks: "\nApplications that work with more than one HealthVault instance should not call this method.\nInstead, call the overload which takes an <xref href=\"Microsoft.Health.HealthServiceInstance\" data-throw-if-not-resolved=\"false\"></xref>, specifying the\nHealthVault instance where the session auth token was created.\n"
  example: []
  syntax:
    content: public static PersonInfo GetPersonInfo(string authToken, Guid appId)
    content.vb: Public Shared Function GetPersonInfo(authToken As String, appId As Guid) As PersonInfo
    parameters:
    - id: authToken
      type: System.String
      description: "\nThe authentication token for a user. This can be retrieved by extracting the WCToken\nquery string parameter from the request after the user has been redirected to the\nHealthVault AUTH page. See <xref href=\"Microsoft.Health.Web.WebApplicationUtilities.RedirectToShellUrl(System.Web.HttpContext%2cSystem.String)\" data-throw-if-not-resolved=\"false\"></xref> for more information.\n"
    - id: appId
      type: System.Guid
      description: "\nThe unique identifier for the application.\n"
    return:
      type: Microsoft.Health.PersonInfo
      description: "\nThe information about the logged in person.\n"
  overload: Microsoft.Health.Web.WebApplicationUtilities.GetPersonInfo*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.WebApplicationUtilities.GetPersonInfo(System.String,System.Guid,Microsoft.Health.HealthServiceInstance)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.GetPersonInfo(System.String,System.Guid,Microsoft.Health.HealthServiceInstance)
  id: GetPersonInfo(System.String,System.Guid,Microsoft.Health.HealthServiceInstance)
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: GetPersonInfo(String, Guid, HealthServiceInstance)
  nameWithType: WebApplicationUtilities.GetPersonInfo(String, Guid, HealthServiceInstance)
  fullName: Microsoft.Health.Web.WebApplicationUtilities.GetPersonInfo(System.String, System.Guid, Microsoft.Health.HealthServiceInstance)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetPersonInfo
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 1132
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nGets the authenticated person's information using the specified authentication token,\nfrom the specified HealthVault web-service instance.\n"
  remarks: "\nApplications that work with more than one HealthVault instance should not call this method.\nInstead, call the overload which takes an <xref href=\"Microsoft.Health.HealthServiceInstance\" data-throw-if-not-resolved=\"false\"></xref>, specifying the\nHealthVault instance where the session auth token was created.\n"
  example: []
  syntax:
    content: public static PersonInfo GetPersonInfo(string authToken, Guid appId, HealthServiceInstance serviceInstance)
    content.vb: Public Shared Function GetPersonInfo(authToken As String, appId As Guid, serviceInstance As HealthServiceInstance) As PersonInfo
    parameters:
    - id: authToken
      type: System.String
      description: "\nThe authentication token for a user. This can be retrieved by extracting the WCToken\nquery string parameter from the request after the user has been redirected to the\nHealthVault AUTH page. See <xref href=\"Microsoft.Health.Web.WebApplicationUtilities.RedirectToShellUrl(System.Web.HttpContext%2cSystem.String)\" data-throw-if-not-resolved=\"false\"></xref> for more information.\n"
    - id: appId
      type: System.Guid
      description: "\nThe unique identifier for the application.\n"
    - id: serviceInstance
      type: Microsoft.Health.HealthServiceInstance
      description: "\nThe HealthVault web-service instance.\n"
    return:
      type: Microsoft.Health.PersonInfo
      description: "\nThe information about the logged in person.\n"
  overload: Microsoft.Health.Web.WebApplicationUtilities.GetPersonInfo*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.WebApplicationUtilities.LoadPersonInfoFromCookie(System.Web.HttpContext)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.LoadPersonInfoFromCookie(System.Web.HttpContext)
  id: LoadPersonInfoFromCookie(System.Web.HttpContext)
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: LoadPersonInfoFromCookie(HttpContext)
  nameWithType: WebApplicationUtilities.LoadPersonInfoFromCookie(HttpContext)
  fullName: Microsoft.Health.Web.WebApplicationUtilities.LoadPersonInfoFromCookie(System.Web.HttpContext)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: LoadPersonInfoFromCookie
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 1290
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nGets the person's information from the cookie.\n"
  example: []
  syntax:
    content: public static PersonInfo LoadPersonInfoFromCookie(HttpContext context)
    content.vb: Public Shared Function LoadPersonInfoFromCookie(context As HttpContext) As PersonInfo
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "\nThe current request context.\n"
    return:
      type: Microsoft.Health.PersonInfo
      description: "\nThe person's information that was stored in the cookie or null if the cookie doesn't \nexist. Note, the <xref href=\"Microsoft.Health.PersonInfo\" data-throw-if-not-resolved=\"false\"></xref> returned may contain an expired authentication\ntoken.\n"
  overload: Microsoft.Health.Web.WebApplicationUtilities.LoadPersonInfoFromCookie*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.WebApplicationUtilities.LoadPersonInfoFromCookie(System.Web.HttpCookie)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.LoadPersonInfoFromCookie(System.Web.HttpCookie)
  id: LoadPersonInfoFromCookie(System.Web.HttpCookie)
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: LoadPersonInfoFromCookie(HttpCookie)
  nameWithType: WebApplicationUtilities.LoadPersonInfoFromCookie(HttpCookie)
  fullName: Microsoft.Health.Web.WebApplicationUtilities.LoadPersonInfoFromCookie(System.Web.HttpCookie)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: LoadPersonInfoFromCookie
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 1346
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nGets the person's information from the cookie.\n"
  example: []
  syntax:
    content: public static PersonInfo LoadPersonInfoFromCookie(HttpCookie cookie)
    content.vb: Public Shared Function LoadPersonInfoFromCookie(cookie As HttpCookie) As PersonInfo
    parameters:
    - id: cookie
      type: System.Web.HttpCookie
      description: "\nThe cookie to load the person's information from\n"
    return:
      type: Microsoft.Health.PersonInfo
      description: "\nThe person's information that was stored in the cookie or null if the cookie doesn't\ncontain the information. Note, the <xref href=\"Microsoft.Health.PersonInfo\" data-throw-if-not-resolved=\"false\"></xref> returned may contain an \nexpired authentication token.\n"
  overload: Microsoft.Health.Web.WebApplicationUtilities.LoadPersonInfoFromCookie*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.WebApplicationUtilities.Compress(System.String,System.Int32@)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.Compress(System.String,System.Int32@)
  id: Compress(System.String,System.Int32@)
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: Compress(String, out Int32)
  nameWithType: WebApplicationUtilities.Compress(String, out Int32)
  fullName: Microsoft.Health.Web.WebApplicationUtilities.Compress(System.String, out System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Compress
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 1532
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nCompress incoming string.\n"
  example: []
  syntax:
    content: public static string Compress(string data, out int bufferLength)
    content.vb: Public Shared Function Compress(data As String, ByRef bufferLength As Integer) As String
    parameters:
    - id: data
      type: System.String
      description: "\nString to be compressed.\n"
    - id: bufferLength
      type: System.Int32
      description: "\nThe length of the incoming string in bytes.\n"
    return:
      type: System.String
      description: "\nBase 64 string of compressed data.\n"
  overload: Microsoft.Health.Web.WebApplicationUtilities.Compress*
  nameWithType.vb: WebApplicationUtilities.Compress(String, ByRef Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Health.Web.WebApplicationUtilities.Compress(System.String, ByRef System.Int32)
  name.vb: Compress(String, ByRef Int32)
- uid: Microsoft.Health.Web.WebApplicationUtilities.Compress(System.String)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.Compress(System.String)
  id: Compress(System.String)
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: Compress(String)
  nameWithType: WebApplicationUtilities.Compress(String)
  fullName: Microsoft.Health.Web.WebApplicationUtilities.Compress(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Compress
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 1563
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nCompress incoming string.\n"
  example: []
  syntax:
    content: public static string Compress(string data)
    content.vb: Public Shared Function Compress(data As String) As String
    parameters:
    - id: data
      type: System.String
      description: "\nString to be compressed.\n"
    return:
      type: System.String
      description: "\nBase 64 string of compressed data.\n"
  overload: Microsoft.Health.Web.WebApplicationUtilities.Compress*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.WebApplicationUtilities.Decompress(System.String)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.Decompress(System.String)
  id: Decompress(System.String)
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: Decompress(String)
  nameWithType: WebApplicationUtilities.Decompress(String)
  fullName: Microsoft.Health.Web.WebApplicationUtilities.Decompress(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Decompress
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 1581
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nDecompress a compressed string.\n"
  example: []
  syntax:
    content: public static string Decompress(string compressedData)
    content.vb: Public Shared Function Decompress(compressedData As String) As String
    parameters:
    - id: compressedData
      type: System.String
      description: "\nBase 64 String of compressed data.\n"
    return:
      type: System.String
      description: "\nUncompressed string.\n"
  overload: Microsoft.Health.Web.WebApplicationUtilities.Decompress*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.WebApplicationUtilities.SavePersonInfoToCookie(System.Web.HttpContext,Microsoft.Health.PersonInfo,System.Boolean)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.SavePersonInfoToCookie(System.Web.HttpContext,Microsoft.Health.PersonInfo,System.Boolean)
  id: SavePersonInfoToCookie(System.Web.HttpContext,Microsoft.Health.PersonInfo,System.Boolean)
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: SavePersonInfoToCookie(HttpContext, PersonInfo, Boolean)
  nameWithType: WebApplicationUtilities.SavePersonInfoToCookie(HttpContext, PersonInfo, Boolean)
  fullName: Microsoft.Health.Web.WebApplicationUtilities.SavePersonInfoToCookie(System.Web.HttpContext, Microsoft.Health.PersonInfo, System.Boolean)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SavePersonInfoToCookie
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 1756
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nStores the specified person's information in the cookie.\n"
  example: []
  syntax:
    content: public static void SavePersonInfoToCookie(HttpContext context, PersonInfo personInfo, bool clearIfNull)
    content.vb: Public Shared Sub SavePersonInfoToCookie(context As HttpContext, personInfo As PersonInfo, clearIfNull As Boolean)
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "\nThe current request context.\n"
    - id: personInfo
      type: Microsoft.Health.PersonInfo
      description: "\nThe person's information to store. If null and <span class=\"paramref\">clearIfNull</span> is true,\nthe cookie will be cleared and the person will be logged off from HealthVault.\n"
    - id: clearIfNull
      type: System.Boolean
      description: "\nIf true and <span class=\"paramref\">personInfo</span> is null, the cookie will be cleared and the\nperson will be logged off from HealthVault.\n"
  overload: Microsoft.Health.Web.WebApplicationUtilities.SavePersonInfoToCookie*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.WebApplicationUtilities.SavePersonInfoToCookie(Microsoft.Health.PersonInfo)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.SavePersonInfoToCookie(Microsoft.Health.PersonInfo)
  id: SavePersonInfoToCookie(Microsoft.Health.PersonInfo)
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: SavePersonInfoToCookie(PersonInfo)
  nameWithType: WebApplicationUtilities.SavePersonInfoToCookie(PersonInfo)
  fullName: Microsoft.Health.Web.WebApplicationUtilities.SavePersonInfoToCookie(Microsoft.Health.PersonInfo)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SavePersonInfoToCookie
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 1817
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nStores the specified person's information in the cookie.\n"
  remarks: "\nIf <span class=\"paramref\">personInfo</span> is null, the returned cookie will have an\nexpiration date in the past, and adding it to a response would result in the cookie\nbeing cleared.\n"
  example: []
  syntax:
    content: public static HttpCookie SavePersonInfoToCookie(PersonInfo personInfo)
    content.vb: Public Shared Function SavePersonInfoToCookie(personInfo As PersonInfo) As HttpCookie
    parameters:
    - id: personInfo
      type: Microsoft.Health.PersonInfo
      description: "\nThe authenticated person's information.\n"
    return:
      type: System.Web.HttpCookie
      description: "\nA cookie containing the person's information.\n"
  overload: Microsoft.Health.Web.WebApplicationUtilities.SavePersonInfoToCookie*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.WebApplicationUtilities.SavePersonInfoToCookie(Microsoft.Health.PersonInfo,System.Web.HttpCookie)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.SavePersonInfoToCookie(Microsoft.Health.PersonInfo,System.Web.HttpCookie)
  id: SavePersonInfoToCookie(Microsoft.Health.PersonInfo,System.Web.HttpCookie)
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: SavePersonInfoToCookie(PersonInfo, HttpCookie)
  nameWithType: WebApplicationUtilities.SavePersonInfoToCookie(PersonInfo, HttpCookie)
  fullName: Microsoft.Health.Web.WebApplicationUtilities.SavePersonInfoToCookie(Microsoft.Health.PersonInfo, System.Web.HttpCookie)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SavePersonInfoToCookie
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 1845
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nStores the specified person's information in the cookie.\n"
  remarks: "\nIf <span class=\"paramref\">personInfo</span> is null, the returned cookie will have an\nexpiration date in the past, and adding it to a response would result in the cookie\nbeing cleared.\n"
  example: []
  syntax:
    content: public static HttpCookie SavePersonInfoToCookie(PersonInfo personInfo, HttpCookie existingCookie)
    content.vb: Public Shared Function SavePersonInfoToCookie(personInfo As PersonInfo, existingCookie As HttpCookie) As HttpCookie
    parameters:
    - id: personInfo
      type: Microsoft.Health.PersonInfo
      description: "\nThe authenticated person's information.\n"
    - id: existingCookie
      type: System.Web.HttpCookie
      description: "\nThe existing cooke containing the person's information. The expiration date of this \ncookie will be used as the expiration date of the returned cookie.\n"
    return:
      type: System.Web.HttpCookie
      description: "\nA cookie containing the person's information.\n"
  overload: Microsoft.Health.Web.WebApplicationUtilities.SavePersonInfoToCookie*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.WebApplicationUtilities.RedirectToLogOn(System.Web.HttpContext,System.Boolean,System.String)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.RedirectToLogOn(System.Web.HttpContext,System.Boolean,System.String)
  id: RedirectToLogOn(System.Web.HttpContext,System.Boolean,System.String)
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: RedirectToLogOn(HttpContext, Boolean, String)
  nameWithType: WebApplicationUtilities.RedirectToLogOn(HttpContext, Boolean, String)
  fullName: Microsoft.Health.Web.WebApplicationUtilities.RedirectToLogOn(System.Web.HttpContext, System.Boolean, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: RedirectToLogOn
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 2023
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nRedirects the caller's browser to the logon page for \nauthentication.\n"
  remarks: "\nAfter the user successfully authenticates, they get redirected \nto the action url for which the target is set to either\nAppAuthSuccess or AppAuthRejected depending on whether the user\nauthorized one or more records for use with the application, \nwith the authentication token in the query\nstring. This is stripped out and used to populate HealthVault\ndata for the page.\n"
  example: []
  syntax:
    content: public static void RedirectToLogOn(HttpContext context, bool isMra, string actionUrlQueryString)
    content.vb: Public Shared Sub RedirectToLogOn(context As HttpContext, isMra As Boolean, actionUrlQueryString As String)
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "\nThe current request context.\n"
    - id: isMra
      type: System.Boolean
      description: "\nWhether this application simultaneously deals with multiple records\nfor the same person.\n"
    - id: actionUrlQueryString
      type: System.String
      description: "\nThe query string parameters to pass to the signin action URL after\nsignin.\n"
  overload: Microsoft.Health.Web.WebApplicationUtilities.RedirectToLogOn*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.WebApplicationUtilities.RedirectToLogOn(System.Web.HttpContext,System.Boolean,System.String,System.String)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.RedirectToLogOn(System.Web.HttpContext,System.Boolean,System.String,System.String)
  id: RedirectToLogOn(System.Web.HttpContext,System.Boolean,System.String,System.String)
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: RedirectToLogOn(HttpContext, Boolean, String, String)
  nameWithType: WebApplicationUtilities.RedirectToLogOn(HttpContext, Boolean, String, String)
  fullName: Microsoft.Health.Web.WebApplicationUtilities.RedirectToLogOn(System.Web.HttpContext, System.Boolean, System.String, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: RedirectToLogOn
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 2074
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nRedirects the caller's browser to the logon page for \nauthentication.\n"
  remarks: "\nAfter the user successfully authenticates, they get redirected \nto the action url for which the target is set to either\nAppAuthSuccess or AppAuthRejected depending on whether the user\nauthorized one or more records for use with the application, \nwith the authentication token in the query\nstring. This is stripped out and used to populate HealthVault\ndata for the page.\n"
  example: []
  syntax:
    content: public static void RedirectToLogOn(HttpContext context, bool isMra, string actionUrlQueryString, string signupCode)
    content.vb: Public Shared Sub RedirectToLogOn(context As HttpContext, isMra As Boolean, actionUrlQueryString As String, signupCode As String)
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "\nThe current request context.\n"
    - id: isMra
      type: System.Boolean
      description: "\nWhether this application simultaneously deals with multiple records\nfor the same person.\n"
    - id: actionUrlQueryString
      type: System.String
      description: "\nThe query string parameters to pass to the signin action URL after\nsignin.\n"
    - id: signupCode
      type: System.String
      description: "\nThe signup code for creating a HealthVault account.  This is required\nfor applications in locations with limited access to HealthVault.\nSignup codes may be obtained from\n<xref href=\"Microsoft.Health.ApplicationConnection.NewSignupCode\" data-throw-if-not-resolved=\"false\"></xref>,\n<xref href=\"Microsoft.Health.PatientConnect.PatientConnection.Create(Microsoft.Health.Web.OfflineWebApplicationConnection%2cSystem.String%2cSystem.String%2cSystem.String%2cSystem.Uri%2cSystem.String)\" data-throw-if-not-resolved=\"false\"></xref>,\n<xref href=\"Microsoft.Health.Package.ConnectPackage.Create(Microsoft.Health.Web.OfflineWebApplicationConnection%2cSystem.String%2cSystem.String%2cSystem.String%2cSystem.String%2cSystem.Collections.Generic.IList%7bMicrosoft.Health.HealthRecordItem%7d)\" data-throw-if-not-resolved=\"false\"></xref>,\n<xref href=\"Microsoft.Health.Package.ConnectPackage.Create(Microsoft.Health.Web.OfflineWebApplicationConnection%2cSystem.String%2cSystem.String%2cSystem.String%2cMicrosoft.Health.ItemTypes.PasswordProtectedPackage)\" data-throw-if-not-resolved=\"false\"></xref>,\n<xref href=\"Microsoft.Health.Package.ConnectPackage.Create(Microsoft.Health.Web.OfflineWebApplicationConnection%2cSystem.String%2cSystem.String%2cSystem.String%2cSystem.String%2cMicrosoft.Health.ItemTypes.PasswordProtectedPackage)\" data-throw-if-not-resolved=\"false\"></xref>,\n<xref href=\"Microsoft.Health.Package.ConnectPackage.CreatePackage(Microsoft.Health.Web.OfflineWebApplicationConnection%2cSystem.String%2cSystem.String%2cSystem.String%2cSystem.String%2cSystem.String%2cSystem.Collections.Generic.IList%7bMicrosoft.Health.HealthRecordItem%7d)\" data-throw-if-not-resolved=\"false\"></xref>,\nand <xref href=\"Microsoft.Health.Package.ConnectPackage.AllocatePackageId(Microsoft.Health.Web.OfflineWebApplicationConnection)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  overload: Microsoft.Health.Web.WebApplicationUtilities.RedirectToLogOn*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.WebApplicationUtilities.RedirectToLogOn(System.Web.HttpContext,Microsoft.Health.ShellRedirectParameters)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.RedirectToLogOn(System.Web.HttpContext,Microsoft.Health.ShellRedirectParameters)
  id: RedirectToLogOn(System.Web.HttpContext,Microsoft.Health.ShellRedirectParameters)
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: RedirectToLogOn(HttpContext, ShellRedirectParameters)
  nameWithType: WebApplicationUtilities.RedirectToLogOn(HttpContext, ShellRedirectParameters)
  fullName: Microsoft.Health.Web.WebApplicationUtilities.RedirectToLogOn(System.Web.HttpContext, Microsoft.Health.ShellRedirectParameters)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: RedirectToLogOn
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 2112
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nRedirects the caller's browser to the logon page for \nauthentication.\n"
  remarks: "\nAfter the user successfully authenticates, they get redirected \nto the action url for which the target is set to either\nAppAuthSuccess or AppAuthRejected depending on whether the user\nauthorized one or more records for use with the application, \nwith the authentication token in the query\nstring. This is stripped out and used to populate HealthVault\ndata for the page.\n"
  example: []
  syntax:
    content: public static void RedirectToLogOn(HttpContext context, ShellRedirectParameters redirectParameters)
    content.vb: Public Shared Sub RedirectToLogOn(context As HttpContext, redirectParameters As ShellRedirectParameters)
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "\nThe current request context.\n"
    - id: redirectParameters
      type: Microsoft.Health.ShellRedirectParameters
      description: "\nHealthVault Shell redirect parameters.\n"
  overload: Microsoft.Health.Web.WebApplicationUtilities.RedirectToLogOn*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.WebApplicationUtilities.RedirectToLogOn(System.Web.HttpContext,System.Boolean)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.RedirectToLogOn(System.Web.HttpContext,System.Boolean)
  id: RedirectToLogOn(System.Web.HttpContext,System.Boolean)
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: RedirectToLogOn(HttpContext, Boolean)
  nameWithType: WebApplicationUtilities.RedirectToLogOn(HttpContext, Boolean)
  fullName: Microsoft.Health.Web.WebApplicationUtilities.RedirectToLogOn(System.Web.HttpContext, System.Boolean)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: RedirectToLogOn
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 2157
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nRedirects the caller's browser to the logon page for \nauthentication.\n"
  remarks: "\nAfter the user successfully authenticates, they get redirected \nto the action url for which the target is set to either\nAppAuthSuccess or AppAuthRejected depending on whether the user\nauthorized one or more records for use with the application, with \nthe authentication token in the query\nstring. This is stripped out and used to populate HealthVault\ndata for the page.\n"
  example: []
  syntax:
    content: public static void RedirectToLogOn(HttpContext context, bool isMra)
    content.vb: Public Shared Sub RedirectToLogOn(context As HttpContext, isMra As Boolean)
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "\nThe current request context.\n"
    - id: isMra
      type: System.Boolean
      description: "\nWhether this application simultaneously deals with multiple records\nfor the same person.\n"
  overload: Microsoft.Health.Web.WebApplicationUtilities.RedirectToLogOn*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.WebApplicationUtilities.RedirectToLogOn(System.Web.HttpContext)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.RedirectToLogOn(System.Web.HttpContext)
  id: RedirectToLogOn(System.Web.HttpContext)
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: RedirectToLogOn(HttpContext)
  nameWithType: WebApplicationUtilities.RedirectToLogOn(HttpContext)
  fullName: Microsoft.Health.Web.WebApplicationUtilities.RedirectToLogOn(System.Web.HttpContext)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: RedirectToLogOn
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 2184
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nRedirects the caller's browser to the logon page for \nauthentication.\n"
  remarks: "\nAfter the user successfully authenticates, they get redirected \nback to the action url for which the target is set to either\nAppAuthSuccess or AppAuthRejected depending on whether the user\nauthorized one or more records for use with the application, \nwith the authentication token in the query\nstring. This is stripped out and used to populate HealthVault\ndata for the page.<br />\n<br />\nThis overload assumes that the applications does not simultaneously\ndeal with multiple records for the same person i.e. isMra is false.\n"
  example: []
  syntax:
    content: public static void RedirectToLogOn(HttpContext context)
    content.vb: Public Shared Sub RedirectToLogOn(context As HttpContext)
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "\nThe current request context.\n"
  overload: Microsoft.Health.Web.WebApplicationUtilities.RedirectToLogOn*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.WebApplicationUtilities.SignOut(System.Web.HttpContext)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.SignOut(System.Web.HttpContext)
  id: SignOut(System.Web.HttpContext)
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: SignOut(HttpContext)
  nameWithType: WebApplicationUtilities.SignOut(HttpContext)
  fullName: Microsoft.Health.Web.WebApplicationUtilities.SignOut(System.Web.HttpContext)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SignOut
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 2217
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nSigns the person out, cleans up the HealthVault session \ninformation, and redirects the user's browser to the signout action \nURL.\n"
  example: []
  syntax:
    content: public static void SignOut(HttpContext context)
    content.vb: Public Shared Sub SignOut(context As HttpContext)
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "\nThe current request context.\n"
  overload: Microsoft.Health.Web.WebApplicationUtilities.SignOut*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.WebApplicationUtilities.SignOut(System.Web.HttpContext,System.Guid)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.SignOut(System.Web.HttpContext,System.Guid)
  id: SignOut(System.Web.HttpContext,System.Guid)
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: SignOut(HttpContext, Guid)
  nameWithType: WebApplicationUtilities.SignOut(HttpContext, Guid)
  fullName: Microsoft.Health.Web.WebApplicationUtilities.SignOut(System.Web.HttpContext, System.Guid)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SignOut
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 2236
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nSigns the person out, cleans up the HealthVault session \ninformation, and redirects the user's browser to the signout action \nURL.\n"
  example: []
  syntax:
    content: public static void SignOut(HttpContext context, Guid appId)
    content.vb: Public Shared Sub SignOut(context As HttpContext, appId As Guid)
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "\nThe current request context.\n"
    - id: appId
      type: System.Guid
      description: "\nThe unique identifier for the application.\n"
  overload: Microsoft.Health.Web.WebApplicationUtilities.SignOut*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.WebApplicationUtilities.SignOut(System.Web.HttpContext,System.String)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.SignOut(System.Web.HttpContext,System.String)
  id: SignOut(System.Web.HttpContext,System.String)
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: SignOut(HttpContext, String)
  nameWithType: WebApplicationUtilities.SignOut(HttpContext, String)
  fullName: Microsoft.Health.Web.WebApplicationUtilities.SignOut(System.Web.HttpContext, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SignOut
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 2256
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nSigns the person out, cleans up the HealthVault session \ninformation, and redirects the user's browser to the signout action \nURL with the specified querystring parameter if any.\n"
  example: []
  syntax:
    content: public static void SignOut(HttpContext context, string actionUrlQueryString)
    content.vb: Public Shared Sub SignOut(context As HttpContext, actionUrlQueryString As String)
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "\nThe current request context.\n"
    - id: actionUrlQueryString
      type: System.String
      description: "\nThe query string parameters to pass to the signout action URL after\ncleaning up data.\n"
  overload: Microsoft.Health.Web.WebApplicationUtilities.SignOut*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.WebApplicationUtilities.SignOut(System.Web.HttpContext,System.String,System.Guid)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.SignOut(System.Web.HttpContext,System.String,System.Guid)
  id: SignOut(System.Web.HttpContext,System.String,System.Guid)
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: SignOut(HttpContext, String, Guid)
  nameWithType: WebApplicationUtilities.SignOut(HttpContext, String, Guid)
  fullName: Microsoft.Health.Web.WebApplicationUtilities.SignOut(System.Web.HttpContext, System.String, System.Guid)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SignOut
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 2284
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nSigns the person out, cleans up the HealthVault session \ninformation, and redirects the user's browser to the signout action \nURL with the specified querystring parameter if any.\n"
  example: []
  syntax:
    content: public static void SignOut(HttpContext context, string actionUrlQueryString, Guid appId)
    content.vb: Public Shared Sub SignOut(context As HttpContext, actionUrlQueryString As String, appId As Guid)
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "\nThe current request context.\n"
    - id: actionUrlQueryString
      type: System.String
      description: "\nThe query string parameters to pass to the signout action URL after\ncleaning up data.\n"
    - id: appId
      type: System.Guid
      description: "\nThe unique identifier of the application.\n"
  overload: Microsoft.Health.Web.WebApplicationUtilities.SignOut*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.WebApplicationUtilities.SignOut(System.Web.HttpContext,System.String,System.Guid,System.String)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.SignOut(System.Web.HttpContext,System.String,System.Guid,System.String)
  id: SignOut(System.Web.HttpContext,System.String,System.Guid,System.String)
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: SignOut(HttpContext, String, Guid, String)
  nameWithType: WebApplicationUtilities.SignOut(HttpContext, String, Guid, String)
  fullName: Microsoft.Health.Web.WebApplicationUtilities.SignOut(System.Web.HttpContext, System.String, System.Guid, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SignOut
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 2312
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nSigns the person out, cleans up the HealthVault session \ninformation, and redirects the user's browser to the signout action \nURL with the specified querystring parameter (including user's credential token) if any.\n"
  example: []
  syntax:
    content: public static void SignOut(HttpContext context, string actionUrlQueryString, Guid appId, string credentialToken)
    content.vb: Public Shared Sub SignOut(context As HttpContext, actionUrlQueryString As String, appId As Guid, credentialToken As String)
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "\nThe current request context.\n"
    - id: actionUrlQueryString
      type: System.String
      description: "\nThe query string parameters to pass to the signout action URL after\ncleaning up data.\n"
    - id: appId
      type: System.Guid
      description: "\nThe unique identifier of the application.\n"
    - id: credentialToken
      type: System.String
      description: "\nThe user's credential token to sign out.\n"
  overload: Microsoft.Health.Web.WebApplicationUtilities.SignOut*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.WebApplicationUtilities.SignOut(System.Web.HttpContext,System.String,System.Guid,System.String,Microsoft.Health.HealthServiceInstance)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.SignOut(System.Web.HttpContext,System.String,System.Guid,System.String,Microsoft.Health.HealthServiceInstance)
  id: SignOut(System.Web.HttpContext,System.String,System.Guid,System.String,Microsoft.Health.HealthServiceInstance)
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: SignOut(HttpContext, String, Guid, String, HealthServiceInstance)
  nameWithType: WebApplicationUtilities.SignOut(HttpContext, String, Guid, String, HealthServiceInstance)
  fullName: Microsoft.Health.Web.WebApplicationUtilities.SignOut(System.Web.HttpContext, System.String, System.Guid, System.String, Microsoft.Health.HealthServiceInstance)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SignOut
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 2349
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nSigns the person out, cleans up the HealthVault session \ninformation, and redirects the user's browser to the signout action \nURL with the specified querystring parameter (including user's credential token) if any.\n"
  example: []
  syntax:
    content: public static void SignOut(HttpContext context, string actionUrlQueryString, Guid appId, string credentialToken, HealthServiceInstance serviceInstance)
    content.vb: Public Shared Sub SignOut(context As HttpContext, actionUrlQueryString As String, appId As Guid, credentialToken As String, serviceInstance As HealthServiceInstance)
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "\nThe current request context.\n"
    - id: actionUrlQueryString
      type: System.String
      description: "\nThe query string parameters to pass to the signout action URL after\ncleaning up data.\n"
    - id: appId
      type: System.Guid
      description: "\nThe unique identifier of the application.\n"
    - id: credentialToken
      type: System.String
      description: "\nThe user's credential token to sign out.\n"
    - id: serviceInstance
      type: Microsoft.Health.HealthServiceInstance
      description: "\nThe HealthVault instance where the user account resides.\nIf <strong>null</strong>, the configured default HealthVault Shell URL will be used.\n"
  overload: Microsoft.Health.Web.WebApplicationUtilities.SignOut*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.WebApplicationUtilities.SignOut(System.Web.HttpContext,System.String,System.Guid,System.String,System.String)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.SignOut(System.Web.HttpContext,System.String,System.Guid,System.String,System.String)
  id: SignOut(System.Web.HttpContext,System.String,System.Guid,System.String,System.String)
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: SignOut(HttpContext, String, Guid, String, String)
  nameWithType: WebApplicationUtilities.SignOut(HttpContext, String, Guid, String, String)
  fullName: Microsoft.Health.Web.WebApplicationUtilities.SignOut(System.Web.HttpContext, System.String, System.Guid, System.String, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SignOut
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 2391
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nSigns the person out, cleans up the HealthVault session \ninformation, and redirects the user's browser to the signout action \nURL with the specified querystring parameter (including user's credential token) if any.\n"
  example: []
  syntax:
    content: public static void SignOut(HttpContext context, string actionUrlQueryString, Guid appId, string credentialToken, string shellRedirectorUrl)
    content.vb: Public Shared Sub SignOut(context As HttpContext, actionUrlQueryString As String, appId As Guid, credentialToken As String, shellRedirectorUrl As String)
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "\nThe current request context.\n"
    - id: actionUrlQueryString
      type: System.String
      description: "\nThe query string parameters to pass to the signout action URL after\ncleaning up data.\n"
    - id: appId
      type: System.Guid
      description: "\nThe unique identifier of the application.\n"
    - id: credentialToken
      type: System.String
      description: "\nThe user's credential token to sign out.\n"
    - id: shellRedirectorUrl
      type: System.String
      description: "\nThe base HealthVault Shell redirector URL.  If <strong>null</strong>,\nthe configured default HealthVault Shell URL will be used.\n"
  overload: Microsoft.Health.Web.WebApplicationUtilities.SignOut*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Web.WebApplicationUtilities.GotoHelp(System.Web.HttpContext,System.String)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.GotoHelp(System.Web.HttpContext,System.String)
  id: GotoHelp(System.Web.HttpContext,System.String)
  parent: Microsoft.Health.Web.WebApplicationUtilities
  langs:
  - csharp
  - vb
  name: GotoHelp(HttpContext, String)
  nameWithType: WebApplicationUtilities.GotoHelp(HttpContext, String)
  fullName: Microsoft.Health.Web.WebApplicationUtilities.GotoHelp(System.Web.HttpContext, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web/WebApplicationUtilities.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GotoHelp
    path: ../Microsoft.Health.Web/WebApplicationUtilities.cs
    startLine: 2425
  assemblies:
  - Microsoft.Health.Web
  namespace: Microsoft.Health.Web
  summary: "\nRedirects application to Shell help page\n"
  example: []
  syntax:
    content: public static void GotoHelp(HttpContext context, string topic)
    content.vb: Public Shared Sub GotoHelp(context As HttpContext, topic As String)
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "\nThe current request context.\n"
    - id: topic
      type: System.String
      description: "\nOptional topic string. For example, \"faq\" would redirect the user's browser to the\nHealthVault frequently asked questions.\n"
  overload: Microsoft.Health.Web.WebApplicationUtilities.GotoHelp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Health.Web.HealthServicePage
  commentId: T:Microsoft.Health.Web.HealthServicePage
  parent: Microsoft.Health.Web
  isExternal: false
  name: HealthServicePage
  nameWithType: HealthServicePage
  fullName: Microsoft.Health.Web.HealthServicePage
- uid: Microsoft.Health.Web.WebApplicationUtilities.PageOnInit(System.Web.HttpContext,System.Boolean)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.PageOnInit(System.Web.HttpContext,System.Boolean)
- uid: Microsoft.Health.Web.WebApplicationUtilities.PageOnPreLoad(System.Web.HttpContext,System.Boolean,System.Boolean)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.PageOnPreLoad(System.Web.HttpContext,System.Boolean,System.Boolean)
- uid: System.Web.UI.Page.OnInit(System.EventArgs)
  commentId: M:System.Web.UI.Page.OnInit(System.EventArgs)
  parent: System.Web.UI.Page
  isExternal: true
  name: OnInit(EventArgs)
  nameWithType: Page.OnInit(EventArgs)
  fullName: System.Web.UI.Page.OnInit(System.EventArgs)
  spec.csharp:
  - uid: System.Web.UI.Page.OnInit(System.EventArgs)
    name: OnInit
    nameWithType: Page.OnInit
    fullName: System.Web.UI.Page.OnInit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.UI.Page.OnInit(System.EventArgs)
    name: OnInit
    nameWithType: Page.OnInit
    fullName: System.Web.UI.Page.OnInit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.UI.Page.OnPreLoad(System.EventArgs)
  commentId: M:System.Web.UI.Page.OnPreLoad(System.EventArgs)
  parent: System.Web.UI.Page
  isExternal: true
  name: OnPreLoad(EventArgs)
  nameWithType: Page.OnPreLoad(EventArgs)
  fullName: System.Web.UI.Page.OnPreLoad(System.EventArgs)
  spec.csharp:
  - uid: System.Web.UI.Page.OnPreLoad(System.EventArgs)
    name: OnPreLoad
    nameWithType: Page.OnPreLoad
    fullName: System.Web.UI.Page.OnPreLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.UI.Page.OnPreLoad(System.EventArgs)
    name: OnPreLoad
    nameWithType: Page.OnPreLoad
    fullName: System.Web.UI.Page.OnPreLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Web.WebApplicationUtilities.LoadPersonInfoFromCookie(System.Web.HttpContext)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.LoadPersonInfoFromCookie(System.Web.HttpContext)
- uid: Microsoft.Health.PersonInfo
  commentId: T:Microsoft.Health.PersonInfo
  parent: Microsoft.Health
  isExternal: false
  name: PersonInfo
  nameWithType: PersonInfo
  fullName: Microsoft.Health.PersonInfo
- uid: Microsoft.Health.Web.WebApplicationUtilities.SavePersonInfoToCookie(System.Web.HttpContext,Microsoft.Health.PersonInfo)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.SavePersonInfoToCookie(System.Web.HttpContext,Microsoft.Health.PersonInfo)
- uid: Microsoft.Health.Web.WebApplicationUtilities.RefreshAndSavePersonInfoToCookie(System.Web.HttpContext,Microsoft.Health.PersonInfo)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.RefreshAndSavePersonInfoToCookie(System.Web.HttpContext,Microsoft.Health.PersonInfo)
- uid: Microsoft.Health.Web
  commentId: N:Microsoft.Health.Web
  isExternal: false
  name: Microsoft.Health.Web
  nameWithType: Microsoft.Health.Web
  fullName: Microsoft.Health.Web
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.UI.Page
  commentId: T:System.Web.UI.Page
  parent: System.Web.UI
  isExternal: true
  name: Page
  nameWithType: Page
  fullName: System.Web.UI.Page
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Web.UI
  commentId: N:System.Web.UI
  isExternal: false
  name: System.Web.UI
  nameWithType: System.Web.UI
  fullName: System.Web.UI
- uid: Microsoft.Health.Web.HealthServicePage.OnInit(System.EventArgs)
  commentId: M:Microsoft.Health.Web.HealthServicePage.OnInit(System.EventArgs)
  parent: Microsoft.Health.Web.HealthServicePage
  isExternal: true
  name: OnInit(EventArgs)
  nameWithType: HealthServicePage.OnInit(EventArgs)
  fullName: Microsoft.Health.Web.HealthServicePage.OnInit(System.EventArgs)
  spec.csharp:
  - uid: Microsoft.Health.Web.HealthServicePage.OnInit(System.EventArgs)
    name: OnInit
    nameWithType: HealthServicePage.OnInit
    fullName: Microsoft.Health.Web.HealthServicePage.OnInit
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Web.HealthServicePage.OnInit(System.EventArgs)
    name: OnInit
    nameWithType: HealthServicePage.OnInit
    fullName: Microsoft.Health.Web.HealthServicePage.OnInit
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Web.WebApplicationUtilities.PageOnInit*
  commentId: Overload:Microsoft.Health.Web.WebApplicationUtilities.PageOnInit
  isExternal: false
  name: PageOnInit
  nameWithType: WebApplicationUtilities.PageOnInit
  fullName: Microsoft.Health.Web.WebApplicationUtilities.PageOnInit
- uid: System.Web.HttpContext
  commentId: T:System.Web.HttpContext
  parent: System.Web
  isExternal: true
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web
  commentId: N:System.Web
  isExternal: false
  name: System.Web
  nameWithType: System.Web
  fullName: System.Web
- uid: Microsoft.Health.Web.WebApplicationUtilities.PageOnPreLoad*
  commentId: Overload:Microsoft.Health.Web.WebApplicationUtilities.PageOnPreLoad
  isExternal: false
  name: PageOnPreLoad
  nameWithType: WebApplicationUtilities.PageOnPreLoad
  fullName: Microsoft.Health.Web.WebApplicationUtilities.PageOnPreLoad
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Microsoft.Health.Web.WebApplicationUtilities.ApplicationAuthenticationCredential*
  commentId: Overload:Microsoft.Health.Web.WebApplicationUtilities.ApplicationAuthenticationCredential
  isExternal: false
  name: ApplicationAuthenticationCredential
  nameWithType: WebApplicationUtilities.ApplicationAuthenticationCredential
  fullName: Microsoft.Health.Web.WebApplicationUtilities.ApplicationAuthenticationCredential
- uid: Microsoft.Health.Web.Authentication.WebApplicationCredential
  commentId: T:Microsoft.Health.Web.Authentication.WebApplicationCredential
  parent: Microsoft.Health.Web.Authentication
  isExternal: false
  name: WebApplicationCredential
  nameWithType: WebApplicationCredential
  fullName: Microsoft.Health.Web.Authentication.WebApplicationCredential
- uid: Microsoft.Health.Web.Authentication
  commentId: N:Microsoft.Health.Web.Authentication
  isExternal: false
  name: Microsoft.Health.Web.Authentication
  nameWithType: Microsoft.Health.Web.Authentication
  fullName: Microsoft.Health.Web.Authentication
- uid: Microsoft.Health.Web.WebApplicationUtilities.GetApplicationAuthenticationCredential*
  commentId: Overload:Microsoft.Health.Web.WebApplicationUtilities.GetApplicationAuthenticationCredential
  isExternal: false
  name: GetApplicationAuthenticationCredential
  nameWithType: WebApplicationUtilities.GetApplicationAuthenticationCredential
  fullName: Microsoft.Health.Web.WebApplicationUtilities.GetApplicationAuthenticationCredential
- uid: Microsoft.Health.ApplicationConnection
  commentId: T:Microsoft.Health.ApplicationConnection
  parent: Microsoft.Health
  isExternal: false
  name: ApplicationConnection
  nameWithType: ApplicationConnection
  fullName: Microsoft.Health.ApplicationConnection
- uid: Microsoft.Health.Web.WebApplicationUtilities.ApplicationConnection*
  commentId: Overload:Microsoft.Health.Web.WebApplicationUtilities.ApplicationConnection
  isExternal: false
  name: ApplicationConnection
  nameWithType: WebApplicationUtilities.ApplicationConnection
  fullName: Microsoft.Health.Web.WebApplicationUtilities.ApplicationConnection
- uid: System.Security.SecurityException
  commentId: T:System.Security.SecurityException
- uid: Microsoft.Health.Web.WebApplicationUtilities.GetApplicationConnection*
  commentId: Overload:Microsoft.Health.Web.WebApplicationUtilities.GetApplicationConnection
  isExternal: false
  name: GetApplicationConnection
  nameWithType: WebApplicationUtilities.GetApplicationConnection
  fullName: Microsoft.Health.Web.WebApplicationUtilities.GetApplicationConnection
- uid: Microsoft.Health.HealthServiceInstance
  commentId: T:Microsoft.Health.HealthServiceInstance
  parent: Microsoft.Health
  isExternal: false
  name: HealthServiceInstance
  nameWithType: HealthServiceInstance
  fullName: Microsoft.Health.HealthServiceInstance
- uid: Microsoft.Health.Web.WebApplicationConnection
  commentId: T:Microsoft.Health.Web.WebApplicationConnection
  parent: Microsoft.Health.Web
  isExternal: false
  name: WebApplicationConnection
  nameWithType: WebApplicationConnection
  fullName: Microsoft.Health.Web.WebApplicationConnection
- uid: Microsoft.Health.Web.WebApplicationUtilities.GetAuthenticatedConnection*
  commentId: Overload:Microsoft.Health.Web.WebApplicationUtilities.GetAuthenticatedConnection
  isExternal: false
  name: GetAuthenticatedConnection
  nameWithType: WebApplicationUtilities.GetAuthenticatedConnection
  fullName: Microsoft.Health.Web.WebApplicationUtilities.GetAuthenticatedConnection
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
- uid: Microsoft.Health.Web.WebApplicationUtilities.ApplicationConnection
  commentId: P:Microsoft.Health.Web.WebApplicationUtilities.ApplicationConnection
- uid: Microsoft.Health.Web.WebApplicationUtilities.DictionaryConnection*
  commentId: Overload:Microsoft.Health.Web.WebApplicationUtilities.DictionaryConnection
  isExternal: false
  name: DictionaryConnection
  nameWithType: WebApplicationUtilities.DictionaryConnection
  fullName: Microsoft.Health.Web.WebApplicationUtilities.DictionaryConnection
- uid: Microsoft.Health.Web.WebApplicationUtilities.GetDictionaryConnectionForInstance*
  commentId: Overload:Microsoft.Health.Web.WebApplicationUtilities.GetDictionaryConnectionForInstance
  isExternal: false
  name: GetDictionaryConnectionForInstance
  nameWithType: WebApplicationUtilities.GetDictionaryConnectionForInstance
  fullName: Microsoft.Health.Web.WebApplicationUtilities.GetDictionaryConnectionForInstance
- uid: Microsoft.Health.Web.WebApplicationUtilities.AnonymousConnection*
  commentId: Overload:Microsoft.Health.Web.WebApplicationUtilities.AnonymousConnection
  isExternal: false
  name: AnonymousConnection
  nameWithType: WebApplicationUtilities.AnonymousConnection
  fullName: Microsoft.Health.Web.WebApplicationUtilities.AnonymousConnection
- uid: Microsoft.Health.AnonymousConnection
  commentId: T:Microsoft.Health.AnonymousConnection
  parent: Microsoft.Health
  isExternal: false
  name: AnonymousConnection
  nameWithType: AnonymousConnection
  fullName: Microsoft.Health.AnonymousConnection
- uid: Microsoft.Health.Web.WebApplicationUtilities.GetAnonymousConnectionForInstance*
  commentId: Overload:Microsoft.Health.Web.WebApplicationUtilities.GetAnonymousConnectionForInstance
  isExternal: false
  name: GetAnonymousConnectionForInstance
  nameWithType: WebApplicationUtilities.GetAnonymousConnectionForInstance
  fullName: Microsoft.Health.Web.WebApplicationUtilities.GetAnonymousConnectionForInstance
- uid: Microsoft.Health.Web.WebApplicationUtilities.RefreshAndSavePersonInfoToCookie*
  commentId: Overload:Microsoft.Health.Web.WebApplicationUtilities.RefreshAndSavePersonInfoToCookie
  isExternal: false
  name: RefreshAndSavePersonInfoToCookie
  nameWithType: WebApplicationUtilities.RefreshAndSavePersonInfoToCookie
  fullName: Microsoft.Health.Web.WebApplicationUtilities.RefreshAndSavePersonInfoToCookie
- uid: Microsoft.Health.Web.WebApplicationUtilities.SavePersonInfoToCookie*
  commentId: Overload:Microsoft.Health.Web.WebApplicationUtilities.SavePersonInfoToCookie
  isExternal: false
  name: SavePersonInfoToCookie
  nameWithType: WebApplicationUtilities.SavePersonInfoToCookie
  fullName: Microsoft.Health.Web.WebApplicationUtilities.SavePersonInfoToCookie
- uid: Microsoft.Health.Web.WebApplicationUtilities.PageOnPreLoad(System.Web.HttpContext,System.Boolean)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.PageOnPreLoad(System.Web.HttpContext,System.Boolean)
- uid: Microsoft.Health.HealthServiceException
  commentId: T:Microsoft.Health.HealthServiceException
  parent: Microsoft.Health
  isExternal: false
  name: HealthServiceException
  nameWithType: HealthServiceException
  fullName: Microsoft.Health.HealthServiceException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.Web.WebApplicationUtilities.RedirectToShellUrl*
  commentId: Overload:Microsoft.Health.Web.WebApplicationUtilities.RedirectToShellUrl
  isExternal: false
  name: RedirectToShellUrl
  nameWithType: WebApplicationUtilities.RedirectToShellUrl
  fullName: Microsoft.Health.Web.WebApplicationUtilities.RedirectToShellUrl
- uid: Microsoft.Health.ShellRedirectParameters
  commentId: T:Microsoft.Health.ShellRedirectParameters
  parent: Microsoft.Health
  isExternal: false
  name: ShellRedirectParameters
  nameWithType: ShellRedirectParameters
  fullName: Microsoft.Health.ShellRedirectParameters
- uid: Microsoft.Health.Web.WebApplicationUtilities.ConstructShellTargetUrl*
  commentId: Overload:Microsoft.Health.Web.WebApplicationUtilities.ConstructShellTargetUrl
  isExternal: false
  name: ConstructShellTargetUrl
  nameWithType: WebApplicationUtilities.ConstructShellTargetUrl
  fullName: Microsoft.Health.Web.WebApplicationUtilities.ConstructShellTargetUrl
- uid: System.UriFormatException
  commentId: T:System.UriFormatException
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Microsoft.Health.Web.WebApplicationUtilities.RedirectToShellUrl(System.Web.HttpContext,System.String)
  commentId: M:Microsoft.Health.Web.WebApplicationUtilities.RedirectToShellUrl(System.Web.HttpContext,System.String)
- uid: Microsoft.Health.Web.WebApplicationUtilities.GetPersonInfo*
  commentId: Overload:Microsoft.Health.Web.WebApplicationUtilities.GetPersonInfo
  isExternal: false
  name: GetPersonInfo
  nameWithType: WebApplicationUtilities.GetPersonInfo
  fullName: Microsoft.Health.Web.WebApplicationUtilities.GetPersonInfo
- uid: Microsoft.Health.Web.WebApplicationUtilities.LoadPersonInfoFromCookie*
  commentId: Overload:Microsoft.Health.Web.WebApplicationUtilities.LoadPersonInfoFromCookie
  isExternal: false
  name: LoadPersonInfoFromCookie
  nameWithType: WebApplicationUtilities.LoadPersonInfoFromCookie
  fullName: Microsoft.Health.Web.WebApplicationUtilities.LoadPersonInfoFromCookie
- uid: System.Web.HttpCookie
  commentId: T:System.Web.HttpCookie
  parent: System.Web
  isExternal: true
  name: HttpCookie
  nameWithType: HttpCookie
  fullName: System.Web.HttpCookie
- uid: Microsoft.Health.Web.WebApplicationUtilities.Compress*
  commentId: Overload:Microsoft.Health.Web.WebApplicationUtilities.Compress
  isExternal: false
  name: Compress
  nameWithType: WebApplicationUtilities.Compress
  fullName: Microsoft.Health.Web.WebApplicationUtilities.Compress
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Health.Web.WebApplicationUtilities.Decompress*
  commentId: Overload:Microsoft.Health.Web.WebApplicationUtilities.Decompress
  isExternal: false
  name: Decompress
  nameWithType: WebApplicationUtilities.Decompress
  fullName: Microsoft.Health.Web.WebApplicationUtilities.Decompress
- uid: Microsoft.Health.Web.WebApplicationUtilities.RedirectToLogOn*
  commentId: Overload:Microsoft.Health.Web.WebApplicationUtilities.RedirectToLogOn
  isExternal: false
  name: RedirectToLogOn
  nameWithType: WebApplicationUtilities.RedirectToLogOn
  fullName: Microsoft.Health.Web.WebApplicationUtilities.RedirectToLogOn
- uid: Microsoft.Health.ApplicationConnection.NewSignupCode
  commentId: M:Microsoft.Health.ApplicationConnection.NewSignupCode
  parent: Microsoft.Health.ApplicationConnection
  isExternal: false
  name: NewSignupCode()
  nameWithType: ApplicationConnection.NewSignupCode()
  fullName: Microsoft.Health.ApplicationConnection.NewSignupCode()
  spec.csharp:
  - uid: Microsoft.Health.ApplicationConnection.NewSignupCode
    name: NewSignupCode
    nameWithType: ApplicationConnection.NewSignupCode
    fullName: Microsoft.Health.ApplicationConnection.NewSignupCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ApplicationConnection.NewSignupCode
    name: NewSignupCode
    nameWithType: ApplicationConnection.NewSignupCode
    fullName: Microsoft.Health.ApplicationConnection.NewSignupCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.PatientConnect.PatientConnection.Create(Microsoft.Health.Web.OfflineWebApplicationConnection,System.String,System.String,System.String,System.Uri,System.String)
  commentId: M:Microsoft.Health.PatientConnect.PatientConnection.Create(Microsoft.Health.Web.OfflineWebApplicationConnection,System.String,System.String,System.String,System.Uri,System.String)
- uid: Microsoft.Health.Package.ConnectPackage.Create(Microsoft.Health.Web.OfflineWebApplicationConnection,System.String,System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Health.HealthRecordItem})
  commentId: M:Microsoft.Health.Package.ConnectPackage.Create(Microsoft.Health.Web.OfflineWebApplicationConnection,System.String,System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Health.HealthRecordItem})
- uid: Microsoft.Health.Package.ConnectPackage.Create(Microsoft.Health.Web.OfflineWebApplicationConnection,System.String,System.String,System.String,Microsoft.Health.ItemTypes.PasswordProtectedPackage)
  commentId: M:Microsoft.Health.Package.ConnectPackage.Create(Microsoft.Health.Web.OfflineWebApplicationConnection,System.String,System.String,System.String,Microsoft.Health.ItemTypes.PasswordProtectedPackage)
- uid: Microsoft.Health.Package.ConnectPackage.Create(Microsoft.Health.Web.OfflineWebApplicationConnection,System.String,System.String,System.String,System.String,Microsoft.Health.ItemTypes.PasswordProtectedPackage)
  commentId: M:Microsoft.Health.Package.ConnectPackage.Create(Microsoft.Health.Web.OfflineWebApplicationConnection,System.String,System.String,System.String,System.String,Microsoft.Health.ItemTypes.PasswordProtectedPackage)
- uid: Microsoft.Health.Package.ConnectPackage.CreatePackage(Microsoft.Health.Web.OfflineWebApplicationConnection,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Health.HealthRecordItem})
  commentId: M:Microsoft.Health.Package.ConnectPackage.CreatePackage(Microsoft.Health.Web.OfflineWebApplicationConnection,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Health.HealthRecordItem})
- uid: Microsoft.Health.Package.ConnectPackage.AllocatePackageId(Microsoft.Health.Web.OfflineWebApplicationConnection)
  commentId: M:Microsoft.Health.Package.ConnectPackage.AllocatePackageId(Microsoft.Health.Web.OfflineWebApplicationConnection)
- uid: Microsoft.Health.Web.WebApplicationUtilities.SignOut*
  commentId: Overload:Microsoft.Health.Web.WebApplicationUtilities.SignOut
  isExternal: false
  name: SignOut
  nameWithType: WebApplicationUtilities.SignOut
  fullName: Microsoft.Health.Web.WebApplicationUtilities.SignOut
- uid: Microsoft.Health.Web.WebApplicationUtilities.GotoHelp*
  commentId: Overload:Microsoft.Health.Web.WebApplicationUtilities.GotoHelp
  isExternal: false
  name: GotoHelp
  nameWithType: WebApplicationUtilities.GotoHelp
  fullName: Microsoft.Health.Web.WebApplicationUtilities.GotoHelp
