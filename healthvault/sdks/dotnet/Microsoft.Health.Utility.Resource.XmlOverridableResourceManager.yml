### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Utility.Resource.XmlOverridableResourceManager
  commentId: T:Microsoft.Health.Utility.Resource.XmlOverridableResourceManager
  id: XmlOverridableResourceManager
  parent: Microsoft.Health.Utility.Resource
  children:
  - Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.#ctor(System.String,System.Reflection.Assembly)
  - Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.#ctor(System.String,System.Reflection.Assembly,System.Resources.ResourceManager)
  - Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.GetObject(System.String,System.Globalization.CultureInfo)
  - Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.GetResourceOverrideFilePrefix
  - Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.GetString(System.String,System.Globalization.CultureInfo)
  - Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.InternalGetResourceSet(System.Globalization.CultureInfo,System.Boolean,System.Boolean)
  - Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.ResourceSetType
  langs:
  - csharp
  - vb
  name: XmlOverridableResourceManager
  nameWithType: XmlOverridableResourceManager
  fullName: Microsoft.Health.Utility.Resource.XmlOverridableResourceManager
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/Resource/XmlOverridableResourceManager.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: XmlOverridableResourceManager
    path: ../Microsoft.Health.Utility/Resource/XmlOverridableResourceManager.cs
    startLine: 18
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Resource
  syntax:
    content: 'public class XmlOverridableResourceManager : ResourceManager'
    content.vb: >-
      Public Class XmlOverridableResourceManager
          Inherits ResourceManager
  inheritance:
  - System.Object
  - System.Resources.ResourceManager
  inheritedMembers:
  - System.Resources.ResourceManager.BaseNameField
  - System.Resources.ResourceManager.ResourceSets
  - System.Resources.ResourceManager.MainAssembly
  - System.Resources.ResourceManager.MagicNumber
  - System.Resources.ResourceManager.HeaderVersionNumber
  - System.Resources.ResourceManager.ReleaseAllResources
  - System.Resources.ResourceManager.CreateFileBasedResourceManager(System.String,System.String,System.Type)
  - System.Resources.ResourceManager.GetResourceFileName(System.Globalization.CultureInfo)
  - System.Resources.ResourceManager.GetResourceSet(System.Globalization.CultureInfo,System.Boolean,System.Boolean)
  - System.Resources.ResourceManager.GetSatelliteContractVersion(System.Reflection.Assembly)
  - System.Resources.ResourceManager.GetNeutralResourcesLanguage(System.Reflection.Assembly)
  - System.Resources.ResourceManager.GetString(System.String)
  - System.Resources.ResourceManager.GetObject(System.String)
  - System.Resources.ResourceManager.GetStream(System.String)
  - System.Resources.ResourceManager.GetStream(System.String,System.Globalization.CultureInfo)
  - System.Resources.ResourceManager.BaseName
  - System.Resources.ResourceManager.IgnoreCase
  - System.Resources.ResourceManager.FallbackLocation
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.#ctor(System.String,System.Reflection.Assembly)
  commentId: M:Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.#ctor(System.String,System.Reflection.Assembly)
  id: '#ctor(System.String,System.Reflection.Assembly)'
  parent: Microsoft.Health.Utility.Resource.XmlOverridableResourceManager
  langs:
  - csharp
  - vb
  name: XmlOverridableResourceManager(String, Assembly)
  nameWithType: XmlOverridableResourceManager.XmlOverridableResourceManager(String, Assembly)
  fullName: Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.XmlOverridableResourceManager(System.String, System.Reflection.Assembly)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/Resource/XmlOverridableResourceManager.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.Utility/Resource/XmlOverridableResourceManager.cs
    startLine: 29
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Resource
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Health.Utility.Resource.XmlOverridableResourceManager\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public XmlOverridableResourceManager(string baseName, Assembly assembly)
    content.vb: Public Sub New(baseName As String, assembly As Assembly)
    parameters:
    - id: baseName
      type: System.String
      description: Name of the base.
    - id: assembly
      type: System.Reflection.Assembly
      description: The assembly.
  overload: Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.#ctor(System.String,System.Reflection.Assembly,System.Resources.ResourceManager)
  commentId: M:Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.#ctor(System.String,System.Reflection.Assembly,System.Resources.ResourceManager)
  id: '#ctor(System.String,System.Reflection.Assembly,System.Resources.ResourceManager)'
  parent: Microsoft.Health.Utility.Resource.XmlOverridableResourceManager
  langs:
  - csharp
  - vb
  name: XmlOverridableResourceManager(String, Assembly, ResourceManager)
  nameWithType: XmlOverridableResourceManager.XmlOverridableResourceManager(String, Assembly, ResourceManager)
  fullName: Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.XmlOverridableResourceManager(System.String, System.Reflection.Assembly, System.Resources.ResourceManager)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/Resource/XmlOverridableResourceManager.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.Utility/Resource/XmlOverridableResourceManager.cs
    startLine: 45
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Resource
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Health.Utility.Resource.XmlOverridableResourceManager\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public XmlOverridableResourceManager(string baseName, Assembly assembly, ResourceManager defaultManager)
    content.vb: Public Sub New(baseName As String, assembly As Assembly, defaultManager As ResourceManager)
    parameters:
    - id: baseName
      type: System.String
      description: Name of the base.
    - id: assembly
      type: System.Reflection.Assembly
      description: The assembly.
    - id: defaultManager
      type: System.Resources.ResourceManager
      description: The default manager.
  overload: Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.ResourceSetType
  commentId: P:Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.ResourceSetType
  id: ResourceSetType
  parent: Microsoft.Health.Utility.Resource.XmlOverridableResourceManager
  langs:
  - csharp
  - vb
  name: ResourceSetType
  nameWithType: XmlOverridableResourceManager.ResourceSetType
  fullName: Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.ResourceSetType
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/Resource/XmlOverridableResourceManager.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ResourceSetType
    path: ../Microsoft.Health.Utility/Resource/XmlOverridableResourceManager.cs
    startLine: 67
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Resource
  summary: "\nGets the <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> of the <xref href=\"System.Resources.ResourceSet\" data-throw-if-not-resolved=\"false\"></xref> the <xref href=\"System.Resources.ResourceManager\" data-throw-if-not-resolved=\"false\"></xref> \nuses to construct a <xref href=\"System.Resources.ResourceSet\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  example: []
  syntax:
    content: public override Type ResourceSetType { get; }
    content.vb: Public Overrides ReadOnly Property ResourceSetType As Type
    parameters: []
    return:
      type: System.Type
      description: ''
  overridden: System.Resources.ResourceManager.ResourceSetType
  overload: Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.ResourceSetType*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.GetObject(System.String,System.Globalization.CultureInfo)
  commentId: M:Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.GetObject(System.String,System.Globalization.CultureInfo)
  id: GetObject(System.String,System.Globalization.CultureInfo)
  parent: Microsoft.Health.Utility.Resource.XmlOverridableResourceManager
  langs:
  - csharp
  - vb
  name: GetObject(String, CultureInfo)
  nameWithType: XmlOverridableResourceManager.GetObject(String, CultureInfo)
  fullName: Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.GetObject(System.String, System.Globalization.CultureInfo)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/Resource/XmlOverridableResourceManager.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetObject
    path: ../Microsoft.Health.Utility/Resource/XmlOverridableResourceManager.cs
    startLine: 91
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Resource
  summary: "\nGets the value of the <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> resource localized for the specified culture.\n"
  example: []
  syntax:
    content: public override object GetObject(string name, CultureInfo culture)
    content.vb: Public Overrides Function GetObject(name As String, culture As CultureInfo) As Object
    parameters:
    - id: name
      type: System.String
      description: The name of the resource to get.
    - id: culture
      type: System.Globalization.CultureInfo
      description: "The <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that represents the culture for which the resource is localized. \nNote that if the resource is not localized for this culture, the lookup will fall back using the culture's <xref href=\"System.Globalization.CultureInfo.Parent\" data-throw-if-not-resolved=\"false\"></xref> property, stopping after checking in the neutral culture.\nIf this value is null, the <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> is obtained using the culture's <xref href=\"System.Globalization.CultureInfo.CurrentUICulture\" data-throw-if-not-resolved=\"false\"></xref> property."
    return:
      type: System.Object
      description: "\nThe value of the resource, localized for the specified culture. If a \"best match\" is not possible, null is returned.\n"
  overridden: System.Resources.ResourceManager.GetObject(System.String,System.Globalization.CultureInfo)
  overload: Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.GetObject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">name</span> parameter is null.\n"
  - type: System.Resources.MissingManifestResourceException
    commentId: T:System.Resources.MissingManifestResourceException
    description: "\nNo usable set of resources have been found, and there are no neutral culture resources.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.GetString(System.String,System.Globalization.CultureInfo)
  commentId: M:Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.GetString(System.String,System.Globalization.CultureInfo)
  id: GetString(System.String,System.Globalization.CultureInfo)
  parent: Microsoft.Health.Utility.Resource.XmlOverridableResourceManager
  langs:
  - csharp
  - vb
  name: GetString(String, CultureInfo)
  nameWithType: XmlOverridableResourceManager.GetString(String, CultureInfo)
  fullName: Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.GetString(System.String, System.Globalization.CultureInfo)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/Resource/XmlOverridableResourceManager.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetString
    path: ../Microsoft.Health.Utility/Resource/XmlOverridableResourceManager.cs
    startLine: 129
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Resource
  summary: "\nGets the value of the <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> resource localized for the specified culture.\n"
  example: []
  syntax:
    content: public override string GetString(string name, CultureInfo culture)
    content.vb: Public Overrides Function GetString(name As String, culture As CultureInfo) As String
    parameters:
    - id: name
      type: System.String
      description: The name of the resource to get.
    - id: culture
      type: System.Globalization.CultureInfo
      description: "The <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that represents the culture for which the resource is localized. \nNote that if the resource is not localized for this culture, the lookup will fall back using the culture's <xref href=\"System.Globalization.CultureInfo.Parent\" data-throw-if-not-resolved=\"false\"></xref> property, stopping after looking in the neutral culture.\nIf this value is null, the <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> is obtained using the culture's <xref href=\"System.Globalization.CultureInfo.CurrentUICulture\" data-throw-if-not-resolved=\"false\"></xref> property."
    return:
      type: System.String
      description: "\nThe value of the resource localized for the specified culture. If a best match is not possible, null is returned.\n"
  overridden: System.Resources.ResourceManager.GetString(System.String,System.Globalization.CultureInfo)
  overload: Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.GetString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">name</span> parameter is null.\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nThe value of the specified resource is not a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  - type: System.Resources.MissingManifestResourceException
    commentId: T:System.Resources.MissingManifestResourceException
    description: "\nNo usable set of resources has been found, and there are no neutral culture resources.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.InternalGetResourceSet(System.Globalization.CultureInfo,System.Boolean,System.Boolean)
  commentId: M:Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.InternalGetResourceSet(System.Globalization.CultureInfo,System.Boolean,System.Boolean)
  id: InternalGetResourceSet(System.Globalization.CultureInfo,System.Boolean,System.Boolean)
  parent: Microsoft.Health.Utility.Resource.XmlOverridableResourceManager
  langs:
  - csharp
  - vb
  name: InternalGetResourceSet(CultureInfo, Boolean, Boolean)
  nameWithType: XmlOverridableResourceManager.InternalGetResourceSet(CultureInfo, Boolean, Boolean)
  fullName: Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.InternalGetResourceSet(System.Globalization.CultureInfo, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/Resource/XmlOverridableResourceManager.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: InternalGetResourceSet
    path: ../Microsoft.Health.Utility/Resource/XmlOverridableResourceManager.cs
    startLine: 166
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Resource
  summary: "\nProvides the implementation for finding a <xref href=\"System.Resources.ResourceSet\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected override ResourceSet InternalGetResourceSet(CultureInfo culture, bool createIfNotExists, bool tryParents)
    content.vb: Protected Overrides Function InternalGetResourceSet(culture As CultureInfo, createIfNotExists As Boolean, tryParents As Boolean) As ResourceSet
    parameters:
    - id: culture
      type: System.Globalization.CultureInfo
      description: The <xref href="System.Globalization.CultureInfo" data-throw-if-not-resolved="false"></xref> to look for.
    - id: createIfNotExists
      type: System.Boolean
      description: If true and if the <xref href="System.Resources.ResourceSet" data-throw-if-not-resolved="false"></xref> has not been loaded yet, load it.
    - id: tryParents
      type: System.Boolean
      description: If the <xref href="System.Resources.ResourceSet" data-throw-if-not-resolved="false"></xref> cannot be loaded, try parent <xref href="System.Globalization.CultureInfo" data-throw-if-not-resolved="false"></xref> objects to see if they exist.
    return:
      type: System.Resources.ResourceSet
      description: "\nThe specified <xref href=\"System.Resources.ResourceSet\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  overridden: System.Resources.ResourceManager.InternalGetResourceSet(System.Globalization.CultureInfo,System.Boolean,System.Boolean)
  overload: Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.InternalGetResourceSet*
  exceptions:
  - type: System.Resources.MissingManifestResourceException
    commentId: T:System.Resources.MissingManifestResourceException
    description: "\nThe main assembly does not contain a .resources file and it is required to look up a resource.\n"
  - type: System.ExecutionEngineException
    commentId: T:System.ExecutionEngineException
    description: "\nThere was an internal error in the runtime.\n"
  - type: System.Resources.MissingSatelliteAssemblyException
    commentId: T:System.Resources.MissingSatelliteAssemblyException
    description: "\nThe satellite assembly associated with <span class=\"paramref\">culture</span> could not be located.\n"
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.GetResourceOverrideFilePrefix
  commentId: M:Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.GetResourceOverrideFilePrefix
  id: GetResourceOverrideFilePrefix
  parent: Microsoft.Health.Utility.Resource.XmlOverridableResourceManager
  langs:
  - csharp
  - vb
  name: GetResourceOverrideFilePrefix()
  nameWithType: XmlOverridableResourceManager.GetResourceOverrideFilePrefix()
  fullName: Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.GetResourceOverrideFilePrefix()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/Resource/XmlOverridableResourceManager.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetResourceOverrideFilePrefix
    path: ../Microsoft.Health.Utility/Resource/XmlOverridableResourceManager.cs
    startLine: 296
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Resource
  syntax:
    content: protected string GetResourceOverrideFilePrefix()
    content.vb: Protected Function GetResourceOverrideFilePrefix As String
    return:
      type: System.String
  overload: Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.GetResourceOverrideFilePrefix*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: Microsoft.Health.Utility.Resource
  commentId: N:Microsoft.Health.Utility.Resource
  isExternal: false
  name: Microsoft.Health.Utility.Resource
  nameWithType: Microsoft.Health.Utility.Resource
  fullName: Microsoft.Health.Utility.Resource
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Resources.ResourceManager
  commentId: T:System.Resources.ResourceManager
  parent: System.Resources
  isExternal: true
  name: ResourceManager
  nameWithType: ResourceManager
  fullName: System.Resources.ResourceManager
- uid: System.Resources.ResourceManager.BaseNameField
  commentId: F:System.Resources.ResourceManager.BaseNameField
  parent: System.Resources.ResourceManager
  isExternal: true
  name: BaseNameField
  nameWithType: ResourceManager.BaseNameField
  fullName: System.Resources.ResourceManager.BaseNameField
- uid: System.Resources.ResourceManager.ResourceSets
  commentId: F:System.Resources.ResourceManager.ResourceSets
  parent: System.Resources.ResourceManager
  isExternal: true
  name: ResourceSets
  nameWithType: ResourceManager.ResourceSets
  fullName: System.Resources.ResourceManager.ResourceSets
- uid: System.Resources.ResourceManager.MainAssembly
  commentId: F:System.Resources.ResourceManager.MainAssembly
  parent: System.Resources.ResourceManager
  isExternal: true
  name: MainAssembly
  nameWithType: ResourceManager.MainAssembly
  fullName: System.Resources.ResourceManager.MainAssembly
- uid: System.Resources.ResourceManager.MagicNumber
  commentId: F:System.Resources.ResourceManager.MagicNumber
  parent: System.Resources.ResourceManager
  isExternal: true
  name: MagicNumber
  nameWithType: ResourceManager.MagicNumber
  fullName: System.Resources.ResourceManager.MagicNumber
- uid: System.Resources.ResourceManager.HeaderVersionNumber
  commentId: F:System.Resources.ResourceManager.HeaderVersionNumber
  parent: System.Resources.ResourceManager
  isExternal: true
  name: HeaderVersionNumber
  nameWithType: ResourceManager.HeaderVersionNumber
  fullName: System.Resources.ResourceManager.HeaderVersionNumber
- uid: System.Resources.ResourceManager.ReleaseAllResources
  commentId: M:System.Resources.ResourceManager.ReleaseAllResources
  parent: System.Resources.ResourceManager
  isExternal: true
  name: ReleaseAllResources()
  nameWithType: ResourceManager.ReleaseAllResources()
  fullName: System.Resources.ResourceManager.ReleaseAllResources()
  spec.csharp:
  - uid: System.Resources.ResourceManager.ReleaseAllResources
    name: ReleaseAllResources
    nameWithType: ResourceManager.ReleaseAllResources
    fullName: System.Resources.ResourceManager.ReleaseAllResources
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Resources.ResourceManager.ReleaseAllResources
    name: ReleaseAllResources
    nameWithType: ResourceManager.ReleaseAllResources
    fullName: System.Resources.ResourceManager.ReleaseAllResources
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Resources.ResourceManager.CreateFileBasedResourceManager(System.String,System.String,System.Type)
  commentId: M:System.Resources.ResourceManager.CreateFileBasedResourceManager(System.String,System.String,System.Type)
  parent: System.Resources.ResourceManager
  isExternal: true
  name: CreateFileBasedResourceManager(String, String, Type)
  nameWithType: ResourceManager.CreateFileBasedResourceManager(String, String, Type)
  fullName: System.Resources.ResourceManager.CreateFileBasedResourceManager(System.String, System.String, System.Type)
  spec.csharp:
  - uid: System.Resources.ResourceManager.CreateFileBasedResourceManager(System.String,System.String,System.Type)
    name: CreateFileBasedResourceManager
    nameWithType: ResourceManager.CreateFileBasedResourceManager
    fullName: System.Resources.ResourceManager.CreateFileBasedResourceManager
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Resources.ResourceManager.CreateFileBasedResourceManager(System.String,System.String,System.Type)
    name: CreateFileBasedResourceManager
    nameWithType: ResourceManager.CreateFileBasedResourceManager
    fullName: System.Resources.ResourceManager.CreateFileBasedResourceManager
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Resources.ResourceManager.GetResourceFileName(System.Globalization.CultureInfo)
  commentId: M:System.Resources.ResourceManager.GetResourceFileName(System.Globalization.CultureInfo)
  parent: System.Resources.ResourceManager
  isExternal: true
  name: GetResourceFileName(CultureInfo)
  nameWithType: ResourceManager.GetResourceFileName(CultureInfo)
  fullName: System.Resources.ResourceManager.GetResourceFileName(System.Globalization.CultureInfo)
  spec.csharp:
  - uid: System.Resources.ResourceManager.GetResourceFileName(System.Globalization.CultureInfo)
    name: GetResourceFileName
    nameWithType: ResourceManager.GetResourceFileName
    fullName: System.Resources.ResourceManager.GetResourceFileName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Resources.ResourceManager.GetResourceFileName(System.Globalization.CultureInfo)
    name: GetResourceFileName
    nameWithType: ResourceManager.GetResourceFileName
    fullName: System.Resources.ResourceManager.GetResourceFileName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Resources.ResourceManager.GetResourceSet(System.Globalization.CultureInfo,System.Boolean,System.Boolean)
  commentId: M:System.Resources.ResourceManager.GetResourceSet(System.Globalization.CultureInfo,System.Boolean,System.Boolean)
  parent: System.Resources.ResourceManager
  isExternal: true
  name: GetResourceSet(CultureInfo, Boolean, Boolean)
  nameWithType: ResourceManager.GetResourceSet(CultureInfo, Boolean, Boolean)
  fullName: System.Resources.ResourceManager.GetResourceSet(System.Globalization.CultureInfo, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: System.Resources.ResourceManager.GetResourceSet(System.Globalization.CultureInfo,System.Boolean,System.Boolean)
    name: GetResourceSet
    nameWithType: ResourceManager.GetResourceSet
    fullName: System.Resources.ResourceManager.GetResourceSet
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Resources.ResourceManager.GetResourceSet(System.Globalization.CultureInfo,System.Boolean,System.Boolean)
    name: GetResourceSet
    nameWithType: ResourceManager.GetResourceSet
    fullName: System.Resources.ResourceManager.GetResourceSet
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Resources.ResourceManager.GetSatelliteContractVersion(System.Reflection.Assembly)
  commentId: M:System.Resources.ResourceManager.GetSatelliteContractVersion(System.Reflection.Assembly)
  parent: System.Resources.ResourceManager
  isExternal: true
  name: GetSatelliteContractVersion(Assembly)
  nameWithType: ResourceManager.GetSatelliteContractVersion(Assembly)
  fullName: System.Resources.ResourceManager.GetSatelliteContractVersion(System.Reflection.Assembly)
  spec.csharp:
  - uid: System.Resources.ResourceManager.GetSatelliteContractVersion(System.Reflection.Assembly)
    name: GetSatelliteContractVersion
    nameWithType: ResourceManager.GetSatelliteContractVersion
    fullName: System.Resources.ResourceManager.GetSatelliteContractVersion
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.Assembly
    name: Assembly
    nameWithType: Assembly
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Resources.ResourceManager.GetSatelliteContractVersion(System.Reflection.Assembly)
    name: GetSatelliteContractVersion
    nameWithType: ResourceManager.GetSatelliteContractVersion
    fullName: System.Resources.ResourceManager.GetSatelliteContractVersion
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.Assembly
    name: Assembly
    nameWithType: Assembly
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Resources.ResourceManager.GetNeutralResourcesLanguage(System.Reflection.Assembly)
  commentId: M:System.Resources.ResourceManager.GetNeutralResourcesLanguage(System.Reflection.Assembly)
  parent: System.Resources.ResourceManager
  isExternal: true
  name: GetNeutralResourcesLanguage(Assembly)
  nameWithType: ResourceManager.GetNeutralResourcesLanguage(Assembly)
  fullName: System.Resources.ResourceManager.GetNeutralResourcesLanguage(System.Reflection.Assembly)
  spec.csharp:
  - uid: System.Resources.ResourceManager.GetNeutralResourcesLanguage(System.Reflection.Assembly)
    name: GetNeutralResourcesLanguage
    nameWithType: ResourceManager.GetNeutralResourcesLanguage
    fullName: System.Resources.ResourceManager.GetNeutralResourcesLanguage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.Assembly
    name: Assembly
    nameWithType: Assembly
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Resources.ResourceManager.GetNeutralResourcesLanguage(System.Reflection.Assembly)
    name: GetNeutralResourcesLanguage
    nameWithType: ResourceManager.GetNeutralResourcesLanguage
    fullName: System.Resources.ResourceManager.GetNeutralResourcesLanguage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.Assembly
    name: Assembly
    nameWithType: Assembly
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Resources.ResourceManager.GetString(System.String)
  commentId: M:System.Resources.ResourceManager.GetString(System.String)
  parent: System.Resources.ResourceManager
  isExternal: true
  name: GetString(String)
  nameWithType: ResourceManager.GetString(String)
  fullName: System.Resources.ResourceManager.GetString(System.String)
  spec.csharp:
  - uid: System.Resources.ResourceManager.GetString(System.String)
    name: GetString
    nameWithType: ResourceManager.GetString
    fullName: System.Resources.ResourceManager.GetString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Resources.ResourceManager.GetString(System.String)
    name: GetString
    nameWithType: ResourceManager.GetString
    fullName: System.Resources.ResourceManager.GetString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Resources.ResourceManager.GetObject(System.String)
  commentId: M:System.Resources.ResourceManager.GetObject(System.String)
  parent: System.Resources.ResourceManager
  isExternal: true
  name: GetObject(String)
  nameWithType: ResourceManager.GetObject(String)
  fullName: System.Resources.ResourceManager.GetObject(System.String)
  spec.csharp:
  - uid: System.Resources.ResourceManager.GetObject(System.String)
    name: GetObject
    nameWithType: ResourceManager.GetObject
    fullName: System.Resources.ResourceManager.GetObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Resources.ResourceManager.GetObject(System.String)
    name: GetObject
    nameWithType: ResourceManager.GetObject
    fullName: System.Resources.ResourceManager.GetObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Resources.ResourceManager.GetStream(System.String)
  commentId: M:System.Resources.ResourceManager.GetStream(System.String)
  parent: System.Resources.ResourceManager
  isExternal: true
  name: GetStream(String)
  nameWithType: ResourceManager.GetStream(String)
  fullName: System.Resources.ResourceManager.GetStream(System.String)
  spec.csharp:
  - uid: System.Resources.ResourceManager.GetStream(System.String)
    name: GetStream
    nameWithType: ResourceManager.GetStream
    fullName: System.Resources.ResourceManager.GetStream
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Resources.ResourceManager.GetStream(System.String)
    name: GetStream
    nameWithType: ResourceManager.GetStream
    fullName: System.Resources.ResourceManager.GetStream
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Resources.ResourceManager.GetStream(System.String,System.Globalization.CultureInfo)
  commentId: M:System.Resources.ResourceManager.GetStream(System.String,System.Globalization.CultureInfo)
  parent: System.Resources.ResourceManager
  isExternal: true
  name: GetStream(String, CultureInfo)
  nameWithType: ResourceManager.GetStream(String, CultureInfo)
  fullName: System.Resources.ResourceManager.GetStream(System.String, System.Globalization.CultureInfo)
  spec.csharp:
  - uid: System.Resources.ResourceManager.GetStream(System.String,System.Globalization.CultureInfo)
    name: GetStream
    nameWithType: ResourceManager.GetStream
    fullName: System.Resources.ResourceManager.GetStream
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Resources.ResourceManager.GetStream(System.String,System.Globalization.CultureInfo)
    name: GetStream
    nameWithType: ResourceManager.GetStream
    fullName: System.Resources.ResourceManager.GetStream
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Resources.ResourceManager.BaseName
  commentId: P:System.Resources.ResourceManager.BaseName
  parent: System.Resources.ResourceManager
  isExternal: true
  name: BaseName
  nameWithType: ResourceManager.BaseName
  fullName: System.Resources.ResourceManager.BaseName
- uid: System.Resources.ResourceManager.IgnoreCase
  commentId: P:System.Resources.ResourceManager.IgnoreCase
  parent: System.Resources.ResourceManager
  isExternal: true
  name: IgnoreCase
  nameWithType: ResourceManager.IgnoreCase
  fullName: System.Resources.ResourceManager.IgnoreCase
- uid: System.Resources.ResourceManager.FallbackLocation
  commentId: P:System.Resources.ResourceManager.FallbackLocation
  parent: System.Resources.ResourceManager
  isExternal: true
  name: FallbackLocation
  nameWithType: ResourceManager.FallbackLocation
  fullName: System.Resources.ResourceManager.FallbackLocation
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<XmlOverridableResourceManager>()
  nameWithType: TypeHelper.ValueOrDbNull<XmlOverridableResourceManager>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Utility.Resource.XmlOverridableResourceManager>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of XmlOverridableResourceManager)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Utility.Resource.XmlOverridableResourceManager)()
  name.vb: ValueOrDbNull(Of XmlOverridableResourceManager)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<XmlOverridableResourceManager>
    nameWithType: TypeHelper.ValueOrDbNull<XmlOverridableResourceManager>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Utility.Resource.XmlOverridableResourceManager>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of XmlOverridableResourceManager)
    nameWithType: TypeHelper.ValueOrDbNull(Of XmlOverridableResourceManager)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Utility.Resource.XmlOverridableResourceManager)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Resources
  commentId: N:System.Resources
  isExternal: false
  name: System.Resources
  nameWithType: System.Resources
  fullName: System.Resources
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.Utility.Resource.XmlOverridableResourceManager
  commentId: T:Microsoft.Health.Utility.Resource.XmlOverridableResourceManager
  isExternal: false
  name: XmlOverridableResourceManager
  nameWithType: XmlOverridableResourceManager
  fullName: Microsoft.Health.Utility.Resource.XmlOverridableResourceManager
- uid: Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.#ctor*
  commentId: Overload:Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.#ctor
  isExternal: false
  name: XmlOverridableResourceManager
  nameWithType: XmlOverridableResourceManager.XmlOverridableResourceManager
  fullName: Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.XmlOverridableResourceManager
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Assembly
  commentId: T:System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: false
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Resources.ResourceSet
  commentId: T:System.Resources.ResourceSet
  parent: System.Resources
  isExternal: true
  name: ResourceSet
  nameWithType: ResourceSet
  fullName: System.Resources.ResourceSet
- uid: System.Resources.ResourceManager.ResourceSetType
  commentId: P:System.Resources.ResourceManager.ResourceSetType
  parent: System.Resources.ResourceManager
  isExternal: true
  name: ResourceSetType
  nameWithType: ResourceManager.ResourceSetType
  fullName: System.Resources.ResourceManager.ResourceSetType
- uid: Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.ResourceSetType*
  commentId: Overload:Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.ResourceSetType
  isExternal: false
  name: ResourceSetType
  nameWithType: XmlOverridableResourceManager.ResourceSetType
  fullName: Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.ResourceSetType
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Globalization.CultureInfo.Parent
  commentId: P:System.Globalization.CultureInfo.Parent
- uid: System.Globalization.CultureInfo.CurrentUICulture
  commentId: P:System.Globalization.CultureInfo.CurrentUICulture
- uid: System.Resources.ResourceManager.GetObject(System.String,System.Globalization.CultureInfo)
  commentId: M:System.Resources.ResourceManager.GetObject(System.String,System.Globalization.CultureInfo)
  parent: System.Resources.ResourceManager
  isExternal: true
  name: GetObject(String, CultureInfo)
  nameWithType: ResourceManager.GetObject(String, CultureInfo)
  fullName: System.Resources.ResourceManager.GetObject(System.String, System.Globalization.CultureInfo)
  spec.csharp:
  - uid: System.Resources.ResourceManager.GetObject(System.String,System.Globalization.CultureInfo)
    name: GetObject
    nameWithType: ResourceManager.GetObject
    fullName: System.Resources.ResourceManager.GetObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Resources.ResourceManager.GetObject(System.String,System.Globalization.CultureInfo)
    name: GetObject
    nameWithType: ResourceManager.GetObject
    fullName: System.Resources.ResourceManager.GetObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.GetObject*
  commentId: Overload:Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.GetObject
  isExternal: false
  name: GetObject
  nameWithType: XmlOverridableResourceManager.GetObject
  fullName: Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.GetObject
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.Resources.MissingManifestResourceException
  commentId: T:System.Resources.MissingManifestResourceException
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: false
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
- uid: System.Resources.ResourceManager.GetString(System.String,System.Globalization.CultureInfo)
  commentId: M:System.Resources.ResourceManager.GetString(System.String,System.Globalization.CultureInfo)
  parent: System.Resources.ResourceManager
  isExternal: true
  name: GetString(String, CultureInfo)
  nameWithType: ResourceManager.GetString(String, CultureInfo)
  fullName: System.Resources.ResourceManager.GetString(System.String, System.Globalization.CultureInfo)
  spec.csharp:
  - uid: System.Resources.ResourceManager.GetString(System.String,System.Globalization.CultureInfo)
    name: GetString
    nameWithType: ResourceManager.GetString
    fullName: System.Resources.ResourceManager.GetString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Resources.ResourceManager.GetString(System.String,System.Globalization.CultureInfo)
    name: GetString
    nameWithType: ResourceManager.GetString
    fullName: System.Resources.ResourceManager.GetString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.GetString*
  commentId: Overload:Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.GetString
  isExternal: false
  name: GetString
  nameWithType: XmlOverridableResourceManager.GetString
  fullName: Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.GetString
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
- uid: System.Resources.ResourceManager.InternalGetResourceSet(System.Globalization.CultureInfo,System.Boolean,System.Boolean)
  commentId: M:System.Resources.ResourceManager.InternalGetResourceSet(System.Globalization.CultureInfo,System.Boolean,System.Boolean)
  parent: System.Resources.ResourceManager
  isExternal: true
  name: InternalGetResourceSet(CultureInfo, Boolean, Boolean)
  nameWithType: ResourceManager.InternalGetResourceSet(CultureInfo, Boolean, Boolean)
  fullName: System.Resources.ResourceManager.InternalGetResourceSet(System.Globalization.CultureInfo, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: System.Resources.ResourceManager.InternalGetResourceSet(System.Globalization.CultureInfo,System.Boolean,System.Boolean)
    name: InternalGetResourceSet
    nameWithType: ResourceManager.InternalGetResourceSet
    fullName: System.Resources.ResourceManager.InternalGetResourceSet
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Resources.ResourceManager.InternalGetResourceSet(System.Globalization.CultureInfo,System.Boolean,System.Boolean)
    name: InternalGetResourceSet
    nameWithType: ResourceManager.InternalGetResourceSet
    fullName: System.Resources.ResourceManager.InternalGetResourceSet
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.InternalGetResourceSet*
  commentId: Overload:Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.InternalGetResourceSet
  isExternal: false
  name: InternalGetResourceSet
  nameWithType: XmlOverridableResourceManager.InternalGetResourceSet
  fullName: Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.InternalGetResourceSet
- uid: System.ExecutionEngineException
  commentId: T:System.ExecutionEngineException
- uid: System.Resources.MissingSatelliteAssemblyException
  commentId: T:System.Resources.MissingSatelliteAssemblyException
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.GetResourceOverrideFilePrefix*
  commentId: Overload:Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.GetResourceOverrideFilePrefix
  isExternal: false
  name: GetResourceOverrideFilePrefix
  nameWithType: XmlOverridableResourceManager.GetResourceOverrideFilePrefix
  fullName: Microsoft.Health.Utility.Resource.XmlOverridableResourceManager.GetResourceOverrideFilePrefix
