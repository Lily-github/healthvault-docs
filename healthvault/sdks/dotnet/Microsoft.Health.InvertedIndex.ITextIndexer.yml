### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.InvertedIndex.ITextIndexer
  commentId: T:Microsoft.Health.InvertedIndex.ITextIndexer
  id: ITextIndexer
  parent: Microsoft.Health.InvertedIndex
  children:
  - Microsoft.Health.InvertedIndex.ITextIndexer.Add(System.UInt32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Single}})
  - Microsoft.Health.InvertedIndex.ITextIndexer.ToIndex
  - Microsoft.Health.InvertedIndex.ITextIndexer.WordBreaker
  langs:
  - csharp
  - vb
  name: ITextIndexer
  nameWithType: ITextIndexer
  fullName: Microsoft.Health.InvertedIndex.ITextIndexer
  type: Interface
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/ITextIndexer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ITextIndexer
    path: ../Microsoft.Health.Utility/search/InvertedIndex/ITextIndexer.cs
    startLine: 10
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: 'public interface ITextIndexer : ISearchIndexer<string>'
    content.vb: >-
      Public Interface ITextIndexer
          Inherits ISearchIndexer(Of String)
  inheritedMembers:
  - Microsoft.Health.InvertedIndex.ISearchIndexer{System.String}.Add(System.UInt32,System.String)
  - Microsoft.Health.InvertedIndex.ISearchIndexer{System.String}.Add(System.UInt32,System.Collections.Generic.IList{System.String})
  - Microsoft.Health.InvertedIndex.ISearchIndexer{System.String}.Add(System.UInt32,System.Collections.Generic.IEnumerable{System.String})
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.InvertedIndex.ITextIndexer.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Health.InvertedIndex.ITextIndexer.WordBreaker
  commentId: P:Microsoft.Health.InvertedIndex.ITextIndexer.WordBreaker
  id: WordBreaker
  parent: Microsoft.Health.InvertedIndex.ITextIndexer
  langs:
  - csharp
  - vb
  name: WordBreaker
  nameWithType: ITextIndexer.WordBreaker
  fullName: Microsoft.Health.InvertedIndex.ITextIndexer.WordBreaker
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/ITextIndexer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WordBreaker
    path: ../Microsoft.Health.Utility/search/InvertedIndex/ITextIndexer.cs
    startLine: 15
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: IWordBreaker WordBreaker { get; set; }
    content.vb: Property WordBreaker As IWordBreaker
    parameters: []
    return:
      type: Microsoft.Health.PhraseAnalyzer.IWordBreaker
  overload: Microsoft.Health.InvertedIndex.ITextIndexer.WordBreaker*
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.Health.InvertedIndex.ITextIndexer.Add(System.UInt32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Single}})
  commentId: M:Microsoft.Health.InvertedIndex.ITextIndexer.Add(System.UInt32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Single}})
  id: Add(System.UInt32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Single}})
  parent: Microsoft.Health.InvertedIndex.ITextIndexer
  langs:
  - csharp
  - vb
  name: Add(UInt32, IEnumerable<KeyValuePair<String, Single>>)
  nameWithType: ITextIndexer.Add(UInt32, IEnumerable<KeyValuePair<String, Single>>)
  fullName: Microsoft.Health.InvertedIndex.ITextIndexer.Add(System.UInt32, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.Single>>)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/ITextIndexer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Add
    path: ../Microsoft.Health.Utility/search/InvertedIndex/ITextIndexer.cs
    startLine: 21
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\nGiven a recordID, add all the terms in that record to the index.\nAssociated with each term is a weight - which can be null\n"
  example: []
  syntax:
    content: void Add(uint recordID, IEnumerable<KeyValuePair<string, float>> terms)
    content.vb: Sub Add(recordID As UInteger, terms As IEnumerable(Of KeyValuePair(Of String, Single)))
    parameters:
    - id: recordID
      type: System.UInt32
    - id: terms
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Single}}
  overload: Microsoft.Health.InvertedIndex.ITextIndexer.Add*
  nameWithType.vb: ITextIndexer.Add(UInt32, IEnumerable(Of KeyValuePair(Of String, Single)))
  fullName.vb: Microsoft.Health.InvertedIndex.ITextIndexer.Add(System.UInt32, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Single)))
  name.vb: Add(UInt32, IEnumerable(Of KeyValuePair(Of String, Single)))
- uid: Microsoft.Health.InvertedIndex.ITextIndexer.ToIndex
  commentId: M:Microsoft.Health.InvertedIndex.ITextIndexer.ToIndex
  id: ToIndex
  parent: Microsoft.Health.InvertedIndex.ITextIndexer
  langs:
  - csharp
  - vb
  name: ToIndex()
  nameWithType: ITextIndexer.ToIndex()
  fullName: Microsoft.Health.InvertedIndex.ITextIndexer.ToIndex()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/ITextIndexer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ToIndex
    path: ../Microsoft.Health.Utility/search/InvertedIndex/ITextIndexer.cs
    startLine: 26
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\nReturn the final compiled index\n"
  example: []
  syntax:
    content: TextIndex ToIndex()
    content.vb: Function ToIndex As TextIndex
    return:
      type: Microsoft.Health.InvertedIndex.TextIndex
      description: ''
  overload: Microsoft.Health.InvertedIndex.ITextIndexer.ToIndex*
references:
- uid: Microsoft.Health.InvertedIndex
  commentId: N:Microsoft.Health.InvertedIndex
  isExternal: false
  name: Microsoft.Health.InvertedIndex
  nameWithType: Microsoft.Health.InvertedIndex
  fullName: Microsoft.Health.InvertedIndex
- uid: Microsoft.Health.InvertedIndex.ISearchIndexer{System.String}.Add(System.UInt32,System.String)
  commentId: M:Microsoft.Health.InvertedIndex.ISearchIndexer{System.String}.Add(System.UInt32,System.String)
  parent: Microsoft.Health.InvertedIndex.ISearchIndexer{System.String}
  definition: Microsoft.Health.InvertedIndex.ISearchIndexer`1.Add(System.UInt32,`0)
  name: Add(UInt32, String)
  nameWithType: ISearchIndexer<String>.Add(UInt32, String)
  fullName: Microsoft.Health.InvertedIndex.ISearchIndexer<System.String>.Add(System.UInt32, System.String)
  nameWithType.vb: ISearchIndexer(Of String).Add(UInt32, String)
  fullName.vb: Microsoft.Health.InvertedIndex.ISearchIndexer(Of System.String).Add(System.UInt32, System.String)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndexer`1.Add(System.UInt32,`0)
    name: Add
    nameWithType: ISearchIndexer<String>.Add
    fullName: Microsoft.Health.InvertedIndex.ISearchIndexer<System.String>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndexer`1.Add(System.UInt32,`0)
    name: Add
    nameWithType: ISearchIndexer(Of String).Add
    fullName: Microsoft.Health.InvertedIndex.ISearchIndexer(Of System.String).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.ISearchIndexer{System.String}.Add(System.UInt32,System.Collections.Generic.IList{System.String})
  commentId: M:Microsoft.Health.InvertedIndex.ISearchIndexer{System.String}.Add(System.UInt32,System.Collections.Generic.IList{System.String})
  parent: Microsoft.Health.InvertedIndex.ISearchIndexer{System.String}
  definition: Microsoft.Health.InvertedIndex.ISearchIndexer`1.Add(System.UInt32,System.Collections.Generic.IList{`0})
  name: Add(UInt32, IList<String>)
  nameWithType: ISearchIndexer<String>.Add(UInt32, IList<String>)
  fullName: Microsoft.Health.InvertedIndex.ISearchIndexer<System.String>.Add(System.UInt32, System.Collections.Generic.IList<System.String>)
  nameWithType.vb: ISearchIndexer(Of String).Add(UInt32, IList(Of String))
  fullName.vb: Microsoft.Health.InvertedIndex.ISearchIndexer(Of System.String).Add(System.UInt32, System.Collections.Generic.IList(Of System.String))
  name.vb: Add(UInt32, IList(Of String))
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndexer`1.Add(System.UInt32,System.Collections.Generic.IList{`0})
    name: Add
    nameWithType: ISearchIndexer<String>.Add
    fullName: Microsoft.Health.InvertedIndex.ISearchIndexer<System.String>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndexer`1.Add(System.UInt32,System.Collections.Generic.IList{`0})
    name: Add
    nameWithType: ISearchIndexer(Of String).Add
    fullName: Microsoft.Health.InvertedIndex.ISearchIndexer(Of System.String).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.ISearchIndexer{System.String}.Add(System.UInt32,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Microsoft.Health.InvertedIndex.ISearchIndexer{System.String}.Add(System.UInt32,System.Collections.Generic.IEnumerable{System.String})
  parent: Microsoft.Health.InvertedIndex.ISearchIndexer{System.String}
  definition: Microsoft.Health.InvertedIndex.ISearchIndexer`1.Add(System.UInt32,System.Collections.Generic.IEnumerable{`0})
  name: Add(UInt32, IEnumerable<String>)
  nameWithType: ISearchIndexer<String>.Add(UInt32, IEnumerable<String>)
  fullName: Microsoft.Health.InvertedIndex.ISearchIndexer<System.String>.Add(System.UInt32, System.Collections.Generic.IEnumerable<System.String>)
  nameWithType.vb: ISearchIndexer(Of String).Add(UInt32, IEnumerable(Of String))
  fullName.vb: Microsoft.Health.InvertedIndex.ISearchIndexer(Of System.String).Add(System.UInt32, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: Add(UInt32, IEnumerable(Of String))
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndexer`1.Add(System.UInt32,System.Collections.Generic.IEnumerable{`0})
    name: Add
    nameWithType: ISearchIndexer<String>.Add
    fullName: Microsoft.Health.InvertedIndex.ISearchIndexer<System.String>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndexer`1.Add(System.UInt32,System.Collections.Generic.IEnumerable{`0})
    name: Add
    nameWithType: ISearchIndexer(Of String).Add
    fullName: Microsoft.Health.InvertedIndex.ISearchIndexer(Of System.String).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.ITextIndexer.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<ITextIndexer>()
  nameWithType: TypeHelper.ValueOrDbNull<ITextIndexer>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.InvertedIndex.ITextIndexer>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of ITextIndexer)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.InvertedIndex.ITextIndexer)()
  name.vb: ValueOrDbNull(Of ITextIndexer)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<ITextIndexer>
    nameWithType: TypeHelper.ValueOrDbNull<ITextIndexer>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.InvertedIndex.ITextIndexer>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of ITextIndexer)
    nameWithType: TypeHelper.ValueOrDbNull(Of ITextIndexer)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.InvertedIndex.ITextIndexer)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.ISearchIndexer`1.Add(System.UInt32,`0)
  commentId: M:Microsoft.Health.InvertedIndex.ISearchIndexer`1.Add(System.UInt32,`0)
  isExternal: true
  name: Add(UInt32, T)
  nameWithType: ISearchIndexer<T>.Add(UInt32, T)
  fullName: Microsoft.Health.InvertedIndex.ISearchIndexer<T>.Add(System.UInt32, T)
  nameWithType.vb: ISearchIndexer(Of T).Add(UInt32, T)
  fullName.vb: Microsoft.Health.InvertedIndex.ISearchIndexer(Of T).Add(System.UInt32, T)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndexer`1.Add(System.UInt32,`0)
    name: Add
    nameWithType: ISearchIndexer<T>.Add
    fullName: Microsoft.Health.InvertedIndex.ISearchIndexer<T>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndexer`1.Add(System.UInt32,`0)
    name: Add
    nameWithType: ISearchIndexer(Of T).Add
    fullName: Microsoft.Health.InvertedIndex.ISearchIndexer(Of T).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.ISearchIndexer{System.String}
  commentId: T:Microsoft.Health.InvertedIndex.ISearchIndexer{System.String}
  parent: Microsoft.Health.InvertedIndex
  definition: Microsoft.Health.InvertedIndex.ISearchIndexer`1
  name: ISearchIndexer<String>
  nameWithType: ISearchIndexer<String>
  fullName: Microsoft.Health.InvertedIndex.ISearchIndexer<System.String>
  nameWithType.vb: ISearchIndexer(Of String)
  fullName.vb: Microsoft.Health.InvertedIndex.ISearchIndexer(Of System.String)
  name.vb: ISearchIndexer(Of String)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndexer`1
    name: ISearchIndexer
    nameWithType: ISearchIndexer
    fullName: Microsoft.Health.InvertedIndex.ISearchIndexer
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndexer`1
    name: ISearchIndexer
    nameWithType: ISearchIndexer
    fullName: Microsoft.Health.InvertedIndex.ISearchIndexer
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.ISearchIndexer`1.Add(System.UInt32,System.Collections.Generic.IList{`0})
  commentId: M:Microsoft.Health.InvertedIndex.ISearchIndexer`1.Add(System.UInt32,System.Collections.Generic.IList{`0})
  isExternal: true
  name: Add(UInt32, IList<T>)
  nameWithType: ISearchIndexer<T>.Add(UInt32, IList<T>)
  fullName: Microsoft.Health.InvertedIndex.ISearchIndexer<T>.Add(System.UInt32, System.Collections.Generic.IList<T>)
  nameWithType.vb: ISearchIndexer(Of T).Add(UInt32, IList(Of T))
  fullName.vb: Microsoft.Health.InvertedIndex.ISearchIndexer(Of T).Add(System.UInt32, System.Collections.Generic.IList(Of T))
  name.vb: Add(UInt32, IList(Of T))
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndexer`1.Add(System.UInt32,System.Collections.Generic.IList{`0})
    name: Add
    nameWithType: ISearchIndexer<T>.Add
    fullName: Microsoft.Health.InvertedIndex.ISearchIndexer<T>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndexer`1.Add(System.UInt32,System.Collections.Generic.IList{`0})
    name: Add
    nameWithType: ISearchIndexer(Of T).Add
    fullName: Microsoft.Health.InvertedIndex.ISearchIndexer(Of T).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.ISearchIndexer`1.Add(System.UInt32,System.Collections.Generic.IEnumerable{`0})
  commentId: M:Microsoft.Health.InvertedIndex.ISearchIndexer`1.Add(System.UInt32,System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: Add(UInt32, IEnumerable<T>)
  nameWithType: ISearchIndexer<T>.Add(UInt32, IEnumerable<T>)
  fullName: Microsoft.Health.InvertedIndex.ISearchIndexer<T>.Add(System.UInt32, System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: ISearchIndexer(Of T).Add(UInt32, IEnumerable(Of T))
  fullName.vb: Microsoft.Health.InvertedIndex.ISearchIndexer(Of T).Add(System.UInt32, System.Collections.Generic.IEnumerable(Of T))
  name.vb: Add(UInt32, IEnumerable(Of T))
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndexer`1.Add(System.UInt32,System.Collections.Generic.IEnumerable{`0})
    name: Add
    nameWithType: ISearchIndexer<T>.Add
    fullName: Microsoft.Health.InvertedIndex.ISearchIndexer<T>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndexer`1.Add(System.UInt32,System.Collections.Generic.IEnumerable{`0})
    name: Add
    nameWithType: ISearchIndexer(Of T).Add
    fullName: Microsoft.Health.InvertedIndex.ISearchIndexer(Of T).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.InvertedIndex.ISearchIndexer`1
  commentId: T:Microsoft.Health.InvertedIndex.ISearchIndexer`1
  isExternal: false
  name: ISearchIndexer<T>
  nameWithType: ISearchIndexer<T>
  fullName: Microsoft.Health.InvertedIndex.ISearchIndexer<T>
  nameWithType.vb: ISearchIndexer(Of T)
  fullName.vb: Microsoft.Health.InvertedIndex.ISearchIndexer(Of T)
  name.vb: ISearchIndexer(Of T)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndexer`1
    name: ISearchIndexer
    nameWithType: ISearchIndexer
    fullName: Microsoft.Health.InvertedIndex.ISearchIndexer
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndexer`1
    name: ISearchIndexer
    nameWithType: ISearchIndexer
    fullName: Microsoft.Health.InvertedIndex.ISearchIndexer
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.InvertedIndex.ITextIndexer.WordBreaker*
  commentId: Overload:Microsoft.Health.InvertedIndex.ITextIndexer.WordBreaker
  isExternal: false
  name: WordBreaker
  nameWithType: ITextIndexer.WordBreaker
  fullName: Microsoft.Health.InvertedIndex.ITextIndexer.WordBreaker
- uid: Microsoft.Health.PhraseAnalyzer.IWordBreaker
  commentId: T:Microsoft.Health.PhraseAnalyzer.IWordBreaker
  parent: Microsoft.Health.PhraseAnalyzer
  isExternal: false
  name: IWordBreaker
  nameWithType: IWordBreaker
  fullName: Microsoft.Health.PhraseAnalyzer.IWordBreaker
- uid: Microsoft.Health.PhraseAnalyzer
  commentId: N:Microsoft.Health.PhraseAnalyzer
  isExternal: false
  name: Microsoft.Health.PhraseAnalyzer
  nameWithType: Microsoft.Health.PhraseAnalyzer
  fullName: Microsoft.Health.PhraseAnalyzer
- uid: Microsoft.Health.InvertedIndex.ITextIndexer.Add*
  commentId: Overload:Microsoft.Health.InvertedIndex.ITextIndexer.Add
  isExternal: false
  name: Add
  nameWithType: ITextIndexer.Add
  fullName: Microsoft.Health.InvertedIndex.ITextIndexer.Add
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Single}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Single}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<String, Single>>
  nameWithType: IEnumerable<KeyValuePair<String, Single>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.Single>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, Single))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Single))
  name.vb: IEnumerable(Of KeyValuePair(Of String, Single))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Health.InvertedIndex.ITextIndexer.ToIndex*
  commentId: Overload:Microsoft.Health.InvertedIndex.ITextIndexer.ToIndex
  isExternal: false
  name: ToIndex
  nameWithType: ITextIndexer.ToIndex
  fullName: Microsoft.Health.InvertedIndex.ITextIndexer.ToIndex
- uid: Microsoft.Health.InvertedIndex.TextIndex
  commentId: T:Microsoft.Health.InvertedIndex.TextIndex
  parent: Microsoft.Health.InvertedIndex
  isExternal: false
  name: TextIndex
  nameWithType: TextIndex
  fullName: Microsoft.Health.InvertedIndex.TextIndex
