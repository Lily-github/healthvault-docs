### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.ItemTypes.ClaimAmounts
  commentId: T:Microsoft.Health.ItemTypes.ClaimAmounts
  id: ClaimAmounts
  parent: Microsoft.Health.ItemTypes
  children:
  - Microsoft.Health.ItemTypes.ClaimAmounts.#ctor
  - Microsoft.Health.ItemTypes.ClaimAmounts.#ctor(System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal)
  - Microsoft.Health.ItemTypes.ClaimAmounts.AmountNotCovered
  - Microsoft.Health.ItemTypes.ClaimAmounts.BenefitsPaid
  - Microsoft.Health.ItemTypes.ClaimAmounts.ChargedAmount
  - Microsoft.Health.ItemTypes.ClaimAmounts.Coinsurance
  - Microsoft.Health.ItemTypes.ClaimAmounts.CoPayment
  - Microsoft.Health.ItemTypes.ClaimAmounts.Deductible
  - Microsoft.Health.ItemTypes.ClaimAmounts.EligibleForBenefits
  - Microsoft.Health.ItemTypes.ClaimAmounts.MiscellaneousAdjustments
  - Microsoft.Health.ItemTypes.ClaimAmounts.NegotiatedAmount
  - Microsoft.Health.ItemTypes.ClaimAmounts.ParseXml(System.Xml.XPath.XPathNavigator)
  - Microsoft.Health.ItemTypes.ClaimAmounts.PatientResponsibility
  - Microsoft.Health.ItemTypes.ClaimAmounts.PercentageCovered
  - Microsoft.Health.ItemTypes.ClaimAmounts.ToString
  - Microsoft.Health.ItemTypes.ClaimAmounts.WriteXml(System.String,System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: ClaimAmounts
  nameWithType: ClaimAmounts
  fullName: Microsoft.Health.ItemTypes.ClaimAmounts
  type: Class
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ClaimAmounts.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ClaimAmounts
    path: ../Microsoft.Health.ItemTypes/ClaimAmounts.cs
    startLine: 19
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nThe financial information related to a claim on an explanation of benefits.\n"
  example: []
  syntax:
    content: 'public class ClaimAmounts : HealthRecordItemData'
    content.vb: >-
      Public Class ClaimAmounts
          Inherits HealthRecordItemData
  inheritance:
  - System.Object
  - Microsoft.Health.ItemTypes.HealthRecordItemData
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.ItemTypes.ClaimAmounts.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.ItemTypes.ClaimAmounts.#ctor
  commentId: M:Microsoft.Health.ItemTypes.ClaimAmounts.#ctor
  id: '#ctor'
  parent: Microsoft.Health.ItemTypes.ClaimAmounts
  langs:
  - csharp
  - vb
  name: ClaimAmounts()
  nameWithType: ClaimAmounts.ClaimAmounts()
  fullName: Microsoft.Health.ItemTypes.ClaimAmounts.ClaimAmounts()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ClaimAmounts.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.ItemTypes/ClaimAmounts.cs
    startLine: 30
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.ClaimAmounts\" data-throw-if-not-resolved=\"false\"></xref> class with default values.\n"
  remarks: "\nThis item is not added to the health record until the\n<xref href=\"Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)\" data-throw-if-not-resolved=\"false\"></xref> method\nis called\n"
  example: []
  syntax:
    content: public ClaimAmounts()
    content.vb: Public Sub New
  overload: Microsoft.Health.ItemTypes.ClaimAmounts.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.ClaimAmounts.#ctor(System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal)
  commentId: M:Microsoft.Health.ItemTypes.ClaimAmounts.#ctor(System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal)
  id: '#ctor(System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal)'
  parent: Microsoft.Health.ItemTypes.ClaimAmounts
  langs:
  - csharp
  - vb
  name: ClaimAmounts(Decimal, Decimal, Decimal, Decimal, Decimal, Decimal, Decimal, Decimal, Decimal, Decimal)
  nameWithType: ClaimAmounts.ClaimAmounts(Decimal, Decimal, Decimal, Decimal, Decimal, Decimal, Decimal, Decimal, Decimal, Decimal)
  fullName: Microsoft.Health.ItemTypes.ClaimAmounts.ClaimAmounts(System.Decimal, System.Decimal, System.Decimal, System.Decimal, System.Decimal, System.Decimal, System.Decimal, System.Decimal, System.Decimal, System.Decimal)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ClaimAmounts.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.ItemTypes/ClaimAmounts.cs
    startLine: 75
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.ClaimAmounts\" data-throw-if-not-resolved=\"false\"></xref> class specifying mandatory values.\n"
  remarks: "\nThis item is not added to the health record until the\n<xref href=\"Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)\" data-throw-if-not-resolved=\"false\"></xref> method\nis called\n"
  example: []
  syntax:
    content: public ClaimAmounts(decimal chargedAmount, decimal negotiatedAmount, decimal coPayment, decimal deductible, decimal amountNotCovered, decimal eligibleForBenefits, decimal coinsurance, decimal miscellaneousAdjustments, decimal benefitsPaid, decimal patientResponsibility)
    content.vb: Public Sub New(chargedAmount As Decimal, negotiatedAmount As Decimal, coPayment As Decimal, deductible As Decimal, amountNotCovered As Decimal, eligibleForBenefits As Decimal, coinsurance As Decimal, miscellaneousAdjustments As Decimal, benefitsPaid As Decimal, patientResponsibility As Decimal)
    parameters:
    - id: chargedAmount
      type: System.Decimal
      description: "\nThe amount charged.\n"
    - id: negotiatedAmount
      type: System.Decimal
      description: "\nThe amount negotiated between the provider and the payer.\n"
    - id: coPayment
      type: System.Decimal
      description: "\nThe copayment amount.\n"
    - id: deductible
      type: System.Decimal
      description: "\nThe deductible amount.\n"
    - id: amountNotCovered
      type: System.Decimal
      description: "\nAmount for services not covered by the plan.\n"
    - id: eligibleForBenefits
      type: System.Decimal
      description: "\nThe amount that is eligible for benefits.\n"
    - id: coinsurance
      type: System.Decimal
      description: "\nThe amount paid by the person.\n"
    - id: miscellaneousAdjustments
      type: System.Decimal
      description: "\nAdjustments that may affect the amount paid on the claim.\n"
    - id: benefitsPaid
      type: System.Decimal
      description: "\nThe amount paid by the payer.\n"
    - id: patientResponsibility
      type: System.Decimal
      description: "\nThe total amount paid by the patient.\n"
  overload: Microsoft.Health.ItemTypes.ClaimAmounts.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.ClaimAmounts.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.ClaimAmounts.ParseXml(System.Xml.XPath.XPathNavigator)
  id: ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.ClaimAmounts
  langs:
  - csharp
  - vb
  name: ParseXml(XPathNavigator)
  nameWithType: ClaimAmounts.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.ClaimAmounts.ParseXml(System.Xml.XPath.XPathNavigator)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ClaimAmounts.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ParseXml
    path: ../Microsoft.Health.ItemTypes/ClaimAmounts.cs
    startLine: 111
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nPopulates this <xref href=\"Microsoft.Health.ItemTypes.ClaimAmounts\" data-throw-if-not-resolved=\"false\"></xref> instance from the data in the specified XML.\n"
  example: []
  syntax:
    content: public override void ParseXml(XPathNavigator navigator)
    content.vb: Public Overrides Sub ParseXml(navigator As XPathNavigator)
    parameters:
    - id: navigator
      type: System.Xml.XPath.XPathNavigator
      description: "\nThe XML to get the ClaimAmounts data from.\n"
  overridden: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  overload: Microsoft.Health.ItemTypes.ClaimAmounts.ParseXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nIf <span class=\"paramref\">navigator</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.ClaimAmounts.WriteXml(System.String,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.ClaimAmounts.WriteXml(System.String,System.Xml.XmlWriter)
  id: WriteXml(System.String,System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.ClaimAmounts
  langs:
  - csharp
  - vb
  name: WriteXml(String, XmlWriter)
  nameWithType: ClaimAmounts.WriteXml(String, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.ClaimAmounts.WriteXml(System.String, System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ClaimAmounts.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteXml
    path: ../Microsoft.Health.ItemTypes/ClaimAmounts.cs
    startLine: 152
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nWrites the XML representation of the ClaimAmounts into\nthe specified XML writer.\n"
  example: []
  syntax:
    content: public override void WriteXml(string nodeName, XmlWriter writer)
    content.vb: Public Overrides Sub WriteXml(nodeName As String, writer As XmlWriter)
    parameters:
    - id: nodeName
      type: System.String
      description: "\nThe name of the outer node for the ClaimAmounts.\n"
    - id: writer
      type: System.Xml.XmlWriter
      description: "\nThe XML writer into which the ClaimAmounts should be\nwritten.\n"
  overridden: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  overload: Microsoft.Health.ItemTypes.ClaimAmounts.WriteXml*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nIf <span class=\"paramref\">nodeName</span> parameter is <strong>null</strong> or empty.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nIf <span class=\"paramref\">writer</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.ClaimAmounts.ChargedAmount
  commentId: P:Microsoft.Health.ItemTypes.ClaimAmounts.ChargedAmount
  id: ChargedAmount
  parent: Microsoft.Health.ItemTypes.ClaimAmounts
  langs:
  - csharp
  - vb
  name: ChargedAmount
  nameWithType: ClaimAmounts.ChargedAmount
  fullName: Microsoft.Health.ItemTypes.ClaimAmounts.ChargedAmount
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ClaimAmounts.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ChargedAmount
    path: ../Microsoft.Health.ItemTypes/ClaimAmounts.cs
    startLine: 180
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the amount charged.\n"
  example: []
  syntax:
    content: public decimal ChargedAmount { get; set; }
    content.vb: Public Property ChargedAmount As Decimal
    parameters: []
    return:
      type: System.Decimal
  overload: Microsoft.Health.ItemTypes.ClaimAmounts.ChargedAmount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.ClaimAmounts.NegotiatedAmount
  commentId: P:Microsoft.Health.ItemTypes.ClaimAmounts.NegotiatedAmount
  id: NegotiatedAmount
  parent: Microsoft.Health.ItemTypes.ClaimAmounts
  langs:
  - csharp
  - vb
  name: NegotiatedAmount
  nameWithType: ClaimAmounts.NegotiatedAmount
  fullName: Microsoft.Health.ItemTypes.ClaimAmounts.NegotiatedAmount
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ClaimAmounts.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: NegotiatedAmount
    path: ../Microsoft.Health.ItemTypes/ClaimAmounts.cs
    startLine: 192
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the amount negotiated between the provider and the payer.\n"
  example: []
  syntax:
    content: public decimal NegotiatedAmount { get; set; }
    content.vb: Public Property NegotiatedAmount As Decimal
    parameters: []
    return:
      type: System.Decimal
  overload: Microsoft.Health.ItemTypes.ClaimAmounts.NegotiatedAmount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.ClaimAmounts.CoPayment
  commentId: P:Microsoft.Health.ItemTypes.ClaimAmounts.CoPayment
  id: CoPayment
  parent: Microsoft.Health.ItemTypes.ClaimAmounts
  langs:
  - csharp
  - vb
  name: CoPayment
  nameWithType: ClaimAmounts.CoPayment
  fullName: Microsoft.Health.ItemTypes.ClaimAmounts.CoPayment
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ClaimAmounts.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CoPayment
    path: ../Microsoft.Health.ItemTypes/ClaimAmounts.cs
    startLine: 204
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the copayment amount.\n"
  example: []
  syntax:
    content: public decimal CoPayment { get; set; }
    content.vb: Public Property CoPayment As Decimal
    parameters: []
    return:
      type: System.Decimal
  overload: Microsoft.Health.ItemTypes.ClaimAmounts.CoPayment*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.ClaimAmounts.Deductible
  commentId: P:Microsoft.Health.ItemTypes.ClaimAmounts.Deductible
  id: Deductible
  parent: Microsoft.Health.ItemTypes.ClaimAmounts
  langs:
  - csharp
  - vb
  name: Deductible
  nameWithType: ClaimAmounts.Deductible
  fullName: Microsoft.Health.ItemTypes.ClaimAmounts.Deductible
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ClaimAmounts.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Deductible
    path: ../Microsoft.Health.ItemTypes/ClaimAmounts.cs
    startLine: 217
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the deductible amount.\n"
  example: []
  syntax:
    content: public decimal Deductible { get; set; }
    content.vb: Public Property Deductible As Decimal
    parameters: []
    return:
      type: System.Decimal
  overload: Microsoft.Health.ItemTypes.ClaimAmounts.Deductible*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.ClaimAmounts.AmountNotCovered
  commentId: P:Microsoft.Health.ItemTypes.ClaimAmounts.AmountNotCovered
  id: AmountNotCovered
  parent: Microsoft.Health.ItemTypes.ClaimAmounts
  langs:
  - csharp
  - vb
  name: AmountNotCovered
  nameWithType: ClaimAmounts.AmountNotCovered
  fullName: Microsoft.Health.ItemTypes.ClaimAmounts.AmountNotCovered
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ClaimAmounts.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AmountNotCovered
    path: ../Microsoft.Health.ItemTypes/ClaimAmounts.cs
    startLine: 229
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the amount for services not covered by the plan.\n"
  example: []
  syntax:
    content: public decimal AmountNotCovered { get; set; }
    content.vb: Public Property AmountNotCovered As Decimal
    parameters: []
    return:
      type: System.Decimal
  overload: Microsoft.Health.ItemTypes.ClaimAmounts.AmountNotCovered*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.ClaimAmounts.EligibleForBenefits
  commentId: P:Microsoft.Health.ItemTypes.ClaimAmounts.EligibleForBenefits
  id: EligibleForBenefits
  parent: Microsoft.Health.ItemTypes.ClaimAmounts
  langs:
  - csharp
  - vb
  name: EligibleForBenefits
  nameWithType: ClaimAmounts.EligibleForBenefits
  fullName: Microsoft.Health.ItemTypes.ClaimAmounts.EligibleForBenefits
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ClaimAmounts.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: EligibleForBenefits
    path: ../Microsoft.Health.ItemTypes/ClaimAmounts.cs
    startLine: 241
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the amount that is eligible for benefits.\n"
  example: []
  syntax:
    content: public decimal EligibleForBenefits { get; set; }
    content.vb: Public Property EligibleForBenefits As Decimal
    parameters: []
    return:
      type: System.Decimal
  overload: Microsoft.Health.ItemTypes.ClaimAmounts.EligibleForBenefits*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.ClaimAmounts.PercentageCovered
  commentId: P:Microsoft.Health.ItemTypes.ClaimAmounts.PercentageCovered
  id: PercentageCovered
  parent: Microsoft.Health.ItemTypes.ClaimAmounts
  langs:
  - csharp
  - vb
  name: PercentageCovered
  nameWithType: ClaimAmounts.PercentageCovered
  fullName: Microsoft.Health.ItemTypes.ClaimAmounts.PercentageCovered
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ClaimAmounts.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: PercentageCovered
    path: ../Microsoft.Health.ItemTypes/ClaimAmounts.cs
    startLine: 257
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the percentage of the eligable amount that is covered by the payer.\n"
  remarks: "\nThe value will be set to null if unknown.\n"
  example: []
  syntax:
    content: public double ? PercentageCovered { get; set; }
    content.vb: Public Property PercentageCovered As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  overload: Microsoft.Health.ItemTypes.ClaimAmounts.PercentageCovered*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.ClaimAmounts.Coinsurance
  commentId: P:Microsoft.Health.ItemTypes.ClaimAmounts.Coinsurance
  id: Coinsurance
  parent: Microsoft.Health.ItemTypes.ClaimAmounts
  langs:
  - csharp
  - vb
  name: Coinsurance
  nameWithType: ClaimAmounts.Coinsurance
  fullName: Microsoft.Health.ItemTypes.ClaimAmounts.Coinsurance
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ClaimAmounts.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Coinsurance
    path: ../Microsoft.Health.ItemTypes/ClaimAmounts.cs
    startLine: 269
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the amount paid by the person.\n"
  example: []
  syntax:
    content: public decimal Coinsurance { get; set; }
    content.vb: Public Property Coinsurance As Decimal
    parameters: []
    return:
      type: System.Decimal
  overload: Microsoft.Health.ItemTypes.ClaimAmounts.Coinsurance*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.ClaimAmounts.MiscellaneousAdjustments
  commentId: P:Microsoft.Health.ItemTypes.ClaimAmounts.MiscellaneousAdjustments
  id: MiscellaneousAdjustments
  parent: Microsoft.Health.ItemTypes.ClaimAmounts
  langs:
  - csharp
  - vb
  name: MiscellaneousAdjustments
  nameWithType: ClaimAmounts.MiscellaneousAdjustments
  fullName: Microsoft.Health.ItemTypes.ClaimAmounts.MiscellaneousAdjustments
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ClaimAmounts.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: MiscellaneousAdjustments
    path: ../Microsoft.Health.ItemTypes/ClaimAmounts.cs
    startLine: 281
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the adjustments that may affect the amount paid on the claim.\n"
  example: []
  syntax:
    content: public decimal MiscellaneousAdjustments { get; set; }
    content.vb: Public Property MiscellaneousAdjustments As Decimal
    parameters: []
    return:
      type: System.Decimal
  overload: Microsoft.Health.ItemTypes.ClaimAmounts.MiscellaneousAdjustments*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.ClaimAmounts.BenefitsPaid
  commentId: P:Microsoft.Health.ItemTypes.ClaimAmounts.BenefitsPaid
  id: BenefitsPaid
  parent: Microsoft.Health.ItemTypes.ClaimAmounts
  langs:
  - csharp
  - vb
  name: BenefitsPaid
  nameWithType: ClaimAmounts.BenefitsPaid
  fullName: Microsoft.Health.ItemTypes.ClaimAmounts.BenefitsPaid
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ClaimAmounts.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: BenefitsPaid
    path: ../Microsoft.Health.ItemTypes/ClaimAmounts.cs
    startLine: 293
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the amount paid by the payer.\n"
  example: []
  syntax:
    content: public decimal BenefitsPaid { get; set; }
    content.vb: Public Property BenefitsPaid As Decimal
    parameters: []
    return:
      type: System.Decimal
  overload: Microsoft.Health.ItemTypes.ClaimAmounts.BenefitsPaid*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.ClaimAmounts.PatientResponsibility
  commentId: P:Microsoft.Health.ItemTypes.ClaimAmounts.PatientResponsibility
  id: PatientResponsibility
  parent: Microsoft.Health.ItemTypes.ClaimAmounts
  langs:
  - csharp
  - vb
  name: PatientResponsibility
  nameWithType: ClaimAmounts.PatientResponsibility
  fullName: Microsoft.Health.ItemTypes.ClaimAmounts.PatientResponsibility
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ClaimAmounts.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: PatientResponsibility
    path: ../Microsoft.Health.ItemTypes/ClaimAmounts.cs
    startLine: 305
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the total amount paid by the patient.\n"
  example: []
  syntax:
    content: public decimal PatientResponsibility { get; set; }
    content.vb: Public Property PatientResponsibility As Decimal
    parameters: []
    return:
      type: System.Decimal
  overload: Microsoft.Health.ItemTypes.ClaimAmounts.PatientResponsibility*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.ClaimAmounts.ToString
  commentId: M:Microsoft.Health.ItemTypes.ClaimAmounts.ToString
  id: ToString
  parent: Microsoft.Health.ItemTypes.ClaimAmounts
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ClaimAmounts.ToString()
  fullName: Microsoft.Health.ItemTypes.ClaimAmounts.ToString()
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ClaimAmounts.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ToString
    path: ../Microsoft.Health.ItemTypes/ClaimAmounts.cs
    startLine: 321
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets a string representation of the ClaimAmounts.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\nA string representation of the ClaimAmounts.\n"
  overridden: System.Object.ToString
  overload: Microsoft.Health.ItemTypes.ClaimAmounts.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Health.ItemTypes
  commentId: N:Microsoft.Health.ItemTypes
  isExternal: false
  name: Microsoft.Health.ItemTypes
  nameWithType: Microsoft.Health.ItemTypes
  fullName: Microsoft.Health.ItemTypes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData
  commentId: T:Microsoft.Health.ItemTypes.HealthRecordItemData
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: HealthRecordItemData
  nameWithType: HealthRecordItemData
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.ClaimAmounts.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<ClaimAmounts>()
  nameWithType: TypeHelper.ValueOrDbNull<ClaimAmounts>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.ItemTypes.ClaimAmounts>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of ClaimAmounts)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.ItemTypes.ClaimAmounts)()
  name.vb: ValueOrDbNull(Of ClaimAmounts)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<ClaimAmounts>
    nameWithType: TypeHelper.ValueOrDbNull<ClaimAmounts>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.ItemTypes.ClaimAmounts>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of ClaimAmounts)
    nameWithType: TypeHelper.ValueOrDbNull(Of ClaimAmounts)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.ItemTypes.ClaimAmounts)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.ItemTypes.ClaimAmounts
  commentId: T:Microsoft.Health.ItemTypes.ClaimAmounts
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: ClaimAmounts
  nameWithType: ClaimAmounts
  fullName: Microsoft.Health.ItemTypes.ClaimAmounts
- uid: Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)
  commentId: M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)
  parent: Microsoft.Health.HealthRecordAccessor
  isExternal: false
  name: NewItem(HealthRecordItem)
  nameWithType: HealthRecordAccessor.NewItem(HealthRecordItem)
  fullName: Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)
    name: NewItem
    nameWithType: HealthRecordAccessor.NewItem
    fullName: Microsoft.Health.HealthRecordAccessor.NewItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.HealthRecordItem
    name: HealthRecordItem
    nameWithType: HealthRecordItem
    fullName: Microsoft.Health.HealthRecordItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)
    name: NewItem
    nameWithType: HealthRecordAccessor.NewItem
    fullName: Microsoft.Health.HealthRecordAccessor.NewItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.HealthRecordItem
    name: HealthRecordItem
    nameWithType: HealthRecordItem
    fullName: Microsoft.Health.HealthRecordItem
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.ClaimAmounts.#ctor*
  commentId: Overload:Microsoft.Health.ItemTypes.ClaimAmounts.#ctor
  isExternal: false
  name: ClaimAmounts
  nameWithType: ClaimAmounts.ClaimAmounts
  fullName: Microsoft.Health.ItemTypes.ClaimAmounts.ClaimAmounts
- uid: Microsoft.Health.HealthRecordAccessor
  commentId: T:Microsoft.Health.HealthRecordAccessor
  parent: Microsoft.Health
  isExternal: false
  name: HealthRecordAccessor
  nameWithType: HealthRecordAccessor
  fullName: Microsoft.Health.HealthRecordAccessor
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.HealthRecordItemData
  isExternal: true
  name: ParseXml(XPathNavigator)
  nameWithType: HealthRecordItemData.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: HealthRecordItemData.ParseXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: HealthRecordItemData.ParseXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.ClaimAmounts.ParseXml*
  commentId: Overload:Microsoft.Health.ItemTypes.ClaimAmounts.ParseXml
  isExternal: false
  name: ParseXml
  nameWithType: ClaimAmounts.ParseXml
  fullName: Microsoft.Health.ItemTypes.ClaimAmounts.ParseXml
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.Xml.XPath.XPathNavigator
  commentId: T:System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: true
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: false
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.HealthRecordItemData
  isExternal: true
  name: WriteXml(String, XmlWriter)
  nameWithType: HealthRecordItemData.WriteXml(String, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String, System.Xml.XmlWriter)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItemData.WriteXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItemData.WriteXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.ClaimAmounts.WriteXml*
  commentId: Overload:Microsoft.Health.ItemTypes.ClaimAmounts.WriteXml
  isExternal: false
  name: WriteXml
  nameWithType: ClaimAmounts.WriteXml
  fullName: Microsoft.Health.ItemTypes.ClaimAmounts.WriteXml
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: Microsoft.Health.ItemTypes.ClaimAmounts.ChargedAmount*
  commentId: Overload:Microsoft.Health.ItemTypes.ClaimAmounts.ChargedAmount
  isExternal: false
  name: ChargedAmount
  nameWithType: ClaimAmounts.ChargedAmount
  fullName: Microsoft.Health.ItemTypes.ClaimAmounts.ChargedAmount
- uid: Microsoft.Health.ItemTypes.ClaimAmounts.NegotiatedAmount*
  commentId: Overload:Microsoft.Health.ItemTypes.ClaimAmounts.NegotiatedAmount
  isExternal: false
  name: NegotiatedAmount
  nameWithType: ClaimAmounts.NegotiatedAmount
  fullName: Microsoft.Health.ItemTypes.ClaimAmounts.NegotiatedAmount
- uid: Microsoft.Health.ItemTypes.ClaimAmounts.CoPayment*
  commentId: Overload:Microsoft.Health.ItemTypes.ClaimAmounts.CoPayment
  isExternal: false
  name: CoPayment
  nameWithType: ClaimAmounts.CoPayment
  fullName: Microsoft.Health.ItemTypes.ClaimAmounts.CoPayment
- uid: Microsoft.Health.ItemTypes.ClaimAmounts.Deductible*
  commentId: Overload:Microsoft.Health.ItemTypes.ClaimAmounts.Deductible
  isExternal: false
  name: Deductible
  nameWithType: ClaimAmounts.Deductible
  fullName: Microsoft.Health.ItemTypes.ClaimAmounts.Deductible
- uid: Microsoft.Health.ItemTypes.ClaimAmounts.AmountNotCovered*
  commentId: Overload:Microsoft.Health.ItemTypes.ClaimAmounts.AmountNotCovered
  isExternal: false
  name: AmountNotCovered
  nameWithType: ClaimAmounts.AmountNotCovered
  fullName: Microsoft.Health.ItemTypes.ClaimAmounts.AmountNotCovered
- uid: Microsoft.Health.ItemTypes.ClaimAmounts.EligibleForBenefits*
  commentId: Overload:Microsoft.Health.ItemTypes.ClaimAmounts.EligibleForBenefits
  isExternal: false
  name: EligibleForBenefits
  nameWithType: ClaimAmounts.EligibleForBenefits
  fullName: Microsoft.Health.ItemTypes.ClaimAmounts.EligibleForBenefits
- uid: Microsoft.Health.ItemTypes.ClaimAmounts.PercentageCovered*
  commentId: Overload:Microsoft.Health.ItemTypes.ClaimAmounts.PercentageCovered
  isExternal: false
  name: PercentageCovered
  nameWithType: ClaimAmounts.PercentageCovered
  fullName: Microsoft.Health.ItemTypes.ClaimAmounts.PercentageCovered
- uid: System.Nullable{System.Double}
  commentId: T:System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  nameWithType.vb: Nullable(Of Double)
  fullName.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.ClaimAmounts.Coinsurance*
  commentId: Overload:Microsoft.Health.ItemTypes.ClaimAmounts.Coinsurance
  isExternal: false
  name: Coinsurance
  nameWithType: ClaimAmounts.Coinsurance
  fullName: Microsoft.Health.ItemTypes.ClaimAmounts.Coinsurance
- uid: Microsoft.Health.ItemTypes.ClaimAmounts.MiscellaneousAdjustments*
  commentId: Overload:Microsoft.Health.ItemTypes.ClaimAmounts.MiscellaneousAdjustments
  isExternal: false
  name: MiscellaneousAdjustments
  nameWithType: ClaimAmounts.MiscellaneousAdjustments
  fullName: Microsoft.Health.ItemTypes.ClaimAmounts.MiscellaneousAdjustments
- uid: Microsoft.Health.ItemTypes.ClaimAmounts.BenefitsPaid*
  commentId: Overload:Microsoft.Health.ItemTypes.ClaimAmounts.BenefitsPaid
  isExternal: false
  name: BenefitsPaid
  nameWithType: ClaimAmounts.BenefitsPaid
  fullName: Microsoft.Health.ItemTypes.ClaimAmounts.BenefitsPaid
- uid: Microsoft.Health.ItemTypes.ClaimAmounts.PatientResponsibility*
  commentId: Overload:Microsoft.Health.ItemTypes.ClaimAmounts.PatientResponsibility
  isExternal: false
  name: PatientResponsibility
  nameWithType: ClaimAmounts.PatientResponsibility
  fullName: Microsoft.Health.ItemTypes.ClaimAmounts.PatientResponsibility
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.ClaimAmounts.ToString*
  commentId: Overload:Microsoft.Health.ItemTypes.ClaimAmounts.ToString
  isExternal: false
  name: ToString
  nameWithType: ClaimAmounts.ToString
  fullName: Microsoft.Health.ItemTypes.ClaimAmounts.ToString
