### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Web.Mvc.HealthVaultIdentity
  commentId: T:Microsoft.Health.Web.Mvc.HealthVaultIdentity
  id: HealthVaultIdentity
  parent: Microsoft.Health.Web.Mvc
  children:
  - Microsoft.Health.Web.Mvc.HealthVaultIdentity.#ctor(Microsoft.Health.PersonInfo)
  - Microsoft.Health.Web.Mvc.HealthVaultIdentity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - Microsoft.Health.Web.Mvc.HealthVaultIdentity.AuthenticationType
  - Microsoft.Health.Web.Mvc.HealthVaultIdentity.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - Microsoft.Health.Web.Mvc.HealthVaultIdentity.IsAuthenticated
  - Microsoft.Health.Web.Mvc.HealthVaultIdentity.Name
  - Microsoft.Health.Web.Mvc.HealthVaultIdentity.PersonInfo
  langs:
  - csharp
  - vb
  name: HealthVaultIdentity
  nameWithType: HealthVaultIdentity
  fullName: Microsoft.Health.Web.Mvc.HealthVaultIdentity
  type: Class
  source:
    remote:
      path: Microsoft.Health.Web.Mvc/HealthVaultIdentity.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: HealthVaultIdentity
    path: HealthVaultIdentity.cs
    startLine: 21
  assemblies:
  - Microsoft.Health.Web.Mvc
  namespace: Microsoft.Health.Web.Mvc
  summary: "\nAn IIdentity object representing a <xref href=\"Microsoft.Health.Web.Mvc.HealthVaultIdentity.PersonInfo\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public class HealthVaultIdentity : IIdentity, ISerializable
    content.vb: >-
      <Serializable>

      Public Class HealthVaultIdentity
          Implements IIdentity, ISerializable
  inheritance:
  - System.Object
  implements:
  - System.Security.Principal.IIdentity
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.Web.Mvc.HealthVaultIdentity.#ctor(Microsoft.Health.PersonInfo)
  commentId: M:Microsoft.Health.Web.Mvc.HealthVaultIdentity.#ctor(Microsoft.Health.PersonInfo)
  id: '#ctor(Microsoft.Health.PersonInfo)'
  parent: Microsoft.Health.Web.Mvc.HealthVaultIdentity
  langs:
  - csharp
  - vb
  name: HealthVaultIdentity(PersonInfo)
  nameWithType: HealthVaultIdentity.HealthVaultIdentity(PersonInfo)
  fullName: Microsoft.Health.Web.Mvc.HealthVaultIdentity.HealthVaultIdentity(Microsoft.Health.PersonInfo)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Web.Mvc/HealthVaultIdentity.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: HealthVaultIdentity.cs
    startLine: 28
  assemblies:
  - Microsoft.Health.Web.Mvc
  namespace: Microsoft.Health.Web.Mvc
  summary: "\nCreates a new <xref href=\"Microsoft.Health.Web.Mvc.HealthVaultIdentity\" data-throw-if-not-resolved=\"false\"></xref> object for the given <xref href=\"Microsoft.Health.Web.Mvc.HealthVaultIdentity.PersonInfo\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public HealthVaultIdentity(PersonInfo personInfo)
    content.vb: Public Sub New(personInfo As PersonInfo)
    parameters:
    - id: personInfo
      type: Microsoft.Health.PersonInfo
      description: The <xref href="Microsoft.Health.Web.Mvc.HealthVaultIdentity.PersonInfo" data-throw-if-not-resolved="false"></xref> object to represent
  overload: Microsoft.Health.Web.Mvc.HealthVaultIdentity.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Web.Mvc.HealthVaultIdentity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:Microsoft.Health.Web.Mvc.HealthVaultIdentity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: Microsoft.Health.Web.Mvc.HealthVaultIdentity
  langs:
  - csharp
  - vb
  name: HealthVaultIdentity(SerializationInfo, StreamingContext)
  nameWithType: HealthVaultIdentity.HealthVaultIdentity(SerializationInfo, StreamingContext)
  fullName: Microsoft.Health.Web.Mvc.HealthVaultIdentity.HealthVaultIdentity(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Web.Mvc/HealthVaultIdentity.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: HealthVaultIdentity.cs
    startLine: 38
  assemblies:
  - Microsoft.Health.Web.Mvc
  namespace: Microsoft.Health.Web.Mvc
  summary: "\nDevelopment only. This constructor is used by the Visual Studio development server.\n"
  example: []
  syntax:
    content: protected HealthVaultIdentity(SerializationInfo info, StreamingContext context)
    content.vb: Protected Sub New(info As SerializationInfo, context As StreamingContext)
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: Serialization info
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: Streaming context
  overload: Microsoft.Health.Web.Mvc.HealthVaultIdentity.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.Health.Web.Mvc.HealthVaultIdentity.PersonInfo
  commentId: P:Microsoft.Health.Web.Mvc.HealthVaultIdentity.PersonInfo
  id: PersonInfo
  parent: Microsoft.Health.Web.Mvc.HealthVaultIdentity
  langs:
  - csharp
  - vb
  name: PersonInfo
  nameWithType: HealthVaultIdentity.PersonInfo
  fullName: Microsoft.Health.Web.Mvc.HealthVaultIdentity.PersonInfo
  type: Property
  source:
    remote:
      path: Microsoft.Health.Web.Mvc/HealthVaultIdentity.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: PersonInfo
    path: HealthVaultIdentity.cs
    startLine: 45
  assemblies:
  - Microsoft.Health.Web.Mvc
  namespace: Microsoft.Health.Web.Mvc
  summary: "\nGets the <xref href=\"Microsoft.Health.Web.Mvc.HealthVaultIdentity.PersonInfo\" data-throw-if-not-resolved=\"false\"></xref> object represented by this <xref href=\"Microsoft.Health.Web.Mvc.HealthVaultIdentity\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public PersonInfo PersonInfo { get; }
    content.vb: Public ReadOnly Property PersonInfo As PersonInfo
    parameters: []
    return:
      type: Microsoft.Health.PersonInfo
  overload: Microsoft.Health.Web.Mvc.HealthVaultIdentity.PersonInfo*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Web.Mvc.HealthVaultIdentity.AuthenticationType
  commentId: P:Microsoft.Health.Web.Mvc.HealthVaultIdentity.AuthenticationType
  id: AuthenticationType
  parent: Microsoft.Health.Web.Mvc.HealthVaultIdentity
  langs:
  - csharp
  - vb
  name: AuthenticationType
  nameWithType: HealthVaultIdentity.AuthenticationType
  fullName: Microsoft.Health.Web.Mvc.HealthVaultIdentity.AuthenticationType
  type: Property
  source:
    remote:
      path: Microsoft.Health.Web.Mvc/HealthVaultIdentity.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AuthenticationType
    path: HealthVaultIdentity.cs
    startLine: 50
  assemblies:
  - Microsoft.Health.Web.Mvc
  namespace: Microsoft.Health.Web.Mvc
  summary: "\nGets the type of authentication\n"
  example: []
  syntax:
    content: public string AuthenticationType { get; }
    content.vb: Public ReadOnly Property AuthenticationType As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.Web.Mvc.HealthVaultIdentity.AuthenticationType*
  implements:
  - System.Security.Principal.IIdentity.AuthenticationType
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Web.Mvc.HealthVaultIdentity.IsAuthenticated
  commentId: P:Microsoft.Health.Web.Mvc.HealthVaultIdentity.IsAuthenticated
  id: IsAuthenticated
  parent: Microsoft.Health.Web.Mvc.HealthVaultIdentity
  langs:
  - csharp
  - vb
  name: IsAuthenticated
  nameWithType: HealthVaultIdentity.IsAuthenticated
  fullName: Microsoft.Health.Web.Mvc.HealthVaultIdentity.IsAuthenticated
  type: Property
  source:
    remote:
      path: Microsoft.Health.Web.Mvc/HealthVaultIdentity.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: IsAuthenticated
    path: HealthVaultIdentity.cs
    startLine: 58
  assemblies:
  - Microsoft.Health.Web.Mvc
  namespace: Microsoft.Health.Web.Mvc
  summary: "\nGets whether the user is authenticated. This is true if a <xref href=\"Microsoft.Health.Web.Mvc.HealthVaultIdentity.PersonInfo\" data-throw-if-not-resolved=\"false\"></xref> exists.\n"
  example: []
  syntax:
    content: public bool IsAuthenticated { get; }
    content.vb: Public ReadOnly Property IsAuthenticated As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.Health.Web.Mvc.HealthVaultIdentity.IsAuthenticated*
  implements:
  - System.Security.Principal.IIdentity.IsAuthenticated
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Web.Mvc.HealthVaultIdentity.Name
  commentId: P:Microsoft.Health.Web.Mvc.HealthVaultIdentity.Name
  id: Name
  parent: Microsoft.Health.Web.Mvc.HealthVaultIdentity
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: HealthVaultIdentity.Name
  fullName: Microsoft.Health.Web.Mvc.HealthVaultIdentity.Name
  type: Property
  source:
    remote:
      path: Microsoft.Health.Web.Mvc/HealthVaultIdentity.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Name
    path: HealthVaultIdentity.cs
    startLine: 66
  assemblies:
  - Microsoft.Health.Web.Mvc
  namespace: Microsoft.Health.Web.Mvc
  summary: "\nGets the name of the current user, as specificed in the <xref href=\"Microsoft.Health.Web.Mvc.HealthVaultIdentity.PersonInfo\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  example: []
  syntax:
    content: public string Name { get; }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.Web.Mvc.HealthVaultIdentity.Name*
  implements:
  - System.Security.Principal.IIdentity.Name
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Web.Mvc.HealthVaultIdentity.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:Microsoft.Health.Web.Mvc.HealthVaultIdentity.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: Microsoft.Health.Web.Mvc.HealthVaultIdentity
  langs:
  - csharp
  - vb
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: HealthVaultIdentity.GetObjectData(SerializationInfo, StreamingContext)
  fullName: Microsoft.Health.Web.Mvc.HealthVaultIdentity.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Web.Mvc/HealthVaultIdentity.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetObjectData
    path: HealthVaultIdentity.cs
    startLine: 76
  assemblies:
  - Microsoft.Health.Web.Mvc
  namespace: Microsoft.Health.Web.Mvc
  summary: "\nDevelopment only. This method is used by the Visual Studio development server.\n"
  example: []
  syntax:
    content: >-
      [SecurityCritical]

      public virtual void GetObjectData(SerializationInfo info, StreamingContext context)
    content.vb: >-
      <SecurityCritical>

      Public Overridable Sub GetObjectData(info As SerializationInfo, context As StreamingContext)
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: Serialization info
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: Streaming context
  overload: Microsoft.Health.Web.Mvc.HealthVaultIdentity.GetObjectData*
  implements:
  - System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  attributes:
  - type: System.Security.SecurityCriticalAttribute
    ctor: System.Security.SecurityCriticalAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Health.Web.Mvc.HealthVaultIdentity.PersonInfo
  commentId: P:Microsoft.Health.Web.Mvc.HealthVaultIdentity.PersonInfo
- uid: Microsoft.Health.Web.Mvc
  commentId: N:Microsoft.Health.Web.Mvc
  isExternal: false
  name: Microsoft.Health.Web.Mvc
  nameWithType: Microsoft.Health.Web.Mvc
  fullName: Microsoft.Health.Web.Mvc
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Principal.IIdentity
  commentId: T:System.Security.Principal.IIdentity
  parent: System.Security.Principal
  isExternal: true
  name: IIdentity
  nameWithType: IIdentity
  fullName: System.Security.Principal.IIdentity
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Security.Principal
  commentId: N:System.Security.Principal
  isExternal: false
  name: System.Security.Principal
  nameWithType: System.Security.Principal
  fullName: System.Security.Principal
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: false
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: Microsoft.Health.Web.Mvc.HealthVaultIdentity
  commentId: T:Microsoft.Health.Web.Mvc.HealthVaultIdentity
  isExternal: false
  name: HealthVaultIdentity
  nameWithType: HealthVaultIdentity
  fullName: Microsoft.Health.Web.Mvc.HealthVaultIdentity
- uid: Microsoft.Health.Web.Mvc.HealthVaultIdentity.#ctor*
  commentId: Overload:Microsoft.Health.Web.Mvc.HealthVaultIdentity.#ctor
  isExternal: false
  name: HealthVaultIdentity
  nameWithType: HealthVaultIdentity.HealthVaultIdentity
  fullName: Microsoft.Health.Web.Mvc.HealthVaultIdentity.HealthVaultIdentity
- uid: Microsoft.Health.PersonInfo
  commentId: T:Microsoft.Health.PersonInfo
  parent: Microsoft.Health
  isExternal: false
  name: PersonInfo
  nameWithType: PersonInfo
  fullName: Microsoft.Health.PersonInfo
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: System.Runtime.Serialization.SerializationInfo
  commentId: T:System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: true
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  commentId: T:System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: Microsoft.Health.Web.Mvc.HealthVaultIdentity.PersonInfo*
  commentId: Overload:Microsoft.Health.Web.Mvc.HealthVaultIdentity.PersonInfo
  isExternal: false
  name: PersonInfo
  nameWithType: HealthVaultIdentity.PersonInfo
  fullName: Microsoft.Health.Web.Mvc.HealthVaultIdentity.PersonInfo
- uid: Microsoft.Health.Web.Mvc.HealthVaultIdentity.AuthenticationType*
  commentId: Overload:Microsoft.Health.Web.Mvc.HealthVaultIdentity.AuthenticationType
  isExternal: false
  name: AuthenticationType
  nameWithType: HealthVaultIdentity.AuthenticationType
  fullName: Microsoft.Health.Web.Mvc.HealthVaultIdentity.AuthenticationType
- uid: System.Security.Principal.IIdentity.AuthenticationType
  commentId: P:System.Security.Principal.IIdentity.AuthenticationType
  parent: System.Security.Principal.IIdentity
  isExternal: true
  name: AuthenticationType
  nameWithType: IIdentity.AuthenticationType
  fullName: System.Security.Principal.IIdentity.AuthenticationType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.Web.Mvc.HealthVaultIdentity.IsAuthenticated*
  commentId: Overload:Microsoft.Health.Web.Mvc.HealthVaultIdentity.IsAuthenticated
  isExternal: false
  name: IsAuthenticated
  nameWithType: HealthVaultIdentity.IsAuthenticated
  fullName: Microsoft.Health.Web.Mvc.HealthVaultIdentity.IsAuthenticated
- uid: System.Security.Principal.IIdentity.IsAuthenticated
  commentId: P:System.Security.Principal.IIdentity.IsAuthenticated
  parent: System.Security.Principal.IIdentity
  isExternal: true
  name: IsAuthenticated
  nameWithType: IIdentity.IsAuthenticated
  fullName: System.Security.Principal.IIdentity.IsAuthenticated
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Health.Web.Mvc.HealthVaultIdentity.Name*
  commentId: Overload:Microsoft.Health.Web.Mvc.HealthVaultIdentity.Name
  isExternal: false
  name: Name
  nameWithType: HealthVaultIdentity.Name
  fullName: Microsoft.Health.Web.Mvc.HealthVaultIdentity.Name
- uid: System.Security.Principal.IIdentity.Name
  commentId: P:System.Security.Principal.IIdentity.Name
  parent: System.Security.Principal.IIdentity
  isExternal: true
  name: Name
  nameWithType: IIdentity.Name
  fullName: System.Security.Principal.IIdentity.Name
- uid: Microsoft.Health.Web.Mvc.HealthVaultIdentity.GetObjectData*
  commentId: Overload:Microsoft.Health.Web.Mvc.HealthVaultIdentity.GetObjectData
  isExternal: false
  name: GetObjectData
  nameWithType: HealthVaultIdentity.GetObjectData
  fullName: Microsoft.Health.Web.Mvc.HealthVaultIdentity.GetObjectData
- uid: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Serialization.ISerializable
  isExternal: true
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: ISerializable.GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: ISerializable.GetObjectData
    fullName: System.Runtime.Serialization.ISerializable.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: ISerializable.GetObjectData
    fullName: System.Runtime.Serialization.ISerializable.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
