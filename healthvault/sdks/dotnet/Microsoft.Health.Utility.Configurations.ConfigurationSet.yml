### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Utility.Configurations.ConfigurationSet
  commentId: T:Microsoft.Health.Utility.Configurations.ConfigurationSet
  id: ConfigurationSet
  parent: Microsoft.Health.Utility.Configurations
  children:
  - Microsoft.Health.Utility.Configurations.ConfigurationSet.#ctor(System.String,System.Int32,Microsoft.Health.Utility.Configurations.ConfigurationDictionary,Microsoft.Health.Utility.Configurations.QueryPathSet,System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationDictionary})
  - Microsoft.Health.Utility.Configurations.ConfigurationSet.BaseConfig
  - Microsoft.Health.Utility.Configurations.ConfigurationSet.Increment
  - Microsoft.Health.Utility.Configurations.ConfigurationSet.Paths
  - Microsoft.Health.Utility.Configurations.ConfigurationSet.TryGetConfigurationDictionary(System.Collections.Generic.IEnumerable{System.String},Microsoft.Health.Utility.Configurations.ConfigurationDictionary@)
  - Microsoft.Health.Utility.Configurations.ConfigurationSet.TryGetConfigurationDictionary(System.Collections.Generic.IEnumerable{System.String},System.Boolean,Microsoft.Health.Utility.Configurations.ConfigurationDictionary@)
  - Microsoft.Health.Utility.Configurations.ConfigurationSet.TryGetConfigurationItem(System.Collections.Generic.IEnumerable{System.String},System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem@)
  - Microsoft.Health.Utility.Configurations.ConfigurationSet.Version
  langs:
  - csharp
  - vb
  name: ConfigurationSet
  nameWithType: ConfigurationSet
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationSet
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/ConfigurationSet.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ConfigurationSet
    path: ../Microsoft.Health.Utility/HVConfig/ConfigurationSet.cs
    startLine: 11
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  syntax:
    content: public class ConfigurationSet
    content.vb: Public Class ConfigurationSet
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.Utility.Configurations.ConfigurationSet.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.Utility.Configurations.ConfigurationSet.#ctor(System.String,System.Int32,Microsoft.Health.Utility.Configurations.ConfigurationDictionary,Microsoft.Health.Utility.Configurations.QueryPathSet,System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationDictionary})
  commentId: M:Microsoft.Health.Utility.Configurations.ConfigurationSet.#ctor(System.String,System.Int32,Microsoft.Health.Utility.Configurations.ConfigurationDictionary,Microsoft.Health.Utility.Configurations.QueryPathSet,System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationDictionary})
  id: '#ctor(System.String,System.Int32,Microsoft.Health.Utility.Configurations.ConfigurationDictionary,Microsoft.Health.Utility.Configurations.QueryPathSet,System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationDictionary})'
  parent: Microsoft.Health.Utility.Configurations.ConfigurationSet
  langs:
  - csharp
  - vb
  name: ConfigurationSet(String, Int32, ConfigurationDictionary, QueryPathSet, Dictionary<String, ConfigurationDictionary>)
  nameWithType: ConfigurationSet.ConfigurationSet(String, Int32, ConfigurationDictionary, QueryPathSet, Dictionary<String, ConfigurationDictionary>)
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationSet.ConfigurationSet(System.String, System.Int32, Microsoft.Health.Utility.Configurations.ConfigurationDictionary, Microsoft.Health.Utility.Configurations.QueryPathSet, System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationDictionary>)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/ConfigurationSet.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.Utility/HVConfig/ConfigurationSet.cs
    startLine: 15
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  syntax:
    content: public ConfigurationSet(string version, int increment, ConfigurationDictionary baseConfig, QueryPathSet queryPaths, Dictionary<string, ConfigurationDictionary> descendantConfigSet)
    content.vb: Public Sub New(version As String, increment As Integer, baseConfig As ConfigurationDictionary, queryPaths As QueryPathSet, descendantConfigSet As Dictionary(Of String, ConfigurationDictionary))
    parameters:
    - id: version
      type: System.String
    - id: increment
      type: System.Int32
    - id: baseConfig
      type: Microsoft.Health.Utility.Configurations.ConfigurationDictionary
    - id: queryPaths
      type: Microsoft.Health.Utility.Configurations.QueryPathSet
    - id: descendantConfigSet
      type: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationDictionary}
  overload: Microsoft.Health.Utility.Configurations.ConfigurationSet.#ctor*
  nameWithType.vb: ConfigurationSet.ConfigurationSet(String, Int32, ConfigurationDictionary, QueryPathSet, Dictionary(Of String, ConfigurationDictionary))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Utility.Configurations.ConfigurationSet.ConfigurationSet(System.String, System.Int32, Microsoft.Health.Utility.Configurations.ConfigurationDictionary, Microsoft.Health.Utility.Configurations.QueryPathSet, System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationDictionary))
  name.vb: ConfigurationSet(String, Int32, ConfigurationDictionary, QueryPathSet, Dictionary(Of String, ConfigurationDictionary))
- uid: Microsoft.Health.Utility.Configurations.ConfigurationSet.Version
  commentId: P:Microsoft.Health.Utility.Configurations.ConfigurationSet.Version
  id: Version
  parent: Microsoft.Health.Utility.Configurations.ConfigurationSet
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: ConfigurationSet.Version
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationSet.Version
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/ConfigurationSet.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Version
    path: ../Microsoft.Health.Utility/HVConfig/ConfigurationSet.cs
    startLine: 49
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  syntax:
    content: public string Version { get; }
    content.vb: Public ReadOnly Property Version As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.Utility.Configurations.ConfigurationSet.Version*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.Configurations.ConfigurationSet.Increment
  commentId: P:Microsoft.Health.Utility.Configurations.ConfigurationSet.Increment
  id: Increment
  parent: Microsoft.Health.Utility.Configurations.ConfigurationSet
  langs:
  - csharp
  - vb
  name: Increment
  nameWithType: ConfigurationSet.Increment
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationSet.Increment
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/ConfigurationSet.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Increment
    path: ../Microsoft.Health.Utility/HVConfig/ConfigurationSet.cs
    startLine: 51
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  syntax:
    content: public int Increment { get; }
    content.vb: Public ReadOnly Property Increment As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Health.Utility.Configurations.ConfigurationSet.Increment*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.Configurations.ConfigurationSet.BaseConfig
  commentId: P:Microsoft.Health.Utility.Configurations.ConfigurationSet.BaseConfig
  id: BaseConfig
  parent: Microsoft.Health.Utility.Configurations.ConfigurationSet
  langs:
  - csharp
  - vb
  name: BaseConfig
  nameWithType: ConfigurationSet.BaseConfig
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationSet.BaseConfig
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/ConfigurationSet.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: BaseConfig
    path: ../Microsoft.Health.Utility/HVConfig/ConfigurationSet.cs
    startLine: 53
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  syntax:
    content: public ConfigurationDictionary BaseConfig { get; }
    content.vb: Public ReadOnly Property BaseConfig As ConfigurationDictionary
    parameters: []
    return:
      type: Microsoft.Health.Utility.Configurations.ConfigurationDictionary
  overload: Microsoft.Health.Utility.Configurations.ConfigurationSet.BaseConfig*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.Configurations.ConfigurationSet.Paths
  commentId: P:Microsoft.Health.Utility.Configurations.ConfigurationSet.Paths
  id: Paths
  parent: Microsoft.Health.Utility.Configurations.ConfigurationSet
  langs:
  - csharp
  - vb
  name: Paths
  nameWithType: ConfigurationSet.Paths
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationSet.Paths
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/ConfigurationSet.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Paths
    path: ../Microsoft.Health.Utility/HVConfig/ConfigurationSet.cs
    startLine: 55
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  syntax:
    content: public QueryPathSet Paths { get; }
    content.vb: Public ReadOnly Property Paths As QueryPathSet
    parameters: []
    return:
      type: Microsoft.Health.Utility.Configurations.QueryPathSet
  overload: Microsoft.Health.Utility.Configurations.ConfigurationSet.Paths*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.Configurations.ConfigurationSet.TryGetConfigurationDictionary(System.Collections.Generic.IEnumerable{System.String},Microsoft.Health.Utility.Configurations.ConfigurationDictionary@)
  commentId: M:Microsoft.Health.Utility.Configurations.ConfigurationSet.TryGetConfigurationDictionary(System.Collections.Generic.IEnumerable{System.String},Microsoft.Health.Utility.Configurations.ConfigurationDictionary@)
  id: TryGetConfigurationDictionary(System.Collections.Generic.IEnumerable{System.String},Microsoft.Health.Utility.Configurations.ConfigurationDictionary@)
  parent: Microsoft.Health.Utility.Configurations.ConfigurationSet
  langs:
  - csharp
  - vb
  name: TryGetConfigurationDictionary(IEnumerable<String>, out ConfigurationDictionary)
  nameWithType: ConfigurationSet.TryGetConfigurationDictionary(IEnumerable<String>, out ConfigurationDictionary)
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationSet.TryGetConfigurationDictionary(System.Collections.Generic.IEnumerable<System.String>, out Microsoft.Health.Utility.Configurations.ConfigurationDictionary)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/ConfigurationSet.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: TryGetConfigurationDictionary
    path: ../Microsoft.Health.Utility/HVConfig/ConfigurationSet.cs
    startLine: 57
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  syntax:
    content: public bool TryGetConfigurationDictionary(IEnumerable<string> pathNodeNames, out ConfigurationDictionary config)
    content.vb: Public Function TryGetConfigurationDictionary(pathNodeNames As IEnumerable(Of String), ByRef config As ConfigurationDictionary) As Boolean
    parameters:
    - id: pathNodeNames
      type: System.Collections.Generic.IEnumerable{System.String}
    - id: config
      type: Microsoft.Health.Utility.Configurations.ConfigurationDictionary
    return:
      type: System.Boolean
  overload: Microsoft.Health.Utility.Configurations.ConfigurationSet.TryGetConfigurationDictionary*
  nameWithType.vb: ConfigurationSet.TryGetConfigurationDictionary(IEnumerable(Of String), ByRef ConfigurationDictionary)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Utility.Configurations.ConfigurationSet.TryGetConfigurationDictionary(System.Collections.Generic.IEnumerable(Of System.String), ByRef Microsoft.Health.Utility.Configurations.ConfigurationDictionary)
  name.vb: TryGetConfigurationDictionary(IEnumerable(Of String), ByRef ConfigurationDictionary)
- uid: Microsoft.Health.Utility.Configurations.ConfigurationSet.TryGetConfigurationDictionary(System.Collections.Generic.IEnumerable{System.String},System.Boolean,Microsoft.Health.Utility.Configurations.ConfigurationDictionary@)
  commentId: M:Microsoft.Health.Utility.Configurations.ConfigurationSet.TryGetConfigurationDictionary(System.Collections.Generic.IEnumerable{System.String},System.Boolean,Microsoft.Health.Utility.Configurations.ConfigurationDictionary@)
  id: TryGetConfigurationDictionary(System.Collections.Generic.IEnumerable{System.String},System.Boolean,Microsoft.Health.Utility.Configurations.ConfigurationDictionary@)
  parent: Microsoft.Health.Utility.Configurations.ConfigurationSet
  langs:
  - csharp
  - vb
  name: TryGetConfigurationDictionary(IEnumerable<String>, Boolean, out ConfigurationDictionary)
  nameWithType: ConfigurationSet.TryGetConfigurationDictionary(IEnumerable<String>, Boolean, out ConfigurationDictionary)
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationSet.TryGetConfigurationDictionary(System.Collections.Generic.IEnumerable<System.String>, System.Boolean, out Microsoft.Health.Utility.Configurations.ConfigurationDictionary)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/ConfigurationSet.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: TryGetConfigurationDictionary
    path: ../Microsoft.Health.Utility/HVConfig/ConfigurationSet.cs
    startLine: 62
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  syntax:
    content: public bool TryGetConfigurationDictionary(IEnumerable<string> pathNodeNames, bool useBaseDefault, out ConfigurationDictionary config)
    content.vb: Public Function TryGetConfigurationDictionary(pathNodeNames As IEnumerable(Of String), useBaseDefault As Boolean, ByRef config As ConfigurationDictionary) As Boolean
    parameters:
    - id: pathNodeNames
      type: System.Collections.Generic.IEnumerable{System.String}
    - id: useBaseDefault
      type: System.Boolean
    - id: config
      type: Microsoft.Health.Utility.Configurations.ConfigurationDictionary
    return:
      type: System.Boolean
  overload: Microsoft.Health.Utility.Configurations.ConfigurationSet.TryGetConfigurationDictionary*
  nameWithType.vb: ConfigurationSet.TryGetConfigurationDictionary(IEnumerable(Of String), Boolean, ByRef ConfigurationDictionary)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Utility.Configurations.ConfigurationSet.TryGetConfigurationDictionary(System.Collections.Generic.IEnumerable(Of System.String), System.Boolean, ByRef Microsoft.Health.Utility.Configurations.ConfigurationDictionary)
  name.vb: TryGetConfigurationDictionary(IEnumerable(Of String), Boolean, ByRef ConfigurationDictionary)
- uid: Microsoft.Health.Utility.Configurations.ConfigurationSet.TryGetConfigurationItem(System.Collections.Generic.IEnumerable{System.String},System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem@)
  commentId: M:Microsoft.Health.Utility.Configurations.ConfigurationSet.TryGetConfigurationItem(System.Collections.Generic.IEnumerable{System.String},System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem@)
  id: TryGetConfigurationItem(System.Collections.Generic.IEnumerable{System.String},System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem@)
  parent: Microsoft.Health.Utility.Configurations.ConfigurationSet
  langs:
  - csharp
  - vb
  name: TryGetConfigurationItem(IEnumerable<String>, String, out ConfigurationItem)
  nameWithType: ConfigurationSet.TryGetConfigurationItem(IEnumerable<String>, String, out ConfigurationItem)
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationSet.TryGetConfigurationItem(System.Collections.Generic.IEnumerable<System.String>, System.String, out Microsoft.Health.Utility.Configurations.ConfigurationItem)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/ConfigurationSet.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: TryGetConfigurationItem
    path: ../Microsoft.Health.Utility/HVConfig/ConfigurationSet.cs
    startLine: 92
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  syntax:
    content: public bool TryGetConfigurationItem(IEnumerable<string> pathNodeNames, string keyName, out ConfigurationItem item)
    content.vb: Public Function TryGetConfigurationItem(pathNodeNames As IEnumerable(Of String), keyName As String, ByRef item As ConfigurationItem) As Boolean
    parameters:
    - id: pathNodeNames
      type: System.Collections.Generic.IEnumerable{System.String}
    - id: keyName
      type: System.String
    - id: item
      type: Microsoft.Health.Utility.Configurations.ConfigurationItem
    return:
      type: System.Boolean
  overload: Microsoft.Health.Utility.Configurations.ConfigurationSet.TryGetConfigurationItem*
  nameWithType.vb: ConfigurationSet.TryGetConfigurationItem(IEnumerable(Of String), String, ByRef ConfigurationItem)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Utility.Configurations.ConfigurationSet.TryGetConfigurationItem(System.Collections.Generic.IEnumerable(Of System.String), System.String, ByRef Microsoft.Health.Utility.Configurations.ConfigurationItem)
  name.vb: TryGetConfigurationItem(IEnumerable(Of String), String, ByRef ConfigurationItem)
references:
- uid: Microsoft.Health.Utility.Configurations
  commentId: N:Microsoft.Health.Utility.Configurations
  isExternal: false
  name: Microsoft.Health.Utility.Configurations
  nameWithType: Microsoft.Health.Utility.Configurations
  fullName: Microsoft.Health.Utility.Configurations
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Configurations.ConfigurationSet.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<ConfigurationSet>()
  nameWithType: TypeHelper.ValueOrDbNull<ConfigurationSet>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Utility.Configurations.ConfigurationSet>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of ConfigurationSet)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Utility.Configurations.ConfigurationSet)()
  name.vb: ValueOrDbNull(Of ConfigurationSet)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<ConfigurationSet>
    nameWithType: TypeHelper.ValueOrDbNull<ConfigurationSet>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Utility.Configurations.ConfigurationSet>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of ConfigurationSet)
    nameWithType: TypeHelper.ValueOrDbNull(Of ConfigurationSet)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Utility.Configurations.ConfigurationSet)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.Utility.Configurations.ConfigurationSet.#ctor*
  commentId: Overload:Microsoft.Health.Utility.Configurations.ConfigurationSet.#ctor
  isExternal: false
  name: ConfigurationSet
  nameWithType: ConfigurationSet.ConfigurationSet
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationSet.ConfigurationSet
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Health.Utility.Configurations.ConfigurationDictionary
  commentId: T:Microsoft.Health.Utility.Configurations.ConfigurationDictionary
  parent: Microsoft.Health.Utility.Configurations
  isExternal: false
  name: ConfigurationDictionary
  nameWithType: ConfigurationDictionary
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationDictionary
- uid: Microsoft.Health.Utility.Configurations.QueryPathSet
  commentId: T:Microsoft.Health.Utility.Configurations.QueryPathSet
  parent: Microsoft.Health.Utility.Configurations
  isExternal: false
  name: QueryPathSet
  nameWithType: QueryPathSet
  fullName: Microsoft.Health.Utility.Configurations.QueryPathSet
- uid: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationDictionary}
  commentId: T:System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationDictionary}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, ConfigurationDictionary>
  nameWithType: Dictionary<String, ConfigurationDictionary>
  fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationDictionary>
  nameWithType.vb: Dictionary(Of String, ConfigurationDictionary)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationDictionary)
  name.vb: Dictionary(Of String, ConfigurationDictionary)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.Utility.Configurations.ConfigurationDictionary
    name: ConfigurationDictionary
    nameWithType: ConfigurationDictionary
    fullName: Microsoft.Health.Utility.Configurations.ConfigurationDictionary
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.Utility.Configurations.ConfigurationDictionary
    name: ConfigurationDictionary
    nameWithType: ConfigurationDictionary
    fullName: Microsoft.Health.Utility.Configurations.ConfigurationDictionary
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Health.Utility.Configurations.ConfigurationSet.Version*
  commentId: Overload:Microsoft.Health.Utility.Configurations.ConfigurationSet.Version
  isExternal: false
  name: Version
  nameWithType: ConfigurationSet.Version
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationSet.Version
- uid: Microsoft.Health.Utility.Configurations.ConfigurationSet.Increment*
  commentId: Overload:Microsoft.Health.Utility.Configurations.ConfigurationSet.Increment
  isExternal: false
  name: Increment
  nameWithType: ConfigurationSet.Increment
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationSet.Increment
- uid: Microsoft.Health.Utility.Configurations.ConfigurationSet.BaseConfig*
  commentId: Overload:Microsoft.Health.Utility.Configurations.ConfigurationSet.BaseConfig
  isExternal: false
  name: BaseConfig
  nameWithType: ConfigurationSet.BaseConfig
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationSet.BaseConfig
- uid: Microsoft.Health.Utility.Configurations.ConfigurationSet.Paths*
  commentId: Overload:Microsoft.Health.Utility.Configurations.ConfigurationSet.Paths
  isExternal: false
  name: Paths
  nameWithType: ConfigurationSet.Paths
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationSet.Paths
- uid: Microsoft.Health.Utility.Configurations.ConfigurationSet.TryGetConfigurationDictionary*
  commentId: Overload:Microsoft.Health.Utility.Configurations.ConfigurationSet.TryGetConfigurationDictionary
  isExternal: false
  name: TryGetConfigurationDictionary
  nameWithType: ConfigurationSet.TryGetConfigurationDictionary
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationSet.TryGetConfigurationDictionary
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Configurations.ConfigurationSet.TryGetConfigurationItem*
  commentId: Overload:Microsoft.Health.Utility.Configurations.ConfigurationSet.TryGetConfigurationItem
  isExternal: false
  name: TryGetConfigurationItem
  nameWithType: ConfigurationSet.TryGetConfigurationItem
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationSet.TryGetConfigurationItem
- uid: Microsoft.Health.Utility.Configurations.ConfigurationItem
  commentId: T:Microsoft.Health.Utility.Configurations.ConfigurationItem
  parent: Microsoft.Health.Utility.Configurations
  isExternal: false
  name: ConfigurationItem
  nameWithType: ConfigurationItem
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationItem
