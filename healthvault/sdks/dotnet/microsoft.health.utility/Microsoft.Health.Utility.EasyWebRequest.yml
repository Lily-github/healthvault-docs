### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Utility.EasyWebRequest
  commentId: T:Microsoft.Health.Utility.EasyWebRequest
  id: EasyWebRequest
  parent: Microsoft.Health.Utility
  children:
  - Microsoft.Health.Utility.EasyWebRequest.#ctor
  - Microsoft.Health.Utility.EasyWebRequest.#ctor(System.String)
  - Microsoft.Health.Utility.EasyWebRequest.#ctor(System.Xml.XmlDocument)
  - Microsoft.Health.Utility.EasyWebRequest.CreateInputDecompressionStream(System.IO.Stream,System.String,System.Boolean)
  - Microsoft.Health.Utility.EasyWebRequest.CreateOutputCompressionStream(System.IO.Stream,System.String,System.Boolean)
  - Microsoft.Health.Utility.EasyWebRequest.Fetch(System.String,Microsoft.Health.Utility.IEasyWebResponseHandler)
  - Microsoft.Health.Utility.EasyWebRequest.Fetch(System.String,System.Action{System.IO.Stream})
  - Microsoft.Health.Utility.EasyWebRequest.FetchString(System.String)
  - Microsoft.Health.Utility.EasyWebRequest.FetchXml(System.String)
  - Microsoft.Health.Utility.EasyWebRequest.TimeoutMilliseconds
  langs:
  - csharp
  - vb
  name: EasyWebRequest
  nameWithType: EasyWebRequest
  fullName: Microsoft.Health.Utility.EasyWebRequest
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/EasyWebRequest.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: EasyWebRequest
    path: utilities/EasyWebRequest.cs
    startLine: 26
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: 'helper for making web calls '
  example: []
  syntax:
    content: public class EasyWebRequest
    content.vb: Public Class EasyWebRequest
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.Utility.EasyWebRequest.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.Utility.EasyWebRequest.#ctor
  commentId: M:Microsoft.Health.Utility.EasyWebRequest.#ctor
  id: '#ctor'
  parent: Microsoft.Health.Utility.EasyWebRequest
  langs:
  - csharp
  - vb
  name: EasyWebRequest()
  nameWithType: EasyWebRequest.EasyWebRequest()
  fullName: Microsoft.Health.Utility.EasyWebRequest.EasyWebRequest()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/EasyWebRequest.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: utilities/EasyWebRequest.cs
    startLine: 31
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: 'default constructor for GET '
  example: []
  syntax:
    content: public EasyWebRequest()
    content.vb: Public Sub New
  overload: Microsoft.Health.Utility.EasyWebRequest.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.EasyWebRequest.#ctor(System.Xml.XmlDocument)
  commentId: M:Microsoft.Health.Utility.EasyWebRequest.#ctor(System.Xml.XmlDocument)
  id: '#ctor(System.Xml.XmlDocument)'
  parent: Microsoft.Health.Utility.EasyWebRequest
  langs:
  - csharp
  - vb
  name: EasyWebRequest(XmlDocument)
  nameWithType: EasyWebRequest.EasyWebRequest(XmlDocument)
  fullName: Microsoft.Health.Utility.EasyWebRequest.EasyWebRequest(System.Xml.XmlDocument)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/EasyWebRequest.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: utilities/EasyWebRequest.cs
    startLine: 35
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: 'constructor for XML POST '
  example: []
  syntax:
    content: public EasyWebRequest(XmlDocument xmlRequest)
    content.vb: Public Sub New(xmlRequest As XmlDocument)
    parameters:
    - id: xmlRequest
      type: System.Xml.XmlDocument
      description: 'xml to send '
  overload: Microsoft.Health.Utility.EasyWebRequest.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.EasyWebRequest.#ctor(System.String)
  commentId: M:Microsoft.Health.Utility.EasyWebRequest.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Health.Utility.EasyWebRequest
  langs:
  - csharp
  - vb
  name: EasyWebRequest(String)
  nameWithType: EasyWebRequest.EasyWebRequest(String)
  fullName: Microsoft.Health.Utility.EasyWebRequest.EasyWebRequest(System.String)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/EasyWebRequest.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: utilities/EasyWebRequest.cs
    startLine: 42
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: 'constructor for String POST '
  example: []
  syntax:
    content: public EasyWebRequest(string stringRequest)
    content.vb: Public Sub New(stringRequest As String)
    parameters:
    - id: stringRequest
      type: System.String
      description: 'text to send '
  overload: Microsoft.Health.Utility.EasyWebRequest.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.EasyWebRequest.FetchXml(System.String)
  commentId: M:Microsoft.Health.Utility.EasyWebRequest.FetchXml(System.String)
  id: FetchXml(System.String)
  parent: Microsoft.Health.Utility.EasyWebRequest
  langs:
  - csharp
  - vb
  name: FetchXml(String)
  nameWithType: EasyWebRequest.FetchXml(String)
  fullName: Microsoft.Health.Utility.EasyWebRequest.FetchXml(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/EasyWebRequest.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: FetchXml
    path: utilities/EasyWebRequest.cs
    startLine: 87
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: 'Do the dance and return an XmlDocument '
  example: []
  syntax:
    content: public XmlDocument FetchXml(string url)
    content.vb: Public Function FetchXml(url As String) As XmlDocument
    parameters:
    - id: url
      type: System.String
      description: 'url to request '
    return:
      type: System.Xml.XmlDocument
  overload: Microsoft.Health.Utility.EasyWebRequest.FetchXml*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.EasyWebRequest.FetchString(System.String)
  commentId: M:Microsoft.Health.Utility.EasyWebRequest.FetchString(System.String)
  id: FetchString(System.String)
  parent: Microsoft.Health.Utility.EasyWebRequest
  langs:
  - csharp
  - vb
  name: FetchString(String)
  nameWithType: EasyWebRequest.FetchString(String)
  fullName: Microsoft.Health.Utility.EasyWebRequest.FetchString(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/EasyWebRequest.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: FetchString
    path: utilities/EasyWebRequest.cs
    startLine: 96
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: 'Do the dance and return a String '
  example: []
  syntax:
    content: public string FetchString(string url)
    content.vb: Public Function FetchString(url As String) As String
    parameters:
    - id: url
      type: System.String
      description: 'url to request '
    return:
      type: System.String
  overload: Microsoft.Health.Utility.EasyWebRequest.FetchString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.EasyWebRequest.Fetch(System.String,Microsoft.Health.Utility.IEasyWebResponseHandler)
  commentId: M:Microsoft.Health.Utility.EasyWebRequest.Fetch(System.String,Microsoft.Health.Utility.IEasyWebResponseHandler)
  id: Fetch(System.String,Microsoft.Health.Utility.IEasyWebResponseHandler)
  parent: Microsoft.Health.Utility.EasyWebRequest
  langs:
  - csharp
  - vb
  name: Fetch(String, IEasyWebResponseHandler)
  nameWithType: EasyWebRequest.Fetch(String, IEasyWebResponseHandler)
  fullName: Microsoft.Health.Utility.EasyWebRequest.Fetch(System.String, Microsoft.Health.Utility.IEasyWebResponseHandler)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/EasyWebRequest.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Fetch
    path: utilities/EasyWebRequest.cs
    startLine: 106
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: 'Do the dance --- custom handler '
  example: []
  syntax:
    content: public void Fetch(string url, IEasyWebResponseHandler customHandler)
    content.vb: Public Sub Fetch(url As String, customHandler As IEasyWebResponseHandler)
    parameters:
    - id: url
      type: System.String
      description: 'url to request '
    - id: customHandler
      type: Microsoft.Health.Utility.IEasyWebResponseHandler
      description: 'response handler (nullable) '
  overload: Microsoft.Health.Utility.EasyWebRequest.Fetch*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.EasyWebRequest.Fetch(System.String,System.Action{System.IO.Stream})
  commentId: M:Microsoft.Health.Utility.EasyWebRequest.Fetch(System.String,System.Action{System.IO.Stream})
  id: Fetch(System.String,System.Action{System.IO.Stream})
  parent: Microsoft.Health.Utility.EasyWebRequest
  langs:
  - csharp
  - vb
  name: Fetch(String, Action<Stream>)
  nameWithType: EasyWebRequest.Fetch(String, Action<Stream>)
  fullName: Microsoft.Health.Utility.EasyWebRequest.Fetch(System.String, System.Action<System.IO.Stream>)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/EasyWebRequest.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Fetch
    path: utilities/EasyWebRequest.cs
    startLine: 121
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: 'Do the dance --- custom handler '
  example: []
  syntax:
    content: public void Fetch(string url, Action<Stream> action)
    content.vb: Public Sub Fetch(url As String, action As Action(Of Stream))
    parameters:
    - id: url
      type: System.String
      description: 'url to request '
    - id: action
      type: System.Action{System.IO.Stream}
      description: 'response handler (nullable) '
  overload: Microsoft.Health.Utility.EasyWebRequest.Fetch*
  nameWithType.vb: EasyWebRequest.Fetch(String, Action(Of Stream))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Utility.EasyWebRequest.Fetch(System.String, System.Action(Of System.IO.Stream))
  name.vb: Fetch(String, Action(Of Stream))
- uid: Microsoft.Health.Utility.EasyWebRequest.TimeoutMilliseconds
  commentId: P:Microsoft.Health.Utility.EasyWebRequest.TimeoutMilliseconds
  id: TimeoutMilliseconds
  parent: Microsoft.Health.Utility.EasyWebRequest
  langs:
  - csharp
  - vb
  name: TimeoutMilliseconds
  nameWithType: EasyWebRequest.TimeoutMilliseconds
  fullName: Microsoft.Health.Utility.EasyWebRequest.TimeoutMilliseconds
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/EasyWebRequest.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: TimeoutMilliseconds
    path: utilities/EasyWebRequest.cs
    startLine: 138
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: 'approx request timeout value (default infinite) '
  example: []
  syntax:
    content: public int TimeoutMilliseconds { get; set; }
    content.vb: Public Property TimeoutMilliseconds As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Health.Utility.EasyWebRequest.TimeoutMilliseconds*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.EasyWebRequest.CreateOutputCompressionStream(System.IO.Stream,System.String,System.Boolean)
  commentId: M:Microsoft.Health.Utility.EasyWebRequest.CreateOutputCompressionStream(System.IO.Stream,System.String,System.Boolean)
  id: CreateOutputCompressionStream(System.IO.Stream,System.String,System.Boolean)
  parent: Microsoft.Health.Utility.EasyWebRequest
  langs:
  - csharp
  - vb
  name: CreateOutputCompressionStream(Stream, String, Boolean)
  nameWithType: EasyWebRequest.CreateOutputCompressionStream(Stream, String, Boolean)
  fullName: Microsoft.Health.Utility.EasyWebRequest.CreateOutputCompressionStream(System.IO.Stream, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/EasyWebRequest.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CreateOutputCompressionStream
    path: utilities/EasyWebRequest.cs
    startLine: 159
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\nTransform the response stream depending on the content type\n"
  example: []
  syntax:
    content: public static Stream CreateOutputCompressionStream(Stream outputStream, string encoding, bool leaveOpen)
    content.vb: Public Shared Function CreateOutputCompressionStream(outputStream As Stream, encoding As String, leaveOpen As Boolean) As Stream
    parameters:
    - id: outputStream
      type: System.IO.Stream
      description: Output stream to be transformed
    - id: encoding
      type: System.String
      description: "\nHttp request accept encoding header\n"
    - id: leaveOpen
      type: System.Boolean
      description: "\nIf true, leave the outputStream open\nwhen transform stream is closed\n"
    return:
      type: System.IO.Stream
      description: "\nTransformed stream. Closing this stream will\nclose the input stream\n"
  overload: Microsoft.Health.Utility.EasyWebRequest.CreateOutputCompressionStream*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Utility.EasyWebRequest.CreateInputDecompressionStream(System.IO.Stream,System.String,System.Boolean)
  commentId: M:Microsoft.Health.Utility.EasyWebRequest.CreateInputDecompressionStream(System.IO.Stream,System.String,System.Boolean)
  id: CreateInputDecompressionStream(System.IO.Stream,System.String,System.Boolean)
  parent: Microsoft.Health.Utility.EasyWebRequest
  langs:
  - csharp
  - vb
  name: CreateInputDecompressionStream(Stream, String, Boolean)
  nameWithType: EasyWebRequest.CreateInputDecompressionStream(Stream, String, Boolean)
  fullName: Microsoft.Health.Utility.EasyWebRequest.CreateInputDecompressionStream(System.IO.Stream, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/EasyWebRequest.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CreateInputDecompressionStream
    path: utilities/EasyWebRequest.cs
    startLine: 212
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\nTransforms the input stream depending on the content type\n"
  example: []
  syntax:
    content: public static Stream CreateInputDecompressionStream(Stream inputStream, string encoding, bool leaveOpen)
    content.vb: Public Shared Function CreateInputDecompressionStream(inputStream As Stream, encoding As String, leaveOpen As Boolean) As Stream
    parameters:
    - id: inputStream
      type: System.IO.Stream
      description: Stream to be transformed
    - id: encoding
      type: System.String
      description: "\nHttp request content encoding\n"
    - id: leaveOpen
      type: System.Boolean
      description: "\nIf true, leave the outputStream open\nwhen transform stream is closed\n"
    return:
      type: System.IO.Stream
      description: "\nTransformed stream. Closing this stream will\nclose the input stream\n"
  overload: Microsoft.Health.Utility.EasyWebRequest.CreateInputDecompressionStream*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.EasyWebRequest.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<EasyWebRequest>()
  nameWithType: TypeHelper.ValueOrDbNull<EasyWebRequest>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Utility.EasyWebRequest>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of EasyWebRequest)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Utility.EasyWebRequest)()
  name.vb: ValueOrDbNull(Of EasyWebRequest)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<EasyWebRequest>
    nameWithType: TypeHelper.ValueOrDbNull<EasyWebRequest>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Utility.EasyWebRequest>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of EasyWebRequest)
    nameWithType: TypeHelper.ValueOrDbNull(Of EasyWebRequest)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Utility.EasyWebRequest)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility.EasyWebRequest.#ctor*
  commentId: Overload:Microsoft.Health.Utility.EasyWebRequest.#ctor
  isExternal: false
  name: EasyWebRequest
  nameWithType: EasyWebRequest.EasyWebRequest
  fullName: Microsoft.Health.Utility.EasyWebRequest.EasyWebRequest
- uid: System.Xml.XmlDocument
  commentId: T:System.Xml.XmlDocument
  parent: System.Xml
  isExternal: true
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.Utility.EasyWebRequest.FetchXml*
  commentId: Overload:Microsoft.Health.Utility.EasyWebRequest.FetchXml
  isExternal: false
  name: FetchXml
  nameWithType: EasyWebRequest.FetchXml
  fullName: Microsoft.Health.Utility.EasyWebRequest.FetchXml
- uid: Microsoft.Health.Utility.EasyWebRequest.FetchString*
  commentId: Overload:Microsoft.Health.Utility.EasyWebRequest.FetchString
  isExternal: false
  name: FetchString
  nameWithType: EasyWebRequest.FetchString
  fullName: Microsoft.Health.Utility.EasyWebRequest.FetchString
- uid: Microsoft.Health.Utility.EasyWebRequest.Fetch*
  commentId: Overload:Microsoft.Health.Utility.EasyWebRequest.Fetch
  isExternal: false
  name: Fetch
  nameWithType: EasyWebRequest.Fetch
  fullName: Microsoft.Health.Utility.EasyWebRequest.Fetch
- uid: Microsoft.Health.Utility.IEasyWebResponseHandler
  commentId: T:Microsoft.Health.Utility.IEasyWebResponseHandler
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IEasyWebResponseHandler
  nameWithType: IEasyWebResponseHandler
  fullName: Microsoft.Health.Utility.IEasyWebResponseHandler
- uid: System.Action{System.IO.Stream}
  commentId: T:System.Action{System.IO.Stream}
  parent: System
  definition: System.Action`1
  name: Action<Stream>
  nameWithType: Action<Stream>
  fullName: System.Action<System.IO.Stream>
  nameWithType.vb: Action(Of Stream)
  fullName.vb: System.Action(Of System.IO.Stream)
  name.vb: Action(Of Stream)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.EasyWebRequest.TimeoutMilliseconds*
  commentId: Overload:Microsoft.Health.Utility.EasyWebRequest.TimeoutMilliseconds
  isExternal: false
  name: TimeoutMilliseconds
  nameWithType: EasyWebRequest.TimeoutMilliseconds
  fullName: Microsoft.Health.Utility.EasyWebRequest.TimeoutMilliseconds
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Health.Utility.EasyWebRequest.CreateOutputCompressionStream*
  commentId: Overload:Microsoft.Health.Utility.EasyWebRequest.CreateOutputCompressionStream
  isExternal: false
  name: CreateOutputCompressionStream
  nameWithType: EasyWebRequest.CreateOutputCompressionStream
  fullName: Microsoft.Health.Utility.EasyWebRequest.CreateOutputCompressionStream
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Microsoft.Health.Utility.EasyWebRequest.CreateInputDecompressionStream*
  commentId: Overload:Microsoft.Health.Utility.EasyWebRequest.CreateInputDecompressionStream
  isExternal: false
  name: CreateInputDecompressionStream
  nameWithType: EasyWebRequest.CreateInputDecompressionStream
  fullName: Microsoft.Health.Utility.EasyWebRequest.CreateInputDecompressionStream
