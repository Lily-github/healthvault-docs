### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.InvertedIndex.PriorityQueue`1
  commentId: T:Microsoft.Health.InvertedIndex.PriorityQueue`1
  id: PriorityQueue`1
  parent: Microsoft.Health.InvertedIndex
  children:
  - Microsoft.Health.InvertedIndex.PriorityQueue`1.#ctor(`0)
  - Microsoft.Health.InvertedIndex.PriorityQueue`1.#ctor(`0,System.Collections.Generic.IList{`0})
  - Microsoft.Health.InvertedIndex.PriorityQueue`1.#ctor(`0,System.Int32)
  - Microsoft.Health.InvertedIndex.PriorityQueue`1.Add(`0)
  - Microsoft.Health.InvertedIndex.PriorityQueue`1.Add(System.Collections.Generic.IEnumerable{`0})
  - Microsoft.Health.InvertedIndex.PriorityQueue`1.Clear
  - Microsoft.Health.InvertedIndex.PriorityQueue`1.Count
  - Microsoft.Health.InvertedIndex.PriorityQueue`1.Dequeue
  - Microsoft.Health.InvertedIndex.PriorityQueue`1.DequeueAll
  - Microsoft.Health.InvertedIndex.PriorityQueue`1.DownHeap
  - Microsoft.Health.InvertedIndex.PriorityQueue`1.DownHeap(System.Int32)
  - Microsoft.Health.InvertedIndex.PriorityQueue`1.Enqueue(`0)
  - Microsoft.Health.InvertedIndex.PriorityQueue`1.GetEnumerator
  - Microsoft.Health.InvertedIndex.PriorityQueue`1.Item(System.Int32)
  - Microsoft.Health.InvertedIndex.PriorityQueue`1.m_count
  - Microsoft.Health.InvertedIndex.PriorityQueue`1.m_items
  - Microsoft.Health.InvertedIndex.PriorityQueue`1.System#Collections#IEnumerable#GetEnumerator
  - Microsoft.Health.InvertedIndex.PriorityQueue`1.Top
  - Microsoft.Health.InvertedIndex.PriorityQueue`1.UpHeap(System.Int32)
  langs:
  - csharp
  - vb
  name: PriorityQueue<T>
  nameWithType: PriorityQueue<T>
  fullName: Microsoft.Health.InvertedIndex.PriorityQueue<T>
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/PriorityQueue.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: PriorityQueue
    path: search/InvertedIndex/PriorityQueue.cs
    startLine: 16
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\nImplements the class 'heap' priority queue data structure. \nNote: By default, the item with the lowest priority value is at the top of the heap\n"
  example: []
  syntax:
    content: 'public class PriorityQueue<T> : IEnumerable<T>, IEnumerable where T : IComparable<T>, new ()'
    content.vb: >-
      Public Class PriorityQueue(Of T As {IComparable(Of T), New})
          Implements IEnumerable(Of T), IEnumerable
    typeParameters:
    - id: T
      description: Data Type
  inheritance:
  - System.Object
  derivedClasses:
  - Microsoft.Health.InvertedIndex.MatchCollector
  - Microsoft.Health.InvertedIndex.RecordIDEnumeratorQueue
  implements:
  - System.Collections.Generic.IEnumerable{{T}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.InvertedIndex.PriorityQueue`1.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  nameWithType.vb: PriorityQueue(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.Health.InvertedIndex.PriorityQueue(Of T)
  name.vb: PriorityQueue(Of T)
- uid: Microsoft.Health.InvertedIndex.PriorityQueue`1.m_items
  commentId: F:Microsoft.Health.InvertedIndex.PriorityQueue`1.m_items
  id: m_items
  parent: Microsoft.Health.InvertedIndex.PriorityQueue`1
  langs:
  - csharp
  - vb
  name: m_items
  nameWithType: PriorityQueue<T>.m_items
  fullName: Microsoft.Health.InvertedIndex.PriorityQueue<T>.m_items
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/PriorityQueue.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: m_items
    path: search/InvertedIndex/PriorityQueue.cs
    startLine: 22
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: protected T[] m_items
    content.vb: Protected m_items As T()
    return:
      type: '{T}[]'
  nameWithType.vb: PriorityQueue(Of T).m_items
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.Health.InvertedIndex.PriorityQueue(Of T).m_items
- uid: Microsoft.Health.InvertedIndex.PriorityQueue`1.m_count
  commentId: F:Microsoft.Health.InvertedIndex.PriorityQueue`1.m_count
  id: m_count
  parent: Microsoft.Health.InvertedIndex.PriorityQueue`1
  langs:
  - csharp
  - vb
  name: m_count
  nameWithType: PriorityQueue<T>.m_count
  fullName: Microsoft.Health.InvertedIndex.PriorityQueue<T>.m_count
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/PriorityQueue.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: m_count
    path: search/InvertedIndex/PriorityQueue.cs
    startLine: 26
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: protected int m_count
    content.vb: Protected m_count As Integer
    return:
      type: System.Int32
  nameWithType.vb: PriorityQueue(Of T).m_count
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.Health.InvertedIndex.PriorityQueue(Of T).m_count
- uid: Microsoft.Health.InvertedIndex.PriorityQueue`1.#ctor(`0)
  commentId: M:Microsoft.Health.InvertedIndex.PriorityQueue`1.#ctor(`0)
  id: '#ctor(`0)'
  parent: Microsoft.Health.InvertedIndex.PriorityQueue`1
  langs:
  - csharp
  - vb
  name: PriorityQueue(T)
  nameWithType: PriorityQueue<T>.PriorityQueue(T)
  fullName: Microsoft.Health.InvertedIndex.PriorityQueue<T>.PriorityQueue(T)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/PriorityQueue.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: search/InvertedIndex/PriorityQueue.cs
    startLine: 32
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public PriorityQueue(T minValue)
    content.vb: Public Sub New(minValue As T)
    parameters:
    - id: minValue
      type: '{T}'
      description: ''
  overload: Microsoft.Health.InvertedIndex.PriorityQueue`1.#ctor*
  nameWithType.vb: PriorityQueue(Of T).PriorityQueue(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.PriorityQueue(Of T).PriorityQueue(T)
- uid: Microsoft.Health.InvertedIndex.PriorityQueue`1.#ctor(`0,System.Int32)
  commentId: M:Microsoft.Health.InvertedIndex.PriorityQueue`1.#ctor(`0,System.Int32)
  id: '#ctor(`0,System.Int32)'
  parent: Microsoft.Health.InvertedIndex.PriorityQueue`1
  langs:
  - csharp
  - vb
  name: PriorityQueue(T, Int32)
  nameWithType: PriorityQueue<T>.PriorityQueue(T, Int32)
  fullName: Microsoft.Health.InvertedIndex.PriorityQueue<T>.PriorityQueue(T, System.Int32)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/PriorityQueue.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: search/InvertedIndex/PriorityQueue.cs
    startLine: 42
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public PriorityQueue(T minValue, int capacity)
    content.vb: Public Sub New(minValue As T, capacity As Integer)
    parameters:
    - id: minValue
      type: '{T}'
      description: ''
    - id: capacity
      type: System.Int32
      description: ''
  overload: Microsoft.Health.InvertedIndex.PriorityQueue`1.#ctor*
  nameWithType.vb: PriorityQueue(Of T).PriorityQueue(T, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.PriorityQueue(Of T).PriorityQueue(T, System.Int32)
- uid: Microsoft.Health.InvertedIndex.PriorityQueue`1.#ctor(`0,System.Collections.Generic.IList{`0})
  commentId: M:Microsoft.Health.InvertedIndex.PriorityQueue`1.#ctor(`0,System.Collections.Generic.IList{`0})
  id: '#ctor(`0,System.Collections.Generic.IList{`0})'
  parent: Microsoft.Health.InvertedIndex.PriorityQueue`1
  langs:
  - csharp
  - vb
  name: PriorityQueue(T, IList<T>)
  nameWithType: PriorityQueue<T>.PriorityQueue(T, IList<T>)
  fullName: Microsoft.Health.InvertedIndex.PriorityQueue<T>.PriorityQueue(T, System.Collections.Generic.IList<T>)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/PriorityQueue.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: search/InvertedIndex/PriorityQueue.cs
    startLine: 61
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public PriorityQueue(T minValue, IList<T> items)
    content.vb: Public Sub New(minValue As T, items As IList(Of T))
    parameters:
    - id: minValue
      type: '{T}'
      description: ''
    - id: items
      type: System.Collections.Generic.IList{{T}}
      description: ''
  overload: Microsoft.Health.InvertedIndex.PriorityQueue`1.#ctor*
  nameWithType.vb: PriorityQueue(Of T).PriorityQueue(T, IList(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.PriorityQueue(Of T).PriorityQueue(T, System.Collections.Generic.IList(Of T))
  name.vb: PriorityQueue(T, IList(Of T))
- uid: Microsoft.Health.InvertedIndex.PriorityQueue`1.Count
  commentId: P:Microsoft.Health.InvertedIndex.PriorityQueue`1.Count
  id: Count
  parent: Microsoft.Health.InvertedIndex.PriorityQueue`1
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: PriorityQueue<T>.Count
  fullName: Microsoft.Health.InvertedIndex.PriorityQueue<T>.Count
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/PriorityQueue.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Count
    path: search/InvertedIndex/PriorityQueue.cs
    startLine: 70
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public int Count { get; protected set; }
    content.vb: Public Property Count As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Health.InvertedIndex.PriorityQueue`1.Count*
  nameWithType.vb: PriorityQueue(Of T).Count
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
  fullName.vb: Microsoft.Health.InvertedIndex.PriorityQueue(Of T).Count
- uid: Microsoft.Health.InvertedIndex.PriorityQueue`1.Item(System.Int32)
  commentId: P:Microsoft.Health.InvertedIndex.PriorityQueue`1.Item(System.Int32)
  id: Item(System.Int32)
  parent: Microsoft.Health.InvertedIndex.PriorityQueue`1
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: PriorityQueue<T>.Item[Int32]
  fullName: Microsoft.Health.InvertedIndex.PriorityQueue<T>.Item[System.Int32]
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/PriorityQueue.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: this[]
    path: search/InvertedIndex/PriorityQueue.cs
    startLine: 87
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public T this[int index] { get; }
    content.vb: Public ReadOnly Property Item(index As Integer) As T
    parameters:
    - id: index
      type: System.Int32
      description: ''
    return:
      type: '{T}'
      description: ''
  overload: Microsoft.Health.InvertedIndex.PriorityQueue`1.Item*
  nameWithType.vb: PriorityQueue(Of T).Item(Int32)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.Health.InvertedIndex.PriorityQueue(Of T).Item(System.Int32)
  name.vb: Item(Int32)
- uid: Microsoft.Health.InvertedIndex.PriorityQueue`1.Top
  commentId: P:Microsoft.Health.InvertedIndex.PriorityQueue`1.Top
  id: Top
  parent: Microsoft.Health.InvertedIndex.PriorityQueue`1
  langs:
  - csharp
  - vb
  name: Top
  nameWithType: PriorityQueue<T>.Top
  fullName: Microsoft.Health.InvertedIndex.PriorityQueue<T>.Top
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/PriorityQueue.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Top
    path: search/InvertedIndex/PriorityQueue.cs
    startLine: 102
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public T Top { get; }
    content.vb: Public ReadOnly Property Top As T
    parameters: []
    return:
      type: '{T}'
  overload: Microsoft.Health.InvertedIndex.PriorityQueue`1.Top*
  nameWithType.vb: PriorityQueue(Of T).Top
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.Health.InvertedIndex.PriorityQueue(Of T).Top
- uid: Microsoft.Health.InvertedIndex.PriorityQueue`1.Clear
  commentId: M:Microsoft.Health.InvertedIndex.PriorityQueue`1.Clear
  id: Clear
  parent: Microsoft.Health.InvertedIndex.PriorityQueue`1
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: PriorityQueue<T>.Clear()
  fullName: Microsoft.Health.InvertedIndex.PriorityQueue<T>.Clear()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/PriorityQueue.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Clear
    path: search/InvertedIndex/PriorityQueue.cs
    startLine: 113
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: Microsoft.Health.InvertedIndex.PriorityQueue`1.Clear*
  nameWithType.vb: PriorityQueue(Of T).Clear()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.PriorityQueue(Of T).Clear()
- uid: Microsoft.Health.InvertedIndex.PriorityQueue`1.Add(`0)
  commentId: M:Microsoft.Health.InvertedIndex.PriorityQueue`1.Add(`0)
  id: Add(`0)
  parent: Microsoft.Health.InvertedIndex.PriorityQueue`1
  langs:
  - csharp
  - vb
  name: Add(T)
  nameWithType: PriorityQueue<T>.Add(T)
  fullName: Microsoft.Health.InvertedIndex.PriorityQueue<T>.Add(T)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/PriorityQueue.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Add
    path: search/InvertedIndex/PriorityQueue.cs
    startLine: 123
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Add(T item)
    content.vb: Public Sub Add(item As T)
    parameters:
    - id: item
      type: '{T}'
      description: ''
  overload: Microsoft.Health.InvertedIndex.PriorityQueue`1.Add*
  nameWithType.vb: PriorityQueue(Of T).Add(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.PriorityQueue(Of T).Add(T)
- uid: Microsoft.Health.InvertedIndex.PriorityQueue`1.Add(System.Collections.Generic.IEnumerable{`0})
  commentId: M:Microsoft.Health.InvertedIndex.PriorityQueue`1.Add(System.Collections.Generic.IEnumerable{`0})
  id: Add(System.Collections.Generic.IEnumerable{`0})
  parent: Microsoft.Health.InvertedIndex.PriorityQueue`1
  langs:
  - csharp
  - vb
  name: Add(IEnumerable<T>)
  nameWithType: PriorityQueue<T>.Add(IEnumerable<T>)
  fullName: Microsoft.Health.InvertedIndex.PriorityQueue<T>.Add(System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/PriorityQueue.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Add
    path: search/InvertedIndex/PriorityQueue.cs
    startLine: 132
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Add(IEnumerable<T> items)
    content.vb: Public Sub Add(items As IEnumerable(Of T))
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable{{T}}
      description: ''
  overload: Microsoft.Health.InvertedIndex.PriorityQueue`1.Add*
  nameWithType.vb: PriorityQueue(Of T).Add(IEnumerable(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.PriorityQueue(Of T).Add(System.Collections.Generic.IEnumerable(Of T))
  name.vb: Add(IEnumerable(Of T))
- uid: Microsoft.Health.InvertedIndex.PriorityQueue`1.Enqueue(`0)
  commentId: M:Microsoft.Health.InvertedIndex.PriorityQueue`1.Enqueue(`0)
  id: Enqueue(`0)
  parent: Microsoft.Health.InvertedIndex.PriorityQueue`1
  langs:
  - csharp
  - vb
  name: Enqueue(T)
  nameWithType: PriorityQueue<T>.Enqueue(T)
  fullName: Microsoft.Health.InvertedIndex.PriorityQueue<T>.Enqueue(T)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/PriorityQueue.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Enqueue
    path: search/InvertedIndex/PriorityQueue.cs
    startLine: 144
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Enqueue(T item)
    content.vb: Public Sub Enqueue(item As T)
    parameters:
    - id: item
      type: '{T}'
      description: ''
  overload: Microsoft.Health.InvertedIndex.PriorityQueue`1.Enqueue*
  nameWithType.vb: PriorityQueue(Of T).Enqueue(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.PriorityQueue(Of T).Enqueue(T)
- uid: Microsoft.Health.InvertedIndex.PriorityQueue`1.Dequeue
  commentId: M:Microsoft.Health.InvertedIndex.PriorityQueue`1.Dequeue
  id: Dequeue
  parent: Microsoft.Health.InvertedIndex.PriorityQueue`1
  langs:
  - csharp
  - vb
  name: Dequeue()
  nameWithType: PriorityQueue<T>.Dequeue()
  fullName: Microsoft.Health.InvertedIndex.PriorityQueue<T>.Dequeue()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/PriorityQueue.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Dequeue
    path: search/InvertedIndex/PriorityQueue.cs
    startLine: 163
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public T Dequeue()
    content.vb: Public Function Dequeue As T
    return:
      type: '{T}'
      description: ''
  overload: Microsoft.Health.InvertedIndex.PriorityQueue`1.Dequeue*
  nameWithType.vb: PriorityQueue(Of T).Dequeue()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.PriorityQueue(Of T).Dequeue()
- uid: Microsoft.Health.InvertedIndex.PriorityQueue`1.DequeueAll
  commentId: M:Microsoft.Health.InvertedIndex.PriorityQueue`1.DequeueAll
  id: DequeueAll
  parent: Microsoft.Health.InvertedIndex.PriorityQueue`1
  langs:
  - csharp
  - vb
  name: DequeueAll()
  nameWithType: PriorityQueue<T>.DequeueAll()
  fullName: Microsoft.Health.InvertedIndex.PriorityQueue<T>.DequeueAll()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/PriorityQueue.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DequeueAll
    path: search/InvertedIndex/PriorityQueue.cs
    startLine: 180
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public IEnumerable<T> DequeueAll()
    content.vb: Public Function DequeueAll As IEnumerable(Of T)
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
      description: ''
  overload: Microsoft.Health.InvertedIndex.PriorityQueue`1.DequeueAll*
  nameWithType.vb: PriorityQueue(Of T).DequeueAll()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.PriorityQueue(Of T).DequeueAll()
- uid: Microsoft.Health.InvertedIndex.PriorityQueue`1.UpHeap(System.Int32)
  commentId: M:Microsoft.Health.InvertedIndex.PriorityQueue`1.UpHeap(System.Int32)
  id: UpHeap(System.Int32)
  parent: Microsoft.Health.InvertedIndex.PriorityQueue`1
  langs:
  - csharp
  - vb
  name: UpHeap(Int32)
  nameWithType: PriorityQueue<T>.UpHeap(Int32)
  fullName: Microsoft.Health.InvertedIndex.PriorityQueue<T>.UpHeap(System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/PriorityQueue.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: UpHeap
    path: search/InvertedIndex/PriorityQueue.cs
    startLine: 192
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void UpHeap(int startAt)
    content.vb: Public Sub UpHeap(startAt As Integer)
    parameters:
    - id: startAt
      type: System.Int32
      description: ''
  overload: Microsoft.Health.InvertedIndex.PriorityQueue`1.UpHeap*
  nameWithType.vb: PriorityQueue(Of T).UpHeap(Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.PriorityQueue(Of T).UpHeap(System.Int32)
- uid: Microsoft.Health.InvertedIndex.PriorityQueue`1.DownHeap
  commentId: M:Microsoft.Health.InvertedIndex.PriorityQueue`1.DownHeap
  id: DownHeap
  parent: Microsoft.Health.InvertedIndex.PriorityQueue`1
  langs:
  - csharp
  - vb
  name: DownHeap()
  nameWithType: PriorityQueue<T>.DownHeap()
  fullName: Microsoft.Health.InvertedIndex.PriorityQueue<T>.DownHeap()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/PriorityQueue.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DownHeap
    path: search/InvertedIndex/PriorityQueue.cs
    startLine: 213
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void DownHeap()
    content.vb: Public Sub DownHeap
  overload: Microsoft.Health.InvertedIndex.PriorityQueue`1.DownHeap*
  nameWithType.vb: PriorityQueue(Of T).DownHeap()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.PriorityQueue(Of T).DownHeap()
- uid: Microsoft.Health.InvertedIndex.PriorityQueue`1.DownHeap(System.Int32)
  commentId: M:Microsoft.Health.InvertedIndex.PriorityQueue`1.DownHeap(System.Int32)
  id: DownHeap(System.Int32)
  parent: Microsoft.Health.InvertedIndex.PriorityQueue`1
  langs:
  - csharp
  - vb
  name: DownHeap(Int32)
  nameWithType: PriorityQueue<T>.DownHeap(Int32)
  fullName: Microsoft.Health.InvertedIndex.PriorityQueue<T>.DownHeap(System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/PriorityQueue.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DownHeap
    path: search/InvertedIndex/PriorityQueue.cs
    startLine: 222
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void DownHeap(int startAt)
    content.vb: Public Sub DownHeap(startAt As Integer)
    parameters:
    - id: startAt
      type: System.Int32
      description: ''
  overload: Microsoft.Health.InvertedIndex.PriorityQueue`1.DownHeap*
  nameWithType.vb: PriorityQueue(Of T).DownHeap(Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.PriorityQueue(Of T).DownHeap(System.Int32)
- uid: Microsoft.Health.InvertedIndex.PriorityQueue`1.GetEnumerator
  commentId: M:Microsoft.Health.InvertedIndex.PriorityQueue`1.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.Health.InvertedIndex.PriorityQueue`1
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: PriorityQueue<T>.GetEnumerator()
  fullName: Microsoft.Health.InvertedIndex.PriorityQueue<T>.GetEnumerator()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/PriorityQueue.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetEnumerator
    path: search/InvertedIndex/PriorityQueue.cs
    startLine: 259
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public virtual IEnumerator<T> GetEnumerator()
    content.vb: Public Overridable Function GetEnumerator As IEnumerator(Of T)
    return:
      type: System.Collections.Generic.IEnumerator{{T}}
      description: ''
  overload: Microsoft.Health.InvertedIndex.PriorityQueue`1.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  nameWithType.vb: PriorityQueue(Of T).GetEnumerator()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.Health.InvertedIndex.PriorityQueue(Of T).GetEnumerator()
- uid: Microsoft.Health.InvertedIndex.PriorityQueue`1.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Microsoft.Health.InvertedIndex.PriorityQueue`1.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: Microsoft.Health.InvertedIndex.PriorityQueue`1
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: PriorityQueue<T>.IEnumerable.GetEnumerator()
  fullName: Microsoft.Health.InvertedIndex.PriorityQueue<T>.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/PriorityQueue.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: System.Collections.IEnumerable.GetEnumerator
    path: search/InvertedIndex/PriorityQueue.cs
    startLine: 268
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
    return:
      type: System.Collections.IEnumerator
  overload: Microsoft.Health.InvertedIndex.PriorityQueue`1.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: PriorityQueue(Of T).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: Microsoft.Health.InvertedIndex.PriorityQueue(Of T).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
references:
- uid: Microsoft.Health.InvertedIndex
  commentId: N:Microsoft.Health.InvertedIndex
  isExternal: false
  name: Microsoft.Health.InvertedIndex
  nameWithType: Microsoft.Health.InvertedIndex
  fullName: Microsoft.Health.InvertedIndex
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.PriorityQueue`1.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<PriorityQueue<T>>()
  nameWithType: TypeHelper.ValueOrDbNull<PriorityQueue<T>>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.InvertedIndex.PriorityQueue<T>>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of PriorityQueue(Of T))()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.InvertedIndex.PriorityQueue(Of T))()
  name.vb: ValueOrDbNull(Of PriorityQueue(Of T))()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<PriorityQueue<T>>
    nameWithType: TypeHelper.ValueOrDbNull<PriorityQueue<T>>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.InvertedIndex.PriorityQueue<T>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of PriorityQueue(Of T))
    nameWithType: TypeHelper.ValueOrDbNull(Of PriorityQueue(Of T))
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.InvertedIndex.PriorityQueue(Of T))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: '{T}[]'
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullName.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Health.InvertedIndex.PriorityQueue`1.#ctor*
  commentId: Overload:Microsoft.Health.InvertedIndex.PriorityQueue`1.#ctor
  isExternal: false
  name: PriorityQueue
  nameWithType: PriorityQueue<T>.PriorityQueue
  fullName: Microsoft.Health.InvertedIndex.PriorityQueue<T>.PriorityQueue
  nameWithType.vb: PriorityQueue(Of T).PriorityQueue
  fullName.vb: Microsoft.Health.InvertedIndex.PriorityQueue(Of T).PriorityQueue
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Generic.IList{{T}}
  commentId: T:System.Collections.Generic.IList{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.PriorityQueue`1.Count*
  commentId: Overload:Microsoft.Health.InvertedIndex.PriorityQueue`1.Count
  isExternal: false
  name: Count
  nameWithType: PriorityQueue<T>.Count
  fullName: Microsoft.Health.InvertedIndex.PriorityQueue<T>.Count
  nameWithType.vb: PriorityQueue(Of T).Count
  fullName.vb: Microsoft.Health.InvertedIndex.PriorityQueue(Of T).Count
- uid: Microsoft.Health.InvertedIndex.PriorityQueue`1.Item*
  commentId: Overload:Microsoft.Health.InvertedIndex.PriorityQueue`1.Item
  isExternal: false
  name: Item
  nameWithType: PriorityQueue<T>.Item
  fullName: Microsoft.Health.InvertedIndex.PriorityQueue<T>.Item
  nameWithType.vb: PriorityQueue(Of T).Item
  fullName.vb: Microsoft.Health.InvertedIndex.PriorityQueue(Of T).Item
- uid: Microsoft.Health.InvertedIndex.PriorityQueue`1.Top*
  commentId: Overload:Microsoft.Health.InvertedIndex.PriorityQueue`1.Top
  isExternal: false
  name: Top
  nameWithType: PriorityQueue<T>.Top
  fullName: Microsoft.Health.InvertedIndex.PriorityQueue<T>.Top
  nameWithType.vb: PriorityQueue(Of T).Top
  fullName.vb: Microsoft.Health.InvertedIndex.PriorityQueue(Of T).Top
- uid: Microsoft.Health.InvertedIndex.PriorityQueue`1.Clear*
  commentId: Overload:Microsoft.Health.InvertedIndex.PriorityQueue`1.Clear
  isExternal: false
  name: Clear
  nameWithType: PriorityQueue<T>.Clear
  fullName: Microsoft.Health.InvertedIndex.PriorityQueue<T>.Clear
  nameWithType.vb: PriorityQueue(Of T).Clear
  fullName.vb: Microsoft.Health.InvertedIndex.PriorityQueue(Of T).Clear
- uid: Microsoft.Health.InvertedIndex.PriorityQueue`1.Add*
  commentId: Overload:Microsoft.Health.InvertedIndex.PriorityQueue`1.Add
  isExternal: false
  name: Add
  nameWithType: PriorityQueue<T>.Add
  fullName: Microsoft.Health.InvertedIndex.PriorityQueue<T>.Add
  nameWithType.vb: PriorityQueue(Of T).Add
  fullName.vb: Microsoft.Health.InvertedIndex.PriorityQueue(Of T).Add
- uid: Microsoft.Health.InvertedIndex.PriorityQueue`1.Enqueue*
  commentId: Overload:Microsoft.Health.InvertedIndex.PriorityQueue`1.Enqueue
  isExternal: false
  name: Enqueue
  nameWithType: PriorityQueue<T>.Enqueue
  fullName: Microsoft.Health.InvertedIndex.PriorityQueue<T>.Enqueue
  nameWithType.vb: PriorityQueue(Of T).Enqueue
  fullName.vb: Microsoft.Health.InvertedIndex.PriorityQueue(Of T).Enqueue
- uid: Microsoft.Health.InvertedIndex.PriorityQueue`1.Dequeue*
  commentId: Overload:Microsoft.Health.InvertedIndex.PriorityQueue`1.Dequeue
  isExternal: false
  name: Dequeue
  nameWithType: PriorityQueue<T>.Dequeue
  fullName: Microsoft.Health.InvertedIndex.PriorityQueue<T>.Dequeue
  nameWithType.vb: PriorityQueue(Of T).Dequeue
  fullName.vb: Microsoft.Health.InvertedIndex.PriorityQueue(Of T).Dequeue
- uid: Microsoft.Health.InvertedIndex.PriorityQueue`1.DequeueAll*
  commentId: Overload:Microsoft.Health.InvertedIndex.PriorityQueue`1.DequeueAll
  isExternal: false
  name: DequeueAll
  nameWithType: PriorityQueue<T>.DequeueAll
  fullName: Microsoft.Health.InvertedIndex.PriorityQueue<T>.DequeueAll
  nameWithType.vb: PriorityQueue(Of T).DequeueAll
  fullName.vb: Microsoft.Health.InvertedIndex.PriorityQueue(Of T).DequeueAll
- uid: Microsoft.Health.InvertedIndex.PriorityQueue`1.UpHeap*
  commentId: Overload:Microsoft.Health.InvertedIndex.PriorityQueue`1.UpHeap
  isExternal: false
  name: UpHeap
  nameWithType: PriorityQueue<T>.UpHeap
  fullName: Microsoft.Health.InvertedIndex.PriorityQueue<T>.UpHeap
  nameWithType.vb: PriorityQueue(Of T).UpHeap
  fullName.vb: Microsoft.Health.InvertedIndex.PriorityQueue(Of T).UpHeap
- uid: Microsoft.Health.InvertedIndex.PriorityQueue`1.DownHeap*
  commentId: Overload:Microsoft.Health.InvertedIndex.PriorityQueue`1.DownHeap
  isExternal: false
  name: DownHeap
  nameWithType: PriorityQueue<T>.DownHeap
  fullName: Microsoft.Health.InvertedIndex.PriorityQueue<T>.DownHeap
  nameWithType.vb: PriorityQueue(Of T).DownHeap
  fullName.vb: Microsoft.Health.InvertedIndex.PriorityQueue(Of T).DownHeap
- uid: Microsoft.Health.InvertedIndex.PriorityQueue`1.GetEnumerator*
  commentId: Overload:Microsoft.Health.InvertedIndex.PriorityQueue`1.GetEnumerator
  isExternal: false
  name: GetEnumerator
  nameWithType: PriorityQueue<T>.GetEnumerator
  fullName: Microsoft.Health.InvertedIndex.PriorityQueue<T>.GetEnumerator
  nameWithType.vb: PriorityQueue(Of T).GetEnumerator
  fullName.vb: Microsoft.Health.InvertedIndex.PriorityQueue(Of T).GetEnumerator
- uid: System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{`0}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{{T}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{{T}}
  commentId: T:System.Collections.Generic.IEnumerator{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.PriorityQueue`1.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:Microsoft.Health.InvertedIndex.PriorityQueue`1.System#Collections#IEnumerable#GetEnumerator
  isExternal: false
  name: IEnumerable.GetEnumerator
  nameWithType: PriorityQueue<T>.IEnumerable.GetEnumerator
  fullName: Microsoft.Health.InvertedIndex.PriorityQueue<T>.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: PriorityQueue(Of T).System.Collections.IEnumerable.GetEnumerator
  fullName.vb: Microsoft.Health.InvertedIndex.PriorityQueue(Of T).System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
