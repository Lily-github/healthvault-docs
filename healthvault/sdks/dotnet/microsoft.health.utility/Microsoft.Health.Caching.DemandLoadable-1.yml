### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Caching.DemandLoadable`1
  commentId: T:Microsoft.Health.Caching.DemandLoadable`1
  id: DemandLoadable`1
  parent: Microsoft.Health.Caching
  children:
  - Microsoft.Health.Caching.DemandLoadable`1.#ctor(System.Func{System.Object,`0})
  - Microsoft.Health.Caching.DemandLoadable`1.#ctor(System.Func{System.Object,`0},System.Object)
  langs:
  - csharp
  - vb
  name: DemandLoadable<T>
  nameWithType: DemandLoadable<T>
  fullName: Microsoft.Health.Caching.DemandLoadable<T>
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/search/Cache/DemandLoadable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DemandLoadable
    path: search/Cache/DemandLoadable.cs
    startLine: 229
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Caching
  summary: "\n\n"
  example: []
  syntax:
    content: 'public class DemandLoadable<T> : DemandLoadable<object, T>, IDemandLoadable where T : class'
    content.vb: >-
      Public Class DemandLoadable(Of T As Class)
          Inherits DemandLoadable(Of Object, T)
          Implements IDemandLoadable
    typeParameters:
    - id: T
      description: ''
  inheritance:
  - System.Object
  - Microsoft.Health.Caching.DemandLoadable{System.Object,{T}}
  derivedClasses:
  - Microsoft.Health.Caching.DemandLoadableWithTtl`1
  implements:
  - Microsoft.Health.Caching.IDemandLoadable
  inheritedMembers:
  - Microsoft.Health.Caching.DemandLoadable{System.Object,{T}}.Loaded
  - Microsoft.Health.Caching.DemandLoadable{System.Object,{T}}.Key
  - Microsoft.Health.Caching.DemandLoadable{System.Object,{T}}.Value
  - Microsoft.Health.Caching.DemandLoadable{System.Object,{T}}.HasValue
  - Microsoft.Health.Caching.DemandLoadable{System.Object,{T}}.Load(System.Boolean)
  - Microsoft.Health.Caching.DemandLoadable{System.Object,{T}}.Unload
  - Microsoft.Health.Caching.DemandLoadable{System.Object,{T}}.TryExpire(System.TimeSpan,System.DateTime@)
  - Microsoft.Health.Caching.DemandLoadable{System.Object,{T}}.OnLoading
  - Microsoft.Health.Caching.DemandLoadable{System.Object,{T}}.OnLoaded({T})
  - Microsoft.Health.Caching.DemandLoadable{System.Object,{T}}.OnUnload({T})
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.Caching.DemandLoadable`1.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  nameWithType.vb: DemandLoadable(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of T)
  name.vb: DemandLoadable(Of T)
- uid: Microsoft.Health.Caching.DemandLoadable`1.#ctor(System.Func{System.Object,`0})
  commentId: M:Microsoft.Health.Caching.DemandLoadable`1.#ctor(System.Func{System.Object,`0})
  id: '#ctor(System.Func{System.Object,`0})'
  parent: Microsoft.Health.Caching.DemandLoadable`1
  langs:
  - csharp
  - vb
  name: DemandLoadable(Func<Object, T>)
  nameWithType: DemandLoadable<T>.DemandLoadable(Func<Object, T>)
  fullName: Microsoft.Health.Caching.DemandLoadable<T>.DemandLoadable(System.Func<System.Object, T>)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/Cache/DemandLoadable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: search/Cache/DemandLoadable.cs
    startLine: 236
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Caching
  summary: "\n\n"
  example: []
  syntax:
    content: public DemandLoadable(Func<object, T> loader)
    content.vb: Public Sub New(loader As Func(Of Object, T))
    parameters:
    - id: loader
      type: System.Func{System.Object,{T}}
      description: ''
  overload: Microsoft.Health.Caching.DemandLoadable`1.#ctor*
  nameWithType.vb: DemandLoadable(Of T).DemandLoadable(Func(Of Object, T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of T).DemandLoadable(System.Func(Of System.Object, T))
  name.vb: DemandLoadable(Func(Of Object, T))
- uid: Microsoft.Health.Caching.DemandLoadable`1.#ctor(System.Func{System.Object,`0},System.Object)
  commentId: M:Microsoft.Health.Caching.DemandLoadable`1.#ctor(System.Func{System.Object,`0},System.Object)
  id: '#ctor(System.Func{System.Object,`0},System.Object)'
  parent: Microsoft.Health.Caching.DemandLoadable`1
  langs:
  - csharp
  - vb
  name: DemandLoadable(Func<Object, T>, Object)
  nameWithType: DemandLoadable<T>.DemandLoadable(Func<Object, T>, Object)
  fullName: Microsoft.Health.Caching.DemandLoadable<T>.DemandLoadable(System.Func<System.Object, T>, System.Object)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/Cache/DemandLoadable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: search/Cache/DemandLoadable.cs
    startLine: 247
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Caching
  summary: "\n\n"
  example: []
  syntax:
    content: public DemandLoadable(Func<object, T> loader, object key)
    content.vb: Public Sub New(loader As Func(Of Object, T), key As Object)
    parameters:
    - id: loader
      type: System.Func{System.Object,{T}}
      description: ''
    - id: key
      type: System.Object
      description: ''
  overload: Microsoft.Health.Caching.DemandLoadable`1.#ctor*
  nameWithType.vb: DemandLoadable(Of T).DemandLoadable(Func(Of Object, T), Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of T).DemandLoadable(System.Func(Of System.Object, T), System.Object)
  name.vb: DemandLoadable(Func(Of Object, T), Object)
references:
- uid: Microsoft.Health.Caching
  commentId: N:Microsoft.Health.Caching
  isExternal: false
  name: Microsoft.Health.Caching
  nameWithType: Microsoft.Health.Caching
  fullName: Microsoft.Health.Caching
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.Caching.DemandLoadable{System.Object,{T}}
  commentId: T:Microsoft.Health.Caching.DemandLoadable{System.Object,`0}
  parent: Microsoft.Health.Caching
  definition: Microsoft.Health.Caching.DemandLoadable`2
  name: DemandLoadable<Object, T>
  nameWithType: DemandLoadable<Object, T>
  fullName: Microsoft.Health.Caching.DemandLoadable<System.Object, T>
  nameWithType.vb: DemandLoadable(Of Object, T)
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of System.Object, T)
  name.vb: DemandLoadable(Of Object, T)
  spec.csharp:
  - uid: Microsoft.Health.Caching.DemandLoadable`2
    name: DemandLoadable
    nameWithType: DemandLoadable
    fullName: Microsoft.Health.Caching.DemandLoadable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.Caching.DemandLoadable`2
    name: DemandLoadable
    nameWithType: DemandLoadable
    fullName: Microsoft.Health.Caching.DemandLoadable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Caching.IDemandLoadable
  commentId: T:Microsoft.Health.Caching.IDemandLoadable
  parent: Microsoft.Health.Caching
  isExternal: false
  name: IDemandLoadable
  nameWithType: IDemandLoadable
  fullName: Microsoft.Health.Caching.IDemandLoadable
- uid: Microsoft.Health.Caching.DemandLoadable{System.Object,{T}}.Loaded
  commentId: E:Microsoft.Health.Caching.DemandLoadable{System.Object,`0}.Loaded
  parent: Microsoft.Health.Caching.DemandLoadable{System.Object,{T}}
  definition: Microsoft.Health.Caching.DemandLoadable`2.Loaded
  name: Loaded
  nameWithType: DemandLoadable<Object, T>.Loaded
  fullName: Microsoft.Health.Caching.DemandLoadable<System.Object, T>.Loaded
  nameWithType.vb: DemandLoadable(Of Object, T).Loaded
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of System.Object, T).Loaded
- uid: Microsoft.Health.Caching.DemandLoadable{System.Object,{T}}.Key
  commentId: P:Microsoft.Health.Caching.DemandLoadable{System.Object,`0}.Key
  parent: Microsoft.Health.Caching.DemandLoadable{System.Object,{T}}
  definition: Microsoft.Health.Caching.DemandLoadable`2.Key
  name: Key
  nameWithType: DemandLoadable<Object, T>.Key
  fullName: Microsoft.Health.Caching.DemandLoadable<System.Object, T>.Key
  nameWithType.vb: DemandLoadable(Of Object, T).Key
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of System.Object, T).Key
- uid: Microsoft.Health.Caching.DemandLoadable{System.Object,{T}}.Value
  commentId: P:Microsoft.Health.Caching.DemandLoadable{System.Object,`0}.Value
  parent: Microsoft.Health.Caching.DemandLoadable{System.Object,{T}}
  definition: Microsoft.Health.Caching.DemandLoadable`2.Value
  name: Value
  nameWithType: DemandLoadable<Object, T>.Value
  fullName: Microsoft.Health.Caching.DemandLoadable<System.Object, T>.Value
  nameWithType.vb: DemandLoadable(Of Object, T).Value
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of System.Object, T).Value
- uid: Microsoft.Health.Caching.DemandLoadable{System.Object,{T}}.HasValue
  commentId: P:Microsoft.Health.Caching.DemandLoadable{System.Object,`0}.HasValue
  parent: Microsoft.Health.Caching.DemandLoadable{System.Object,{T}}
  definition: Microsoft.Health.Caching.DemandLoadable`2.HasValue
  name: HasValue
  nameWithType: DemandLoadable<Object, T>.HasValue
  fullName: Microsoft.Health.Caching.DemandLoadable<System.Object, T>.HasValue
  nameWithType.vb: DemandLoadable(Of Object, T).HasValue
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of System.Object, T).HasValue
- uid: Microsoft.Health.Caching.DemandLoadable{System.Object,{T}}.Load(System.Boolean)
  commentId: M:Microsoft.Health.Caching.DemandLoadable{System.Object,`0}.Load(System.Boolean)
  parent: Microsoft.Health.Caching.DemandLoadable{System.Object,{T}}
  definition: Microsoft.Health.Caching.DemandLoadable`2.Load(System.Boolean)
  name: Load(Boolean)
  nameWithType: DemandLoadable<Object, T>.Load(Boolean)
  fullName: Microsoft.Health.Caching.DemandLoadable<System.Object, T>.Load(System.Boolean)
  nameWithType.vb: DemandLoadable(Of Object, T).Load(Boolean)
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of System.Object, T).Load(System.Boolean)
  spec.csharp:
  - uid: Microsoft.Health.Caching.DemandLoadable`2.Load(System.Boolean)
    name: Load
    nameWithType: DemandLoadable<Object, T>.Load
    fullName: Microsoft.Health.Caching.DemandLoadable<System.Object, T>.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Caching.DemandLoadable`2.Load(System.Boolean)
    name: Load
    nameWithType: DemandLoadable(Of Object, T).Load
    fullName: Microsoft.Health.Caching.DemandLoadable(Of System.Object, T).Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Caching.DemandLoadable{System.Object,{T}}.Unload
  commentId: M:Microsoft.Health.Caching.DemandLoadable{System.Object,`0}.Unload
  parent: Microsoft.Health.Caching.DemandLoadable{System.Object,{T}}
  definition: Microsoft.Health.Caching.DemandLoadable`2.Unload
  name: Unload()
  nameWithType: DemandLoadable<Object, T>.Unload()
  fullName: Microsoft.Health.Caching.DemandLoadable<System.Object, T>.Unload()
  nameWithType.vb: DemandLoadable(Of Object, T).Unload()
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of System.Object, T).Unload()
  spec.csharp:
  - uid: Microsoft.Health.Caching.DemandLoadable`2.Unload
    name: Unload
    nameWithType: DemandLoadable<Object, T>.Unload
    fullName: Microsoft.Health.Caching.DemandLoadable<System.Object, T>.Unload
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Caching.DemandLoadable`2.Unload
    name: Unload
    nameWithType: DemandLoadable(Of Object, T).Unload
    fullName: Microsoft.Health.Caching.DemandLoadable(Of System.Object, T).Unload
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Caching.DemandLoadable{System.Object,{T}}.TryExpire(System.TimeSpan,System.DateTime@)
  commentId: M:Microsoft.Health.Caching.DemandLoadable{System.Object,`0}.TryExpire(System.TimeSpan,System.DateTime@)
  parent: Microsoft.Health.Caching.DemandLoadable{System.Object,{T}}
  definition: Microsoft.Health.Caching.DemandLoadable`2.TryExpire(System.TimeSpan,System.DateTime@)
  name: TryExpire(TimeSpan, DateTime)
  nameWithType: DemandLoadable<Object, T>.TryExpire(TimeSpan, DateTime)
  fullName: Microsoft.Health.Caching.DemandLoadable<System.Object, T>.TryExpire(System.TimeSpan, System.DateTime)
  nameWithType.vb: DemandLoadable(Of Object, T).TryExpire(TimeSpan, DateTime)
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of System.Object, T).TryExpire(System.TimeSpan, System.DateTime)
  spec.csharp:
  - uid: Microsoft.Health.Caching.DemandLoadable`2.TryExpire(System.TimeSpan,System.DateTime@)
    name: TryExpire
    nameWithType: DemandLoadable<Object, T>.TryExpire
    fullName: Microsoft.Health.Caching.DemandLoadable<System.Object, T>.TryExpire
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Caching.DemandLoadable`2.TryExpire(System.TimeSpan,System.DateTime@)
    name: TryExpire
    nameWithType: DemandLoadable(Of Object, T).TryExpire
    fullName: Microsoft.Health.Caching.DemandLoadable(Of System.Object, T).TryExpire
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Caching.DemandLoadable{System.Object,{T}}.OnLoading
  commentId: M:Microsoft.Health.Caching.DemandLoadable{System.Object,`0}.OnLoading
  parent: Microsoft.Health.Caching.DemandLoadable{System.Object,{T}}
  definition: Microsoft.Health.Caching.DemandLoadable`2.OnLoading
  name: OnLoading()
  nameWithType: DemandLoadable<Object, T>.OnLoading()
  fullName: Microsoft.Health.Caching.DemandLoadable<System.Object, T>.OnLoading()
  nameWithType.vb: DemandLoadable(Of Object, T).OnLoading()
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of System.Object, T).OnLoading()
  spec.csharp:
  - uid: Microsoft.Health.Caching.DemandLoadable`2.OnLoading
    name: OnLoading
    nameWithType: DemandLoadable<Object, T>.OnLoading
    fullName: Microsoft.Health.Caching.DemandLoadable<System.Object, T>.OnLoading
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Caching.DemandLoadable`2.OnLoading
    name: OnLoading
    nameWithType: DemandLoadable(Of Object, T).OnLoading
    fullName: Microsoft.Health.Caching.DemandLoadable(Of System.Object, T).OnLoading
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Caching.DemandLoadable{System.Object,{T}}.OnLoaded({T})
  commentId: M:Microsoft.Health.Caching.DemandLoadable{System.Object,`0}.OnLoaded(`0)
  parent: Microsoft.Health.Caching.DemandLoadable{System.Object,{T}}
  definition: Microsoft.Health.Caching.DemandLoadable`2.OnLoaded(`1)
  name: OnLoaded(T)
  nameWithType: DemandLoadable<Object, T>.OnLoaded(T)
  fullName: Microsoft.Health.Caching.DemandLoadable<System.Object, T>.OnLoaded(T)
  nameWithType.vb: DemandLoadable(Of Object, T).OnLoaded(T)
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of System.Object, T).OnLoaded(T)
  spec.csharp:
  - uid: Microsoft.Health.Caching.DemandLoadable`2.OnLoaded(`1)
    name: OnLoaded
    nameWithType: DemandLoadable<Object, T>.OnLoaded
    fullName: Microsoft.Health.Caching.DemandLoadable<System.Object, T>.OnLoaded
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Caching.DemandLoadable`2.OnLoaded(`1)
    name: OnLoaded
    nameWithType: DemandLoadable(Of Object, T).OnLoaded
    fullName: Microsoft.Health.Caching.DemandLoadable(Of System.Object, T).OnLoaded
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Caching.DemandLoadable{System.Object,{T}}.OnUnload({T})
  commentId: M:Microsoft.Health.Caching.DemandLoadable{System.Object,`0}.OnUnload(`0)
  parent: Microsoft.Health.Caching.DemandLoadable{System.Object,{T}}
  definition: Microsoft.Health.Caching.DemandLoadable`2.OnUnload(`1)
  name: OnUnload(T)
  nameWithType: DemandLoadable<Object, T>.OnUnload(T)
  fullName: Microsoft.Health.Caching.DemandLoadable<System.Object, T>.OnUnload(T)
  nameWithType.vb: DemandLoadable(Of Object, T).OnUnload(T)
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of System.Object, T).OnUnload(T)
  spec.csharp:
  - uid: Microsoft.Health.Caching.DemandLoadable`2.OnUnload(`1)
    name: OnUnload
    nameWithType: DemandLoadable<Object, T>.OnUnload
    fullName: Microsoft.Health.Caching.DemandLoadable<System.Object, T>.OnUnload
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Caching.DemandLoadable`2.OnUnload(`1)
    name: OnUnload
    nameWithType: DemandLoadable(Of Object, T).OnUnload
    fullName: Microsoft.Health.Caching.DemandLoadable(Of System.Object, T).OnUnload
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Caching.DemandLoadable`1.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<DemandLoadable<T>>()
  nameWithType: TypeHelper.ValueOrDbNull<DemandLoadable<T>>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Caching.DemandLoadable<T>>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of DemandLoadable(Of T))()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Caching.DemandLoadable(Of T))()
  name.vb: ValueOrDbNull(Of DemandLoadable(Of T))()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<DemandLoadable<T>>
    nameWithType: TypeHelper.ValueOrDbNull<DemandLoadable<T>>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Caching.DemandLoadable<T>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of DemandLoadable(Of T))
    nameWithType: TypeHelper.ValueOrDbNull(Of DemandLoadable(Of T))
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Caching.DemandLoadable(Of T))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Caching.DemandLoadable`2
  commentId: T:Microsoft.Health.Caching.DemandLoadable`2
  parent: Microsoft.Health.Caching
  isExternal: false
  name: DemandLoadable<K, V>
  nameWithType: DemandLoadable<K, V>
  fullName: Microsoft.Health.Caching.DemandLoadable<K, V>
  nameWithType.vb: DemandLoadable(Of K, V)
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of K, V)
  name.vb: DemandLoadable(Of K, V)
  spec.csharp:
  - uid: Microsoft.Health.Caching.DemandLoadable`2
    name: DemandLoadable
    nameWithType: DemandLoadable
    fullName: Microsoft.Health.Caching.DemandLoadable
  - name: <
    nameWithType: <
    fullName: <
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.Caching.DemandLoadable`2
    name: DemandLoadable
    nameWithType: DemandLoadable
    fullName: Microsoft.Health.Caching.DemandLoadable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Caching.DemandLoadable`2.Loaded
  commentId: E:Microsoft.Health.Caching.DemandLoadable`2.Loaded
  isExternal: false
  name: Loaded
  nameWithType: DemandLoadable<K, V>.Loaded
  fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.Loaded
  nameWithType.vb: DemandLoadable(Of K, V).Loaded
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of K, V).Loaded
- uid: Microsoft.Health.Caching.DemandLoadable`2.Key
  commentId: P:Microsoft.Health.Caching.DemandLoadable`2.Key
  isExternal: false
  name: Key
  nameWithType: DemandLoadable<K, V>.Key
  fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.Key
  nameWithType.vb: DemandLoadable(Of K, V).Key
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of K, V).Key
- uid: Microsoft.Health.Caching.DemandLoadable`2.Value
  commentId: P:Microsoft.Health.Caching.DemandLoadable`2.Value
  isExternal: false
  name: Value
  nameWithType: DemandLoadable<K, V>.Value
  fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.Value
  nameWithType.vb: DemandLoadable(Of K, V).Value
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of K, V).Value
- uid: Microsoft.Health.Caching.DemandLoadable`2.HasValue
  commentId: P:Microsoft.Health.Caching.DemandLoadable`2.HasValue
  isExternal: false
  name: HasValue
  nameWithType: DemandLoadable<K, V>.HasValue
  fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.HasValue
  nameWithType.vb: DemandLoadable(Of K, V).HasValue
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of K, V).HasValue
- uid: Microsoft.Health.Caching.DemandLoadable`2.Load(System.Boolean)
  commentId: M:Microsoft.Health.Caching.DemandLoadable`2.Load(System.Boolean)
  isExternal: true
  name: Load(Boolean)
  nameWithType: DemandLoadable<K, V>.Load(Boolean)
  fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.Load(System.Boolean)
  nameWithType.vb: DemandLoadable(Of K, V).Load(Boolean)
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of K, V).Load(System.Boolean)
  spec.csharp:
  - uid: Microsoft.Health.Caching.DemandLoadable`2.Load(System.Boolean)
    name: Load
    nameWithType: DemandLoadable<K, V>.Load
    fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Caching.DemandLoadable`2.Load(System.Boolean)
    name: Load
    nameWithType: DemandLoadable(Of K, V).Load
    fullName: Microsoft.Health.Caching.DemandLoadable(Of K, V).Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Caching.DemandLoadable`2.Unload
  commentId: M:Microsoft.Health.Caching.DemandLoadable`2.Unload
  isExternal: false
  name: Unload()
  nameWithType: DemandLoadable<K, V>.Unload()
  fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.Unload()
  nameWithType.vb: DemandLoadable(Of K, V).Unload()
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of K, V).Unload()
  spec.csharp:
  - uid: Microsoft.Health.Caching.DemandLoadable`2.Unload
    name: Unload
    nameWithType: DemandLoadable<K, V>.Unload
    fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.Unload
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Caching.DemandLoadable`2.Unload
    name: Unload
    nameWithType: DemandLoadable(Of K, V).Unload
    fullName: Microsoft.Health.Caching.DemandLoadable(Of K, V).Unload
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Caching.DemandLoadable`2.TryExpire(System.TimeSpan,System.DateTime@)
  commentId: M:Microsoft.Health.Caching.DemandLoadable`2.TryExpire(System.TimeSpan,System.DateTime@)
  isExternal: true
  name: TryExpire(TimeSpan, DateTime)
  nameWithType: DemandLoadable<K, V>.TryExpire(TimeSpan, DateTime)
  fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.TryExpire(System.TimeSpan, System.DateTime)
  nameWithType.vb: DemandLoadable(Of K, V).TryExpire(TimeSpan, DateTime)
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of K, V).TryExpire(System.TimeSpan, System.DateTime)
  spec.csharp:
  - uid: Microsoft.Health.Caching.DemandLoadable`2.TryExpire(System.TimeSpan,System.DateTime@)
    name: TryExpire
    nameWithType: DemandLoadable<K, V>.TryExpire
    fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.TryExpire
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Caching.DemandLoadable`2.TryExpire(System.TimeSpan,System.DateTime@)
    name: TryExpire
    nameWithType: DemandLoadable(Of K, V).TryExpire
    fullName: Microsoft.Health.Caching.DemandLoadable(Of K, V).TryExpire
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Caching.DemandLoadable`2.OnLoading
  commentId: M:Microsoft.Health.Caching.DemandLoadable`2.OnLoading
  isExternal: false
  name: OnLoading()
  nameWithType: DemandLoadable<K, V>.OnLoading()
  fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.OnLoading()
  nameWithType.vb: DemandLoadable(Of K, V).OnLoading()
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of K, V).OnLoading()
  spec.csharp:
  - uid: Microsoft.Health.Caching.DemandLoadable`2.OnLoading
    name: OnLoading
    nameWithType: DemandLoadable<K, V>.OnLoading
    fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.OnLoading
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Caching.DemandLoadable`2.OnLoading
    name: OnLoading
    nameWithType: DemandLoadable(Of K, V).OnLoading
    fullName: Microsoft.Health.Caching.DemandLoadable(Of K, V).OnLoading
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Caching.DemandLoadable`2.OnLoaded(`1)
  commentId: M:Microsoft.Health.Caching.DemandLoadable`2.OnLoaded(`1)
  isExternal: false
  name: OnLoaded(V)
  nameWithType: DemandLoadable<K, V>.OnLoaded(V)
  fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.OnLoaded(V)
  nameWithType.vb: DemandLoadable(Of K, V).OnLoaded(V)
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of K, V).OnLoaded(V)
  spec.csharp:
  - uid: Microsoft.Health.Caching.DemandLoadable`2.OnLoaded(`1)
    name: OnLoaded
    nameWithType: DemandLoadable<K, V>.OnLoaded
    fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.OnLoaded
  - name: (
    nameWithType: (
    fullName: (
  - name: V
    nameWithType: V
    fullName: V
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Caching.DemandLoadable`2.OnLoaded(`1)
    name: OnLoaded
    nameWithType: DemandLoadable(Of K, V).OnLoaded
    fullName: Microsoft.Health.Caching.DemandLoadable(Of K, V).OnLoaded
  - name: (
    nameWithType: (
    fullName: (
  - name: V
    nameWithType: V
    fullName: V
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Caching.DemandLoadable`2.OnUnload(`1)
  commentId: M:Microsoft.Health.Caching.DemandLoadable`2.OnUnload(`1)
  isExternal: false
  name: OnUnload(V)
  nameWithType: DemandLoadable<K, V>.OnUnload(V)
  fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.OnUnload(V)
  nameWithType.vb: DemandLoadable(Of K, V).OnUnload(V)
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of K, V).OnUnload(V)
  spec.csharp:
  - uid: Microsoft.Health.Caching.DemandLoadable`2.OnUnload(`1)
    name: OnUnload
    nameWithType: DemandLoadable<K, V>.OnUnload
    fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.OnUnload
  - name: (
    nameWithType: (
    fullName: (
  - name: V
    nameWithType: V
    fullName: V
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Caching.DemandLoadable`2.OnUnload(`1)
    name: OnUnload
    nameWithType: DemandLoadable(Of K, V).OnUnload
    fullName: Microsoft.Health.Caching.DemandLoadable(Of K, V).OnUnload
  - name: (
    nameWithType: (
    fullName: (
  - name: V
    nameWithType: V
    fullName: V
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.Caching.DemandLoadable`1.#ctor*
  commentId: Overload:Microsoft.Health.Caching.DemandLoadable`1.#ctor
  isExternal: false
  name: DemandLoadable
  nameWithType: DemandLoadable<T>.DemandLoadable
  fullName: Microsoft.Health.Caching.DemandLoadable<T>.DemandLoadable
  nameWithType.vb: DemandLoadable(Of T).DemandLoadable
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of T).DemandLoadable
- uid: System.Func{System.Object,{T}}
  commentId: T:System.Func{System.Object,`0}
  parent: System
  definition: System.Func`2
  name: Func<Object, T>
  nameWithType: Func<Object, T>
  fullName: System.Func<System.Object, T>
  nameWithType.vb: Func(Of Object, T)
  fullName.vb: System.Func(Of System.Object, T)
  name.vb: Func(Of Object, T)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
