### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs
  commentId: T:Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs
  id: FailedAttemptEventArgs
  parent: Microsoft.Health.Utility.TransientFaultHandling
  children:
  - Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs.#ctor(System.Int32,System.Exception,System.String,System.Boolean,System.Int32)
  - Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs.AttemptCount
  - Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs.CallStackTrace
  - Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs.Exception
  - Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs.IsTransient
  - Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs.RetryWait
  langs:
  - csharp
  - vb
  name: FailedAttemptEventArgs
  nameWithType: FailedAttemptEventArgs
  fullName: Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/TransientFaultHandling/FailedAttemptEventArgs.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: FailedAttemptEventArgs
    path: utilities/TransientFaultHandling/FailedAttemptEventArgs.cs
    startLine: 14
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.TransientFaultHandling
  summary: "\nArguments for the FailedAttempt event of the\nTransientFaultHandler.\n"
  example: []
  syntax:
    content: 'public class FailedAttemptEventArgs : EventArgs'
    content.vb: >-
      Public Class FailedAttemptEventArgs
          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs.#ctor(System.Int32,System.Exception,System.String,System.Boolean,System.Int32)
  commentId: M:Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs.#ctor(System.Int32,System.Exception,System.String,System.Boolean,System.Int32)
  id: '#ctor(System.Int32,System.Exception,System.String,System.Boolean,System.Int32)'
  parent: Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs
  langs:
  - csharp
  - vb
  name: FailedAttemptEventArgs(Int32, Exception, String, Boolean, Int32)
  nameWithType: FailedAttemptEventArgs.FailedAttemptEventArgs(Int32, Exception, String, Boolean, Int32)
  fullName: Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs.FailedAttemptEventArgs(System.Int32, System.Exception, System.String, System.Boolean, System.Int32)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/TransientFaultHandling/FailedAttemptEventArgs.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: utilities/TransientFaultHandling/FailedAttemptEventArgs.cs
    startLine: 16
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.TransientFaultHandling
  syntax:
    content: public FailedAttemptEventArgs(int attemptCount, Exception exception, string callStackTrace, bool isTransient, int retryWait)
    content.vb: Public Sub New(attemptCount As Integer, exception As Exception, callStackTrace As String, isTransient As Boolean, retryWait As Integer)
    parameters:
    - id: attemptCount
      type: System.Int32
    - id: exception
      type: System.Exception
    - id: callStackTrace
      type: System.String
    - id: isTransient
      type: System.Boolean
    - id: retryWait
      type: System.Int32
  overload: Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs.AttemptCount
  commentId: P:Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs.AttemptCount
  id: AttemptCount
  parent: Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs
  langs:
  - csharp
  - vb
  name: AttemptCount
  nameWithType: FailedAttemptEventArgs.AttemptCount
  fullName: Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs.AttemptCount
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/TransientFaultHandling/FailedAttemptEventArgs.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AttemptCount
    path: utilities/TransientFaultHandling/FailedAttemptEventArgs.cs
    startLine: 54
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.TransientFaultHandling
  summary: "\nCount of of failed attempts (including this one)\nso far within the current retry loop.\n"
  example: []
  syntax:
    content: public int AttemptCount { get; }
    content.vb: Public ReadOnly Property AttemptCount As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs.AttemptCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs.Exception
  commentId: P:Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs.Exception
  id: Exception
  parent: Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs
  langs:
  - csharp
  - vb
  name: Exception
  nameWithType: FailedAttemptEventArgs.Exception
  fullName: Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs.Exception
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/TransientFaultHandling/FailedAttemptEventArgs.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Exception
    path: utilities/TransientFaultHandling/FailedAttemptEventArgs.cs
    startLine: 65
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.TransientFaultHandling
  summary: "\nThe exception associated with the failure.\n"
  remarks: "\nSince the exception is caught by the handler, its\nstack trace will not include anything below that\n(i.e. the callers).  This other part of the strack trace\ncan be obtained from the CallStackTrace property.\n"
  example: []
  syntax:
    content: public Exception Exception { get; }
    content.vb: Public ReadOnly Property Exception As Exception
    parameters: []
    return:
      type: System.Exception
  overload: Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs.Exception*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs.CallStackTrace
  commentId: P:Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs.CallStackTrace
  id: CallStackTrace
  parent: Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs
  langs:
  - csharp
  - vb
  name: CallStackTrace
  nameWithType: FailedAttemptEventArgs.CallStackTrace
  fullName: Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs.CallStackTrace
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/TransientFaultHandling/FailedAttemptEventArgs.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CallStackTrace
    path: utilities/TransientFaultHandling/FailedAttemptEventArgs.cs
    startLine: 75
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.TransientFaultHandling
  summary: "\nA human-readable stack trace of the call.\n"
  remarks: "\nThe exception includes the stack trace from the\ninvocation point and up.  This stack trace includes the\nstack trace to the bottom caller.\n"
  example: []
  syntax:
    content: public string CallStackTrace { get; }
    content.vb: Public ReadOnly Property CallStackTrace As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs.CallStackTrace*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs.IsTransient
  commentId: P:Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs.IsTransient
  id: IsTransient
  parent: Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs
  langs:
  - csharp
  - vb
  name: IsTransient
  nameWithType: FailedAttemptEventArgs.IsTransient
  fullName: Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs.IsTransient
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/TransientFaultHandling/FailedAttemptEventArgs.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: IsTransient
    path: utilities/TransientFaultHandling/FailedAttemptEventArgs.cs
    startLine: 80
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.TransientFaultHandling
  summary: "\nIndicates whether the failure was considered transient.\n"
  example: []
  syntax:
    content: public bool IsTransient { get; }
    content.vb: Public ReadOnly Property IsTransient As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs.IsTransient*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs.RetryWait
  commentId: P:Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs.RetryWait
  id: RetryWait
  parent: Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs
  langs:
  - csharp
  - vb
  name: RetryWait
  nameWithType: FailedAttemptEventArgs.RetryWait
  fullName: Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs.RetryWait
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/TransientFaultHandling/FailedAttemptEventArgs.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: RetryWait
    path: utilities/TransientFaultHandling/FailedAttemptEventArgs.cs
    startLine: 88
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.TransientFaultHandling
  summary: "\nIf the failure is indicated as being transient,\nthis value indicates the number milliseconds we\nwill wait to retry; or -1 if there will be no\nretry attempted.\n"
  example: []
  syntax:
    content: public int RetryWait { get; }
    content.vb: Public ReadOnly Property RetryWait As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs.RetryWait*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Health.Utility.TransientFaultHandling
  commentId: N:Microsoft.Health.Utility.TransientFaultHandling
  isExternal: false
  name: Microsoft.Health.Utility.TransientFaultHandling
  nameWithType: Microsoft.Health.Utility.TransientFaultHandling
  fullName: Microsoft.Health.Utility.TransientFaultHandling
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<FailedAttemptEventArgs>()
  nameWithType: TypeHelper.ValueOrDbNull<FailedAttemptEventArgs>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of FailedAttemptEventArgs)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs)()
  name.vb: ValueOrDbNull(Of FailedAttemptEventArgs)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<FailedAttemptEventArgs>
    nameWithType: TypeHelper.ValueOrDbNull<FailedAttemptEventArgs>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of FailedAttemptEventArgs)
    nameWithType: TypeHelper.ValueOrDbNull(Of FailedAttemptEventArgs)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs.#ctor*
  commentId: Overload:Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs.#ctor
  isExternal: false
  name: FailedAttemptEventArgs
  nameWithType: FailedAttemptEventArgs.FailedAttemptEventArgs
  fullName: Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs.FailedAttemptEventArgs
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs.AttemptCount*
  commentId: Overload:Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs.AttemptCount
  isExternal: false
  name: AttemptCount
  nameWithType: FailedAttemptEventArgs.AttemptCount
  fullName: Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs.AttemptCount
- uid: Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs.Exception*
  commentId: Overload:Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs.Exception
  isExternal: false
  name: Exception
  nameWithType: FailedAttemptEventArgs.Exception
  fullName: Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs.Exception
- uid: Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs.CallStackTrace*
  commentId: Overload:Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs.CallStackTrace
  isExternal: false
  name: CallStackTrace
  nameWithType: FailedAttemptEventArgs.CallStackTrace
  fullName: Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs.CallStackTrace
- uid: Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs.IsTransient*
  commentId: Overload:Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs.IsTransient
  isExternal: false
  name: IsTransient
  nameWithType: FailedAttemptEventArgs.IsTransient
  fullName: Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs.IsTransient
- uid: Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs.RetryWait*
  commentId: Overload:Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs.RetryWait
  isExternal: false
  name: RetryWait
  nameWithType: FailedAttemptEventArgs.RetryWait
  fullName: Microsoft.Health.Utility.TransientFaultHandling.FailedAttemptEventArgs.RetryWait
