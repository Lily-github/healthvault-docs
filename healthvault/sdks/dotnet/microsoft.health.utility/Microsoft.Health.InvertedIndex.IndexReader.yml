### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.InvertedIndex.IndexReader
  commentId: T:Microsoft.Health.InvertedIndex.IndexReader
  id: IndexReader
  parent: Microsoft.Health.InvertedIndex
  children:
  - Microsoft.Health.InvertedIndex.IndexReader.#ctor(System.IO.BinaryReader)
  - Microsoft.Health.InvertedIndex.IndexReader.EnsureToken(System.String)
  - Microsoft.Health.InvertedIndex.IndexReader.EnsureVersion(System.String)
  - Microsoft.Health.InvertedIndex.IndexReader.EnumerateArrayFloat
  - Microsoft.Health.InvertedIndex.IndexReader.EnumerateArrayInt32
  - Microsoft.Health.InvertedIndex.IndexReader.EnumerateArrayString
  - Microsoft.Health.InvertedIndex.IndexReader.EnumerateArrayUInt32
  - Microsoft.Health.InvertedIndex.IndexReader.EnumerateBytes(System.Int32)
  - Microsoft.Health.InvertedIndex.IndexReader.EnumerateFloats(System.Int32)
  - Microsoft.Health.InvertedIndex.IndexReader.EnumerateInt32s(System.Int32)
  - Microsoft.Health.InvertedIndex.IndexReader.EnumeratePostingsByte
  - Microsoft.Health.InvertedIndex.IndexReader.EnumeratePostingsByte(System.Int32)
  - Microsoft.Health.InvertedIndex.IndexReader.EnumeratePostingsFloat
  - Microsoft.Health.InvertedIndex.IndexReader.EnumeratePostingsFloat(System.Int32)
  - Microsoft.Health.InvertedIndex.IndexReader.EnumeratePostingsInt32
  - Microsoft.Health.InvertedIndex.IndexReader.EnumeratePostingsInt32(System.Int32)
  - Microsoft.Health.InvertedIndex.IndexReader.EnumerateRecordIDs(System.Int32)
  - Microsoft.Health.InvertedIndex.IndexReader.EnumerateStrings(System.Int32)
  - Microsoft.Health.InvertedIndex.IndexReader.EnumerateUInt32s(System.Int32)
  - Microsoft.Health.InvertedIndex.IndexReader.ReadArrayFloat
  - Microsoft.Health.InvertedIndex.IndexReader.ReadArrayInt32
  - Microsoft.Health.InvertedIndex.IndexReader.ReadArrayString
  - Microsoft.Health.InvertedIndex.IndexReader.ReadArrayUInt32
  - Microsoft.Health.InvertedIndex.IndexReader.ReadByte
  - Microsoft.Health.InvertedIndex.IndexReader.ReadBytes(System.Int32)
  - Microsoft.Health.InvertedIndex.IndexReader.ReadCollectionHeader(System.String)
  - Microsoft.Health.InvertedIndex.IndexReader.ReadCollectionLength
  - Microsoft.Health.InvertedIndex.IndexReader.Reader
  - Microsoft.Health.InvertedIndex.IndexReader.ReadFloat
  - Microsoft.Health.InvertedIndex.IndexReader.ReadFloats(System.Int32)
  - Microsoft.Health.InvertedIndex.IndexReader.ReadInt32
  - Microsoft.Health.InvertedIndex.IndexReader.ReadInt32s(System.Int32)
  - Microsoft.Health.InvertedIndex.IndexReader.ReadPostingByte
  - Microsoft.Health.InvertedIndex.IndexReader.ReadPostingFloat
  - Microsoft.Health.InvertedIndex.IndexReader.ReadPostingInt32
  - Microsoft.Health.InvertedIndex.IndexReader.ReadPostingsByte
  - Microsoft.Health.InvertedIndex.IndexReader.ReadPostingsFloat
  - Microsoft.Health.InvertedIndex.IndexReader.ReadPostingsInt32
  - Microsoft.Health.InvertedIndex.IndexReader.ReadRecordID
  - Microsoft.Health.InvertedIndex.IndexReader.ReadRecordIDs(System.Int32)
  - Microsoft.Health.InvertedIndex.IndexReader.ReadRecordList
  - Microsoft.Health.InvertedIndex.IndexReader.ReadRecordPropertyList``1
  - Microsoft.Health.InvertedIndex.IndexReader.ReadString
  - Microsoft.Health.InvertedIndex.IndexReader.ReadStrings(System.Int32)
  - Microsoft.Health.InvertedIndex.IndexReader.ReadToken
  - Microsoft.Health.InvertedIndex.IndexReader.ReadUInt32
  - Microsoft.Health.InvertedIndex.IndexReader.ReadUInt32s(System.Int32)
  - Microsoft.Health.InvertedIndex.IndexReader.ReadVersion
  - Microsoft.Health.InvertedIndex.IndexReader.ThrowInvalidToken(System.String,System.String)
  langs:
  - csharp
  - vb
  name: IndexReader
  nameWithType: IndexReader
  fullName: Microsoft.Health.InvertedIndex.IndexReader
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: IndexReader
    path: search/InvertedIndex/IndexReader.cs
    startLine: 15
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public class IndexReader
    content.vb: Public Class IndexReader
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.InvertedIndex.IndexReader.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.InvertedIndex.IndexReader.#ctor(System.IO.BinaryReader)
  commentId: M:Microsoft.Health.InvertedIndex.IndexReader.#ctor(System.IO.BinaryReader)
  id: '#ctor(System.IO.BinaryReader)'
  parent: Microsoft.Health.InvertedIndex.IndexReader
  langs:
  - csharp
  - vb
  name: IndexReader(BinaryReader)
  nameWithType: IndexReader.IndexReader(BinaryReader)
  fullName: Microsoft.Health.InvertedIndex.IndexReader.IndexReader(System.IO.BinaryReader)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: search/InvertedIndex/IndexReader.cs
    startLine: 23
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public IndexReader(BinaryReader reader)
    content.vb: Public Sub New(reader As BinaryReader)
    parameters:
    - id: reader
      type: System.IO.BinaryReader
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexReader.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexReader.Reader
  commentId: P:Microsoft.Health.InvertedIndex.IndexReader.Reader
  id: Reader
  parent: Microsoft.Health.InvertedIndex.IndexReader
  langs:
  - csharp
  - vb
  name: Reader
  nameWithType: IndexReader.Reader
  fullName: Microsoft.Health.InvertedIndex.IndexReader.Reader
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Reader
    path: search/InvertedIndex/IndexReader.cs
    startLine: 36
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public BinaryReader Reader { get; }
    content.vb: Public ReadOnly Property Reader As BinaryReader
    parameters: []
    return:
      type: System.IO.BinaryReader
  overload: Microsoft.Health.InvertedIndex.IndexReader.Reader*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadToken
  commentId: M:Microsoft.Health.InvertedIndex.IndexReader.ReadToken
  id: ReadToken
  parent: Microsoft.Health.InvertedIndex.IndexReader
  langs:
  - csharp
  - vb
  name: ReadToken()
  nameWithType: IndexReader.ReadToken()
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadToken()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ReadToken
    path: search/InvertedIndex/IndexReader.cs
    startLine: 48
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public string ReadToken()
    content.vb: Public Function ReadToken As String
    return:
      type: System.String
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexReader.ReadToken*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexReader.EnsureToken(System.String)
  commentId: M:Microsoft.Health.InvertedIndex.IndexReader.EnsureToken(System.String)
  id: EnsureToken(System.String)
  parent: Microsoft.Health.InvertedIndex.IndexReader
  langs:
  - csharp
  - vb
  name: EnsureToken(String)
  nameWithType: IndexReader.EnsureToken(String)
  fullName: Microsoft.Health.InvertedIndex.IndexReader.EnsureToken(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: EnsureToken
    path: search/InvertedIndex/IndexReader.cs
    startLine: 57
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void EnsureToken(string expectedToken)
    content.vb: Public Sub EnsureToken(expectedToken As String)
    parameters:
    - id: expectedToken
      type: System.String
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexReader.EnsureToken*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexReader.ThrowInvalidToken(System.String,System.String)
  commentId: M:Microsoft.Health.InvertedIndex.IndexReader.ThrowInvalidToken(System.String,System.String)
  id: ThrowInvalidToken(System.String,System.String)
  parent: Microsoft.Health.InvertedIndex.IndexReader
  langs:
  - csharp
  - vb
  name: ThrowInvalidToken(String, String)
  nameWithType: IndexReader.ThrowInvalidToken(String, String)
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ThrowInvalidToken(System.String, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ThrowInvalidToken
    path: search/InvertedIndex/IndexReader.cs
    startLine: 71
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void ThrowInvalidToken(string token, string expectedToken)
    content.vb: Public Sub ThrowInvalidToken(token As String, expectedToken As String)
    parameters:
    - id: token
      type: System.String
      description: ''
    - id: expectedToken
      type: System.String
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexReader.ThrowInvalidToken*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadVersion
  commentId: M:Microsoft.Health.InvertedIndex.IndexReader.ReadVersion
  id: ReadVersion
  parent: Microsoft.Health.InvertedIndex.IndexReader
  langs:
  - csharp
  - vb
  name: ReadVersion()
  nameWithType: IndexReader.ReadVersion()
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadVersion()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ReadVersion
    path: search/InvertedIndex/IndexReader.cs
    startLine: 81
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public string ReadVersion()
    content.vb: Public Function ReadVersion As String
    return:
      type: System.String
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexReader.ReadVersion*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexReader.EnsureVersion(System.String)
  commentId: M:Microsoft.Health.InvertedIndex.IndexReader.EnsureVersion(System.String)
  id: EnsureVersion(System.String)
  parent: Microsoft.Health.InvertedIndex.IndexReader
  langs:
  - csharp
  - vb
  name: EnsureVersion(String)
  nameWithType: IndexReader.EnsureVersion(String)
  fullName: Microsoft.Health.InvertedIndex.IndexReader.EnsureVersion(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: EnsureVersion
    path: search/InvertedIndex/IndexReader.cs
    startLine: 91
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void EnsureVersion(string version)
    content.vb: Public Sub EnsureVersion(version As String)
    parameters:
    - id: version
      type: System.String
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexReader.EnsureVersion*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadCollectionLength
  commentId: M:Microsoft.Health.InvertedIndex.IndexReader.ReadCollectionLength
  id: ReadCollectionLength
  parent: Microsoft.Health.InvertedIndex.IndexReader
  langs:
  - csharp
  - vb
  name: ReadCollectionLength()
  nameWithType: IndexReader.ReadCollectionLength()
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadCollectionLength()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ReadCollectionLength
    path: search/InvertedIndex/IndexReader.cs
    startLine: 103
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public int ReadCollectionLength()
    content.vb: Public Function ReadCollectionLength As Integer
    return:
      type: System.Int32
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexReader.ReadCollectionLength*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadCollectionHeader(System.String)
  commentId: M:Microsoft.Health.InvertedIndex.IndexReader.ReadCollectionHeader(System.String)
  id: ReadCollectionHeader(System.String)
  parent: Microsoft.Health.InvertedIndex.IndexReader
  langs:
  - csharp
  - vb
  name: ReadCollectionHeader(String)
  nameWithType: IndexReader.ReadCollectionHeader(String)
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadCollectionHeader(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ReadCollectionHeader
    path: search/InvertedIndex/IndexReader.cs
    startLine: 113
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public int ReadCollectionHeader(string token)
    content.vb: Public Function ReadCollectionHeader(token As String) As Integer
    parameters:
    - id: token
      type: System.String
      description: ''
    return:
      type: System.Int32
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexReader.ReadCollectionHeader*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadString
  commentId: M:Microsoft.Health.InvertedIndex.IndexReader.ReadString
  id: ReadString
  parent: Microsoft.Health.InvertedIndex.IndexReader
  langs:
  - csharp
  - vb
  name: ReadString()
  nameWithType: IndexReader.ReadString()
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadString()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ReadString
    path: search/InvertedIndex/IndexReader.cs
    startLine: 123
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public string ReadString()
    content.vb: Public Function ReadString As String
    return:
      type: System.String
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexReader.ReadString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadStrings(System.Int32)
  commentId: M:Microsoft.Health.InvertedIndex.IndexReader.ReadStrings(System.Int32)
  id: ReadStrings(System.Int32)
  parent: Microsoft.Health.InvertedIndex.IndexReader
  langs:
  - csharp
  - vb
  name: ReadStrings(Int32)
  nameWithType: IndexReader.ReadStrings(Int32)
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadStrings(System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ReadStrings
    path: search/InvertedIndex/IndexReader.cs
    startLine: 133
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public string[] ReadStrings(int count)
    content.vb: Public Function ReadStrings(count As Integer) As String()
    parameters:
    - id: count
      type: System.Int32
      description: ''
    return:
      type: System.String[]
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexReader.ReadStrings*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexReader.EnumerateStrings(System.Int32)
  commentId: M:Microsoft.Health.InvertedIndex.IndexReader.EnumerateStrings(System.Int32)
  id: EnumerateStrings(System.Int32)
  parent: Microsoft.Health.InvertedIndex.IndexReader
  langs:
  - csharp
  - vb
  name: EnumerateStrings(Int32)
  nameWithType: IndexReader.EnumerateStrings(Int32)
  fullName: Microsoft.Health.InvertedIndex.IndexReader.EnumerateStrings(System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: EnumerateStrings
    path: search/InvertedIndex/IndexReader.cs
    startLine: 149
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public IEnumerable<string> EnumerateStrings(int count)
    content.vb: Public Function EnumerateStrings(count As Integer) As IEnumerable(Of String)
    parameters:
    - id: count
      type: System.Int32
      description: ''
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexReader.EnumerateStrings*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadByte
  commentId: M:Microsoft.Health.InvertedIndex.IndexReader.ReadByte
  id: ReadByte
  parent: Microsoft.Health.InvertedIndex.IndexReader
  langs:
  - csharp
  - vb
  name: ReadByte()
  nameWithType: IndexReader.ReadByte()
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadByte()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ReadByte
    path: search/InvertedIndex/IndexReader.cs
    startLine: 161
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public int ReadByte()
    content.vb: Public Function ReadByte As Integer
    return:
      type: System.Int32
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexReader.ReadByte*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadBytes(System.Int32)
  commentId: M:Microsoft.Health.InvertedIndex.IndexReader.ReadBytes(System.Int32)
  id: ReadBytes(System.Int32)
  parent: Microsoft.Health.InvertedIndex.IndexReader
  langs:
  - csharp
  - vb
  name: ReadBytes(Int32)
  nameWithType: IndexReader.ReadBytes(Int32)
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadBytes(System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ReadBytes
    path: search/InvertedIndex/IndexReader.cs
    startLine: 171
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public byte[] ReadBytes(int count)
    content.vb: Public Function ReadBytes(count As Integer) As Byte()
    parameters:
    - id: count
      type: System.Int32
      description: ''
    return:
      type: System.Byte[]
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexReader.ReadBytes*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexReader.EnumerateBytes(System.Int32)
  commentId: M:Microsoft.Health.InvertedIndex.IndexReader.EnumerateBytes(System.Int32)
  id: EnumerateBytes(System.Int32)
  parent: Microsoft.Health.InvertedIndex.IndexReader
  langs:
  - csharp
  - vb
  name: EnumerateBytes(Int32)
  nameWithType: IndexReader.EnumerateBytes(Int32)
  fullName: Microsoft.Health.InvertedIndex.IndexReader.EnumerateBytes(System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: EnumerateBytes
    path: search/InvertedIndex/IndexReader.cs
    startLine: 187
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public IEnumerable<byte> EnumerateBytes(int count)
    content.vb: Public Function EnumerateBytes(count As Integer) As IEnumerable(Of Byte)
    parameters:
    - id: count
      type: System.Int32
      description: ''
    return:
      type: System.Collections.Generic.IEnumerable{System.Byte}
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexReader.EnumerateBytes*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadInt32
  commentId: M:Microsoft.Health.InvertedIndex.IndexReader.ReadInt32
  id: ReadInt32
  parent: Microsoft.Health.InvertedIndex.IndexReader
  langs:
  - csharp
  - vb
  name: ReadInt32()
  nameWithType: IndexReader.ReadInt32()
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadInt32()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ReadInt32
    path: search/InvertedIndex/IndexReader.cs
    startLine: 199
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public int ReadInt32()
    content.vb: Public Function ReadInt32 As Integer
    return:
      type: System.Int32
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexReader.ReadInt32*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadInt32s(System.Int32)
  commentId: M:Microsoft.Health.InvertedIndex.IndexReader.ReadInt32s(System.Int32)
  id: ReadInt32s(System.Int32)
  parent: Microsoft.Health.InvertedIndex.IndexReader
  langs:
  - csharp
  - vb
  name: ReadInt32s(Int32)
  nameWithType: IndexReader.ReadInt32s(Int32)
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadInt32s(System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ReadInt32s
    path: search/InvertedIndex/IndexReader.cs
    startLine: 209
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public int[] ReadInt32s(int count)
    content.vb: Public Function ReadInt32s(count As Integer) As Integer()
    parameters:
    - id: count
      type: System.Int32
      description: ''
    return:
      type: System.Int32[]
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexReader.ReadInt32s*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexReader.EnumerateInt32s(System.Int32)
  commentId: M:Microsoft.Health.InvertedIndex.IndexReader.EnumerateInt32s(System.Int32)
  id: EnumerateInt32s(System.Int32)
  parent: Microsoft.Health.InvertedIndex.IndexReader
  langs:
  - csharp
  - vb
  name: EnumerateInt32s(Int32)
  nameWithType: IndexReader.EnumerateInt32s(Int32)
  fullName: Microsoft.Health.InvertedIndex.IndexReader.EnumerateInt32s(System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: EnumerateInt32s
    path: search/InvertedIndex/IndexReader.cs
    startLine: 225
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public IEnumerable<int> EnumerateInt32s(int count)
    content.vb: Public Function EnumerateInt32s(count As Integer) As IEnumerable(Of Integer)
    parameters:
    - id: count
      type: System.Int32
      description: ''
    return:
      type: System.Collections.Generic.IEnumerable{System.Int32}
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexReader.EnumerateInt32s*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadUInt32
  commentId: M:Microsoft.Health.InvertedIndex.IndexReader.ReadUInt32
  id: ReadUInt32
  parent: Microsoft.Health.InvertedIndex.IndexReader
  langs:
  - csharp
  - vb
  name: ReadUInt32()
  nameWithType: IndexReader.ReadUInt32()
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadUInt32()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ReadUInt32
    path: search/InvertedIndex/IndexReader.cs
    startLine: 237
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public uint ReadUInt32()
    content.vb: Public Function ReadUInt32 As UInteger
    return:
      type: System.UInt32
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexReader.ReadUInt32*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadUInt32s(System.Int32)
  commentId: M:Microsoft.Health.InvertedIndex.IndexReader.ReadUInt32s(System.Int32)
  id: ReadUInt32s(System.Int32)
  parent: Microsoft.Health.InvertedIndex.IndexReader
  langs:
  - csharp
  - vb
  name: ReadUInt32s(Int32)
  nameWithType: IndexReader.ReadUInt32s(Int32)
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadUInt32s(System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ReadUInt32s
    path: search/InvertedIndex/IndexReader.cs
    startLine: 247
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public uint[] ReadUInt32s(int count)
    content.vb: Public Function ReadUInt32s(count As Integer) As UInteger()
    parameters:
    - id: count
      type: System.Int32
      description: ''
    return:
      type: System.UInt32[]
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexReader.ReadUInt32s*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexReader.EnumerateUInt32s(System.Int32)
  commentId: M:Microsoft.Health.InvertedIndex.IndexReader.EnumerateUInt32s(System.Int32)
  id: EnumerateUInt32s(System.Int32)
  parent: Microsoft.Health.InvertedIndex.IndexReader
  langs:
  - csharp
  - vb
  name: EnumerateUInt32s(Int32)
  nameWithType: IndexReader.EnumerateUInt32s(Int32)
  fullName: Microsoft.Health.InvertedIndex.IndexReader.EnumerateUInt32s(System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: EnumerateUInt32s
    path: search/InvertedIndex/IndexReader.cs
    startLine: 263
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public IEnumerable<uint> EnumerateUInt32s(int count)
    content.vb: Public Function EnumerateUInt32s(count As Integer) As IEnumerable(Of UInteger)
    parameters:
    - id: count
      type: System.Int32
      description: ''
    return:
      type: System.Collections.Generic.IEnumerable{System.UInt32}
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexReader.EnumerateUInt32s*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadFloat
  commentId: M:Microsoft.Health.InvertedIndex.IndexReader.ReadFloat
  id: ReadFloat
  parent: Microsoft.Health.InvertedIndex.IndexReader
  langs:
  - csharp
  - vb
  name: ReadFloat()
  nameWithType: IndexReader.ReadFloat()
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadFloat()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ReadFloat
    path: search/InvertedIndex/IndexReader.cs
    startLine: 275
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public float ReadFloat()
    content.vb: Public Function ReadFloat As Single
    return:
      type: System.Single
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexReader.ReadFloat*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadFloats(System.Int32)
  commentId: M:Microsoft.Health.InvertedIndex.IndexReader.ReadFloats(System.Int32)
  id: ReadFloats(System.Int32)
  parent: Microsoft.Health.InvertedIndex.IndexReader
  langs:
  - csharp
  - vb
  name: ReadFloats(Int32)
  nameWithType: IndexReader.ReadFloats(Int32)
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadFloats(System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ReadFloats
    path: search/InvertedIndex/IndexReader.cs
    startLine: 285
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public float[] ReadFloats(int count)
    content.vb: Public Function ReadFloats(count As Integer) As Single()
    parameters:
    - id: count
      type: System.Int32
      description: ''
    return:
      type: System.Single[]
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexReader.ReadFloats*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexReader.EnumerateFloats(System.Int32)
  commentId: M:Microsoft.Health.InvertedIndex.IndexReader.EnumerateFloats(System.Int32)
  id: EnumerateFloats(System.Int32)
  parent: Microsoft.Health.InvertedIndex.IndexReader
  langs:
  - csharp
  - vb
  name: EnumerateFloats(Int32)
  nameWithType: IndexReader.EnumerateFloats(Int32)
  fullName: Microsoft.Health.InvertedIndex.IndexReader.EnumerateFloats(System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: EnumerateFloats
    path: search/InvertedIndex/IndexReader.cs
    startLine: 301
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public IEnumerable<float> EnumerateFloats(int count)
    content.vb: Public Function EnumerateFloats(count As Integer) As IEnumerable(Of Single)
    parameters:
    - id: count
      type: System.Int32
      description: ''
    return:
      type: System.Collections.Generic.IEnumerable{System.Single}
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexReader.EnumerateFloats*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadArrayInt32
  commentId: M:Microsoft.Health.InvertedIndex.IndexReader.ReadArrayInt32
  id: ReadArrayInt32
  parent: Microsoft.Health.InvertedIndex.IndexReader
  langs:
  - csharp
  - vb
  name: ReadArrayInt32()
  nameWithType: IndexReader.ReadArrayInt32()
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadArrayInt32()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ReadArrayInt32
    path: search/InvertedIndex/IndexReader.cs
    startLine: 313
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public int[] ReadArrayInt32()
    content.vb: Public Function ReadArrayInt32 As Integer()
    return:
      type: System.Int32[]
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexReader.ReadArrayInt32*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexReader.EnumerateArrayInt32
  commentId: M:Microsoft.Health.InvertedIndex.IndexReader.EnumerateArrayInt32
  id: EnumerateArrayInt32
  parent: Microsoft.Health.InvertedIndex.IndexReader
  langs:
  - csharp
  - vb
  name: EnumerateArrayInt32()
  nameWithType: IndexReader.EnumerateArrayInt32()
  fullName: Microsoft.Health.InvertedIndex.IndexReader.EnumerateArrayInt32()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: EnumerateArrayInt32
    path: search/InvertedIndex/IndexReader.cs
    startLine: 322
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public IEnumerable<int> EnumerateArrayInt32()
    content.vb: Public Function EnumerateArrayInt32 As IEnumerable(Of Integer)
    return:
      type: System.Collections.Generic.IEnumerable{System.Int32}
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexReader.EnumerateArrayInt32*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadArrayUInt32
  commentId: M:Microsoft.Health.InvertedIndex.IndexReader.ReadArrayUInt32
  id: ReadArrayUInt32
  parent: Microsoft.Health.InvertedIndex.IndexReader
  langs:
  - csharp
  - vb
  name: ReadArrayUInt32()
  nameWithType: IndexReader.ReadArrayUInt32()
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadArrayUInt32()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ReadArrayUInt32
    path: search/InvertedIndex/IndexReader.cs
    startLine: 331
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public uint[] ReadArrayUInt32()
    content.vb: Public Function ReadArrayUInt32 As UInteger()
    return:
      type: System.UInt32[]
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexReader.ReadArrayUInt32*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexReader.EnumerateArrayUInt32
  commentId: M:Microsoft.Health.InvertedIndex.IndexReader.EnumerateArrayUInt32
  id: EnumerateArrayUInt32
  parent: Microsoft.Health.InvertedIndex.IndexReader
  langs:
  - csharp
  - vb
  name: EnumerateArrayUInt32()
  nameWithType: IndexReader.EnumerateArrayUInt32()
  fullName: Microsoft.Health.InvertedIndex.IndexReader.EnumerateArrayUInt32()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: EnumerateArrayUInt32
    path: search/InvertedIndex/IndexReader.cs
    startLine: 340
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public IEnumerable<uint> EnumerateArrayUInt32()
    content.vb: Public Function EnumerateArrayUInt32 As IEnumerable(Of UInteger)
    return:
      type: System.Collections.Generic.IEnumerable{System.UInt32}
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexReader.EnumerateArrayUInt32*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadArrayFloat
  commentId: M:Microsoft.Health.InvertedIndex.IndexReader.ReadArrayFloat
  id: ReadArrayFloat
  parent: Microsoft.Health.InvertedIndex.IndexReader
  langs:
  - csharp
  - vb
  name: ReadArrayFloat()
  nameWithType: IndexReader.ReadArrayFloat()
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadArrayFloat()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ReadArrayFloat
    path: search/InvertedIndex/IndexReader.cs
    startLine: 349
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public float[] ReadArrayFloat()
    content.vb: Public Function ReadArrayFloat As Single()
    return:
      type: System.Single[]
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexReader.ReadArrayFloat*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexReader.EnumerateArrayFloat
  commentId: M:Microsoft.Health.InvertedIndex.IndexReader.EnumerateArrayFloat
  id: EnumerateArrayFloat
  parent: Microsoft.Health.InvertedIndex.IndexReader
  langs:
  - csharp
  - vb
  name: EnumerateArrayFloat()
  nameWithType: IndexReader.EnumerateArrayFloat()
  fullName: Microsoft.Health.InvertedIndex.IndexReader.EnumerateArrayFloat()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: EnumerateArrayFloat
    path: search/InvertedIndex/IndexReader.cs
    startLine: 358
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public IEnumerable<float> EnumerateArrayFloat()
    content.vb: Public Function EnumerateArrayFloat As IEnumerable(Of Single)
    return:
      type: System.Collections.Generic.IEnumerable{System.Single}
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexReader.EnumerateArrayFloat*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadArrayString
  commentId: M:Microsoft.Health.InvertedIndex.IndexReader.ReadArrayString
  id: ReadArrayString
  parent: Microsoft.Health.InvertedIndex.IndexReader
  langs:
  - csharp
  - vb
  name: ReadArrayString()
  nameWithType: IndexReader.ReadArrayString()
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadArrayString()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ReadArrayString
    path: search/InvertedIndex/IndexReader.cs
    startLine: 367
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public string[] ReadArrayString()
    content.vb: Public Function ReadArrayString As String()
    return:
      type: System.String[]
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexReader.ReadArrayString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexReader.EnumerateArrayString
  commentId: M:Microsoft.Health.InvertedIndex.IndexReader.EnumerateArrayString
  id: EnumerateArrayString
  parent: Microsoft.Health.InvertedIndex.IndexReader
  langs:
  - csharp
  - vb
  name: EnumerateArrayString()
  nameWithType: IndexReader.EnumerateArrayString()
  fullName: Microsoft.Health.InvertedIndex.IndexReader.EnumerateArrayString()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: EnumerateArrayString
    path: search/InvertedIndex/IndexReader.cs
    startLine: 376
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public IEnumerable<string> EnumerateArrayString()
    content.vb: Public Function EnumerateArrayString As IEnumerable(Of String)
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexReader.EnumerateArrayString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadRecordID
  commentId: M:Microsoft.Health.InvertedIndex.IndexReader.ReadRecordID
  id: ReadRecordID
  parent: Microsoft.Health.InvertedIndex.IndexReader
  langs:
  - csharp
  - vb
  name: ReadRecordID()
  nameWithType: IndexReader.ReadRecordID()
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadRecordID()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ReadRecordID
    path: search/InvertedIndex/IndexReader.cs
    startLine: 385
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public uint ReadRecordID()
    content.vb: Public Function ReadRecordID As UInteger
    return:
      type: System.UInt32
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexReader.ReadRecordID*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadRecordIDs(System.Int32)
  commentId: M:Microsoft.Health.InvertedIndex.IndexReader.ReadRecordIDs(System.Int32)
  id: ReadRecordIDs(System.Int32)
  parent: Microsoft.Health.InvertedIndex.IndexReader
  langs:
  - csharp
  - vb
  name: ReadRecordIDs(Int32)
  nameWithType: IndexReader.ReadRecordIDs(Int32)
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadRecordIDs(System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ReadRecordIDs
    path: search/InvertedIndex/IndexReader.cs
    startLine: 395
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public uint[] ReadRecordIDs(int count)
    content.vb: Public Function ReadRecordIDs(count As Integer) As UInteger()
    parameters:
    - id: count
      type: System.Int32
      description: ''
    return:
      type: System.UInt32[]
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexReader.ReadRecordIDs*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexReader.EnumerateRecordIDs(System.Int32)
  commentId: M:Microsoft.Health.InvertedIndex.IndexReader.EnumerateRecordIDs(System.Int32)
  id: EnumerateRecordIDs(System.Int32)
  parent: Microsoft.Health.InvertedIndex.IndexReader
  langs:
  - csharp
  - vb
  name: EnumerateRecordIDs(Int32)
  nameWithType: IndexReader.EnumerateRecordIDs(Int32)
  fullName: Microsoft.Health.InvertedIndex.IndexReader.EnumerateRecordIDs(System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: EnumerateRecordIDs
    path: search/InvertedIndex/IndexReader.cs
    startLine: 405
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public IEnumerable<uint> EnumerateRecordIDs(int count)
    content.vb: Public Function EnumerateRecordIDs(count As Integer) As IEnumerable(Of UInteger)
    parameters:
    - id: count
      type: System.Int32
      description: ''
    return:
      type: System.Collections.Generic.IEnumerable{System.UInt32}
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexReader.EnumerateRecordIDs*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadPostingByte
  commentId: M:Microsoft.Health.InvertedIndex.IndexReader.ReadPostingByte
  id: ReadPostingByte
  parent: Microsoft.Health.InvertedIndex.IndexReader
  langs:
  - csharp
  - vb
  name: ReadPostingByte()
  nameWithType: IndexReader.ReadPostingByte()
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadPostingByte()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ReadPostingByte
    path: search/InvertedIndex/IndexReader.cs
    startLine: 414
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public Posting<byte> ReadPostingByte()
    content.vb: Public Function ReadPostingByte As Posting(Of Byte)
    return:
      type: Microsoft.Health.InvertedIndex.Posting{System.Byte}
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexReader.ReadPostingByte*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadPostingsByte
  commentId: M:Microsoft.Health.InvertedIndex.IndexReader.ReadPostingsByte
  id: ReadPostingsByte
  parent: Microsoft.Health.InvertedIndex.IndexReader
  langs:
  - csharp
  - vb
  name: ReadPostingsByte()
  nameWithType: IndexReader.ReadPostingsByte()
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadPostingsByte()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ReadPostingsByte
    path: search/InvertedIndex/IndexReader.cs
    startLine: 423
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public Posting<byte>[] ReadPostingsByte()
    content.vb: Public Function ReadPostingsByte As Posting(Of Byte)()
    return:
      type: Microsoft.Health.InvertedIndex.Posting{System.Byte}[]
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexReader.ReadPostingsByte*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexReader.EnumeratePostingsByte
  commentId: M:Microsoft.Health.InvertedIndex.IndexReader.EnumeratePostingsByte
  id: EnumeratePostingsByte
  parent: Microsoft.Health.InvertedIndex.IndexReader
  langs:
  - csharp
  - vb
  name: EnumeratePostingsByte()
  nameWithType: IndexReader.EnumeratePostingsByte()
  fullName: Microsoft.Health.InvertedIndex.IndexReader.EnumeratePostingsByte()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: EnumeratePostingsByte
    path: search/InvertedIndex/IndexReader.cs
    startLine: 439
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public IEnumerable<Posting<byte>> EnumeratePostingsByte()
    content.vb: Public Function EnumeratePostingsByte As IEnumerable(Of Posting(Of Byte))
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.Posting{System.Byte}}
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexReader.EnumeratePostingsByte*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexReader.EnumeratePostingsByte(System.Int32)
  commentId: M:Microsoft.Health.InvertedIndex.IndexReader.EnumeratePostingsByte(System.Int32)
  id: EnumeratePostingsByte(System.Int32)
  parent: Microsoft.Health.InvertedIndex.IndexReader
  langs:
  - csharp
  - vb
  name: EnumeratePostingsByte(Int32)
  nameWithType: IndexReader.EnumeratePostingsByte(Int32)
  fullName: Microsoft.Health.InvertedIndex.IndexReader.EnumeratePostingsByte(System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: EnumeratePostingsByte
    path: search/InvertedIndex/IndexReader.cs
    startLine: 450
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public IEnumerable<Posting<byte>> EnumeratePostingsByte(int length)
    content.vb: Public Function EnumeratePostingsByte(length As Integer) As IEnumerable(Of Posting(Of Byte))
    parameters:
    - id: length
      type: System.Int32
      description: ''
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.Posting{System.Byte}}
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexReader.EnumeratePostingsByte*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadPostingFloat
  commentId: M:Microsoft.Health.InvertedIndex.IndexReader.ReadPostingFloat
  id: ReadPostingFloat
  parent: Microsoft.Health.InvertedIndex.IndexReader
  langs:
  - csharp
  - vb
  name: ReadPostingFloat()
  nameWithType: IndexReader.ReadPostingFloat()
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadPostingFloat()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ReadPostingFloat
    path: search/InvertedIndex/IndexReader.cs
    startLine: 462
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public Posting<float> ReadPostingFloat()
    content.vb: Public Function ReadPostingFloat As Posting(Of Single)
    return:
      type: Microsoft.Health.InvertedIndex.Posting{System.Single}
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexReader.ReadPostingFloat*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadPostingsFloat
  commentId: M:Microsoft.Health.InvertedIndex.IndexReader.ReadPostingsFloat
  id: ReadPostingsFloat
  parent: Microsoft.Health.InvertedIndex.IndexReader
  langs:
  - csharp
  - vb
  name: ReadPostingsFloat()
  nameWithType: IndexReader.ReadPostingsFloat()
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadPostingsFloat()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ReadPostingsFloat
    path: search/InvertedIndex/IndexReader.cs
    startLine: 471
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public Posting<float>[] ReadPostingsFloat()
    content.vb: Public Function ReadPostingsFloat As Posting(Of Single)()
    return:
      type: Microsoft.Health.InvertedIndex.Posting{System.Single}[]
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexReader.ReadPostingsFloat*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexReader.EnumeratePostingsFloat
  commentId: M:Microsoft.Health.InvertedIndex.IndexReader.EnumeratePostingsFloat
  id: EnumeratePostingsFloat
  parent: Microsoft.Health.InvertedIndex.IndexReader
  langs:
  - csharp
  - vb
  name: EnumeratePostingsFloat()
  nameWithType: IndexReader.EnumeratePostingsFloat()
  fullName: Microsoft.Health.InvertedIndex.IndexReader.EnumeratePostingsFloat()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: EnumeratePostingsFloat
    path: search/InvertedIndex/IndexReader.cs
    startLine: 487
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public IEnumerable<Posting<float>> EnumeratePostingsFloat()
    content.vb: Public Function EnumeratePostingsFloat As IEnumerable(Of Posting(Of Single))
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.Posting{System.Single}}
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexReader.EnumeratePostingsFloat*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexReader.EnumeratePostingsFloat(System.Int32)
  commentId: M:Microsoft.Health.InvertedIndex.IndexReader.EnumeratePostingsFloat(System.Int32)
  id: EnumeratePostingsFloat(System.Int32)
  parent: Microsoft.Health.InvertedIndex.IndexReader
  langs:
  - csharp
  - vb
  name: EnumeratePostingsFloat(Int32)
  nameWithType: IndexReader.EnumeratePostingsFloat(Int32)
  fullName: Microsoft.Health.InvertedIndex.IndexReader.EnumeratePostingsFloat(System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: EnumeratePostingsFloat
    path: search/InvertedIndex/IndexReader.cs
    startLine: 498
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public IEnumerable<Posting<float>> EnumeratePostingsFloat(int length)
    content.vb: Public Function EnumeratePostingsFloat(length As Integer) As IEnumerable(Of Posting(Of Single))
    parameters:
    - id: length
      type: System.Int32
      description: ''
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.Posting{System.Single}}
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexReader.EnumeratePostingsFloat*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadPostingInt32
  commentId: M:Microsoft.Health.InvertedIndex.IndexReader.ReadPostingInt32
  id: ReadPostingInt32
  parent: Microsoft.Health.InvertedIndex.IndexReader
  langs:
  - csharp
  - vb
  name: ReadPostingInt32()
  nameWithType: IndexReader.ReadPostingInt32()
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadPostingInt32()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ReadPostingInt32
    path: search/InvertedIndex/IndexReader.cs
    startLine: 510
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public Posting<int> ReadPostingInt32()
    content.vb: Public Function ReadPostingInt32 As Posting(Of Integer)
    return:
      type: Microsoft.Health.InvertedIndex.Posting{System.Int32}
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexReader.ReadPostingInt32*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadPostingsInt32
  commentId: M:Microsoft.Health.InvertedIndex.IndexReader.ReadPostingsInt32
  id: ReadPostingsInt32
  parent: Microsoft.Health.InvertedIndex.IndexReader
  langs:
  - csharp
  - vb
  name: ReadPostingsInt32()
  nameWithType: IndexReader.ReadPostingsInt32()
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadPostingsInt32()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ReadPostingsInt32
    path: search/InvertedIndex/IndexReader.cs
    startLine: 519
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public Posting<int>[] ReadPostingsInt32()
    content.vb: Public Function ReadPostingsInt32 As Posting(Of Integer)()
    return:
      type: Microsoft.Health.InvertedIndex.Posting{System.Int32}[]
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexReader.ReadPostingsInt32*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexReader.EnumeratePostingsInt32
  commentId: M:Microsoft.Health.InvertedIndex.IndexReader.EnumeratePostingsInt32
  id: EnumeratePostingsInt32
  parent: Microsoft.Health.InvertedIndex.IndexReader
  langs:
  - csharp
  - vb
  name: EnumeratePostingsInt32()
  nameWithType: IndexReader.EnumeratePostingsInt32()
  fullName: Microsoft.Health.InvertedIndex.IndexReader.EnumeratePostingsInt32()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: EnumeratePostingsInt32
    path: search/InvertedIndex/IndexReader.cs
    startLine: 535
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public IEnumerable<Posting<int>> EnumeratePostingsInt32()
    content.vb: Public Function EnumeratePostingsInt32 As IEnumerable(Of Posting(Of Integer))
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.Posting{System.Int32}}
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexReader.EnumeratePostingsInt32*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexReader.EnumeratePostingsInt32(System.Int32)
  commentId: M:Microsoft.Health.InvertedIndex.IndexReader.EnumeratePostingsInt32(System.Int32)
  id: EnumeratePostingsInt32(System.Int32)
  parent: Microsoft.Health.InvertedIndex.IndexReader
  langs:
  - csharp
  - vb
  name: EnumeratePostingsInt32(Int32)
  nameWithType: IndexReader.EnumeratePostingsInt32(Int32)
  fullName: Microsoft.Health.InvertedIndex.IndexReader.EnumeratePostingsInt32(System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: EnumeratePostingsInt32
    path: search/InvertedIndex/IndexReader.cs
    startLine: 546
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public IEnumerable<Posting<int>> EnumeratePostingsInt32(int length)
    content.vb: Public Function EnumeratePostingsInt32(length As Integer) As IEnumerable(Of Posting(Of Integer))
    parameters:
    - id: length
      type: System.Int32
      description: ''
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.Posting{System.Int32}}
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexReader.EnumeratePostingsInt32*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadRecordList
  commentId: M:Microsoft.Health.InvertedIndex.IndexReader.ReadRecordList
  id: ReadRecordList
  parent: Microsoft.Health.InvertedIndex.IndexReader
  langs:
  - csharp
  - vb
  name: ReadRecordList()
  nameWithType: IndexReader.ReadRecordList()
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadRecordList()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ReadRecordList
    path: search/InvertedIndex/IndexReader.cs
    startLine: 558
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public IRecordIDList ReadRecordList()
    content.vb: Public Function ReadRecordList As IRecordIDList
    return:
      type: Microsoft.Health.InvertedIndex.IRecordIDList
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexReader.ReadRecordList*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadRecordPropertyList``1
  commentId: M:Microsoft.Health.InvertedIndex.IndexReader.ReadRecordPropertyList``1
  id: ReadRecordPropertyList``1
  parent: Microsoft.Health.InvertedIndex.IndexReader
  langs:
  - csharp
  - vb
  name: ReadRecordPropertyList<T>()
  nameWithType: IndexReader.ReadRecordPropertyList<T>()
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadRecordPropertyList<T>()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexReader.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ReadRecordPropertyList
    path: search/InvertedIndex/IndexReader.cs
    startLine: 568
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public IRecordPropertyList<T> ReadRecordPropertyList<T>()
    content.vb: Public Function ReadRecordPropertyList(Of T) As IRecordPropertyList(Of T)
    typeParameters:
    - id: T
      description: ''
    return:
      type: Microsoft.Health.InvertedIndex.IRecordPropertyList{{T}}
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexReader.ReadRecordPropertyList*
  nameWithType.vb: IndexReader.ReadRecordPropertyList(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.IndexReader.ReadRecordPropertyList(Of T)()
  name.vb: ReadRecordPropertyList(Of T)()
references:
- uid: Microsoft.Health.InvertedIndex
  commentId: N:Microsoft.Health.InvertedIndex
  isExternal: false
  name: Microsoft.Health.InvertedIndex
  nameWithType: Microsoft.Health.InvertedIndex
  fullName: Microsoft.Health.InvertedIndex
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.IndexReader.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<IndexReader>()
  nameWithType: TypeHelper.ValueOrDbNull<IndexReader>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.InvertedIndex.IndexReader>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of IndexReader)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.InvertedIndex.IndexReader)()
  name.vb: ValueOrDbNull(Of IndexReader)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<IndexReader>
    nameWithType: TypeHelper.ValueOrDbNull<IndexReader>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.InvertedIndex.IndexReader>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of IndexReader)
    nameWithType: TypeHelper.ValueOrDbNull(Of IndexReader)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.InvertedIndex.IndexReader)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.InvertedIndex.IndexReader.#ctor*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexReader.#ctor
  isExternal: false
  name: IndexReader
  nameWithType: IndexReader.IndexReader
  fullName: Microsoft.Health.InvertedIndex.IndexReader.IndexReader
- uid: System.IO.BinaryReader
  commentId: T:System.IO.BinaryReader
  parent: System.IO
  isExternal: true
  name: BinaryReader
  nameWithType: BinaryReader
  fullName: System.IO.BinaryReader
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Microsoft.Health.InvertedIndex.IndexReader.Reader*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexReader.Reader
  isExternal: false
  name: Reader
  nameWithType: IndexReader.Reader
  fullName: Microsoft.Health.InvertedIndex.IndexReader.Reader
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadToken*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexReader.ReadToken
  isExternal: false
  name: ReadToken
  nameWithType: IndexReader.ReadToken
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadToken
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.InvertedIndex.IndexReader.EnsureToken*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexReader.EnsureToken
  isExternal: false
  name: EnsureToken
  nameWithType: IndexReader.EnsureToken
  fullName: Microsoft.Health.InvertedIndex.IndexReader.EnsureToken
- uid: Microsoft.Health.InvertedIndex.IndexReader.ThrowInvalidToken*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexReader.ThrowInvalidToken
  isExternal: false
  name: ThrowInvalidToken
  nameWithType: IndexReader.ThrowInvalidToken
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ThrowInvalidToken
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadVersion*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexReader.ReadVersion
  isExternal: false
  name: ReadVersion
  nameWithType: IndexReader.ReadVersion
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadVersion
- uid: Microsoft.Health.InvertedIndex.IndexReader.EnsureVersion*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexReader.EnsureVersion
  isExternal: false
  name: EnsureVersion
  nameWithType: IndexReader.EnsureVersion
  fullName: Microsoft.Health.InvertedIndex.IndexReader.EnsureVersion
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadCollectionLength*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexReader.ReadCollectionLength
  isExternal: false
  name: ReadCollectionLength
  nameWithType: IndexReader.ReadCollectionLength
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadCollectionLength
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadCollectionHeader*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexReader.ReadCollectionHeader
  isExternal: false
  name: ReadCollectionHeader
  nameWithType: IndexReader.ReadCollectionHeader
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadCollectionHeader
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadString*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexReader.ReadString
  isExternal: false
  name: ReadString
  nameWithType: IndexReader.ReadString
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadString
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadStrings*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexReader.ReadStrings
  isExternal: false
  name: ReadStrings
  nameWithType: IndexReader.ReadStrings
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadStrings
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.Health.InvertedIndex.IndexReader.EnumerateStrings*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexReader.EnumerateStrings
  isExternal: false
  name: EnumerateStrings
  nameWithType: IndexReader.EnumerateStrings
  fullName: Microsoft.Health.InvertedIndex.IndexReader.EnumerateStrings
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadByte*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexReader.ReadByte
  isExternal: false
  name: ReadByte
  nameWithType: IndexReader.ReadByte
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadByte
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadBytes*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexReader.ReadBytes
  isExternal: false
  name: ReadBytes
  nameWithType: IndexReader.ReadBytes
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadBytes
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.Health.InvertedIndex.IndexReader.EnumerateBytes*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexReader.EnumerateBytes
  isExternal: false
  name: EnumerateBytes
  nameWithType: IndexReader.EnumerateBytes
  fullName: Microsoft.Health.InvertedIndex.IndexReader.EnumerateBytes
- uid: System.Collections.Generic.IEnumerable{System.Byte}
  commentId: T:System.Collections.Generic.IEnumerable{System.Byte}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Byte>
  nameWithType: IEnumerable<Byte>
  fullName: System.Collections.Generic.IEnumerable<System.Byte>
  nameWithType.vb: IEnumerable(Of Byte)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Byte)
  name.vb: IEnumerable(Of Byte)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadInt32*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexReader.ReadInt32
  isExternal: false
  name: ReadInt32
  nameWithType: IndexReader.ReadInt32
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadInt32
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadInt32s*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexReader.ReadInt32s
  isExternal: false
  name: ReadInt32s
  nameWithType: IndexReader.ReadInt32s
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadInt32s
- uid: System.Int32[]
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.Health.InvertedIndex.IndexReader.EnumerateInt32s*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexReader.EnumerateInt32s
  isExternal: false
  name: EnumerateInt32s
  nameWithType: IndexReader.EnumerateInt32s
  fullName: Microsoft.Health.InvertedIndex.IndexReader.EnumerateInt32s
- uid: System.Collections.Generic.IEnumerable{System.Int32}
  commentId: T:System.Collections.Generic.IEnumerable{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Int32>
  nameWithType: IEnumerable<Int32>
  fullName: System.Collections.Generic.IEnumerable<System.Int32>
  nameWithType.vb: IEnumerable(Of Int32)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Int32)
  name.vb: IEnumerable(Of Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadUInt32*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexReader.ReadUInt32
  isExternal: false
  name: ReadUInt32
  nameWithType: IndexReader.ReadUInt32
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadUInt32
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadUInt32s*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexReader.ReadUInt32s
  isExternal: false
  name: ReadUInt32s
  nameWithType: IndexReader.ReadUInt32s
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadUInt32s
- uid: System.UInt32[]
  name: UInt32[]
  nameWithType: UInt32[]
  fullName: System.UInt32[]
  nameWithType.vb: UInt32()
  fullName.vb: System.UInt32()
  name.vb: UInt32()
  spec.csharp:
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.Health.InvertedIndex.IndexReader.EnumerateUInt32s*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexReader.EnumerateUInt32s
  isExternal: false
  name: EnumerateUInt32s
  nameWithType: IndexReader.EnumerateUInt32s
  fullName: Microsoft.Health.InvertedIndex.IndexReader.EnumerateUInt32s
- uid: System.Collections.Generic.IEnumerable{System.UInt32}
  commentId: T:System.Collections.Generic.IEnumerable{System.UInt32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<UInt32>
  nameWithType: IEnumerable<UInt32>
  fullName: System.Collections.Generic.IEnumerable<System.UInt32>
  nameWithType.vb: IEnumerable(Of UInt32)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.UInt32)
  name.vb: IEnumerable(Of UInt32)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadFloat*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexReader.ReadFloat
  isExternal: false
  name: ReadFloat
  nameWithType: IndexReader.ReadFloat
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadFloat
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadFloats*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexReader.ReadFloats
  isExternal: false
  name: ReadFloats
  nameWithType: IndexReader.ReadFloats
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadFloats
- uid: System.Single[]
  name: Single[]
  nameWithType: Single[]
  fullName: System.Single[]
  nameWithType.vb: Single()
  fullName.vb: System.Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.Health.InvertedIndex.IndexReader.EnumerateFloats*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexReader.EnumerateFloats
  isExternal: false
  name: EnumerateFloats
  nameWithType: IndexReader.EnumerateFloats
  fullName: Microsoft.Health.InvertedIndex.IndexReader.EnumerateFloats
- uid: System.Collections.Generic.IEnumerable{System.Single}
  commentId: T:System.Collections.Generic.IEnumerable{System.Single}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Single>
  nameWithType: IEnumerable<Single>
  fullName: System.Collections.Generic.IEnumerable<System.Single>
  nameWithType.vb: IEnumerable(Of Single)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Single)
  name.vb: IEnumerable(Of Single)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadArrayInt32*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexReader.ReadArrayInt32
  isExternal: false
  name: ReadArrayInt32
  nameWithType: IndexReader.ReadArrayInt32
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadArrayInt32
- uid: Microsoft.Health.InvertedIndex.IndexReader.EnumerateArrayInt32*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexReader.EnumerateArrayInt32
  isExternal: false
  name: EnumerateArrayInt32
  nameWithType: IndexReader.EnumerateArrayInt32
  fullName: Microsoft.Health.InvertedIndex.IndexReader.EnumerateArrayInt32
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadArrayUInt32*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexReader.ReadArrayUInt32
  isExternal: false
  name: ReadArrayUInt32
  nameWithType: IndexReader.ReadArrayUInt32
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadArrayUInt32
- uid: Microsoft.Health.InvertedIndex.IndexReader.EnumerateArrayUInt32*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexReader.EnumerateArrayUInt32
  isExternal: false
  name: EnumerateArrayUInt32
  nameWithType: IndexReader.EnumerateArrayUInt32
  fullName: Microsoft.Health.InvertedIndex.IndexReader.EnumerateArrayUInt32
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadArrayFloat*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexReader.ReadArrayFloat
  isExternal: false
  name: ReadArrayFloat
  nameWithType: IndexReader.ReadArrayFloat
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadArrayFloat
- uid: Microsoft.Health.InvertedIndex.IndexReader.EnumerateArrayFloat*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexReader.EnumerateArrayFloat
  isExternal: false
  name: EnumerateArrayFloat
  nameWithType: IndexReader.EnumerateArrayFloat
  fullName: Microsoft.Health.InvertedIndex.IndexReader.EnumerateArrayFloat
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadArrayString*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexReader.ReadArrayString
  isExternal: false
  name: ReadArrayString
  nameWithType: IndexReader.ReadArrayString
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadArrayString
- uid: Microsoft.Health.InvertedIndex.IndexReader.EnumerateArrayString*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexReader.EnumerateArrayString
  isExternal: false
  name: EnumerateArrayString
  nameWithType: IndexReader.EnumerateArrayString
  fullName: Microsoft.Health.InvertedIndex.IndexReader.EnumerateArrayString
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadRecordID*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexReader.ReadRecordID
  isExternal: false
  name: ReadRecordID
  nameWithType: IndexReader.ReadRecordID
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadRecordID
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadRecordIDs*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexReader.ReadRecordIDs
  isExternal: false
  name: ReadRecordIDs
  nameWithType: IndexReader.ReadRecordIDs
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadRecordIDs
- uid: Microsoft.Health.InvertedIndex.IndexReader.EnumerateRecordIDs*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexReader.EnumerateRecordIDs
  isExternal: false
  name: EnumerateRecordIDs
  nameWithType: IndexReader.EnumerateRecordIDs
  fullName: Microsoft.Health.InvertedIndex.IndexReader.EnumerateRecordIDs
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadPostingByte*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexReader.ReadPostingByte
  isExternal: false
  name: ReadPostingByte
  nameWithType: IndexReader.ReadPostingByte
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadPostingByte
- uid: Microsoft.Health.InvertedIndex.Posting{System.Byte}
  commentId: T:Microsoft.Health.InvertedIndex.Posting{System.Byte}
  parent: Microsoft.Health.InvertedIndex
  definition: Microsoft.Health.InvertedIndex.Posting`1
  name: Posting<Byte>
  nameWithType: Posting<Byte>
  fullName: Microsoft.Health.InvertedIndex.Posting<System.Byte>
  nameWithType.vb: Posting(Of Byte)
  fullName.vb: Microsoft.Health.InvertedIndex.Posting(Of System.Byte)
  name.vb: Posting(Of Byte)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.Posting`1
  commentId: T:Microsoft.Health.InvertedIndex.Posting`1
  parent: Microsoft.Health.InvertedIndex
  isExternal: false
  name: Posting<T>
  nameWithType: Posting<T>
  fullName: Microsoft.Health.InvertedIndex.Posting<T>
  nameWithType.vb: Posting(Of T)
  fullName.vb: Microsoft.Health.InvertedIndex.Posting(Of T)
  name.vb: Posting(Of T)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadPostingsByte*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexReader.ReadPostingsByte
  isExternal: false
  name: ReadPostingsByte
  nameWithType: IndexReader.ReadPostingsByte
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadPostingsByte
- uid: Microsoft.Health.InvertedIndex.Posting{System.Byte}[]
  name: Posting<Byte>[]
  nameWithType: Posting<Byte>[]
  fullName: Microsoft.Health.InvertedIndex.Posting<System.Byte>[]
  nameWithType.vb: Posting(Of Byte)()
  fullName.vb: Microsoft.Health.InvertedIndex.Posting(Of System.Byte)()
  name.vb: Posting(Of Byte)()
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.Health.InvertedIndex.IndexReader.EnumeratePostingsByte*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexReader.EnumeratePostingsByte
  isExternal: false
  name: EnumeratePostingsByte
  nameWithType: IndexReader.EnumeratePostingsByte
  fullName: Microsoft.Health.InvertedIndex.IndexReader.EnumeratePostingsByte
- uid: System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.Posting{System.Byte}}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.Posting{System.Byte}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Posting<Byte>>
  nameWithType: IEnumerable<Posting<Byte>>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Health.InvertedIndex.Posting<System.Byte>>
  nameWithType.vb: IEnumerable(Of Posting(Of Byte))
  fullName.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Health.InvertedIndex.Posting(Of System.Byte))
  name.vb: IEnumerable(Of Posting(Of Byte))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadPostingFloat*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexReader.ReadPostingFloat
  isExternal: false
  name: ReadPostingFloat
  nameWithType: IndexReader.ReadPostingFloat
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadPostingFloat
- uid: Microsoft.Health.InvertedIndex.Posting{System.Single}
  commentId: T:Microsoft.Health.InvertedIndex.Posting{System.Single}
  parent: Microsoft.Health.InvertedIndex
  definition: Microsoft.Health.InvertedIndex.Posting`1
  name: Posting<Single>
  nameWithType: Posting<Single>
  fullName: Microsoft.Health.InvertedIndex.Posting<System.Single>
  nameWithType.vb: Posting(Of Single)
  fullName.vb: Microsoft.Health.InvertedIndex.Posting(Of System.Single)
  name.vb: Posting(Of Single)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadPostingsFloat*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexReader.ReadPostingsFloat
  isExternal: false
  name: ReadPostingsFloat
  nameWithType: IndexReader.ReadPostingsFloat
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadPostingsFloat
- uid: Microsoft.Health.InvertedIndex.Posting{System.Single}[]
  name: Posting<Single>[]
  nameWithType: Posting<Single>[]
  fullName: Microsoft.Health.InvertedIndex.Posting<System.Single>[]
  nameWithType.vb: Posting(Of Single)()
  fullName.vb: Microsoft.Health.InvertedIndex.Posting(Of System.Single)()
  name.vb: Posting(Of Single)()
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.Health.InvertedIndex.IndexReader.EnumeratePostingsFloat*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexReader.EnumeratePostingsFloat
  isExternal: false
  name: EnumeratePostingsFloat
  nameWithType: IndexReader.EnumeratePostingsFloat
  fullName: Microsoft.Health.InvertedIndex.IndexReader.EnumeratePostingsFloat
- uid: System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.Posting{System.Single}}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.Posting{System.Single}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Posting<Single>>
  nameWithType: IEnumerable<Posting<Single>>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Health.InvertedIndex.Posting<System.Single>>
  nameWithType.vb: IEnumerable(Of Posting(Of Single))
  fullName.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Health.InvertedIndex.Posting(Of System.Single))
  name.vb: IEnumerable(Of Posting(Of Single))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadPostingInt32*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexReader.ReadPostingInt32
  isExternal: false
  name: ReadPostingInt32
  nameWithType: IndexReader.ReadPostingInt32
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadPostingInt32
- uid: Microsoft.Health.InvertedIndex.Posting{System.Int32}
  commentId: T:Microsoft.Health.InvertedIndex.Posting{System.Int32}
  parent: Microsoft.Health.InvertedIndex
  definition: Microsoft.Health.InvertedIndex.Posting`1
  name: Posting<Int32>
  nameWithType: Posting<Int32>
  fullName: Microsoft.Health.InvertedIndex.Posting<System.Int32>
  nameWithType.vb: Posting(Of Int32)
  fullName.vb: Microsoft.Health.InvertedIndex.Posting(Of System.Int32)
  name.vb: Posting(Of Int32)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadPostingsInt32*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexReader.ReadPostingsInt32
  isExternal: false
  name: ReadPostingsInt32
  nameWithType: IndexReader.ReadPostingsInt32
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadPostingsInt32
- uid: Microsoft.Health.InvertedIndex.Posting{System.Int32}[]
  name: Posting<Int32>[]
  nameWithType: Posting<Int32>[]
  fullName: Microsoft.Health.InvertedIndex.Posting<System.Int32>[]
  nameWithType.vb: Posting(Of Int32)()
  fullName.vb: Microsoft.Health.InvertedIndex.Posting(Of System.Int32)()
  name.vb: Posting(Of Int32)()
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.Health.InvertedIndex.IndexReader.EnumeratePostingsInt32*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexReader.EnumeratePostingsInt32
  isExternal: false
  name: EnumeratePostingsInt32
  nameWithType: IndexReader.EnumeratePostingsInt32
  fullName: Microsoft.Health.InvertedIndex.IndexReader.EnumeratePostingsInt32
- uid: System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.Posting{System.Int32}}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.Posting{System.Int32}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Posting<Int32>>
  nameWithType: IEnumerable<Posting<Int32>>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Health.InvertedIndex.Posting<System.Int32>>
  nameWithType.vb: IEnumerable(Of Posting(Of Int32))
  fullName.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Health.InvertedIndex.Posting(Of System.Int32))
  name.vb: IEnumerable(Of Posting(Of Int32))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadRecordList*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexReader.ReadRecordList
  isExternal: false
  name: ReadRecordList
  nameWithType: IndexReader.ReadRecordList
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadRecordList
- uid: Microsoft.Health.InvertedIndex.IRecordIDList
  commentId: T:Microsoft.Health.InvertedIndex.IRecordIDList
  parent: Microsoft.Health.InvertedIndex
  isExternal: false
  name: IRecordIDList
  nameWithType: IRecordIDList
  fullName: Microsoft.Health.InvertedIndex.IRecordIDList
- uid: Microsoft.Health.InvertedIndex.IndexReader.ReadRecordPropertyList*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexReader.ReadRecordPropertyList
  isExternal: false
  name: ReadRecordPropertyList
  nameWithType: IndexReader.ReadRecordPropertyList
  fullName: Microsoft.Health.InvertedIndex.IndexReader.ReadRecordPropertyList
- uid: Microsoft.Health.InvertedIndex.IRecordPropertyList{{T}}
  commentId: T:Microsoft.Health.InvertedIndex.IRecordPropertyList{`0}
  parent: Microsoft.Health.InvertedIndex
  definition: Microsoft.Health.InvertedIndex.IRecordPropertyList`1
  name: IRecordPropertyList<T>
  nameWithType: IRecordPropertyList<T>
  fullName: Microsoft.Health.InvertedIndex.IRecordPropertyList<T>
  nameWithType.vb: IRecordPropertyList(Of T)
  fullName.vb: Microsoft.Health.InvertedIndex.IRecordPropertyList(Of T)
  name.vb: IRecordPropertyList(Of T)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.IRecordPropertyList`1
    name: IRecordPropertyList
    nameWithType: IRecordPropertyList
    fullName: Microsoft.Health.InvertedIndex.IRecordPropertyList
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.IRecordPropertyList`1
    name: IRecordPropertyList
    nameWithType: IRecordPropertyList
    fullName: Microsoft.Health.InvertedIndex.IRecordPropertyList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.IRecordPropertyList`1
  commentId: T:Microsoft.Health.InvertedIndex.IRecordPropertyList`1
  isExternal: false
  name: IRecordPropertyList<T>
  nameWithType: IRecordPropertyList<T>
  fullName: Microsoft.Health.InvertedIndex.IRecordPropertyList<T>
  nameWithType.vb: IRecordPropertyList(Of T)
  fullName.vb: Microsoft.Health.InvertedIndex.IRecordPropertyList(Of T)
  name.vb: IRecordPropertyList(Of T)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.IRecordPropertyList`1
    name: IRecordPropertyList
    nameWithType: IRecordPropertyList
    fullName: Microsoft.Health.InvertedIndex.IRecordPropertyList
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.IRecordPropertyList`1
    name: IRecordPropertyList
    nameWithType: IRecordPropertyList
    fullName: Microsoft.Health.InvertedIndex.IRecordPropertyList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
