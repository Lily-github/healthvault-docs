### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Caching.DemandCacheableWithFileDependency`1
  commentId: T:Microsoft.Health.Caching.DemandCacheableWithFileDependency`1
  id: DemandCacheableWithFileDependency`1
  parent: Microsoft.Health.Caching
  children:
  - Microsoft.Health.Caching.DemandCacheableWithFileDependency`1.#ctor(System.Func{System.String,`0},System.String)
  - Microsoft.Health.Caching.DemandCacheableWithFileDependency`1.#ctor(System.Func{System.String,`0},System.String,System.String)
  - Microsoft.Health.Caching.DemandCacheableWithFileDependency`1.#ctor(System.Func{System.String,`0},System.String,System.String[])
  - Microsoft.Health.Caching.DemandCacheableWithFileDependency`1.#ctor(System.Func{System.String,`0},System.String[])
  - Microsoft.Health.Caching.DemandCacheableWithFileDependency`1.OnLoaded(`0)
  langs:
  - csharp
  - vb
  name: DemandCacheableWithFileDependency<T>
  nameWithType: DemandCacheableWithFileDependency<T>
  fullName: Microsoft.Health.Caching.DemandCacheableWithFileDependency<T>
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/search/Cache/DemandLoadable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DemandCacheableWithFileDependency
    path: search/Cache/DemandLoadable.cs
    startLine: 406
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Caching
  summary: "\nCache helper for things with file dependency.\n"
  example: []
  syntax:
    content: 'public class DemandCacheableWithFileDependency<T> : DemandCacheable<T>, IDemandLoadable where T : class'
    content.vb: >-
      Public Class DemandCacheableWithFileDependency(Of T As Class)
          Inherits DemandCacheable(Of T)
          Implements IDemandLoadable
    typeParameters:
    - id: T
  inheritance:
  - System.Object
  - Microsoft.Health.Caching.DemandLoadable{System.String,{T}}
  - Microsoft.Health.Caching.DemandCacheable{{T}}
  implements:
  - Microsoft.Health.Caching.IDemandLoadable
  inheritedMembers:
  - Microsoft.Health.Caching.DemandCacheable{{T}}.CacheItemRemovedCallback
  - Microsoft.Health.Caching.DemandCacheable{{T}}.OnUnload({T})
  - Microsoft.Health.Caching.DemandLoadable{System.String,{T}}.Loaded
  - Microsoft.Health.Caching.DemandLoadable{System.String,{T}}.Key
  - Microsoft.Health.Caching.DemandLoadable{System.String,{T}}.Value
  - Microsoft.Health.Caching.DemandLoadable{System.String,{T}}.HasValue
  - Microsoft.Health.Caching.DemandLoadable{System.String,{T}}.Load(System.Boolean)
  - Microsoft.Health.Caching.DemandLoadable{System.String,{T}}.Unload
  - Microsoft.Health.Caching.DemandLoadable{System.String,{T}}.TryExpire(System.TimeSpan,System.DateTime@)
  - Microsoft.Health.Caching.DemandLoadable{System.String,{T}}.OnLoading
  - Microsoft.Health.Caching.DemandLoadable{System.String,{T}}.OnLoaded({T})
  - Microsoft.Health.Caching.DemandLoadable{System.String,{T}}.OnUnload({T})
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.Caching.DemandCacheableWithFileDependency`1.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  nameWithType.vb: DemandCacheableWithFileDependency(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.Health.Caching.DemandCacheableWithFileDependency(Of T)
  name.vb: DemandCacheableWithFileDependency(Of T)
- uid: Microsoft.Health.Caching.DemandCacheableWithFileDependency`1.#ctor(System.Func{System.String,`0},System.String)
  commentId: M:Microsoft.Health.Caching.DemandCacheableWithFileDependency`1.#ctor(System.Func{System.String,`0},System.String)
  id: '#ctor(System.Func{System.String,`0},System.String)'
  parent: Microsoft.Health.Caching.DemandCacheableWithFileDependency`1
  langs:
  - csharp
  - vb
  name: DemandCacheableWithFileDependency(Func<String, T>, String)
  nameWithType: DemandCacheableWithFileDependency<T>.DemandCacheableWithFileDependency(Func<String, T>, String)
  fullName: Microsoft.Health.Caching.DemandCacheableWithFileDependency<T>.DemandCacheableWithFileDependency(System.Func<System.String, T>, System.String)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/Cache/DemandLoadable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: search/Cache/DemandLoadable.cs
    startLine: 413
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Caching
  summary: "\n"
  example: []
  syntax:
    content: public DemandCacheableWithFileDependency(Func<string, T> loader, string dependencyPath)
    content.vb: Public Sub New(loader As Func(Of String, T), dependencyPath As String)
    parameters:
    - id: loader
      type: System.Func{System.String,{T}}
    - id: dependencyPath
      type: System.String
  overload: Microsoft.Health.Caching.DemandCacheableWithFileDependency`1.#ctor*
  nameWithType.vb: DemandCacheableWithFileDependency(Of T).DemandCacheableWithFileDependency(Func(Of String, T), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Caching.DemandCacheableWithFileDependency(Of T).DemandCacheableWithFileDependency(System.Func(Of System.String, T), System.String)
  name.vb: DemandCacheableWithFileDependency(Func(Of String, T), String)
- uid: Microsoft.Health.Caching.DemandCacheableWithFileDependency`1.#ctor(System.Func{System.String,`0},System.String[])
  commentId: M:Microsoft.Health.Caching.DemandCacheableWithFileDependency`1.#ctor(System.Func{System.String,`0},System.String[])
  id: '#ctor(System.Func{System.String,`0},System.String[])'
  parent: Microsoft.Health.Caching.DemandCacheableWithFileDependency`1
  langs:
  - csharp
  - vb
  name: DemandCacheableWithFileDependency(Func<String, T>, String[])
  nameWithType: DemandCacheableWithFileDependency<T>.DemandCacheableWithFileDependency(Func<String, T>, String[])
  fullName: Microsoft.Health.Caching.DemandCacheableWithFileDependency<T>.DemandCacheableWithFileDependency(System.Func<System.String, T>, System.String[])
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/Cache/DemandLoadable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: search/Cache/DemandLoadable.cs
    startLine: 418
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Caching
  summary: "\n"
  example: []
  syntax:
    content: public DemandCacheableWithFileDependency(Func<string, T> loader, string[] dependencyPaths)
    content.vb: Public Sub New(loader As Func(Of String, T), dependencyPaths As String())
    parameters:
    - id: loader
      type: System.Func{System.String,{T}}
    - id: dependencyPaths
      type: System.String[]
  overload: Microsoft.Health.Caching.DemandCacheableWithFileDependency`1.#ctor*
  nameWithType.vb: DemandCacheableWithFileDependency(Of T).DemandCacheableWithFileDependency(Func(Of String, T), String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Caching.DemandCacheableWithFileDependency(Of T).DemandCacheableWithFileDependency(System.Func(Of System.String, T), System.String())
  name.vb: DemandCacheableWithFileDependency(Func(Of String, T), String())
- uid: Microsoft.Health.Caching.DemandCacheableWithFileDependency`1.#ctor(System.Func{System.String,`0},System.String,System.String)
  commentId: M:Microsoft.Health.Caching.DemandCacheableWithFileDependency`1.#ctor(System.Func{System.String,`0},System.String,System.String)
  id: '#ctor(System.Func{System.String,`0},System.String,System.String)'
  parent: Microsoft.Health.Caching.DemandCacheableWithFileDependency`1
  langs:
  - csharp
  - vb
  name: DemandCacheableWithFileDependency(Func<String, T>, String, String)
  nameWithType: DemandCacheableWithFileDependency<T>.DemandCacheableWithFileDependency(Func<String, T>, String, String)
  fullName: Microsoft.Health.Caching.DemandCacheableWithFileDependency<T>.DemandCacheableWithFileDependency(System.Func<System.String, T>, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/Cache/DemandLoadable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: search/Cache/DemandLoadable.cs
    startLine: 423
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Caching
  summary: "\n"
  example: []
  syntax:
    content: public DemandCacheableWithFileDependency(Func<string, T> loader, string key, string dependencyPath)
    content.vb: Public Sub New(loader As Func(Of String, T), key As String, dependencyPath As String)
    parameters:
    - id: loader
      type: System.Func{System.String,{T}}
    - id: key
      type: System.String
    - id: dependencyPath
      type: System.String
  overload: Microsoft.Health.Caching.DemandCacheableWithFileDependency`1.#ctor*
  nameWithType.vb: DemandCacheableWithFileDependency(Of T).DemandCacheableWithFileDependency(Func(Of String, T), String, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Caching.DemandCacheableWithFileDependency(Of T).DemandCacheableWithFileDependency(System.Func(Of System.String, T), System.String, System.String)
  name.vb: DemandCacheableWithFileDependency(Func(Of String, T), String, String)
- uid: Microsoft.Health.Caching.DemandCacheableWithFileDependency`1.#ctor(System.Func{System.String,`0},System.String,System.String[])
  commentId: M:Microsoft.Health.Caching.DemandCacheableWithFileDependency`1.#ctor(System.Func{System.String,`0},System.String,System.String[])
  id: '#ctor(System.Func{System.String,`0},System.String,System.String[])'
  parent: Microsoft.Health.Caching.DemandCacheableWithFileDependency`1
  langs:
  - csharp
  - vb
  name: DemandCacheableWithFileDependency(Func<String, T>, String, String[])
  nameWithType: DemandCacheableWithFileDependency<T>.DemandCacheableWithFileDependency(Func<String, T>, String, String[])
  fullName: Microsoft.Health.Caching.DemandCacheableWithFileDependency<T>.DemandCacheableWithFileDependency(System.Func<System.String, T>, System.String, System.String[])
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/Cache/DemandLoadable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: search/Cache/DemandLoadable.cs
    startLine: 431
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Caching
  summary: "\n"
  example: []
  syntax:
    content: public DemandCacheableWithFileDependency(Func<string, T> loader, string key, string[] dependencyPaths)
    content.vb: Public Sub New(loader As Func(Of String, T), key As String, dependencyPaths As String())
    parameters:
    - id: loader
      type: System.Func{System.String,{T}}
    - id: key
      type: System.String
    - id: dependencyPaths
      type: System.String[]
  overload: Microsoft.Health.Caching.DemandCacheableWithFileDependency`1.#ctor*
  nameWithType.vb: DemandCacheableWithFileDependency(Of T).DemandCacheableWithFileDependency(Func(Of String, T), String, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Caching.DemandCacheableWithFileDependency(Of T).DemandCacheableWithFileDependency(System.Func(Of System.String, T), System.String, System.String())
  name.vb: DemandCacheableWithFileDependency(Func(Of String, T), String, String())
- uid: Microsoft.Health.Caching.DemandCacheableWithFileDependency`1.OnLoaded(`0)
  commentId: M:Microsoft.Health.Caching.DemandCacheableWithFileDependency`1.OnLoaded(`0)
  id: OnLoaded(`0)
  parent: Microsoft.Health.Caching.DemandCacheableWithFileDependency`1
  langs:
  - csharp
  - vb
  name: OnLoaded(T)
  nameWithType: DemandCacheableWithFileDependency<T>.OnLoaded(T)
  fullName: Microsoft.Health.Caching.DemandCacheableWithFileDependency<T>.OnLoaded(T)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/Cache/DemandLoadable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: OnLoaded
    path: search/Cache/DemandLoadable.cs
    startLine: 440
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Caching
  syntax:
    content: protected override T OnLoaded(T value)
    content.vb: Protected Overrides Function OnLoaded(value As T) As T
    parameters:
    - id: value
      type: '{T}'
    return:
      type: '{T}'
  overridden: Microsoft.Health.Caching.DemandCacheable{{T}}.OnLoaded({T})
  overload: Microsoft.Health.Caching.DemandCacheableWithFileDependency`1.OnLoaded*
  nameWithType.vb: DemandCacheableWithFileDependency(Of T).OnLoaded(T)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Microsoft.Health.Caching.DemandCacheableWithFileDependency(Of T).OnLoaded(T)
references:
- uid: Microsoft.Health.Caching
  commentId: N:Microsoft.Health.Caching
  isExternal: false
  name: Microsoft.Health.Caching
  nameWithType: Microsoft.Health.Caching
  fullName: Microsoft.Health.Caching
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.Caching.DemandLoadable{System.String,{T}}
  commentId: T:Microsoft.Health.Caching.DemandLoadable{System.String,`0}
  parent: Microsoft.Health.Caching
  definition: Microsoft.Health.Caching.DemandLoadable`2
  name: DemandLoadable<String, T>
  nameWithType: DemandLoadable<String, T>
  fullName: Microsoft.Health.Caching.DemandLoadable<System.String, T>
  nameWithType.vb: DemandLoadable(Of String, T)
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of System.String, T)
  name.vb: DemandLoadable(Of String, T)
  spec.csharp:
  - uid: Microsoft.Health.Caching.DemandLoadable`2
    name: DemandLoadable
    nameWithType: DemandLoadable
    fullName: Microsoft.Health.Caching.DemandLoadable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.Caching.DemandLoadable`2
    name: DemandLoadable
    nameWithType: DemandLoadable
    fullName: Microsoft.Health.Caching.DemandLoadable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Caching.DemandCacheable{{T}}
  commentId: T:Microsoft.Health.Caching.DemandCacheable{`0}
  parent: Microsoft.Health.Caching
  definition: Microsoft.Health.Caching.DemandCacheable`1
  name: DemandCacheable<T>
  nameWithType: DemandCacheable<T>
  fullName: Microsoft.Health.Caching.DemandCacheable<T>
  nameWithType.vb: DemandCacheable(Of T)
  fullName.vb: Microsoft.Health.Caching.DemandCacheable(Of T)
  name.vb: DemandCacheable(Of T)
  spec.csharp:
  - uid: Microsoft.Health.Caching.DemandCacheable`1
    name: DemandCacheable
    nameWithType: DemandCacheable
    fullName: Microsoft.Health.Caching.DemandCacheable
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.Caching.DemandCacheable`1
    name: DemandCacheable
    nameWithType: DemandCacheable
    fullName: Microsoft.Health.Caching.DemandCacheable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Caching.IDemandLoadable
  commentId: T:Microsoft.Health.Caching.IDemandLoadable
  parent: Microsoft.Health.Caching
  isExternal: false
  name: IDemandLoadable
  nameWithType: IDemandLoadable
  fullName: Microsoft.Health.Caching.IDemandLoadable
- uid: Microsoft.Health.Caching.DemandCacheable{{T}}.CacheItemRemovedCallback
  commentId: P:Microsoft.Health.Caching.DemandCacheable{`0}.CacheItemRemovedCallback
  parent: Microsoft.Health.Caching.DemandCacheable{{T}}
  definition: Microsoft.Health.Caching.DemandCacheable`1.CacheItemRemovedCallback
  name: CacheItemRemovedCallback
  nameWithType: DemandCacheable<T>.CacheItemRemovedCallback
  fullName: Microsoft.Health.Caching.DemandCacheable<T>.CacheItemRemovedCallback
  nameWithType.vb: DemandCacheable(Of T).CacheItemRemovedCallback
  fullName.vb: Microsoft.Health.Caching.DemandCacheable(Of T).CacheItemRemovedCallback
- uid: Microsoft.Health.Caching.DemandCacheable{{T}}.OnUnload({T})
  commentId: M:Microsoft.Health.Caching.DemandCacheable{`0}.OnUnload(`0)
  parent: Microsoft.Health.Caching.DemandCacheable{{T}}
  definition: Microsoft.Health.Caching.DemandCacheable`1.OnUnload(`0)
  name: OnUnload(T)
  nameWithType: DemandCacheable<T>.OnUnload(T)
  fullName: Microsoft.Health.Caching.DemandCacheable<T>.OnUnload(T)
  nameWithType.vb: DemandCacheable(Of T).OnUnload(T)
  fullName.vb: Microsoft.Health.Caching.DemandCacheable(Of T).OnUnload(T)
  spec.csharp:
  - uid: Microsoft.Health.Caching.DemandCacheable`1.OnUnload(`0)
    name: OnUnload
    nameWithType: DemandCacheable<T>.OnUnload
    fullName: Microsoft.Health.Caching.DemandCacheable<T>.OnUnload
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Caching.DemandCacheable`1.OnUnload(`0)
    name: OnUnload
    nameWithType: DemandCacheable(Of T).OnUnload
    fullName: Microsoft.Health.Caching.DemandCacheable(Of T).OnUnload
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Caching.DemandLoadable{System.String,{T}}.Loaded
  commentId: E:Microsoft.Health.Caching.DemandLoadable{System.String,`0}.Loaded
  parent: Microsoft.Health.Caching.DemandLoadable{System.String,{T}}
  definition: Microsoft.Health.Caching.DemandLoadable`2.Loaded
  name: Loaded
  nameWithType: DemandLoadable<String, T>.Loaded
  fullName: Microsoft.Health.Caching.DemandLoadable<System.String, T>.Loaded
  nameWithType.vb: DemandLoadable(Of String, T).Loaded
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of System.String, T).Loaded
- uid: Microsoft.Health.Caching.DemandLoadable{System.String,{T}}.Key
  commentId: P:Microsoft.Health.Caching.DemandLoadable{System.String,`0}.Key
  parent: Microsoft.Health.Caching.DemandLoadable{System.String,{T}}
  definition: Microsoft.Health.Caching.DemandLoadable`2.Key
  name: Key
  nameWithType: DemandLoadable<String, T>.Key
  fullName: Microsoft.Health.Caching.DemandLoadable<System.String, T>.Key
  nameWithType.vb: DemandLoadable(Of String, T).Key
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of System.String, T).Key
- uid: Microsoft.Health.Caching.DemandLoadable{System.String,{T}}.Value
  commentId: P:Microsoft.Health.Caching.DemandLoadable{System.String,`0}.Value
  parent: Microsoft.Health.Caching.DemandLoadable{System.String,{T}}
  definition: Microsoft.Health.Caching.DemandLoadable`2.Value
  name: Value
  nameWithType: DemandLoadable<String, T>.Value
  fullName: Microsoft.Health.Caching.DemandLoadable<System.String, T>.Value
  nameWithType.vb: DemandLoadable(Of String, T).Value
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of System.String, T).Value
- uid: Microsoft.Health.Caching.DemandLoadable{System.String,{T}}.HasValue
  commentId: P:Microsoft.Health.Caching.DemandLoadable{System.String,`0}.HasValue
  parent: Microsoft.Health.Caching.DemandLoadable{System.String,{T}}
  definition: Microsoft.Health.Caching.DemandLoadable`2.HasValue
  name: HasValue
  nameWithType: DemandLoadable<String, T>.HasValue
  fullName: Microsoft.Health.Caching.DemandLoadable<System.String, T>.HasValue
  nameWithType.vb: DemandLoadable(Of String, T).HasValue
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of System.String, T).HasValue
- uid: Microsoft.Health.Caching.DemandLoadable{System.String,{T}}.Load(System.Boolean)
  commentId: M:Microsoft.Health.Caching.DemandLoadable{System.String,`0}.Load(System.Boolean)
  parent: Microsoft.Health.Caching.DemandLoadable{System.String,{T}}
  definition: Microsoft.Health.Caching.DemandLoadable`2.Load(System.Boolean)
  name: Load(Boolean)
  nameWithType: DemandLoadable<String, T>.Load(Boolean)
  fullName: Microsoft.Health.Caching.DemandLoadable<System.String, T>.Load(System.Boolean)
  nameWithType.vb: DemandLoadable(Of String, T).Load(Boolean)
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of System.String, T).Load(System.Boolean)
  spec.csharp:
  - uid: Microsoft.Health.Caching.DemandLoadable`2.Load(System.Boolean)
    name: Load
    nameWithType: DemandLoadable<String, T>.Load
    fullName: Microsoft.Health.Caching.DemandLoadable<System.String, T>.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Caching.DemandLoadable`2.Load(System.Boolean)
    name: Load
    nameWithType: DemandLoadable(Of String, T).Load
    fullName: Microsoft.Health.Caching.DemandLoadable(Of System.String, T).Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Caching.DemandLoadable{System.String,{T}}.Unload
  commentId: M:Microsoft.Health.Caching.DemandLoadable{System.String,`0}.Unload
  parent: Microsoft.Health.Caching.DemandLoadable{System.String,{T}}
  definition: Microsoft.Health.Caching.DemandLoadable`2.Unload
  name: Unload()
  nameWithType: DemandLoadable<String, T>.Unload()
  fullName: Microsoft.Health.Caching.DemandLoadable<System.String, T>.Unload()
  nameWithType.vb: DemandLoadable(Of String, T).Unload()
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of System.String, T).Unload()
  spec.csharp:
  - uid: Microsoft.Health.Caching.DemandLoadable`2.Unload
    name: Unload
    nameWithType: DemandLoadable<String, T>.Unload
    fullName: Microsoft.Health.Caching.DemandLoadable<System.String, T>.Unload
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Caching.DemandLoadable`2.Unload
    name: Unload
    nameWithType: DemandLoadable(Of String, T).Unload
    fullName: Microsoft.Health.Caching.DemandLoadable(Of System.String, T).Unload
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Caching.DemandLoadable{System.String,{T}}.TryExpire(System.TimeSpan,System.DateTime@)
  commentId: M:Microsoft.Health.Caching.DemandLoadable{System.String,`0}.TryExpire(System.TimeSpan,System.DateTime@)
  parent: Microsoft.Health.Caching.DemandLoadable{System.String,{T}}
  definition: Microsoft.Health.Caching.DemandLoadable`2.TryExpire(System.TimeSpan,System.DateTime@)
  name: TryExpire(TimeSpan, DateTime)
  nameWithType: DemandLoadable<String, T>.TryExpire(TimeSpan, DateTime)
  fullName: Microsoft.Health.Caching.DemandLoadable<System.String, T>.TryExpire(System.TimeSpan, System.DateTime)
  nameWithType.vb: DemandLoadable(Of String, T).TryExpire(TimeSpan, DateTime)
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of System.String, T).TryExpire(System.TimeSpan, System.DateTime)
  spec.csharp:
  - uid: Microsoft.Health.Caching.DemandLoadable`2.TryExpire(System.TimeSpan,System.DateTime@)
    name: TryExpire
    nameWithType: DemandLoadable<String, T>.TryExpire
    fullName: Microsoft.Health.Caching.DemandLoadable<System.String, T>.TryExpire
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Caching.DemandLoadable`2.TryExpire(System.TimeSpan,System.DateTime@)
    name: TryExpire
    nameWithType: DemandLoadable(Of String, T).TryExpire
    fullName: Microsoft.Health.Caching.DemandLoadable(Of System.String, T).TryExpire
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Caching.DemandLoadable{System.String,{T}}.OnLoading
  commentId: M:Microsoft.Health.Caching.DemandLoadable{System.String,`0}.OnLoading
  parent: Microsoft.Health.Caching.DemandLoadable{System.String,{T}}
  definition: Microsoft.Health.Caching.DemandLoadable`2.OnLoading
  name: OnLoading()
  nameWithType: DemandLoadable<String, T>.OnLoading()
  fullName: Microsoft.Health.Caching.DemandLoadable<System.String, T>.OnLoading()
  nameWithType.vb: DemandLoadable(Of String, T).OnLoading()
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of System.String, T).OnLoading()
  spec.csharp:
  - uid: Microsoft.Health.Caching.DemandLoadable`2.OnLoading
    name: OnLoading
    nameWithType: DemandLoadable<String, T>.OnLoading
    fullName: Microsoft.Health.Caching.DemandLoadable<System.String, T>.OnLoading
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Caching.DemandLoadable`2.OnLoading
    name: OnLoading
    nameWithType: DemandLoadable(Of String, T).OnLoading
    fullName: Microsoft.Health.Caching.DemandLoadable(Of System.String, T).OnLoading
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Caching.DemandLoadable{System.String,{T}}.OnLoaded({T})
  commentId: M:Microsoft.Health.Caching.DemandLoadable{System.String,`0}.OnLoaded(`0)
  parent: Microsoft.Health.Caching.DemandLoadable{System.String,{T}}
  definition: Microsoft.Health.Caching.DemandLoadable`2.OnLoaded(`1)
  name: OnLoaded(T)
  nameWithType: DemandLoadable<String, T>.OnLoaded(T)
  fullName: Microsoft.Health.Caching.DemandLoadable<System.String, T>.OnLoaded(T)
  nameWithType.vb: DemandLoadable(Of String, T).OnLoaded(T)
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of System.String, T).OnLoaded(T)
  spec.csharp:
  - uid: Microsoft.Health.Caching.DemandLoadable`2.OnLoaded(`1)
    name: OnLoaded
    nameWithType: DemandLoadable<String, T>.OnLoaded
    fullName: Microsoft.Health.Caching.DemandLoadable<System.String, T>.OnLoaded
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Caching.DemandLoadable`2.OnLoaded(`1)
    name: OnLoaded
    nameWithType: DemandLoadable(Of String, T).OnLoaded
    fullName: Microsoft.Health.Caching.DemandLoadable(Of System.String, T).OnLoaded
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Caching.DemandLoadable{System.String,{T}}.OnUnload({T})
  commentId: M:Microsoft.Health.Caching.DemandLoadable{System.String,`0}.OnUnload(`0)
  parent: Microsoft.Health.Caching.DemandLoadable{System.String,{T}}
  definition: Microsoft.Health.Caching.DemandLoadable`2.OnUnload(`1)
  name: OnUnload(T)
  nameWithType: DemandLoadable<String, T>.OnUnload(T)
  fullName: Microsoft.Health.Caching.DemandLoadable<System.String, T>.OnUnload(T)
  nameWithType.vb: DemandLoadable(Of String, T).OnUnload(T)
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of System.String, T).OnUnload(T)
  spec.csharp:
  - uid: Microsoft.Health.Caching.DemandLoadable`2.OnUnload(`1)
    name: OnUnload
    nameWithType: DemandLoadable<String, T>.OnUnload
    fullName: Microsoft.Health.Caching.DemandLoadable<System.String, T>.OnUnload
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Caching.DemandLoadable`2.OnUnload(`1)
    name: OnUnload
    nameWithType: DemandLoadable(Of String, T).OnUnload
    fullName: Microsoft.Health.Caching.DemandLoadable(Of System.String, T).OnUnload
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Caching.DemandCacheableWithFileDependency`1.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<DemandCacheableWithFileDependency<T>>()
  nameWithType: TypeHelper.ValueOrDbNull<DemandCacheableWithFileDependency<T>>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Caching.DemandCacheableWithFileDependency<T>>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of DemandCacheableWithFileDependency(Of T))()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Caching.DemandCacheableWithFileDependency(Of T))()
  name.vb: ValueOrDbNull(Of DemandCacheableWithFileDependency(Of T))()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<DemandCacheableWithFileDependency<T>>
    nameWithType: TypeHelper.ValueOrDbNull<DemandCacheableWithFileDependency<T>>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Caching.DemandCacheableWithFileDependency<T>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of DemandCacheableWithFileDependency(Of T))
    nameWithType: TypeHelper.ValueOrDbNull(Of DemandCacheableWithFileDependency(Of T))
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Caching.DemandCacheableWithFileDependency(Of T))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Caching.DemandLoadable`2
  commentId: T:Microsoft.Health.Caching.DemandLoadable`2
  parent: Microsoft.Health.Caching
  isExternal: false
  name: DemandLoadable<K, V>
  nameWithType: DemandLoadable<K, V>
  fullName: Microsoft.Health.Caching.DemandLoadable<K, V>
  nameWithType.vb: DemandLoadable(Of K, V)
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of K, V)
  name.vb: DemandLoadable(Of K, V)
  spec.csharp:
  - uid: Microsoft.Health.Caching.DemandLoadable`2
    name: DemandLoadable
    nameWithType: DemandLoadable
    fullName: Microsoft.Health.Caching.DemandLoadable
  - name: <
    nameWithType: <
    fullName: <
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.Caching.DemandLoadable`2
    name: DemandLoadable
    nameWithType: DemandLoadable
    fullName: Microsoft.Health.Caching.DemandLoadable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Caching.DemandCacheable`1
  commentId: T:Microsoft.Health.Caching.DemandCacheable`1
  isExternal: false
  name: DemandCacheable<T>
  nameWithType: DemandCacheable<T>
  fullName: Microsoft.Health.Caching.DemandCacheable<T>
  nameWithType.vb: DemandCacheable(Of T)
  fullName.vb: Microsoft.Health.Caching.DemandCacheable(Of T)
  name.vb: DemandCacheable(Of T)
  spec.csharp:
  - uid: Microsoft.Health.Caching.DemandCacheable`1
    name: DemandCacheable
    nameWithType: DemandCacheable
    fullName: Microsoft.Health.Caching.DemandCacheable
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.Caching.DemandCacheable`1
    name: DemandCacheable
    nameWithType: DemandCacheable
    fullName: Microsoft.Health.Caching.DemandCacheable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Caching.DemandCacheable`1.CacheItemRemovedCallback
  commentId: P:Microsoft.Health.Caching.DemandCacheable`1.CacheItemRemovedCallback
  isExternal: false
  name: CacheItemRemovedCallback
  nameWithType: DemandCacheable<T>.CacheItemRemovedCallback
  fullName: Microsoft.Health.Caching.DemandCacheable<T>.CacheItemRemovedCallback
  nameWithType.vb: DemandCacheable(Of T).CacheItemRemovedCallback
  fullName.vb: Microsoft.Health.Caching.DemandCacheable(Of T).CacheItemRemovedCallback
- uid: Microsoft.Health.Caching.DemandCacheable`1.OnUnload(`0)
  commentId: M:Microsoft.Health.Caching.DemandCacheable`1.OnUnload(`0)
  isExternal: false
  name: OnUnload(T)
  nameWithType: DemandCacheable<T>.OnUnload(T)
  fullName: Microsoft.Health.Caching.DemandCacheable<T>.OnUnload(T)
  nameWithType.vb: DemandCacheable(Of T).OnUnload(T)
  fullName.vb: Microsoft.Health.Caching.DemandCacheable(Of T).OnUnload(T)
  spec.csharp:
  - uid: Microsoft.Health.Caching.DemandCacheable`1.OnUnload(`0)
    name: OnUnload
    nameWithType: DemandCacheable<T>.OnUnload
    fullName: Microsoft.Health.Caching.DemandCacheable<T>.OnUnload
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Caching.DemandCacheable`1.OnUnload(`0)
    name: OnUnload
    nameWithType: DemandCacheable(Of T).OnUnload
    fullName: Microsoft.Health.Caching.DemandCacheable(Of T).OnUnload
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Caching.DemandLoadable`2.Loaded
  commentId: E:Microsoft.Health.Caching.DemandLoadable`2.Loaded
  isExternal: false
  name: Loaded
  nameWithType: DemandLoadable<K, V>.Loaded
  fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.Loaded
  nameWithType.vb: DemandLoadable(Of K, V).Loaded
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of K, V).Loaded
- uid: Microsoft.Health.Caching.DemandLoadable`2.Key
  commentId: P:Microsoft.Health.Caching.DemandLoadable`2.Key
  isExternal: false
  name: Key
  nameWithType: DemandLoadable<K, V>.Key
  fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.Key
  nameWithType.vb: DemandLoadable(Of K, V).Key
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of K, V).Key
- uid: Microsoft.Health.Caching.DemandLoadable`2.Value
  commentId: P:Microsoft.Health.Caching.DemandLoadable`2.Value
  isExternal: false
  name: Value
  nameWithType: DemandLoadable<K, V>.Value
  fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.Value
  nameWithType.vb: DemandLoadable(Of K, V).Value
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of K, V).Value
- uid: Microsoft.Health.Caching.DemandLoadable`2.HasValue
  commentId: P:Microsoft.Health.Caching.DemandLoadable`2.HasValue
  isExternal: false
  name: HasValue
  nameWithType: DemandLoadable<K, V>.HasValue
  fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.HasValue
  nameWithType.vb: DemandLoadable(Of K, V).HasValue
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of K, V).HasValue
- uid: Microsoft.Health.Caching.DemandLoadable`2.Load(System.Boolean)
  commentId: M:Microsoft.Health.Caching.DemandLoadable`2.Load(System.Boolean)
  isExternal: true
  name: Load(Boolean)
  nameWithType: DemandLoadable<K, V>.Load(Boolean)
  fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.Load(System.Boolean)
  nameWithType.vb: DemandLoadable(Of K, V).Load(Boolean)
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of K, V).Load(System.Boolean)
  spec.csharp:
  - uid: Microsoft.Health.Caching.DemandLoadable`2.Load(System.Boolean)
    name: Load
    nameWithType: DemandLoadable<K, V>.Load
    fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Caching.DemandLoadable`2.Load(System.Boolean)
    name: Load
    nameWithType: DemandLoadable(Of K, V).Load
    fullName: Microsoft.Health.Caching.DemandLoadable(Of K, V).Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Caching.DemandLoadable`2.Unload
  commentId: M:Microsoft.Health.Caching.DemandLoadable`2.Unload
  isExternal: false
  name: Unload()
  nameWithType: DemandLoadable<K, V>.Unload()
  fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.Unload()
  nameWithType.vb: DemandLoadable(Of K, V).Unload()
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of K, V).Unload()
  spec.csharp:
  - uid: Microsoft.Health.Caching.DemandLoadable`2.Unload
    name: Unload
    nameWithType: DemandLoadable<K, V>.Unload
    fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.Unload
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Caching.DemandLoadable`2.Unload
    name: Unload
    nameWithType: DemandLoadable(Of K, V).Unload
    fullName: Microsoft.Health.Caching.DemandLoadable(Of K, V).Unload
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Caching.DemandLoadable`2.TryExpire(System.TimeSpan,System.DateTime@)
  commentId: M:Microsoft.Health.Caching.DemandLoadable`2.TryExpire(System.TimeSpan,System.DateTime@)
  isExternal: true
  name: TryExpire(TimeSpan, DateTime)
  nameWithType: DemandLoadable<K, V>.TryExpire(TimeSpan, DateTime)
  fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.TryExpire(System.TimeSpan, System.DateTime)
  nameWithType.vb: DemandLoadable(Of K, V).TryExpire(TimeSpan, DateTime)
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of K, V).TryExpire(System.TimeSpan, System.DateTime)
  spec.csharp:
  - uid: Microsoft.Health.Caching.DemandLoadable`2.TryExpire(System.TimeSpan,System.DateTime@)
    name: TryExpire
    nameWithType: DemandLoadable<K, V>.TryExpire
    fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.TryExpire
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Caching.DemandLoadable`2.TryExpire(System.TimeSpan,System.DateTime@)
    name: TryExpire
    nameWithType: DemandLoadable(Of K, V).TryExpire
    fullName: Microsoft.Health.Caching.DemandLoadable(Of K, V).TryExpire
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Caching.DemandLoadable`2.OnLoading
  commentId: M:Microsoft.Health.Caching.DemandLoadable`2.OnLoading
  isExternal: false
  name: OnLoading()
  nameWithType: DemandLoadable<K, V>.OnLoading()
  fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.OnLoading()
  nameWithType.vb: DemandLoadable(Of K, V).OnLoading()
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of K, V).OnLoading()
  spec.csharp:
  - uid: Microsoft.Health.Caching.DemandLoadable`2.OnLoading
    name: OnLoading
    nameWithType: DemandLoadable<K, V>.OnLoading
    fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.OnLoading
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Caching.DemandLoadable`2.OnLoading
    name: OnLoading
    nameWithType: DemandLoadable(Of K, V).OnLoading
    fullName: Microsoft.Health.Caching.DemandLoadable(Of K, V).OnLoading
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Caching.DemandLoadable`2.OnLoaded(`1)
  commentId: M:Microsoft.Health.Caching.DemandLoadable`2.OnLoaded(`1)
  isExternal: false
  name: OnLoaded(V)
  nameWithType: DemandLoadable<K, V>.OnLoaded(V)
  fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.OnLoaded(V)
  nameWithType.vb: DemandLoadable(Of K, V).OnLoaded(V)
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of K, V).OnLoaded(V)
  spec.csharp:
  - uid: Microsoft.Health.Caching.DemandLoadable`2.OnLoaded(`1)
    name: OnLoaded
    nameWithType: DemandLoadable<K, V>.OnLoaded
    fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.OnLoaded
  - name: (
    nameWithType: (
    fullName: (
  - name: V
    nameWithType: V
    fullName: V
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Caching.DemandLoadable`2.OnLoaded(`1)
    name: OnLoaded
    nameWithType: DemandLoadable(Of K, V).OnLoaded
    fullName: Microsoft.Health.Caching.DemandLoadable(Of K, V).OnLoaded
  - name: (
    nameWithType: (
    fullName: (
  - name: V
    nameWithType: V
    fullName: V
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Caching.DemandLoadable`2.OnUnload(`1)
  commentId: M:Microsoft.Health.Caching.DemandLoadable`2.OnUnload(`1)
  isExternal: false
  name: OnUnload(V)
  nameWithType: DemandLoadable<K, V>.OnUnload(V)
  fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.OnUnload(V)
  nameWithType.vb: DemandLoadable(Of K, V).OnUnload(V)
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of K, V).OnUnload(V)
  spec.csharp:
  - uid: Microsoft.Health.Caching.DemandLoadable`2.OnUnload(`1)
    name: OnUnload
    nameWithType: DemandLoadable<K, V>.OnUnload
    fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.OnUnload
  - name: (
    nameWithType: (
    fullName: (
  - name: V
    nameWithType: V
    fullName: V
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Caching.DemandLoadable`2.OnUnload(`1)
    name: OnUnload
    nameWithType: DemandLoadable(Of K, V).OnUnload
    fullName: Microsoft.Health.Caching.DemandLoadable(Of K, V).OnUnload
  - name: (
    nameWithType: (
    fullName: (
  - name: V
    nameWithType: V
    fullName: V
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.Caching.DemandCacheableWithFileDependency`1.#ctor*
  commentId: Overload:Microsoft.Health.Caching.DemandCacheableWithFileDependency`1.#ctor
  isExternal: false
  name: DemandCacheableWithFileDependency
  nameWithType: DemandCacheableWithFileDependency<T>.DemandCacheableWithFileDependency
  fullName: Microsoft.Health.Caching.DemandCacheableWithFileDependency<T>.DemandCacheableWithFileDependency
  nameWithType.vb: DemandCacheableWithFileDependency(Of T).DemandCacheableWithFileDependency
  fullName.vb: Microsoft.Health.Caching.DemandCacheableWithFileDependency(Of T).DemandCacheableWithFileDependency
- uid: System.Func{System.String,{T}}
  commentId: T:System.Func{System.String,`0}
  parent: System
  definition: System.Func`2
  name: Func<String, T>
  nameWithType: Func<String, T>
  fullName: System.Func<System.String, T>
  nameWithType.vb: Func(Of String, T)
  fullName.vb: System.Func(Of System.String, T)
  name.vb: Func(Of String, T)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.Health.Caching.DemandCacheable{{T}}.OnLoaded({T})
  commentId: M:Microsoft.Health.Caching.DemandCacheable{`0}.OnLoaded(`0)
  parent: Microsoft.Health.Caching.DemandCacheable{{T}}
  definition: Microsoft.Health.Caching.DemandCacheable`1.OnLoaded(`0)
  name: OnLoaded(T)
  nameWithType: DemandCacheable<T>.OnLoaded(T)
  fullName: Microsoft.Health.Caching.DemandCacheable<T>.OnLoaded(T)
  nameWithType.vb: DemandCacheable(Of T).OnLoaded(T)
  fullName.vb: Microsoft.Health.Caching.DemandCacheable(Of T).OnLoaded(T)
  spec.csharp:
  - uid: Microsoft.Health.Caching.DemandCacheable`1.OnLoaded(`0)
    name: OnLoaded
    nameWithType: DemandCacheable<T>.OnLoaded
    fullName: Microsoft.Health.Caching.DemandCacheable<T>.OnLoaded
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Caching.DemandCacheable`1.OnLoaded(`0)
    name: OnLoaded
    nameWithType: DemandCacheable(Of T).OnLoaded
    fullName: Microsoft.Health.Caching.DemandCacheable(Of T).OnLoaded
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Caching.DemandCacheableWithFileDependency`1.OnLoaded*
  commentId: Overload:Microsoft.Health.Caching.DemandCacheableWithFileDependency`1.OnLoaded
  isExternal: false
  name: OnLoaded
  nameWithType: DemandCacheableWithFileDependency<T>.OnLoaded
  fullName: Microsoft.Health.Caching.DemandCacheableWithFileDependency<T>.OnLoaded
  nameWithType.vb: DemandCacheableWithFileDependency(Of T).OnLoaded
  fullName.vb: Microsoft.Health.Caching.DemandCacheableWithFileDependency(Of T).OnLoaded
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: Microsoft.Health.Caching.DemandCacheable`1.OnLoaded(`0)
  commentId: M:Microsoft.Health.Caching.DemandCacheable`1.OnLoaded(`0)
  isExternal: false
  name: OnLoaded(T)
  nameWithType: DemandCacheable<T>.OnLoaded(T)
  fullName: Microsoft.Health.Caching.DemandCacheable<T>.OnLoaded(T)
  nameWithType.vb: DemandCacheable(Of T).OnLoaded(T)
  fullName.vb: Microsoft.Health.Caching.DemandCacheable(Of T).OnLoaded(T)
  spec.csharp:
  - uid: Microsoft.Health.Caching.DemandCacheable`1.OnLoaded(`0)
    name: OnLoaded
    nameWithType: DemandCacheable<T>.OnLoaded
    fullName: Microsoft.Health.Caching.DemandCacheable<T>.OnLoaded
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Caching.DemandCacheable`1.OnLoaded(`0)
    name: OnLoaded
    nameWithType: DemandCacheable(Of T).OnLoaded
    fullName: Microsoft.Health.Caching.DemandCacheable(Of T).OnLoaded
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
