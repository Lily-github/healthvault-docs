### YamlMime:ManagedReference
items:
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  id: Microsoft.Health
  children:
  - Microsoft.Health.ArrayRange`1
  - Microsoft.Health.ByteArrayEqualityComparer
  - Microsoft.Health.CharArrayEqualityComparer
  - Microsoft.Health.CharArrayRangeEqualityComparer
  - Microsoft.Health.CharReader
  - Microsoft.Health.CharStreamReader
  - Microsoft.Health.CSVExtensions
  - Microsoft.Health.CSVReader
  - Microsoft.Health.DictionaryFile`2
  - Microsoft.Health.DictionaryFileIndex`2
  - Microsoft.Health.DictionaryFileWriter`2
  - Microsoft.Health.FastList`1
  - Microsoft.Health.FileGenerator
  - Microsoft.Health.IIndex`2
  - Microsoft.Health.KeyLocation`1
  - Microsoft.Health.LineReader
  - Microsoft.Health.MultiValueDictionary`3
  - Microsoft.Health.ObjectReader`1
  - Microsoft.Health.ObjectWriter`1
  - Microsoft.Health.SortedIndex`2
  - Microsoft.Health.StringAtoms
  - Microsoft.Health.StructList`1
  - Microsoft.Health.ValueListDictionary`2
  - Microsoft.Health.ValueLocation
  - Microsoft.Health.ValueReference`1
  - Microsoft.Health.XmlFragmentWriter
  langs:
  - csharp
  - vb
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
  type: Namespace
  assemblies:
  - Microsoft.Health.Utility
references:
- uid: Microsoft.Health.CharArrayEqualityComparer
  commentId: T:Microsoft.Health.CharArrayEqualityComparer
  parent: Microsoft.Health
  isExternal: false
  name: CharArrayEqualityComparer
  nameWithType: CharArrayEqualityComparer
  fullName: Microsoft.Health.CharArrayEqualityComparer
- uid: Microsoft.Health.ByteArrayEqualityComparer
  commentId: T:Microsoft.Health.ByteArrayEqualityComparer
  parent: Microsoft.Health
  isExternal: false
  name: ByteArrayEqualityComparer
  nameWithType: ByteArrayEqualityComparer
  fullName: Microsoft.Health.ByteArrayEqualityComparer
- uid: Microsoft.Health.ArrayRange`1
  commentId: T:Microsoft.Health.ArrayRange`1
  isExternal: false
  name: ArrayRange<T>
  nameWithType: ArrayRange<T>
  fullName: Microsoft.Health.ArrayRange<T>
  nameWithType.vb: ArrayRange(Of T)
  fullName.vb: Microsoft.Health.ArrayRange(Of T)
  name.vb: ArrayRange(Of T)
  spec.csharp:
  - uid: Microsoft.Health.ArrayRange`1
    name: ArrayRange
    nameWithType: ArrayRange
    fullName: Microsoft.Health.ArrayRange
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.ArrayRange`1
    name: ArrayRange
    nameWithType: ArrayRange
    fullName: Microsoft.Health.ArrayRange
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.CharArrayRangeEqualityComparer
  commentId: T:Microsoft.Health.CharArrayRangeEqualityComparer
  parent: Microsoft.Health
  isExternal: false
  name: CharArrayRangeEqualityComparer
  nameWithType: CharArrayRangeEqualityComparer
  fullName: Microsoft.Health.CharArrayRangeEqualityComparer
- uid: Microsoft.Health.CharReader
  commentId: T:Microsoft.Health.CharReader
  isExternal: false
  name: CharReader
  nameWithType: CharReader
  fullName: Microsoft.Health.CharReader
- uid: Microsoft.Health.CharStreamReader
  commentId: T:Microsoft.Health.CharStreamReader
  isExternal: false
  name: CharStreamReader
  nameWithType: CharStreamReader
  fullName: Microsoft.Health.CharStreamReader
- uid: Microsoft.Health.CSVReader
  commentId: T:Microsoft.Health.CSVReader
  isExternal: false
  name: CSVReader
  nameWithType: CSVReader
  fullName: Microsoft.Health.CSVReader
- uid: Microsoft.Health.CSVExtensions
  commentId: T:Microsoft.Health.CSVExtensions
  parent: Microsoft.Health
  isExternal: false
  name: CSVExtensions
  nameWithType: CSVExtensions
  fullName: Microsoft.Health.CSVExtensions
- uid: Microsoft.Health.FastList`1
  commentId: T:Microsoft.Health.FastList`1
  isExternal: false
  name: FastList<T>
  nameWithType: FastList<T>
  fullName: Microsoft.Health.FastList<T>
  nameWithType.vb: FastList(Of T)
  fullName.vb: Microsoft.Health.FastList(Of T)
  name.vb: FastList(Of T)
  spec.csharp:
  - uid: Microsoft.Health.FastList`1
    name: FastList
    nameWithType: FastList
    fullName: Microsoft.Health.FastList
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.FastList`1
    name: FastList
    nameWithType: FastList
    fullName: Microsoft.Health.FastList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FileGenerator
  commentId: T:Microsoft.Health.FileGenerator
  isExternal: false
  name: FileGenerator
  nameWithType: FileGenerator
  fullName: Microsoft.Health.FileGenerator
- uid: Microsoft.Health.IIndex`2
  commentId: T:Microsoft.Health.IIndex`2
  isExternal: false
  name: IIndex<K, V>
  nameWithType: IIndex<K, V>
  fullName: Microsoft.Health.IIndex<K, V>
  nameWithType.vb: IIndex(Of K, V)
  fullName.vb: Microsoft.Health.IIndex(Of K, V)
  name.vb: IIndex(Of K, V)
  spec.csharp:
  - uid: Microsoft.Health.IIndex`2
    name: IIndex
    nameWithType: IIndex
    fullName: Microsoft.Health.IIndex
  - name: <
    nameWithType: <
    fullName: <
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.IIndex`2
    name: IIndex
    nameWithType: IIndex
    fullName: Microsoft.Health.IIndex
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.LineReader
  commentId: T:Microsoft.Health.LineReader
  isExternal: false
  name: LineReader
  nameWithType: LineReader
  fullName: Microsoft.Health.LineReader
- uid: Microsoft.Health.ObjectReader`1
  commentId: T:Microsoft.Health.ObjectReader`1
  isExternal: false
  name: ObjectReader<T>
  nameWithType: ObjectReader<T>
  fullName: Microsoft.Health.ObjectReader<T>
  nameWithType.vb: ObjectReader(Of T)
  fullName.vb: Microsoft.Health.ObjectReader(Of T)
  name.vb: ObjectReader(Of T)
  spec.csharp:
  - uid: Microsoft.Health.ObjectReader`1
    name: ObjectReader
    nameWithType: ObjectReader
    fullName: Microsoft.Health.ObjectReader
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.ObjectReader`1
    name: ObjectReader
    nameWithType: ObjectReader
    fullName: Microsoft.Health.ObjectReader
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ObjectWriter`1
  commentId: T:Microsoft.Health.ObjectWriter`1
  isExternal: false
  name: ObjectWriter<T>
  nameWithType: ObjectWriter<T>
  fullName: Microsoft.Health.ObjectWriter<T>
  nameWithType.vb: ObjectWriter(Of T)
  fullName.vb: Microsoft.Health.ObjectWriter(Of T)
  name.vb: ObjectWriter(Of T)
  spec.csharp:
  - uid: Microsoft.Health.ObjectWriter`1
    name: ObjectWriter
    nameWithType: ObjectWriter
    fullName: Microsoft.Health.ObjectWriter
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.ObjectWriter`1
    name: ObjectWriter
    nameWithType: ObjectWriter
    fullName: Microsoft.Health.ObjectWriter
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.SortedIndex`2
  commentId: T:Microsoft.Health.SortedIndex`2
  isExternal: false
  name: SortedIndex<K, V>
  nameWithType: SortedIndex<K, V>
  fullName: Microsoft.Health.SortedIndex<K, V>
  nameWithType.vb: SortedIndex(Of K, V)
  fullName.vb: Microsoft.Health.SortedIndex(Of K, V)
  name.vb: SortedIndex(Of K, V)
  spec.csharp:
  - uid: Microsoft.Health.SortedIndex`2
    name: SortedIndex
    nameWithType: SortedIndex
    fullName: Microsoft.Health.SortedIndex
  - name: <
    nameWithType: <
    fullName: <
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.SortedIndex`2
    name: SortedIndex
    nameWithType: SortedIndex
    fullName: Microsoft.Health.SortedIndex
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.StringAtoms
  commentId: T:Microsoft.Health.StringAtoms
  parent: Microsoft.Health
  isExternal: false
  name: StringAtoms
  nameWithType: StringAtoms
  fullName: Microsoft.Health.StringAtoms
- uid: Microsoft.Health.StructList`1
  commentId: T:Microsoft.Health.StructList`1
  isExternal: false
  name: StructList<T>
  nameWithType: StructList<T>
  fullName: Microsoft.Health.StructList<T>
  nameWithType.vb: StructList(Of T)
  fullName.vb: Microsoft.Health.StructList(Of T)
  name.vb: StructList(Of T)
  spec.csharp:
  - uid: Microsoft.Health.StructList`1
    name: StructList
    nameWithType: StructList
    fullName: Microsoft.Health.StructList
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.StructList`1
    name: StructList
    nameWithType: StructList
    fullName: Microsoft.Health.StructList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.MultiValueDictionary`3
  commentId: T:Microsoft.Health.MultiValueDictionary`3
  isExternal: false
  name: MultiValueDictionary<K, V, LV>
  nameWithType: MultiValueDictionary<K, V, LV>
  fullName: Microsoft.Health.MultiValueDictionary<K, V, LV>
  nameWithType.vb: MultiValueDictionary(Of K, V, LV)
  fullName.vb: Microsoft.Health.MultiValueDictionary(Of K, V, LV)
  name.vb: MultiValueDictionary(Of K, V, LV)
  spec.csharp:
  - uid: Microsoft.Health.MultiValueDictionary`3
    name: MultiValueDictionary
    nameWithType: MultiValueDictionary
    fullName: Microsoft.Health.MultiValueDictionary
  - name: <
    nameWithType: <
    fullName: <
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: LV
    nameWithType: LV
    fullName: LV
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.MultiValueDictionary`3
    name: MultiValueDictionary
    nameWithType: MultiValueDictionary
    fullName: Microsoft.Health.MultiValueDictionary
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: LV
    nameWithType: LV
    fullName: LV
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ValueListDictionary`2
  commentId: T:Microsoft.Health.ValueListDictionary`2
  isExternal: false
  name: ValueListDictionary<K, V>
  nameWithType: ValueListDictionary<K, V>
  fullName: Microsoft.Health.ValueListDictionary<K, V>
  nameWithType.vb: ValueListDictionary(Of K, V)
  fullName.vb: Microsoft.Health.ValueListDictionary(Of K, V)
  name.vb: ValueListDictionary(Of K, V)
  spec.csharp:
  - uid: Microsoft.Health.ValueListDictionary`2
    name: ValueListDictionary
    nameWithType: ValueListDictionary
    fullName: Microsoft.Health.ValueListDictionary
  - name: <
    nameWithType: <
    fullName: <
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.ValueListDictionary`2
    name: ValueListDictionary
    nameWithType: ValueListDictionary
    fullName: Microsoft.Health.ValueListDictionary
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ValueLocation
  commentId: T:Microsoft.Health.ValueLocation
  parent: Microsoft.Health
  isExternal: false
  name: ValueLocation
  nameWithType: ValueLocation
  fullName: Microsoft.Health.ValueLocation
- uid: Microsoft.Health.KeyLocation`1
  commentId: T:Microsoft.Health.KeyLocation`1
  isExternal: false
  name: KeyLocation<K>
  nameWithType: KeyLocation<K>
  fullName: Microsoft.Health.KeyLocation<K>
  nameWithType.vb: KeyLocation(Of K)
  fullName.vb: Microsoft.Health.KeyLocation(Of K)
  name.vb: KeyLocation(Of K)
  spec.csharp:
  - uid: Microsoft.Health.KeyLocation`1
    name: KeyLocation
    nameWithType: KeyLocation
    fullName: Microsoft.Health.KeyLocation
  - name: <
    nameWithType: <
    fullName: <
  - name: K
    nameWithType: K
    fullName: K
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.KeyLocation`1
    name: KeyLocation
    nameWithType: KeyLocation
    fullName: Microsoft.Health.KeyLocation
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: K
    nameWithType: K
    fullName: K
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ValueReference`1
  commentId: T:Microsoft.Health.ValueReference`1
  isExternal: false
  name: ValueReference<V>
  nameWithType: ValueReference<V>
  fullName: Microsoft.Health.ValueReference<V>
  nameWithType.vb: ValueReference(Of V)
  fullName.vb: Microsoft.Health.ValueReference(Of V)
  name.vb: ValueReference(Of V)
  spec.csharp:
  - uid: Microsoft.Health.ValueReference`1
    name: ValueReference
    nameWithType: ValueReference
    fullName: Microsoft.Health.ValueReference
  - name: <
    nameWithType: <
    fullName: <
  - name: V
    nameWithType: V
    fullName: V
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.ValueReference`1
    name: ValueReference
    nameWithType: ValueReference
    fullName: Microsoft.Health.ValueReference
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: V
    nameWithType: V
    fullName: V
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.XmlFragmentWriter
  commentId: T:Microsoft.Health.XmlFragmentWriter
  parent: Microsoft.Health
  isExternal: false
  name: XmlFragmentWriter
  nameWithType: XmlFragmentWriter
  fullName: Microsoft.Health.XmlFragmentWriter
- uid: Microsoft.Health.DictionaryFile`2
  commentId: T:Microsoft.Health.DictionaryFile`2
  isExternal: false
  name: DictionaryFile<K, V>
  nameWithType: DictionaryFile<K, V>
  fullName: Microsoft.Health.DictionaryFile<K, V>
  nameWithType.vb: DictionaryFile(Of K, V)
  fullName.vb: Microsoft.Health.DictionaryFile(Of K, V)
  name.vb: DictionaryFile(Of K, V)
  spec.csharp:
  - uid: Microsoft.Health.DictionaryFile`2
    name: DictionaryFile
    nameWithType: DictionaryFile
    fullName: Microsoft.Health.DictionaryFile
  - name: <
    nameWithType: <
    fullName: <
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.DictionaryFile`2
    name: DictionaryFile
    nameWithType: DictionaryFile
    fullName: Microsoft.Health.DictionaryFile
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.DictionaryFileIndex`2
  commentId: T:Microsoft.Health.DictionaryFileIndex`2
  isExternal: false
  name: DictionaryFileIndex<K, V>
  nameWithType: DictionaryFileIndex<K, V>
  fullName: Microsoft.Health.DictionaryFileIndex<K, V>
  nameWithType.vb: DictionaryFileIndex(Of K, V)
  fullName.vb: Microsoft.Health.DictionaryFileIndex(Of K, V)
  name.vb: DictionaryFileIndex(Of K, V)
  spec.csharp:
  - uid: Microsoft.Health.DictionaryFileIndex`2
    name: DictionaryFileIndex
    nameWithType: DictionaryFileIndex
    fullName: Microsoft.Health.DictionaryFileIndex
  - name: <
    nameWithType: <
    fullName: <
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.DictionaryFileIndex`2
    name: DictionaryFileIndex
    nameWithType: DictionaryFileIndex
    fullName: Microsoft.Health.DictionaryFileIndex
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.DictionaryFileWriter`2
  commentId: T:Microsoft.Health.DictionaryFileWriter`2
  isExternal: false
  name: DictionaryFileWriter<K, V>
  nameWithType: DictionaryFileWriter<K, V>
  fullName: Microsoft.Health.DictionaryFileWriter<K, V>
  nameWithType.vb: DictionaryFileWriter(Of K, V)
  fullName.vb: Microsoft.Health.DictionaryFileWriter(Of K, V)
  name.vb: DictionaryFileWriter(Of K, V)
  spec.csharp:
  - uid: Microsoft.Health.DictionaryFileWriter`2
    name: DictionaryFileWriter
    nameWithType: DictionaryFileWriter
    fullName: Microsoft.Health.DictionaryFileWriter
  - name: <
    nameWithType: <
    fullName: <
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.DictionaryFileWriter`2
    name: DictionaryFileWriter
    nameWithType: DictionaryFileWriter
    fullName: Microsoft.Health.DictionaryFileWriter
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
