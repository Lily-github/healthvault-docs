### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Utility.Configurations.ConfigurationManager
  commentId: T:Microsoft.Health.Utility.Configurations.ConfigurationManager
  id: ConfigurationManager
  parent: Microsoft.Health.Utility.Configurations
  children:
  - Microsoft.Health.Utility.Configurations.ConfigurationManager.#ctor(System.String)
  - Microsoft.Health.Utility.Configurations.ConfigurationManager.ConfigurationDatabaseConnection
  - Microsoft.Health.Utility.Configurations.ConfigurationManager.CurrentMachineName
  - Microsoft.Health.Utility.Configurations.ConfigurationManager.GetConfigurations(System.String)
  - Microsoft.Health.Utility.Configurations.ConfigurationManager.GetConfigurations(System.String,System.Nullable{System.Int32})
  - Microsoft.Health.Utility.Configurations.ConfigurationManager.GetConfigurationSet(System.String,System.Nullable{System.Int32})
  - Microsoft.Health.Utility.Configurations.ConfigurationManager.GetConfigurationSet(System.String,System.String,System.Nullable{System.Int32})
  - Microsoft.Health.Utility.Configurations.ConfigurationManager.GetCurrentVersion
  - Microsoft.Health.Utility.Configurations.ConfigurationManager.GetFriendlyVersionString(System.String)
  - Microsoft.Health.Utility.Configurations.ConfigurationManager.GetVersionMajor(System.String)
  - Microsoft.Health.Utility.Configurations.ConfigurationManager.GetVersionMinor(System.String)
  - Microsoft.Health.Utility.Configurations.ConfigurationManager.GetVersionStringFromFriendlyFormat(System.String)
  langs:
  - csharp
  - vb
  name: ConfigurationManager
  nameWithType: ConfigurationManager
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationManager
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/ConfigurationManager.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ConfigurationManager
    path: HVConfig/ConfigurationManager.cs
    startLine: 20
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nConfigurationManager\n"
  example: []
  syntax:
    content: public class ConfigurationManager
    content.vb: Public Class ConfigurationManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.Utility.Configurations.ConfigurationManager.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.Utility.Configurations.ConfigurationManager.#ctor(System.String)
  commentId: M:Microsoft.Health.Utility.Configurations.ConfigurationManager.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Health.Utility.Configurations.ConfigurationManager
  langs:
  - csharp
  - vb
  name: ConfigurationManager(String)
  nameWithType: ConfigurationManager.ConfigurationManager(String)
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationManager.ConfigurationManager(System.String)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/ConfigurationManager.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: HVConfig/ConfigurationManager.cs
    startLine: 25
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nConfigurationManagers\n"
  example: []
  syntax:
    content: public ConfigurationManager(string configurationDatabaseConnection)
    content.vb: Public Sub New(configurationDatabaseConnection As String)
    parameters:
    - id: configurationDatabaseConnection
      type: System.String
  overload: Microsoft.Health.Utility.Configurations.ConfigurationManager.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Configurations.ConfigurationManager.ConfigurationDatabaseConnection
  commentId: P:Microsoft.Health.Utility.Configurations.ConfigurationManager.ConfigurationDatabaseConnection
  id: ConfigurationDatabaseConnection
  parent: Microsoft.Health.Utility.Configurations.ConfigurationManager
  langs:
  - csharp
  - vb
  name: ConfigurationDatabaseConnection
  nameWithType: ConfigurationManager.ConfigurationDatabaseConnection
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationManager.ConfigurationDatabaseConnection
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/ConfigurationManager.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ConfigurationDatabaseConnection
    path: HVConfig/ConfigurationManager.cs
    startLine: 42
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nConnection string to configuration database\n"
  example: []
  syntax:
    content: public string ConfigurationDatabaseConnection { get; }
    content.vb: Public ReadOnly Property ConfigurationDatabaseConnection As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.Utility.Configurations.ConfigurationManager.ConfigurationDatabaseConnection*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.Configurations.ConfigurationManager.CurrentMachineName
  commentId: P:Microsoft.Health.Utility.Configurations.ConfigurationManager.CurrentMachineName
  id: CurrentMachineName
  parent: Microsoft.Health.Utility.Configurations.ConfigurationManager
  langs:
  - csharp
  - vb
  name: CurrentMachineName
  nameWithType: ConfigurationManager.CurrentMachineName
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationManager.CurrentMachineName
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/ConfigurationManager.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CurrentMachineName
    path: HVConfig/ConfigurationManager.cs
    startLine: 48
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nGets the current machine name that will be used to look up configuration in db\n"
  example: []
  syntax:
    content: public static string CurrentMachineName { get; }
    content.vb: Public Shared ReadOnly Property CurrentMachineName As String
    parameters: []
    return:
      type: System.String
      description: ''
  overload: Microsoft.Health.Utility.Configurations.ConfigurationManager.CurrentMachineName*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Health.Utility.Configurations.ConfigurationManager.GetConfigurations(System.String)
  commentId: M:Microsoft.Health.Utility.Configurations.ConfigurationManager.GetConfigurations(System.String)
  id: GetConfigurations(System.String)
  parent: Microsoft.Health.Utility.Configurations.ConfigurationManager
  langs:
  - csharp
  - vb
  name: GetConfigurations(String)
  nameWithType: ConfigurationManager.GetConfigurations(String)
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationManager.GetConfigurations(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/ConfigurationManager.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetConfigurations
    path: HVConfig/ConfigurationManager.cs
    startLine: 60
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nRetrieve configurations from database with current version and default increment\n"
  example: []
  syntax:
    content: public ConfigurationDictionary GetConfigurations(string component)
    content.vb: Public Function GetConfigurations(component As String) As ConfigurationDictionary
    parameters:
    - id: component
      type: System.String
    return:
      type: Microsoft.Health.Utility.Configurations.ConfigurationDictionary
  overload: Microsoft.Health.Utility.Configurations.ConfigurationManager.GetConfigurations*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Configurations.ConfigurationManager.GetConfigurations(System.String,System.Nullable{System.Int32})
  commentId: M:Microsoft.Health.Utility.Configurations.ConfigurationManager.GetConfigurations(System.String,System.Nullable{System.Int32})
  id: GetConfigurations(System.String,System.Nullable{System.Int32})
  parent: Microsoft.Health.Utility.Configurations.ConfigurationManager
  langs:
  - csharp
  - vb
  name: GetConfigurations(String, Nullable<Int32>)
  nameWithType: ConfigurationManager.GetConfigurations(String, Nullable<Int32>)
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationManager.GetConfigurations(System.String, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/ConfigurationManager.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetConfigurations
    path: HVConfig/ConfigurationManager.cs
    startLine: 68
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nRetrieve configurations from database with current version and default increment\n"
  example: []
  syntax:
    content: public ConfigurationDictionary GetConfigurations(string component, int ? increment)
    content.vb: Public Function GetConfigurations(component As String, increment As Integer?) As ConfigurationDictionary
    parameters:
    - id: component
      type: System.String
    - id: increment
      type: System.Nullable{System.Int32}
    return:
      type: Microsoft.Health.Utility.Configurations.ConfigurationDictionary
  overload: Microsoft.Health.Utility.Configurations.ConfigurationManager.GetConfigurations*
  nameWithType.vb: ConfigurationManager.GetConfigurations(String, Nullable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Utility.Configurations.ConfigurationManager.GetConfigurations(System.String, System.Nullable(Of System.Int32))
  name.vb: GetConfigurations(String, Nullable(Of Int32))
- uid: Microsoft.Health.Utility.Configurations.ConfigurationManager.GetConfigurationSet(System.String,System.Nullable{System.Int32})
  commentId: M:Microsoft.Health.Utility.Configurations.ConfigurationManager.GetConfigurationSet(System.String,System.Nullable{System.Int32})
  id: GetConfigurationSet(System.String,System.Nullable{System.Int32})
  parent: Microsoft.Health.Utility.Configurations.ConfigurationManager
  langs:
  - csharp
  - vb
  name: GetConfigurationSet(String, Nullable<Int32>)
  nameWithType: ConfigurationManager.GetConfigurationSet(String, Nullable<Int32>)
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationManager.GetConfigurationSet(System.String, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/ConfigurationManager.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetConfigurationSet
    path: HVConfig/ConfigurationManager.cs
    startLine: 76
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nRetrieve configuration set from database with increment specified.\n"
  example: []
  syntax:
    content: public ConfigurationSet GetConfigurationSet(string component, int ? increment)
    content.vb: Public Function GetConfigurationSet(component As String, increment As Integer?) As ConfigurationSet
    parameters:
    - id: component
      type: System.String
    - id: increment
      type: System.Nullable{System.Int32}
    return:
      type: Microsoft.Health.Utility.Configurations.ConfigurationSet
  overload: Microsoft.Health.Utility.Configurations.ConfigurationManager.GetConfigurationSet*
  nameWithType.vb: ConfigurationManager.GetConfigurationSet(String, Nullable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Utility.Configurations.ConfigurationManager.GetConfigurationSet(System.String, System.Nullable(Of System.Int32))
  name.vb: GetConfigurationSet(String, Nullable(Of Int32))
- uid: Microsoft.Health.Utility.Configurations.ConfigurationManager.GetConfigurationSet(System.String,System.String,System.Nullable{System.Int32})
  commentId: M:Microsoft.Health.Utility.Configurations.ConfigurationManager.GetConfigurationSet(System.String,System.String,System.Nullable{System.Int32})
  id: GetConfigurationSet(System.String,System.String,System.Nullable{System.Int32})
  parent: Microsoft.Health.Utility.Configurations.ConfigurationManager
  langs:
  - csharp
  - vb
  name: GetConfigurationSet(String, String, Nullable<Int32>)
  nameWithType: ConfigurationManager.GetConfigurationSet(String, String, Nullable<Int32>)
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationManager.GetConfigurationSet(System.String, System.String, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/ConfigurationManager.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetConfigurationSet
    path: HVConfig/ConfigurationManager.cs
    startLine: 84
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nRetrieve configuration set from database with increment specified.\n"
  example: []
  syntax:
    content: public ConfigurationSet GetConfigurationSet(string startNode, string component, int ? increment)
    content.vb: Public Function GetConfigurationSet(startNode As String, component As String, increment As Integer?) As ConfigurationSet
    parameters:
    - id: startNode
      type: System.String
    - id: component
      type: System.String
    - id: increment
      type: System.Nullable{System.Int32}
    return:
      type: Microsoft.Health.Utility.Configurations.ConfigurationSet
  overload: Microsoft.Health.Utility.Configurations.ConfigurationManager.GetConfigurationSet*
  nameWithType.vb: ConfigurationManager.GetConfigurationSet(String, String, Nullable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Utility.Configurations.ConfigurationManager.GetConfigurationSet(System.String, System.String, System.Nullable(Of System.Int32))
  name.vb: GetConfigurationSet(String, String, Nullable(Of Int32))
- uid: Microsoft.Health.Utility.Configurations.ConfigurationManager.GetCurrentVersion
  commentId: M:Microsoft.Health.Utility.Configurations.ConfigurationManager.GetCurrentVersion
  id: GetCurrentVersion
  parent: Microsoft.Health.Utility.Configurations.ConfigurationManager
  langs:
  - csharp
  - vb
  name: GetCurrentVersion()
  nameWithType: ConfigurationManager.GetCurrentVersion()
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationManager.GetCurrentVersion()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/ConfigurationManager.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetCurrentVersion
    path: HVConfig/ConfigurationManager.cs
    startLine: 125
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nGets the current version in string format that is used in configuration management system.\n"
  example: []
  syntax:
    content: public static string GetCurrentVersion()
    content.vb: Public Shared Function GetCurrentVersion As String
    return:
      type: System.String
  overload: Microsoft.Health.Utility.Configurations.ConfigurationManager.GetCurrentVersion*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Utility.Configurations.ConfigurationManager.GetFriendlyVersionString(System.String)
  commentId: M:Microsoft.Health.Utility.Configurations.ConfigurationManager.GetFriendlyVersionString(System.String)
  id: GetFriendlyVersionString(System.String)
  parent: Microsoft.Health.Utility.Configurations.ConfigurationManager
  langs:
  - csharp
  - vb
  name: GetFriendlyVersionString(String)
  nameWithType: ConfigurationManager.GetFriendlyVersionString(String)
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationManager.GetFriendlyVersionString(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/ConfigurationManager.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetFriendlyVersionString
    path: HVConfig/ConfigurationManager.cs
    startLine: 136
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  syntax:
    content: public static string GetFriendlyVersionString(string version)
    content.vb: Public Shared Function GetFriendlyVersionString(version As String) As String
    parameters:
    - id: version
      type: System.String
    return:
      type: System.String
  overload: Microsoft.Health.Utility.Configurations.ConfigurationManager.GetFriendlyVersionString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Utility.Configurations.ConfigurationManager.GetVersionStringFromFriendlyFormat(System.String)
  commentId: M:Microsoft.Health.Utility.Configurations.ConfigurationManager.GetVersionStringFromFriendlyFormat(System.String)
  id: GetVersionStringFromFriendlyFormat(System.String)
  parent: Microsoft.Health.Utility.Configurations.ConfigurationManager
  langs:
  - csharp
  - vb
  name: GetVersionStringFromFriendlyFormat(String)
  nameWithType: ConfigurationManager.GetVersionStringFromFriendlyFormat(String)
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationManager.GetVersionStringFromFriendlyFormat(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/ConfigurationManager.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetVersionStringFromFriendlyFormat
    path: HVConfig/ConfigurationManager.cs
    startLine: 147
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  syntax:
    content: public static string GetVersionStringFromFriendlyFormat(string version)
    content.vb: Public Shared Function GetVersionStringFromFriendlyFormat(version As String) As String
    parameters:
    - id: version
      type: System.String
    return:
      type: System.String
  overload: Microsoft.Health.Utility.Configurations.ConfigurationManager.GetVersionStringFromFriendlyFormat*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Utility.Configurations.ConfigurationManager.GetVersionMajor(System.String)
  commentId: M:Microsoft.Health.Utility.Configurations.ConfigurationManager.GetVersionMajor(System.String)
  id: GetVersionMajor(System.String)
  parent: Microsoft.Health.Utility.Configurations.ConfigurationManager
  langs:
  - csharp
  - vb
  name: GetVersionMajor(String)
  nameWithType: ConfigurationManager.GetVersionMajor(String)
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationManager.GetVersionMajor(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/ConfigurationManager.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetVersionMajor
    path: HVConfig/ConfigurationManager.cs
    startLine: 157
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  syntax:
    content: public static int GetVersionMajor(string version)
    content.vb: Public Shared Function GetVersionMajor(version As String) As Integer
    parameters:
    - id: version
      type: System.String
    return:
      type: System.Int32
  overload: Microsoft.Health.Utility.Configurations.ConfigurationManager.GetVersionMajor*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Utility.Configurations.ConfigurationManager.GetVersionMinor(System.String)
  commentId: M:Microsoft.Health.Utility.Configurations.ConfigurationManager.GetVersionMinor(System.String)
  id: GetVersionMinor(System.String)
  parent: Microsoft.Health.Utility.Configurations.ConfigurationManager
  langs:
  - csharp
  - vb
  name: GetVersionMinor(String)
  nameWithType: ConfigurationManager.GetVersionMinor(String)
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationManager.GetVersionMinor(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/ConfigurationManager.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetVersionMinor
    path: HVConfig/ConfigurationManager.cs
    startLine: 162
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  syntax:
    content: public static int GetVersionMinor(string version)
    content.vb: Public Shared Function GetVersionMinor(version As String) As Integer
    parameters:
    - id: version
      type: System.String
    return:
      type: System.Int32
  overload: Microsoft.Health.Utility.Configurations.ConfigurationManager.GetVersionMinor*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Health.Utility.Configurations
  commentId: N:Microsoft.Health.Utility.Configurations
  isExternal: false
  name: Microsoft.Health.Utility.Configurations
  nameWithType: Microsoft.Health.Utility.Configurations
  fullName: Microsoft.Health.Utility.Configurations
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Configurations.ConfigurationManager.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<ConfigurationManager>()
  nameWithType: TypeHelper.ValueOrDbNull<ConfigurationManager>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Utility.Configurations.ConfigurationManager>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of ConfigurationManager)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Utility.Configurations.ConfigurationManager)()
  name.vb: ValueOrDbNull(Of ConfigurationManager)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<ConfigurationManager>
    nameWithType: TypeHelper.ValueOrDbNull<ConfigurationManager>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Utility.Configurations.ConfigurationManager>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of ConfigurationManager)
    nameWithType: TypeHelper.ValueOrDbNull(Of ConfigurationManager)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Utility.Configurations.ConfigurationManager)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.Utility.Configurations.ConfigurationManager.#ctor*
  commentId: Overload:Microsoft.Health.Utility.Configurations.ConfigurationManager.#ctor
  isExternal: false
  name: ConfigurationManager
  nameWithType: ConfigurationManager.ConfigurationManager
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationManager.ConfigurationManager
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.Utility.Configurations.ConfigurationManager.ConfigurationDatabaseConnection*
  commentId: Overload:Microsoft.Health.Utility.Configurations.ConfigurationManager.ConfigurationDatabaseConnection
  isExternal: false
  name: ConfigurationDatabaseConnection
  nameWithType: ConfigurationManager.ConfigurationDatabaseConnection
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationManager.ConfigurationDatabaseConnection
- uid: Microsoft.Health.Utility.Configurations.ConfigurationManager.CurrentMachineName*
  commentId: Overload:Microsoft.Health.Utility.Configurations.ConfigurationManager.CurrentMachineName
  isExternal: false
  name: CurrentMachineName
  nameWithType: ConfigurationManager.CurrentMachineName
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationManager.CurrentMachineName
- uid: Microsoft.Health.Utility.Configurations.ConfigurationManager.GetConfigurations*
  commentId: Overload:Microsoft.Health.Utility.Configurations.ConfigurationManager.GetConfigurations
  isExternal: false
  name: GetConfigurations
  nameWithType: ConfigurationManager.GetConfigurations
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationManager.GetConfigurations
- uid: Microsoft.Health.Utility.Configurations.ConfigurationDictionary
  commentId: T:Microsoft.Health.Utility.Configurations.ConfigurationDictionary
  parent: Microsoft.Health.Utility.Configurations
  isExternal: false
  name: ConfigurationDictionary
  nameWithType: ConfigurationDictionary
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationDictionary
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Configurations.ConfigurationManager.GetConfigurationSet*
  commentId: Overload:Microsoft.Health.Utility.Configurations.ConfigurationManager.GetConfigurationSet
  isExternal: false
  name: GetConfigurationSet
  nameWithType: ConfigurationManager.GetConfigurationSet
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationManager.GetConfigurationSet
- uid: Microsoft.Health.Utility.Configurations.ConfigurationSet
  commentId: T:Microsoft.Health.Utility.Configurations.ConfigurationSet
  parent: Microsoft.Health.Utility.Configurations
  isExternal: false
  name: ConfigurationSet
  nameWithType: ConfigurationSet
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationSet
- uid: Microsoft.Health.Utility.Configurations.ConfigurationManager.GetCurrentVersion*
  commentId: Overload:Microsoft.Health.Utility.Configurations.ConfigurationManager.GetCurrentVersion
  isExternal: false
  name: GetCurrentVersion
  nameWithType: ConfigurationManager.GetCurrentVersion
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationManager.GetCurrentVersion
- uid: Microsoft.Health.Utility.Configurations.ConfigurationManager.GetFriendlyVersionString*
  commentId: Overload:Microsoft.Health.Utility.Configurations.ConfigurationManager.GetFriendlyVersionString
  isExternal: false
  name: GetFriendlyVersionString
  nameWithType: ConfigurationManager.GetFriendlyVersionString
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationManager.GetFriendlyVersionString
- uid: Microsoft.Health.Utility.Configurations.ConfigurationManager.GetVersionStringFromFriendlyFormat*
  commentId: Overload:Microsoft.Health.Utility.Configurations.ConfigurationManager.GetVersionStringFromFriendlyFormat
  isExternal: false
  name: GetVersionStringFromFriendlyFormat
  nameWithType: ConfigurationManager.GetVersionStringFromFriendlyFormat
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationManager.GetVersionStringFromFriendlyFormat
- uid: Microsoft.Health.Utility.Configurations.ConfigurationManager.GetVersionMajor*
  commentId: Overload:Microsoft.Health.Utility.Configurations.ConfigurationManager.GetVersionMajor
  isExternal: false
  name: GetVersionMajor
  nameWithType: ConfigurationManager.GetVersionMajor
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationManager.GetVersionMajor
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Health.Utility.Configurations.ConfigurationManager.GetVersionMinor*
  commentId: Overload:Microsoft.Health.Utility.Configurations.ConfigurationManager.GetVersionMinor
  isExternal: false
  name: GetVersionMinor
  nameWithType: ConfigurationManager.GetVersionMinor
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationManager.GetVersionMinor
