### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  commentId: T:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  id: PhraseNormalizer
  parent: Microsoft.Health.PhraseAnalyzer
  children:
  - Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.#ctor(Microsoft.Health.PhraseAnalyzer.Analyzer)
  - Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddConcept(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch,System.String)
  - Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddIndicator(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  - Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddRelated(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch,System.String[])
  - Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSegment(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  - Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSpelling(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch,System.String)
  - Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddStem(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch,System.String)
  - Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddString(System.String)
  - Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSubject(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  - Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSynonyms(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch,System.String[])
  - Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddWords(System.Collections.Generic.IList{System.String},System.Int32,System.Int32)
  - Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.Analyzer
  - Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.BlockType
  - Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.Build(System.Collections.Generic.IList{System.String})
  - Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.BuildPhrase(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  - Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.ConceptType
  - Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.GetBuilder
  - Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.IndicatorType
  - Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.PhoneticType
  - Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.RelatedType
  - Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.RemoveType
  - Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.ReplaceType
  - Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.SpellType
  - Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.StemmerType
  - Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.SubjectType
  - Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.SynonymType
  langs:
  - csharp
  - vb
  name: PhraseNormalizer
  nameWithType: PhraseNormalizer
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/PhraseNormalizer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: PhraseNormalizer
    path: search/PhraseAnalyzer/PhraseNormalizer.cs
    startLine: 28
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\nProvides a data driven phrase normalization pipeline\nAs input, you provide a phrase analyzer that can take a source phrase and produce segments\nannotated with the following TYPES:\n- Block\n- Remove\n- Replace\n- Synonym\n- Related\n- Spell\n- Stem\n- Phonetic\n- Subject\n- Indicator\n- Canonical\n- OTHER\n"
  example: []
  syntax:
    content: public abstract class PhraseNormalizer
    content.vb: Public MustInherit Class PhraseNormalizer
  inheritance:
  - System.Object
  derivedClasses:
  - Microsoft.Health.InvertedIndex.NormalizingWordBreaker
  - Microsoft.Health.InvertedIndex.TextQueryBuilder
  - Microsoft.Health.PhraseAnalyzer.QueryNormalizer
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.BlockType
  commentId: F:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.BlockType
  id: BlockType
  parent: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  langs:
  - csharp
  - vb
  name: BlockType
  nameWithType: PhraseNormalizer.BlockType
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.BlockType
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/PhraseNormalizer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: BlockType
    path: search/PhraseAnalyzer/PhraseNormalizer.cs
    startLine: 33
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\nBlock this phrase entirely because we found an objectionable substring.\n"
  example: []
  syntax:
    content: public const string BlockType = "block"
    content.vb: Public Const BlockType As String = "block"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.RemoveType
  commentId: F:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.RemoveType
  id: RemoveType
  parent: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  langs:
  - csharp
  - vb
  name: RemoveType
  nameWithType: PhraseNormalizer.RemoveType
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.RemoveType
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/PhraseNormalizer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: RemoveType
    path: search/PhraseAnalyzer/PhraseNormalizer.cs
    startLine: 38
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\nRemove this segment.\n"
  example: []
  syntax:
    content: public const string RemoveType = "remove"
    content.vb: Public Const RemoveType As String = "remove"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.ReplaceType
  commentId: F:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.ReplaceType
  id: ReplaceType
  parent: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  langs:
  - csharp
  - vb
  name: ReplaceType
  nameWithType: PhraseNormalizer.ReplaceType
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.ReplaceType
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/PhraseNormalizer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ReplaceType
    path: search/PhraseAnalyzer/PhraseNormalizer.cs
    startLine: 43
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\nReplace this segment.\n"
  example: []
  syntax:
    content: public const string ReplaceType = "replace"
    content.vb: Public Const ReplaceType As String = "replace"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.SynonymType
  commentId: F:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.SynonymType
  id: SynonymType
  parent: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  langs:
  - csharp
  - vb
  name: SynonymType
  nameWithType: PhraseNormalizer.SynonymType
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.SynonymType
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/PhraseNormalizer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SynonymType
    path: search/PhraseAnalyzer/PhraseNormalizer.cs
    startLine: 48
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\nReplace this segment with this full synonym set.\n"
  example: []
  syntax:
    content: public const string SynonymType = "synonym"
    content.vb: Public Const SynonymType As String = "synonym"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.RelatedType
  commentId: F:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.RelatedType
  id: RelatedType
  parent: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  langs:
  - csharp
  - vb
  name: RelatedType
  nameWithType: PhraseNormalizer.RelatedType
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.RelatedType
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/PhraseNormalizer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: RelatedType
    path: search/PhraseAnalyzer/PhraseNormalizer.cs
    startLine: 53
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\nThis segment has some related terms - BUT NOT SYNONYMOUS.\n"
  example: []
  syntax:
    content: public const string RelatedType = "related"
    content.vb: Public Const RelatedType As String = "related"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.SpellType
  commentId: F:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.SpellType
  id: SpellType
  parent: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  langs:
  - csharp
  - vb
  name: SpellType
  nameWithType: PhraseNormalizer.SpellType
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.SpellType
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/PhraseNormalizer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SpellType
    path: search/PhraseAnalyzer/PhraseNormalizer.cs
    startLine: 58
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\nThis segment has a spelling correction.\n"
  example: []
  syntax:
    content: public const string SpellType = "spelling"
    content.vb: Public Const SpellType As String = "spelling"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.StemmerType
  commentId: F:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.StemmerType
  id: StemmerType
  parent: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  langs:
  - csharp
  - vb
  name: StemmerType
  nameWithType: PhraseNormalizer.StemmerType
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.StemmerType
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/PhraseNormalizer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: StemmerType
    path: search/PhraseAnalyzer/PhraseNormalizer.cs
    startLine: 63
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\nThe stemmed version of this segment.\n"
  example: []
  syntax:
    content: public const string StemmerType = "stem"
    content.vb: Public Const StemmerType As String = "stem"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.PhoneticType
  commentId: F:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.PhoneticType
  id: PhoneticType
  parent: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  langs:
  - csharp
  - vb
  name: PhoneticType
  nameWithType: PhraseNormalizer.PhoneticType
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.PhoneticType
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/PhraseNormalizer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: PhoneticType
    path: search/PhraseAnalyzer/PhraseNormalizer.cs
    startLine: 68
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\nPhonetic encodings of this segment.\n"
  example: []
  syntax:
    content: public const string PhoneticType = "phonetic"
    content.vb: Public Const PhoneticType As String = "phonetic"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.SubjectType
  commentId: F:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.SubjectType
  id: SubjectType
  parent: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  langs:
  - csharp
  - vb
  name: SubjectType
  nameWithType: PhraseNormalizer.SubjectType
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.SubjectType
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/PhraseNormalizer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SubjectType
    path: search/PhraseAnalyzer/PhraseNormalizer.cs
    startLine: 73
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\nAn identified subject.\n"
  example: []
  syntax:
    content: public const string SubjectType = "subject"
    content.vb: Public Const SubjectType As String = "subject"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.IndicatorType
  commentId: F:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.IndicatorType
  id: IndicatorType
  parent: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  langs:
  - csharp
  - vb
  name: IndicatorType
  nameWithType: PhraseNormalizer.IndicatorType
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.IndicatorType
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/PhraseNormalizer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: IndicatorType
    path: search/PhraseAnalyzer/PhraseNormalizer.cs
    startLine: 78
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\nAn identified indicator.\n"
  example: []
  syntax:
    content: public const string IndicatorType = "indicator"
    content.vb: Public Const IndicatorType As String = "indicator"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.ConceptType
  commentId: F:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.ConceptType
  id: ConceptType
  parent: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  langs:
  - csharp
  - vb
  name: ConceptType
  nameWithType: PhraseNormalizer.ConceptType
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.ConceptType
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/PhraseNormalizer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ConceptType
    path: search/PhraseAnalyzer/PhraseNormalizer.cs
    startLine: 83
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\nSynoynyms reduced to a canonical representation.\n"
  example: []
  syntax:
    content: public const string ConceptType = "concept"
    content.vb: Public Const ConceptType As String = "concept"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.#ctor(Microsoft.Health.PhraseAnalyzer.Analyzer)
  commentId: M:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.#ctor(Microsoft.Health.PhraseAnalyzer.Analyzer)
  id: '#ctor(Microsoft.Health.PhraseAnalyzer.Analyzer)'
  parent: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  langs:
  - csharp
  - vb
  name: PhraseNormalizer(Analyzer)
  nameWithType: PhraseNormalizer.PhraseNormalizer(Analyzer)
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.PhraseNormalizer(Microsoft.Health.PhraseAnalyzer.Analyzer)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/PhraseNormalizer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: search/PhraseAnalyzer/PhraseNormalizer.cs
    startLine: 93
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: protected PhraseNormalizer(Analyzer analyzer)
    content.vb: Protected Sub New(analyzer As Analyzer)
    parameters:
    - id: analyzer
      type: Microsoft.Health.PhraseAnalyzer.Analyzer
      description: ''
  overload: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.Analyzer
  commentId: P:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.Analyzer
  id: Analyzer
  parent: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  langs:
  - csharp
  - vb
  name: Analyzer
  nameWithType: PhraseNormalizer.Analyzer
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.Analyzer
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/PhraseNormalizer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Analyzer
    path: search/PhraseAnalyzer/PhraseNormalizer.cs
    startLine: 101
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: public Analyzer Analyzer { get; }
    content.vb: Public ReadOnly Property Analyzer As Analyzer
    parameters: []
    return:
      type: Microsoft.Health.PhraseAnalyzer.Analyzer
  overload: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.Analyzer*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.Build(System.Collections.Generic.IList{System.String})
  commentId: M:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.Build(System.Collections.Generic.IList{System.String})
  id: Build(System.Collections.Generic.IList{System.String})
  parent: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  langs:
  - csharp
  - vb
  name: Build(IList<String>)
  nameWithType: PhraseNormalizer.Build(IList<String>)
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.Build(System.Collections.Generic.IList<System.String>)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/PhraseNormalizer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Build
    path: search/PhraseAnalyzer/PhraseNormalizer.cs
    startLine: 114
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: protected bool Build(IList<string> words)
    content.vb: Protected Function Build(words As IList(Of String)) As Boolean
    parameters:
    - id: words
      type: System.Collections.Generic.IList{System.String}
      description: ''
    return:
      type: System.Boolean
      description: ''
  overload: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.Build*
  nameWithType.vb: PhraseNormalizer.Build(IList(Of String))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.Build(System.Collections.Generic.IList(Of System.String))
  name.vb: Build(IList(Of String))
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.GetBuilder
  commentId: M:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.GetBuilder
  id: GetBuilder
  parent: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  langs:
  - csharp
  - vb
  name: GetBuilder()
  nameWithType: PhraseNormalizer.GetBuilder()
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.GetBuilder()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/PhraseNormalizer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetBuilder
    path: search/PhraseAnalyzer/PhraseNormalizer.cs
    startLine: 233
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: protected SentenceBuilder GetBuilder()
    content.vb: Protected Function GetBuilder As SentenceBuilder
    return:
      type: Microsoft.Health.PhraseAnalyzer.SentenceBuilder
      description: ''
  overload: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.GetBuilder*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.BuildPhrase(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  commentId: M:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.BuildPhrase(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  id: BuildPhrase(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  parent: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  langs:
  - csharp
  - vb
  name: BuildPhrase(IList<String>, AnalyzerMatch)
  nameWithType: PhraseNormalizer.BuildPhrase(IList<String>, AnalyzerMatch)
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.BuildPhrase(System.Collections.Generic.IList<System.String>, Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/PhraseNormalizer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: BuildPhrase
    path: search/PhraseAnalyzer/PhraseNormalizer.cs
    startLine: 253
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: protected string BuildPhrase(IList<string> words, AnalyzerMatch segment)
    content.vb: Protected Function BuildPhrase(words As IList(Of String), segment As AnalyzerMatch) As String
    parameters:
    - id: words
      type: System.Collections.Generic.IList{System.String}
      description: ''
    - id: segment
      type: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
      description: ''
    return:
      type: System.String
      description: ''
  overload: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.BuildPhrase*
  nameWithType.vb: PhraseNormalizer.BuildPhrase(IList(Of String), AnalyzerMatch)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.BuildPhrase(System.Collections.Generic.IList(Of System.String), Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  name.vb: BuildPhrase(IList(Of String), AnalyzerMatch)
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddWords(System.Collections.Generic.IList{System.String},System.Int32,System.Int32)
  commentId: M:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddWords(System.Collections.Generic.IList{System.String},System.Int32,System.Int32)
  id: AddWords(System.Collections.Generic.IList{System.String},System.Int32,System.Int32)
  parent: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  langs:
  - csharp
  - vb
  name: AddWords(IList<String>, Int32, Int32)
  nameWithType: PhraseNormalizer.AddWords(IList<String>, Int32, Int32)
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddWords(System.Collections.Generic.IList<System.String>, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/PhraseNormalizer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AddWords
    path: search/PhraseAnalyzer/PhraseNormalizer.cs
    startLine: 276
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: protected void AddWords(IList<string> words, int startAt, int endAt)
    content.vb: Protected Sub AddWords(words As IList(Of String), startAt As Integer, endAt As Integer)
    parameters:
    - id: words
      type: System.Collections.Generic.IList{System.String}
      description: ''
    - id: startAt
      type: System.Int32
      description: ''
    - id: endAt
      type: System.Int32
      description: ''
  overload: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddWords*
  nameWithType.vb: PhraseNormalizer.AddWords(IList(Of String), Int32, Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddWords(System.Collections.Generic.IList(Of System.String), System.Int32, System.Int32)
  name.vb: AddWords(IList(Of String), Int32, Int32)
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddString(System.String)
  commentId: M:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddString(System.String)
  id: AddString(System.String)
  parent: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  langs:
  - csharp
  - vb
  name: AddString(String)
  nameWithType: PhraseNormalizer.AddString(String)
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddString(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/PhraseNormalizer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AddString
    path: search/PhraseAnalyzer/PhraseNormalizer.cs
    startLine: 288
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: protected abstract void AddString(string value)
    content.vb: Protected MustOverride Sub AddString(value As String)
    parameters:
    - id: value
      type: System.String
      description: ''
  overload: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddString*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSegment(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  commentId: M:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSegment(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  id: AddSegment(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  parent: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  langs:
  - csharp
  - vb
  name: AddSegment(IList<String>, AnalyzerMatch)
  nameWithType: PhraseNormalizer.AddSegment(IList<String>, AnalyzerMatch)
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSegment(System.Collections.Generic.IList<System.String>, Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/PhraseNormalizer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AddSegment
    path: search/PhraseAnalyzer/PhraseNormalizer.cs
    startLine: 295
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: protected virtual void AddSegment(IList<string> words, AnalyzerMatch segment)
    content.vb: Protected Overridable Sub AddSegment(words As IList(Of String), segment As AnalyzerMatch)
    parameters:
    - id: words
      type: System.Collections.Generic.IList{System.String}
      description: ''
    - id: segment
      type: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
      description: ''
  overload: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSegment*
  nameWithType.vb: PhraseNormalizer.AddSegment(IList(Of String), AnalyzerMatch)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSegment(System.Collections.Generic.IList(Of System.String), Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  name.vb: AddSegment(IList(Of String), AnalyzerMatch)
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSynonyms(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch,System.String[])
  commentId: M:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSynonyms(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch,System.String[])
  id: AddSynonyms(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch,System.String[])
  parent: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  langs:
  - csharp
  - vb
  name: AddSynonyms(IList<String>, AnalyzerMatch, String[])
  nameWithType: PhraseNormalizer.AddSynonyms(IList<String>, AnalyzerMatch, String[])
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSynonyms(System.Collections.Generic.IList<System.String>, Microsoft.Health.PhraseAnalyzer.AnalyzerMatch, System.String[])
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/PhraseNormalizer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AddSynonyms
    path: search/PhraseAnalyzer/PhraseNormalizer.cs
    startLine: 306
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: protected virtual void AddSynonyms(IList<string> words, AnalyzerMatch segment, string[] synonymSet)
    content.vb: Protected Overridable Sub AddSynonyms(words As IList(Of String), segment As AnalyzerMatch, synonymSet As String())
    parameters:
    - id: words
      type: System.Collections.Generic.IList{System.String}
      description: ''
    - id: segment
      type: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
      description: ''
    - id: synonymSet
      type: System.String[]
      description: ''
  overload: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSynonyms*
  nameWithType.vb: PhraseNormalizer.AddSynonyms(IList(Of String), AnalyzerMatch, String())
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSynonyms(System.Collections.Generic.IList(Of System.String), Microsoft.Health.PhraseAnalyzer.AnalyzerMatch, System.String())
  name.vb: AddSynonyms(IList(Of String), AnalyzerMatch, String())
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddRelated(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch,System.String[])
  commentId: M:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddRelated(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch,System.String[])
  id: AddRelated(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch,System.String[])
  parent: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  langs:
  - csharp
  - vb
  name: AddRelated(IList<String>, AnalyzerMatch, String[])
  nameWithType: PhraseNormalizer.AddRelated(IList<String>, AnalyzerMatch, String[])
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddRelated(System.Collections.Generic.IList<System.String>, Microsoft.Health.PhraseAnalyzer.AnalyzerMatch, System.String[])
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/PhraseNormalizer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AddRelated
    path: search/PhraseAnalyzer/PhraseNormalizer.cs
    startLine: 318
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: protected virtual void AddRelated(IList<string> words, AnalyzerMatch segment, string[] relatedSet)
    content.vb: Protected Overridable Sub AddRelated(words As IList(Of String), segment As AnalyzerMatch, relatedSet As String())
    parameters:
    - id: words
      type: System.Collections.Generic.IList{System.String}
      description: ''
    - id: segment
      type: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
      description: ''
    - id: relatedSet
      type: System.String[]
      description: ''
  overload: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddRelated*
  nameWithType.vb: PhraseNormalizer.AddRelated(IList(Of String), AnalyzerMatch, String())
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddRelated(System.Collections.Generic.IList(Of System.String), Microsoft.Health.PhraseAnalyzer.AnalyzerMatch, System.String())
  name.vb: AddRelated(IList(Of String), AnalyzerMatch, String())
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddStem(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch,System.String)
  commentId: M:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddStem(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch,System.String)
  id: AddStem(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch,System.String)
  parent: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  langs:
  - csharp
  - vb
  name: AddStem(IList<String>, AnalyzerMatch, String)
  nameWithType: PhraseNormalizer.AddStem(IList<String>, AnalyzerMatch, String)
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddStem(System.Collections.Generic.IList<System.String>, Microsoft.Health.PhraseAnalyzer.AnalyzerMatch, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/PhraseNormalizer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AddStem
    path: search/PhraseAnalyzer/PhraseNormalizer.cs
    startLine: 332
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: protected virtual void AddStem(IList<string> words, AnalyzerMatch segment, string stem)
    content.vb: Protected Overridable Sub AddStem(words As IList(Of String), segment As AnalyzerMatch, stem As String)
    parameters:
    - id: words
      type: System.Collections.Generic.IList{System.String}
      description: ''
    - id: segment
      type: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
      description: ''
    - id: stem
      type: System.String
      description: ''
  overload: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddStem*
  nameWithType.vb: PhraseNormalizer.AddStem(IList(Of String), AnalyzerMatch, String)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddStem(System.Collections.Generic.IList(Of System.String), Microsoft.Health.PhraseAnalyzer.AnalyzerMatch, System.String)
  name.vb: AddStem(IList(Of String), AnalyzerMatch, String)
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSpelling(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch,System.String)
  commentId: M:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSpelling(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch,System.String)
  id: AddSpelling(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch,System.String)
  parent: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  langs:
  - csharp
  - vb
  name: AddSpelling(IList<String>, AnalyzerMatch, String)
  nameWithType: PhraseNormalizer.AddSpelling(IList<String>, AnalyzerMatch, String)
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSpelling(System.Collections.Generic.IList<System.String>, Microsoft.Health.PhraseAnalyzer.AnalyzerMatch, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/PhraseNormalizer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AddSpelling
    path: search/PhraseAnalyzer/PhraseNormalizer.cs
    startLine: 344
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: protected virtual void AddSpelling(IList<string> words, AnalyzerMatch segment, string spelling)
    content.vb: Protected Overridable Sub AddSpelling(words As IList(Of String), segment As AnalyzerMatch, spelling As String)
    parameters:
    - id: words
      type: System.Collections.Generic.IList{System.String}
      description: ''
    - id: segment
      type: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
      description: ''
    - id: spelling
      type: System.String
      description: ''
  overload: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSpelling*
  nameWithType.vb: PhraseNormalizer.AddSpelling(IList(Of String), AnalyzerMatch, String)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSpelling(System.Collections.Generic.IList(Of System.String), Microsoft.Health.PhraseAnalyzer.AnalyzerMatch, System.String)
  name.vb: AddSpelling(IList(Of String), AnalyzerMatch, String)
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSubject(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  commentId: M:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSubject(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  id: AddSubject(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  parent: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  langs:
  - csharp
  - vb
  name: AddSubject(IList<String>, AnalyzerMatch)
  nameWithType: PhraseNormalizer.AddSubject(IList<String>, AnalyzerMatch)
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSubject(System.Collections.Generic.IList<System.String>, Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/PhraseNormalizer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AddSubject
    path: search/PhraseAnalyzer/PhraseNormalizer.cs
    startLine: 355
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: protected virtual void AddSubject(IList<string> words, AnalyzerMatch segment)
    content.vb: Protected Overridable Sub AddSubject(words As IList(Of String), segment As AnalyzerMatch)
    parameters:
    - id: words
      type: System.Collections.Generic.IList{System.String}
      description: ''
    - id: segment
      type: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
      description: ''
  overload: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSubject*
  nameWithType.vb: PhraseNormalizer.AddSubject(IList(Of String), AnalyzerMatch)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSubject(System.Collections.Generic.IList(Of System.String), Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  name.vb: AddSubject(IList(Of String), AnalyzerMatch)
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddIndicator(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  commentId: M:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddIndicator(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  id: AddIndicator(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  parent: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  langs:
  - csharp
  - vb
  name: AddIndicator(IList<String>, AnalyzerMatch)
  nameWithType: PhraseNormalizer.AddIndicator(IList<String>, AnalyzerMatch)
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddIndicator(System.Collections.Generic.IList<System.String>, Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/PhraseNormalizer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AddIndicator
    path: search/PhraseAnalyzer/PhraseNormalizer.cs
    startLine: 365
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: protected virtual void AddIndicator(IList<string> words, AnalyzerMatch segment)
    content.vb: Protected Overridable Sub AddIndicator(words As IList(Of String), segment As AnalyzerMatch)
    parameters:
    - id: words
      type: System.Collections.Generic.IList{System.String}
      description: ''
    - id: segment
      type: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
      description: ''
  overload: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddIndicator*
  nameWithType.vb: PhraseNormalizer.AddIndicator(IList(Of String), AnalyzerMatch)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddIndicator(System.Collections.Generic.IList(Of System.String), Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  name.vb: AddIndicator(IList(Of String), AnalyzerMatch)
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddConcept(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch,System.String)
  commentId: M:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddConcept(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch,System.String)
  id: AddConcept(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch,System.String)
  parent: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer
  langs:
  - csharp
  - vb
  name: AddConcept(IList<String>, AnalyzerMatch, String)
  nameWithType: PhraseNormalizer.AddConcept(IList<String>, AnalyzerMatch, String)
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddConcept(System.Collections.Generic.IList<System.String>, Microsoft.Health.PhraseAnalyzer.AnalyzerMatch, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/PhraseNormalizer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AddConcept
    path: search/PhraseAnalyzer/PhraseNormalizer.cs
    startLine: 376
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: protected virtual void AddConcept(IList<string> words, AnalyzerMatch segment, string concept)
    content.vb: Protected Overridable Sub AddConcept(words As IList(Of String), segment As AnalyzerMatch, concept As String)
    parameters:
    - id: words
      type: System.Collections.Generic.IList{System.String}
      description: ''
    - id: segment
      type: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
      description: ''
    - id: concept
      type: System.String
      description: ''
  overload: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddConcept*
  nameWithType.vb: PhraseNormalizer.AddConcept(IList(Of String), AnalyzerMatch, String)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddConcept(System.Collections.Generic.IList(Of System.String), Microsoft.Health.PhraseAnalyzer.AnalyzerMatch, System.String)
  name.vb: AddConcept(IList(Of String), AnalyzerMatch, String)
references:
- uid: Microsoft.Health.PhraseAnalyzer
  commentId: N:Microsoft.Health.PhraseAnalyzer
  isExternal: false
  name: Microsoft.Health.PhraseAnalyzer
  nameWithType: Microsoft.Health.PhraseAnalyzer
  fullName: Microsoft.Health.PhraseAnalyzer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<PhraseNormalizer>()
  nameWithType: TypeHelper.ValueOrDbNull<PhraseNormalizer>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.PhraseAnalyzer.PhraseNormalizer>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of PhraseNormalizer)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.PhraseAnalyzer.PhraseNormalizer)()
  name.vb: ValueOrDbNull(Of PhraseNormalizer)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<PhraseNormalizer>
    nameWithType: TypeHelper.ValueOrDbNull<PhraseNormalizer>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.PhraseAnalyzer.PhraseNormalizer>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of PhraseNormalizer)
    nameWithType: TypeHelper.ValueOrDbNull(Of PhraseNormalizer)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.PhraseAnalyzer.PhraseNormalizer)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.#ctor*
  commentId: Overload:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.#ctor
  isExternal: false
  name: PhraseNormalizer
  nameWithType: PhraseNormalizer.PhraseNormalizer
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.PhraseNormalizer
- uid: Microsoft.Health.PhraseAnalyzer.Analyzer
  commentId: T:Microsoft.Health.PhraseAnalyzer.Analyzer
  parent: Microsoft.Health.PhraseAnalyzer
  isExternal: false
  name: Analyzer
  nameWithType: Analyzer
  fullName: Microsoft.Health.PhraseAnalyzer.Analyzer
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.Analyzer*
  commentId: Overload:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.Analyzer
  isExternal: false
  name: Analyzer
  nameWithType: PhraseNormalizer.Analyzer
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.Analyzer
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.Build*
  commentId: Overload:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.Build
  isExternal: false
  name: Build
  nameWithType: PhraseNormalizer.Build
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.Build
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.GetBuilder*
  commentId: Overload:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.GetBuilder
  isExternal: false
  name: GetBuilder
  nameWithType: PhraseNormalizer.GetBuilder
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.GetBuilder
- uid: Microsoft.Health.PhraseAnalyzer.SentenceBuilder
  commentId: T:Microsoft.Health.PhraseAnalyzer.SentenceBuilder
  parent: Microsoft.Health.PhraseAnalyzer
  isExternal: false
  name: SentenceBuilder
  nameWithType: SentenceBuilder
  fullName: Microsoft.Health.PhraseAnalyzer.SentenceBuilder
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.BuildPhrase*
  commentId: Overload:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.BuildPhrase
  isExternal: false
  name: BuildPhrase
  nameWithType: PhraseNormalizer.BuildPhrase
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.BuildPhrase
- uid: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
  commentId: T:Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
  parent: Microsoft.Health.PhraseAnalyzer
  isExternal: false
  name: AnalyzerMatch
  nameWithType: AnalyzerMatch
  fullName: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddWords*
  commentId: Overload:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddWords
  isExternal: false
  name: AddWords
  nameWithType: PhraseNormalizer.AddWords
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddWords
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddString*
  commentId: Overload:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddString
  isExternal: false
  name: AddString
  nameWithType: PhraseNormalizer.AddString
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddString
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSegment*
  commentId: Overload:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSegment
  isExternal: false
  name: AddSegment
  nameWithType: PhraseNormalizer.AddSegment
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSegment
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSynonyms*
  commentId: Overload:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSynonyms
  isExternal: false
  name: AddSynonyms
  nameWithType: PhraseNormalizer.AddSynonyms
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSynonyms
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddRelated*
  commentId: Overload:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddRelated
  isExternal: false
  name: AddRelated
  nameWithType: PhraseNormalizer.AddRelated
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddRelated
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddStem*
  commentId: Overload:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddStem
  isExternal: false
  name: AddStem
  nameWithType: PhraseNormalizer.AddStem
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddStem
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSpelling*
  commentId: Overload:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSpelling
  isExternal: false
  name: AddSpelling
  nameWithType: PhraseNormalizer.AddSpelling
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSpelling
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSubject*
  commentId: Overload:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSubject
  isExternal: false
  name: AddSubject
  nameWithType: PhraseNormalizer.AddSubject
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddSubject
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddIndicator*
  commentId: Overload:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddIndicator
  isExternal: false
  name: AddIndicator
  nameWithType: PhraseNormalizer.AddIndicator
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddIndicator
- uid: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddConcept*
  commentId: Overload:Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddConcept
  isExternal: false
  name: AddConcept
  nameWithType: PhraseNormalizer.AddConcept
  fullName: Microsoft.Health.PhraseAnalyzer.PhraseNormalizer.AddConcept
