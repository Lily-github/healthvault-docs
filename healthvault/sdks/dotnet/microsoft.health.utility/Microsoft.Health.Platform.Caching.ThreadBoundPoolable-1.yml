### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1
  commentId: T:Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1
  id: ThreadBoundPoolable`1
  parent: Microsoft.Health.Platform.Caching
  children:
  - Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1.Create(`0,Microsoft.Health.Platform.Caching.Pool{`0,Microsoft.Health.Platform.Caching.ThreadBoundPoolable{`0}})
  - Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1.Dispose
  - Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1.Dispose(System.Boolean)
  - Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1.Finalize
  - Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1.Item
  - Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1.OwnerThreadId
  langs:
  - csharp
  - vb
  name: ThreadBoundPoolable<T>
  nameWithType: ThreadBoundPoolable<T>
  fullName: Microsoft.Health.Platform.Caching.ThreadBoundPoolable<T>
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/Pool.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ThreadBoundPoolable
    path: utilities/Pool.cs
    startLine: 116
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Platform.Caching
  summary: "\n\n"
  example: []
  syntax:
    content: 'public sealed class ThreadBoundPoolable<T> : IDisposable where T : class'
    content.vb: >-
      Public NotInheritable Class ThreadBoundPoolable(Of T As Class)
          Implements IDisposable
    typeParameters:
    - id: T
      description: ''
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  nameWithType.vb: ThreadBoundPoolable(Of T)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  fullName.vb: Microsoft.Health.Platform.Caching.ThreadBoundPoolable(Of T)
  name.vb: ThreadBoundPoolable(Of T)
- uid: Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1.Create(`0,Microsoft.Health.Platform.Caching.Pool{`0,Microsoft.Health.Platform.Caching.ThreadBoundPoolable{`0}})
  commentId: M:Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1.Create(`0,Microsoft.Health.Platform.Caching.Pool{`0,Microsoft.Health.Platform.Caching.ThreadBoundPoolable{`0}})
  id: Create(`0,Microsoft.Health.Platform.Caching.Pool{`0,Microsoft.Health.Platform.Caching.ThreadBoundPoolable{`0}})
  parent: Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1
  langs:
  - csharp
  - vb
  name: Create(T, Pool<T, ThreadBoundPoolable<T>>)
  nameWithType: ThreadBoundPoolable<T>.Create(T, Pool<T, ThreadBoundPoolable<T>>)
  fullName: Microsoft.Health.Platform.Caching.ThreadBoundPoolable<T>.Create(T, Microsoft.Health.Platform.Caching.Pool<T, Microsoft.Health.Platform.Caching.ThreadBoundPoolable<T>>)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/Pool.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Create
    path: utilities/Pool.cs
    startLine: 127
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Platform.Caching
  summary: "\nCreates a thread bound poolable instance with specified parameters.\n"
  example: []
  syntax:
    content: public static ThreadBoundPoolable<T> Create(T item, Pool<T, ThreadBoundPoolable<T>> pool)
    content.vb: Public Shared Function Create(item As T, pool As Pool(Of T, ThreadBoundPoolable(Of T))) As ThreadBoundPoolable(Of T)
    parameters:
    - id: item
      type: '{T}'
      description: ''
    - id: pool
      type: Microsoft.Health.Platform.Caching.Pool{{T},Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1}
      description: ''
    return:
      type: Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1
      description: ''
  overload: Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1.Create*
  nameWithType.vb: ThreadBoundPoolable(Of T).Create(T, Pool(Of T, ThreadBoundPoolable(Of T)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Health.Platform.Caching.ThreadBoundPoolable(Of T).Create(T, Microsoft.Health.Platform.Caching.Pool(Of T, Microsoft.Health.Platform.Caching.ThreadBoundPoolable(Of T)))
  name.vb: Create(T, Pool(Of T, ThreadBoundPoolable(Of T)))
- uid: Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1.Finalize
  commentId: M:Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1.Finalize
  id: Finalize
  parent: Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1
  langs:
  - csharp
  - vb
  name: Finalize()
  nameWithType: ThreadBoundPoolable<T>.Finalize()
  fullName: Microsoft.Health.Platform.Caching.ThreadBoundPoolable<T>.Finalize()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/Pool.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Finalize
    path: utilities/Pool.cs
    startLine: 159
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Platform.Caching
  summary: "\nDisposes the instance with default parameters. \n"
  example: []
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  overload: Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1.Finalize*
  nameWithType.vb: ThreadBoundPoolable(Of T).Finalize()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.Health.Platform.Caching.ThreadBoundPoolable(Of T).Finalize()
- uid: Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1.Dispose
  commentId: M:Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1.Dispose
  id: Dispose
  parent: Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: ThreadBoundPoolable<T>.Dispose()
  fullName: Microsoft.Health.Platform.Caching.ThreadBoundPoolable<T>.Dispose()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/Pool.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Dispose
    path: utilities/Pool.cs
    startLine: 169
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Platform.Caching
  summary: "\nDisposes the instance with default parameters. \n"
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1.Dispose*
  implements:
  - System.IDisposable.Dispose
  nameWithType.vb: ThreadBoundPoolable(Of T).Dispose()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Platform.Caching.ThreadBoundPoolable(Of T).Dispose()
- uid: Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1.Dispose(System.Boolean)
  commentId: M:Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: ThreadBoundPoolable<T>.Dispose(Boolean)
  fullName: Microsoft.Health.Platform.Caching.ThreadBoundPoolable<T>.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/Pool.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Dispose
    path: utilities/Pool.cs
    startLine: 187
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Platform.Caching
  summary: "\nDisposes the instance with specified parameter. \n"
  remarks: "\nEnquene the item if the pool is not null, otherwise\ndispose everything. \n"
  example: []
  syntax:
    content: public void Dispose(bool isExplicitDisposal)
    content.vb: Public Sub Dispose(isExplicitDisposal As Boolean)
    parameters:
    - id: isExplicitDisposal
      type: System.Boolean
      description: ''
  overload: Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1.Dispose*
  nameWithType.vb: ThreadBoundPoolable(Of T).Dispose(Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Platform.Caching.ThreadBoundPoolable(Of T).Dispose(System.Boolean)
- uid: Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1.Item
  commentId: P:Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1.Item
  id: Item
  parent: Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1
  langs:
  - csharp
  - vb
  name: Item
  nameWithType: ThreadBoundPoolable<T>.Item
  fullName: Microsoft.Health.Platform.Caching.ThreadBoundPoolable<T>.Item
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/Pool.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Item
    path: utilities/Pool.cs
    startLine: 221
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Platform.Caching
  summary: "\nGets item that belong to the owner thread. \n"
  example: []
  syntax:
    content: public T Item { get; }
    content.vb: Public ReadOnly Property Item As T
    parameters: []
    return:
      type: '{T}'
  overload: Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1.Item*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nIf the owner thread is not equal to the calling thread. \n"
  nameWithType.vb: ThreadBoundPoolable(Of T).Item
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.Health.Platform.Caching.ThreadBoundPoolable(Of T).Item
- uid: Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1.OwnerThreadId
  commentId: F:Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1.OwnerThreadId
  id: OwnerThreadId
  parent: Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1
  langs:
  - csharp
  - vb
  name: OwnerThreadId
  nameWithType: ThreadBoundPoolable<T>.OwnerThreadId
  fullName: Microsoft.Health.Platform.Caching.ThreadBoundPoolable<T>.OwnerThreadId
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/Pool.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: OwnerThreadId
    path: utilities/Pool.cs
    startLine: 239
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Platform.Caching
  summary: "\nGets the owner thread Id.\n"
  example: []
  syntax:
    content: public readonly int OwnerThreadId
    content.vb: Public ReadOnly OwnerThreadId As Integer
    return:
      type: System.Int32
  nameWithType.vb: ThreadBoundPoolable(Of T).OwnerThreadId
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.Health.Platform.Caching.ThreadBoundPoolable(Of T).OwnerThreadId
references:
- uid: Microsoft.Health.Platform.Caching
  commentId: N:Microsoft.Health.Platform.Caching
  isExternal: false
  name: Microsoft.Health.Platform.Caching
  nameWithType: Microsoft.Health.Platform.Caching
  fullName: Microsoft.Health.Platform.Caching
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<ThreadBoundPoolable<T>>()
  nameWithType: TypeHelper.ValueOrDbNull<ThreadBoundPoolable<T>>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Platform.Caching.ThreadBoundPoolable<T>>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of ThreadBoundPoolable(Of T))()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Platform.Caching.ThreadBoundPoolable(Of T))()
  name.vb: ValueOrDbNull(Of ThreadBoundPoolable(Of T))()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<ThreadBoundPoolable<T>>
    nameWithType: TypeHelper.ValueOrDbNull<ThreadBoundPoolable<T>>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Platform.Caching.ThreadBoundPoolable<T>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of ThreadBoundPoolable(Of T))
    nameWithType: TypeHelper.ValueOrDbNull(Of ThreadBoundPoolable(Of T))
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Platform.Caching.ThreadBoundPoolable(Of T))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1.Create*
  commentId: Overload:Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1.Create
  isExternal: false
  name: Create
  nameWithType: ThreadBoundPoolable<T>.Create
  fullName: Microsoft.Health.Platform.Caching.ThreadBoundPoolable<T>.Create
  nameWithType.vb: ThreadBoundPoolable(Of T).Create
  fullName.vb: Microsoft.Health.Platform.Caching.ThreadBoundPoolable(Of T).Create
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: Microsoft.Health.Platform.Caching.Pool{{T},Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1}
  commentId: T:Microsoft.Health.Platform.Caching.Pool{`0,Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1}
  parent: Microsoft.Health.Platform.Caching
  definition: Microsoft.Health.Platform.Caching.Pool`2
  name: Pool<T, ThreadBoundPoolable<T>>
  nameWithType: Pool<T, ThreadBoundPoolable<T>>
  fullName: Microsoft.Health.Platform.Caching.Pool<T, Microsoft.Health.Platform.Caching.ThreadBoundPoolable<T>>
  nameWithType.vb: Pool(Of T, ThreadBoundPoolable(Of T))
  fullName.vb: Microsoft.Health.Platform.Caching.Pool(Of T, Microsoft.Health.Platform.Caching.ThreadBoundPoolable(Of T))
  name.vb: Pool(Of T, ThreadBoundPoolable(Of T))
  spec.csharp:
  - uid: Microsoft.Health.Platform.Caching.Pool`2
    name: Pool
    nameWithType: Pool
    fullName: Microsoft.Health.Platform.Caching.Pool
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1
    name: ThreadBoundPoolable
    nameWithType: ThreadBoundPoolable
    fullName: Microsoft.Health.Platform.Caching.ThreadBoundPoolable
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.Platform.Caching.Pool`2
    name: Pool
    nameWithType: Pool
    fullName: Microsoft.Health.Platform.Caching.Pool
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1
    name: ThreadBoundPoolable
    nameWithType: ThreadBoundPoolable
    fullName: Microsoft.Health.Platform.Caching.ThreadBoundPoolable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1
  commentId: T:Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1
  parent: Microsoft.Health.Platform.Caching
  isExternal: false
  name: ThreadBoundPoolable<T>
  nameWithType: ThreadBoundPoolable<T>
  fullName: Microsoft.Health.Platform.Caching.ThreadBoundPoolable<T>
  nameWithType.vb: ThreadBoundPoolable(Of T)
  fullName.vb: Microsoft.Health.Platform.Caching.ThreadBoundPoolable(Of T)
  name.vb: ThreadBoundPoolable(Of T)
  spec.csharp:
  - uid: Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1
    name: ThreadBoundPoolable
    nameWithType: ThreadBoundPoolable
    fullName: Microsoft.Health.Platform.Caching.ThreadBoundPoolable
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1
    name: ThreadBoundPoolable
    nameWithType: ThreadBoundPoolable
    fullName: Microsoft.Health.Platform.Caching.ThreadBoundPoolable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: Microsoft.Health.Platform.Caching.Pool`2
  commentId: T:Microsoft.Health.Platform.Caching.Pool`2
  parent: Microsoft.Health.Platform.Caching
  isExternal: false
  name: Pool<T, TPoolable>
  nameWithType: Pool<T, TPoolable>
  fullName: Microsoft.Health.Platform.Caching.Pool<T, TPoolable>
  nameWithType.vb: Pool(Of T, TPoolable)
  fullName.vb: Microsoft.Health.Platform.Caching.Pool(Of T, TPoolable)
  name.vb: Pool(Of T, TPoolable)
  spec.csharp:
  - uid: Microsoft.Health.Platform.Caching.Pool`2
    name: Pool
    nameWithType: Pool
    fullName: Microsoft.Health.Platform.Caching.Pool
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPoolable
    nameWithType: TPoolable
    fullName: TPoolable
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.Platform.Caching.Pool`2
    name: Pool
    nameWithType: Pool
    fullName: Microsoft.Health.Platform.Caching.Pool
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPoolable
    nameWithType: TPoolable
    fullName: TPoolable
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1.Finalize*
  commentId: Overload:Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1.Finalize
  isExternal: false
  name: Finalize
  nameWithType: ThreadBoundPoolable<T>.Finalize
  fullName: Microsoft.Health.Platform.Caching.ThreadBoundPoolable<T>.Finalize
  nameWithType.vb: ThreadBoundPoolable(Of T).Finalize
  fullName.vb: Microsoft.Health.Platform.Caching.ThreadBoundPoolable(Of T).Finalize
- uid: Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1.Dispose*
  commentId: Overload:Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1.Dispose
  isExternal: false
  name: Dispose
  nameWithType: ThreadBoundPoolable<T>.Dispose
  fullName: Microsoft.Health.Platform.Caching.ThreadBoundPoolable<T>.Dispose
  nameWithType.vb: ThreadBoundPoolable(Of T).Dispose
  fullName.vb: Microsoft.Health.Platform.Caching.ThreadBoundPoolable(Of T).Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1.Item*
  commentId: Overload:Microsoft.Health.Platform.Caching.ThreadBoundPoolable`1.Item
  isExternal: false
  name: Item
  nameWithType: ThreadBoundPoolable<T>.Item
  fullName: Microsoft.Health.Platform.Caching.ThreadBoundPoolable<T>.Item
  nameWithType.vb: ThreadBoundPoolable(Of T).Item
  fullName.vb: Microsoft.Health.Platform.Caching.ThreadBoundPoolable(Of T).Item
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
