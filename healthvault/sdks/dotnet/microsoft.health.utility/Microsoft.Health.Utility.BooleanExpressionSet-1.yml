### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Utility.BooleanExpressionSet`1
  commentId: T:Microsoft.Health.Utility.BooleanExpressionSet`1
  id: BooleanExpressionSet`1
  parent: Microsoft.Health.Utility
  children:
  - Microsoft.Health.Utility.BooleanExpressionSet`1.#ctor(Microsoft.Health.Utility.Logic)
  - Microsoft.Health.Utility.BooleanExpressionSet`1.Evaluate(`0)
  - Microsoft.Health.Utility.BooleanExpressionSet`1.Expressions
  - Microsoft.Health.Utility.BooleanExpressionSet`1.ExpressionSets
  - Microsoft.Health.Utility.BooleanExpressionSet`1.Initialize
  - Microsoft.Health.Utility.BooleanExpressionSet`1.Logic
  - Microsoft.Health.Utility.BooleanExpressionSet`1.MaxDepth
  langs:
  - csharp
  - vb
  name: BooleanExpressionSet<T>
  nameWithType: BooleanExpressionSet<T>
  fullName: Microsoft.Health.Utility.BooleanExpressionSet<T>
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/BooleanExpression.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: BooleanExpressionSet
    path: utilities/BooleanExpression.cs
    startLine: 308
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\nBooleanExpressionSet\n"
  example: []
  syntax:
    content: public class BooleanExpressionSet<T>
    content.vb: Public Class BooleanExpressionSet(Of T)
    typeParameters:
    - id: T
      description: "\nThe type of object on which the expressions will be evaluated.\n"
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.Utility.BooleanExpressionSet`1.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  nameWithType.vb: BooleanExpressionSet(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.Health.Utility.BooleanExpressionSet(Of T)
  name.vb: BooleanExpressionSet(Of T)
- uid: Microsoft.Health.Utility.BooleanExpressionSet`1.#ctor(Microsoft.Health.Utility.Logic)
  commentId: M:Microsoft.Health.Utility.BooleanExpressionSet`1.#ctor(Microsoft.Health.Utility.Logic)
  id: '#ctor(Microsoft.Health.Utility.Logic)'
  parent: Microsoft.Health.Utility.BooleanExpressionSet`1
  langs:
  - csharp
  - vb
  name: BooleanExpressionSet(Logic)
  nameWithType: BooleanExpressionSet<T>.BooleanExpressionSet(Logic)
  fullName: Microsoft.Health.Utility.BooleanExpressionSet<T>.BooleanExpressionSet(Microsoft.Health.Utility.Logic)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/BooleanExpression.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: utilities/BooleanExpression.cs
    startLine: 314
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\nInitializes an instance of BooleanExpressionSet\n"
  example: []
  syntax:
    content: public BooleanExpressionSet(Logic logic)
    content.vb: Public Sub New(logic As Logic)
    parameters:
    - id: logic
      type: Microsoft.Health.Utility.Logic
      description: ''
  overload: Microsoft.Health.Utility.BooleanExpressionSet`1.#ctor*
  nameWithType.vb: BooleanExpressionSet(Of T).BooleanExpressionSet(Logic)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Utility.BooleanExpressionSet(Of T).BooleanExpressionSet(Microsoft.Health.Utility.Logic)
- uid: Microsoft.Health.Utility.BooleanExpressionSet`1.ExpressionSets
  commentId: P:Microsoft.Health.Utility.BooleanExpressionSet`1.ExpressionSets
  id: ExpressionSets
  parent: Microsoft.Health.Utility.BooleanExpressionSet`1
  langs:
  - csharp
  - vb
  name: ExpressionSets
  nameWithType: BooleanExpressionSet<T>.ExpressionSets
  fullName: Microsoft.Health.Utility.BooleanExpressionSet<T>.ExpressionSets
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/BooleanExpression.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ExpressionSets
    path: utilities/BooleanExpression.cs
    startLine: 322
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\nGets/sets the child BooleanExpressionSets\n"
  example: []
  syntax:
    content: public BooleanExpressionSet<T>[] ExpressionSets { get; set; }
    content.vb: Public Property ExpressionSets As BooleanExpressionSet(Of T)()
    parameters: []
    return:
      type: Microsoft.Health.Utility.BooleanExpressionSet`1[]
  overload: Microsoft.Health.Utility.BooleanExpressionSet`1.ExpressionSets*
  nameWithType.vb: BooleanExpressionSet(Of T).ExpressionSets
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Utility.BooleanExpressionSet(Of T).ExpressionSets
- uid: Microsoft.Health.Utility.BooleanExpressionSet`1.Expressions
  commentId: P:Microsoft.Health.Utility.BooleanExpressionSet`1.Expressions
  id: Expressions
  parent: Microsoft.Health.Utility.BooleanExpressionSet`1
  langs:
  - csharp
  - vb
  name: Expressions
  nameWithType: BooleanExpressionSet<T>.Expressions
  fullName: Microsoft.Health.Utility.BooleanExpressionSet<T>.Expressions
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/BooleanExpression.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Expressions
    path: utilities/BooleanExpression.cs
    startLine: 331
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\nGets/sets the child BooleanExpressions\n"
  example: []
  syntax:
    content: public BooleanExpression<T>[] Expressions { get; set; }
    content.vb: Public Property Expressions As BooleanExpression(Of T)()
    parameters: []
    return:
      type: Microsoft.Health.Utility.BooleanExpression{{T}}[]
  overload: Microsoft.Health.Utility.BooleanExpressionSet`1.Expressions*
  nameWithType.vb: BooleanExpressionSet(Of T).Expressions
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Utility.BooleanExpressionSet(Of T).Expressions
- uid: Microsoft.Health.Utility.BooleanExpressionSet`1.Logic
  commentId: P:Microsoft.Health.Utility.BooleanExpressionSet`1.Logic
  id: Logic
  parent: Microsoft.Health.Utility.BooleanExpressionSet`1
  langs:
  - csharp
  - vb
  name: Logic
  nameWithType: BooleanExpressionSet<T>.Logic
  fullName: Microsoft.Health.Utility.BooleanExpressionSet<T>.Logic
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/BooleanExpression.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Logic
    path: utilities/BooleanExpression.cs
    startLine: 340
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\nGets the Logic\n"
  example: []
  syntax:
    content: public Logic Logic { get; }
    content.vb: Public ReadOnly Property Logic As Logic
    parameters: []
    return:
      type: Microsoft.Health.Utility.Logic
  overload: Microsoft.Health.Utility.BooleanExpressionSet`1.Logic*
  nameWithType.vb: BooleanExpressionSet(Of T).Logic
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.Health.Utility.BooleanExpressionSet(Of T).Logic
- uid: Microsoft.Health.Utility.BooleanExpressionSet`1.Initialize
  commentId: M:Microsoft.Health.Utility.BooleanExpressionSet`1.Initialize
  id: Initialize
  parent: Microsoft.Health.Utility.BooleanExpressionSet`1
  langs:
  - csharp
  - vb
  name: Initialize()
  nameWithType: BooleanExpressionSet<T>.Initialize()
  fullName: Microsoft.Health.Utility.BooleanExpressionSet<T>.Initialize()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/BooleanExpression.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Initialize
    path: utilities/BooleanExpression.cs
    startLine: 354
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\nInitializes the BooleanExpressionSet.\nGenerates the source code for evaluating the child expressions and expression sets,\nand compiles it in memory.  <xref href=\"Microsoft.Health.Utility.BooleanExpressionSet%601.Evaluate(%600)\" data-throw-if-not-resolved=\"false\"></xref>\nmay then be called to evaluate the expressions.\n"
  example: []
  syntax:
    content: public void Initialize()
    content.vb: Public Sub Initialize
  overload: Microsoft.Health.Utility.BooleanExpressionSet`1.Initialize*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "\nUnexpected failure to compile auto-generated source code\n"
  nameWithType.vb: BooleanExpressionSet(Of T).Initialize()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Utility.BooleanExpressionSet(Of T).Initialize()
- uid: Microsoft.Health.Utility.BooleanExpressionSet`1.Evaluate(`0)
  commentId: M:Microsoft.Health.Utility.BooleanExpressionSet`1.Evaluate(`0)
  id: Evaluate(`0)
  parent: Microsoft.Health.Utility.BooleanExpressionSet`1
  langs:
  - csharp
  - vb
  name: Evaluate(T)
  nameWithType: BooleanExpressionSet<T>.Evaluate(T)
  fullName: Microsoft.Health.Utility.BooleanExpressionSet<T>.Evaluate(T)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/BooleanExpression.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Evaluate
    path: utilities/BooleanExpression.cs
    startLine: 398
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\nEvaluates the expressions on the given entry.\n"
  example: []
  syntax:
    content: public bool Evaluate(T entry)
    content.vb: Public Function Evaluate(entry As T) As Boolean
    parameters:
    - id: entry
      type: '{T}'
      description: ''
    return:
      type: System.Boolean
      description: True if all expressions are satisfied
  overload: Microsoft.Health.Utility.BooleanExpressionSet`1.Evaluate*
  nameWithType.vb: BooleanExpressionSet(Of T).Evaluate(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Utility.BooleanExpressionSet(Of T).Evaluate(T)
- uid: Microsoft.Health.Utility.BooleanExpressionSet`1.MaxDepth
  commentId: F:Microsoft.Health.Utility.BooleanExpressionSet`1.MaxDepth
  id: MaxDepth
  parent: Microsoft.Health.Utility.BooleanExpressionSet`1
  langs:
  - csharp
  - vb
  name: MaxDepth
  nameWithType: BooleanExpressionSet<T>.MaxDepth
  fullName: Microsoft.Health.Utility.BooleanExpressionSet<T>.MaxDepth
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/BooleanExpression.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: MaxDepth
    path: utilities/BooleanExpression.cs
    startLine: 469
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\nMax depth of nested ExpressionSets.\n"
  example: []
  syntax:
    content: public const int MaxDepth = 10
    content.vb: Public Const MaxDepth As Integer = 10
    return:
      type: System.Int32
  nameWithType.vb: BooleanExpressionSet(Of T).MaxDepth
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
  fullName.vb: Microsoft.Health.Utility.BooleanExpressionSet(Of T).MaxDepth
references:
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.BooleanExpressionSet`1.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<BooleanExpressionSet<T>>()
  nameWithType: TypeHelper.ValueOrDbNull<BooleanExpressionSet<T>>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Utility.BooleanExpressionSet<T>>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of BooleanExpressionSet(Of T))()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Utility.BooleanExpressionSet(Of T))()
  name.vb: ValueOrDbNull(Of BooleanExpressionSet(Of T))()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<BooleanExpressionSet<T>>
    nameWithType: TypeHelper.ValueOrDbNull<BooleanExpressionSet<T>>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Utility.BooleanExpressionSet<T>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of BooleanExpressionSet(Of T))
    nameWithType: TypeHelper.ValueOrDbNull(Of BooleanExpressionSet(Of T))
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Utility.BooleanExpressionSet(Of T))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility.BooleanExpressionSet`1.#ctor*
  commentId: Overload:Microsoft.Health.Utility.BooleanExpressionSet`1.#ctor
  isExternal: false
  name: BooleanExpressionSet
  nameWithType: BooleanExpressionSet<T>.BooleanExpressionSet
  fullName: Microsoft.Health.Utility.BooleanExpressionSet<T>.BooleanExpressionSet
  nameWithType.vb: BooleanExpressionSet(Of T).BooleanExpressionSet
  fullName.vb: Microsoft.Health.Utility.BooleanExpressionSet(Of T).BooleanExpressionSet
- uid: Microsoft.Health.Utility.Logic
  commentId: T:Microsoft.Health.Utility.Logic
  parent: Microsoft.Health.Utility
  isExternal: false
  name: Logic
  nameWithType: Logic
  fullName: Microsoft.Health.Utility.Logic
- uid: Microsoft.Health.Utility.BooleanExpressionSet`1.ExpressionSets*
  commentId: Overload:Microsoft.Health.Utility.BooleanExpressionSet`1.ExpressionSets
  isExternal: false
  name: ExpressionSets
  nameWithType: BooleanExpressionSet<T>.ExpressionSets
  fullName: Microsoft.Health.Utility.BooleanExpressionSet<T>.ExpressionSets
  nameWithType.vb: BooleanExpressionSet(Of T).ExpressionSets
  fullName.vb: Microsoft.Health.Utility.BooleanExpressionSet(Of T).ExpressionSets
- uid: Microsoft.Health.Utility.BooleanExpressionSet`1[]
  name: BooleanExpressionSet<T>[]
  nameWithType: BooleanExpressionSet<T>[]
  fullName: Microsoft.Health.Utility.BooleanExpressionSet<T>[]
  nameWithType.vb: BooleanExpressionSet(Of T)()
  fullName.vb: Microsoft.Health.Utility.BooleanExpressionSet(Of T)()
  name.vb: BooleanExpressionSet(Of T)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.BooleanExpressionSet`1
    name: BooleanExpressionSet
    nameWithType: BooleanExpressionSet
    fullName: Microsoft.Health.Utility.BooleanExpressionSet
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.Health.Utility.BooleanExpressionSet`1
    name: BooleanExpressionSet
    nameWithType: BooleanExpressionSet
    fullName: Microsoft.Health.Utility.BooleanExpressionSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.Health.Utility.BooleanExpressionSet`1.Expressions*
  commentId: Overload:Microsoft.Health.Utility.BooleanExpressionSet`1.Expressions
  isExternal: false
  name: Expressions
  nameWithType: BooleanExpressionSet<T>.Expressions
  fullName: Microsoft.Health.Utility.BooleanExpressionSet<T>.Expressions
  nameWithType.vb: BooleanExpressionSet(Of T).Expressions
  fullName.vb: Microsoft.Health.Utility.BooleanExpressionSet(Of T).Expressions
- uid: Microsoft.Health.Utility.BooleanExpression{{T}}[]
  name: BooleanExpression<T>[]
  nameWithType: BooleanExpression<T>[]
  fullName: Microsoft.Health.Utility.BooleanExpression<T>[]
  nameWithType.vb: BooleanExpression(Of T)()
  fullName.vb: Microsoft.Health.Utility.BooleanExpression(Of T)()
  name.vb: BooleanExpression(Of T)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.BooleanExpression`1
    name: BooleanExpression
    nameWithType: BooleanExpression
    fullName: Microsoft.Health.Utility.BooleanExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.Health.Utility.BooleanExpression`1
    name: BooleanExpression
    nameWithType: BooleanExpression
    fullName: Microsoft.Health.Utility.BooleanExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.Health.Utility.BooleanExpressionSet`1.Logic*
  commentId: Overload:Microsoft.Health.Utility.BooleanExpressionSet`1.Logic
  isExternal: false
  name: Logic
  nameWithType: BooleanExpressionSet<T>.Logic
  fullName: Microsoft.Health.Utility.BooleanExpressionSet<T>.Logic
  nameWithType.vb: BooleanExpressionSet(Of T).Logic
  fullName.vb: Microsoft.Health.Utility.BooleanExpressionSet(Of T).Logic
- uid: Microsoft.Health.Utility.BooleanExpressionSet`1.Evaluate(`0)
  commentId: M:Microsoft.Health.Utility.BooleanExpressionSet`1.Evaluate(`0)
- uid: Microsoft.Health.Utility.BooleanExpressionSet`1.Initialize*
  commentId: Overload:Microsoft.Health.Utility.BooleanExpressionSet`1.Initialize
  isExternal: false
  name: Initialize
  nameWithType: BooleanExpressionSet<T>.Initialize
  fullName: Microsoft.Health.Utility.BooleanExpressionSet<T>.Initialize
  nameWithType.vb: BooleanExpressionSet(Of T).Initialize
  fullName.vb: Microsoft.Health.Utility.BooleanExpressionSet(Of T).Initialize
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Microsoft.Health.Utility.BooleanExpressionSet`1.Evaluate*
  commentId: Overload:Microsoft.Health.Utility.BooleanExpressionSet`1.Evaluate
  isExternal: false
  name: Evaluate
  nameWithType: BooleanExpressionSet<T>.Evaluate
  fullName: Microsoft.Health.Utility.BooleanExpressionSet<T>.Evaluate
  nameWithType.vb: BooleanExpressionSet(Of T).Evaluate
  fullName.vb: Microsoft.Health.Utility.BooleanExpressionSet(Of T).Evaluate
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
