### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Utility.Dictionary.DictionaryDBUploader
  commentId: T:Microsoft.Health.Utility.Dictionary.DictionaryDBUploader
  id: DictionaryDBUploader
  parent: Microsoft.Health.Utility.Dictionary
  children:
  - Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.#ctor
  - Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.#ctor(System.Boolean)
  - Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.GenerateVocabularyDeleteSql(System.String,System.IO.TextWriter)
  - Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.Upload(Microsoft.Health.Utility.SqlHelper,System.String,System.String)
  - Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.Upload(Microsoft.Health.Utility.SqlHelper,System.String,System.String,System.IO.FileInfo)
  - Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.Upload(Microsoft.Health.Utility.SqlHelper,System.String,System.String,System.IO.FileInfo,System.IO.TextWriter)
  - Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.Upload(Microsoft.Health.Utility.SqlHelper,System.String,System.String,System.IO.FileInfo,System.IO.TextWriter,System.String)
  - Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.Upload(Microsoft.Health.Utility.SqlHelper,System.String,System.String,System.IO.TextWriter)
  - Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.Upload(Microsoft.Health.Utility.SqlHelper,System.String,System.String,System.IO.TextWriter,System.String)
  langs:
  - csharp
  - vb
  name: DictionaryDBUploader
  nameWithType: DictionaryDBUploader
  fullName: Microsoft.Health.Utility.Dictionary.DictionaryDBUploader
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/dictionary/DictionaryDBHelper.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DictionaryDBUploader
    path: dictionary/DictionaryDBHelper.cs
    startLine: 436
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Dictionary
  summary: "\nFacilities for uploading vocabulary data to dictionary DB.\n"
  example: []
  syntax:
    content: public class DictionaryDBUploader
    content.vb: Public Class DictionaryDBUploader
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.#ctor
  commentId: M:Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.#ctor
  id: '#ctor'
  parent: Microsoft.Health.Utility.Dictionary.DictionaryDBUploader
  langs:
  - csharp
  - vb
  name: DictionaryDBUploader()
  nameWithType: DictionaryDBUploader.DictionaryDBUploader()
  fullName: Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.DictionaryDBUploader()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/dictionary/DictionaryDBHelper.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: dictionary/DictionaryDBHelper.cs
    startLine: 590
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Dictionary
  summary: "\nDefault constructor for the DictionaryDBUploader class.\n"
  example: []
  syntax:
    content: public DictionaryDBUploader()
    content.vb: Public Sub New
  overload: Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.#ctor(System.Boolean)
  commentId: M:Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: Microsoft.Health.Utility.Dictionary.DictionaryDBUploader
  langs:
  - csharp
  - vb
  name: DictionaryDBUploader(Boolean)
  nameWithType: DictionaryDBUploader.DictionaryDBUploader(Boolean)
  fullName: Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.DictionaryDBUploader(System.Boolean)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/dictionary/DictionaryDBHelper.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: dictionary/DictionaryDBHelper.cs
    startLine: 595
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Dictionary
  summary: "\nDefault constructor for the DictionaryDBUploader class.\n"
  example: []
  syntax:
    content: public DictionaryDBUploader(bool verbose)
    content.vb: Public Sub New(verbose As Boolean)
    parameters:
    - id: verbose
      type: System.Boolean
  overload: Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.GenerateVocabularyDeleteSql(System.String,System.IO.TextWriter)
  commentId: M:Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.GenerateVocabularyDeleteSql(System.String,System.IO.TextWriter)
  id: GenerateVocabularyDeleteSql(System.String,System.IO.TextWriter)
  parent: Microsoft.Health.Utility.Dictionary.DictionaryDBUploader
  langs:
  - csharp
  - vb
  name: GenerateVocabularyDeleteSql(String, TextWriter)
  nameWithType: DictionaryDBUploader.GenerateVocabularyDeleteSql(String, TextWriter)
  fullName: Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.GenerateVocabularyDeleteSql(System.String, System.IO.TextWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/dictionary/DictionaryDBHelper.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GenerateVocabularyDeleteSql
    path: dictionary/DictionaryDBHelper.cs
    startLine: 611
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Dictionary
  summary: "\nStatic method used to generate the delete SQL statements for a specified dictionary \nvocabulary.\n"
  example: []
  syntax:
    content: public static void GenerateVocabularyDeleteSql(string srcFile, TextWriter outputWriter)
    content.vb: Public Shared Sub GenerateVocabularyDeleteSql(srcFile As String, outputWriter As TextWriter)
    parameters:
    - id: srcFile
      type: System.String
      description: "\nThe source file spec for the vocabulary to generate delete SQL statements for.\n"
    - id: outputWriter
      type: System.IO.TextWriter
      description: "\nThe TextWriter instance that specifies where to write the delete SQL statements to.\n"
  overload: Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.GenerateVocabularyDeleteSql*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.Upload(Microsoft.Health.Utility.SqlHelper,System.String,System.String)
  commentId: M:Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.Upload(Microsoft.Health.Utility.SqlHelper,System.String,System.String)
  id: Upload(Microsoft.Health.Utility.SqlHelper,System.String,System.String)
  parent: Microsoft.Health.Utility.Dictionary.DictionaryDBUploader
  langs:
  - csharp
  - vb
  name: Upload(SqlHelper, String, String)
  nameWithType: DictionaryDBUploader.Upload(SqlHelper, String, String)
  fullName: Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.Upload(Microsoft.Health.Utility.SqlHelper, System.String, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/dictionary/DictionaryDBHelper.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Upload
    path: dictionary/DictionaryDBHelper.cs
    startLine: 640
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Dictionary
  summary: "\nUploads the vocabulary contained in the specified file to the dictionary database. \n"
  example: []
  syntax:
    content: public void Upload(SqlHelper sql, string vocabularyFileName, string uploadSource)
    content.vb: Public Sub Upload(sql As SqlHelper, vocabularyFileName As String, uploadSource As String)
    parameters:
    - id: sql
      type: Microsoft.Health.Utility.SqlHelper
      description: "\nThe SqlHelper instance to be used for database operations.\n"
    - id: vocabularyFileName
      type: System.String
      description: "\nFull path to the vocabulary xml file to upload.\n"
    - id: uploadSource
      type: System.String
      description: "\nA string identifying the upload source. \n"
  overload: Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.Upload*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.Upload(Microsoft.Health.Utility.SqlHelper,System.String,System.String,System.IO.FileInfo)
  commentId: M:Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.Upload(Microsoft.Health.Utility.SqlHelper,System.String,System.String,System.IO.FileInfo)
  id: Upload(Microsoft.Health.Utility.SqlHelper,System.String,System.String,System.IO.FileInfo)
  parent: Microsoft.Health.Utility.Dictionary.DictionaryDBUploader
  langs:
  - csharp
  - vb
  name: Upload(SqlHelper, String, String, FileInfo)
  nameWithType: DictionaryDBUploader.Upload(SqlHelper, String, String, FileInfo)
  fullName: Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.Upload(Microsoft.Health.Utility.SqlHelper, System.String, System.String, System.IO.FileInfo)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/dictionary/DictionaryDBHelper.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Upload
    path: dictionary/DictionaryDBHelper.cs
    startLine: 662
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Dictionary
  summary: "\nUploads the vocabulary contained in the specified file to the dictionary database\nand persists the totals to the specified FileInfo instance. \n"
  example: []
  syntax:
    content: public void Upload(SqlHelper sql, string vocabularyFileName, string uploadSource, FileInfo fileInfo)
    content.vb: Public Sub Upload(sql As SqlHelper, vocabularyFileName As String, uploadSource As String, fileInfo As FileInfo)
    parameters:
    - id: sql
      type: Microsoft.Health.Utility.SqlHelper
      description: "\nThe SqlHelper instance to be used for database operations.\n"
    - id: vocabularyFileName
      type: System.String
      description: "\nFull path to the vocabulary xml file to upload.\n"
    - id: uploadSource
      type: System.String
      description: "\nA string identifying the upload source. \n"
    - id: fileInfo
      type: System.IO.FileInfo
      description: "\nA FileInfo instance that represents the file to log to.\n"
  overload: Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.Upload*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.Upload(Microsoft.Health.Utility.SqlHelper,System.String,System.String,System.IO.TextWriter)
  commentId: M:Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.Upload(Microsoft.Health.Utility.SqlHelper,System.String,System.String,System.IO.TextWriter)
  id: Upload(Microsoft.Health.Utility.SqlHelper,System.String,System.String,System.IO.TextWriter)
  parent: Microsoft.Health.Utility.Dictionary.DictionaryDBUploader
  langs:
  - csharp
  - vb
  name: Upload(SqlHelper, String, String, TextWriter)
  nameWithType: DictionaryDBUploader.Upload(SqlHelper, String, String, TextWriter)
  fullName: Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.Upload(Microsoft.Health.Utility.SqlHelper, System.String, System.String, System.IO.TextWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/dictionary/DictionaryDBHelper.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Upload
    path: dictionary/DictionaryDBHelper.cs
    startLine: 684
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Dictionary
  summary: "\nUploads the vocabulary contained in the specified file to the dictionary database\nand outputs the totals to the specified TextWriter instance. \n"
  example: []
  syntax:
    content: public void Upload(SqlHelper sql, string vocabularyFileName, string uploadSource, TextWriter outputWriter)
    content.vb: Public Sub Upload(sql As SqlHelper, vocabularyFileName As String, uploadSource As String, outputWriter As TextWriter)
    parameters:
    - id: sql
      type: Microsoft.Health.Utility.SqlHelper
      description: "\nThe SqlHelper instance to be used for database operations.\n"
    - id: vocabularyFileName
      type: System.String
      description: "\nFull path to the vocabulary xml file to upload.\n"
    - id: uploadSource
      type: System.String
      description: "\nA string identifying the upload source. \n"
    - id: outputWriter
      type: System.IO.TextWriter
      description: "\nA TextWriter instance that represents where the totals should be written to.\n"
  overload: Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.Upload*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.Upload(Microsoft.Health.Utility.SqlHelper,System.String,System.String,System.IO.TextWriter,System.String)
  commentId: M:Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.Upload(Microsoft.Health.Utility.SqlHelper,System.String,System.String,System.IO.TextWriter,System.String)
  id: Upload(Microsoft.Health.Utility.SqlHelper,System.String,System.String,System.IO.TextWriter,System.String)
  parent: Microsoft.Health.Utility.Dictionary.DictionaryDBUploader
  langs:
  - csharp
  - vb
  name: Upload(SqlHelper, String, String, TextWriter, String)
  nameWithType: DictionaryDBUploader.Upload(SqlHelper, String, String, TextWriter, String)
  fullName: Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.Upload(Microsoft.Health.Utility.SqlHelper, System.String, System.String, System.IO.TextWriter, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/dictionary/DictionaryDBHelper.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Upload
    path: dictionary/DictionaryDBHelper.cs
    startLine: 709
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Dictionary
  summary: "\nUploads the vocabulary contained in the specified file to the dictionary database\nand outputs the totals to the specified TextWriter instance. \n"
  example: []
  syntax:
    content: public void Upload(SqlHelper sql, string vocabularyFileName, string uploadSource, TextWriter outputWriter, string culture)
    content.vb: Public Sub Upload(sql As SqlHelper, vocabularyFileName As String, uploadSource As String, outputWriter As TextWriter, culture As String)
    parameters:
    - id: sql
      type: Microsoft.Health.Utility.SqlHelper
      description: "\nThe SqlHelper instance to be used for database operations.\n"
    - id: vocabularyFileName
      type: System.String
      description: "\nFull path to the vocabulary xml file to upload.\n"
    - id: uploadSource
      type: System.String
      description: "\nA string identifying the upload source. \n"
    - id: outputWriter
      type: System.IO.TextWriter
      description: "\nA TextWriter instance that represents where the totals should be written to.\n"
    - id: culture
      type: System.String
      description: "\nThe culture of the vocabulary to be uploaded. \n"
  overload: Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.Upload*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.Upload(Microsoft.Health.Utility.SqlHelper,System.String,System.String,System.IO.FileInfo,System.IO.TextWriter)
  commentId: M:Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.Upload(Microsoft.Health.Utility.SqlHelper,System.String,System.String,System.IO.FileInfo,System.IO.TextWriter)
  id: Upload(Microsoft.Health.Utility.SqlHelper,System.String,System.String,System.IO.FileInfo,System.IO.TextWriter)
  parent: Microsoft.Health.Utility.Dictionary.DictionaryDBUploader
  langs:
  - csharp
  - vb
  name: Upload(SqlHelper, String, String, FileInfo, TextWriter)
  nameWithType: DictionaryDBUploader.Upload(SqlHelper, String, String, FileInfo, TextWriter)
  fullName: Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.Upload(Microsoft.Health.Utility.SqlHelper, System.String, System.String, System.IO.FileInfo, System.IO.TextWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/dictionary/DictionaryDBHelper.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Upload
    path: dictionary/DictionaryDBHelper.cs
    startLine: 739
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Dictionary
  summary: "\nUploads the vocabulary contained in the specified file to the dictionary database\nand both persists the totals to the specified FileInfo instance and outputs the \ntotals to the specified TextWriter instance.\n"
  example: []
  syntax:
    content: public void Upload(SqlHelper sql, string vocabularyFileName, string uploadSource, FileInfo fileInfo, TextWriter outputWriter)
    content.vb: Public Sub Upload(sql As SqlHelper, vocabularyFileName As String, uploadSource As String, fileInfo As FileInfo, outputWriter As TextWriter)
    parameters:
    - id: sql
      type: Microsoft.Health.Utility.SqlHelper
      description: "\nThe SqlHelper instance to be used for database operations.\n"
    - id: vocabularyFileName
      type: System.String
      description: "\nFull path to the vocabulary xml file to upload.\n"
    - id: uploadSource
      type: System.String
      description: "\nA string identifying the upload source. \n"
    - id: fileInfo
      type: System.IO.FileInfo
      description: "\nA FileInfo instance that represents the file to log to.\n"
    - id: outputWriter
      type: System.IO.TextWriter
      description: "\nA TextWriter instance that represents where the totals should be written to.\n"
  overload: Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.Upload*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.Upload(Microsoft.Health.Utility.SqlHelper,System.String,System.String,System.IO.FileInfo,System.IO.TextWriter,System.String)
  commentId: M:Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.Upload(Microsoft.Health.Utility.SqlHelper,System.String,System.String,System.IO.FileInfo,System.IO.TextWriter,System.String)
  id: Upload(Microsoft.Health.Utility.SqlHelper,System.String,System.String,System.IO.FileInfo,System.IO.TextWriter,System.String)
  parent: Microsoft.Health.Utility.Dictionary.DictionaryDBUploader
  langs:
  - csharp
  - vb
  name: Upload(SqlHelper, String, String, FileInfo, TextWriter, String)
  nameWithType: DictionaryDBUploader.Upload(SqlHelper, String, String, FileInfo, TextWriter, String)
  fullName: Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.Upload(Microsoft.Health.Utility.SqlHelper, System.String, System.String, System.IO.FileInfo, System.IO.TextWriter, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/dictionary/DictionaryDBHelper.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Upload
    path: dictionary/DictionaryDBHelper.cs
    startLine: 777
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Dictionary
  summary: "\nUploads the vocabulary contained in the specified file to the dictionary database\nand both persists the totals to the specified FileInfo instance and outputs the \ntotals to the specified TextWriter instance.\n"
  example: []
  syntax:
    content: public void Upload(SqlHelper sql, string vocabularyFileName, string uploadSource, FileInfo fileInfo, TextWriter outputWriter, string culture)
    content.vb: Public Sub Upload(sql As SqlHelper, vocabularyFileName As String, uploadSource As String, fileInfo As FileInfo, outputWriter As TextWriter, culture As String)
    parameters:
    - id: sql
      type: Microsoft.Health.Utility.SqlHelper
      description: "\nThe SqlHelper instance to be used for database operations.\n"
    - id: vocabularyFileName
      type: System.String
      description: "\nFull path to the vocabulary xml file to upload.\n"
    - id: uploadSource
      type: System.String
      description: "\nA string identifying the upload source. \n"
    - id: fileInfo
      type: System.IO.FileInfo
      description: "\nA FileInfo instance that represents the file to log to.\n"
    - id: outputWriter
      type: System.IO.TextWriter
      description: "\nA TextWriter instance that represents where the totals should be written to.\n"
    - id: culture
      type: System.String
      description: "\nThe culture of the vocabulary will be loaded to. \n"
  overload: Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.Upload*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Health.Utility.Dictionary
  commentId: N:Microsoft.Health.Utility.Dictionary
  isExternal: false
  name: Microsoft.Health.Utility.Dictionary
  nameWithType: Microsoft.Health.Utility.Dictionary
  fullName: Microsoft.Health.Utility.Dictionary
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<DictionaryDBUploader>()
  nameWithType: TypeHelper.ValueOrDbNull<DictionaryDBUploader>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Utility.Dictionary.DictionaryDBUploader>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of DictionaryDBUploader)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Utility.Dictionary.DictionaryDBUploader)()
  name.vb: ValueOrDbNull(Of DictionaryDBUploader)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<DictionaryDBUploader>
    nameWithType: TypeHelper.ValueOrDbNull<DictionaryDBUploader>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Utility.Dictionary.DictionaryDBUploader>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of DictionaryDBUploader)
    nameWithType: TypeHelper.ValueOrDbNull(Of DictionaryDBUploader)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Utility.Dictionary.DictionaryDBUploader)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.#ctor*
  commentId: Overload:Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.#ctor
  isExternal: false
  name: DictionaryDBUploader
  nameWithType: DictionaryDBUploader.DictionaryDBUploader
  fullName: Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.DictionaryDBUploader
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.GenerateVocabularyDeleteSql*
  commentId: Overload:Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.GenerateVocabularyDeleteSql
  isExternal: false
  name: GenerateVocabularyDeleteSql
  nameWithType: DictionaryDBUploader.GenerateVocabularyDeleteSql
  fullName: Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.GenerateVocabularyDeleteSql
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.TextWriter
  commentId: T:System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.Upload*
  commentId: Overload:Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.Upload
  isExternal: false
  name: Upload
  nameWithType: DictionaryDBUploader.Upload
  fullName: Microsoft.Health.Utility.Dictionary.DictionaryDBUploader.Upload
- uid: Microsoft.Health.Utility.SqlHelper
  commentId: T:Microsoft.Health.Utility.SqlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: SqlHelper
  nameWithType: SqlHelper
  fullName: Microsoft.Health.Utility.SqlHelper
- uid: System.IO.FileInfo
  commentId: T:System.IO.FileInfo
  parent: System.IO
  isExternal: true
  name: FileInfo
  nameWithType: FileInfo
  fullName: System.IO.FileInfo
