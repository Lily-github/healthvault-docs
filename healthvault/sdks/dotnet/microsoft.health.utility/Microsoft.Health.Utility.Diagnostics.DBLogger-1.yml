### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Utility.Diagnostics.DBLogger`1
  commentId: T:Microsoft.Health.Utility.Diagnostics.DBLogger`1
  id: DBLogger`1
  parent: Microsoft.Health.Utility.Diagnostics
  children:
  - Microsoft.Health.Utility.Diagnostics.DBLogger`1.Close
  - Microsoft.Health.Utility.Diagnostics.DBLogger`1.Dispose(System.Boolean)
  - Microsoft.Health.Utility.Diagnostics.DBLogger`1.OnPreSaveToDB
  - Microsoft.Health.Utility.Diagnostics.DBLogger`1.Open
  - Microsoft.Health.Utility.Diagnostics.DBLogger`1.Sink(System.Collections.Generic.IList{`0})
  langs:
  - csharp
  - vb
  name: DBLogger<T>
  nameWithType: DBLogger<T>
  fullName: Microsoft.Health.Utility.Diagnostics.DBLogger<T>
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/DBLogger2.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DBLogger
    path: Diagnostics/Trace/DBLogger2.cs
    startLine: 19
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: ''
  example: []
  syntax:
    content: 'public sealed class DBLogger<T> : BaseLogger<T>, IDisposable where T : ILogEntry'
    content.vb: >-
      Public NotInheritable Class DBLogger(Of T As ILogEntry)
          Inherits BaseLogger(Of T)
          Implements IDisposable
    typeParameters:
    - id: T
  inheritance:
  - System.Object
  - Microsoft.Health.Utility.Diagnostics.BaseLogger{{T}}
  implements:
  - System.IDisposable
  inheritedMembers:
  - Microsoft.Health.Utility.Diagnostics.BaseLogger{{T}}.Flush
  - Microsoft.Health.Utility.Diagnostics.BaseLogger{{T}}.LogEvent({T})
  - Microsoft.Health.Utility.Diagnostics.BaseLogger{{T}}.LogEvents(System.Collections.Generic.IEnumerable{{T}})
  - Microsoft.Health.Utility.Diagnostics.BaseLogger{{T}}.SafeLogEvent({T})
  - Microsoft.Health.Utility.Diagnostics.BaseLogger{{T}}.SafeLogEvents(System.Collections.Generic.IEnumerable{{T}})
  - Microsoft.Health.Utility.Diagnostics.BaseLogger{{T}}.IsAvailable
  - Microsoft.Health.Utility.Diagnostics.BaseLogger{{T}}.MaxLogIntervalMilliseconds
  - Microsoft.Health.Utility.Diagnostics.BaseLogger{{T}}.LogBatchSize
  - Microsoft.Health.Utility.Diagnostics.BaseLogger{{T}}.Disposed
  - Microsoft.Health.Utility.Diagnostics.BaseLogger{{T}}.Dispose
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.Utility.Diagnostics.DBLogger`1.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  nameWithType.vb: DBLogger(Of T)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  fullName.vb: Microsoft.Health.Utility.Diagnostics.DBLogger(Of T)
  name.vb: DBLogger(Of T)
- uid: Microsoft.Health.Utility.Diagnostics.DBLogger`1.OnPreSaveToDB
  commentId: E:Microsoft.Health.Utility.Diagnostics.DBLogger`1.OnPreSaveToDB
  id: OnPreSaveToDB
  parent: Microsoft.Health.Utility.Diagnostics.DBLogger`1
  langs:
  - csharp
  - vb
  name: OnPreSaveToDB
  nameWithType: DBLogger<T>.OnPreSaveToDB
  fullName: Microsoft.Health.Utility.Diagnostics.DBLogger<T>.OnPreSaveToDB
  type: Event
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/DBLogger2.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: OnPreSaveToDB
    path: Diagnostics/Trace/DBLogger2.cs
    startLine: 25
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  syntax:
    content: public event EventHandler<DBLoggerEventArgs<T>> OnPreSaveToDB
    content.vb: Public Event OnPreSaveToDB As EventHandler(Of DBLoggerEventArgs(Of T))
    return:
      type: System.EventHandler{Microsoft.Health.Utility.Diagnostics.DBLoggerEventArgs{{T}}}
  nameWithType.vb: DBLogger(Of T).OnPreSaveToDB
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Utility.Diagnostics.DBLogger(Of T).OnPreSaveToDB
- uid: Microsoft.Health.Utility.Diagnostics.DBLogger`1.Dispose(System.Boolean)
  commentId: M:Microsoft.Health.Utility.Diagnostics.DBLogger`1.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Microsoft.Health.Utility.Diagnostics.DBLogger`1
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: DBLogger<T>.Dispose(Boolean)
  fullName: Microsoft.Health.Utility.Diagnostics.DBLogger<T>.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/DBLogger2.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Dispose
    path: Diagnostics/Trace/DBLogger2.cs
    startLine: 106
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nDispose(bool disposing) executes in two distinct scenarios.\nIf disposing equals true, the method has been called directly\nor indirectly by a user's code. Managed and unmanaged resources\ncan be disposed.\nIf disposing equals false, the method has been called by the\nruntime from inside the finalizer and you should not reference\nother objects. Only unmanaged resources can be disposed.\n"
  example: []
  syntax:
    content: protected override void Dispose(bool disposing)
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
      description: ''
  overridden: Microsoft.Health.Utility.Diagnostics.BaseLogger{{T}}.Dispose(System.Boolean)
  overload: Microsoft.Health.Utility.Diagnostics.DBLogger`1.Dispose*
  nameWithType.vb: DBLogger(Of T).Dispose(Boolean)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Microsoft.Health.Utility.Diagnostics.DBLogger(Of T).Dispose(System.Boolean)
- uid: Microsoft.Health.Utility.Diagnostics.DBLogger`1.Open
  commentId: M:Microsoft.Health.Utility.Diagnostics.DBLogger`1.Open
  id: Open
  parent: Microsoft.Health.Utility.Diagnostics.DBLogger`1
  langs:
  - csharp
  - vb
  name: Open()
  nameWithType: DBLogger<T>.Open()
  fullName: Microsoft.Health.Utility.Diagnostics.DBLogger<T>.Open()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/DBLogger2.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Open
    path: Diagnostics/Trace/DBLogger2.cs
    startLine: 130
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nStart threads;\n"
  example: []
  syntax:
    content: public override void Open()
    content.vb: Public Overrides Sub Open
  overridden: Microsoft.Health.Utility.Diagnostics.BaseLogger{{T}}.Open
  overload: Microsoft.Health.Utility.Diagnostics.DBLogger`1.Open*
  nameWithType.vb: DBLogger(Of T).Open()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.Health.Utility.Diagnostics.DBLogger(Of T).Open()
- uid: Microsoft.Health.Utility.Diagnostics.DBLogger`1.Close
  commentId: M:Microsoft.Health.Utility.Diagnostics.DBLogger`1.Close
  id: Close
  parent: Microsoft.Health.Utility.Diagnostics.DBLogger`1
  langs:
  - csharp
  - vb
  name: Close()
  nameWithType: DBLogger<T>.Close()
  fullName: Microsoft.Health.Utility.Diagnostics.DBLogger<T>.Close()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/DBLogger2.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Close
    path: Diagnostics/Trace/DBLogger2.cs
    startLine: 146
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nStop data flushing thread\n"
  example: []
  syntax:
    content: protected override void Close()
    content.vb: Protected Overrides Sub Close
  overridden: Microsoft.Health.Utility.Diagnostics.BaseLogger{{T}}.Close
  overload: Microsoft.Health.Utility.Diagnostics.DBLogger`1.Close*
  nameWithType.vb: DBLogger(Of T).Close()
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Microsoft.Health.Utility.Diagnostics.DBLogger(Of T).Close()
- uid: Microsoft.Health.Utility.Diagnostics.DBLogger`1.Sink(System.Collections.Generic.IList{`0})
  commentId: M:Microsoft.Health.Utility.Diagnostics.DBLogger`1.Sink(System.Collections.Generic.IList{`0})
  id: Sink(System.Collections.Generic.IList{`0})
  parent: Microsoft.Health.Utility.Diagnostics.DBLogger`1
  langs:
  - csharp
  - vb
  name: Sink(IList<T>)
  nameWithType: DBLogger<T>.Sink(IList<T>)
  fullName: Microsoft.Health.Utility.Diagnostics.DBLogger<T>.Sink(System.Collections.Generic.IList<T>)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/DBLogger2.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Sink
    path: Diagnostics/Trace/DBLogger2.cs
    startLine: 163
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nWrite events to the DB or file log.\n"
  example: []
  syntax:
    content: protected override void Sink(IList<T> events)
    content.vb: Protected Overrides Sub Sink(events As IList(Of T))
    parameters:
    - id: events
      type: System.Collections.Generic.IList{{T}}
  overridden: Microsoft.Health.Utility.Diagnostics.BaseLogger{{T}}.Sink(System.Collections.Generic.IList{{T}})
  overload: Microsoft.Health.Utility.Diagnostics.DBLogger`1.Sink*
  nameWithType.vb: DBLogger(Of T).Sink(IList(Of T))
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Microsoft.Health.Utility.Diagnostics.DBLogger(Of T).Sink(System.Collections.Generic.IList(Of T))
  name.vb: Sink(IList(Of T))
references:
- uid: Microsoft.Health.Utility.Diagnostics
  commentId: N:Microsoft.Health.Utility.Diagnostics
  isExternal: false
  name: Microsoft.Health.Utility.Diagnostics
  nameWithType: Microsoft.Health.Utility.Diagnostics
  fullName: Microsoft.Health.Utility.Diagnostics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.Utility.Diagnostics.BaseLogger{{T}}
  commentId: T:Microsoft.Health.Utility.Diagnostics.BaseLogger{`0}
  parent: Microsoft.Health.Utility.Diagnostics
  definition: Microsoft.Health.Utility.Diagnostics.BaseLogger`1
  name: BaseLogger<T>
  nameWithType: BaseLogger<T>
  fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger<T>
  nameWithType.vb: BaseLogger(Of T)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.BaseLogger(Of T)
  name.vb: BaseLogger(Of T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1
    name: BaseLogger
    nameWithType: BaseLogger
    fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1
    name: BaseLogger
    nameWithType: BaseLogger
    fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.Health.Utility.Diagnostics.BaseLogger{{T}}.Flush
  commentId: M:Microsoft.Health.Utility.Diagnostics.BaseLogger{`0}.Flush
  parent: Microsoft.Health.Utility.Diagnostics.BaseLogger{{T}}
  definition: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.Flush
  name: Flush()
  nameWithType: BaseLogger<T>.Flush()
  fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger<T>.Flush()
  nameWithType.vb: BaseLogger(Of T).Flush()
  fullName.vb: Microsoft.Health.Utility.Diagnostics.BaseLogger(Of T).Flush()
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.Flush
    name: Flush
    nameWithType: BaseLogger<T>.Flush
    fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger<T>.Flush
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.Flush
    name: Flush
    nameWithType: BaseLogger(Of T).Flush
    fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger(Of T).Flush
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.BaseLogger{{T}}.LogEvent({T})
  commentId: M:Microsoft.Health.Utility.Diagnostics.BaseLogger{`0}.LogEvent(`0)
  parent: Microsoft.Health.Utility.Diagnostics.BaseLogger{{T}}
  definition: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.LogEvent(`0)
  name: LogEvent(T)
  nameWithType: BaseLogger<T>.LogEvent(T)
  fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger<T>.LogEvent(T)
  nameWithType.vb: BaseLogger(Of T).LogEvent(T)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.BaseLogger(Of T).LogEvent(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.LogEvent(`0)
    name: LogEvent
    nameWithType: BaseLogger<T>.LogEvent
    fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger<T>.LogEvent
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.LogEvent(`0)
    name: LogEvent
    nameWithType: BaseLogger(Of T).LogEvent
    fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger(Of T).LogEvent
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.BaseLogger{{T}}.LogEvents(System.Collections.Generic.IEnumerable{{T}})
  commentId: M:Microsoft.Health.Utility.Diagnostics.BaseLogger{`0}.LogEvents(System.Collections.Generic.IEnumerable{`0})
  parent: Microsoft.Health.Utility.Diagnostics.BaseLogger{{T}}
  definition: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.LogEvents(System.Collections.Generic.IEnumerable{`0})
  name: LogEvents(IEnumerable<T>)
  nameWithType: BaseLogger<T>.LogEvents(IEnumerable<T>)
  fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger<T>.LogEvents(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: BaseLogger(Of T).LogEvents(IEnumerable(Of T))
  fullName.vb: Microsoft.Health.Utility.Diagnostics.BaseLogger(Of T).LogEvents(System.Collections.Generic.IEnumerable(Of T))
  name.vb: LogEvents(IEnumerable(Of T))
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.LogEvents(System.Collections.Generic.IEnumerable{`0})
    name: LogEvents
    nameWithType: BaseLogger<T>.LogEvents
    fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger<T>.LogEvents
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.LogEvents(System.Collections.Generic.IEnumerable{`0})
    name: LogEvents
    nameWithType: BaseLogger(Of T).LogEvents
    fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger(Of T).LogEvents
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.BaseLogger{{T}}.SafeLogEvent({T})
  commentId: M:Microsoft.Health.Utility.Diagnostics.BaseLogger{`0}.SafeLogEvent(`0)
  parent: Microsoft.Health.Utility.Diagnostics.BaseLogger{{T}}
  definition: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.SafeLogEvent(`0)
  name: SafeLogEvent(T)
  nameWithType: BaseLogger<T>.SafeLogEvent(T)
  fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger<T>.SafeLogEvent(T)
  nameWithType.vb: BaseLogger(Of T).SafeLogEvent(T)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.BaseLogger(Of T).SafeLogEvent(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.SafeLogEvent(`0)
    name: SafeLogEvent
    nameWithType: BaseLogger<T>.SafeLogEvent
    fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger<T>.SafeLogEvent
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.SafeLogEvent(`0)
    name: SafeLogEvent
    nameWithType: BaseLogger(Of T).SafeLogEvent
    fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger(Of T).SafeLogEvent
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.BaseLogger{{T}}.SafeLogEvents(System.Collections.Generic.IEnumerable{{T}})
  commentId: M:Microsoft.Health.Utility.Diagnostics.BaseLogger{`0}.SafeLogEvents(System.Collections.Generic.IEnumerable{`0})
  parent: Microsoft.Health.Utility.Diagnostics.BaseLogger{{T}}
  definition: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.SafeLogEvents(System.Collections.Generic.IEnumerable{`0})
  name: SafeLogEvents(IEnumerable<T>)
  nameWithType: BaseLogger<T>.SafeLogEvents(IEnumerable<T>)
  fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger<T>.SafeLogEvents(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: BaseLogger(Of T).SafeLogEvents(IEnumerable(Of T))
  fullName.vb: Microsoft.Health.Utility.Diagnostics.BaseLogger(Of T).SafeLogEvents(System.Collections.Generic.IEnumerable(Of T))
  name.vb: SafeLogEvents(IEnumerable(Of T))
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.SafeLogEvents(System.Collections.Generic.IEnumerable{`0})
    name: SafeLogEvents
    nameWithType: BaseLogger<T>.SafeLogEvents
    fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger<T>.SafeLogEvents
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.SafeLogEvents(System.Collections.Generic.IEnumerable{`0})
    name: SafeLogEvents
    nameWithType: BaseLogger(Of T).SafeLogEvents
    fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger(Of T).SafeLogEvents
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.BaseLogger{{T}}.IsAvailable
  commentId: P:Microsoft.Health.Utility.Diagnostics.BaseLogger{`0}.IsAvailable
  parent: Microsoft.Health.Utility.Diagnostics.BaseLogger{{T}}
  definition: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.IsAvailable
  name: IsAvailable
  nameWithType: BaseLogger<T>.IsAvailable
  fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger<T>.IsAvailable
  nameWithType.vb: BaseLogger(Of T).IsAvailable
  fullName.vb: Microsoft.Health.Utility.Diagnostics.BaseLogger(Of T).IsAvailable
- uid: Microsoft.Health.Utility.Diagnostics.BaseLogger{{T}}.MaxLogIntervalMilliseconds
  commentId: P:Microsoft.Health.Utility.Diagnostics.BaseLogger{`0}.MaxLogIntervalMilliseconds
  parent: Microsoft.Health.Utility.Diagnostics.BaseLogger{{T}}
  definition: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.MaxLogIntervalMilliseconds
  name: MaxLogIntervalMilliseconds
  nameWithType: BaseLogger<T>.MaxLogIntervalMilliseconds
  fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger<T>.MaxLogIntervalMilliseconds
  nameWithType.vb: BaseLogger(Of T).MaxLogIntervalMilliseconds
  fullName.vb: Microsoft.Health.Utility.Diagnostics.BaseLogger(Of T).MaxLogIntervalMilliseconds
- uid: Microsoft.Health.Utility.Diagnostics.BaseLogger{{T}}.LogBatchSize
  commentId: P:Microsoft.Health.Utility.Diagnostics.BaseLogger{`0}.LogBatchSize
  parent: Microsoft.Health.Utility.Diagnostics.BaseLogger{{T}}
  definition: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.LogBatchSize
  name: LogBatchSize
  nameWithType: BaseLogger<T>.LogBatchSize
  fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger<T>.LogBatchSize
  nameWithType.vb: BaseLogger(Of T).LogBatchSize
  fullName.vb: Microsoft.Health.Utility.Diagnostics.BaseLogger(Of T).LogBatchSize
- uid: Microsoft.Health.Utility.Diagnostics.BaseLogger{{T}}.Disposed
  commentId: P:Microsoft.Health.Utility.Diagnostics.BaseLogger{`0}.Disposed
  parent: Microsoft.Health.Utility.Diagnostics.BaseLogger{{T}}
  definition: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.Disposed
  name: Disposed
  nameWithType: BaseLogger<T>.Disposed
  fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger<T>.Disposed
  nameWithType.vb: BaseLogger(Of T).Disposed
  fullName.vb: Microsoft.Health.Utility.Diagnostics.BaseLogger(Of T).Disposed
- uid: Microsoft.Health.Utility.Diagnostics.BaseLogger{{T}}.Dispose
  commentId: M:Microsoft.Health.Utility.Diagnostics.BaseLogger{`0}.Dispose
  parent: Microsoft.Health.Utility.Diagnostics.BaseLogger{{T}}
  definition: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.Dispose
  name: Dispose()
  nameWithType: BaseLogger<T>.Dispose()
  fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger<T>.Dispose()
  nameWithType.vb: BaseLogger(Of T).Dispose()
  fullName.vb: Microsoft.Health.Utility.Diagnostics.BaseLogger(Of T).Dispose()
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.Dispose
    name: Dispose
    nameWithType: BaseLogger<T>.Dispose
    fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger<T>.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.Dispose
    name: Dispose
    nameWithType: BaseLogger(Of T).Dispose
    fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger(Of T).Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.DBLogger`1.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<DBLogger<T>>()
  nameWithType: TypeHelper.ValueOrDbNull<DBLogger<T>>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Utility.Diagnostics.DBLogger<T>>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of DBLogger(Of T))()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Utility.Diagnostics.DBLogger(Of T))()
  name.vb: ValueOrDbNull(Of DBLogger(Of T))()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<DBLogger<T>>
    nameWithType: TypeHelper.ValueOrDbNull<DBLogger<T>>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Utility.Diagnostics.DBLogger<T>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of DBLogger(Of T))
    nameWithType: TypeHelper.ValueOrDbNull(Of DBLogger(Of T))
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Utility.Diagnostics.DBLogger(Of T))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1
  commentId: T:Microsoft.Health.Utility.Diagnostics.BaseLogger`1
  isExternal: false
  name: BaseLogger<T>
  nameWithType: BaseLogger<T>
  fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger<T>
  nameWithType.vb: BaseLogger(Of T)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.BaseLogger(Of T)
  name.vb: BaseLogger(Of T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1
    name: BaseLogger
    nameWithType: BaseLogger
    fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1
    name: BaseLogger
    nameWithType: BaseLogger
    fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.Flush
  commentId: M:Microsoft.Health.Utility.Diagnostics.BaseLogger`1.Flush
  isExternal: false
  name: Flush()
  nameWithType: BaseLogger<T>.Flush()
  fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger<T>.Flush()
  nameWithType.vb: BaseLogger(Of T).Flush()
  fullName.vb: Microsoft.Health.Utility.Diagnostics.BaseLogger(Of T).Flush()
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.Flush
    name: Flush
    nameWithType: BaseLogger<T>.Flush
    fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger<T>.Flush
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.Flush
    name: Flush
    nameWithType: BaseLogger(Of T).Flush
    fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger(Of T).Flush
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.LogEvent(`0)
  commentId: M:Microsoft.Health.Utility.Diagnostics.BaseLogger`1.LogEvent(`0)
  isExternal: false
  name: LogEvent(T)
  nameWithType: BaseLogger<T>.LogEvent(T)
  fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger<T>.LogEvent(T)
  nameWithType.vb: BaseLogger(Of T).LogEvent(T)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.BaseLogger(Of T).LogEvent(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.LogEvent(`0)
    name: LogEvent
    nameWithType: BaseLogger<T>.LogEvent
    fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger<T>.LogEvent
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.LogEvent(`0)
    name: LogEvent
    nameWithType: BaseLogger(Of T).LogEvent
    fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger(Of T).LogEvent
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.LogEvents(System.Collections.Generic.IEnumerable{`0})
  commentId: M:Microsoft.Health.Utility.Diagnostics.BaseLogger`1.LogEvents(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: LogEvents(IEnumerable<T>)
  nameWithType: BaseLogger<T>.LogEvents(IEnumerable<T>)
  fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger<T>.LogEvents(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: BaseLogger(Of T).LogEvents(IEnumerable(Of T))
  fullName.vb: Microsoft.Health.Utility.Diagnostics.BaseLogger(Of T).LogEvents(System.Collections.Generic.IEnumerable(Of T))
  name.vb: LogEvents(IEnumerable(Of T))
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.LogEvents(System.Collections.Generic.IEnumerable{`0})
    name: LogEvents
    nameWithType: BaseLogger<T>.LogEvents
    fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger<T>.LogEvents
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.LogEvents(System.Collections.Generic.IEnumerable{`0})
    name: LogEvents
    nameWithType: BaseLogger(Of T).LogEvents
    fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger(Of T).LogEvents
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.SafeLogEvent(`0)
  commentId: M:Microsoft.Health.Utility.Diagnostics.BaseLogger`1.SafeLogEvent(`0)
  isExternal: false
  name: SafeLogEvent(T)
  nameWithType: BaseLogger<T>.SafeLogEvent(T)
  fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger<T>.SafeLogEvent(T)
  nameWithType.vb: BaseLogger(Of T).SafeLogEvent(T)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.BaseLogger(Of T).SafeLogEvent(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.SafeLogEvent(`0)
    name: SafeLogEvent
    nameWithType: BaseLogger<T>.SafeLogEvent
    fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger<T>.SafeLogEvent
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.SafeLogEvent(`0)
    name: SafeLogEvent
    nameWithType: BaseLogger(Of T).SafeLogEvent
    fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger(Of T).SafeLogEvent
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.SafeLogEvents(System.Collections.Generic.IEnumerable{`0})
  commentId: M:Microsoft.Health.Utility.Diagnostics.BaseLogger`1.SafeLogEvents(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: SafeLogEvents(IEnumerable<T>)
  nameWithType: BaseLogger<T>.SafeLogEvents(IEnumerable<T>)
  fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger<T>.SafeLogEvents(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: BaseLogger(Of T).SafeLogEvents(IEnumerable(Of T))
  fullName.vb: Microsoft.Health.Utility.Diagnostics.BaseLogger(Of T).SafeLogEvents(System.Collections.Generic.IEnumerable(Of T))
  name.vb: SafeLogEvents(IEnumerable(Of T))
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.SafeLogEvents(System.Collections.Generic.IEnumerable{`0})
    name: SafeLogEvents
    nameWithType: BaseLogger<T>.SafeLogEvents
    fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger<T>.SafeLogEvents
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.SafeLogEvents(System.Collections.Generic.IEnumerable{`0})
    name: SafeLogEvents
    nameWithType: BaseLogger(Of T).SafeLogEvents
    fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger(Of T).SafeLogEvents
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.IsAvailable
  commentId: P:Microsoft.Health.Utility.Diagnostics.BaseLogger`1.IsAvailable
  isExternal: false
  name: IsAvailable
  nameWithType: BaseLogger<T>.IsAvailable
  fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger<T>.IsAvailable
  nameWithType.vb: BaseLogger(Of T).IsAvailable
  fullName.vb: Microsoft.Health.Utility.Diagnostics.BaseLogger(Of T).IsAvailable
- uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.MaxLogIntervalMilliseconds
  commentId: P:Microsoft.Health.Utility.Diagnostics.BaseLogger`1.MaxLogIntervalMilliseconds
  isExternal: false
  name: MaxLogIntervalMilliseconds
  nameWithType: BaseLogger<T>.MaxLogIntervalMilliseconds
  fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger<T>.MaxLogIntervalMilliseconds
  nameWithType.vb: BaseLogger(Of T).MaxLogIntervalMilliseconds
  fullName.vb: Microsoft.Health.Utility.Diagnostics.BaseLogger(Of T).MaxLogIntervalMilliseconds
- uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.LogBatchSize
  commentId: P:Microsoft.Health.Utility.Diagnostics.BaseLogger`1.LogBatchSize
  isExternal: false
  name: LogBatchSize
  nameWithType: BaseLogger<T>.LogBatchSize
  fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger<T>.LogBatchSize
  nameWithType.vb: BaseLogger(Of T).LogBatchSize
  fullName.vb: Microsoft.Health.Utility.Diagnostics.BaseLogger(Of T).LogBatchSize
- uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.Disposed
  commentId: P:Microsoft.Health.Utility.Diagnostics.BaseLogger`1.Disposed
  isExternal: false
  name: Disposed
  nameWithType: BaseLogger<T>.Disposed
  fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger<T>.Disposed
  nameWithType.vb: BaseLogger(Of T).Disposed
  fullName.vb: Microsoft.Health.Utility.Diagnostics.BaseLogger(Of T).Disposed
- uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.Dispose
  commentId: M:Microsoft.Health.Utility.Diagnostics.BaseLogger`1.Dispose
  isExternal: false
  name: Dispose()
  nameWithType: BaseLogger<T>.Dispose()
  fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger<T>.Dispose()
  nameWithType.vb: BaseLogger(Of T).Dispose()
  fullName.vb: Microsoft.Health.Utility.Diagnostics.BaseLogger(Of T).Dispose()
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.Dispose
    name: Dispose
    nameWithType: BaseLogger<T>.Dispose
    fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger<T>.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.Dispose
    name: Dispose
    nameWithType: BaseLogger(Of T).Dispose
    fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger(Of T).Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: System.EventHandler{Microsoft.Health.Utility.Diagnostics.DBLoggerEventArgs{{T}}}
  commentId: T:System.EventHandler{Microsoft.Health.Utility.Diagnostics.DBLoggerEventArgs{`0}}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<DBLoggerEventArgs<T>>
  nameWithType: EventHandler<DBLoggerEventArgs<T>>
  fullName: System.EventHandler<Microsoft.Health.Utility.Diagnostics.DBLoggerEventArgs<T>>
  nameWithType.vb: EventHandler(Of DBLoggerEventArgs(Of T))
  fullName.vb: System.EventHandler(Of Microsoft.Health.Utility.Diagnostics.DBLoggerEventArgs(Of T))
  name.vb: EventHandler(Of DBLoggerEventArgs(Of T))
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.Utility.Diagnostics.DBLoggerEventArgs`1
    name: DBLoggerEventArgs
    nameWithType: DBLoggerEventArgs
    fullName: Microsoft.Health.Utility.Diagnostics.DBLoggerEventArgs
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.Utility.Diagnostics.DBLoggerEventArgs`1
    name: DBLoggerEventArgs
    nameWithType: DBLoggerEventArgs
    fullName: Microsoft.Health.Utility.Diagnostics.DBLoggerEventArgs
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.BaseLogger{{T}}.Dispose(System.Boolean)
  commentId: M:Microsoft.Health.Utility.Diagnostics.BaseLogger{`0}.Dispose(System.Boolean)
  parent: Microsoft.Health.Utility.Diagnostics.BaseLogger{{T}}
  definition: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.Dispose(System.Boolean)
  name: Dispose(Boolean)
  nameWithType: BaseLogger<T>.Dispose(Boolean)
  fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger<T>.Dispose(System.Boolean)
  nameWithType.vb: BaseLogger(Of T).Dispose(Boolean)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.BaseLogger(Of T).Dispose(System.Boolean)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.Dispose(System.Boolean)
    name: Dispose
    nameWithType: BaseLogger<T>.Dispose
    fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger<T>.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.Dispose(System.Boolean)
    name: Dispose
    nameWithType: BaseLogger(Of T).Dispose
    fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger(Of T).Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.DBLogger`1.Dispose*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.DBLogger`1.Dispose
  isExternal: false
  name: Dispose
  nameWithType: DBLogger<T>.Dispose
  fullName: Microsoft.Health.Utility.Diagnostics.DBLogger<T>.Dispose
  nameWithType.vb: DBLogger(Of T).Dispose
  fullName.vb: Microsoft.Health.Utility.Diagnostics.DBLogger(Of T).Dispose
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.Dispose(System.Boolean)
  commentId: M:Microsoft.Health.Utility.Diagnostics.BaseLogger`1.Dispose(System.Boolean)
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: BaseLogger<T>.Dispose(Boolean)
  fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger<T>.Dispose(System.Boolean)
  nameWithType.vb: BaseLogger(Of T).Dispose(Boolean)
  fullName.vb: Microsoft.Health.Utility.Diagnostics.BaseLogger(Of T).Dispose(System.Boolean)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.Dispose(System.Boolean)
    name: Dispose
    nameWithType: BaseLogger<T>.Dispose
    fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger<T>.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.Dispose(System.Boolean)
    name: Dispose
    nameWithType: BaseLogger(Of T).Dispose
    fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger(Of T).Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.BaseLogger{{T}}.Open
  commentId: M:Microsoft.Health.Utility.Diagnostics.BaseLogger{`0}.Open
  parent: Microsoft.Health.Utility.Diagnostics.BaseLogger{{T}}
  definition: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.Open
  name: Open()
  nameWithType: BaseLogger<T>.Open()
  fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger<T>.Open()
  nameWithType.vb: BaseLogger(Of T).Open()
  fullName.vb: Microsoft.Health.Utility.Diagnostics.BaseLogger(Of T).Open()
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.Open
    name: Open
    nameWithType: BaseLogger<T>.Open
    fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger<T>.Open
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.Open
    name: Open
    nameWithType: BaseLogger(Of T).Open
    fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger(Of T).Open
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.DBLogger`1.Open*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.DBLogger`1.Open
  isExternal: false
  name: Open
  nameWithType: DBLogger<T>.Open
  fullName: Microsoft.Health.Utility.Diagnostics.DBLogger<T>.Open
  nameWithType.vb: DBLogger(Of T).Open
  fullName.vb: Microsoft.Health.Utility.Diagnostics.DBLogger(Of T).Open
- uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.Open
  commentId: M:Microsoft.Health.Utility.Diagnostics.BaseLogger`1.Open
  isExternal: false
  name: Open()
  nameWithType: BaseLogger<T>.Open()
  fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger<T>.Open()
  nameWithType.vb: BaseLogger(Of T).Open()
  fullName.vb: Microsoft.Health.Utility.Diagnostics.BaseLogger(Of T).Open()
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.Open
    name: Open
    nameWithType: BaseLogger<T>.Open
    fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger<T>.Open
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.Open
    name: Open
    nameWithType: BaseLogger(Of T).Open
    fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger(Of T).Open
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.BaseLogger{{T}}.Close
  commentId: M:Microsoft.Health.Utility.Diagnostics.BaseLogger{`0}.Close
  parent: Microsoft.Health.Utility.Diagnostics.BaseLogger{{T}}
  definition: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.Close
  name: Close()
  nameWithType: BaseLogger<T>.Close()
  fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger<T>.Close()
  nameWithType.vb: BaseLogger(Of T).Close()
  fullName.vb: Microsoft.Health.Utility.Diagnostics.BaseLogger(Of T).Close()
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.Close
    name: Close
    nameWithType: BaseLogger<T>.Close
    fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger<T>.Close
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.Close
    name: Close
    nameWithType: BaseLogger(Of T).Close
    fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger(Of T).Close
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.DBLogger`1.Close*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.DBLogger`1.Close
  isExternal: false
  name: Close
  nameWithType: DBLogger<T>.Close
  fullName: Microsoft.Health.Utility.Diagnostics.DBLogger<T>.Close
  nameWithType.vb: DBLogger(Of T).Close
  fullName.vb: Microsoft.Health.Utility.Diagnostics.DBLogger(Of T).Close
- uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.Close
  commentId: M:Microsoft.Health.Utility.Diagnostics.BaseLogger`1.Close
  isExternal: false
  name: Close()
  nameWithType: BaseLogger<T>.Close()
  fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger<T>.Close()
  nameWithType.vb: BaseLogger(Of T).Close()
  fullName.vb: Microsoft.Health.Utility.Diagnostics.BaseLogger(Of T).Close()
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.Close
    name: Close
    nameWithType: BaseLogger<T>.Close
    fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger<T>.Close
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.Close
    name: Close
    nameWithType: BaseLogger(Of T).Close
    fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger(Of T).Close
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.BaseLogger{{T}}.Sink(System.Collections.Generic.IList{{T}})
  commentId: M:Microsoft.Health.Utility.Diagnostics.BaseLogger{`0}.Sink(System.Collections.Generic.IList{`0})
  parent: Microsoft.Health.Utility.Diagnostics.BaseLogger{{T}}
  definition: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.Sink(System.Collections.Generic.IList{`0})
  name: Sink(IList<T>)
  nameWithType: BaseLogger<T>.Sink(IList<T>)
  fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger<T>.Sink(System.Collections.Generic.IList<T>)
  nameWithType.vb: BaseLogger(Of T).Sink(IList(Of T))
  fullName.vb: Microsoft.Health.Utility.Diagnostics.BaseLogger(Of T).Sink(System.Collections.Generic.IList(Of T))
  name.vb: Sink(IList(Of T))
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.Sink(System.Collections.Generic.IList{`0})
    name: Sink
    nameWithType: BaseLogger<T>.Sink
    fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger<T>.Sink
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.Sink(System.Collections.Generic.IList{`0})
    name: Sink
    nameWithType: BaseLogger(Of T).Sink
    fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger(Of T).Sink
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.DBLogger`1.Sink*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.DBLogger`1.Sink
  isExternal: false
  name: Sink
  nameWithType: DBLogger<T>.Sink
  fullName: Microsoft.Health.Utility.Diagnostics.DBLogger<T>.Sink
  nameWithType.vb: DBLogger(Of T).Sink
  fullName.vb: Microsoft.Health.Utility.Diagnostics.DBLogger(Of T).Sink
- uid: System.Collections.Generic.IList{{T}}
  commentId: T:System.Collections.Generic.IList{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.Sink(System.Collections.Generic.IList{`0})
  commentId: M:Microsoft.Health.Utility.Diagnostics.BaseLogger`1.Sink(System.Collections.Generic.IList{`0})
  isExternal: true
  name: Sink(IList<T>)
  nameWithType: BaseLogger<T>.Sink(IList<T>)
  fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger<T>.Sink(System.Collections.Generic.IList<T>)
  nameWithType.vb: BaseLogger(Of T).Sink(IList(Of T))
  fullName.vb: Microsoft.Health.Utility.Diagnostics.BaseLogger(Of T).Sink(System.Collections.Generic.IList(Of T))
  name.vb: Sink(IList(Of T))
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.Sink(System.Collections.Generic.IList{`0})
    name: Sink
    nameWithType: BaseLogger<T>.Sink
    fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger<T>.Sink
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.BaseLogger`1.Sink(System.Collections.Generic.IList{`0})
    name: Sink
    nameWithType: BaseLogger(Of T).Sink
    fullName: Microsoft.Health.Utility.Diagnostics.BaseLogger(Of T).Sink
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
