### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings
  commentId: T:Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings
  id: GlobalDatabaseConnectionStrings
  parent: Microsoft.Health.Utility.Configurations
  children:
  - Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.#ctor(Microsoft.Health.Utility.Configurations.ConfigurationDictionary)
  - Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Configuration
  - Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.ConfigurationKey
  - Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.ConnectionStringPrefix
  - Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Count
  - Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Dictionary
  - Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.DictionaryKey
  - Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.DirectConfigKey
  - Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Directory
  - Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.DirectoryKey
  - Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Item(System.String)
  - Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Keys
  - Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Log
  - Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.LogKey
  - Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.MasterKey
  - Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.PartnerReports
  - Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.PartnerReportsKey
  - Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.PrependConnectionStringPrefix(System.String)
  - Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Queue
  - Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.QueueKey
  - Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Record
  - Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.RecordKey
  - Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.SharedDirectory
  - Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.SharedDirectoryKey
  - Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.StripConnectionStringPrefix(System.String)
  - Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Telemetry
  - Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.TelemetryKey
  langs:
  - csharp
  - vb
  name: GlobalDatabaseConnectionStrings
  nameWithType: GlobalDatabaseConnectionStrings
  fullName: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalDatabaseConnectionStrings.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GlobalDatabaseConnectionStrings
    path: HVConfig/GlobalDatabaseConnectionStrings.cs
    startLine: 15
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nProvides a set of keys for accessing HV global database configs that are shared across multiple components.\n"
  example: []
  syntax:
    content: public class GlobalDatabaseConnectionStrings
    content.vb: Public Class GlobalDatabaseConnectionStrings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.ConnectionStringPrefix
  commentId: F:Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.ConnectionStringPrefix
  id: ConnectionStringPrefix
  parent: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings
  langs:
  - csharp
  - vb
  name: ConnectionStringPrefix
  nameWithType: GlobalDatabaseConnectionStrings.ConnectionStringPrefix
  fullName: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.ConnectionStringPrefix
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalDatabaseConnectionStrings.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ConnectionStringPrefix
    path: HVConfig/GlobalDatabaseConnectionStrings.cs
    startLine: 18
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  syntax:
    content: public const string ConnectionStringPrefix = "ConnectionString."
    content.vb: Public Const ConnectionStringPrefix As String = "ConnectionString."
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.ConfigurationKey
  commentId: F:Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.ConfigurationKey
  id: ConfigurationKey
  parent: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings
  langs:
  - csharp
  - vb
  name: ConfigurationKey
  nameWithType: GlobalDatabaseConnectionStrings.ConfigurationKey
  fullName: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.ConfigurationKey
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalDatabaseConnectionStrings.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ConfigurationKey
    path: HVConfig/GlobalDatabaseConnectionStrings.cs
    startLine: 23
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nKey to use to retrieve configuration database connection\n"
  example: []
  syntax:
    content: public const string ConfigurationKey = "ConnectionString.Configuration"
    content.vb: Public Const ConfigurationKey As String = "ConnectionString.Configuration"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.DictionaryKey
  commentId: F:Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.DictionaryKey
  id: DictionaryKey
  parent: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings
  langs:
  - csharp
  - vb
  name: DictionaryKey
  nameWithType: GlobalDatabaseConnectionStrings.DictionaryKey
  fullName: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.DictionaryKey
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalDatabaseConnectionStrings.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DictionaryKey
    path: HVConfig/GlobalDatabaseConnectionStrings.cs
    startLine: 28
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nKey to use to retrieve dictionary database connection\n"
  example: []
  syntax:
    content: public const string DictionaryKey = "ConnectionString.Dictionary"
    content.vb: Public Const DictionaryKey As String = "ConnectionString.Dictionary"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.DirectConfigKey
  commentId: F:Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.DirectConfigKey
  id: DirectConfigKey
  parent: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings
  langs:
  - csharp
  - vb
  name: DirectConfigKey
  nameWithType: GlobalDatabaseConnectionStrings.DirectConfigKey
  fullName: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.DirectConfigKey
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalDatabaseConnectionStrings.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DirectConfigKey
    path: HVConfig/GlobalDatabaseConnectionStrings.cs
    startLine: 33
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nKey to use to retrieve direct config database connection\n"
  example: []
  syntax:
    content: public const string DirectConfigKey = "ConnectionString.DirectConfig"
    content.vb: Public Const DirectConfigKey As String = "ConnectionString.DirectConfig"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.DirectoryKey
  commentId: F:Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.DirectoryKey
  id: DirectoryKey
  parent: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings
  langs:
  - csharp
  - vb
  name: DirectoryKey
  nameWithType: GlobalDatabaseConnectionStrings.DirectoryKey
  fullName: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.DirectoryKey
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalDatabaseConnectionStrings.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DirectoryKey
    path: HVConfig/GlobalDatabaseConnectionStrings.cs
    startLine: 38
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nKey to use to retrieve directory database connection\n"
  example: []
  syntax:
    content: public const string DirectoryKey = "ConnectionString.Directory"
    content.vb: Public Const DirectoryKey As String = "ConnectionString.Directory"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.SharedDirectoryKey
  commentId: F:Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.SharedDirectoryKey
  id: SharedDirectoryKey
  parent: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings
  langs:
  - csharp
  - vb
  name: SharedDirectoryKey
  nameWithType: GlobalDatabaseConnectionStrings.SharedDirectoryKey
  fullName: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.SharedDirectoryKey
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalDatabaseConnectionStrings.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SharedDirectoryKey
    path: HVConfig/GlobalDatabaseConnectionStrings.cs
    startLine: 43
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nKey to use to retrieve shared directory database connection\n"
  example: []
  syntax:
    content: public const string SharedDirectoryKey = "ConnectionString.SharedDirectory"
    content.vb: Public Const SharedDirectoryKey As String = "ConnectionString.SharedDirectory"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.MasterKey
  commentId: F:Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.MasterKey
  id: MasterKey
  parent: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings
  langs:
  - csharp
  - vb
  name: MasterKey
  nameWithType: GlobalDatabaseConnectionStrings.MasterKey
  fullName: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.MasterKey
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalDatabaseConnectionStrings.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: MasterKey
    path: HVConfig/GlobalDatabaseConnectionStrings.cs
    startLine: 48
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nKey to use to retrieve system master database connection (for SQL Azure)\n"
  example: []
  syntax:
    content: public const string MasterKey = "ConnectionString.Master"
    content.vb: Public Const MasterKey As String = "ConnectionString.Master"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.PartnerReportsKey
  commentId: F:Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.PartnerReportsKey
  id: PartnerReportsKey
  parent: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings
  langs:
  - csharp
  - vb
  name: PartnerReportsKey
  nameWithType: GlobalDatabaseConnectionStrings.PartnerReportsKey
  fullName: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.PartnerReportsKey
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalDatabaseConnectionStrings.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: PartnerReportsKey
    path: HVConfig/GlobalDatabaseConnectionStrings.cs
    startLine: 53
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nKey to use to retrieve shared report database connection\n"
  example: []
  syntax:
    content: public const string PartnerReportsKey = "ConnectionString.PartnerReports"
    content.vb: Public Const PartnerReportsKey As String = "ConnectionString.PartnerReports"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.LogKey
  commentId: F:Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.LogKey
  id: LogKey
  parent: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings
  langs:
  - csharp
  - vb
  name: LogKey
  nameWithType: GlobalDatabaseConnectionStrings.LogKey
  fullName: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.LogKey
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalDatabaseConnectionStrings.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: LogKey
    path: HVConfig/GlobalDatabaseConnectionStrings.cs
    startLine: 59
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nKey to use to retrieve wclog database connection.\nNote that each component can override this if component has its own wclog db.\n"
  example: []
  syntax:
    content: public const string LogKey = "ConnectionString.WcLog"
    content.vb: Public Const LogKey As String = "ConnectionString.WcLog"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.QueueKey
  commentId: F:Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.QueueKey
  id: QueueKey
  parent: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings
  langs:
  - csharp
  - vb
  name: QueueKey
  nameWithType: GlobalDatabaseConnectionStrings.QueueKey
  fullName: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.QueueKey
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalDatabaseConnectionStrings.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: QueueKey
    path: HVConfig/GlobalDatabaseConnectionStrings.cs
    startLine: 64
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nKey to use to retrieve queue database connection\n"
  example: []
  syntax:
    content: public const string QueueKey = "ConnectionString.Queue"
    content.vb: Public Const QueueKey As String = "ConnectionString.Queue"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.TelemetryKey
  commentId: F:Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.TelemetryKey
  id: TelemetryKey
  parent: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings
  langs:
  - csharp
  - vb
  name: TelemetryKey
  nameWithType: GlobalDatabaseConnectionStrings.TelemetryKey
  fullName: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.TelemetryKey
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalDatabaseConnectionStrings.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: TelemetryKey
    path: HVConfig/GlobalDatabaseConnectionStrings.cs
    startLine: 69
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nKey to use to retrieve telemetry database connection\n"
  example: []
  syntax:
    content: public const string TelemetryKey = "ConnectionString.Telemetry"
    content.vb: Public Const TelemetryKey As String = "ConnectionString.Telemetry"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.RecordKey
  commentId: F:Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.RecordKey
  id: RecordKey
  parent: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings
  langs:
  - csharp
  - vb
  name: RecordKey
  nameWithType: GlobalDatabaseConnectionStrings.RecordKey
  fullName: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.RecordKey
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalDatabaseConnectionStrings.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: RecordKey
    path: HVConfig/GlobalDatabaseConnectionStrings.cs
    startLine: 74
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nKey to use to retrieve record database connection\n"
  example: []
  syntax:
    content: public const string RecordKey = "ConnectionString.Data-Test"
    content.vb: Public Const RecordKey As String = "ConnectionString.Data-Test"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.#ctor(Microsoft.Health.Utility.Configurations.ConfigurationDictionary)
  commentId: M:Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.#ctor(Microsoft.Health.Utility.Configurations.ConfigurationDictionary)
  id: '#ctor(Microsoft.Health.Utility.Configurations.ConfigurationDictionary)'
  parent: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings
  langs:
  - csharp
  - vb
  name: GlobalDatabaseConnectionStrings(ConfigurationDictionary)
  nameWithType: GlobalDatabaseConnectionStrings.GlobalDatabaseConnectionStrings(ConfigurationDictionary)
  fullName: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.GlobalDatabaseConnectionStrings(Microsoft.Health.Utility.Configurations.ConfigurationDictionary)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalDatabaseConnectionStrings.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: HVConfig/GlobalDatabaseConnectionStrings.cs
    startLine: 83
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nConstructor\n"
  example: []
  syntax:
    content: public GlobalDatabaseConnectionStrings(ConfigurationDictionary configurations)
    content.vb: Public Sub New(configurations As ConfigurationDictionary)
    parameters:
    - id: configurations
      type: Microsoft.Health.Utility.Configurations.ConfigurationDictionary
  overload: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Configuration
  commentId: P:Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Configuration
  id: Configuration
  parent: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings
  langs:
  - csharp
  - vb
  name: Configuration
  nameWithType: GlobalDatabaseConnectionStrings.Configuration
  fullName: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Configuration
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalDatabaseConnectionStrings.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Configuration
    path: HVConfig/GlobalDatabaseConnectionStrings.cs
    startLine: 111
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nConnection string for configuration database\n"
  example: []
  syntax:
    content: public string Configuration { get; }
    content.vb: Public ReadOnly Property Configuration As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Configuration*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Dictionary
  commentId: P:Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Dictionary
  id: Dictionary
  parent: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings
  langs:
  - csharp
  - vb
  name: Dictionary
  nameWithType: GlobalDatabaseConnectionStrings.Dictionary
  fullName: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Dictionary
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalDatabaseConnectionStrings.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Dictionary
    path: HVConfig/GlobalDatabaseConnectionStrings.cs
    startLine: 122
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nConnection string for dictionary database\n"
  example: []
  syntax:
    content: public string Dictionary { get; }
    content.vb: Public ReadOnly Property Dictionary As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Dictionary*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Directory
  commentId: P:Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Directory
  id: Directory
  parent: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings
  langs:
  - csharp
  - vb
  name: Directory
  nameWithType: GlobalDatabaseConnectionStrings.Directory
  fullName: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Directory
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalDatabaseConnectionStrings.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Directory
    path: HVConfig/GlobalDatabaseConnectionStrings.cs
    startLine: 133
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nConnection string for directory database\n"
  example: []
  syntax:
    content: public string Directory { get; }
    content.vb: Public ReadOnly Property Directory As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Directory*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.SharedDirectory
  commentId: P:Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.SharedDirectory
  id: SharedDirectory
  parent: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings
  langs:
  - csharp
  - vb
  name: SharedDirectory
  nameWithType: GlobalDatabaseConnectionStrings.SharedDirectory
  fullName: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.SharedDirectory
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalDatabaseConnectionStrings.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SharedDirectory
    path: HVConfig/GlobalDatabaseConnectionStrings.cs
    startLine: 144
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nConnection string for shared directory database\n"
  example: []
  syntax:
    content: public string SharedDirectory { get; }
    content.vb: Public ReadOnly Property SharedDirectory As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.SharedDirectory*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.PartnerReports
  commentId: P:Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.PartnerReports
  id: PartnerReports
  parent: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings
  langs:
  - csharp
  - vb
  name: PartnerReports
  nameWithType: GlobalDatabaseConnectionStrings.PartnerReports
  fullName: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.PartnerReports
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalDatabaseConnectionStrings.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: PartnerReports
    path: HVConfig/GlobalDatabaseConnectionStrings.cs
    startLine: 155
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nConnection string for partner report database\n"
  example: []
  syntax:
    content: public string PartnerReports { get; }
    content.vb: Public ReadOnly Property PartnerReports As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.PartnerReports*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Queue
  commentId: P:Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Queue
  id: Queue
  parent: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings
  langs:
  - csharp
  - vb
  name: Queue
  nameWithType: GlobalDatabaseConnectionStrings.Queue
  fullName: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Queue
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalDatabaseConnectionStrings.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Queue
    path: HVConfig/GlobalDatabaseConnectionStrings.cs
    startLine: 166
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nConnection string for queue database\n"
  example: []
  syntax:
    content: public string Queue { get; }
    content.vb: Public ReadOnly Property Queue As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Queue*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Telemetry
  commentId: P:Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Telemetry
  id: Telemetry
  parent: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings
  langs:
  - csharp
  - vb
  name: Telemetry
  nameWithType: GlobalDatabaseConnectionStrings.Telemetry
  fullName: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Telemetry
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalDatabaseConnectionStrings.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Telemetry
    path: HVConfig/GlobalDatabaseConnectionStrings.cs
    startLine: 177
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nConnection string for telemetry database\n"
  example: []
  syntax:
    content: public string Telemetry { get; }
    content.vb: Public ReadOnly Property Telemetry As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Telemetry*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Log
  commentId: P:Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Log
  id: Log
  parent: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings
  langs:
  - csharp
  - vb
  name: Log
  nameWithType: GlobalDatabaseConnectionStrings.Log
  fullName: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Log
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalDatabaseConnectionStrings.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Log
    path: HVConfig/GlobalDatabaseConnectionStrings.cs
    startLine: 188
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nConnection string for wclog database\n"
  example: []
  syntax:
    content: public string Log { get; }
    content.vb: Public ReadOnly Property Log As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Log*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Record
  commentId: P:Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Record
  id: Record
  parent: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings
  langs:
  - csharp
  - vb
  name: Record
  nameWithType: GlobalDatabaseConnectionStrings.Record
  fullName: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Record
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalDatabaseConnectionStrings.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Record
    path: HVConfig/GlobalDatabaseConnectionStrings.cs
    startLine: 199
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nConnection string for record database\n"
  example: []
  syntax:
    content: public string Record { get; }
    content.vb: Public ReadOnly Property Record As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Record*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Keys
  commentId: P:Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Keys
  id: Keys
  parent: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings
  langs:
  - csharp
  - vb
  name: Keys
  nameWithType: GlobalDatabaseConnectionStrings.Keys
  fullName: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Keys
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalDatabaseConnectionStrings.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Keys
    path: HVConfig/GlobalDatabaseConnectionStrings.cs
    startLine: 210
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nAll the database connection keys\n"
  example: []
  syntax:
    content: public IList<string> Keys { get; }
    content.vb: Public ReadOnly Property Keys As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  overload: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Keys*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Count
  commentId: P:Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Count
  id: Count
  parent: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: GlobalDatabaseConnectionStrings.Count
  fullName: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Count
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalDatabaseConnectionStrings.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Count
    path: HVConfig/GlobalDatabaseConnectionStrings.cs
    startLine: 221
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nNumber of connection strings\n"
  example: []
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Count*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Item(System.String)
  commentId: P:Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Item(System.String)
  id: Item(System.String)
  parent: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: GlobalDatabaseConnectionStrings.Item[String]
  fullName: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Item[System.String]
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalDatabaseConnectionStrings.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: this[]
    path: HVConfig/GlobalDatabaseConnectionStrings.cs
    startLine: 232
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nProvide indexing functionality with database key as indexer.\n"
  example: []
  syntax:
    content: public string this[string key] { get; }
    content.vb: Public ReadOnly Property Item(key As String) As String
    parameters:
    - id: key
      type: System.String
    return:
      type: System.String
  overload: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Item*
  nameWithType.vb: GlobalDatabaseConnectionStrings.Item(String)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Item(System.String)
  name.vb: Item(String)
- uid: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.PrependConnectionStringPrefix(System.String)
  commentId: M:Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.PrependConnectionStringPrefix(System.String)
  id: PrependConnectionStringPrefix(System.String)
  parent: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings
  langs:
  - csharp
  - vb
  name: PrependConnectionStringPrefix(String)
  nameWithType: GlobalDatabaseConnectionStrings.PrependConnectionStringPrefix(String)
  fullName: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.PrependConnectionStringPrefix(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalDatabaseConnectionStrings.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: PrependConnectionStringPrefix
    path: HVConfig/GlobalDatabaseConnectionStrings.cs
    startLine: 247
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nPrepends the \"ConnectionStrings.\" prefix to the given database key,\nif it does not already start with that prefix.\n"
  example: []
  syntax:
    content: public static string PrependConnectionStringPrefix(string key)
    content.vb: Public Shared Function PrependConnectionStringPrefix(key As String) As String
    parameters:
    - id: key
      type: System.String
    return:
      type: System.String
  overload: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.PrependConnectionStringPrefix*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.StripConnectionStringPrefix(System.String)
  commentId: M:Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.StripConnectionStringPrefix(System.String)
  id: StripConnectionStringPrefix(System.String)
  parent: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings
  langs:
  - csharp
  - vb
  name: StripConnectionStringPrefix(String)
  nameWithType: GlobalDatabaseConnectionStrings.StripConnectionStringPrefix(String)
  fullName: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.StripConnectionStringPrefix(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/GlobalDatabaseConnectionStrings.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: StripConnectionStringPrefix
    path: HVConfig/GlobalDatabaseConnectionStrings.cs
    startLine: 260
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nStrips the \"ConnectionStrings.\" prefix from the given database key,\nif it starts with that prefix.\n"
  example: []
  syntax:
    content: public static string StripConnectionStringPrefix(string key)
    content.vb: Public Shared Function StripConnectionStringPrefix(key As String) As String
    parameters:
    - id: key
      type: System.String
    return:
      type: System.String
  overload: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.StripConnectionStringPrefix*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Health.Utility.Configurations
  commentId: N:Microsoft.Health.Utility.Configurations
  isExternal: false
  name: Microsoft.Health.Utility.Configurations
  nameWithType: Microsoft.Health.Utility.Configurations
  fullName: Microsoft.Health.Utility.Configurations
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<GlobalDatabaseConnectionStrings>()
  nameWithType: TypeHelper.ValueOrDbNull<GlobalDatabaseConnectionStrings>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of GlobalDatabaseConnectionStrings)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings)()
  name.vb: ValueOrDbNull(Of GlobalDatabaseConnectionStrings)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<GlobalDatabaseConnectionStrings>
    nameWithType: TypeHelper.ValueOrDbNull<GlobalDatabaseConnectionStrings>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of GlobalDatabaseConnectionStrings)
    nameWithType: TypeHelper.ValueOrDbNull(Of GlobalDatabaseConnectionStrings)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.#ctor*
  commentId: Overload:Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.#ctor
  isExternal: false
  name: GlobalDatabaseConnectionStrings
  nameWithType: GlobalDatabaseConnectionStrings.GlobalDatabaseConnectionStrings
  fullName: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.GlobalDatabaseConnectionStrings
- uid: Microsoft.Health.Utility.Configurations.ConfigurationDictionary
  commentId: T:Microsoft.Health.Utility.Configurations.ConfigurationDictionary
  parent: Microsoft.Health.Utility.Configurations
  isExternal: false
  name: ConfigurationDictionary
  nameWithType: ConfigurationDictionary
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationDictionary
- uid: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Configuration*
  commentId: Overload:Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Configuration
  isExternal: false
  name: Configuration
  nameWithType: GlobalDatabaseConnectionStrings.Configuration
  fullName: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Configuration
- uid: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Dictionary*
  commentId: Overload:Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Dictionary
  isExternal: false
  name: Dictionary
  nameWithType: GlobalDatabaseConnectionStrings.Dictionary
  fullName: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Dictionary
- uid: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Directory*
  commentId: Overload:Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Directory
  isExternal: false
  name: Directory
  nameWithType: GlobalDatabaseConnectionStrings.Directory
  fullName: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Directory
- uid: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.SharedDirectory*
  commentId: Overload:Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.SharedDirectory
  isExternal: false
  name: SharedDirectory
  nameWithType: GlobalDatabaseConnectionStrings.SharedDirectory
  fullName: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.SharedDirectory
- uid: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.PartnerReports*
  commentId: Overload:Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.PartnerReports
  isExternal: false
  name: PartnerReports
  nameWithType: GlobalDatabaseConnectionStrings.PartnerReports
  fullName: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.PartnerReports
- uid: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Queue*
  commentId: Overload:Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Queue
  isExternal: false
  name: Queue
  nameWithType: GlobalDatabaseConnectionStrings.Queue
  fullName: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Queue
- uid: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Telemetry*
  commentId: Overload:Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Telemetry
  isExternal: false
  name: Telemetry
  nameWithType: GlobalDatabaseConnectionStrings.Telemetry
  fullName: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Telemetry
- uid: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Log*
  commentId: Overload:Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Log
  isExternal: false
  name: Log
  nameWithType: GlobalDatabaseConnectionStrings.Log
  fullName: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Log
- uid: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Record*
  commentId: Overload:Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Record
  isExternal: false
  name: Record
  nameWithType: GlobalDatabaseConnectionStrings.Record
  fullName: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Record
- uid: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Keys*
  commentId: Overload:Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Keys
  isExternal: false
  name: Keys
  nameWithType: GlobalDatabaseConnectionStrings.Keys
  fullName: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Keys
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Count*
  commentId: Overload:Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Count
  isExternal: false
  name: Count
  nameWithType: GlobalDatabaseConnectionStrings.Count
  fullName: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Item*
  commentId: Overload:Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Item
  isExternal: false
  name: Item
  nameWithType: GlobalDatabaseConnectionStrings.Item
  fullName: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.Item
- uid: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.PrependConnectionStringPrefix*
  commentId: Overload:Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.PrependConnectionStringPrefix
  isExternal: false
  name: PrependConnectionStringPrefix
  nameWithType: GlobalDatabaseConnectionStrings.PrependConnectionStringPrefix
  fullName: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.PrependConnectionStringPrefix
- uid: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.StripConnectionStringPrefix*
  commentId: Overload:Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.StripConnectionStringPrefix
  isExternal: false
  name: StripConnectionStringPrefix
  nameWithType: GlobalDatabaseConnectionStrings.StripConnectionStringPrefix
  fullName: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings.StripConnectionStringPrefix
