### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.FastList`1
  commentId: T:Microsoft.Health.FastList`1
  id: FastList`1
  parent: Microsoft.Health
  children:
  - Microsoft.Health.FastList`1.#ctor
  - Microsoft.Health.FastList`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  - Microsoft.Health.FastList`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Int32)
  - Microsoft.Health.FastList`1.#ctor(System.Collections.Generic.IList{`0})
  - Microsoft.Health.FastList`1.#ctor(System.Int32)
  - Microsoft.Health.FastList`1.Add(`0)
  - Microsoft.Health.FastList`1.AddNoCheck(`0)
  - Microsoft.Health.FastList`1.AddRange(`0[])
  - Microsoft.Health.FastList`1.AddRange(`0[],System.Int32,System.Int32)
  - Microsoft.Health.FastList`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  - Microsoft.Health.FastList`1.AddRange(System.Collections.Generic.IList{`0})
  - Microsoft.Health.FastList`1.BinarySearch(`0)
  - Microsoft.Health.FastList`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
  - Microsoft.Health.FastList`1.Buffer
  - Microsoft.Health.FastList`1.CalculateNewSize(System.Int32)
  - Microsoft.Health.FastList`1.Clear
  - Microsoft.Health.FastList`1.Contains(`0)
  - Microsoft.Health.FastList`1.CopyTo(`0[],System.Int32)
  - Microsoft.Health.FastList`1.Count
  - Microsoft.Health.FastList`1.EnsureCapacity
  - Microsoft.Health.FastList`1.EnsureCapacity(System.Int32)
  - Microsoft.Health.FastList`1.Erase
  - Microsoft.Health.FastList`1.GetAt(System.Int32)
  - Microsoft.Health.FastList`1.GetEnumerator
  - Microsoft.Health.FastList`1.GetTrimmedBuffer
  - Microsoft.Health.FastList`1.IndexOf(`0)
  - Microsoft.Health.FastList`1.Init(System.Int32)
  - Microsoft.Health.FastList`1.Insert(System.Int32,`0)
  - Microsoft.Health.FastList`1.IsReadOnly
  - Microsoft.Health.FastList`1.Item(System.Int32)
  - Microsoft.Health.FastList`1.Remove(`0)
  - Microsoft.Health.FastList`1.RemoveAt(System.Int32)
  - Microsoft.Health.FastList`1.Sort
  - Microsoft.Health.FastList`1.Sort(System.Collections.Generic.IComparer{`0})
  - Microsoft.Health.FastList`1.System#Collections#IEnumerable#GetEnumerator
  - Microsoft.Health.FastList`1.ToArray
  - Microsoft.Health.FastList`1.Trim
  langs:
  - csharp
  - vb
  name: FastList<T>
  nameWithType: FastList<T>
  fullName: Microsoft.Health.FastList<T>
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/search/FastList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: FastList
    path: search/FastList.cs
    startLine: 11
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health
  syntax:
    content: 'public class FastList<T> : IList<T>, ICollection<T>, IEnumerable<T>, IEnumerable'
    content.vb: >-
      Public Class FastList(Of T)
          Implements IList(Of T), ICollection(Of T), IEnumerable(Of T), IEnumerable
    typeParameters:
    - id: T
  inheritance:
  - System.Object
  derivedClasses:
  - Microsoft.Health.InvertedIndex.IndexList`1
  - Microsoft.Health.InvertedIndex.TermList
  implements:
  - System.Collections.Generic.IList{{T}}
  - System.Collections.Generic.ICollection{{T}}
  - System.Collections.Generic.IEnumerable{{T}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.FastList`1.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  nameWithType.vb: FastList(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.Health.FastList(Of T)
  name.vb: FastList(Of T)
- uid: Microsoft.Health.FastList`1.#ctor
  commentId: M:Microsoft.Health.FastList`1.#ctor
  id: '#ctor'
  parent: Microsoft.Health.FastList`1
  langs:
  - csharp
  - vb
  name: FastList()
  nameWithType: FastList<T>.FastList()
  fullName: Microsoft.Health.FastList<T>.FastList()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/FastList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: search/FastList.cs
    startLine: 21
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health
  summary: "\n\n"
  example: []
  syntax:
    content: public FastList()
    content.vb: Public Sub New
  overload: Microsoft.Health.FastList`1.#ctor*
  nameWithType.vb: FastList(Of T).FastList()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.FastList(Of T).FastList()
- uid: Microsoft.Health.FastList`1.#ctor(System.Int32)
  commentId: M:Microsoft.Health.FastList`1.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: Microsoft.Health.FastList`1
  langs:
  - csharp
  - vb
  name: FastList(Int32)
  nameWithType: FastList<T>.FastList(Int32)
  fullName: Microsoft.Health.FastList<T>.FastList(System.Int32)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/FastList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: search/FastList.cs
    startLine: 30
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health
  summary: "\n\n"
  example: []
  syntax:
    content: public FastList(int capacity)
    content.vb: Public Sub New(capacity As Integer)
    parameters:
    - id: capacity
      type: System.Int32
      description: ''
  overload: Microsoft.Health.FastList`1.#ctor*
  nameWithType.vb: FastList(Of T).FastList(Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.FastList(Of T).FastList(System.Int32)
- uid: Microsoft.Health.FastList`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  commentId: M:Microsoft.Health.FastList`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  id: '#ctor(System.Collections.Generic.IEnumerable{`0})'
  parent: Microsoft.Health.FastList`1
  langs:
  - csharp
  - vb
  name: FastList(IEnumerable<T>)
  nameWithType: FastList<T>.FastList(IEnumerable<T>)
  fullName: Microsoft.Health.FastList<T>.FastList(System.Collections.Generic.IEnumerable<T>)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/FastList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: search/FastList.cs
    startLine: 40
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health
  summary: "\n\n"
  example: []
  syntax:
    content: public FastList(IEnumerable<T> items)
    content.vb: Public Sub New(items As IEnumerable(Of T))
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable{{T}}
      description: ''
  overload: Microsoft.Health.FastList`1.#ctor*
  nameWithType.vb: FastList(Of T).FastList(IEnumerable(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.FastList(Of T).FastList(System.Collections.Generic.IEnumerable(Of T))
  name.vb: FastList(IEnumerable(Of T))
- uid: Microsoft.Health.FastList`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Int32)
  commentId: M:Microsoft.Health.FastList`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Int32)
  id: '#ctor(System.Collections.Generic.IEnumerable{`0},System.Int32)'
  parent: Microsoft.Health.FastList`1
  langs:
  - csharp
  - vb
  name: FastList(IEnumerable<T>, Int32)
  nameWithType: FastList<T>.FastList(IEnumerable<T>, Int32)
  fullName: Microsoft.Health.FastList<T>.FastList(System.Collections.Generic.IEnumerable<T>, System.Int32)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/FastList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: search/FastList.cs
    startLine: 50
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health
  summary: "\n\n"
  example: []
  syntax:
    content: public FastList(IEnumerable<T> items, int count)
    content.vb: Public Sub New(items As IEnumerable(Of T), count As Integer)
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable{{T}}
      description: ''
    - id: count
      type: System.Int32
      description: ''
  overload: Microsoft.Health.FastList`1.#ctor*
  nameWithType.vb: FastList(Of T).FastList(IEnumerable(Of T), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.FastList(Of T).FastList(System.Collections.Generic.IEnumerable(Of T), System.Int32)
  name.vb: FastList(IEnumerable(Of T), Int32)
- uid: Microsoft.Health.FastList`1.#ctor(System.Collections.Generic.IList{`0})
  commentId: M:Microsoft.Health.FastList`1.#ctor(System.Collections.Generic.IList{`0})
  id: '#ctor(System.Collections.Generic.IList{`0})'
  parent: Microsoft.Health.FastList`1
  langs:
  - csharp
  - vb
  name: FastList(IList<T>)
  nameWithType: FastList<T>.FastList(IList<T>)
  fullName: Microsoft.Health.FastList<T>.FastList(System.Collections.Generic.IList<T>)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/FastList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: search/FastList.cs
    startLine: 65
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health
  summary: "\n\n"
  example: []
  syntax:
    content: public FastList(IList<T> items)
    content.vb: Public Sub New(items As IList(Of T))
    parameters:
    - id: items
      type: System.Collections.Generic.IList{{T}}
      description: ''
  overload: Microsoft.Health.FastList`1.#ctor*
  nameWithType.vb: FastList(Of T).FastList(IList(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.FastList(Of T).FastList(System.Collections.Generic.IList(Of T))
  name.vb: FastList(IList(Of T))
- uid: Microsoft.Health.FastList`1.Item(System.Int32)
  commentId: P:Microsoft.Health.FastList`1.Item(System.Int32)
  id: Item(System.Int32)
  parent: Microsoft.Health.FastList`1
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: FastList<T>.Item[Int32]
  fullName: Microsoft.Health.FastList<T>.Item[System.Int32]
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/FastList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: this[]
    path: search/FastList.cs
    startLine: 82
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health
  summary: "\n\n"
  example: []
  syntax:
    content: public T this[int index] { get; set; }
    content.vb: Public Property Item(index As Integer) As T
    parameters:
    - id: index
      type: System.Int32
      description: ''
    return:
      type: '{T}'
      description: ''
  overload: Microsoft.Health.FastList`1.Item*
  implements:
  - System.Collections.Generic.IList{{T}}.Item(System.Int32)
  nameWithType.vb: FastList(Of T).Item(Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.FastList(Of T).Item(System.Int32)
  name.vb: Item(Int32)
- uid: Microsoft.Health.FastList`1.Buffer
  commentId: P:Microsoft.Health.FastList`1.Buffer
  id: Buffer
  parent: Microsoft.Health.FastList`1
  langs:
  - csharp
  - vb
  name: Buffer
  nameWithType: FastList<T>.Buffer
  fullName: Microsoft.Health.FastList<T>.Buffer
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/FastList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Buffer
    path: search/FastList.cs
    startLine: 107
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health
  summary: "\n\n"
  example: []
  syntax:
    content: public T[] Buffer { get; }
    content.vb: Public ReadOnly Property Buffer As T()
    parameters: []
    return:
      type: '{T}[]'
  overload: Microsoft.Health.FastList`1.Buffer*
  nameWithType.vb: FastList(Of T).Buffer
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.Health.FastList(Of T).Buffer
- uid: Microsoft.Health.FastList`1.Count
  commentId: P:Microsoft.Health.FastList`1.Count
  id: Count
  parent: Microsoft.Health.FastList`1
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: FastList<T>.Count
  fullName: Microsoft.Health.FastList<T>.Count
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/FastList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Count
    path: search/FastList.cs
    startLine: 118
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health
  summary: "\n\n"
  example: []
  syntax:
    content: public int Count { get; set; }
    content.vb: Public Property Count As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Health.FastList`1.Count*
  implements:
  - System.Collections.Generic.ICollection{{T}}.Count
  nameWithType.vb: FastList(Of T).Count
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.FastList(Of T).Count
- uid: Microsoft.Health.FastList`1.IsReadOnly
  commentId: P:Microsoft.Health.FastList`1.IsReadOnly
  id: IsReadOnly
  parent: Microsoft.Health.FastList`1
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: FastList<T>.IsReadOnly
  fullName: Microsoft.Health.FastList<T>.IsReadOnly
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/FastList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: IsReadOnly
    path: search/FastList.cs
    startLine: 138
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health
  summary: "\n\n"
  example: []
  syntax:
    content: public bool IsReadOnly { get; }
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.Health.FastList`1.IsReadOnly*
  implements:
  - System.Collections.Generic.ICollection{{T}}.IsReadOnly
  nameWithType.vb: FastList(Of T).IsReadOnly
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.Health.FastList(Of T).IsReadOnly
- uid: Microsoft.Health.FastList`1.Add(`0)
  commentId: M:Microsoft.Health.FastList`1.Add(`0)
  id: Add(`0)
  parent: Microsoft.Health.FastList`1
  langs:
  - csharp
  - vb
  name: Add(T)
  nameWithType: FastList<T>.Add(T)
  fullName: Microsoft.Health.FastList<T>.Add(T)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/FastList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Add
    path: search/FastList.cs
    startLine: 150
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health
  summary: "\n\n"
  example: []
  syntax:
    content: public void Add(T item)
    content.vb: Public Sub Add(item As T)
    parameters:
    - id: item
      type: '{T}'
      description: ''
  overload: Microsoft.Health.FastList`1.Add*
  implements:
  - System.Collections.Generic.ICollection{{T}}.Add({T})
  nameWithType.vb: FastList(Of T).Add(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.FastList(Of T).Add(T)
- uid: Microsoft.Health.FastList`1.AddNoCheck(`0)
  commentId: M:Microsoft.Health.FastList`1.AddNoCheck(`0)
  id: AddNoCheck(`0)
  parent: Microsoft.Health.FastList`1
  langs:
  - csharp
  - vb
  name: AddNoCheck(T)
  nameWithType: FastList<T>.AddNoCheck(T)
  fullName: Microsoft.Health.FastList<T>.AddNoCheck(T)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/FastList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AddNoCheck
    path: search/FastList.cs
    startLine: 160
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health
  summary: "\n\n"
  example: []
  syntax:
    content: public void AddNoCheck(T item)
    content.vb: Public Sub AddNoCheck(item As T)
    parameters:
    - id: item
      type: '{T}'
      description: ''
  overload: Microsoft.Health.FastList`1.AddNoCheck*
  nameWithType.vb: FastList(Of T).AddNoCheck(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.FastList(Of T).AddNoCheck(T)
- uid: Microsoft.Health.FastList`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  commentId: M:Microsoft.Health.FastList`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  id: AddRange(System.Collections.Generic.IEnumerable{`0})
  parent: Microsoft.Health.FastList`1
  langs:
  - csharp
  - vb
  name: AddRange(IEnumerable<T>)
  nameWithType: FastList<T>.AddRange(IEnumerable<T>)
  fullName: Microsoft.Health.FastList<T>.AddRange(System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/FastList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AddRange
    path: search/FastList.cs
    startLine: 169
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health
  summary: "\n\n"
  example: []
  syntax:
    content: public void AddRange(IEnumerable<T> items)
    content.vb: Public Sub AddRange(items As IEnumerable(Of T))
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable{{T}}
      description: ''
  overload: Microsoft.Health.FastList`1.AddRange*
  nameWithType.vb: FastList(Of T).AddRange(IEnumerable(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.FastList(Of T).AddRange(System.Collections.Generic.IEnumerable(Of T))
  name.vb: AddRange(IEnumerable(Of T))
- uid: Microsoft.Health.FastList`1.AddRange(System.Collections.Generic.IList{`0})
  commentId: M:Microsoft.Health.FastList`1.AddRange(System.Collections.Generic.IList{`0})
  id: AddRange(System.Collections.Generic.IList{`0})
  parent: Microsoft.Health.FastList`1
  langs:
  - csharp
  - vb
  name: AddRange(IList<T>)
  nameWithType: FastList<T>.AddRange(IList<T>)
  fullName: Microsoft.Health.FastList<T>.AddRange(System.Collections.Generic.IList<T>)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/FastList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AddRange
    path: search/FastList.cs
    startLine: 186
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health
  summary: "\n\n"
  example: []
  syntax:
    content: public void AddRange(IList<T> items)
    content.vb: Public Sub AddRange(items As IList(Of T))
    parameters:
    - id: items
      type: System.Collections.Generic.IList{{T}}
      description: ''
  overload: Microsoft.Health.FastList`1.AddRange*
  nameWithType.vb: FastList(Of T).AddRange(IList(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.FastList(Of T).AddRange(System.Collections.Generic.IList(Of T))
  name.vb: AddRange(IList(Of T))
- uid: Microsoft.Health.FastList`1.AddRange(`0[])
  commentId: M:Microsoft.Health.FastList`1.AddRange(`0[])
  id: AddRange(`0[])
  parent: Microsoft.Health.FastList`1
  langs:
  - csharp
  - vb
  name: AddRange(T[])
  nameWithType: FastList<T>.AddRange(T[])
  fullName: Microsoft.Health.FastList<T>.AddRange(T[])
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/FastList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AddRange
    path: search/FastList.cs
    startLine: 205
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health
  summary: "\n\n"
  example: []
  syntax:
    content: public void AddRange(T[] items)
    content.vb: Public Sub AddRange(items As T())
    parameters:
    - id: items
      type: '{T}[]'
      description: ''
  overload: Microsoft.Health.FastList`1.AddRange*
  nameWithType.vb: FastList(Of T).AddRange(T())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.FastList(Of T).AddRange(T())
  name.vb: AddRange(T())
- uid: Microsoft.Health.FastList`1.AddRange(`0[],System.Int32,System.Int32)
  commentId: M:Microsoft.Health.FastList`1.AddRange(`0[],System.Int32,System.Int32)
  id: AddRange(`0[],System.Int32,System.Int32)
  parent: Microsoft.Health.FastList`1
  langs:
  - csharp
  - vb
  name: AddRange(T[], Int32, Int32)
  nameWithType: FastList<T>.AddRange(T[], Int32, Int32)
  fullName: Microsoft.Health.FastList<T>.AddRange(T[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/FastList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AddRange
    path: search/FastList.cs
    startLine: 222
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health
  summary: "\n\n"
  example: []
  syntax:
    content: public void AddRange(T[] items, int startAt, int count)
    content.vb: Public Sub AddRange(items As T(), startAt As Integer, count As Integer)
    parameters:
    - id: items
      type: '{T}[]'
      description: ''
    - id: startAt
      type: System.Int32
      description: ''
    - id: count
      type: System.Int32
      description: ''
  overload: Microsoft.Health.FastList`1.AddRange*
  nameWithType.vb: FastList(Of T).AddRange(T(), Int32, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.FastList(Of T).AddRange(T(), System.Int32, System.Int32)
  name.vb: AddRange(T(), Int32, Int32)
- uid: Microsoft.Health.FastList`1.Clear
  commentId: M:Microsoft.Health.FastList`1.Clear
  id: Clear
  parent: Microsoft.Health.FastList`1
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: FastList<T>.Clear()
  fullName: Microsoft.Health.FastList<T>.Clear()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/FastList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Clear
    path: search/FastList.cs
    startLine: 236
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health
  summary: "\n\n"
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: Microsoft.Health.FastList`1.Clear*
  implements:
  - System.Collections.Generic.ICollection{{T}}.Clear
  nameWithType.vb: FastList(Of T).Clear()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.FastList(Of T).Clear()
- uid: Microsoft.Health.FastList`1.Erase
  commentId: M:Microsoft.Health.FastList`1.Erase
  id: Erase
  parent: Microsoft.Health.FastList`1
  langs:
  - csharp
  - vb
  name: Erase()
  nameWithType: FastList<T>.Erase()
  fullName: Microsoft.Health.FastList<T>.Erase()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/FastList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Erase
    path: search/FastList.cs
    startLine: 244
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health
  summary: "\n\n"
  example: []
  syntax:
    content: public void Erase()
    content.vb: Public Sub Erase
  overload: Microsoft.Health.FastList`1.Erase*
  nameWithType.vb: FastList(Of T).Erase()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.FastList(Of T).Erase()
- uid: Microsoft.Health.FastList`1.GetAt(System.Int32)
  commentId: M:Microsoft.Health.FastList`1.GetAt(System.Int32)
  id: GetAt(System.Int32)
  parent: Microsoft.Health.FastList`1
  langs:
  - csharp
  - vb
  name: GetAt(Int32)
  nameWithType: FastList<T>.GetAt(Int32)
  fullName: Microsoft.Health.FastList<T>.GetAt(System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/FastList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetAt
    path: search/FastList.cs
    startLine: 258
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health
  summary: "\n\n"
  example: []
  syntax:
    content: public T GetAt(int index)
    content.vb: Public Function GetAt(index As Integer) As T
    parameters:
    - id: index
      type: System.Int32
      description: ''
    return:
      type: '{T}'
      description: ''
  overload: Microsoft.Health.FastList`1.GetAt*
  nameWithType.vb: FastList(Of T).GetAt(Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.FastList(Of T).GetAt(System.Int32)
- uid: Microsoft.Health.FastList`1.Contains(`0)
  commentId: M:Microsoft.Health.FastList`1.Contains(`0)
  id: Contains(`0)
  parent: Microsoft.Health.FastList`1
  langs:
  - csharp
  - vb
  name: Contains(T)
  nameWithType: FastList<T>.Contains(T)
  fullName: Microsoft.Health.FastList<T>.Contains(T)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/FastList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Contains
    path: search/FastList.cs
    startLine: 268
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health
  summary: "\n\n"
  example: []
  syntax:
    content: public bool Contains(T item)
    content.vb: Public Function Contains(item As T) As Boolean
    parameters:
    - id: item
      type: '{T}'
      description: ''
    return:
      type: System.Boolean
      description: ''
  overload: Microsoft.Health.FastList`1.Contains*
  implements:
  - System.Collections.Generic.ICollection{{T}}.Contains({T})
  nameWithType.vb: FastList(Of T).Contains(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.FastList(Of T).Contains(T)
- uid: Microsoft.Health.FastList`1.IndexOf(`0)
  commentId: M:Microsoft.Health.FastList`1.IndexOf(`0)
  id: IndexOf(`0)
  parent: Microsoft.Health.FastList`1
  langs:
  - csharp
  - vb
  name: IndexOf(T)
  nameWithType: FastList<T>.IndexOf(T)
  fullName: Microsoft.Health.FastList<T>.IndexOf(T)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/FastList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: IndexOf
    path: search/FastList.cs
    startLine: 278
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health
  summary: "\n\n"
  example: []
  syntax:
    content: public int IndexOf(T item)
    content.vb: Public Function IndexOf(item As T) As Integer
    parameters:
    - id: item
      type: '{T}'
      description: ''
    return:
      type: System.Int32
      description: ''
  overload: Microsoft.Health.FastList`1.IndexOf*
  implements:
  - System.Collections.Generic.IList{{T}}.IndexOf({T})
  nameWithType.vb: FastList(Of T).IndexOf(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.FastList(Of T).IndexOf(T)
- uid: Microsoft.Health.FastList`1.Insert(System.Int32,`0)
  commentId: M:Microsoft.Health.FastList`1.Insert(System.Int32,`0)
  id: Insert(System.Int32,`0)
  parent: Microsoft.Health.FastList`1
  langs:
  - csharp
  - vb
  name: Insert(Int32, T)
  nameWithType: FastList<T>.Insert(Int32, T)
  fullName: Microsoft.Health.FastList<T>.Insert(System.Int32, T)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/FastList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Insert
    path: search/FastList.cs
    startLine: 292
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health
  summary: "\n\n"
  example: []
  syntax:
    content: public void Insert(int index, T item)
    content.vb: Public Sub Insert(index As Integer, item As T)
    parameters:
    - id: index
      type: System.Int32
      description: ''
    - id: item
      type: '{T}'
      description: ''
  overload: Microsoft.Health.FastList`1.Insert*
  implements:
  - System.Collections.Generic.IList{{T}}.Insert(System.Int32,{T})
  nameWithType.vb: FastList(Of T).Insert(Int32, T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.FastList(Of T).Insert(System.Int32, T)
- uid: Microsoft.Health.FastList`1.RemoveAt(System.Int32)
  commentId: M:Microsoft.Health.FastList`1.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: Microsoft.Health.FastList`1
  langs:
  - csharp
  - vb
  name: RemoveAt(Int32)
  nameWithType: FastList<T>.RemoveAt(Int32)
  fullName: Microsoft.Health.FastList<T>.RemoveAt(System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/FastList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: RemoveAt
    path: search/FastList.cs
    startLine: 316
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health
  summary: "\n\n"
  example: []
  syntax:
    content: public void RemoveAt(int index)
    content.vb: Public Sub RemoveAt(index As Integer)
    parameters:
    - id: index
      type: System.Int32
      description: ''
  overload: Microsoft.Health.FastList`1.RemoveAt*
  implements:
  - System.Collections.Generic.IList{{T}}.RemoveAt(System.Int32)
  nameWithType.vb: FastList(Of T).RemoveAt(Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.FastList(Of T).RemoveAt(System.Int32)
- uid: Microsoft.Health.FastList`1.CopyTo(`0[],System.Int32)
  commentId: M:Microsoft.Health.FastList`1.CopyTo(`0[],System.Int32)
  id: CopyTo(`0[],System.Int32)
  parent: Microsoft.Health.FastList`1
  langs:
  - csharp
  - vb
  name: CopyTo(T[], Int32)
  nameWithType: FastList<T>.CopyTo(T[], Int32)
  fullName: Microsoft.Health.FastList<T>.CopyTo(T[], System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/FastList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CopyTo
    path: search/FastList.cs
    startLine: 332
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health
  summary: "\n\n"
  example: []
  syntax:
    content: public void CopyTo(T[] array, int arrayIndex)
    content.vb: Public Sub CopyTo(array As T(), arrayIndex As Integer)
    parameters:
    - id: array
      type: '{T}[]'
      description: ''
    - id: arrayIndex
      type: System.Int32
      description: ''
  overload: Microsoft.Health.FastList`1.CopyTo*
  implements:
  - System.Collections.Generic.ICollection{{T}}.CopyTo({T}[],System.Int32)
  nameWithType.vb: FastList(Of T).CopyTo(T(), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.FastList(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
- uid: Microsoft.Health.FastList`1.Remove(`0)
  commentId: M:Microsoft.Health.FastList`1.Remove(`0)
  id: Remove(`0)
  parent: Microsoft.Health.FastList`1
  langs:
  - csharp
  - vb
  name: Remove(T)
  nameWithType: FastList<T>.Remove(T)
  fullName: Microsoft.Health.FastList<T>.Remove(T)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/FastList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Remove
    path: search/FastList.cs
    startLine: 345
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health
  summary: "\n\n"
  example: []
  syntax:
    content: public bool Remove(T item)
    content.vb: Public Function Remove(item As T) As Boolean
    parameters:
    - id: item
      type: '{T}'
      description: ''
    return:
      type: System.Boolean
      description: ''
  overload: Microsoft.Health.FastList`1.Remove*
  implements:
  - System.Collections.Generic.ICollection{{T}}.Remove({T})
  nameWithType.vb: FastList(Of T).Remove(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.FastList(Of T).Remove(T)
- uid: Microsoft.Health.FastList`1.Trim
  commentId: M:Microsoft.Health.FastList`1.Trim
  id: Trim
  parent: Microsoft.Health.FastList`1
  langs:
  - csharp
  - vb
  name: Trim()
  nameWithType: FastList<T>.Trim()
  fullName: Microsoft.Health.FastList<T>.Trim()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/FastList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Trim
    path: search/FastList.cs
    startLine: 360
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health
  summary: "\n\n"
  example: []
  syntax:
    content: public void Trim()
    content.vb: Public Sub Trim
  overload: Microsoft.Health.FastList`1.Trim*
  nameWithType.vb: FastList(Of T).Trim()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.FastList(Of T).Trim()
- uid: Microsoft.Health.FastList`1.Sort
  commentId: M:Microsoft.Health.FastList`1.Sort
  id: Sort
  parent: Microsoft.Health.FastList`1
  langs:
  - csharp
  - vb
  name: Sort()
  nameWithType: FastList<T>.Sort()
  fullName: Microsoft.Health.FastList<T>.Sort()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/FastList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Sort
    path: search/FastList.cs
    startLine: 382
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health
  summary: "\n\n"
  example: []
  syntax:
    content: public void Sort()
    content.vb: Public Sub Sort
  overload: Microsoft.Health.FastList`1.Sort*
  nameWithType.vb: FastList(Of T).Sort()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.FastList(Of T).Sort()
- uid: Microsoft.Health.FastList`1.Sort(System.Collections.Generic.IComparer{`0})
  commentId: M:Microsoft.Health.FastList`1.Sort(System.Collections.Generic.IComparer{`0})
  id: Sort(System.Collections.Generic.IComparer{`0})
  parent: Microsoft.Health.FastList`1
  langs:
  - csharp
  - vb
  name: Sort(IComparer<T>)
  nameWithType: FastList<T>.Sort(IComparer<T>)
  fullName: Microsoft.Health.FastList<T>.Sort(System.Collections.Generic.IComparer<T>)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/FastList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Sort
    path: search/FastList.cs
    startLine: 394
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health
  summary: "\n\n"
  example: []
  syntax:
    content: public void Sort(IComparer<T> comparison)
    content.vb: Public Sub Sort(comparison As IComparer(Of T))
    parameters:
    - id: comparison
      type: System.Collections.Generic.IComparer{{T}}
      description: ''
  overload: Microsoft.Health.FastList`1.Sort*
  nameWithType.vb: FastList(Of T).Sort(IComparer(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.FastList(Of T).Sort(System.Collections.Generic.IComparer(Of T))
  name.vb: Sort(IComparer(Of T))
- uid: Microsoft.Health.FastList`1.BinarySearch(`0)
  commentId: M:Microsoft.Health.FastList`1.BinarySearch(`0)
  id: BinarySearch(`0)
  parent: Microsoft.Health.FastList`1
  langs:
  - csharp
  - vb
  name: BinarySearch(T)
  nameWithType: FastList<T>.BinarySearch(T)
  fullName: Microsoft.Health.FastList<T>.BinarySearch(T)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/FastList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: BinarySearch
    path: search/FastList.cs
    startLine: 407
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health
  summary: "\n\n"
  example: []
  syntax:
    content: public int BinarySearch(T item)
    content.vb: Public Function BinarySearch(item As T) As Integer
    parameters:
    - id: item
      type: '{T}'
      description: ''
    return:
      type: System.Int32
      description: ''
  overload: Microsoft.Health.FastList`1.BinarySearch*
  nameWithType.vb: FastList(Of T).BinarySearch(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.FastList(Of T).BinarySearch(T)
- uid: Microsoft.Health.FastList`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
  commentId: M:Microsoft.Health.FastList`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
  id: BinarySearch(`0,System.Collections.Generic.IComparer{`0})
  parent: Microsoft.Health.FastList`1
  langs:
  - csharp
  - vb
  name: BinarySearch(T, IComparer<T>)
  nameWithType: FastList<T>.BinarySearch(T, IComparer<T>)
  fullName: Microsoft.Health.FastList<T>.BinarySearch(T, System.Collections.Generic.IComparer<T>)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/FastList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: BinarySearch
    path: search/FastList.cs
    startLine: 423
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health
  summary: "\n\n"
  example: []
  syntax:
    content: public int BinarySearch(T item, IComparer<T> comparison)
    content.vb: Public Function BinarySearch(item As T, comparison As IComparer(Of T)) As Integer
    parameters:
    - id: item
      type: '{T}'
      description: ''
    - id: comparison
      type: System.Collections.Generic.IComparer{{T}}
      description: ''
    return:
      type: System.Int32
      description: ''
  overload: Microsoft.Health.FastList`1.BinarySearch*
  nameWithType.vb: FastList(Of T).BinarySearch(T, IComparer(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.FastList(Of T).BinarySearch(T, System.Collections.Generic.IComparer(Of T))
  name.vb: BinarySearch(T, IComparer(Of T))
- uid: Microsoft.Health.FastList`1.CalculateNewSize(System.Int32)
  commentId: M:Microsoft.Health.FastList`1.CalculateNewSize(System.Int32)
  id: CalculateNewSize(System.Int32)
  parent: Microsoft.Health.FastList`1
  langs:
  - csharp
  - vb
  name: CalculateNewSize(Int32)
  nameWithType: FastList<T>.CalculateNewSize(Int32)
  fullName: Microsoft.Health.FastList<T>.CalculateNewSize(System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/FastList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CalculateNewSize
    path: search/FastList.cs
    startLine: 437
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health
  summary: "\n\n"
  example: []
  syntax:
    content: protected virtual int CalculateNewSize(int currentSize)
    content.vb: Protected Overridable Function CalculateNewSize(currentSize As Integer) As Integer
    parameters:
    - id: currentSize
      type: System.Int32
      description: ''
    return:
      type: System.Int32
      description: ''
  overload: Microsoft.Health.FastList`1.CalculateNewSize*
  nameWithType.vb: FastList(Of T).CalculateNewSize(Int32)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.Health.FastList(Of T).CalculateNewSize(System.Int32)
- uid: Microsoft.Health.FastList`1.GetEnumerator
  commentId: M:Microsoft.Health.FastList`1.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.Health.FastList`1
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: FastList<T>.GetEnumerator()
  fullName: Microsoft.Health.FastList<T>.GetEnumerator()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/FastList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetEnumerator
    path: search/FastList.cs
    startLine: 448
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health
  summary: "\n\n"
  example: []
  syntax:
    content: public IEnumerator<T> GetEnumerator()
    content.vb: Public Function GetEnumerator As IEnumerator(Of T)
    return:
      type: System.Collections.Generic.IEnumerator{{T}}
      description: ''
  overload: Microsoft.Health.FastList`1.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  nameWithType.vb: FastList(Of T).GetEnumerator()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.FastList(Of T).GetEnumerator()
- uid: Microsoft.Health.FastList`1.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Microsoft.Health.FastList`1.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: Microsoft.Health.FastList`1
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: FastList<T>.IEnumerable.GetEnumerator()
  fullName: Microsoft.Health.FastList<T>.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/FastList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: System.Collections.IEnumerable.GetEnumerator
    path: search/FastList.cs
    startLine: 464
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health
  summary: "\n\n"
  example: []
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
    return:
      type: System.Collections.IEnumerator
      description: ''
  overload: Microsoft.Health.FastList`1.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: FastList(Of T).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: Microsoft.Health.FastList(Of T).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
- uid: Microsoft.Health.FastList`1.EnsureCapacity
  commentId: M:Microsoft.Health.FastList`1.EnsureCapacity
  id: EnsureCapacity
  parent: Microsoft.Health.FastList`1
  langs:
  - csharp
  - vb
  name: EnsureCapacity()
  nameWithType: FastList<T>.EnsureCapacity()
  fullName: Microsoft.Health.FastList<T>.EnsureCapacity()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/FastList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: EnsureCapacity
    path: search/FastList.cs
    startLine: 474
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health
  summary: "\n\n"
  example: []
  syntax:
    content: public void EnsureCapacity()
    content.vb: Public Sub EnsureCapacity
  overload: Microsoft.Health.FastList`1.EnsureCapacity*
  nameWithType.vb: FastList(Of T).EnsureCapacity()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.FastList(Of T).EnsureCapacity()
- uid: Microsoft.Health.FastList`1.EnsureCapacity(System.Int32)
  commentId: M:Microsoft.Health.FastList`1.EnsureCapacity(System.Int32)
  id: EnsureCapacity(System.Int32)
  parent: Microsoft.Health.FastList`1
  langs:
  - csharp
  - vb
  name: EnsureCapacity(Int32)
  nameWithType: FastList<T>.EnsureCapacity(Int32)
  fullName: Microsoft.Health.FastList<T>.EnsureCapacity(System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/FastList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: EnsureCapacity
    path: search/FastList.cs
    startLine: 493
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health
  summary: "\n\n"
  example: []
  syntax:
    content: public void EnsureCapacity(int capacity)
    content.vb: Public Sub EnsureCapacity(capacity As Integer)
    parameters:
    - id: capacity
      type: System.Int32
      description: ''
  overload: Microsoft.Health.FastList`1.EnsureCapacity*
  nameWithType.vb: FastList(Of T).EnsureCapacity(Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.FastList(Of T).EnsureCapacity(System.Int32)
- uid: Microsoft.Health.FastList`1.Init(System.Int32)
  commentId: M:Microsoft.Health.FastList`1.Init(System.Int32)
  id: Init(System.Int32)
  parent: Microsoft.Health.FastList`1
  langs:
  - csharp
  - vb
  name: Init(Int32)
  nameWithType: FastList<T>.Init(Int32)
  fullName: Microsoft.Health.FastList<T>.Init(System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/FastList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Init
    path: search/FastList.cs
    startLine: 521
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health
  summary: "\n\n"
  example: []
  syntax:
    content: public void Init(int capacity)
    content.vb: Public Sub Init(capacity As Integer)
    parameters:
    - id: capacity
      type: System.Int32
      description: ''
  overload: Microsoft.Health.FastList`1.Init*
  nameWithType.vb: FastList(Of T).Init(Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.FastList(Of T).Init(System.Int32)
- uid: Microsoft.Health.FastList`1.ToArray
  commentId: M:Microsoft.Health.FastList`1.ToArray
  id: ToArray
  parent: Microsoft.Health.FastList`1
  langs:
  - csharp
  - vb
  name: ToArray()
  nameWithType: FastList<T>.ToArray()
  fullName: Microsoft.Health.FastList<T>.ToArray()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/FastList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ToArray
    path: search/FastList.cs
    startLine: 531
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health
  summary: "\n\n"
  example: []
  syntax:
    content: public T[] ToArray()
    content.vb: Public Function ToArray As T()
    return:
      type: '{T}[]'
      description: ''
  overload: Microsoft.Health.FastList`1.ToArray*
  nameWithType.vb: FastList(Of T).ToArray()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.FastList(Of T).ToArray()
- uid: Microsoft.Health.FastList`1.GetTrimmedBuffer
  commentId: M:Microsoft.Health.FastList`1.GetTrimmedBuffer
  id: GetTrimmedBuffer
  parent: Microsoft.Health.FastList`1
  langs:
  - csharp
  - vb
  name: GetTrimmedBuffer()
  nameWithType: FastList<T>.GetTrimmedBuffer()
  fullName: Microsoft.Health.FastList<T>.GetTrimmedBuffer()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/FastList.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetTrimmedBuffer
    path: search/FastList.cs
    startLine: 542
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health
  summary: "\n\n"
  example: []
  syntax:
    content: public T[] GetTrimmedBuffer()
    content.vb: Public Function GetTrimmedBuffer As T()
    return:
      type: '{T}[]'
      description: ''
  overload: Microsoft.Health.FastList`1.GetTrimmedBuffer*
  nameWithType.vb: FastList(Of T).GetTrimmedBuffer()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.FastList(Of T).GetTrimmedBuffer()
references:
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IList{{T}}
  commentId: T:System.Collections.Generic.IList{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{{T}}
  commentId: T:System.Collections.Generic.ICollection{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<FastList<T>>()
  nameWithType: TypeHelper.ValueOrDbNull<FastList<T>>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.FastList<T>>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of FastList(Of T))()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.FastList(Of T))()
  name.vb: ValueOrDbNull(Of FastList(Of T))()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<FastList<T>>
    nameWithType: TypeHelper.ValueOrDbNull<FastList<T>>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.FastList<T>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of FastList(Of T))
    nameWithType: TypeHelper.ValueOrDbNull(Of FastList(Of T))
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.FastList(Of T))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.FastList`1.#ctor*
  commentId: Overload:Microsoft.Health.FastList`1.#ctor
  isExternal: false
  name: FastList
  nameWithType: FastList<T>.FastList
  fullName: Microsoft.Health.FastList<T>.FastList
  nameWithType.vb: FastList(Of T).FastList
  fullName.vb: Microsoft.Health.FastList(Of T).FastList
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Health.FastList`1.Item*
  commentId: Overload:Microsoft.Health.FastList`1.Item
  isExternal: false
  name: Item
  nameWithType: FastList<T>.Item
  fullName: Microsoft.Health.FastList<T>.Item
  nameWithType.vb: FastList(Of T).Item
  fullName.vb: Microsoft.Health.FastList(Of T).Item
- uid: System.Collections.Generic.IList{{T}}.Item(System.Int32)
  commentId: P:System.Collections.Generic.IList{`0}.Item(System.Int32)
  parent: System.Collections.Generic.IList{{T}}
  definition: System.Collections.Generic.IList`1.Item(System.Int32)
  name: Item[Int32]
  nameWithType: IList<T>.Item[Int32]
  fullName: System.Collections.Generic.IList<T>.Item[System.Int32]
  nameWithType.vb: IList(Of T).Item(Int32)
  fullName.vb: System.Collections.Generic.IList(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList<T>.Item
    fullName: System.Collections.Generic.IList<T>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList(Of T).Item
    fullName: System.Collections.Generic.IList(Of T).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Generic.IList`1.Item(System.Int32)
  commentId: P:System.Collections.Generic.IList`1.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: IList<T>.Item[Int32]
  fullName: System.Collections.Generic.IList<T>.Item[System.Int32]
  nameWithType.vb: IList(Of T).Item(Int32)
  fullName.vb: System.Collections.Generic.IList(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList<T>.Item
    fullName: System.Collections.Generic.IList<T>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList(Of T).Item
    fullName: System.Collections.Generic.IList(Of T).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: Microsoft.Health.FastList`1.Buffer*
  commentId: Overload:Microsoft.Health.FastList`1.Buffer
  isExternal: false
  name: Buffer
  nameWithType: FastList<T>.Buffer
  fullName: Microsoft.Health.FastList<T>.Buffer
  nameWithType.vb: FastList(Of T).Buffer
  fullName.vb: Microsoft.Health.FastList(Of T).Buffer
- uid: '{T}[]'
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullName.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.Health.FastList`1.Count*
  commentId: Overload:Microsoft.Health.FastList`1.Count
  isExternal: false
  name: Count
  nameWithType: FastList<T>.Count
  fullName: Microsoft.Health.FastList<T>.Count
  nameWithType.vb: FastList(Of T).Count
  fullName.vb: Microsoft.Health.FastList(Of T).Count
- uid: System.Collections.Generic.ICollection{{T}}.Count
  commentId: P:System.Collections.Generic.ICollection{`0}.Count
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Count
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullName.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: System.Collections.Generic.ICollection`1.Count
  commentId: P:System.Collections.Generic.ICollection`1.Count
  isExternal: true
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullName.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: Microsoft.Health.FastList`1.IsReadOnly*
  commentId: Overload:Microsoft.Health.FastList`1.IsReadOnly
  isExternal: false
  name: IsReadOnly
  nameWithType: FastList<T>.IsReadOnly
  fullName: Microsoft.Health.FastList<T>.IsReadOnly
  nameWithType.vb: FastList(Of T).IsReadOnly
  fullName.vb: Microsoft.Health.FastList(Of T).IsReadOnly
- uid: System.Collections.Generic.ICollection{{T}}.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection{`0}.IsReadOnly
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.IsReadOnly
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly
  isExternal: true
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: Microsoft.Health.FastList`1.Add*
  commentId: Overload:Microsoft.Health.FastList`1.Add
  isExternal: false
  name: Add
  nameWithType: FastList<T>.Add
  fullName: Microsoft.Health.FastList<T>.Add
  nameWithType.vb: FastList(Of T).Add
  fullName.vb: Microsoft.Health.FastList(Of T).Add
- uid: System.Collections.Generic.ICollection{{T}}.Add({T})
  commentId: M:System.Collections.Generic.ICollection{`0}.Add(`0)
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Add(`0)
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<T>.Add
    fullName: System.Collections.Generic.ICollection<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of T).Add
    fullName: System.Collections.Generic.ICollection(Of T).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Add(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)
  isExternal: true
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<T>.Add
    fullName: System.Collections.Generic.ICollection<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of T).Add
    fullName: System.Collections.Generic.ICollection(Of T).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.AddNoCheck*
  commentId: Overload:Microsoft.Health.FastList`1.AddNoCheck
  isExternal: false
  name: AddNoCheck
  nameWithType: FastList<T>.AddNoCheck
  fullName: Microsoft.Health.FastList<T>.AddNoCheck
  nameWithType.vb: FastList(Of T).AddNoCheck
  fullName.vb: Microsoft.Health.FastList(Of T).AddNoCheck
- uid: Microsoft.Health.FastList`1.AddRange*
  commentId: Overload:Microsoft.Health.FastList`1.AddRange
  isExternal: false
  name: AddRange
  nameWithType: FastList<T>.AddRange
  fullName: Microsoft.Health.FastList<T>.AddRange
  nameWithType.vb: FastList(Of T).AddRange
  fullName.vb: Microsoft.Health.FastList(Of T).AddRange
- uid: Microsoft.Health.FastList`1.Clear*
  commentId: Overload:Microsoft.Health.FastList`1.Clear
  isExternal: false
  name: Clear
  nameWithType: FastList<T>.Clear
  fullName: Microsoft.Health.FastList<T>.Clear
  nameWithType.vb: FastList(Of T).Clear
  fullName.vb: Microsoft.Health.FastList(Of T).Clear
- uid: System.Collections.Generic.ICollection{{T}}.Clear
  commentId: M:System.Collections.Generic.ICollection{`0}.Clear
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Clear
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection<T>.Clear
    fullName: System.Collections.Generic.ICollection<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection(Of T).Clear
    fullName: System.Collections.Generic.ICollection(Of T).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Clear
  commentId: M:System.Collections.Generic.ICollection`1.Clear
  isExternal: true
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection<T>.Clear
    fullName: System.Collections.Generic.ICollection<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection(Of T).Clear
    fullName: System.Collections.Generic.ICollection(Of T).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.Erase*
  commentId: Overload:Microsoft.Health.FastList`1.Erase
  isExternal: false
  name: Erase
  nameWithType: FastList<T>.Erase
  fullName: Microsoft.Health.FastList<T>.Erase
  nameWithType.vb: FastList(Of T).Erase
  fullName.vb: Microsoft.Health.FastList(Of T).Erase
- uid: Microsoft.Health.FastList`1.GetAt*
  commentId: Overload:Microsoft.Health.FastList`1.GetAt
  isExternal: false
  name: GetAt
  nameWithType: FastList<T>.GetAt
  fullName: Microsoft.Health.FastList<T>.GetAt
  nameWithType.vb: FastList(Of T).GetAt
  fullName.vb: Microsoft.Health.FastList(Of T).GetAt
- uid: Microsoft.Health.FastList`1.Contains*
  commentId: Overload:Microsoft.Health.FastList`1.Contains
  isExternal: false
  name: Contains
  nameWithType: FastList<T>.Contains
  fullName: Microsoft.Health.FastList<T>.Contains
  nameWithType.vb: FastList(Of T).Contains
  fullName.vb: Microsoft.Health.FastList(Of T).Contains
- uid: System.Collections.Generic.ICollection{{T}}.Contains({T})
  commentId: M:System.Collections.Generic.ICollection{`0}.Contains(`0)
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Contains(`0)
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<T>.Contains
    fullName: System.Collections.Generic.ICollection<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of T).Contains
    fullName: System.Collections.Generic.ICollection(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)
  isExternal: true
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<T>.Contains
    fullName: System.Collections.Generic.ICollection<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of T).Contains
    fullName: System.Collections.Generic.ICollection(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.IndexOf*
  commentId: Overload:Microsoft.Health.FastList`1.IndexOf
  isExternal: false
  name: IndexOf
  nameWithType: FastList<T>.IndexOf
  fullName: Microsoft.Health.FastList<T>.IndexOf
  nameWithType.vb: FastList(Of T).IndexOf
  fullName.vb: Microsoft.Health.FastList(Of T).IndexOf
- uid: System.Collections.Generic.IList{{T}}.IndexOf({T})
  commentId: M:System.Collections.Generic.IList{`0}.IndexOf(`0)
  parent: System.Collections.Generic.IList{{T}}
  definition: System.Collections.Generic.IList`1.IndexOf(`0)
  name: IndexOf(T)
  nameWithType: IList<T>.IndexOf(T)
  fullName: System.Collections.Generic.IList<T>.IndexOf(T)
  nameWithType.vb: IList(Of T).IndexOf(T)
  fullName.vb: System.Collections.Generic.IList(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList<T>.IndexOf
    fullName: System.Collections.Generic.IList<T>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList(Of T).IndexOf
    fullName: System.Collections.Generic.IList(Of T).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1.IndexOf(`0)
  commentId: M:System.Collections.Generic.IList`1.IndexOf(`0)
  isExternal: true
  name: IndexOf(T)
  nameWithType: IList<T>.IndexOf(T)
  fullName: System.Collections.Generic.IList<T>.IndexOf(T)
  nameWithType.vb: IList(Of T).IndexOf(T)
  fullName.vb: System.Collections.Generic.IList(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList<T>.IndexOf
    fullName: System.Collections.Generic.IList<T>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList(Of T).IndexOf
    fullName: System.Collections.Generic.IList(Of T).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.Insert*
  commentId: Overload:Microsoft.Health.FastList`1.Insert
  isExternal: false
  name: Insert
  nameWithType: FastList<T>.Insert
  fullName: Microsoft.Health.FastList<T>.Insert
  nameWithType.vb: FastList(Of T).Insert
  fullName.vb: Microsoft.Health.FastList(Of T).Insert
- uid: System.Collections.Generic.IList{{T}}.Insert(System.Int32,{T})
  commentId: M:System.Collections.Generic.IList{`0}.Insert(System.Int32,`0)
  parent: System.Collections.Generic.IList{{T}}
  definition: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  name: Insert(Int32, T)
  nameWithType: IList<T>.Insert(Int32, T)
  fullName: System.Collections.Generic.IList<T>.Insert(System.Int32, T)
  nameWithType.vb: IList(Of T).Insert(Int32, T)
  fullName.vb: System.Collections.Generic.IList(Of T).Insert(System.Int32, T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList<T>.Insert
    fullName: System.Collections.Generic.IList<T>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList(Of T).Insert
    fullName: System.Collections.Generic.IList(Of T).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  commentId: M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  isExternal: true
  name: Insert(Int32, T)
  nameWithType: IList<T>.Insert(Int32, T)
  fullName: System.Collections.Generic.IList<T>.Insert(System.Int32, T)
  nameWithType.vb: IList(Of T).Insert(Int32, T)
  fullName.vb: System.Collections.Generic.IList(Of T).Insert(System.Int32, T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList<T>.Insert
    fullName: System.Collections.Generic.IList<T>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList(Of T).Insert
    fullName: System.Collections.Generic.IList(Of T).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.RemoveAt*
  commentId: Overload:Microsoft.Health.FastList`1.RemoveAt
  isExternal: false
  name: RemoveAt
  nameWithType: FastList<T>.RemoveAt
  fullName: Microsoft.Health.FastList<T>.RemoveAt
  nameWithType.vb: FastList(Of T).RemoveAt
  fullName.vb: Microsoft.Health.FastList(Of T).RemoveAt
- uid: System.Collections.Generic.IList{{T}}.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.IList{`0}.RemoveAt(System.Int32)
  parent: System.Collections.Generic.IList{{T}}
  definition: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  name: RemoveAt(Int32)
  nameWithType: IList<T>.RemoveAt(Int32)
  fullName: System.Collections.Generic.IList<T>.RemoveAt(System.Int32)
  nameWithType.vb: IList(Of T).RemoveAt(Int32)
  fullName.vb: System.Collections.Generic.IList(Of T).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList<T>.RemoveAt
    fullName: System.Collections.Generic.IList<T>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList(Of T).RemoveAt
    fullName: System.Collections.Generic.IList(Of T).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  isExternal: true
  name: RemoveAt(Int32)
  nameWithType: IList<T>.RemoveAt(Int32)
  fullName: System.Collections.Generic.IList<T>.RemoveAt(System.Int32)
  nameWithType.vb: IList(Of T).RemoveAt(Int32)
  fullName.vb: System.Collections.Generic.IList(Of T).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList<T>.RemoveAt
    fullName: System.Collections.Generic.IList<T>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList(Of T).RemoveAt
    fullName: System.Collections.Generic.IList(Of T).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.CopyTo*
  commentId: Overload:Microsoft.Health.FastList`1.CopyTo
  isExternal: false
  name: CopyTo
  nameWithType: FastList<T>.CopyTo
  fullName: Microsoft.Health.FastList<T>.CopyTo
  nameWithType.vb: FastList(Of T).CopyTo
  fullName.vb: Microsoft.Health.FastList(Of T).CopyTo
- uid: System.Collections.Generic.ICollection{{T}}.CopyTo({T}[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection{`0}.CopyTo(`0[],System.Int32)
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  name: CopyTo(T[], Int32)
  nameWithType: ICollection<T>.CopyTo(T[], Int32)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Int32)
  fullName.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<T>.CopyTo
    fullName: System.Collections.Generic.ICollection<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of T).CopyTo
    fullName: System.Collections.Generic.ICollection(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: ICollection<T>.CopyTo(T[], Int32)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Int32)
  fullName.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<T>.CopyTo
    fullName: System.Collections.Generic.ICollection<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of T).CopyTo
    fullName: System.Collections.Generic.ICollection(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.Remove*
  commentId: Overload:Microsoft.Health.FastList`1.Remove
  isExternal: false
  name: Remove
  nameWithType: FastList<T>.Remove
  fullName: Microsoft.Health.FastList<T>.Remove
  nameWithType.vb: FastList(Of T).Remove
  fullName.vb: Microsoft.Health.FastList(Of T).Remove
- uid: System.Collections.Generic.ICollection{{T}}.Remove({T})
  commentId: M:System.Collections.Generic.ICollection{`0}.Remove(`0)
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Remove(`0)
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<T>.Remove
    fullName: System.Collections.Generic.ICollection<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of T).Remove
    fullName: System.Collections.Generic.ICollection(Of T).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)
  isExternal: true
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<T>.Remove
    fullName: System.Collections.Generic.ICollection<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of T).Remove
    fullName: System.Collections.Generic.ICollection(Of T).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.Trim*
  commentId: Overload:Microsoft.Health.FastList`1.Trim
  isExternal: false
  name: Trim
  nameWithType: FastList<T>.Trim
  fullName: Microsoft.Health.FastList<T>.Trim
  nameWithType.vb: FastList(Of T).Trim
  fullName.vb: Microsoft.Health.FastList(Of T).Trim
- uid: Microsoft.Health.FastList`1.Sort*
  commentId: Overload:Microsoft.Health.FastList`1.Sort
  isExternal: false
  name: Sort
  nameWithType: FastList<T>.Sort
  fullName: Microsoft.Health.FastList<T>.Sort
  nameWithType.vb: FastList(Of T).Sort
  fullName.vb: Microsoft.Health.FastList(Of T).Sort
- uid: System.Collections.Generic.IComparer{{T}}
  commentId: T:System.Collections.Generic.IComparer{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IComparer`1
  name: IComparer<T>
  nameWithType: IComparer<T>
  fullName: System.Collections.Generic.IComparer<T>
  nameWithType.vb: IComparer(Of T)
  fullName.vb: System.Collections.Generic.IComparer(Of T)
  name.vb: IComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IComparer`1
  commentId: T:System.Collections.Generic.IComparer`1
  isExternal: true
  name: IComparer<T>
  nameWithType: IComparer<T>
  fullName: System.Collections.Generic.IComparer<T>
  nameWithType.vb: IComparer(Of T)
  fullName.vb: System.Collections.Generic.IComparer(Of T)
  name.vb: IComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.BinarySearch*
  commentId: Overload:Microsoft.Health.FastList`1.BinarySearch
  isExternal: false
  name: BinarySearch
  nameWithType: FastList<T>.BinarySearch
  fullName: Microsoft.Health.FastList<T>.BinarySearch
  nameWithType.vb: FastList(Of T).BinarySearch
  fullName.vb: Microsoft.Health.FastList(Of T).BinarySearch
- uid: Microsoft.Health.FastList`1.CalculateNewSize*
  commentId: Overload:Microsoft.Health.FastList`1.CalculateNewSize
  isExternal: false
  name: CalculateNewSize
  nameWithType: FastList<T>.CalculateNewSize
  fullName: Microsoft.Health.FastList<T>.CalculateNewSize
  nameWithType.vb: FastList(Of T).CalculateNewSize
  fullName.vb: Microsoft.Health.FastList(Of T).CalculateNewSize
- uid: Microsoft.Health.FastList`1.GetEnumerator*
  commentId: Overload:Microsoft.Health.FastList`1.GetEnumerator
  isExternal: false
  name: GetEnumerator
  nameWithType: FastList<T>.GetEnumerator
  fullName: Microsoft.Health.FastList<T>.GetEnumerator
  nameWithType.vb: FastList(Of T).GetEnumerator
  fullName.vb: Microsoft.Health.FastList(Of T).GetEnumerator
- uid: System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{`0}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{{T}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{{T}}
  commentId: T:System.Collections.Generic.IEnumerator{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.FastList`1.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:Microsoft.Health.FastList`1.System#Collections#IEnumerable#GetEnumerator
  isExternal: false
  name: IEnumerable.GetEnumerator
  nameWithType: FastList<T>.IEnumerable.GetEnumerator
  fullName: Microsoft.Health.FastList<T>.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: FastList(Of T).System.Collections.IEnumerable.GetEnumerator
  fullName.vb: Microsoft.Health.FastList(Of T).System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: Microsoft.Health.FastList`1.EnsureCapacity*
  commentId: Overload:Microsoft.Health.FastList`1.EnsureCapacity
  isExternal: false
  name: EnsureCapacity
  nameWithType: FastList<T>.EnsureCapacity
  fullName: Microsoft.Health.FastList<T>.EnsureCapacity
  nameWithType.vb: FastList(Of T).EnsureCapacity
  fullName.vb: Microsoft.Health.FastList(Of T).EnsureCapacity
- uid: Microsoft.Health.FastList`1.Init*
  commentId: Overload:Microsoft.Health.FastList`1.Init
  isExternal: false
  name: Init
  nameWithType: FastList<T>.Init
  fullName: Microsoft.Health.FastList<T>.Init
  nameWithType.vb: FastList(Of T).Init
  fullName.vb: Microsoft.Health.FastList(Of T).Init
- uid: Microsoft.Health.FastList`1.ToArray*
  commentId: Overload:Microsoft.Health.FastList`1.ToArray
  isExternal: false
  name: ToArray
  nameWithType: FastList<T>.ToArray
  fullName: Microsoft.Health.FastList<T>.ToArray
  nameWithType.vb: FastList(Of T).ToArray
  fullName.vb: Microsoft.Health.FastList(Of T).ToArray
- uid: Microsoft.Health.FastList`1.GetTrimmedBuffer*
  commentId: Overload:Microsoft.Health.FastList`1.GetTrimmedBuffer
  isExternal: false
  name: GetTrimmedBuffer
  nameWithType: FastList<T>.GetTrimmedBuffer
  fullName: Microsoft.Health.FastList<T>.GetTrimmedBuffer
  nameWithType.vb: FastList(Of T).GetTrimmedBuffer
  fullName.vb: Microsoft.Health.FastList(Of T).GetTrimmedBuffer
