### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.PhraseAnalyzer.ClassExpression
  commentId: T:Microsoft.Health.PhraseAnalyzer.ClassExpression
  id: ClassExpression
  parent: Microsoft.Health.PhraseAnalyzer
  children:
  - Microsoft.Health.PhraseAnalyzer.ClassExpression.#ctor
  - Microsoft.Health.PhraseAnalyzer.ClassExpression.#ctor(Microsoft.Health.PhraseAnalyzer.ExpressionAttributes)
  - Microsoft.Health.PhraseAnalyzer.ClassExpression.Code
  - Microsoft.Health.PhraseAnalyzer.ClassExpression.Data
  - Microsoft.Health.PhraseAnalyzer.ClassExpression.Load(System.IO.TextReader,System.Collections.Generic.KeyValuePair{System.String,Microsoft.Health.PhraseAnalyzer.IMatcher}[])
  - Microsoft.Health.PhraseAnalyzer.ClassExpression.Load(System.String,System.Collections.Generic.KeyValuePair{System.String,Microsoft.Health.PhraseAnalyzer.IMatcher}[])
  - Microsoft.Health.PhraseAnalyzer.ClassExpression.Load(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,Microsoft.Health.PhraseAnalyzer.IMatcher}[])
  langs:
  - csharp
  - vb
  name: ClassExpression
  nameWithType: ClassExpression
  fullName: Microsoft.Health.PhraseAnalyzer.ClassExpression
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/ClassExpression.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ClassExpression
    path: search/PhraseAnalyzer/ClassExpression.cs
    startLine: 18
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: 'public class ClassExpression : Expression'
    content.vb: >-
      Public Class ClassExpression
          Inherits Expression
  inheritance:
  - System.Object
  - Microsoft.Health.PhraseAnalyzer.Expression
  inheritedMembers:
  - Microsoft.Health.PhraseAnalyzer.Expression.Type
  - Microsoft.Health.PhraseAnalyzer.Expression.Name
  - Microsoft.Health.PhraseAnalyzer.Expression.Attributes
  - Microsoft.Health.PhraseAnalyzer.Expression.HasAttributes
  - Microsoft.Health.PhraseAnalyzer.Expression.HasName
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.PhraseAnalyzer.ClassExpression.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.PhraseAnalyzer.ClassExpression.#ctor
  commentId: M:Microsoft.Health.PhraseAnalyzer.ClassExpression.#ctor
  id: '#ctor'
  parent: Microsoft.Health.PhraseAnalyzer.ClassExpression
  langs:
  - csharp
  - vb
  name: ClassExpression()
  nameWithType: ClassExpression.ClassExpression()
  fullName: Microsoft.Health.PhraseAnalyzer.ClassExpression.ClassExpression()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/ClassExpression.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: search/PhraseAnalyzer/ClassExpression.cs
    startLine: 28
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: public ClassExpression()
    content.vb: Public Sub New
  overload: Microsoft.Health.PhraseAnalyzer.ClassExpression.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.PhraseAnalyzer.ClassExpression.#ctor(Microsoft.Health.PhraseAnalyzer.ExpressionAttributes)
  commentId: M:Microsoft.Health.PhraseAnalyzer.ClassExpression.#ctor(Microsoft.Health.PhraseAnalyzer.ExpressionAttributes)
  id: '#ctor(Microsoft.Health.PhraseAnalyzer.ExpressionAttributes)'
  parent: Microsoft.Health.PhraseAnalyzer.ClassExpression
  langs:
  - csharp
  - vb
  name: ClassExpression(ExpressionAttributes)
  nameWithType: ClassExpression.ClassExpression(ExpressionAttributes)
  fullName: Microsoft.Health.PhraseAnalyzer.ClassExpression.ClassExpression(Microsoft.Health.PhraseAnalyzer.ExpressionAttributes)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/ClassExpression.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: search/PhraseAnalyzer/ClassExpression.cs
    startLine: 36
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: public ClassExpression(ExpressionAttributes attributes)
    content.vb: Public Sub New(attributes As ExpressionAttributes)
    parameters:
    - id: attributes
      type: Microsoft.Health.PhraseAnalyzer.ExpressionAttributes
      description: ''
  overload: Microsoft.Health.PhraseAnalyzer.ClassExpression.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.PhraseAnalyzer.ClassExpression.Data
  commentId: P:Microsoft.Health.PhraseAnalyzer.ClassExpression.Data
  id: Data
  parent: Microsoft.Health.PhraseAnalyzer.ClassExpression
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: ClassExpression.Data
  fullName: Microsoft.Health.PhraseAnalyzer.ClassExpression.Data
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/ClassExpression.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Data
    path: search/PhraseAnalyzer/ClassExpression.cs
    startLine: 44
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: public DataExpression Data { get; set; }
    content.vb: Public Property Data As DataExpression
    parameters: []
    return:
      type: Microsoft.Health.PhraseAnalyzer.DataExpression
  overload: Microsoft.Health.PhraseAnalyzer.ClassExpression.Data*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.PhraseAnalyzer.ClassExpression.Code
  commentId: P:Microsoft.Health.PhraseAnalyzer.ClassExpression.Code
  id: Code
  parent: Microsoft.Health.PhraseAnalyzer.ClassExpression
  langs:
  - csharp
  - vb
  name: Code
  nameWithType: ClassExpression.Code
  fullName: Microsoft.Health.PhraseAnalyzer.ClassExpression.Code
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/ClassExpression.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Code
    path: search/PhraseAnalyzer/ClassExpression.cs
    startLine: 64
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: public ListExpression Code { get; set; }
    content.vb: Public Property Code As ListExpression
    parameters: []
    return:
      type: Microsoft.Health.PhraseAnalyzer.ListExpression
  overload: Microsoft.Health.PhraseAnalyzer.ClassExpression.Code*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.PhraseAnalyzer.ClassExpression.Load(System.IO.TextReader,System.Collections.Generic.KeyValuePair{System.String,Microsoft.Health.PhraseAnalyzer.IMatcher}[])
  commentId: M:Microsoft.Health.PhraseAnalyzer.ClassExpression.Load(System.IO.TextReader,System.Collections.Generic.KeyValuePair{System.String,Microsoft.Health.PhraseAnalyzer.IMatcher}[])
  id: Load(System.IO.TextReader,System.Collections.Generic.KeyValuePair{System.String,Microsoft.Health.PhraseAnalyzer.IMatcher}[])
  parent: Microsoft.Health.PhraseAnalyzer.ClassExpression
  langs:
  - csharp
  - vb
  name: Load(TextReader, KeyValuePair<String, IMatcher>[])
  nameWithType: ClassExpression.Load(TextReader, KeyValuePair<String, IMatcher>[])
  fullName: Microsoft.Health.PhraseAnalyzer.ClassExpression.Load(System.IO.TextReader, System.Collections.Generic.KeyValuePair<System.String, Microsoft.Health.PhraseAnalyzer.IMatcher>[])
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/ClassExpression.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Load
    path: search/PhraseAnalyzer/ClassExpression.cs
    startLine: 130
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  syntax:
    content: public static ClassExpression Load(TextReader input, params KeyValuePair<string, IMatcher>[] matchers)
    content.vb: Public Shared Function Load(input As TextReader, ParamArray matchers As KeyValuePair(Of String, IMatcher)()) As ClassExpression
    parameters:
    - id: input
      type: System.IO.TextReader
    - id: matchers
      type: System.Collections.Generic.KeyValuePair{System.String,Microsoft.Health.PhraseAnalyzer.IMatcher}[]
    return:
      type: Microsoft.Health.PhraseAnalyzer.ClassExpression
  overload: Microsoft.Health.PhraseAnalyzer.ClassExpression.Load*
  nameWithType.vb: ClassExpression.Load(TextReader, KeyValuePair(Of String, IMatcher)())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Health.PhraseAnalyzer.ClassExpression.Load(System.IO.TextReader, System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.Health.PhraseAnalyzer.IMatcher)())
  name.vb: Load(TextReader, KeyValuePair(Of String, IMatcher)())
- uid: Microsoft.Health.PhraseAnalyzer.ClassExpression.Load(System.String,System.Collections.Generic.KeyValuePair{System.String,Microsoft.Health.PhraseAnalyzer.IMatcher}[])
  commentId: M:Microsoft.Health.PhraseAnalyzer.ClassExpression.Load(System.String,System.Collections.Generic.KeyValuePair{System.String,Microsoft.Health.PhraseAnalyzer.IMatcher}[])
  id: Load(System.String,System.Collections.Generic.KeyValuePair{System.String,Microsoft.Health.PhraseAnalyzer.IMatcher}[])
  parent: Microsoft.Health.PhraseAnalyzer.ClassExpression
  langs:
  - csharp
  - vb
  name: Load(String, KeyValuePair<String, IMatcher>[])
  nameWithType: ClassExpression.Load(String, KeyValuePair<String, IMatcher>[])
  fullName: Microsoft.Health.PhraseAnalyzer.ClassExpression.Load(System.String, System.Collections.Generic.KeyValuePair<System.String, Microsoft.Health.PhraseAnalyzer.IMatcher>[])
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/ClassExpression.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Load
    path: search/PhraseAnalyzer/ClassExpression.cs
    startLine: 149
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  syntax:
    content: public static ClassExpression Load(string filePath, params KeyValuePair<string, IMatcher>[] matchers)
    content.vb: Public Shared Function Load(filePath As String, ParamArray matchers As KeyValuePair(Of String, IMatcher)()) As ClassExpression
    parameters:
    - id: filePath
      type: System.String
    - id: matchers
      type: System.Collections.Generic.KeyValuePair{System.String,Microsoft.Health.PhraseAnalyzer.IMatcher}[]
    return:
      type: Microsoft.Health.PhraseAnalyzer.ClassExpression
  overload: Microsoft.Health.PhraseAnalyzer.ClassExpression.Load*
  nameWithType.vb: ClassExpression.Load(String, KeyValuePair(Of String, IMatcher)())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Health.PhraseAnalyzer.ClassExpression.Load(System.String, System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.Health.PhraseAnalyzer.IMatcher)())
  name.vb: Load(String, KeyValuePair(Of String, IMatcher)())
- uid: Microsoft.Health.PhraseAnalyzer.ClassExpression.Load(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,Microsoft.Health.PhraseAnalyzer.IMatcher}[])
  commentId: M:Microsoft.Health.PhraseAnalyzer.ClassExpression.Load(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,Microsoft.Health.PhraseAnalyzer.IMatcher}[])
  id: Load(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,Microsoft.Health.PhraseAnalyzer.IMatcher}[])
  parent: Microsoft.Health.PhraseAnalyzer.ClassExpression
  langs:
  - csharp
  - vb
  name: Load(String, String, KeyValuePair<String, IMatcher>[])
  nameWithType: ClassExpression.Load(String, String, KeyValuePair<String, IMatcher>[])
  fullName: Microsoft.Health.PhraseAnalyzer.ClassExpression.Load(System.String, System.String, System.Collections.Generic.KeyValuePair<System.String, Microsoft.Health.PhraseAnalyzer.IMatcher>[])
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/ClassExpression.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Load
    path: search/PhraseAnalyzer/ClassExpression.cs
    startLine: 158
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  syntax:
    content: public static ClassExpression Load(string basePath, string fileName, params KeyValuePair<string, IMatcher>[] matchers)
    content.vb: Public Shared Function Load(basePath As String, fileName As String, ParamArray matchers As KeyValuePair(Of String, IMatcher)()) As ClassExpression
    parameters:
    - id: basePath
      type: System.String
    - id: fileName
      type: System.String
    - id: matchers
      type: System.Collections.Generic.KeyValuePair{System.String,Microsoft.Health.PhraseAnalyzer.IMatcher}[]
    return:
      type: Microsoft.Health.PhraseAnalyzer.ClassExpression
  overload: Microsoft.Health.PhraseAnalyzer.ClassExpression.Load*
  nameWithType.vb: ClassExpression.Load(String, String, KeyValuePair(Of String, IMatcher)())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Health.PhraseAnalyzer.ClassExpression.Load(System.String, System.String, System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.Health.PhraseAnalyzer.IMatcher)())
  name.vb: Load(String, String, KeyValuePair(Of String, IMatcher)())
references:
- uid: Microsoft.Health.PhraseAnalyzer
  commentId: N:Microsoft.Health.PhraseAnalyzer
  isExternal: false
  name: Microsoft.Health.PhraseAnalyzer
  nameWithType: Microsoft.Health.PhraseAnalyzer
  fullName: Microsoft.Health.PhraseAnalyzer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.PhraseAnalyzer.Expression
  commentId: T:Microsoft.Health.PhraseAnalyzer.Expression
  parent: Microsoft.Health.PhraseAnalyzer
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: Microsoft.Health.PhraseAnalyzer.Expression
- uid: Microsoft.Health.PhraseAnalyzer.Expression.Type
  commentId: P:Microsoft.Health.PhraseAnalyzer.Expression.Type
  parent: Microsoft.Health.PhraseAnalyzer.Expression
  isExternal: false
  name: Type
  nameWithType: Expression.Type
  fullName: Microsoft.Health.PhraseAnalyzer.Expression.Type
- uid: Microsoft.Health.PhraseAnalyzer.Expression.Name
  commentId: P:Microsoft.Health.PhraseAnalyzer.Expression.Name
  parent: Microsoft.Health.PhraseAnalyzer.Expression
  isExternal: false
  name: Name
  nameWithType: Expression.Name
  fullName: Microsoft.Health.PhraseAnalyzer.Expression.Name
- uid: Microsoft.Health.PhraseAnalyzer.Expression.Attributes
  commentId: P:Microsoft.Health.PhraseAnalyzer.Expression.Attributes
  parent: Microsoft.Health.PhraseAnalyzer.Expression
  isExternal: false
  name: Attributes
  nameWithType: Expression.Attributes
  fullName: Microsoft.Health.PhraseAnalyzer.Expression.Attributes
- uid: Microsoft.Health.PhraseAnalyzer.Expression.HasAttributes
  commentId: P:Microsoft.Health.PhraseAnalyzer.Expression.HasAttributes
  parent: Microsoft.Health.PhraseAnalyzer.Expression
  isExternal: false
  name: HasAttributes
  nameWithType: Expression.HasAttributes
  fullName: Microsoft.Health.PhraseAnalyzer.Expression.HasAttributes
- uid: Microsoft.Health.PhraseAnalyzer.Expression.HasName
  commentId: P:Microsoft.Health.PhraseAnalyzer.Expression.HasName
  parent: Microsoft.Health.PhraseAnalyzer.Expression
  isExternal: false
  name: HasName
  nameWithType: Expression.HasName
  fullName: Microsoft.Health.PhraseAnalyzer.Expression.HasName
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.PhraseAnalyzer.ClassExpression.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<ClassExpression>()
  nameWithType: TypeHelper.ValueOrDbNull<ClassExpression>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.PhraseAnalyzer.ClassExpression>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of ClassExpression)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.PhraseAnalyzer.ClassExpression)()
  name.vb: ValueOrDbNull(Of ClassExpression)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<ClassExpression>
    nameWithType: TypeHelper.ValueOrDbNull<ClassExpression>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.PhraseAnalyzer.ClassExpression>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of ClassExpression)
    nameWithType: TypeHelper.ValueOrDbNull(Of ClassExpression)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.PhraseAnalyzer.ClassExpression)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.PhraseAnalyzer.ClassExpression.#ctor*
  commentId: Overload:Microsoft.Health.PhraseAnalyzer.ClassExpression.#ctor
  isExternal: false
  name: ClassExpression
  nameWithType: ClassExpression.ClassExpression
  fullName: Microsoft.Health.PhraseAnalyzer.ClassExpression.ClassExpression
- uid: Microsoft.Health.PhraseAnalyzer.ExpressionAttributes
  commentId: T:Microsoft.Health.PhraseAnalyzer.ExpressionAttributes
  parent: Microsoft.Health.PhraseAnalyzer
  isExternal: false
  name: ExpressionAttributes
  nameWithType: ExpressionAttributes
  fullName: Microsoft.Health.PhraseAnalyzer.ExpressionAttributes
- uid: Microsoft.Health.PhraseAnalyzer.ClassExpression.Data*
  commentId: Overload:Microsoft.Health.PhraseAnalyzer.ClassExpression.Data
  isExternal: false
  name: Data
  nameWithType: ClassExpression.Data
  fullName: Microsoft.Health.PhraseAnalyzer.ClassExpression.Data
- uid: Microsoft.Health.PhraseAnalyzer.DataExpression
  commentId: T:Microsoft.Health.PhraseAnalyzer.DataExpression
  parent: Microsoft.Health.PhraseAnalyzer
  isExternal: false
  name: DataExpression
  nameWithType: DataExpression
  fullName: Microsoft.Health.PhraseAnalyzer.DataExpression
- uid: Microsoft.Health.PhraseAnalyzer.ClassExpression.Code*
  commentId: Overload:Microsoft.Health.PhraseAnalyzer.ClassExpression.Code
  isExternal: false
  name: Code
  nameWithType: ClassExpression.Code
  fullName: Microsoft.Health.PhraseAnalyzer.ClassExpression.Code
- uid: Microsoft.Health.PhraseAnalyzer.ListExpression
  commentId: T:Microsoft.Health.PhraseAnalyzer.ListExpression
  parent: Microsoft.Health.PhraseAnalyzer
  isExternal: false
  name: ListExpression
  nameWithType: ListExpression
  fullName: Microsoft.Health.PhraseAnalyzer.ListExpression
- uid: Microsoft.Health.PhraseAnalyzer.ClassExpression.Load*
  commentId: Overload:Microsoft.Health.PhraseAnalyzer.ClassExpression.Load
  isExternal: false
  name: Load
  nameWithType: ClassExpression.Load
  fullName: Microsoft.Health.PhraseAnalyzer.ClassExpression.Load
- uid: System.IO.TextReader
  commentId: T:System.IO.TextReader
  parent: System.IO
  isExternal: true
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: System.Collections.Generic.KeyValuePair{System.String,Microsoft.Health.PhraseAnalyzer.IMatcher}[]
  name: KeyValuePair<String, IMatcher>[]
  nameWithType: KeyValuePair<String, IMatcher>[]
  fullName: System.Collections.Generic.KeyValuePair<System.String, Microsoft.Health.PhraseAnalyzer.IMatcher>[]
  nameWithType.vb: KeyValuePair(Of String, IMatcher)()
  fullName.vb: System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.Health.PhraseAnalyzer.IMatcher)()
  name.vb: KeyValuePair(Of String, IMatcher)()
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.PhraseAnalyzer.IMatcher
    name: IMatcher
    nameWithType: IMatcher
    fullName: Microsoft.Health.PhraseAnalyzer.IMatcher
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.PhraseAnalyzer.IMatcher
    name: IMatcher
    nameWithType: IMatcher
    fullName: Microsoft.Health.PhraseAnalyzer.IMatcher
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.Health.PhraseAnalyzer.ClassExpression
  commentId: T:Microsoft.Health.PhraseAnalyzer.ClassExpression
  parent: Microsoft.Health.PhraseAnalyzer
  isExternal: false
  name: ClassExpression
  nameWithType: ClassExpression
  fullName: Microsoft.Health.PhraseAnalyzer.ClassExpression
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
