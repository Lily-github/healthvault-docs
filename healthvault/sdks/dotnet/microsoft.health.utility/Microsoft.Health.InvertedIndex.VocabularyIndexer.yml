### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.InvertedIndex.VocabularyIndexer
  commentId: T:Microsoft.Health.InvertedIndex.VocabularyIndexer
  id: VocabularyIndexer
  parent: Microsoft.Health.InvertedIndex
  children:
  - Microsoft.Health.InvertedIndex.VocabularyIndexer.#ctor
  - Microsoft.Health.InvertedIndex.VocabularyIndexer.#ctor(Microsoft.Health.InvertedIndex.AutoCompleteIndexer)
  - Microsoft.Health.InvertedIndex.VocabularyIndexer.AcronymDetection
  - Microsoft.Health.InvertedIndex.VocabularyIndexer.Add(System.String)
  - Microsoft.Health.InvertedIndex.VocabularyIndexer.AddKeyword(System.UInt32,System.String)
  - Microsoft.Health.InvertedIndex.VocabularyIndexer.Indexer
  - Microsoft.Health.InvertedIndex.VocabularyIndexer.ToIndex
  langs:
  - csharp
  - vb
  name: VocabularyIndexer
  nameWithType: VocabularyIndexer
  fullName: Microsoft.Health.InvertedIndex.VocabularyIndexer
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/VocabularyIndexer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: VocabularyIndexer
    path: search/InvertedIndex/VocabularyIndexer.cs
    startLine: 17
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public class VocabularyIndexer
    content.vb: Public Class VocabularyIndexer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.InvertedIndex.VocabularyIndexer.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.InvertedIndex.VocabularyIndexer.#ctor
  commentId: M:Microsoft.Health.InvertedIndex.VocabularyIndexer.#ctor
  id: '#ctor'
  parent: Microsoft.Health.InvertedIndex.VocabularyIndexer
  langs:
  - csharp
  - vb
  name: VocabularyIndexer()
  nameWithType: VocabularyIndexer.VocabularyIndexer()
  fullName: Microsoft.Health.InvertedIndex.VocabularyIndexer.VocabularyIndexer()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/VocabularyIndexer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: search/InvertedIndex/VocabularyIndexer.cs
    startLine: 28
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public VocabularyIndexer()
    content.vb: Public Sub New
  overload: Microsoft.Health.InvertedIndex.VocabularyIndexer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.VocabularyIndexer.#ctor(Microsoft.Health.InvertedIndex.AutoCompleteIndexer)
  commentId: M:Microsoft.Health.InvertedIndex.VocabularyIndexer.#ctor(Microsoft.Health.InvertedIndex.AutoCompleteIndexer)
  id: '#ctor(Microsoft.Health.InvertedIndex.AutoCompleteIndexer)'
  parent: Microsoft.Health.InvertedIndex.VocabularyIndexer
  langs:
  - csharp
  - vb
  name: VocabularyIndexer(AutoCompleteIndexer)
  nameWithType: VocabularyIndexer.VocabularyIndexer(AutoCompleteIndexer)
  fullName: Microsoft.Health.InvertedIndex.VocabularyIndexer.VocabularyIndexer(Microsoft.Health.InvertedIndex.AutoCompleteIndexer)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/VocabularyIndexer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: search/InvertedIndex/VocabularyIndexer.cs
    startLine: 37
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public VocabularyIndexer(AutoCompleteIndexer indexer)
    content.vb: Public Sub New(indexer As AutoCompleteIndexer)
    parameters:
    - id: indexer
      type: Microsoft.Health.InvertedIndex.AutoCompleteIndexer
      description: ''
  overload: Microsoft.Health.InvertedIndex.VocabularyIndexer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.VocabularyIndexer.Indexer
  commentId: P:Microsoft.Health.InvertedIndex.VocabularyIndexer.Indexer
  id: Indexer
  parent: Microsoft.Health.InvertedIndex.VocabularyIndexer
  langs:
  - csharp
  - vb
  name: Indexer
  nameWithType: VocabularyIndexer.Indexer
  fullName: Microsoft.Health.InvertedIndex.VocabularyIndexer.Indexer
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/VocabularyIndexer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Indexer
    path: search/InvertedIndex/VocabularyIndexer.cs
    startLine: 53
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public AutoCompleteIndexer Indexer { get; }
    content.vb: Public ReadOnly Property Indexer As AutoCompleteIndexer
    parameters: []
    return:
      type: Microsoft.Health.InvertedIndex.AutoCompleteIndexer
  overload: Microsoft.Health.InvertedIndex.VocabularyIndexer.Indexer*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.InvertedIndex.VocabularyIndexer.AcronymDetection
  commentId: F:Microsoft.Health.InvertedIndex.VocabularyIndexer.AcronymDetection
  id: AcronymDetection
  parent: Microsoft.Health.InvertedIndex.VocabularyIndexer
  langs:
  - csharp
  - vb
  name: AcronymDetection
  nameWithType: VocabularyIndexer.AcronymDetection
  fullName: Microsoft.Health.InvertedIndex.VocabularyIndexer.AcronymDetection
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/VocabularyIndexer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AcronymDetection
    path: search/InvertedIndex/VocabularyIndexer.cs
    startLine: 64
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public bool AcronymDetection
    content.vb: Public AcronymDetection As Boolean
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.VocabularyIndexer.Add(System.String)
  commentId: M:Microsoft.Health.InvertedIndex.VocabularyIndexer.Add(System.String)
  id: Add(System.String)
  parent: Microsoft.Health.InvertedIndex.VocabularyIndexer
  langs:
  - csharp
  - vb
  name: Add(String)
  nameWithType: VocabularyIndexer.Add(String)
  fullName: Microsoft.Health.InvertedIndex.VocabularyIndexer.Add(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/VocabularyIndexer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Add
    path: search/InvertedIndex/VocabularyIndexer.cs
    startLine: 71
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\nIndex the phrase...\n"
  example: []
  syntax:
    content: public uint Add(string phrase)
    content.vb: Public Function Add(phrase As String) As UInteger
    parameters:
    - id: phrase
      type: System.String
      description: ''
    return:
      type: System.UInt32
      description: the added phrase's recordID
  overload: Microsoft.Health.InvertedIndex.VocabularyIndexer.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.VocabularyIndexer.AddKeyword(System.UInt32,System.String)
  commentId: M:Microsoft.Health.InvertedIndex.VocabularyIndexer.AddKeyword(System.UInt32,System.String)
  id: AddKeyword(System.UInt32,System.String)
  parent: Microsoft.Health.InvertedIndex.VocabularyIndexer
  langs:
  - csharp
  - vb
  name: AddKeyword(UInt32, String)
  nameWithType: VocabularyIndexer.AddKeyword(UInt32, String)
  fullName: Microsoft.Health.InvertedIndex.VocabularyIndexer.AddKeyword(System.UInt32, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/VocabularyIndexer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AddKeyword
    path: search/InvertedIndex/VocabularyIndexer.cs
    startLine: 111
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void AddKeyword(uint recordID, string keyword)
    content.vb: Public Sub AddKeyword(recordID As UInteger, keyword As String)
    parameters:
    - id: recordID
      type: System.UInt32
      description: ''
    - id: keyword
      type: System.String
      description: ''
  overload: Microsoft.Health.InvertedIndex.VocabularyIndexer.AddKeyword*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.VocabularyIndexer.ToIndex
  commentId: M:Microsoft.Health.InvertedIndex.VocabularyIndexer.ToIndex
  id: ToIndex
  parent: Microsoft.Health.InvertedIndex.VocabularyIndexer
  langs:
  - csharp
  - vb
  name: ToIndex()
  nameWithType: VocabularyIndexer.ToIndex()
  fullName: Microsoft.Health.InvertedIndex.VocabularyIndexer.ToIndex()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/VocabularyIndexer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ToIndex
    path: search/InvertedIndex/VocabularyIndexer.cs
    startLine: 123
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\nCall this ONCE. The behavior for multiple calls is undefined. \n"
  example: []
  syntax:
    content: public AutoCompleteIndex ToIndex()
    content.vb: Public Function ToIndex As AutoCompleteIndex
    return:
      type: Microsoft.Health.InvertedIndex.AutoCompleteIndex
  overload: Microsoft.Health.InvertedIndex.VocabularyIndexer.ToIndex*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Health.InvertedIndex
  commentId: N:Microsoft.Health.InvertedIndex
  isExternal: false
  name: Microsoft.Health.InvertedIndex
  nameWithType: Microsoft.Health.InvertedIndex
  fullName: Microsoft.Health.InvertedIndex
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.VocabularyIndexer.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<VocabularyIndexer>()
  nameWithType: TypeHelper.ValueOrDbNull<VocabularyIndexer>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.InvertedIndex.VocabularyIndexer>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of VocabularyIndexer)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.InvertedIndex.VocabularyIndexer)()
  name.vb: ValueOrDbNull(Of VocabularyIndexer)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<VocabularyIndexer>
    nameWithType: TypeHelper.ValueOrDbNull<VocabularyIndexer>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.InvertedIndex.VocabularyIndexer>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of VocabularyIndexer)
    nameWithType: TypeHelper.ValueOrDbNull(Of VocabularyIndexer)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.InvertedIndex.VocabularyIndexer)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.InvertedIndex.VocabularyIndexer.#ctor*
  commentId: Overload:Microsoft.Health.InvertedIndex.VocabularyIndexer.#ctor
  isExternal: false
  name: VocabularyIndexer
  nameWithType: VocabularyIndexer.VocabularyIndexer
  fullName: Microsoft.Health.InvertedIndex.VocabularyIndexer.VocabularyIndexer
- uid: Microsoft.Health.InvertedIndex.AutoCompleteIndexer
  commentId: T:Microsoft.Health.InvertedIndex.AutoCompleteIndexer
  parent: Microsoft.Health.InvertedIndex
  isExternal: false
  name: AutoCompleteIndexer
  nameWithType: AutoCompleteIndexer
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteIndexer
- uid: Microsoft.Health.InvertedIndex.VocabularyIndexer.Indexer*
  commentId: Overload:Microsoft.Health.InvertedIndex.VocabularyIndexer.Indexer
  isExternal: false
  name: Indexer
  nameWithType: VocabularyIndexer.Indexer
  fullName: Microsoft.Health.InvertedIndex.VocabularyIndexer.Indexer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Health.InvertedIndex.VocabularyIndexer.Add*
  commentId: Overload:Microsoft.Health.InvertedIndex.VocabularyIndexer.Add
  isExternal: false
  name: Add
  nameWithType: VocabularyIndexer.Add
  fullName: Microsoft.Health.InvertedIndex.VocabularyIndexer.Add
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: Microsoft.Health.InvertedIndex.VocabularyIndexer.AddKeyword*
  commentId: Overload:Microsoft.Health.InvertedIndex.VocabularyIndexer.AddKeyword
  isExternal: false
  name: AddKeyword
  nameWithType: VocabularyIndexer.AddKeyword
  fullName: Microsoft.Health.InvertedIndex.VocabularyIndexer.AddKeyword
- uid: Microsoft.Health.InvertedIndex.VocabularyIndexer.ToIndex*
  commentId: Overload:Microsoft.Health.InvertedIndex.VocabularyIndexer.ToIndex
  isExternal: false
  name: ToIndex
  nameWithType: VocabularyIndexer.ToIndex
  fullName: Microsoft.Health.InvertedIndex.VocabularyIndexer.ToIndex
- uid: Microsoft.Health.InvertedIndex.AutoCompleteIndex
  commentId: T:Microsoft.Health.InvertedIndex.AutoCompleteIndex
  parent: Microsoft.Health.InvertedIndex
  isExternal: false
  name: AutoCompleteIndex
  nameWithType: AutoCompleteIndex
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteIndex
