### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.InvertedIndex.BitVector
  commentId: T:Microsoft.Health.InvertedIndex.BitVector
  id: BitVector
  parent: Microsoft.Health.InvertedIndex
  children:
  - Microsoft.Health.InvertedIndex.BitVector.#ctor(System.UInt32)
  - Microsoft.Health.InvertedIndex.BitVector.And(System.UInt32)
  - Microsoft.Health.InvertedIndex.BitVector.Bits
  - Microsoft.Health.InvertedIndex.BitVector.BitwiseAnd(Microsoft.Health.InvertedIndex.BitVector,Microsoft.Health.InvertedIndex.BitVector)
  - Microsoft.Health.InvertedIndex.BitVector.BitwiseOr(Microsoft.Health.InvertedIndex.BitVector,Microsoft.Health.InvertedIndex.BitVector)
  - Microsoft.Health.InvertedIndex.BitVector.BitwiseXor(Microsoft.Health.InvertedIndex.BitVector,Microsoft.Health.InvertedIndex.BitVector)
  - Microsoft.Health.InvertedIndex.BitVector.Clear
  - Microsoft.Health.InvertedIndex.BitVector.Clear(System.UInt32)
  - Microsoft.Health.InvertedIndex.BitVector.Item(System.Int32)
  - Microsoft.Health.InvertedIndex.BitVector.OnesComplement(Microsoft.Health.InvertedIndex.BitVector)
  - Microsoft.Health.InvertedIndex.BitVector.op_BitwiseAnd(Microsoft.Health.InvertedIndex.BitVector,Microsoft.Health.InvertedIndex.BitVector)
  - Microsoft.Health.InvertedIndex.BitVector.op_BitwiseOr(Microsoft.Health.InvertedIndex.BitVector,Microsoft.Health.InvertedIndex.BitVector)
  - Microsoft.Health.InvertedIndex.BitVector.op_ExclusiveOr(Microsoft.Health.InvertedIndex.BitVector,Microsoft.Health.InvertedIndex.BitVector)
  - Microsoft.Health.InvertedIndex.BitVector.op_OnesComplement(Microsoft.Health.InvertedIndex.BitVector)
  - Microsoft.Health.InvertedIndex.BitVector.Or(System.UInt32)
  - Microsoft.Health.InvertedIndex.BitVector.Set
  - Microsoft.Health.InvertedIndex.BitVector.ToString
  - Microsoft.Health.InvertedIndex.BitVector.ToString(System.String)
  - Microsoft.Health.InvertedIndex.BitVector.Xor(System.UInt32)
  langs:
  - csharp
  - vb
  name: BitVector
  nameWithType: BitVector
  fullName: Microsoft.Health.InvertedIndex.BitVector
  type: Struct
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/BitVector.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: BitVector
    path: search/InvertedIndex/BitVector.cs
    startLine: 11
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  syntax:
    content: public struct BitVector
    content.vb: Public Structure BitVector
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.InvertedIndex.BitVector.Microsoft.Health.Utility.TypeHelper.DefaultAsNullable``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Microsoft.Health.InvertedIndex.BitVector.#ctor(System.UInt32)
  commentId: M:Microsoft.Health.InvertedIndex.BitVector.#ctor(System.UInt32)
  id: '#ctor(System.UInt32)'
  parent: Microsoft.Health.InvertedIndex.BitVector
  langs:
  - csharp
  - vb
  name: BitVector(UInt32)
  nameWithType: BitVector.BitVector(UInt32)
  fullName: Microsoft.Health.InvertedIndex.BitVector.BitVector(System.UInt32)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/BitVector.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: search/InvertedIndex/BitVector.cs
    startLine: 21
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public BitVector(uint bits)
    content.vb: Public Sub New(bits As UInteger)
    parameters:
    - id: bits
      type: System.UInt32
      description: ''
  overload: Microsoft.Health.InvertedIndex.BitVector.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.BitVector.Item(System.Int32)
  commentId: P:Microsoft.Health.InvertedIndex.BitVector.Item(System.Int32)
  id: Item(System.Int32)
  parent: Microsoft.Health.InvertedIndex.BitVector
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: BitVector.Item[Int32]
  fullName: Microsoft.Health.InvertedIndex.BitVector.Item[System.Int32]
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/BitVector.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: this[]
    path: search/InvertedIndex/BitVector.cs
    startLine: 31
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\nBits start from the right.\n"
  example: []
  syntax:
    content: public bool this[int index] { get; set; }
    content.vb: Public Property Item(index As Integer) As Boolean
    parameters:
    - id: index
      type: System.Int32
      description: ''
    return:
      type: System.Boolean
      description: ''
  overload: Microsoft.Health.InvertedIndex.BitVector.Item*
  nameWithType.vb: BitVector.Item(Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.BitVector.Item(System.Int32)
  name.vb: Item(Int32)
- uid: Microsoft.Health.InvertedIndex.BitVector.Bits
  commentId: P:Microsoft.Health.InvertedIndex.BitVector.Bits
  id: Bits
  parent: Microsoft.Health.InvertedIndex.BitVector
  langs:
  - csharp
  - vb
  name: Bits
  nameWithType: BitVector.Bits
  fullName: Microsoft.Health.InvertedIndex.BitVector.Bits
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/BitVector.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Bits
    path: search/InvertedIndex/BitVector.cs
    startLine: 55
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public uint Bits { get; set; }
    content.vb: Public Property Bits As UInteger
    parameters: []
    return:
      type: System.UInt32
  overload: Microsoft.Health.InvertedIndex.BitVector.Bits*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.BitVector.And(System.UInt32)
  commentId: M:Microsoft.Health.InvertedIndex.BitVector.And(System.UInt32)
  id: And(System.UInt32)
  parent: Microsoft.Health.InvertedIndex.BitVector
  langs:
  - csharp
  - vb
  name: And(UInt32)
  nameWithType: BitVector.And(UInt32)
  fullName: Microsoft.Health.InvertedIndex.BitVector.And(System.UInt32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/BitVector.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: And
    path: search/InvertedIndex/BitVector.cs
    startLine: 71
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void And(uint bits)
    content.vb: Public Sub And(bits As UInteger)
    parameters:
    - id: bits
      type: System.UInt32
      description: ''
  overload: Microsoft.Health.InvertedIndex.BitVector.And*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.BitVector.Or(System.UInt32)
  commentId: M:Microsoft.Health.InvertedIndex.BitVector.Or(System.UInt32)
  id: Or(System.UInt32)
  parent: Microsoft.Health.InvertedIndex.BitVector
  langs:
  - csharp
  - vb
  name: Or(UInt32)
  nameWithType: BitVector.Or(UInt32)
  fullName: Microsoft.Health.InvertedIndex.BitVector.Or(System.UInt32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/BitVector.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Or
    path: search/InvertedIndex/BitVector.cs
    startLine: 80
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Or(uint bits)
    content.vb: Public Sub Or(bits As UInteger)
    parameters:
    - id: bits
      type: System.UInt32
      description: ''
  overload: Microsoft.Health.InvertedIndex.BitVector.Or*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.BitVector.Xor(System.UInt32)
  commentId: M:Microsoft.Health.InvertedIndex.BitVector.Xor(System.UInt32)
  id: Xor(System.UInt32)
  parent: Microsoft.Health.InvertedIndex.BitVector
  langs:
  - csharp
  - vb
  name: Xor(UInt32)
  nameWithType: BitVector.Xor(UInt32)
  fullName: Microsoft.Health.InvertedIndex.BitVector.Xor(System.UInt32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/BitVector.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Xor
    path: search/InvertedIndex/BitVector.cs
    startLine: 89
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Xor(uint bits)
    content.vb: Public Sub Xor(bits As UInteger)
    parameters:
    - id: bits
      type: System.UInt32
      description: ''
  overload: Microsoft.Health.InvertedIndex.BitVector.Xor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.BitVector.Clear(System.UInt32)
  commentId: M:Microsoft.Health.InvertedIndex.BitVector.Clear(System.UInt32)
  id: Clear(System.UInt32)
  parent: Microsoft.Health.InvertedIndex.BitVector
  langs:
  - csharp
  - vb
  name: Clear(UInt32)
  nameWithType: BitVector.Clear(UInt32)
  fullName: Microsoft.Health.InvertedIndex.BitVector.Clear(System.UInt32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/BitVector.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Clear
    path: search/InvertedIndex/BitVector.cs
    startLine: 98
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Clear(uint mask)
    content.vb: Public Sub Clear(mask As UInteger)
    parameters:
    - id: mask
      type: System.UInt32
      description: ''
  overload: Microsoft.Health.InvertedIndex.BitVector.Clear*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.BitVector.Clear
  commentId: M:Microsoft.Health.InvertedIndex.BitVector.Clear
  id: Clear
  parent: Microsoft.Health.InvertedIndex.BitVector
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: BitVector.Clear()
  fullName: Microsoft.Health.InvertedIndex.BitVector.Clear()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/BitVector.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Clear
    path: search/InvertedIndex/BitVector.cs
    startLine: 106
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: Microsoft.Health.InvertedIndex.BitVector.Clear*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.BitVector.Set
  commentId: M:Microsoft.Health.InvertedIndex.BitVector.Set
  id: Set
  parent: Microsoft.Health.InvertedIndex.BitVector
  langs:
  - csharp
  - vb
  name: Set()
  nameWithType: BitVector.Set()
  fullName: Microsoft.Health.InvertedIndex.BitVector.Set()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/BitVector.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Set
    path: search/InvertedIndex/BitVector.cs
    startLine: 114
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Set()
    content.vb: Public Sub Set
  overload: Microsoft.Health.InvertedIndex.BitVector.Set*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.BitVector.ToString
  commentId: M:Microsoft.Health.InvertedIndex.BitVector.ToString
  id: ToString
  parent: Microsoft.Health.InvertedIndex.BitVector
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: BitVector.ToString()
  fullName: Microsoft.Health.InvertedIndex.BitVector.ToString()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/BitVector.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ToString
    path: search/InvertedIndex/BitVector.cs
    startLine: 123
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: ''
  overridden: System.ValueType.ToString
  overload: Microsoft.Health.InvertedIndex.BitVector.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.InvertedIndex.BitVector.ToString(System.String)
  commentId: M:Microsoft.Health.InvertedIndex.BitVector.ToString(System.String)
  id: ToString(System.String)
  parent: Microsoft.Health.InvertedIndex.BitVector
  langs:
  - csharp
  - vb
  name: ToString(String)
  nameWithType: BitVector.ToString(String)
  fullName: Microsoft.Health.InvertedIndex.BitVector.ToString(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/BitVector.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ToString
    path: search/InvertedIndex/BitVector.cs
    startLine: 133
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public string ToString(string format)
    content.vb: Public Function ToString(format As String) As String
    parameters:
    - id: format
      type: System.String
      description: ''
    return:
      type: System.String
      description: ''
  overload: Microsoft.Health.InvertedIndex.BitVector.ToString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.BitVector.op_BitwiseOr(Microsoft.Health.InvertedIndex.BitVector,Microsoft.Health.InvertedIndex.BitVector)
  commentId: M:Microsoft.Health.InvertedIndex.BitVector.op_BitwiseOr(Microsoft.Health.InvertedIndex.BitVector,Microsoft.Health.InvertedIndex.BitVector)
  id: op_BitwiseOr(Microsoft.Health.InvertedIndex.BitVector,Microsoft.Health.InvertedIndex.BitVector)
  parent: Microsoft.Health.InvertedIndex.BitVector
  langs:
  - csharp
  - vb
  name: BitwiseOr(BitVector, BitVector)
  nameWithType: BitVector.BitwiseOr(BitVector, BitVector)
  fullName: Microsoft.Health.InvertedIndex.BitVector.BitwiseOr(Microsoft.Health.InvertedIndex.BitVector, Microsoft.Health.InvertedIndex.BitVector)
  type: Operator
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/BitVector.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: op_BitwiseOr
    path: search/InvertedIndex/BitVector.cs
    startLine: 155
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  syntax:
    content: public static BitVector operator |(BitVector b1, BitVector b2)
    content.vb: Public Shared Operator Or(b1 As BitVector, b2 As BitVector) As BitVector
    parameters:
    - id: b1
      type: Microsoft.Health.InvertedIndex.BitVector
    - id: b2
      type: Microsoft.Health.InvertedIndex.BitVector
    return:
      type: Microsoft.Health.InvertedIndex.BitVector
  overload: Microsoft.Health.InvertedIndex.BitVector.op_BitwiseOr*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.InvertedIndex.BitVector.BitwiseOr(Microsoft.Health.InvertedIndex.BitVector,Microsoft.Health.InvertedIndex.BitVector)
  commentId: M:Microsoft.Health.InvertedIndex.BitVector.BitwiseOr(Microsoft.Health.InvertedIndex.BitVector,Microsoft.Health.InvertedIndex.BitVector)
  id: BitwiseOr(Microsoft.Health.InvertedIndex.BitVector,Microsoft.Health.InvertedIndex.BitVector)
  parent: Microsoft.Health.InvertedIndex.BitVector
  langs:
  - csharp
  - vb
  name: BitwiseOr(BitVector, BitVector)
  nameWithType: BitVector.BitwiseOr(BitVector, BitVector)
  fullName: Microsoft.Health.InvertedIndex.BitVector.BitwiseOr(Microsoft.Health.InvertedIndex.BitVector, Microsoft.Health.InvertedIndex.BitVector)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/BitVector.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: BitwiseOr
    path: search/InvertedIndex/BitVector.cs
    startLine: 160
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  syntax:
    content: public static BitVector BitwiseOr(BitVector b1, BitVector b2)
    content.vb: Public Shared Function BitwiseOr(b1 As BitVector, b2 As BitVector) As BitVector
    parameters:
    - id: b1
      type: Microsoft.Health.InvertedIndex.BitVector
    - id: b2
      type: Microsoft.Health.InvertedIndex.BitVector
    return:
      type: Microsoft.Health.InvertedIndex.BitVector
  overload: Microsoft.Health.InvertedIndex.BitVector.BitwiseOr*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.InvertedIndex.BitVector.op_BitwiseAnd(Microsoft.Health.InvertedIndex.BitVector,Microsoft.Health.InvertedIndex.BitVector)
  commentId: M:Microsoft.Health.InvertedIndex.BitVector.op_BitwiseAnd(Microsoft.Health.InvertedIndex.BitVector,Microsoft.Health.InvertedIndex.BitVector)
  id: op_BitwiseAnd(Microsoft.Health.InvertedIndex.BitVector,Microsoft.Health.InvertedIndex.BitVector)
  parent: Microsoft.Health.InvertedIndex.BitVector
  langs:
  - csharp
  - vb
  name: BitwiseAnd(BitVector, BitVector)
  nameWithType: BitVector.BitwiseAnd(BitVector, BitVector)
  fullName: Microsoft.Health.InvertedIndex.BitVector.BitwiseAnd(Microsoft.Health.InvertedIndex.BitVector, Microsoft.Health.InvertedIndex.BitVector)
  type: Operator
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/BitVector.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: op_BitwiseAnd
    path: search/InvertedIndex/BitVector.cs
    startLine: 165
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  syntax:
    content: public static BitVector operator &(BitVector b1, BitVector b2)
    content.vb: Public Shared Operator And(b1 As BitVector, b2 As BitVector) As BitVector
    parameters:
    - id: b1
      type: Microsoft.Health.InvertedIndex.BitVector
    - id: b2
      type: Microsoft.Health.InvertedIndex.BitVector
    return:
      type: Microsoft.Health.InvertedIndex.BitVector
  overload: Microsoft.Health.InvertedIndex.BitVector.op_BitwiseAnd*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.InvertedIndex.BitVector.BitwiseAnd(Microsoft.Health.InvertedIndex.BitVector,Microsoft.Health.InvertedIndex.BitVector)
  commentId: M:Microsoft.Health.InvertedIndex.BitVector.BitwiseAnd(Microsoft.Health.InvertedIndex.BitVector,Microsoft.Health.InvertedIndex.BitVector)
  id: BitwiseAnd(Microsoft.Health.InvertedIndex.BitVector,Microsoft.Health.InvertedIndex.BitVector)
  parent: Microsoft.Health.InvertedIndex.BitVector
  langs:
  - csharp
  - vb
  name: BitwiseAnd(BitVector, BitVector)
  nameWithType: BitVector.BitwiseAnd(BitVector, BitVector)
  fullName: Microsoft.Health.InvertedIndex.BitVector.BitwiseAnd(Microsoft.Health.InvertedIndex.BitVector, Microsoft.Health.InvertedIndex.BitVector)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/BitVector.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: BitwiseAnd
    path: search/InvertedIndex/BitVector.cs
    startLine: 170
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  syntax:
    content: public static BitVector BitwiseAnd(BitVector b1, BitVector b2)
    content.vb: Public Shared Function BitwiseAnd(b1 As BitVector, b2 As BitVector) As BitVector
    parameters:
    - id: b1
      type: Microsoft.Health.InvertedIndex.BitVector
    - id: b2
      type: Microsoft.Health.InvertedIndex.BitVector
    return:
      type: Microsoft.Health.InvertedIndex.BitVector
  overload: Microsoft.Health.InvertedIndex.BitVector.BitwiseAnd*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.InvertedIndex.BitVector.op_ExclusiveOr(Microsoft.Health.InvertedIndex.BitVector,Microsoft.Health.InvertedIndex.BitVector)
  commentId: M:Microsoft.Health.InvertedIndex.BitVector.op_ExclusiveOr(Microsoft.Health.InvertedIndex.BitVector,Microsoft.Health.InvertedIndex.BitVector)
  id: op_ExclusiveOr(Microsoft.Health.InvertedIndex.BitVector,Microsoft.Health.InvertedIndex.BitVector)
  parent: Microsoft.Health.InvertedIndex.BitVector
  langs:
  - csharp
  - vb
  name: ExclusiveOr(BitVector, BitVector)
  nameWithType: BitVector.ExclusiveOr(BitVector, BitVector)
  fullName: Microsoft.Health.InvertedIndex.BitVector.ExclusiveOr(Microsoft.Health.InvertedIndex.BitVector, Microsoft.Health.InvertedIndex.BitVector)
  type: Operator
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/BitVector.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: op_ExclusiveOr
    path: search/InvertedIndex/BitVector.cs
    startLine: 175
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  syntax:
    content: public static BitVector operator ^(BitVector b1, BitVector b2)
    content.vb: Public Shared Operator Xor(b1 As BitVector, b2 As BitVector) As BitVector
    parameters:
    - id: b1
      type: Microsoft.Health.InvertedIndex.BitVector
    - id: b2
      type: Microsoft.Health.InvertedIndex.BitVector
    return:
      type: Microsoft.Health.InvertedIndex.BitVector
  overload: Microsoft.Health.InvertedIndex.BitVector.op_ExclusiveOr*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.InvertedIndex.BitVector.BitwiseXor(Microsoft.Health.InvertedIndex.BitVector,Microsoft.Health.InvertedIndex.BitVector)
  commentId: M:Microsoft.Health.InvertedIndex.BitVector.BitwiseXor(Microsoft.Health.InvertedIndex.BitVector,Microsoft.Health.InvertedIndex.BitVector)
  id: BitwiseXor(Microsoft.Health.InvertedIndex.BitVector,Microsoft.Health.InvertedIndex.BitVector)
  parent: Microsoft.Health.InvertedIndex.BitVector
  langs:
  - csharp
  - vb
  name: BitwiseXor(BitVector, BitVector)
  nameWithType: BitVector.BitwiseXor(BitVector, BitVector)
  fullName: Microsoft.Health.InvertedIndex.BitVector.BitwiseXor(Microsoft.Health.InvertedIndex.BitVector, Microsoft.Health.InvertedIndex.BitVector)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/BitVector.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: BitwiseXor
    path: search/InvertedIndex/BitVector.cs
    startLine: 180
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  syntax:
    content: public static BitVector BitwiseXor(BitVector b1, BitVector b2)
    content.vb: Public Shared Function BitwiseXor(b1 As BitVector, b2 As BitVector) As BitVector
    parameters:
    - id: b1
      type: Microsoft.Health.InvertedIndex.BitVector
    - id: b2
      type: Microsoft.Health.InvertedIndex.BitVector
    return:
      type: Microsoft.Health.InvertedIndex.BitVector
  overload: Microsoft.Health.InvertedIndex.BitVector.BitwiseXor*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.InvertedIndex.BitVector.op_OnesComplement(Microsoft.Health.InvertedIndex.BitVector)
  commentId: M:Microsoft.Health.InvertedIndex.BitVector.op_OnesComplement(Microsoft.Health.InvertedIndex.BitVector)
  id: op_OnesComplement(Microsoft.Health.InvertedIndex.BitVector)
  parent: Microsoft.Health.InvertedIndex.BitVector
  langs:
  - csharp
  - vb
  name: OnesComplement(BitVector)
  nameWithType: BitVector.OnesComplement(BitVector)
  fullName: Microsoft.Health.InvertedIndex.BitVector.OnesComplement(Microsoft.Health.InvertedIndex.BitVector)
  type: Operator
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/BitVector.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: op_OnesComplement
    path: search/InvertedIndex/BitVector.cs
    startLine: 185
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  syntax:
    content: public static BitVector operator ~(BitVector b)
    content.vb: Public Shared Operator Not(b As BitVector) As BitVector
    parameters:
    - id: b
      type: Microsoft.Health.InvertedIndex.BitVector
    return:
      type: Microsoft.Health.InvertedIndex.BitVector
  overload: Microsoft.Health.InvertedIndex.BitVector.op_OnesComplement*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.InvertedIndex.BitVector.OnesComplement(Microsoft.Health.InvertedIndex.BitVector)
  commentId: M:Microsoft.Health.InvertedIndex.BitVector.OnesComplement(Microsoft.Health.InvertedIndex.BitVector)
  id: OnesComplement(Microsoft.Health.InvertedIndex.BitVector)
  parent: Microsoft.Health.InvertedIndex.BitVector
  langs:
  - csharp
  - vb
  name: OnesComplement(BitVector)
  nameWithType: BitVector.OnesComplement(BitVector)
  fullName: Microsoft.Health.InvertedIndex.BitVector.OnesComplement(Microsoft.Health.InvertedIndex.BitVector)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/BitVector.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: OnesComplement
    path: search/InvertedIndex/BitVector.cs
    startLine: 190
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  syntax:
    content: public static BitVector OnesComplement(BitVector b)
    content.vb: Public Shared Function OnesComplement(b As BitVector) As BitVector
    parameters:
    - id: b
      type: Microsoft.Health.InvertedIndex.BitVector
    return:
      type: Microsoft.Health.InvertedIndex.BitVector
  overload: Microsoft.Health.InvertedIndex.BitVector.OnesComplement*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Health.InvertedIndex
  commentId: N:Microsoft.Health.InvertedIndex
  isExternal: false
  name: Microsoft.Health.InvertedIndex
  nameWithType: Microsoft.Health.InvertedIndex
  fullName: Microsoft.Health.InvertedIndex
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.BitVector.Microsoft.Health.Utility.TypeHelper.DefaultAsNullable``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.DefaultAsNullable``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable``1(``0)
  name: DefaultAsNullable<BitVector>()
  nameWithType: TypeHelper.DefaultAsNullable<BitVector>()
  fullName: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable<Microsoft.Health.InvertedIndex.BitVector>()
  nameWithType.vb: TypeHelper.DefaultAsNullable(Of BitVector)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable(Of Microsoft.Health.InvertedIndex.BitVector)()
  name.vb: DefaultAsNullable(Of BitVector)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable``1
    name: DefaultAsNullable<BitVector>
    nameWithType: TypeHelper.DefaultAsNullable<BitVector>
    fullName: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable<Microsoft.Health.InvertedIndex.BitVector>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable``1
    name: DefaultAsNullable(Of BitVector)
    nameWithType: TypeHelper.DefaultAsNullable(Of BitVector)
    fullName: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable(Of Microsoft.Health.InvertedIndex.BitVector)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.DefaultAsNullable``1(``0)
  isExternal: false
  name: DefaultAsNullable<T>(T)
  nameWithType: TypeHelper.DefaultAsNullable<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable<T>(T)
  nameWithType.vb: TypeHelper.DefaultAsNullable(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable(Of T)(T)
  name.vb: DefaultAsNullable(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable``1(``0)
    name: DefaultAsNullable<T>
    nameWithType: TypeHelper.DefaultAsNullable<T>
    fullName: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable``1(``0)
    name: DefaultAsNullable(Of T)
    nameWithType: TypeHelper.DefaultAsNullable(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.InvertedIndex.BitVector.#ctor*
  commentId: Overload:Microsoft.Health.InvertedIndex.BitVector.#ctor
  isExternal: false
  name: BitVector
  nameWithType: BitVector.BitVector
  fullName: Microsoft.Health.InvertedIndex.BitVector.BitVector
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: Microsoft.Health.InvertedIndex.BitVector.Item*
  commentId: Overload:Microsoft.Health.InvertedIndex.BitVector.Item
  isExternal: false
  name: Item
  nameWithType: BitVector.Item
  fullName: Microsoft.Health.InvertedIndex.BitVector.Item
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Health.InvertedIndex.BitVector.Bits*
  commentId: Overload:Microsoft.Health.InvertedIndex.BitVector.Bits
  isExternal: false
  name: Bits
  nameWithType: BitVector.Bits
  fullName: Microsoft.Health.InvertedIndex.BitVector.Bits
- uid: Microsoft.Health.InvertedIndex.BitVector.And*
  commentId: Overload:Microsoft.Health.InvertedIndex.BitVector.And
  isExternal: false
  name: And
  nameWithType: BitVector.And
  fullName: Microsoft.Health.InvertedIndex.BitVector.And
- uid: Microsoft.Health.InvertedIndex.BitVector.Or*
  commentId: Overload:Microsoft.Health.InvertedIndex.BitVector.Or
  isExternal: false
  name: Or
  nameWithType: BitVector.Or
  fullName: Microsoft.Health.InvertedIndex.BitVector.Or
- uid: Microsoft.Health.InvertedIndex.BitVector.Xor*
  commentId: Overload:Microsoft.Health.InvertedIndex.BitVector.Xor
  isExternal: false
  name: Xor
  nameWithType: BitVector.Xor
  fullName: Microsoft.Health.InvertedIndex.BitVector.Xor
- uid: Microsoft.Health.InvertedIndex.BitVector.Clear*
  commentId: Overload:Microsoft.Health.InvertedIndex.BitVector.Clear
  isExternal: false
  name: Clear
  nameWithType: BitVector.Clear
  fullName: Microsoft.Health.InvertedIndex.BitVector.Clear
- uid: Microsoft.Health.InvertedIndex.BitVector.Set*
  commentId: Overload:Microsoft.Health.InvertedIndex.BitVector.Set
  isExternal: false
  name: Set
  nameWithType: BitVector.Set
  fullName: Microsoft.Health.InvertedIndex.BitVector.Set
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.BitVector.ToString*
  commentId: Overload:Microsoft.Health.InvertedIndex.BitVector.ToString
  isExternal: false
  name: ToString
  nameWithType: BitVector.ToString
  fullName: Microsoft.Health.InvertedIndex.BitVector.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.InvertedIndex.BitVector.op_BitwiseOr*
  commentId: Overload:Microsoft.Health.InvertedIndex.BitVector.op_BitwiseOr
  isExternal: false
  name: BitwiseOr
  nameWithType: BitVector.BitwiseOr
  fullName: Microsoft.Health.InvertedIndex.BitVector.BitwiseOr
- uid: Microsoft.Health.InvertedIndex.BitVector
  commentId: T:Microsoft.Health.InvertedIndex.BitVector
  parent: Microsoft.Health.InvertedIndex
  isExternal: false
  name: BitVector
  nameWithType: BitVector
  fullName: Microsoft.Health.InvertedIndex.BitVector
- uid: Microsoft.Health.InvertedIndex.BitVector.BitwiseOr*
  commentId: Overload:Microsoft.Health.InvertedIndex.BitVector.BitwiseOr
  isExternal: false
  name: BitwiseOr
  nameWithType: BitVector.BitwiseOr
  fullName: Microsoft.Health.InvertedIndex.BitVector.BitwiseOr
- uid: Microsoft.Health.InvertedIndex.BitVector.op_BitwiseAnd*
  commentId: Overload:Microsoft.Health.InvertedIndex.BitVector.op_BitwiseAnd
  isExternal: false
  name: BitwiseAnd
  nameWithType: BitVector.BitwiseAnd
  fullName: Microsoft.Health.InvertedIndex.BitVector.BitwiseAnd
- uid: Microsoft.Health.InvertedIndex.BitVector.BitwiseAnd*
  commentId: Overload:Microsoft.Health.InvertedIndex.BitVector.BitwiseAnd
  isExternal: false
  name: BitwiseAnd
  nameWithType: BitVector.BitwiseAnd
  fullName: Microsoft.Health.InvertedIndex.BitVector.BitwiseAnd
- uid: Microsoft.Health.InvertedIndex.BitVector.op_ExclusiveOr*
  commentId: Overload:Microsoft.Health.InvertedIndex.BitVector.op_ExclusiveOr
  isExternal: false
  name: ExclusiveOr
  nameWithType: BitVector.ExclusiveOr
  fullName: Microsoft.Health.InvertedIndex.BitVector.ExclusiveOr
- uid: Microsoft.Health.InvertedIndex.BitVector.BitwiseXor*
  commentId: Overload:Microsoft.Health.InvertedIndex.BitVector.BitwiseXor
  isExternal: false
  name: BitwiseXor
  nameWithType: BitVector.BitwiseXor
  fullName: Microsoft.Health.InvertedIndex.BitVector.BitwiseXor
- uid: Microsoft.Health.InvertedIndex.BitVector.op_OnesComplement*
  commentId: Overload:Microsoft.Health.InvertedIndex.BitVector.op_OnesComplement
  isExternal: false
  name: OnesComplement
  nameWithType: BitVector.OnesComplement
  fullName: Microsoft.Health.InvertedIndex.BitVector.OnesComplement
- uid: Microsoft.Health.InvertedIndex.BitVector.OnesComplement*
  commentId: Overload:Microsoft.Health.InvertedIndex.BitVector.OnesComplement
  isExternal: false
  name: OnesComplement
  nameWithType: BitVector.OnesComplement
  fullName: Microsoft.Health.InvertedIndex.BitVector.OnesComplement
