### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Utility.Diagnostics.TraceLogEntry
  commentId: T:Microsoft.Health.Utility.Diagnostics.TraceLogEntry
  id: TraceLogEntry
  parent: Microsoft.Health.Utility.Diagnostics
  children:
  - Microsoft.Health.Utility.Diagnostics.TraceLogEntry.#ctor(System.String,System.Int32,System.Int32,System.DateTime,System.UInt16,System.String,System.Guid,System.Guid,System.Guid)
  - Microsoft.Health.Utility.Diagnostics.TraceLogEntry.#ctor(System.String,System.Int32,System.Int32,System.DateTime,System.UInt16,System.String,System.Guid,System.Guid,System.Guid,System.Guid,System.Guid)
  - Microsoft.Health.Utility.Diagnostics.TraceLogEntry.CreateDataTable(System.String)
  - Microsoft.Health.Utility.Diagnostics.TraceLogEntry.Read(System.Xml.XmlReader)
  - Microsoft.Health.Utility.Diagnostics.TraceLogEntry.Write(System.Data.DataRow)
  - Microsoft.Health.Utility.Diagnostics.TraceLogEntry.Write(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: TraceLogEntry
  nameWithType: TraceLogEntry
  fullName: Microsoft.Health.Utility.Diagnostics.TraceLogEntry
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/TraceLogEntry.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: TraceLogEntry
    path: Diagnostics/Trace/TraceLogEntry.cs
    startLine: 20
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nTrace logging class.\n"
  example: []
  syntax:
    content: 'public sealed class TraceLogEntry : ILogEntry'
    content.vb: >-
      Public NotInheritable Class TraceLogEntry
          Implements ILogEntry
  inheritance:
  - System.Object
  implements:
  - Microsoft.Health.Utility.Diagnostics.ILogEntry
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.Utility.Diagnostics.TraceLogEntry.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Health.Utility.Diagnostics.TraceLogEntry.#ctor(System.String,System.Int32,System.Int32,System.DateTime,System.UInt16,System.String,System.Guid,System.Guid,System.Guid,System.Guid,System.Guid)
  commentId: M:Microsoft.Health.Utility.Diagnostics.TraceLogEntry.#ctor(System.String,System.Int32,System.Int32,System.DateTime,System.UInt16,System.String,System.Guid,System.Guid,System.Guid,System.Guid,System.Guid)
  id: '#ctor(System.String,System.Int32,System.Int32,System.DateTime,System.UInt16,System.String,System.Guid,System.Guid,System.Guid,System.Guid,System.Guid)'
  parent: Microsoft.Health.Utility.Diagnostics.TraceLogEntry
  langs:
  - csharp
  - vb
  name: TraceLogEntry(String, Int32, Int32, DateTime, UInt16, String, Guid, Guid, Guid, Guid, Guid)
  nameWithType: TraceLogEntry.TraceLogEntry(String, Int32, Int32, DateTime, UInt16, String, Guid, Guid, Guid, Guid, Guid)
  fullName: Microsoft.Health.Utility.Diagnostics.TraceLogEntry.TraceLogEntry(System.String, System.Int32, System.Int32, System.DateTime, System.UInt16, System.String, System.Guid, System.Guid, System.Guid, System.Guid, System.Guid)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/TraceLogEntry.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: Diagnostics/Trace/TraceLogEntry.cs
    startLine: 51
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nConstructor.\n"
  example: []
  syntax:
    content: public TraceLogEntry(string applicationName, int eventCategory, int eventId, DateTime eventTime, ushort eventLevel, string eventMessage, Guid applicationId, Guid personId, Guid recordId, Guid sessionId, Guid requestId)
    content.vb: Public Sub New(applicationName As String, eventCategory As Integer, eventId As Integer, eventTime As Date, eventLevel As UShort, eventMessage As String, applicationId As Guid, personId As Guid, recordId As Guid, sessionId As Guid, requestId As Guid)
    parameters:
    - id: applicationName
      type: System.String
    - id: eventCategory
      type: System.Int32
    - id: eventId
      type: System.Int32
    - id: eventTime
      type: System.DateTime
    - id: eventLevel
      type: System.UInt16
    - id: eventMessage
      type: System.String
    - id: applicationId
      type: System.Guid
    - id: personId
      type: System.Guid
    - id: recordId
      type: System.Guid
    - id: sessionId
      type: System.Guid
    - id: requestId
      type: System.Guid
  overload: Microsoft.Health.Utility.Diagnostics.TraceLogEntry.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Diagnostics.TraceLogEntry.#ctor(System.String,System.Int32,System.Int32,System.DateTime,System.UInt16,System.String,System.Guid,System.Guid,System.Guid)
  commentId: M:Microsoft.Health.Utility.Diagnostics.TraceLogEntry.#ctor(System.String,System.Int32,System.Int32,System.DateTime,System.UInt16,System.String,System.Guid,System.Guid,System.Guid)
  id: '#ctor(System.String,System.Int32,System.Int32,System.DateTime,System.UInt16,System.String,System.Guid,System.Guid,System.Guid)'
  parent: Microsoft.Health.Utility.Diagnostics.TraceLogEntry
  langs:
  - csharp
  - vb
  name: TraceLogEntry(String, Int32, Int32, DateTime, UInt16, String, Guid, Guid, Guid)
  nameWithType: TraceLogEntry.TraceLogEntry(String, Int32, Int32, DateTime, UInt16, String, Guid, Guid, Guid)
  fullName: Microsoft.Health.Utility.Diagnostics.TraceLogEntry.TraceLogEntry(System.String, System.Int32, System.Int32, System.DateTime, System.UInt16, System.String, System.Guid, System.Guid, System.Guid)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/TraceLogEntry.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: Diagnostics/Trace/TraceLogEntry.cs
    startLine: 82
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nConstructor.\n"
  example: []
  syntax:
    content: public TraceLogEntry(string applicationName, int eventCategory, int eventId, DateTime eventTime, ushort eventLevel, string eventMessage, Guid applicationId, Guid personId, Guid recordId)
    content.vb: Public Sub New(applicationName As String, eventCategory As Integer, eventId As Integer, eventTime As Date, eventLevel As UShort, eventMessage As String, applicationId As Guid, personId As Guid, recordId As Guid)
    parameters:
    - id: applicationName
      type: System.String
    - id: eventCategory
      type: System.Int32
    - id: eventId
      type: System.Int32
    - id: eventTime
      type: System.DateTime
    - id: eventLevel
      type: System.UInt16
    - id: eventMessage
      type: System.String
    - id: applicationId
      type: System.Guid
    - id: personId
      type: System.Guid
    - id: recordId
      type: System.Guid
  overload: Microsoft.Health.Utility.Diagnostics.TraceLogEntry.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Diagnostics.TraceLogEntry.Read(System.Xml.XmlReader)
  commentId: M:Microsoft.Health.Utility.Diagnostics.TraceLogEntry.Read(System.Xml.XmlReader)
  id: Read(System.Xml.XmlReader)
  parent: Microsoft.Health.Utility.Diagnostics.TraceLogEntry
  langs:
  - csharp
  - vb
  name: Read(XmlReader)
  nameWithType: TraceLogEntry.Read(XmlReader)
  fullName: Microsoft.Health.Utility.Diagnostics.TraceLogEntry.Read(System.Xml.XmlReader)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/TraceLogEntry.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Read
    path: Diagnostics/Trace/TraceLogEntry.cs
    startLine: 208
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nDeserialize this entry using the provided XmlReader.\n"
  example: []
  syntax:
    content: public void Read(XmlReader reader)
    content.vb: Public Sub Read(reader As XmlReader)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
  overload: Microsoft.Health.Utility.Diagnostics.TraceLogEntry.Read*
  implements:
  - Microsoft.Health.Utility.Diagnostics.ILogEntry.Read(System.Xml.XmlReader)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Diagnostics.TraceLogEntry.Write(System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.Utility.Diagnostics.TraceLogEntry.Write(System.Xml.XmlWriter)
  id: Write(System.Xml.XmlWriter)
  parent: Microsoft.Health.Utility.Diagnostics.TraceLogEntry
  langs:
  - csharp
  - vb
  name: Write(XmlWriter)
  nameWithType: TraceLogEntry.Write(XmlWriter)
  fullName: Microsoft.Health.Utility.Diagnostics.TraceLogEntry.Write(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/TraceLogEntry.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Write
    path: Diagnostics/Trace/TraceLogEntry.cs
    startLine: 232
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nSerialize this entry using the provided XmlWriter.\n"
  example: []
  syntax:
    content: public void Write(XmlWriter writer)
    content.vb: Public Sub Write(writer As XmlWriter)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
  overload: Microsoft.Health.Utility.Diagnostics.TraceLogEntry.Write*
  implements:
  - Microsoft.Health.Utility.Diagnostics.ILogEntry.Write(System.Xml.XmlWriter)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Diagnostics.TraceLogEntry.Write(System.Data.DataRow)
  commentId: M:Microsoft.Health.Utility.Diagnostics.TraceLogEntry.Write(System.Data.DataRow)
  id: Write(System.Data.DataRow)
  parent: Microsoft.Health.Utility.Diagnostics.TraceLogEntry
  langs:
  - csharp
  - vb
  name: Write(DataRow)
  nameWithType: TraceLogEntry.Write(DataRow)
  fullName: Microsoft.Health.Utility.Diagnostics.TraceLogEntry.Write(System.Data.DataRow)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/TraceLogEntry.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Write
    path: Diagnostics/Trace/TraceLogEntry.cs
    startLine: 289
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nSerialize using the provided DataRow.\n"
  example: []
  syntax:
    content: public void Write(DataRow row)
    content.vb: Public Sub Write(row As DataRow)
    parameters:
    - id: row
      type: System.Data.DataRow
  overload: Microsoft.Health.Utility.Diagnostics.TraceLogEntry.Write*
  implements:
  - Microsoft.Health.Utility.Diagnostics.ILogEntry.Write(System.Data.DataRow)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Diagnostics.TraceLogEntry.CreateDataTable(System.String)
  commentId: M:Microsoft.Health.Utility.Diagnostics.TraceLogEntry.CreateDataTable(System.String)
  id: CreateDataTable(System.String)
  parent: Microsoft.Health.Utility.Diagnostics.TraceLogEntry
  langs:
  - csharp
  - vb
  name: CreateDataTable(String)
  nameWithType: TraceLogEntry.CreateDataTable(String)
  fullName: Microsoft.Health.Utility.Diagnostics.TraceLogEntry.CreateDataTable(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/TraceLogEntry.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CreateDataTable
    path: Diagnostics/Trace/TraceLogEntry.cs
    startLine: 320
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nCreate and instantiate a DataTable that will be used to\nwrite loggable items to the log database.\n"
  example: []
  syntax:
    content: public DataTable CreateDataTable(string tableName)
    content.vb: Public Function CreateDataTable(tableName As String) As DataTable
    parameters:
    - id: tableName
      type: System.String
    return:
      type: System.Data.DataTable
  overload: Microsoft.Health.Utility.Diagnostics.TraceLogEntry.CreateDataTable*
  implements:
  - Microsoft.Health.Utility.Diagnostics.ILogEntry.CreateDataTable(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Health.Utility.Diagnostics
  commentId: N:Microsoft.Health.Utility.Diagnostics
  isExternal: false
  name: Microsoft.Health.Utility.Diagnostics
  nameWithType: Microsoft.Health.Utility.Diagnostics
  fullName: Microsoft.Health.Utility.Diagnostics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.Utility.Diagnostics.ILogEntry
  commentId: T:Microsoft.Health.Utility.Diagnostics.ILogEntry
  parent: Microsoft.Health.Utility.Diagnostics
  isExternal: false
  name: ILogEntry
  nameWithType: ILogEntry
  fullName: Microsoft.Health.Utility.Diagnostics.ILogEntry
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.TraceLogEntry.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<TraceLogEntry>()
  nameWithType: TypeHelper.ValueOrDbNull<TraceLogEntry>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Utility.Diagnostics.TraceLogEntry>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of TraceLogEntry)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Utility.Diagnostics.TraceLogEntry)()
  name.vb: ValueOrDbNull(Of TraceLogEntry)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<TraceLogEntry>
    nameWithType: TypeHelper.ValueOrDbNull<TraceLogEntry>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Utility.Diagnostics.TraceLogEntry>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of TraceLogEntry)
    nameWithType: TypeHelper.ValueOrDbNull(Of TraceLogEntry)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Utility.Diagnostics.TraceLogEntry)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.Utility.Diagnostics.TraceLogEntry.#ctor*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.TraceLogEntry.#ctor
  isExternal: false
  name: TraceLogEntry
  nameWithType: TraceLogEntry.TraceLogEntry
  fullName: Microsoft.Health.Utility.Diagnostics.TraceLogEntry.TraceLogEntry
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Microsoft.Health.Utility.Diagnostics.TraceLogEntry.Read*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.TraceLogEntry.Read
  isExternal: false
  name: Read
  nameWithType: TraceLogEntry.Read
  fullName: Microsoft.Health.Utility.Diagnostics.TraceLogEntry.Read
- uid: Microsoft.Health.Utility.Diagnostics.ILogEntry.Read(System.Xml.XmlReader)
  commentId: M:Microsoft.Health.Utility.Diagnostics.ILogEntry.Read(System.Xml.XmlReader)
  parent: Microsoft.Health.Utility.Diagnostics.ILogEntry
  isExternal: true
  name: Read(XmlReader)
  nameWithType: ILogEntry.Read(XmlReader)
  fullName: Microsoft.Health.Utility.Diagnostics.ILogEntry.Read(System.Xml.XmlReader)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.ILogEntry.Read(System.Xml.XmlReader)
    name: Read
    nameWithType: ILogEntry.Read
    fullName: Microsoft.Health.Utility.Diagnostics.ILogEntry.Read
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.ILogEntry.Read(System.Xml.XmlReader)
    name: Read
    nameWithType: ILogEntry.Read
    fullName: Microsoft.Health.Utility.Diagnostics.ILogEntry.Read
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlReader
  commentId: T:System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: Microsoft.Health.Utility.Diagnostics.TraceLogEntry.Write*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.TraceLogEntry.Write
  isExternal: false
  name: Write
  nameWithType: TraceLogEntry.Write
  fullName: Microsoft.Health.Utility.Diagnostics.TraceLogEntry.Write
- uid: Microsoft.Health.Utility.Diagnostics.ILogEntry.Write(System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.Utility.Diagnostics.ILogEntry.Write(System.Xml.XmlWriter)
  parent: Microsoft.Health.Utility.Diagnostics.ILogEntry
  isExternal: true
  name: Write(XmlWriter)
  nameWithType: ILogEntry.Write(XmlWriter)
  fullName: Microsoft.Health.Utility.Diagnostics.ILogEntry.Write(System.Xml.XmlWriter)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.ILogEntry.Write(System.Xml.XmlWriter)
    name: Write
    nameWithType: ILogEntry.Write
    fullName: Microsoft.Health.Utility.Diagnostics.ILogEntry.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.ILogEntry.Write(System.Xml.XmlWriter)
    name: Write
    nameWithType: ILogEntry.Write
    fullName: Microsoft.Health.Utility.Diagnostics.ILogEntry.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: Microsoft.Health.Utility.Diagnostics.ILogEntry.Write(System.Data.DataRow)
  commentId: M:Microsoft.Health.Utility.Diagnostics.ILogEntry.Write(System.Data.DataRow)
  parent: Microsoft.Health.Utility.Diagnostics.ILogEntry
  isExternal: true
  name: Write(DataRow)
  nameWithType: ILogEntry.Write(DataRow)
  fullName: Microsoft.Health.Utility.Diagnostics.ILogEntry.Write(System.Data.DataRow)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.ILogEntry.Write(System.Data.DataRow)
    name: Write
    nameWithType: ILogEntry.Write
    fullName: Microsoft.Health.Utility.Diagnostics.ILogEntry.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.DataRow
    name: DataRow
    nameWithType: DataRow
    fullName: System.Data.DataRow
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.ILogEntry.Write(System.Data.DataRow)
    name: Write
    nameWithType: ILogEntry.Write
    fullName: Microsoft.Health.Utility.Diagnostics.ILogEntry.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.DataRow
    name: DataRow
    nameWithType: DataRow
    fullName: System.Data.DataRow
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.DataRow
  commentId: T:System.Data.DataRow
  parent: System.Data
  isExternal: true
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Data
  commentId: N:System.Data
  isExternal: false
  name: System.Data
  nameWithType: System.Data
  fullName: System.Data
- uid: Microsoft.Health.Utility.Diagnostics.TraceLogEntry.CreateDataTable*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.TraceLogEntry.CreateDataTable
  isExternal: false
  name: CreateDataTable
  nameWithType: TraceLogEntry.CreateDataTable
  fullName: Microsoft.Health.Utility.Diagnostics.TraceLogEntry.CreateDataTable
- uid: Microsoft.Health.Utility.Diagnostics.ILogEntry.CreateDataTable(System.String)
  commentId: M:Microsoft.Health.Utility.Diagnostics.ILogEntry.CreateDataTable(System.String)
  parent: Microsoft.Health.Utility.Diagnostics.ILogEntry
  isExternal: true
  name: CreateDataTable(String)
  nameWithType: ILogEntry.CreateDataTable(String)
  fullName: Microsoft.Health.Utility.Diagnostics.ILogEntry.CreateDataTable(System.String)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.ILogEntry.CreateDataTable(System.String)
    name: CreateDataTable
    nameWithType: ILogEntry.CreateDataTable
    fullName: Microsoft.Health.Utility.Diagnostics.ILogEntry.CreateDataTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.ILogEntry.CreateDataTable(System.String)
    name: CreateDataTable
    nameWithType: ILogEntry.CreateDataTable
    fullName: Microsoft.Health.Utility.Diagnostics.ILogEntry.CreateDataTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.DataTable
  commentId: T:System.Data.DataTable
  parent: System.Data
  isExternal: true
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
