### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.InvertedIndex.Posting`1
  commentId: T:Microsoft.Health.InvertedIndex.Posting`1
  id: Posting`1
  parent: Microsoft.Health.InvertedIndex
  children:
  - Microsoft.Health.InvertedIndex.Posting`1.#ctor(System.UInt32,`0)
  - Microsoft.Health.InvertedIndex.Posting`1.CompareTo(Microsoft.Health.InvertedIndex.Posting{`0})
  - Microsoft.Health.InvertedIndex.Posting`1.Max
  - Microsoft.Health.InvertedIndex.Posting`1.Null
  - Microsoft.Health.InvertedIndex.Posting`1.RecordID
  - Microsoft.Health.InvertedIndex.Posting`1.Value
  langs:
  - csharp
  - vb
  name: Posting<T>
  nameWithType: Posting<T>
  fullName: Microsoft.Health.InvertedIndex.Posting<T>
  type: Struct
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/Posting.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Posting
    path: search/InvertedIndex/Posting.cs
    startLine: 15
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: 'public struct Posting<T> : IComparable<Posting<T>>'
    content.vb: >-
      Public Structure Posting(Of T)
          Implements IComparable(Of Posting(Of T))
    typeParameters:
    - id: T
      description: ''
  implements:
  - System.IComparable{Microsoft.Health.InvertedIndex.Posting`1}
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.InvertedIndex.Posting`1.Microsoft.Health.Utility.TypeHelper.DefaultAsNullable``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  nameWithType.vb: Posting(Of T)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
  fullName.vb: Microsoft.Health.InvertedIndex.Posting(Of T)
  name.vb: Posting(Of T)
- uid: Microsoft.Health.InvertedIndex.Posting`1.Null
  commentId: F:Microsoft.Health.InvertedIndex.Posting`1.Null
  id: "Null"
  parent: Microsoft.Health.InvertedIndex.Posting`1
  langs:
  - csharp
  - vb
  name: "Null"
  nameWithType: Posting<T>.Null
  fullName: Microsoft.Health.InvertedIndex.Posting<T>.Null
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/Posting.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: "Null"
    path: search/InvertedIndex/Posting.cs
    startLine: 20
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public static readonly Posting<T> Null
    content.vb: Public Shared ReadOnly Null As Posting(Of T)
    return:
      type: Microsoft.Health.InvertedIndex.Posting`1
  nameWithType.vb: Posting(Of T).Null
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
  fullName.vb: Microsoft.Health.InvertedIndex.Posting(Of T).Null
- uid: Microsoft.Health.InvertedIndex.Posting`1.Max
  commentId: F:Microsoft.Health.InvertedIndex.Posting`1.Max
  id: Max
  parent: Microsoft.Health.InvertedIndex.Posting`1
  langs:
  - csharp
  - vb
  name: Max
  nameWithType: Posting<T>.Max
  fullName: Microsoft.Health.InvertedIndex.Posting<T>.Max
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/Posting.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Max
    path: search/InvertedIndex/Posting.cs
    startLine: 26
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public static readonly Posting<T> Max
    content.vb: Public Shared ReadOnly Max As Posting(Of T)
    return:
      type: Microsoft.Health.InvertedIndex.Posting`1
  nameWithType.vb: Posting(Of T).Max
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
  fullName.vb: Microsoft.Health.InvertedIndex.Posting(Of T).Max
- uid: Microsoft.Health.InvertedIndex.Posting`1.#ctor(System.UInt32,`0)
  commentId: M:Microsoft.Health.InvertedIndex.Posting`1.#ctor(System.UInt32,`0)
  id: '#ctor(System.UInt32,`0)'
  parent: Microsoft.Health.InvertedIndex.Posting`1
  langs:
  - csharp
  - vb
  name: Posting(UInt32, T)
  nameWithType: Posting<T>.Posting(UInt32, T)
  fullName: Microsoft.Health.InvertedIndex.Posting<T>.Posting(System.UInt32, T)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/Posting.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: search/InvertedIndex/Posting.cs
    startLine: 37
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public Posting(uint recordID, T value)
    content.vb: Public Sub New(recordID As UInteger, value As T)
    parameters:
    - id: recordID
      type: System.UInt32
      description: ''
    - id: value
      type: '{T}'
      description: ''
  overload: Microsoft.Health.InvertedIndex.Posting`1.#ctor*
  nameWithType.vb: Posting(Of T).Posting(UInt32, T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.Posting(Of T).Posting(System.UInt32, T)
- uid: Microsoft.Health.InvertedIndex.Posting`1.RecordID
  commentId: P:Microsoft.Health.InvertedIndex.Posting`1.RecordID
  id: RecordID
  parent: Microsoft.Health.InvertedIndex.Posting`1
  langs:
  - csharp
  - vb
  name: RecordID
  nameWithType: Posting<T>.RecordID
  fullName: Microsoft.Health.InvertedIndex.Posting<T>.RecordID
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/Posting.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: RecordID
    path: search/InvertedIndex/Posting.cs
    startLine: 46
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public uint RecordID { get; }
    content.vb: Public ReadOnly Property RecordID As UInteger
    parameters: []
    return:
      type: System.UInt32
  overload: Microsoft.Health.InvertedIndex.Posting`1.RecordID*
  nameWithType.vb: Posting(Of T).RecordID
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.Health.InvertedIndex.Posting(Of T).RecordID
- uid: Microsoft.Health.InvertedIndex.Posting`1.Value
  commentId: P:Microsoft.Health.InvertedIndex.Posting`1.Value
  id: Value
  parent: Microsoft.Health.InvertedIndex.Posting`1
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: Posting<T>.Value
  fullName: Microsoft.Health.InvertedIndex.Posting<T>.Value
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/Posting.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Value
    path: search/InvertedIndex/Posting.cs
    startLine: 57
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public T Value { get; }
    content.vb: Public ReadOnly Property Value As T
    parameters: []
    return:
      type: '{T}'
  overload: Microsoft.Health.InvertedIndex.Posting`1.Value*
  nameWithType.vb: Posting(Of T).Value
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.Health.InvertedIndex.Posting(Of T).Value
- uid: Microsoft.Health.InvertedIndex.Posting`1.CompareTo(Microsoft.Health.InvertedIndex.Posting{`0})
  commentId: M:Microsoft.Health.InvertedIndex.Posting`1.CompareTo(Microsoft.Health.InvertedIndex.Posting{`0})
  id: CompareTo(Microsoft.Health.InvertedIndex.Posting{`0})
  parent: Microsoft.Health.InvertedIndex.Posting`1
  langs:
  - csharp
  - vb
  name: CompareTo(Posting<T>)
  nameWithType: Posting<T>.CompareTo(Posting<T>)
  fullName: Microsoft.Health.InvertedIndex.Posting<T>.CompareTo(Microsoft.Health.InvertedIndex.Posting<T>)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/Posting.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CompareTo
    path: search/InvertedIndex/Posting.cs
    startLine: 71
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public int CompareTo(Posting<T> other)
    content.vb: Public Function CompareTo(other As Posting(Of T)) As Integer
    parameters:
    - id: other
      type: Microsoft.Health.InvertedIndex.Posting`1
      description: ''
    return:
      type: System.Int32
      description: ''
  overload: Microsoft.Health.InvertedIndex.Posting`1.CompareTo*
  implements:
  - System.IComparable{Microsoft.Health.InvertedIndex.Posting`1}.CompareTo(Microsoft.Health.InvertedIndex.Posting{{T}})
  nameWithType.vb: Posting(Of T).CompareTo(Posting(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.Posting(Of T).CompareTo(Microsoft.Health.InvertedIndex.Posting(Of T))
  name.vb: CompareTo(Posting(Of T))
references:
- uid: Microsoft.Health.InvertedIndex
  commentId: N:Microsoft.Health.InvertedIndex
  isExternal: false
  name: Microsoft.Health.InvertedIndex
  nameWithType: Microsoft.Health.InvertedIndex
  fullName: Microsoft.Health.InvertedIndex
- uid: System.IComparable{Microsoft.Health.InvertedIndex.Posting`1}
  commentId: T:System.IComparable{Microsoft.Health.InvertedIndex.Posting`1}
  parent: System
  definition: System.IComparable`1
  name: IComparable<Posting<T>>
  nameWithType: IComparable<Posting<T>>
  fullName: System.IComparable<Microsoft.Health.InvertedIndex.Posting<T>>
  nameWithType.vb: IComparable(Of Posting(Of T))
  fullName.vb: System.IComparable(Of Microsoft.Health.InvertedIndex.Posting(Of T))
  name.vb: IComparable(Of Posting(Of T))
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.Posting`1.Microsoft.Health.Utility.TypeHelper.DefaultAsNullable``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.DefaultAsNullable``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable``1(``0)
  name: DefaultAsNullable<Posting<T>>()
  nameWithType: TypeHelper.DefaultAsNullable<Posting<T>>()
  fullName: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable<Microsoft.Health.InvertedIndex.Posting<T>>()
  nameWithType.vb: TypeHelper.DefaultAsNullable(Of Posting(Of T))()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable(Of Microsoft.Health.InvertedIndex.Posting(Of T))()
  name.vb: DefaultAsNullable(Of Posting(Of T))()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable``1
    name: DefaultAsNullable<Posting<T>>
    nameWithType: TypeHelper.DefaultAsNullable<Posting<T>>
    fullName: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable<Microsoft.Health.InvertedIndex.Posting<T>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable``1
    name: DefaultAsNullable(Of Posting(Of T))
    nameWithType: TypeHelper.DefaultAsNullable(Of Posting(Of T))
    fullName: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable(Of Microsoft.Health.InvertedIndex.Posting(Of T))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullName.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.DefaultAsNullable``1(``0)
  isExternal: false
  name: DefaultAsNullable<T>(T)
  nameWithType: TypeHelper.DefaultAsNullable<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable<T>(T)
  nameWithType.vb: TypeHelper.DefaultAsNullable(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable(Of T)(T)
  name.vb: DefaultAsNullable(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable``1(``0)
    name: DefaultAsNullable<T>
    nameWithType: TypeHelper.DefaultAsNullable<T>
    fullName: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable``1(``0)
    name: DefaultAsNullable(Of T)
    nameWithType: TypeHelper.DefaultAsNullable(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.DefaultAsNullable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.InvertedIndex.Posting`1
  commentId: T:Microsoft.Health.InvertedIndex.Posting`1
  parent: Microsoft.Health.InvertedIndex
  isExternal: false
  name: Posting<T>
  nameWithType: Posting<T>
  fullName: Microsoft.Health.InvertedIndex.Posting<T>
  nameWithType.vb: Posting(Of T)
  fullName.vb: Microsoft.Health.InvertedIndex.Posting(Of T)
  name.vb: Posting(Of T)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.Posting`1.#ctor*
  commentId: Overload:Microsoft.Health.InvertedIndex.Posting`1.#ctor
  isExternal: false
  name: Posting
  nameWithType: Posting<T>.Posting
  fullName: Microsoft.Health.InvertedIndex.Posting<T>.Posting
  nameWithType.vb: Posting(Of T).Posting
  fullName.vb: Microsoft.Health.InvertedIndex.Posting(Of T).Posting
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: Microsoft.Health.InvertedIndex.Posting`1.RecordID*
  commentId: Overload:Microsoft.Health.InvertedIndex.Posting`1.RecordID
  isExternal: false
  name: RecordID
  nameWithType: Posting<T>.RecordID
  fullName: Microsoft.Health.InvertedIndex.Posting<T>.RecordID
  nameWithType.vb: Posting(Of T).RecordID
  fullName.vb: Microsoft.Health.InvertedIndex.Posting(Of T).RecordID
- uid: Microsoft.Health.InvertedIndex.Posting`1.Value*
  commentId: Overload:Microsoft.Health.InvertedIndex.Posting`1.Value
  isExternal: false
  name: Value
  nameWithType: Posting<T>.Value
  fullName: Microsoft.Health.InvertedIndex.Posting<T>.Value
  nameWithType.vb: Posting(Of T).Value
  fullName.vb: Microsoft.Health.InvertedIndex.Posting(Of T).Value
- uid: Microsoft.Health.InvertedIndex.Posting`1.CompareTo*
  commentId: Overload:Microsoft.Health.InvertedIndex.Posting`1.CompareTo
  isExternal: false
  name: CompareTo
  nameWithType: Posting<T>.CompareTo
  fullName: Microsoft.Health.InvertedIndex.Posting<T>.CompareTo
  nameWithType.vb: Posting(Of T).CompareTo
  fullName.vb: Microsoft.Health.InvertedIndex.Posting(Of T).CompareTo
- uid: System.IComparable{Microsoft.Health.InvertedIndex.Posting`1}.CompareTo(Microsoft.Health.InvertedIndex.Posting{{T}})
  commentId: M:System.IComparable{Microsoft.Health.InvertedIndex.Posting`1}.CompareTo(Microsoft.Health.InvertedIndex.Posting{`0})
  parent: System.IComparable{Microsoft.Health.InvertedIndex.Posting`1}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(Posting<T>)
  nameWithType: IComparable<Posting<T>>.CompareTo(Posting<T>)
  fullName: System.IComparable<Microsoft.Health.InvertedIndex.Posting<T>>.CompareTo(Microsoft.Health.InvertedIndex.Posting<T>)
  nameWithType.vb: IComparable(Of Posting(Of T)).CompareTo(Posting(Of T))
  fullName.vb: System.IComparable(Of Microsoft.Health.InvertedIndex.Posting(Of T)).CompareTo(Microsoft.Health.InvertedIndex.Posting(Of T))
  name.vb: CompareTo(Posting(Of T))
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<Posting<T>>.CompareTo
    fullName: System.IComparable<Microsoft.Health.InvertedIndex.Posting<T>>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of Posting(Of T)).CompareTo
    fullName: System.IComparable(Of Microsoft.Health.InvertedIndex.Posting(Of T)).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IComparable`1.CompareTo(`0)
  commentId: M:System.IComparable`1.CompareTo(`0)
  isExternal: true
  name: CompareTo(T)
  nameWithType: IComparable<T>.CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  fullName.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<T>.CompareTo
    fullName: System.IComparable<T>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of T).CompareTo
    fullName: System.IComparable(Of T).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
