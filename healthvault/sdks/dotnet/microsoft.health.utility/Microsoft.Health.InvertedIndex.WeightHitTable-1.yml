### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.InvertedIndex.WeightHitTable`1
  commentId: T:Microsoft.Health.InvertedIndex.WeightHitTable`1
  id: WeightHitTable`1
  parent: Microsoft.Health.InvertedIndex
  children:
  - Microsoft.Health.InvertedIndex.WeightHitTable`1.#ctor
  - Microsoft.Health.InvertedIndex.WeightHitTable`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})
  - Microsoft.Health.InvertedIndex.WeightHitTable`1.#ctor(System.Int32)
  - Microsoft.Health.InvertedIndex.WeightHitTable`1.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})
  - Microsoft.Health.InvertedIndex.WeightHitTable`1.Clear
  - Microsoft.Health.InvertedIndex.WeightHitTable`1.CollectHits(System.Collections.Generic.IEnumerable{`0})
  - Microsoft.Health.InvertedIndex.WeightHitTable`1.CollectHits(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,System.Single}})
  - Microsoft.Health.InvertedIndex.WeightHitTable`1.CollectHits(System.Collections.Generic.IList{`0})
  - Microsoft.Health.InvertedIndex.WeightHitTable`1.CollectUnique(System.Collections.Generic.IEnumerable{`0})
  - Microsoft.Health.InvertedIndex.WeightHitTable`1.CollectUnique(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,System.Single}})
  - Microsoft.Health.InvertedIndex.WeightHitTable`1.CollectUnique(System.Collections.Generic.IList{`0})
  - Microsoft.Health.InvertedIndex.WeightHitTable`1.Count
  - Microsoft.Health.InvertedIndex.WeightHitTable`1.Hit(`0)
  - Microsoft.Health.InvertedIndex.WeightHitTable`1.Hit(`0,System.Single)
  - Microsoft.Health.InvertedIndex.WeightHitTable`1.Item(`0)
  - Microsoft.Health.InvertedIndex.WeightHitTable`1.Keys
  - Microsoft.Health.InvertedIndex.WeightHitTable`1.WeightedKeys
  - Microsoft.Health.InvertedIndex.WeightHitTable`1.Weights
  langs:
  - csharp
  - vb
  name: WeightHitTable<K>
  nameWithType: WeightHitTable<K>
  fullName: Microsoft.Health.InvertedIndex.WeightHitTable<K>
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/WeightHitTable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WeightHitTable
    path: search/InvertedIndex/WeightHitTable.cs
    startLine: 15
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public class WeightHitTable<K>
    content.vb: Public Class WeightHitTable(Of K)
    typeParameters:
    - id: K
      description: ''
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.InvertedIndex.WeightHitTable`1.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  nameWithType.vb: WeightHitTable(Of K)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.Health.InvertedIndex.WeightHitTable(Of K)
  name.vb: WeightHitTable(Of K)
- uid: Microsoft.Health.InvertedIndex.WeightHitTable`1.#ctor
  commentId: M:Microsoft.Health.InvertedIndex.WeightHitTable`1.#ctor
  id: '#ctor'
  parent: Microsoft.Health.InvertedIndex.WeightHitTable`1
  langs:
  - csharp
  - vb
  name: WeightHitTable()
  nameWithType: WeightHitTable<K>.WeightHitTable()
  fullName: Microsoft.Health.InvertedIndex.WeightHitTable<K>.WeightHitTable()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/WeightHitTable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: search/InvertedIndex/WeightHitTable.cs
    startLine: 22
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public WeightHitTable()
    content.vb: Public Sub New
  overload: Microsoft.Health.InvertedIndex.WeightHitTable`1.#ctor*
  nameWithType.vb: WeightHitTable(Of K).WeightHitTable()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.WeightHitTable(Of K).WeightHitTable()
- uid: Microsoft.Health.InvertedIndex.WeightHitTable`1.#ctor(System.Int32)
  commentId: M:Microsoft.Health.InvertedIndex.WeightHitTable`1.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: Microsoft.Health.InvertedIndex.WeightHitTable`1
  langs:
  - csharp
  - vb
  name: WeightHitTable(Int32)
  nameWithType: WeightHitTable<K>.WeightHitTable(Int32)
  fullName: Microsoft.Health.InvertedIndex.WeightHitTable<K>.WeightHitTable(System.Int32)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/WeightHitTable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: search/InvertedIndex/WeightHitTable.cs
    startLine: 31
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public WeightHitTable(int capacity)
    content.vb: Public Sub New(capacity As Integer)
    parameters:
    - id: capacity
      type: System.Int32
      description: ''
  overload: Microsoft.Health.InvertedIndex.WeightHitTable`1.#ctor*
  nameWithType.vb: WeightHitTable(Of K).WeightHitTable(Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.WeightHitTable(Of K).WeightHitTable(System.Int32)
- uid: Microsoft.Health.InvertedIndex.WeightHitTable`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})
  commentId: M:Microsoft.Health.InvertedIndex.WeightHitTable`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})
  id: '#ctor(System.Collections.Generic.IEqualityComparer{`0})'
  parent: Microsoft.Health.InvertedIndex.WeightHitTable`1
  langs:
  - csharp
  - vb
  name: WeightHitTable(IEqualityComparer<K>)
  nameWithType: WeightHitTable<K>.WeightHitTable(IEqualityComparer<K>)
  fullName: Microsoft.Health.InvertedIndex.WeightHitTable<K>.WeightHitTable(System.Collections.Generic.IEqualityComparer<K>)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/WeightHitTable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: search/InvertedIndex/WeightHitTable.cs
    startLine: 40
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public WeightHitTable(IEqualityComparer<K> comparer)
    content.vb: Public Sub New(comparer As IEqualityComparer(Of K))
    parameters:
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{{K}}
      description: ''
  overload: Microsoft.Health.InvertedIndex.WeightHitTable`1.#ctor*
  nameWithType.vb: WeightHitTable(Of K).WeightHitTable(IEqualityComparer(Of K))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.WeightHitTable(Of K).WeightHitTable(System.Collections.Generic.IEqualityComparer(Of K))
  name.vb: WeightHitTable(IEqualityComparer(Of K))
- uid: Microsoft.Health.InvertedIndex.WeightHitTable`1.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})
  commentId: M:Microsoft.Health.InvertedIndex.WeightHitTable`1.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})
  id: '#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})'
  parent: Microsoft.Health.InvertedIndex.WeightHitTable`1
  langs:
  - csharp
  - vb
  name: WeightHitTable(Int32, IEqualityComparer<K>)
  nameWithType: WeightHitTable<K>.WeightHitTable(Int32, IEqualityComparer<K>)
  fullName: Microsoft.Health.InvertedIndex.WeightHitTable<K>.WeightHitTable(System.Int32, System.Collections.Generic.IEqualityComparer<K>)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/WeightHitTable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: search/InvertedIndex/WeightHitTable.cs
    startLine: 50
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public WeightHitTable(int capacity, IEqualityComparer<K> comparer)
    content.vb: Public Sub New(capacity As Integer, comparer As IEqualityComparer(Of K))
    parameters:
    - id: capacity
      type: System.Int32
      description: ''
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{{K}}
      description: ''
  overload: Microsoft.Health.InvertedIndex.WeightHitTable`1.#ctor*
  nameWithType.vb: WeightHitTable(Of K).WeightHitTable(Int32, IEqualityComparer(Of K))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.WeightHitTable(Of K).WeightHitTable(System.Int32, System.Collections.Generic.IEqualityComparer(Of K))
  name.vb: WeightHitTable(Int32, IEqualityComparer(Of K))
- uid: Microsoft.Health.InvertedIndex.WeightHitTable`1.Count
  commentId: P:Microsoft.Health.InvertedIndex.WeightHitTable`1.Count
  id: Count
  parent: Microsoft.Health.InvertedIndex.WeightHitTable`1
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: WeightHitTable<K>.Count
  fullName: Microsoft.Health.InvertedIndex.WeightHitTable<K>.Count
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/WeightHitTable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Count
    path: search/InvertedIndex/WeightHitTable.cs
    startLine: 58
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Health.InvertedIndex.WeightHitTable`1.Count*
  nameWithType.vb: WeightHitTable(Of K).Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.Health.InvertedIndex.WeightHitTable(Of K).Count
- uid: Microsoft.Health.InvertedIndex.WeightHitTable`1.Item(`0)
  commentId: P:Microsoft.Health.InvertedIndex.WeightHitTable`1.Item(`0)
  id: Item(`0)
  parent: Microsoft.Health.InvertedIndex.WeightHitTable`1
  langs:
  - csharp
  - vb
  name: Item[K]
  nameWithType: WeightHitTable<K>.Item[K]
  fullName: Microsoft.Health.InvertedIndex.WeightHitTable<K>.Item[K]
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/WeightHitTable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: this[]
    path: search/InvertedIndex/WeightHitTable.cs
    startLine: 71
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public float this[K key] { get; set; }
    content.vb: Public Property Item(key As K) As Single
    parameters:
    - id: key
      type: '{K}'
      description: ''
    return:
      type: System.Single
      description: ''
  overload: Microsoft.Health.InvertedIndex.WeightHitTable`1.Item*
  nameWithType.vb: WeightHitTable(Of K).Item(K)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.WeightHitTable(Of K).Item(K)
  name.vb: Item(K)
- uid: Microsoft.Health.InvertedIndex.WeightHitTable`1.Keys
  commentId: P:Microsoft.Health.InvertedIndex.WeightHitTable`1.Keys
  id: Keys
  parent: Microsoft.Health.InvertedIndex.WeightHitTable`1
  langs:
  - csharp
  - vb
  name: Keys
  nameWithType: WeightHitTable<K>.Keys
  fullName: Microsoft.Health.InvertedIndex.WeightHitTable<K>.Keys
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/WeightHitTable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Keys
    path: search/InvertedIndex/WeightHitTable.cs
    startLine: 92
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public IEnumerable<K> Keys { get; }
    content.vb: Public ReadOnly Property Keys As IEnumerable(Of K)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{{K}}
  overload: Microsoft.Health.InvertedIndex.WeightHitTable`1.Keys*
  nameWithType.vb: WeightHitTable(Of K).Keys
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.Health.InvertedIndex.WeightHitTable(Of K).Keys
- uid: Microsoft.Health.InvertedIndex.WeightHitTable`1.WeightedKeys
  commentId: P:Microsoft.Health.InvertedIndex.WeightHitTable`1.WeightedKeys
  id: WeightedKeys
  parent: Microsoft.Health.InvertedIndex.WeightHitTable`1
  langs:
  - csharp
  - vb
  name: WeightedKeys
  nameWithType: WeightHitTable<K>.WeightedKeys
  fullName: Microsoft.Health.InvertedIndex.WeightHitTable<K>.WeightedKeys
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/WeightHitTable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WeightedKeys
    path: search/InvertedIndex/WeightHitTable.cs
    startLine: 103
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public IEnumerable<KeyValuePair<K, float>> WeightedKeys { get; }
    content.vb: Public ReadOnly Property WeightedKeys As IEnumerable(Of KeyValuePair(Of K, Single))
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{K},System.Single}}
  overload: Microsoft.Health.InvertedIndex.WeightHitTable`1.WeightedKeys*
  nameWithType.vb: WeightHitTable(Of K).WeightedKeys
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.Health.InvertedIndex.WeightHitTable(Of K).WeightedKeys
- uid: Microsoft.Health.InvertedIndex.WeightHitTable`1.Weights
  commentId: P:Microsoft.Health.InvertedIndex.WeightHitTable`1.Weights
  id: Weights
  parent: Microsoft.Health.InvertedIndex.WeightHitTable`1
  langs:
  - csharp
  - vb
  name: Weights
  nameWithType: WeightHitTable<K>.Weights
  fullName: Microsoft.Health.InvertedIndex.WeightHitTable<K>.Weights
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/WeightHitTable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Weights
    path: search/InvertedIndex/WeightHitTable.cs
    startLine: 114
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public ICollection<float> Weights { get; }
    content.vb: Public ReadOnly Property Weights As ICollection(Of Single)
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.Single}
  overload: Microsoft.Health.InvertedIndex.WeightHitTable`1.Weights*
  nameWithType.vb: WeightHitTable(Of K).Weights
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.Health.InvertedIndex.WeightHitTable(Of K).Weights
- uid: Microsoft.Health.InvertedIndex.WeightHitTable`1.Clear
  commentId: M:Microsoft.Health.InvertedIndex.WeightHitTable`1.Clear
  id: Clear
  parent: Microsoft.Health.InvertedIndex.WeightHitTable`1
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: WeightHitTable<K>.Clear()
  fullName: Microsoft.Health.InvertedIndex.WeightHitTable<K>.Clear()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/WeightHitTable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Clear
    path: search/InvertedIndex/WeightHitTable.cs
    startLine: 125
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: Microsoft.Health.InvertedIndex.WeightHitTable`1.Clear*
  nameWithType.vb: WeightHitTable(Of K).Clear()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.WeightHitTable(Of K).Clear()
- uid: Microsoft.Health.InvertedIndex.WeightHitTable`1.Hit(`0)
  commentId: M:Microsoft.Health.InvertedIndex.WeightHitTable`1.Hit(`0)
  id: Hit(`0)
  parent: Microsoft.Health.InvertedIndex.WeightHitTable`1
  langs:
  - csharp
  - vb
  name: Hit(K)
  nameWithType: WeightHitTable<K>.Hit(K)
  fullName: Microsoft.Health.InvertedIndex.WeightHitTable<K>.Hit(K)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/WeightHitTable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Hit
    path: search/InvertedIndex/WeightHitTable.cs
    startLine: 135
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public float Hit(K key)
    content.vb: Public Function Hit(key As K) As Single
    parameters:
    - id: key
      type: '{K}'
      description: ''
    return:
      type: System.Single
      description: ''
  overload: Microsoft.Health.InvertedIndex.WeightHitTable`1.Hit*
  nameWithType.vb: WeightHitTable(Of K).Hit(K)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.WeightHitTable(Of K).Hit(K)
- uid: Microsoft.Health.InvertedIndex.WeightHitTable`1.Hit(`0,System.Single)
  commentId: M:Microsoft.Health.InvertedIndex.WeightHitTable`1.Hit(`0,System.Single)
  id: Hit(`0,System.Single)
  parent: Microsoft.Health.InvertedIndex.WeightHitTable`1
  langs:
  - csharp
  - vb
  name: Hit(K, Single)
  nameWithType: WeightHitTable<K>.Hit(K, Single)
  fullName: Microsoft.Health.InvertedIndex.WeightHitTable<K>.Hit(K, System.Single)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/WeightHitTable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Hit
    path: search/InvertedIndex/WeightHitTable.cs
    startLine: 146
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public float Hit(K key, float newWeight)
    content.vb: Public Function Hit(key As K, newWeight As Single) As Single
    parameters:
    - id: key
      type: '{K}'
      description: ''
    - id: newWeight
      type: System.Single
      description: ''
    return:
      type: System.Single
      description: ''
  overload: Microsoft.Health.InvertedIndex.WeightHitTable`1.Hit*
  nameWithType.vb: WeightHitTable(Of K).Hit(K, Single)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.WeightHitTable(Of K).Hit(K, System.Single)
- uid: Microsoft.Health.InvertedIndex.WeightHitTable`1.CollectUnique(System.Collections.Generic.IList{`0})
  commentId: M:Microsoft.Health.InvertedIndex.WeightHitTable`1.CollectUnique(System.Collections.Generic.IList{`0})
  id: CollectUnique(System.Collections.Generic.IList{`0})
  parent: Microsoft.Health.InvertedIndex.WeightHitTable`1
  langs:
  - csharp
  - vb
  name: CollectUnique(IList<K>)
  nameWithType: WeightHitTable<K>.CollectUnique(IList<K>)
  fullName: Microsoft.Health.InvertedIndex.WeightHitTable<K>.CollectUnique(System.Collections.Generic.IList<K>)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/WeightHitTable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CollectUnique
    path: search/InvertedIndex/WeightHitTable.cs
    startLine: 166
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void CollectUnique(IList<K> terms)
    content.vb: Public Sub CollectUnique(terms As IList(Of K))
    parameters:
    - id: terms
      type: System.Collections.Generic.IList{{K}}
      description: ''
  overload: Microsoft.Health.InvertedIndex.WeightHitTable`1.CollectUnique*
  nameWithType.vb: WeightHitTable(Of K).CollectUnique(IList(Of K))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.WeightHitTable(Of K).CollectUnique(System.Collections.Generic.IList(Of K))
  name.vb: CollectUnique(IList(Of K))
- uid: Microsoft.Health.InvertedIndex.WeightHitTable`1.CollectUnique(System.Collections.Generic.IEnumerable{`0})
  commentId: M:Microsoft.Health.InvertedIndex.WeightHitTable`1.CollectUnique(System.Collections.Generic.IEnumerable{`0})
  id: CollectUnique(System.Collections.Generic.IEnumerable{`0})
  parent: Microsoft.Health.InvertedIndex.WeightHitTable`1
  langs:
  - csharp
  - vb
  name: CollectUnique(IEnumerable<K>)
  nameWithType: WeightHitTable<K>.CollectUnique(IEnumerable<K>)
  fullName: Microsoft.Health.InvertedIndex.WeightHitTable<K>.CollectUnique(System.Collections.Generic.IEnumerable<K>)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/WeightHitTable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CollectUnique
    path: search/InvertedIndex/WeightHitTable.cs
    startLine: 178
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void CollectUnique(IEnumerable<K> terms)
    content.vb: Public Sub CollectUnique(terms As IEnumerable(Of K))
    parameters:
    - id: terms
      type: System.Collections.Generic.IEnumerable{{K}}
      description: ''
  overload: Microsoft.Health.InvertedIndex.WeightHitTable`1.CollectUnique*
  nameWithType.vb: WeightHitTable(Of K).CollectUnique(IEnumerable(Of K))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.WeightHitTable(Of K).CollectUnique(System.Collections.Generic.IEnumerable(Of K))
  name.vb: CollectUnique(IEnumerable(Of K))
- uid: Microsoft.Health.InvertedIndex.WeightHitTable`1.CollectUnique(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,System.Single}})
  commentId: M:Microsoft.Health.InvertedIndex.WeightHitTable`1.CollectUnique(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,System.Single}})
  id: CollectUnique(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,System.Single}})
  parent: Microsoft.Health.InvertedIndex.WeightHitTable`1
  langs:
  - csharp
  - vb
  name: CollectUnique(IEnumerable<KeyValuePair<K, Single>>)
  nameWithType: WeightHitTable<K>.CollectUnique(IEnumerable<KeyValuePair<K, Single>>)
  fullName: Microsoft.Health.InvertedIndex.WeightHitTable<K>.CollectUnique(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, System.Single>>)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/WeightHitTable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CollectUnique
    path: search/InvertedIndex/WeightHitTable.cs
    startLine: 190
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void CollectUnique(IEnumerable<KeyValuePair<K, float>> terms)
    content.vb: Public Sub CollectUnique(terms As IEnumerable(Of KeyValuePair(Of K, Single)))
    parameters:
    - id: terms
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{K},System.Single}}
      description: ''
  overload: Microsoft.Health.InvertedIndex.WeightHitTable`1.CollectUnique*
  nameWithType.vb: WeightHitTable(Of K).CollectUnique(IEnumerable(Of KeyValuePair(Of K, Single)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.WeightHitTable(Of K).CollectUnique(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of K, System.Single)))
  name.vb: CollectUnique(IEnumerable(Of KeyValuePair(Of K, Single)))
- uid: Microsoft.Health.InvertedIndex.WeightHitTable`1.CollectHits(System.Collections.Generic.IList{`0})
  commentId: M:Microsoft.Health.InvertedIndex.WeightHitTable`1.CollectHits(System.Collections.Generic.IList{`0})
  id: CollectHits(System.Collections.Generic.IList{`0})
  parent: Microsoft.Health.InvertedIndex.WeightHitTable`1
  langs:
  - csharp
  - vb
  name: CollectHits(IList<K>)
  nameWithType: WeightHitTable<K>.CollectHits(IList<K>)
  fullName: Microsoft.Health.InvertedIndex.WeightHitTable<K>.CollectHits(System.Collections.Generic.IList<K>)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/WeightHitTable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CollectHits
    path: search/InvertedIndex/WeightHitTable.cs
    startLine: 202
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void CollectHits(IList<K> terms)
    content.vb: Public Sub CollectHits(terms As IList(Of K))
    parameters:
    - id: terms
      type: System.Collections.Generic.IList{{K}}
      description: ''
  overload: Microsoft.Health.InvertedIndex.WeightHitTable`1.CollectHits*
  nameWithType.vb: WeightHitTable(Of K).CollectHits(IList(Of K))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.WeightHitTable(Of K).CollectHits(System.Collections.Generic.IList(Of K))
  name.vb: CollectHits(IList(Of K))
- uid: Microsoft.Health.InvertedIndex.WeightHitTable`1.CollectHits(System.Collections.Generic.IEnumerable{`0})
  commentId: M:Microsoft.Health.InvertedIndex.WeightHitTable`1.CollectHits(System.Collections.Generic.IEnumerable{`0})
  id: CollectHits(System.Collections.Generic.IEnumerable{`0})
  parent: Microsoft.Health.InvertedIndex.WeightHitTable`1
  langs:
  - csharp
  - vb
  name: CollectHits(IEnumerable<K>)
  nameWithType: WeightHitTable<K>.CollectHits(IEnumerable<K>)
  fullName: Microsoft.Health.InvertedIndex.WeightHitTable<K>.CollectHits(System.Collections.Generic.IEnumerable<K>)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/WeightHitTable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CollectHits
    path: search/InvertedIndex/WeightHitTable.cs
    startLine: 214
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void CollectHits(IEnumerable<K> terms)
    content.vb: Public Sub CollectHits(terms As IEnumerable(Of K))
    parameters:
    - id: terms
      type: System.Collections.Generic.IEnumerable{{K}}
      description: ''
  overload: Microsoft.Health.InvertedIndex.WeightHitTable`1.CollectHits*
  nameWithType.vb: WeightHitTable(Of K).CollectHits(IEnumerable(Of K))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.WeightHitTable(Of K).CollectHits(System.Collections.Generic.IEnumerable(Of K))
  name.vb: CollectHits(IEnumerable(Of K))
- uid: Microsoft.Health.InvertedIndex.WeightHitTable`1.CollectHits(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,System.Single}})
  commentId: M:Microsoft.Health.InvertedIndex.WeightHitTable`1.CollectHits(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,System.Single}})
  id: CollectHits(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,System.Single}})
  parent: Microsoft.Health.InvertedIndex.WeightHitTable`1
  langs:
  - csharp
  - vb
  name: CollectHits(IEnumerable<KeyValuePair<K, Single>>)
  nameWithType: WeightHitTable<K>.CollectHits(IEnumerable<KeyValuePair<K, Single>>)
  fullName: Microsoft.Health.InvertedIndex.WeightHitTable<K>.CollectHits(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, System.Single>>)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/WeightHitTable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CollectHits
    path: search/InvertedIndex/WeightHitTable.cs
    startLine: 226
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void CollectHits(IEnumerable<KeyValuePair<K, float>> terms)
    content.vb: Public Sub CollectHits(terms As IEnumerable(Of KeyValuePair(Of K, Single)))
    parameters:
    - id: terms
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{K},System.Single}}
      description: ''
  overload: Microsoft.Health.InvertedIndex.WeightHitTable`1.CollectHits*
  nameWithType.vb: WeightHitTable(Of K).CollectHits(IEnumerable(Of KeyValuePair(Of K, Single)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.WeightHitTable(Of K).CollectHits(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of K, System.Single)))
  name.vb: CollectHits(IEnumerable(Of KeyValuePair(Of K, Single)))
references:
- uid: Microsoft.Health.InvertedIndex
  commentId: N:Microsoft.Health.InvertedIndex
  isExternal: false
  name: Microsoft.Health.InvertedIndex
  nameWithType: Microsoft.Health.InvertedIndex
  fullName: Microsoft.Health.InvertedIndex
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.WeightHitTable`1.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<WeightHitTable<K>>()
  nameWithType: TypeHelper.ValueOrDbNull<WeightHitTable<K>>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.InvertedIndex.WeightHitTable<K>>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of WeightHitTable(Of K))()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.InvertedIndex.WeightHitTable(Of K))()
  name.vb: ValueOrDbNull(Of WeightHitTable(Of K))()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<WeightHitTable<K>>
    nameWithType: TypeHelper.ValueOrDbNull<WeightHitTable<K>>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.InvertedIndex.WeightHitTable<K>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of WeightHitTable(Of K))
    nameWithType: TypeHelper.ValueOrDbNull(Of WeightHitTable(Of K))
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.InvertedIndex.WeightHitTable(Of K))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.InvertedIndex.WeightHitTable`1.#ctor*
  commentId: Overload:Microsoft.Health.InvertedIndex.WeightHitTable`1.#ctor
  isExternal: false
  name: WeightHitTable
  nameWithType: WeightHitTable<K>.WeightHitTable
  fullName: Microsoft.Health.InvertedIndex.WeightHitTable<K>.WeightHitTable
  nameWithType.vb: WeightHitTable(Of K).WeightHitTable
  fullName.vb: Microsoft.Health.InvertedIndex.WeightHitTable(Of K).WeightHitTable
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IEqualityComparer{{K}}
  commentId: T:System.Collections.Generic.IEqualityComparer{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEqualityComparer`1
  name: IEqualityComparer<K>
  nameWithType: IEqualityComparer<K>
  fullName: System.Collections.Generic.IEqualityComparer<K>
  nameWithType.vb: IEqualityComparer(Of K)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of K)
  name.vb: IEqualityComparer(Of K)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: K
    nameWithType: K
    fullName: K
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: K
    nameWithType: K
    fullName: K
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEqualityComparer`1
  commentId: T:System.Collections.Generic.IEqualityComparer`1
  isExternal: true
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
  nameWithType.vb: IEqualityComparer(Of T)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T)
  name.vb: IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Health.InvertedIndex.WeightHitTable`1.Count*
  commentId: Overload:Microsoft.Health.InvertedIndex.WeightHitTable`1.Count
  isExternal: false
  name: Count
  nameWithType: WeightHitTable<K>.Count
  fullName: Microsoft.Health.InvertedIndex.WeightHitTable<K>.Count
  nameWithType.vb: WeightHitTable(Of K).Count
  fullName.vb: Microsoft.Health.InvertedIndex.WeightHitTable(Of K).Count
- uid: Microsoft.Health.InvertedIndex.WeightHitTable`1.Item*
  commentId: Overload:Microsoft.Health.InvertedIndex.WeightHitTable`1.Item
  isExternal: false
  name: Item
  nameWithType: WeightHitTable<K>.Item
  fullName: Microsoft.Health.InvertedIndex.WeightHitTable<K>.Item
  nameWithType.vb: WeightHitTable(Of K).Item
  fullName.vb: Microsoft.Health.InvertedIndex.WeightHitTable(Of K).Item
- uid: '{K}'
  commentId: '!:K'
  definition: K
  name: K
  nameWithType: K
  fullName: K
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: K
  isExternal: false
  name: K
  nameWithType: K
  fullName: K
- uid: Microsoft.Health.InvertedIndex.WeightHitTable`1.Keys*
  commentId: Overload:Microsoft.Health.InvertedIndex.WeightHitTable`1.Keys
  isExternal: false
  name: Keys
  nameWithType: WeightHitTable<K>.Keys
  fullName: Microsoft.Health.InvertedIndex.WeightHitTable<K>.Keys
  nameWithType.vb: WeightHitTable(Of K).Keys
  fullName.vb: Microsoft.Health.InvertedIndex.WeightHitTable(Of K).Keys
- uid: System.Collections.Generic.IEnumerable{{K}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<K>
  nameWithType: IEnumerable<K>
  fullName: System.Collections.Generic.IEnumerable<K>
  nameWithType.vb: IEnumerable(Of K)
  fullName.vb: System.Collections.Generic.IEnumerable(Of K)
  name.vb: IEnumerable(Of K)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: K
    nameWithType: K
    fullName: K
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: K
    nameWithType: K
    fullName: K
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.WeightHitTable`1.WeightedKeys*
  commentId: Overload:Microsoft.Health.InvertedIndex.WeightHitTable`1.WeightedKeys
  isExternal: false
  name: WeightedKeys
  nameWithType: WeightHitTable<K>.WeightedKeys
  fullName: Microsoft.Health.InvertedIndex.WeightHitTable<K>.WeightedKeys
  nameWithType.vb: WeightHitTable(Of K).WeightedKeys
  fullName.vb: Microsoft.Health.InvertedIndex.WeightHitTable(Of K).WeightedKeys
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{K},System.Single}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,System.Single}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<K, Single>>
  nameWithType: IEnumerable<KeyValuePair<K, Single>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, System.Single>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of K, Single))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of K, System.Single))
  name.vb: IEnumerable(Of KeyValuePair(Of K, Single))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.WeightHitTable`1.Weights*
  commentId: Overload:Microsoft.Health.InvertedIndex.WeightHitTable`1.Weights
  isExternal: false
  name: Weights
  nameWithType: WeightHitTable<K>.Weights
  fullName: Microsoft.Health.InvertedIndex.WeightHitTable<K>.Weights
  nameWithType.vb: WeightHitTable(Of K).Weights
  fullName.vb: Microsoft.Health.InvertedIndex.WeightHitTable(Of K).Weights
- uid: System.Collections.Generic.ICollection{System.Single}
  commentId: T:System.Collections.Generic.ICollection{System.Single}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<Single>
  nameWithType: ICollection<Single>
  fullName: System.Collections.Generic.ICollection<System.Single>
  nameWithType.vb: ICollection(Of Single)
  fullName.vb: System.Collections.Generic.ICollection(Of System.Single)
  name.vb: ICollection(Of Single)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.WeightHitTable`1.Clear*
  commentId: Overload:Microsoft.Health.InvertedIndex.WeightHitTable`1.Clear
  isExternal: false
  name: Clear
  nameWithType: WeightHitTable<K>.Clear
  fullName: Microsoft.Health.InvertedIndex.WeightHitTable<K>.Clear
  nameWithType.vb: WeightHitTable(Of K).Clear
  fullName.vb: Microsoft.Health.InvertedIndex.WeightHitTable(Of K).Clear
- uid: Microsoft.Health.InvertedIndex.WeightHitTable`1.Hit*
  commentId: Overload:Microsoft.Health.InvertedIndex.WeightHitTable`1.Hit
  isExternal: false
  name: Hit
  nameWithType: WeightHitTable<K>.Hit
  fullName: Microsoft.Health.InvertedIndex.WeightHitTable<K>.Hit
  nameWithType.vb: WeightHitTable(Of K).Hit
  fullName.vb: Microsoft.Health.InvertedIndex.WeightHitTable(Of K).Hit
- uid: Microsoft.Health.InvertedIndex.WeightHitTable`1.CollectUnique*
  commentId: Overload:Microsoft.Health.InvertedIndex.WeightHitTable`1.CollectUnique
  isExternal: false
  name: CollectUnique
  nameWithType: WeightHitTable<K>.CollectUnique
  fullName: Microsoft.Health.InvertedIndex.WeightHitTable<K>.CollectUnique
  nameWithType.vb: WeightHitTable(Of K).CollectUnique
  fullName.vb: Microsoft.Health.InvertedIndex.WeightHitTable(Of K).CollectUnique
- uid: System.Collections.Generic.IList{{K}}
  commentId: T:System.Collections.Generic.IList{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<K>
  nameWithType: IList<K>
  fullName: System.Collections.Generic.IList<K>
  nameWithType.vb: IList(Of K)
  fullName.vb: System.Collections.Generic.IList(Of K)
  name.vb: IList(Of K)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: K
    nameWithType: K
    fullName: K
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: K
    nameWithType: K
    fullName: K
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.WeightHitTable`1.CollectHits*
  commentId: Overload:Microsoft.Health.InvertedIndex.WeightHitTable`1.CollectHits
  isExternal: false
  name: CollectHits
  nameWithType: WeightHitTable<K>.CollectHits
  fullName: Microsoft.Health.InvertedIndex.WeightHitTable<K>.CollectHits
  nameWithType.vb: WeightHitTable(Of K).CollectHits
  fullName.vb: Microsoft.Health.InvertedIndex.WeightHitTable(Of K).CollectHits
