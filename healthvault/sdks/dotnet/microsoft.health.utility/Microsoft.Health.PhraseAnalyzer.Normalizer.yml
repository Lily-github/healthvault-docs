### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.PhraseAnalyzer.Normalizer
  commentId: T:Microsoft.Health.PhraseAnalyzer.Normalizer
  id: Normalizer
  parent: Microsoft.Health.PhraseAnalyzer
  children:
  - Microsoft.Health.PhraseAnalyzer.Normalizer.#ctor
  - Microsoft.Health.PhraseAnalyzer.Normalizer.#ctor(Microsoft.Health.PhraseAnalyzer.NormalizeChar[])
  - Microsoft.Health.PhraseAnalyzer.Normalizer.#ctor(Microsoft.Health.PhraseAnalyzer.NormalizeChar[],System.Boolean)
  - Microsoft.Health.PhraseAnalyzer.Normalizer.#ctor(System.Boolean)
  - Microsoft.Health.PhraseAnalyzer.Normalizer.BasicQuery
  - Microsoft.Health.PhraseAnalyzer.Normalizer.Default
  - Microsoft.Health.PhraseAnalyzer.Normalizer.Item(System.Char)
  - Microsoft.Health.PhraseAnalyzer.Normalizer.Normalize(System.Char)
  - Microsoft.Health.PhraseAnalyzer.Normalizer.Normalize(System.String)
  - Microsoft.Health.PhraseAnalyzer.Normalizer.Normalize(System.String,System.Text.StringBuilder)
  - Microsoft.Health.PhraseAnalyzer.Normalizer.RetainCasing
  langs:
  - csharp
  - vb
  name: Normalizer
  nameWithType: Normalizer
  fullName: Microsoft.Health.PhraseAnalyzer.Normalizer
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/Normalizer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Normalizer
    path: search/PhraseAnalyzer/Normalizer.cs
    startLine: 80
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public class Normalizer
    content.vb: >-
      <Serializable>

      Public Class Normalizer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.PhraseAnalyzer.Normalizer.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.PhraseAnalyzer.Normalizer.Default
  commentId: F:Microsoft.Health.PhraseAnalyzer.Normalizer.Default
  id: Default
  parent: Microsoft.Health.PhraseAnalyzer.Normalizer
  langs:
  - csharp
  - vb
  name: Default
  nameWithType: Normalizer.Default
  fullName: Microsoft.Health.PhraseAnalyzer.Normalizer.Default
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/Normalizer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Default
    path: search/PhraseAnalyzer/Normalizer.cs
    startLine: 147
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: public static readonly Normalizer Default
    content.vb: Public Shared ReadOnly Default As Normalizer
    return:
      type: Microsoft.Health.PhraseAnalyzer.Normalizer
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Health.PhraseAnalyzer.Normalizer.BasicQuery
  commentId: F:Microsoft.Health.PhraseAnalyzer.Normalizer.BasicQuery
  id: BasicQuery
  parent: Microsoft.Health.PhraseAnalyzer.Normalizer
  langs:
  - csharp
  - vb
  name: BasicQuery
  nameWithType: Normalizer.BasicQuery
  fullName: Microsoft.Health.PhraseAnalyzer.Normalizer.BasicQuery
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/Normalizer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: BasicQuery
    path: search/PhraseAnalyzer/Normalizer.cs
    startLine: 156
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: public static readonly Normalizer BasicQuery
    content.vb: Public Shared ReadOnly BasicQuery As Normalizer
    return:
      type: Microsoft.Health.PhraseAnalyzer.Normalizer
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Health.PhraseAnalyzer.Normalizer.#ctor
  commentId: M:Microsoft.Health.PhraseAnalyzer.Normalizer.#ctor
  id: '#ctor'
  parent: Microsoft.Health.PhraseAnalyzer.Normalizer
  langs:
  - csharp
  - vb
  name: Normalizer()
  nameWithType: Normalizer.Normalizer()
  fullName: Microsoft.Health.PhraseAnalyzer.Normalizer.Normalizer()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/Normalizer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: search/PhraseAnalyzer/Normalizer.cs
    startLine: 165
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: public Normalizer()
    content.vb: Public Sub New
  overload: Microsoft.Health.PhraseAnalyzer.Normalizer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.PhraseAnalyzer.Normalizer.#ctor(Microsoft.Health.PhraseAnalyzer.NormalizeChar[])
  commentId: M:Microsoft.Health.PhraseAnalyzer.Normalizer.#ctor(Microsoft.Health.PhraseAnalyzer.NormalizeChar[])
  id: '#ctor(Microsoft.Health.PhraseAnalyzer.NormalizeChar[])'
  parent: Microsoft.Health.PhraseAnalyzer.Normalizer
  langs:
  - csharp
  - vb
  name: Normalizer(NormalizeChar[])
  nameWithType: Normalizer.Normalizer(NormalizeChar[])
  fullName: Microsoft.Health.PhraseAnalyzer.Normalizer.Normalizer(Microsoft.Health.PhraseAnalyzer.NormalizeChar[])
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/Normalizer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: search/PhraseAnalyzer/Normalizer.cs
    startLine: 174
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: public Normalizer(NormalizeChar[] rules)
    content.vb: Public Sub New(rules As NormalizeChar())
    parameters:
    - id: rules
      type: Microsoft.Health.PhraseAnalyzer.NormalizeChar[]
      description: ''
  overload: Microsoft.Health.PhraseAnalyzer.Normalizer.#ctor*
  nameWithType.vb: Normalizer.Normalizer(NormalizeChar())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.PhraseAnalyzer.Normalizer.Normalizer(Microsoft.Health.PhraseAnalyzer.NormalizeChar())
  name.vb: Normalizer(NormalizeChar())
- uid: Microsoft.Health.PhraseAnalyzer.Normalizer.#ctor(System.Boolean)
  commentId: M:Microsoft.Health.PhraseAnalyzer.Normalizer.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: Microsoft.Health.PhraseAnalyzer.Normalizer
  langs:
  - csharp
  - vb
  name: Normalizer(Boolean)
  nameWithType: Normalizer.Normalizer(Boolean)
  fullName: Microsoft.Health.PhraseAnalyzer.Normalizer.Normalizer(System.Boolean)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/Normalizer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: search/PhraseAnalyzer/Normalizer.cs
    startLine: 183
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: public Normalizer(bool retainCasing)
    content.vb: Public Sub New(retainCasing As Boolean)
    parameters:
    - id: retainCasing
      type: System.Boolean
      description: ''
  overload: Microsoft.Health.PhraseAnalyzer.Normalizer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.PhraseAnalyzer.Normalizer.#ctor(Microsoft.Health.PhraseAnalyzer.NormalizeChar[],System.Boolean)
  commentId: M:Microsoft.Health.PhraseAnalyzer.Normalizer.#ctor(Microsoft.Health.PhraseAnalyzer.NormalizeChar[],System.Boolean)
  id: '#ctor(Microsoft.Health.PhraseAnalyzer.NormalizeChar[],System.Boolean)'
  parent: Microsoft.Health.PhraseAnalyzer.Normalizer
  langs:
  - csharp
  - vb
  name: Normalizer(NormalizeChar[], Boolean)
  nameWithType: Normalizer.Normalizer(NormalizeChar[], Boolean)
  fullName: Microsoft.Health.PhraseAnalyzer.Normalizer.Normalizer(Microsoft.Health.PhraseAnalyzer.NormalizeChar[], System.Boolean)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/Normalizer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: search/PhraseAnalyzer/Normalizer.cs
    startLine: 193
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: public Normalizer(NormalizeChar[] rules, bool retainCasing)
    content.vb: Public Sub New(rules As NormalizeChar(), retainCasing As Boolean)
    parameters:
    - id: rules
      type: Microsoft.Health.PhraseAnalyzer.NormalizeChar[]
      description: ''
    - id: retainCasing
      type: System.Boolean
      description: ''
  overload: Microsoft.Health.PhraseAnalyzer.Normalizer.#ctor*
  nameWithType.vb: Normalizer.Normalizer(NormalizeChar(), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.PhraseAnalyzer.Normalizer.Normalizer(Microsoft.Health.PhraseAnalyzer.NormalizeChar(), System.Boolean)
  name.vb: Normalizer(NormalizeChar(), Boolean)
- uid: Microsoft.Health.PhraseAnalyzer.Normalizer.Item(System.Char)
  commentId: P:Microsoft.Health.PhraseAnalyzer.Normalizer.Item(System.Char)
  id: Item(System.Char)
  parent: Microsoft.Health.PhraseAnalyzer.Normalizer
  langs:
  - csharp
  - vb
  name: Item[Char]
  nameWithType: Normalizer.Item[Char]
  fullName: Microsoft.Health.PhraseAnalyzer.Normalizer.Item[System.Char]
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/Normalizer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: this[]
    path: search/PhraseAnalyzer/Normalizer.cs
    startLine: 218
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: public NormalizeChar this[char ch] { get; }
    content.vb: Public ReadOnly Property Item(ch As Char) As NormalizeChar
    parameters:
    - id: ch
      type: System.Char
      description: ''
    return:
      type: Microsoft.Health.PhraseAnalyzer.NormalizeChar
      description: ''
  overload: Microsoft.Health.PhraseAnalyzer.Normalizer.Item*
  nameWithType.vb: Normalizer.Item(Char)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.Health.PhraseAnalyzer.Normalizer.Item(System.Char)
  name.vb: Item(Char)
- uid: Microsoft.Health.PhraseAnalyzer.Normalizer.RetainCasing
  commentId: P:Microsoft.Health.PhraseAnalyzer.Normalizer.RetainCasing
  id: RetainCasing
  parent: Microsoft.Health.PhraseAnalyzer.Normalizer
  langs:
  - csharp
  - vb
  name: RetainCasing
  nameWithType: Normalizer.RetainCasing
  fullName: Microsoft.Health.PhraseAnalyzer.Normalizer.RetainCasing
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/Normalizer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: RetainCasing
    path: search/PhraseAnalyzer/Normalizer.cs
    startLine: 231
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: public bool RetainCasing { get; }
    content.vb: Public ReadOnly Property RetainCasing As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.Health.PhraseAnalyzer.Normalizer.RetainCasing*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.PhraseAnalyzer.Normalizer.Normalize(System.Char)
  commentId: M:Microsoft.Health.PhraseAnalyzer.Normalizer.Normalize(System.Char)
  id: Normalize(System.Char)
  parent: Microsoft.Health.PhraseAnalyzer.Normalizer
  langs:
  - csharp
  - vb
  name: Normalize(Char)
  nameWithType: Normalizer.Normalize(Char)
  fullName: Microsoft.Health.PhraseAnalyzer.Normalizer.Normalize(System.Char)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/Normalizer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Normalize
    path: search/PhraseAnalyzer/Normalizer.cs
    startLine: 244
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: public NormalizeChar Normalize(char ch)
    content.vb: Public Function Normalize(ch As Char) As NormalizeChar
    parameters:
    - id: ch
      type: System.Char
      description: ''
    return:
      type: Microsoft.Health.PhraseAnalyzer.NormalizeChar
      description: ''
  overload: Microsoft.Health.PhraseAnalyzer.Normalizer.Normalize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.PhraseAnalyzer.Normalizer.Normalize(System.String)
  commentId: M:Microsoft.Health.PhraseAnalyzer.Normalizer.Normalize(System.String)
  id: Normalize(System.String)
  parent: Microsoft.Health.PhraseAnalyzer.Normalizer
  langs:
  - csharp
  - vb
  name: Normalize(String)
  nameWithType: Normalizer.Normalize(String)
  fullName: Microsoft.Health.PhraseAnalyzer.Normalizer.Normalize(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/Normalizer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Normalize
    path: search/PhraseAnalyzer/Normalizer.cs
    startLine: 269
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: public string Normalize(string phrase)
    content.vb: Public Function Normalize(phrase As String) As String
    parameters:
    - id: phrase
      type: System.String
      description: ''
    return:
      type: System.String
      description: ''
  overload: Microsoft.Health.PhraseAnalyzer.Normalizer.Normalize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.PhraseAnalyzer.Normalizer.Normalize(System.String,System.Text.StringBuilder)
  commentId: M:Microsoft.Health.PhraseAnalyzer.Normalizer.Normalize(System.String,System.Text.StringBuilder)
  id: Normalize(System.String,System.Text.StringBuilder)
  parent: Microsoft.Health.PhraseAnalyzer.Normalizer
  langs:
  - csharp
  - vb
  name: Normalize(String, StringBuilder)
  nameWithType: Normalizer.Normalize(String, StringBuilder)
  fullName: Microsoft.Health.PhraseAnalyzer.Normalizer.Normalize(System.String, System.Text.StringBuilder)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/Normalizer.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Normalize
    path: search/PhraseAnalyzer/Normalizer.cs
    startLine: 285
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: public void Normalize(string phrase, StringBuilder output)
    content.vb: Public Sub Normalize(phrase As String, output As StringBuilder)
    parameters:
    - id: phrase
      type: System.String
      description: ''
    - id: output
      type: System.Text.StringBuilder
      description: ''
  overload: Microsoft.Health.PhraseAnalyzer.Normalizer.Normalize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Health.PhraseAnalyzer
  commentId: N:Microsoft.Health.PhraseAnalyzer
  isExternal: false
  name: Microsoft.Health.PhraseAnalyzer
  nameWithType: Microsoft.Health.PhraseAnalyzer
  fullName: Microsoft.Health.PhraseAnalyzer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.PhraseAnalyzer.Normalizer.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<Normalizer>()
  nameWithType: TypeHelper.ValueOrDbNull<Normalizer>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.PhraseAnalyzer.Normalizer>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of Normalizer)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.PhraseAnalyzer.Normalizer)()
  name.vb: ValueOrDbNull(Of Normalizer)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<Normalizer>
    nameWithType: TypeHelper.ValueOrDbNull<Normalizer>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.PhraseAnalyzer.Normalizer>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of Normalizer)
    nameWithType: TypeHelper.ValueOrDbNull(Of Normalizer)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.PhraseAnalyzer.Normalizer)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.PhraseAnalyzer.Normalizer
  commentId: T:Microsoft.Health.PhraseAnalyzer.Normalizer
  parent: Microsoft.Health.PhraseAnalyzer
  isExternal: false
  name: Normalizer
  nameWithType: Normalizer
  fullName: Microsoft.Health.PhraseAnalyzer.Normalizer
- uid: Microsoft.Health.PhraseAnalyzer.Normalizer.#ctor*
  commentId: Overload:Microsoft.Health.PhraseAnalyzer.Normalizer.#ctor
  isExternal: false
  name: Normalizer
  nameWithType: Normalizer.Normalizer
  fullName: Microsoft.Health.PhraseAnalyzer.Normalizer.Normalizer
- uid: Microsoft.Health.PhraseAnalyzer.NormalizeChar[]
  name: NormalizeChar[]
  nameWithType: NormalizeChar[]
  fullName: Microsoft.Health.PhraseAnalyzer.NormalizeChar[]
  nameWithType.vb: NormalizeChar()
  fullName.vb: Microsoft.Health.PhraseAnalyzer.NormalizeChar()
  name.vb: NormalizeChar()
  spec.csharp:
  - uid: Microsoft.Health.PhraseAnalyzer.NormalizeChar
    name: NormalizeChar
    nameWithType: NormalizeChar
    fullName: Microsoft.Health.PhraseAnalyzer.NormalizeChar
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.Health.PhraseAnalyzer.NormalizeChar
    name: NormalizeChar
    nameWithType: NormalizeChar
    fullName: Microsoft.Health.PhraseAnalyzer.NormalizeChar
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Health.PhraseAnalyzer.Normalizer.Item*
  commentId: Overload:Microsoft.Health.PhraseAnalyzer.Normalizer.Item
  isExternal: false
  name: Item
  nameWithType: Normalizer.Item
  fullName: Microsoft.Health.PhraseAnalyzer.Normalizer.Item
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: Microsoft.Health.PhraseAnalyzer.NormalizeChar
  commentId: T:Microsoft.Health.PhraseAnalyzer.NormalizeChar
  parent: Microsoft.Health.PhraseAnalyzer
  isExternal: false
  name: NormalizeChar
  nameWithType: NormalizeChar
  fullName: Microsoft.Health.PhraseAnalyzer.NormalizeChar
- uid: Microsoft.Health.PhraseAnalyzer.Normalizer.RetainCasing*
  commentId: Overload:Microsoft.Health.PhraseAnalyzer.Normalizer.RetainCasing
  isExternal: false
  name: RetainCasing
  nameWithType: Normalizer.RetainCasing
  fullName: Microsoft.Health.PhraseAnalyzer.Normalizer.RetainCasing
- uid: Microsoft.Health.PhraseAnalyzer.Normalizer.Normalize*
  commentId: Overload:Microsoft.Health.PhraseAnalyzer.Normalizer.Normalize
  isExternal: false
  name: Normalize
  nameWithType: Normalizer.Normalize
  fullName: Microsoft.Health.PhraseAnalyzer.Normalizer.Normalize
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Text.StringBuilder
  commentId: T:System.Text.StringBuilder
  parent: System.Text
  isExternal: true
  name: StringBuilder
  nameWithType: StringBuilder
  fullName: System.Text.StringBuilder
- uid: System.Text
  commentId: N:System.Text
  isExternal: false
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
