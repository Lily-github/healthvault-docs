### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.InvertedIndex.AutoCompleteIndex
  commentId: T:Microsoft.Health.InvertedIndex.AutoCompleteIndex
  id: AutoCompleteIndex
  parent: Microsoft.Health.InvertedIndex
  children:
  - Microsoft.Health.InvertedIndex.AutoCompleteIndex.#ctor
  - Microsoft.Health.InvertedIndex.AutoCompleteIndex.#ctor(Microsoft.Health.InvertedIndex.NormalizingWordBreaker)
  - Microsoft.Health.InvertedIndex.AutoCompleteIndex.#ctor(Microsoft.Health.InvertedIndex.NormalizingWordBreaker,Microsoft.Health.InvertedIndex.PhoneticMap)
  - Microsoft.Health.InvertedIndex.AutoCompleteIndex.AlwaysPrefixMatch
  - Microsoft.Health.InvertedIndex.AutoCompleteIndex.Boosts
  - Microsoft.Health.InvertedIndex.AutoCompleteIndex.DefaultPrefixCacheMaxTermLength
  - Microsoft.Health.InvertedIndex.AutoCompleteIndex.MaxPrefixMatches
  - Microsoft.Health.InvertedIndex.AutoCompleteIndex.PhoneticMap
  - Microsoft.Health.InvertedIndex.AutoCompleteIndex.PrefixCacheMaxTermLength
  - Microsoft.Health.InvertedIndex.AutoCompleteIndex.RecordReferences
  - Microsoft.Health.InvertedIndex.AutoCompleteIndex.Search(System.String,System.Int32)
  - Microsoft.Health.InvertedIndex.AutoCompleteIndex.Search(System.String,System.Int32,Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder)
  - Microsoft.Health.InvertedIndex.AutoCompleteIndex.SearchExact(System.String,System.Int32)
  - Microsoft.Health.InvertedIndex.AutoCompleteIndex.SearchExact(System.String,System.Int32,Microsoft.Health.InvertedIndex.VectorQueryBuilder)
  - Microsoft.Health.InvertedIndex.AutoCompleteIndex.SearchFuzzy(System.String,System.Int32)
  - Microsoft.Health.InvertedIndex.AutoCompleteIndex.StaticScores
  - Microsoft.Health.InvertedIndex.AutoCompleteIndex.Statistics
  - Microsoft.Health.InvertedIndex.AutoCompleteIndex.WordBreaker
  langs:
  - csharp
  - vb
  name: AutoCompleteIndex
  nameWithType: AutoCompleteIndex
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteIndex
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/AutoCompleteIndex.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AutoCompleteIndex
    path: search/InvertedIndex/AutoCompleteIndex.cs
    startLine: 12
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  syntax:
    content: 'public class AutoCompleteIndex : VectorTextIndex, IIndex<string, IRecordIDList>, IEnumerable<KeyValuePair<string, IRecordIDList>>, IEnumerable, IComparer<string>, ISearchIndex<string, IRecordIDList>'
    content.vb: >-
      Public Class AutoCompleteIndex
          Inherits VectorTextIndex
          Implements IIndex(Of String, IRecordIDList), IEnumerable(Of KeyValuePair(Of String, IRecordIDList)), IEnumerable, IComparer(Of String), ISearchIndex(Of String, IRecordIDList)
  inheritance:
  - System.Object
  - Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}
  - Microsoft.Health.InvertedIndex.SearchIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}
  - Microsoft.Health.InvertedIndex.TextIndex
  - Microsoft.Health.InvertedIndex.VectorTextIndex
  implements:
  - Microsoft.Health.IIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}}
  - System.Collections.IEnumerable
  - System.Collections.Generic.IComparer{System.String}
  - Microsoft.Health.InvertedIndex.ISearchIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}
  inheritedMembers:
  - Microsoft.Health.InvertedIndex.VectorTextIndex.Normals
  - Microsoft.Health.InvertedIndex.TextIndex.Resolve(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  - Microsoft.Health.InvertedIndex.TextIndex.ResolvePrefix(System.String,System.Int32)
  - Microsoft.Health.InvertedIndex.TextIndex.ResolvePrefix(System.String,System.Int32,System.Boolean)
  - Microsoft.Health.InvertedIndex.TextIndex.ResolvePrefix(System.String,System.Int32,Microsoft.Health.StructList{Microsoft.Health.InvertedIndex.RecordIDEnumerator}@,System.Boolean)
  - Microsoft.Health.InvertedIndex.SearchIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Item(System.String)
  - Microsoft.Health.InvertedIndex.SearchIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.GetTermFrequency(System.String)
  - Microsoft.Health.InvertedIndex.SearchIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Resolve(System.String)
  - Microsoft.Health.InvertedIndex.SearchIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Resolve(System.Collections.Generic.IList{System.String})
  - Microsoft.Health.InvertedIndex.SearchIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Resolve(System.Collections.Generic.IList{System.String},System.Int32,System.Int32)
  - Microsoft.Health.InvertedIndex.SearchIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Resolve(System.Collections.Generic.IEnumerable{System.String})
  - Microsoft.Health.InvertedIndex.SearchIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Resolve(System.Collections.Generic.IList{System.String},Microsoft.Health.StructList{Microsoft.Health.InvertedIndex.RecordIDEnumerator}@)
  - Microsoft.Health.InvertedIndex.SearchIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Resolve(System.Collections.Generic.IList{System.String},System.Int32,System.Int32,Microsoft.Health.StructList{Microsoft.Health.InvertedIndex.RecordIDEnumerator}@)
  - Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Count
  - Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Item(System.Int32)
  - Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.IsReady
  - Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Keys
  - Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Values
  - Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.ContainsKey(System.String)
  - Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Get(System.String,Microsoft.Health.InvertedIndex.IRecordIDList@)
  - Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Get(System.String,System.Collections.Generic.IComparer{System.String},Microsoft.Health.InvertedIndex.IRecordIDList@)
  - Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.GetMultiple(System.String)
  - Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.GetKeys(System.String,System.Collections.Generic.IComparer{System.String})
  - Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Add(System.String,Microsoft.Health.InvertedIndex.IRecordIDList)
  - Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Add(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Health.InvertedIndex.IRecordIDList})
  - Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Add(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}})
  - Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.SetValue(System.String,Microsoft.Health.InvertedIndex.IRecordIDList)
  - Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.SetValueAt(System.Int32,Microsoft.Health.InvertedIndex.IRecordIDList)
  - Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.BuildIndex
  - Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.BuildIndex(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}})
  - Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.EnsureCapacity(System.Int32)
  - Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.IndexOf(System.String)
  - Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.IndexOf(System.String,System.Collections.Generic.IComparer{System.String})
  - Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.EnsureReady
  - Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.GetEnumerator
  - Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.System#Collections#IEnumerable#GetEnumerator
  - Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Compare(System.String,System.String)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.InvertedIndex.AutoCompleteIndex.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.InvertedIndex.AutoCompleteIndex.DefaultPrefixCacheMaxTermLength
  commentId: F:Microsoft.Health.InvertedIndex.AutoCompleteIndex.DefaultPrefixCacheMaxTermLength
  id: DefaultPrefixCacheMaxTermLength
  parent: Microsoft.Health.InvertedIndex.AutoCompleteIndex
  langs:
  - csharp
  - vb
  name: DefaultPrefixCacheMaxTermLength
  nameWithType: AutoCompleteIndex.DefaultPrefixCacheMaxTermLength
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteIndex.DefaultPrefixCacheMaxTermLength
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/AutoCompleteIndex.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DefaultPrefixCacheMaxTermLength
    path: search/InvertedIndex/AutoCompleteIndex.cs
    startLine: 14
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  syntax:
    content: public const int DefaultPrefixCacheMaxTermLength = 3
    content.vb: Public Const DefaultPrefixCacheMaxTermLength As Integer = 3
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.InvertedIndex.AutoCompleteIndex.#ctor
  commentId: M:Microsoft.Health.InvertedIndex.AutoCompleteIndex.#ctor
  id: '#ctor'
  parent: Microsoft.Health.InvertedIndex.AutoCompleteIndex
  langs:
  - csharp
  - vb
  name: AutoCompleteIndex()
  nameWithType: AutoCompleteIndex.AutoCompleteIndex()
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteIndex.AutoCompleteIndex()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/AutoCompleteIndex.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: search/InvertedIndex/AutoCompleteIndex.cs
    startLine: 29
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public AutoCompleteIndex()
    content.vb: Public Sub New
  overload: Microsoft.Health.InvertedIndex.AutoCompleteIndex.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.AutoCompleteIndex.#ctor(Microsoft.Health.InvertedIndex.NormalizingWordBreaker)
  commentId: M:Microsoft.Health.InvertedIndex.AutoCompleteIndex.#ctor(Microsoft.Health.InvertedIndex.NormalizingWordBreaker)
  id: '#ctor(Microsoft.Health.InvertedIndex.NormalizingWordBreaker)'
  parent: Microsoft.Health.InvertedIndex.AutoCompleteIndex
  langs:
  - csharp
  - vb
  name: AutoCompleteIndex(NormalizingWordBreaker)
  nameWithType: AutoCompleteIndex.AutoCompleteIndex(NormalizingWordBreaker)
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteIndex.AutoCompleteIndex(Microsoft.Health.InvertedIndex.NormalizingWordBreaker)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/AutoCompleteIndex.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: search/InvertedIndex/AutoCompleteIndex.cs
    startLine: 38
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public AutoCompleteIndex(NormalizingWordBreaker wordBreaker)
    content.vb: Public Sub New(wordBreaker As NormalizingWordBreaker)
    parameters:
    - id: wordBreaker
      type: Microsoft.Health.InvertedIndex.NormalizingWordBreaker
      description: ''
  overload: Microsoft.Health.InvertedIndex.AutoCompleteIndex.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.AutoCompleteIndex.#ctor(Microsoft.Health.InvertedIndex.NormalizingWordBreaker,Microsoft.Health.InvertedIndex.PhoneticMap)
  commentId: M:Microsoft.Health.InvertedIndex.AutoCompleteIndex.#ctor(Microsoft.Health.InvertedIndex.NormalizingWordBreaker,Microsoft.Health.InvertedIndex.PhoneticMap)
  id: '#ctor(Microsoft.Health.InvertedIndex.NormalizingWordBreaker,Microsoft.Health.InvertedIndex.PhoneticMap)'
  parent: Microsoft.Health.InvertedIndex.AutoCompleteIndex
  langs:
  - csharp
  - vb
  name: AutoCompleteIndex(NormalizingWordBreaker, PhoneticMap)
  nameWithType: AutoCompleteIndex.AutoCompleteIndex(NormalizingWordBreaker, PhoneticMap)
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteIndex.AutoCompleteIndex(Microsoft.Health.InvertedIndex.NormalizingWordBreaker, Microsoft.Health.InvertedIndex.PhoneticMap)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/AutoCompleteIndex.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: search/InvertedIndex/AutoCompleteIndex.cs
    startLine: 53
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public AutoCompleteIndex(NormalizingWordBreaker wordBreaker, PhoneticMap phoneticMap)
    content.vb: Public Sub New(wordBreaker As NormalizingWordBreaker, phoneticMap As PhoneticMap)
    parameters:
    - id: wordBreaker
      type: Microsoft.Health.InvertedIndex.NormalizingWordBreaker
      description: ''
    - id: phoneticMap
      type: Microsoft.Health.InvertedIndex.PhoneticMap
      description: ''
  overload: Microsoft.Health.InvertedIndex.AutoCompleteIndex.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.AutoCompleteIndex.PhoneticMap
  commentId: P:Microsoft.Health.InvertedIndex.AutoCompleteIndex.PhoneticMap
  id: PhoneticMap
  parent: Microsoft.Health.InvertedIndex.AutoCompleteIndex
  langs:
  - csharp
  - vb
  name: PhoneticMap
  nameWithType: AutoCompleteIndex.PhoneticMap
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteIndex.PhoneticMap
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/AutoCompleteIndex.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: PhoneticMap
    path: search/InvertedIndex/AutoCompleteIndex.cs
    startLine: 62
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public PhoneticMap PhoneticMap { get; set; }
    content.vb: Public Property PhoneticMap As PhoneticMap
    parameters: []
    return:
      type: Microsoft.Health.InvertedIndex.PhoneticMap
  overload: Microsoft.Health.InvertedIndex.AutoCompleteIndex.PhoneticMap*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.AutoCompleteIndex.StaticScores
  commentId: P:Microsoft.Health.InvertedIndex.AutoCompleteIndex.StaticScores
  id: StaticScores
  parent: Microsoft.Health.InvertedIndex.AutoCompleteIndex
  langs:
  - csharp
  - vb
  name: StaticScores
  nameWithType: AutoCompleteIndex.StaticScores
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteIndex.StaticScores
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/AutoCompleteIndex.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: StaticScores
    path: search/InvertedIndex/AutoCompleteIndex.cs
    startLine: 77
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public IStaticScoreTable StaticScores { get; set; }
    content.vb: Public Property StaticScores As IStaticScoreTable
    parameters: []
    return:
      type: Microsoft.Health.InvertedIndex.IStaticScoreTable
  overload: Microsoft.Health.InvertedIndex.AutoCompleteIndex.StaticScores*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.AutoCompleteIndex.Statistics
  commentId: P:Microsoft.Health.InvertedIndex.AutoCompleteIndex.Statistics
  id: Statistics
  parent: Microsoft.Health.InvertedIndex.AutoCompleteIndex
  langs:
  - csharp
  - vb
  name: Statistics
  nameWithType: AutoCompleteIndex.Statistics
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteIndex.Statistics
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/AutoCompleteIndex.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Statistics
    path: search/InvertedIndex/AutoCompleteIndex.cs
    startLine: 92
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\nCorpus statistics are necessary for SearchExact to work\n"
  example: []
  syntax:
    content: public ICorpusStatistics Statistics { get; set; }
    content.vb: Public Property Statistics As ICorpusStatistics
    parameters: []
    return:
      type: Microsoft.Health.InvertedIndex.ICorpusStatistics
  overload: Microsoft.Health.InvertedIndex.AutoCompleteIndex.Statistics*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.AutoCompleteIndex.RecordReferences
  commentId: P:Microsoft.Health.InvertedIndex.AutoCompleteIndex.RecordReferences
  id: RecordReferences
  parent: Microsoft.Health.InvertedIndex.AutoCompleteIndex
  langs:
  - csharp
  - vb
  name: RecordReferences
  nameWithType: AutoCompleteIndex.RecordReferences
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteIndex.RecordReferences
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/AutoCompleteIndex.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: RecordReferences
    path: search/InvertedIndex/AutoCompleteIndex.cs
    startLine: 107
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\nKeywords, synonyms, acronyms: are all indexed, but reference the ORIGINAL, BASE record\n"
  example: []
  syntax:
    content: public IRecordPropertyList<uint> RecordReferences { get; set; }
    content.vb: Public Property RecordReferences As IRecordPropertyList(Of UInteger)
    parameters: []
    return:
      type: Microsoft.Health.InvertedIndex.IRecordPropertyList{System.UInt32}
  overload: Microsoft.Health.InvertedIndex.AutoCompleteIndex.RecordReferences*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.AutoCompleteIndex.Boosts
  commentId: P:Microsoft.Health.InvertedIndex.AutoCompleteIndex.Boosts
  id: Boosts
  parent: Microsoft.Health.InvertedIndex.AutoCompleteIndex
  langs:
  - csharp
  - vb
  name: Boosts
  nameWithType: AutoCompleteIndex.Boosts
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteIndex.Boosts
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/AutoCompleteIndex.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Boosts
    path: search/InvertedIndex/AutoCompleteIndex.cs
    startLine: 122
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public TermBoosts Boosts { get; set; }
    content.vb: Public Property Boosts As TermBoosts
    parameters: []
    return:
      type: Microsoft.Health.InvertedIndex.TermBoosts
  overload: Microsoft.Health.InvertedIndex.AutoCompleteIndex.Boosts*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.AutoCompleteIndex.AlwaysPrefixMatch
  commentId: F:Microsoft.Health.InvertedIndex.AutoCompleteIndex.AlwaysPrefixMatch
  id: AlwaysPrefixMatch
  parent: Microsoft.Health.InvertedIndex.AutoCompleteIndex
  langs:
  - csharp
  - vb
  name: AlwaysPrefixMatch
  nameWithType: AutoCompleteIndex.AlwaysPrefixMatch
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteIndex.AlwaysPrefixMatch
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/AutoCompleteIndex.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AlwaysPrefixMatch
    path: search/InvertedIndex/AutoCompleteIndex.cs
    startLine: 144
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\nSometimes, a term will have an exact match, but there may be other interesting \"longer\" \nmatches for the same term (cancer, cancerous..). \nThose are useful to display in autocomplete scenarios - BUT NOT IN AUTOCODE\nMark this false for AUTOCODE\n"
  example: []
  syntax:
    content: public bool AlwaysPrefixMatch
    content.vb: Public AlwaysPrefixMatch As Boolean
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.AutoCompleteIndex.PrefixCacheMaxTermLength
  commentId: F:Microsoft.Health.InvertedIndex.AutoCompleteIndex.PrefixCacheMaxTermLength
  id: PrefixCacheMaxTermLength
  parent: Microsoft.Health.InvertedIndex.AutoCompleteIndex
  langs:
  - csharp
  - vb
  name: PrefixCacheMaxTermLength
  nameWithType: AutoCompleteIndex.PrefixCacheMaxTermLength
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteIndex.PrefixCacheMaxTermLength
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/AutoCompleteIndex.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: PrefixCacheMaxTermLength
    path: search/InvertedIndex/AutoCompleteIndex.cs
    startLine: 151
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\nPrefix resolutions are frequent, but may be expensive. \nTo improve perf, cache prefix resolutions for terms whose\nlengths are LESS THAN this threshold.  \n"
  example: []
  syntax:
    content: public int PrefixCacheMaxTermLength
    content.vb: Public PrefixCacheMaxTermLength As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.AutoCompleteIndex.MaxPrefixMatches
  commentId: P:Microsoft.Health.InvertedIndex.AutoCompleteIndex.MaxPrefixMatches
  id: MaxPrefixMatches
  parent: Microsoft.Health.InvertedIndex.AutoCompleteIndex
  langs:
  - csharp
  - vb
  name: MaxPrefixMatches
  nameWithType: AutoCompleteIndex.MaxPrefixMatches
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteIndex.MaxPrefixMatches
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/AutoCompleteIndex.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: MaxPrefixMatches
    path: search/InvertedIndex/AutoCompleteIndex.cs
    startLine: 156
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\nWhen doing prefix resolutions, restrict the # of prefix matches to this... \n"
  example: []
  syntax:
    content: public int MaxPrefixMatches { get; set; }
    content.vb: Public Property MaxPrefixMatches As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Health.InvertedIndex.AutoCompleteIndex.MaxPrefixMatches*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.AutoCompleteIndex.WordBreaker
  commentId: P:Microsoft.Health.InvertedIndex.AutoCompleteIndex.WordBreaker
  id: WordBreaker
  parent: Microsoft.Health.InvertedIndex.AutoCompleteIndex
  langs:
  - csharp
  - vb
  name: WordBreaker
  nameWithType: AutoCompleteIndex.WordBreaker
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteIndex.WordBreaker
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/AutoCompleteIndex.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WordBreaker
    path: search/InvertedIndex/AutoCompleteIndex.cs
    startLine: 193
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public NormalizingWordBreaker WordBreaker { get; set; }
    content.vb: Public Property WordBreaker As NormalizingWordBreaker
    parameters: []
    return:
      type: Microsoft.Health.InvertedIndex.NormalizingWordBreaker
  overload: Microsoft.Health.InvertedIndex.AutoCompleteIndex.WordBreaker*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.AutoCompleteIndex.Search(System.String,System.Int32)
  commentId: M:Microsoft.Health.InvertedIndex.AutoCompleteIndex.Search(System.String,System.Int32)
  id: Search(System.String,System.Int32)
  parent: Microsoft.Health.InvertedIndex.AutoCompleteIndex
  langs:
  - csharp
  - vb
  name: Search(String, Int32)
  nameWithType: AutoCompleteIndex.Search(String, Int32)
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteIndex.Search(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/AutoCompleteIndex.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Search
    path: search/InvertedIndex/AutoCompleteIndex.cs
    startLine: 211
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public MatchCollector Search(string text, int maxResults)
    content.vb: Public Function Search(text As String, maxResults As Integer) As MatchCollector
    parameters:
    - id: text
      type: System.String
      description: ''
    - id: maxResults
      type: System.Int32
      description: ''
    return:
      type: Microsoft.Health.InvertedIndex.MatchCollector
      description: ''
  overload: Microsoft.Health.InvertedIndex.AutoCompleteIndex.Search*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.AutoCompleteIndex.SearchFuzzy(System.String,System.Int32)
  commentId: M:Microsoft.Health.InvertedIndex.AutoCompleteIndex.SearchFuzzy(System.String,System.Int32)
  id: SearchFuzzy(System.String,System.Int32)
  parent: Microsoft.Health.InvertedIndex.AutoCompleteIndex
  langs:
  - csharp
  - vb
  name: SearchFuzzy(String, Int32)
  nameWithType: AutoCompleteIndex.SearchFuzzy(String, Int32)
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteIndex.SearchFuzzy(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/AutoCompleteIndex.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SearchFuzzy
    path: search/InvertedIndex/AutoCompleteIndex.cs
    startLine: 222
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public MatchCollector SearchFuzzy(string text, int maxResults)
    content.vb: Public Function SearchFuzzy(text As String, maxResults As Integer) As MatchCollector
    parameters:
    - id: text
      type: System.String
      description: ''
    - id: maxResults
      type: System.Int32
      description: ''
    return:
      type: Microsoft.Health.InvertedIndex.MatchCollector
      description: ''
  overload: Microsoft.Health.InvertedIndex.AutoCompleteIndex.SearchFuzzy*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.AutoCompleteIndex.Search(System.String,System.Int32,Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder)
  commentId: M:Microsoft.Health.InvertedIndex.AutoCompleteIndex.Search(System.String,System.Int32,Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder)
  id: Search(System.String,System.Int32,Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder)
  parent: Microsoft.Health.InvertedIndex.AutoCompleteIndex
  langs:
  - csharp
  - vb
  name: Search(String, Int32, AutoCompleteQueryBuilder)
  nameWithType: AutoCompleteIndex.Search(String, Int32, AutoCompleteQueryBuilder)
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteIndex.Search(System.String, System.Int32, Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/AutoCompleteIndex.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Search
    path: search/InvertedIndex/AutoCompleteIndex.cs
    startLine: 238
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\nUse this to customize how the query is built \n(set up flags and options on the queryBuilder). \nYou can also use this if you pool builders.\n"
  example: []
  syntax:
    content: public MatchCollector Search(string text, int maxResults, AutoCompleteQueryBuilder queryBuilder)
    content.vb: Public Function Search(text As String, maxResults As Integer, queryBuilder As AutoCompleteQueryBuilder) As MatchCollector
    parameters:
    - id: text
      type: System.String
      description: ''
    - id: maxResults
      type: System.Int32
      description: ''
    - id: queryBuilder
      type: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder
      description: ''
    return:
      type: Microsoft.Health.InvertedIndex.MatchCollector
      description: ''
  overload: Microsoft.Health.InvertedIndex.AutoCompleteIndex.Search*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.AutoCompleteIndex.SearchExact(System.String,System.Int32)
  commentId: M:Microsoft.Health.InvertedIndex.AutoCompleteIndex.SearchExact(System.String,System.Int32)
  id: SearchExact(System.String,System.Int32)
  parent: Microsoft.Health.InvertedIndex.AutoCompleteIndex
  langs:
  - csharp
  - vb
  name: SearchExact(String, Int32)
  nameWithType: AutoCompleteIndex.SearchExact(String, Int32)
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteIndex.SearchExact(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/AutoCompleteIndex.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SearchExact
    path: search/InvertedIndex/AutoCompleteIndex.cs
    startLine: 266
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public MatchCollector SearchExact(string text, int maxResults)
    content.vb: Public Function SearchExact(text As String, maxResults As Integer) As MatchCollector
    parameters:
    - id: text
      type: System.String
      description: ''
    - id: maxResults
      type: System.Int32
      description: ''
    return:
      type: Microsoft.Health.InvertedIndex.MatchCollector
      description: ''
  overload: Microsoft.Health.InvertedIndex.AutoCompleteIndex.SearchExact*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.AutoCompleteIndex.SearchExact(System.String,System.Int32,Microsoft.Health.InvertedIndex.VectorQueryBuilder)
  commentId: M:Microsoft.Health.InvertedIndex.AutoCompleteIndex.SearchExact(System.String,System.Int32,Microsoft.Health.InvertedIndex.VectorQueryBuilder)
  id: SearchExact(System.String,System.Int32,Microsoft.Health.InvertedIndex.VectorQueryBuilder)
  parent: Microsoft.Health.InvertedIndex.AutoCompleteIndex
  langs:
  - csharp
  - vb
  name: SearchExact(String, Int32, VectorQueryBuilder)
  nameWithType: AutoCompleteIndex.SearchExact(String, Int32, VectorQueryBuilder)
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteIndex.SearchExact(System.String, System.Int32, Microsoft.Health.InvertedIndex.VectorQueryBuilder)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/AutoCompleteIndex.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SearchExact
    path: search/InvertedIndex/AutoCompleteIndex.cs
    startLine: 278
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public MatchCollector SearchExact(string text, int maxResults, VectorQueryBuilder queryBuilder)
    content.vb: Public Function SearchExact(text As String, maxResults As Integer, queryBuilder As VectorQueryBuilder) As MatchCollector
    parameters:
    - id: text
      type: System.String
      description: ''
    - id: maxResults
      type: System.Int32
      description: ''
    - id: queryBuilder
      type: Microsoft.Health.InvertedIndex.VectorQueryBuilder
      description: ''
    return:
      type: Microsoft.Health.InvertedIndex.MatchCollector
      description: ''
  overload: Microsoft.Health.InvertedIndex.AutoCompleteIndex.SearchExact*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Health.InvertedIndex
  commentId: N:Microsoft.Health.InvertedIndex
  isExternal: false
  name: Microsoft.Health.InvertedIndex
  nameWithType: Microsoft.Health.InvertedIndex
  fullName: Microsoft.Health.InvertedIndex
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}
  commentId: T:Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}
  parent: Microsoft.Health
  definition: Microsoft.Health.SortedIndex`2
  name: SortedIndex<String, IRecordIDList>
  nameWithType: SortedIndex<String, IRecordIDList>
  fullName: Microsoft.Health.SortedIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>
  nameWithType.vb: SortedIndex(Of String, IRecordIDList)
  fullName.vb: Microsoft.Health.SortedIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList)
  name.vb: SortedIndex(Of String, IRecordIDList)
  spec.csharp:
  - uid: Microsoft.Health.SortedIndex`2
    name: SortedIndex
    nameWithType: SortedIndex
    fullName: Microsoft.Health.SortedIndex
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.InvertedIndex.IRecordIDList
    name: IRecordIDList
    nameWithType: IRecordIDList
    fullName: Microsoft.Health.InvertedIndex.IRecordIDList
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.SortedIndex`2
    name: SortedIndex
    nameWithType: SortedIndex
    fullName: Microsoft.Health.SortedIndex
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.InvertedIndex.IRecordIDList
    name: IRecordIDList
    nameWithType: IRecordIDList
    fullName: Microsoft.Health.InvertedIndex.IRecordIDList
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.SearchIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}
  commentId: T:Microsoft.Health.InvertedIndex.SearchIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}
  parent: Microsoft.Health.InvertedIndex
  definition: Microsoft.Health.InvertedIndex.SearchIndex`2
  name: SearchIndex<String, IRecordIDList>
  nameWithType: SearchIndex<String, IRecordIDList>
  fullName: Microsoft.Health.InvertedIndex.SearchIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>
  nameWithType.vb: SearchIndex(Of String, IRecordIDList)
  fullName.vb: Microsoft.Health.InvertedIndex.SearchIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList)
  name.vb: SearchIndex(Of String, IRecordIDList)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.SearchIndex`2
    name: SearchIndex
    nameWithType: SearchIndex
    fullName: Microsoft.Health.InvertedIndex.SearchIndex
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.InvertedIndex.IRecordIDList
    name: IRecordIDList
    nameWithType: IRecordIDList
    fullName: Microsoft.Health.InvertedIndex.IRecordIDList
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.SearchIndex`2
    name: SearchIndex
    nameWithType: SearchIndex
    fullName: Microsoft.Health.InvertedIndex.SearchIndex
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.InvertedIndex.IRecordIDList
    name: IRecordIDList
    nameWithType: IRecordIDList
    fullName: Microsoft.Health.InvertedIndex.IRecordIDList
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.TextIndex
  commentId: T:Microsoft.Health.InvertedIndex.TextIndex
  parent: Microsoft.Health.InvertedIndex
  isExternal: false
  name: TextIndex
  nameWithType: TextIndex
  fullName: Microsoft.Health.InvertedIndex.TextIndex
- uid: Microsoft.Health.InvertedIndex.VectorTextIndex
  commentId: T:Microsoft.Health.InvertedIndex.VectorTextIndex
  parent: Microsoft.Health.InvertedIndex
  isExternal: false
  name: VectorTextIndex
  nameWithType: VectorTextIndex
  fullName: Microsoft.Health.InvertedIndex.VectorTextIndex
- uid: Microsoft.Health.IIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}
  commentId: T:Microsoft.Health.IIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}
  parent: Microsoft.Health
  definition: Microsoft.Health.IIndex`2
  name: IIndex<String, IRecordIDList>
  nameWithType: IIndex<String, IRecordIDList>
  fullName: Microsoft.Health.IIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>
  nameWithType.vb: IIndex(Of String, IRecordIDList)
  fullName.vb: Microsoft.Health.IIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList)
  name.vb: IIndex(Of String, IRecordIDList)
  spec.csharp:
  - uid: Microsoft.Health.IIndex`2
    name: IIndex
    nameWithType: IIndex
    fullName: Microsoft.Health.IIndex
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.InvertedIndex.IRecordIDList
    name: IRecordIDList
    nameWithType: IRecordIDList
    fullName: Microsoft.Health.InvertedIndex.IRecordIDList
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.IIndex`2
    name: IIndex
    nameWithType: IIndex
    fullName: Microsoft.Health.IIndex
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.InvertedIndex.IRecordIDList
    name: IRecordIDList
    nameWithType: IRecordIDList
    fullName: Microsoft.Health.InvertedIndex.IRecordIDList
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<String, IRecordIDList>>
  nameWithType: IEnumerable<KeyValuePair<String, IRecordIDList>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, IRecordIDList))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList))
  name.vb: IEnumerable(Of KeyValuePair(Of String, IRecordIDList))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.InvertedIndex.IRecordIDList
    name: IRecordIDList
    nameWithType: IRecordIDList
    fullName: Microsoft.Health.InvertedIndex.IRecordIDList
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.InvertedIndex.IRecordIDList
    name: IRecordIDList
    nameWithType: IRecordIDList
    fullName: Microsoft.Health.InvertedIndex.IRecordIDList
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Collections.Generic.IComparer{System.String}
  commentId: T:System.Collections.Generic.IComparer{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IComparer`1
  name: IComparer<String>
  nameWithType: IComparer<String>
  fullName: System.Collections.Generic.IComparer<System.String>
  nameWithType.vb: IComparer(Of String)
  fullName.vb: System.Collections.Generic.IComparer(Of System.String)
  name.vb: IComparer(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.ISearchIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}
  commentId: T:Microsoft.Health.InvertedIndex.ISearchIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}
  parent: Microsoft.Health.InvertedIndex
  definition: Microsoft.Health.InvertedIndex.ISearchIndex`2
  name: ISearchIndex<String, IRecordIDList>
  nameWithType: ISearchIndex<String, IRecordIDList>
  fullName: Microsoft.Health.InvertedIndex.ISearchIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>
  nameWithType.vb: ISearchIndex(Of String, IRecordIDList)
  fullName.vb: Microsoft.Health.InvertedIndex.ISearchIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList)
  name.vb: ISearchIndex(Of String, IRecordIDList)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndex`2
    name: ISearchIndex
    nameWithType: ISearchIndex
    fullName: Microsoft.Health.InvertedIndex.ISearchIndex
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.InvertedIndex.IRecordIDList
    name: IRecordIDList
    nameWithType: IRecordIDList
    fullName: Microsoft.Health.InvertedIndex.IRecordIDList
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndex`2
    name: ISearchIndex
    nameWithType: ISearchIndex
    fullName: Microsoft.Health.InvertedIndex.ISearchIndex
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.InvertedIndex.IRecordIDList
    name: IRecordIDList
    nameWithType: IRecordIDList
    fullName: Microsoft.Health.InvertedIndex.IRecordIDList
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.VectorTextIndex.Normals
  commentId: P:Microsoft.Health.InvertedIndex.VectorTextIndex.Normals
  parent: Microsoft.Health.InvertedIndex.VectorTextIndex
  isExternal: false
  name: Normals
  nameWithType: VectorTextIndex.Normals
  fullName: Microsoft.Health.InvertedIndex.VectorTextIndex.Normals
- uid: Microsoft.Health.InvertedIndex.TextIndex.Resolve(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  commentId: M:Microsoft.Health.InvertedIndex.TextIndex.Resolve(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  parent: Microsoft.Health.InvertedIndex.TextIndex
  isExternal: true
  name: Resolve(IList<String>, AnalyzerMatch)
  nameWithType: TextIndex.Resolve(IList<String>, AnalyzerMatch)
  fullName: Microsoft.Health.InvertedIndex.TextIndex.Resolve(System.Collections.Generic.IList<System.String>, Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  nameWithType.vb: TextIndex.Resolve(IList(Of String), AnalyzerMatch)
  fullName.vb: Microsoft.Health.InvertedIndex.TextIndex.Resolve(System.Collections.Generic.IList(Of System.String), Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
  name.vb: Resolve(IList(Of String), AnalyzerMatch)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.TextIndex.Resolve(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
    name: Resolve
    nameWithType: TextIndex.Resolve
    fullName: Microsoft.Health.InvertedIndex.TextIndex.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
    name: AnalyzerMatch
    nameWithType: AnalyzerMatch
    fullName: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.TextIndex.Resolve(System.Collections.Generic.IList{System.String},Microsoft.Health.PhraseAnalyzer.AnalyzerMatch)
    name: Resolve
    nameWithType: TextIndex.Resolve
    fullName: Microsoft.Health.InvertedIndex.TextIndex.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
    name: AnalyzerMatch
    nameWithType: AnalyzerMatch
    fullName: Microsoft.Health.PhraseAnalyzer.AnalyzerMatch
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.TextIndex.ResolvePrefix(System.String,System.Int32)
  commentId: M:Microsoft.Health.InvertedIndex.TextIndex.ResolvePrefix(System.String,System.Int32)
  parent: Microsoft.Health.InvertedIndex.TextIndex
  isExternal: true
  name: ResolvePrefix(String, Int32)
  nameWithType: TextIndex.ResolvePrefix(String, Int32)
  fullName: Microsoft.Health.InvertedIndex.TextIndex.ResolvePrefix(System.String, System.Int32)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.TextIndex.ResolvePrefix(System.String,System.Int32)
    name: ResolvePrefix
    nameWithType: TextIndex.ResolvePrefix
    fullName: Microsoft.Health.InvertedIndex.TextIndex.ResolvePrefix
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.TextIndex.ResolvePrefix(System.String,System.Int32)
    name: ResolvePrefix
    nameWithType: TextIndex.ResolvePrefix
    fullName: Microsoft.Health.InvertedIndex.TextIndex.ResolvePrefix
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.TextIndex.ResolvePrefix(System.String,System.Int32,System.Boolean)
  commentId: M:Microsoft.Health.InvertedIndex.TextIndex.ResolvePrefix(System.String,System.Int32,System.Boolean)
  parent: Microsoft.Health.InvertedIndex.TextIndex
  isExternal: true
  name: ResolvePrefix(String, Int32, Boolean)
  nameWithType: TextIndex.ResolvePrefix(String, Int32, Boolean)
  fullName: Microsoft.Health.InvertedIndex.TextIndex.ResolvePrefix(System.String, System.Int32, System.Boolean)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.TextIndex.ResolvePrefix(System.String,System.Int32,System.Boolean)
    name: ResolvePrefix
    nameWithType: TextIndex.ResolvePrefix
    fullName: Microsoft.Health.InvertedIndex.TextIndex.ResolvePrefix
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.TextIndex.ResolvePrefix(System.String,System.Int32,System.Boolean)
    name: ResolvePrefix
    nameWithType: TextIndex.ResolvePrefix
    fullName: Microsoft.Health.InvertedIndex.TextIndex.ResolvePrefix
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.TextIndex.ResolvePrefix(System.String,System.Int32,Microsoft.Health.StructList{Microsoft.Health.InvertedIndex.RecordIDEnumerator}@,System.Boolean)
  commentId: M:Microsoft.Health.InvertedIndex.TextIndex.ResolvePrefix(System.String,System.Int32,Microsoft.Health.StructList{Microsoft.Health.InvertedIndex.RecordIDEnumerator}@,System.Boolean)
  parent: Microsoft.Health.InvertedIndex.TextIndex
  isExternal: true
  name: ResolvePrefix(String, Int32, StructList<RecordIDEnumerator>, Boolean)
  nameWithType: TextIndex.ResolvePrefix(String, Int32, StructList<RecordIDEnumerator>, Boolean)
  fullName: Microsoft.Health.InvertedIndex.TextIndex.ResolvePrefix(System.String, System.Int32, Microsoft.Health.StructList<Microsoft.Health.InvertedIndex.RecordIDEnumerator>, System.Boolean)
  nameWithType.vb: TextIndex.ResolvePrefix(String, Int32, StructList(Of RecordIDEnumerator), Boolean)
  fullName.vb: Microsoft.Health.InvertedIndex.TextIndex.ResolvePrefix(System.String, System.Int32, Microsoft.Health.StructList(Of Microsoft.Health.InvertedIndex.RecordIDEnumerator), System.Boolean)
  name.vb: ResolvePrefix(String, Int32, StructList(Of RecordIDEnumerator), Boolean)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.TextIndex.ResolvePrefix(System.String,System.Int32,Microsoft.Health.StructList{Microsoft.Health.InvertedIndex.RecordIDEnumerator}@,System.Boolean)
    name: ResolvePrefix
    nameWithType: TextIndex.ResolvePrefix
    fullName: Microsoft.Health.InvertedIndex.TextIndex.ResolvePrefix
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.StructList`1
    name: StructList
    nameWithType: StructList
    fullName: Microsoft.Health.StructList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.InvertedIndex.RecordIDEnumerator
    name: RecordIDEnumerator
    nameWithType: RecordIDEnumerator
    fullName: Microsoft.Health.InvertedIndex.RecordIDEnumerator
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.TextIndex.ResolvePrefix(System.String,System.Int32,Microsoft.Health.StructList{Microsoft.Health.InvertedIndex.RecordIDEnumerator}@,System.Boolean)
    name: ResolvePrefix
    nameWithType: TextIndex.ResolvePrefix
    fullName: Microsoft.Health.InvertedIndex.TextIndex.ResolvePrefix
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.StructList`1
    name: StructList
    nameWithType: StructList
    fullName: Microsoft.Health.StructList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.InvertedIndex.RecordIDEnumerator
    name: RecordIDEnumerator
    nameWithType: RecordIDEnumerator
    fullName: Microsoft.Health.InvertedIndex.RecordIDEnumerator
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.SearchIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Item(System.String)
  commentId: P:Microsoft.Health.InvertedIndex.SearchIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Item(System.String)
  parent: Microsoft.Health.InvertedIndex.SearchIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}
  definition: Microsoft.Health.InvertedIndex.SearchIndex`2.Item(`0)
  name: Item[String]
  nameWithType: SearchIndex<String, IRecordIDList>.Item[String]
  fullName: Microsoft.Health.InvertedIndex.SearchIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.Item[System.String]
  nameWithType.vb: SearchIndex(Of String, IRecordIDList).Item(String)
  fullName.vb: Microsoft.Health.InvertedIndex.SearchIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.SearchIndex`2.Item(`0)
    name: Item
    nameWithType: SearchIndex<String, IRecordIDList>.Item
    fullName: Microsoft.Health.InvertedIndex.SearchIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.SearchIndex`2.Item(`0)
    name: Item
    nameWithType: SearchIndex(Of String, IRecordIDList).Item
    fullName: Microsoft.Health.InvertedIndex.SearchIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.SearchIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.GetTermFrequency(System.String)
  commentId: M:Microsoft.Health.InvertedIndex.SearchIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.GetTermFrequency(System.String)
  parent: Microsoft.Health.InvertedIndex.SearchIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}
  definition: Microsoft.Health.InvertedIndex.SearchIndex`2.GetTermFrequency(`0)
  name: GetTermFrequency(String)
  nameWithType: SearchIndex<String, IRecordIDList>.GetTermFrequency(String)
  fullName: Microsoft.Health.InvertedIndex.SearchIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.GetTermFrequency(System.String)
  nameWithType.vb: SearchIndex(Of String, IRecordIDList).GetTermFrequency(String)
  fullName.vb: Microsoft.Health.InvertedIndex.SearchIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).GetTermFrequency(System.String)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.SearchIndex`2.GetTermFrequency(`0)
    name: GetTermFrequency
    nameWithType: SearchIndex<String, IRecordIDList>.GetTermFrequency
    fullName: Microsoft.Health.InvertedIndex.SearchIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.GetTermFrequency
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.SearchIndex`2.GetTermFrequency(`0)
    name: GetTermFrequency
    nameWithType: SearchIndex(Of String, IRecordIDList).GetTermFrequency
    fullName: Microsoft.Health.InvertedIndex.SearchIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).GetTermFrequency
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.SearchIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Resolve(System.String)
  commentId: M:Microsoft.Health.InvertedIndex.SearchIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Resolve(System.String)
  parent: Microsoft.Health.InvertedIndex.SearchIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}
  definition: Microsoft.Health.InvertedIndex.SearchIndex`2.Resolve(`0)
  name: Resolve(String)
  nameWithType: SearchIndex<String, IRecordIDList>.Resolve(String)
  fullName: Microsoft.Health.InvertedIndex.SearchIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.Resolve(System.String)
  nameWithType.vb: SearchIndex(Of String, IRecordIDList).Resolve(String)
  fullName.vb: Microsoft.Health.InvertedIndex.SearchIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).Resolve(System.String)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.SearchIndex`2.Resolve(`0)
    name: Resolve
    nameWithType: SearchIndex<String, IRecordIDList>.Resolve
    fullName: Microsoft.Health.InvertedIndex.SearchIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.SearchIndex`2.Resolve(`0)
    name: Resolve
    nameWithType: SearchIndex(Of String, IRecordIDList).Resolve
    fullName: Microsoft.Health.InvertedIndex.SearchIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.SearchIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Resolve(System.Collections.Generic.IList{System.String})
  commentId: M:Microsoft.Health.InvertedIndex.SearchIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Resolve(System.Collections.Generic.IList{System.String})
  parent: Microsoft.Health.InvertedIndex.SearchIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}
  definition: Microsoft.Health.InvertedIndex.SearchIndex`2.Resolve(System.Collections.Generic.IList{`0})
  name: Resolve(IList<String>)
  nameWithType: SearchIndex<String, IRecordIDList>.Resolve(IList<String>)
  fullName: Microsoft.Health.InvertedIndex.SearchIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.Resolve(System.Collections.Generic.IList<System.String>)
  nameWithType.vb: SearchIndex(Of String, IRecordIDList).Resolve(IList(Of String))
  fullName.vb: Microsoft.Health.InvertedIndex.SearchIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).Resolve(System.Collections.Generic.IList(Of System.String))
  name.vb: Resolve(IList(Of String))
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.SearchIndex`2.Resolve(System.Collections.Generic.IList{`0})
    name: Resolve
    nameWithType: SearchIndex<String, IRecordIDList>.Resolve
    fullName: Microsoft.Health.InvertedIndex.SearchIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.SearchIndex`2.Resolve(System.Collections.Generic.IList{`0})
    name: Resolve
    nameWithType: SearchIndex(Of String, IRecordIDList).Resolve
    fullName: Microsoft.Health.InvertedIndex.SearchIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.SearchIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Resolve(System.Collections.Generic.IList{System.String},System.Int32,System.Int32)
  commentId: M:Microsoft.Health.InvertedIndex.SearchIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Resolve(System.Collections.Generic.IList{System.String},System.Int32,System.Int32)
  parent: Microsoft.Health.InvertedIndex.SearchIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}
  definition: Microsoft.Health.InvertedIndex.SearchIndex`2.Resolve(System.Collections.Generic.IList{`0},System.Int32,System.Int32)
  name: Resolve(IList<String>, Int32, Int32)
  nameWithType: SearchIndex<String, IRecordIDList>.Resolve(IList<String>, Int32, Int32)
  fullName: Microsoft.Health.InvertedIndex.SearchIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.Resolve(System.Collections.Generic.IList<System.String>, System.Int32, System.Int32)
  nameWithType.vb: SearchIndex(Of String, IRecordIDList).Resolve(IList(Of String), Int32, Int32)
  fullName.vb: Microsoft.Health.InvertedIndex.SearchIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).Resolve(System.Collections.Generic.IList(Of System.String), System.Int32, System.Int32)
  name.vb: Resolve(IList(Of String), Int32, Int32)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.SearchIndex`2.Resolve(System.Collections.Generic.IList{`0},System.Int32,System.Int32)
    name: Resolve
    nameWithType: SearchIndex<String, IRecordIDList>.Resolve
    fullName: Microsoft.Health.InvertedIndex.SearchIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.SearchIndex`2.Resolve(System.Collections.Generic.IList{`0},System.Int32,System.Int32)
    name: Resolve
    nameWithType: SearchIndex(Of String, IRecordIDList).Resolve
    fullName: Microsoft.Health.InvertedIndex.SearchIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.SearchIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Resolve(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Microsoft.Health.InvertedIndex.SearchIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Resolve(System.Collections.Generic.IEnumerable{System.String})
  parent: Microsoft.Health.InvertedIndex.SearchIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}
  definition: Microsoft.Health.InvertedIndex.SearchIndex`2.Resolve(System.Collections.Generic.IEnumerable{`0})
  name: Resolve(IEnumerable<String>)
  nameWithType: SearchIndex<String, IRecordIDList>.Resolve(IEnumerable<String>)
  fullName: Microsoft.Health.InvertedIndex.SearchIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.Resolve(System.Collections.Generic.IEnumerable<System.String>)
  nameWithType.vb: SearchIndex(Of String, IRecordIDList).Resolve(IEnumerable(Of String))
  fullName.vb: Microsoft.Health.InvertedIndex.SearchIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).Resolve(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: Resolve(IEnumerable(Of String))
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.SearchIndex`2.Resolve(System.Collections.Generic.IEnumerable{`0})
    name: Resolve
    nameWithType: SearchIndex<String, IRecordIDList>.Resolve
    fullName: Microsoft.Health.InvertedIndex.SearchIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.SearchIndex`2.Resolve(System.Collections.Generic.IEnumerable{`0})
    name: Resolve
    nameWithType: SearchIndex(Of String, IRecordIDList).Resolve
    fullName: Microsoft.Health.InvertedIndex.SearchIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.SearchIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Resolve(System.Collections.Generic.IList{System.String},Microsoft.Health.StructList{Microsoft.Health.InvertedIndex.RecordIDEnumerator}@)
  commentId: M:Microsoft.Health.InvertedIndex.SearchIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Resolve(System.Collections.Generic.IList{System.String},Microsoft.Health.StructList{Microsoft.Health.InvertedIndex.RecordIDEnumerator}@)
  parent: Microsoft.Health.InvertedIndex.SearchIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}
  definition: Microsoft.Health.InvertedIndex.SearchIndex`2.Resolve(System.Collections.Generic.IList{`0},Microsoft.Health.StructList{Microsoft.Health.InvertedIndex.RecordIDEnumerator}@)
  name: Resolve(IList<String>, StructList<RecordIDEnumerator>)
  nameWithType: SearchIndex<String, IRecordIDList>.Resolve(IList<String>, StructList<RecordIDEnumerator>)
  fullName: Microsoft.Health.InvertedIndex.SearchIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.Resolve(System.Collections.Generic.IList<System.String>, Microsoft.Health.StructList<Microsoft.Health.InvertedIndex.RecordIDEnumerator>)
  nameWithType.vb: SearchIndex(Of String, IRecordIDList).Resolve(IList(Of String), StructList(Of RecordIDEnumerator))
  fullName.vb: Microsoft.Health.InvertedIndex.SearchIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).Resolve(System.Collections.Generic.IList(Of System.String), Microsoft.Health.StructList(Of Microsoft.Health.InvertedIndex.RecordIDEnumerator))
  name.vb: Resolve(IList(Of String), StructList(Of RecordIDEnumerator))
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.SearchIndex`2.Resolve(System.Collections.Generic.IList{`0},Microsoft.Health.StructList{Microsoft.Health.InvertedIndex.RecordIDEnumerator}@)
    name: Resolve
    nameWithType: SearchIndex<String, IRecordIDList>.Resolve
    fullName: Microsoft.Health.InvertedIndex.SearchIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.StructList`1
    name: StructList
    nameWithType: StructList
    fullName: Microsoft.Health.StructList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.InvertedIndex.RecordIDEnumerator
    name: RecordIDEnumerator
    nameWithType: RecordIDEnumerator
    fullName: Microsoft.Health.InvertedIndex.RecordIDEnumerator
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.SearchIndex`2.Resolve(System.Collections.Generic.IList{`0},Microsoft.Health.StructList{Microsoft.Health.InvertedIndex.RecordIDEnumerator}@)
    name: Resolve
    nameWithType: SearchIndex(Of String, IRecordIDList).Resolve
    fullName: Microsoft.Health.InvertedIndex.SearchIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.StructList`1
    name: StructList
    nameWithType: StructList
    fullName: Microsoft.Health.StructList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.InvertedIndex.RecordIDEnumerator
    name: RecordIDEnumerator
    nameWithType: RecordIDEnumerator
    fullName: Microsoft.Health.InvertedIndex.RecordIDEnumerator
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.SearchIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Resolve(System.Collections.Generic.IList{System.String},System.Int32,System.Int32,Microsoft.Health.StructList{Microsoft.Health.InvertedIndex.RecordIDEnumerator}@)
  commentId: M:Microsoft.Health.InvertedIndex.SearchIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Resolve(System.Collections.Generic.IList{System.String},System.Int32,System.Int32,Microsoft.Health.StructList{Microsoft.Health.InvertedIndex.RecordIDEnumerator}@)
  parent: Microsoft.Health.InvertedIndex.SearchIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}
  definition: Microsoft.Health.InvertedIndex.SearchIndex`2.Resolve(System.Collections.Generic.IList{`0},System.Int32,System.Int32,Microsoft.Health.StructList{Microsoft.Health.InvertedIndex.RecordIDEnumerator}@)
  name: Resolve(IList<String>, Int32, Int32, StructList<RecordIDEnumerator>)
  nameWithType: SearchIndex<String, IRecordIDList>.Resolve(IList<String>, Int32, Int32, StructList<RecordIDEnumerator>)
  fullName: Microsoft.Health.InvertedIndex.SearchIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.Resolve(System.Collections.Generic.IList<System.String>, System.Int32, System.Int32, Microsoft.Health.StructList<Microsoft.Health.InvertedIndex.RecordIDEnumerator>)
  nameWithType.vb: SearchIndex(Of String, IRecordIDList).Resolve(IList(Of String), Int32, Int32, StructList(Of RecordIDEnumerator))
  fullName.vb: Microsoft.Health.InvertedIndex.SearchIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).Resolve(System.Collections.Generic.IList(Of System.String), System.Int32, System.Int32, Microsoft.Health.StructList(Of Microsoft.Health.InvertedIndex.RecordIDEnumerator))
  name.vb: Resolve(IList(Of String), Int32, Int32, StructList(Of RecordIDEnumerator))
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.SearchIndex`2.Resolve(System.Collections.Generic.IList{`0},System.Int32,System.Int32,Microsoft.Health.StructList{Microsoft.Health.InvertedIndex.RecordIDEnumerator}@)
    name: Resolve
    nameWithType: SearchIndex<String, IRecordIDList>.Resolve
    fullName: Microsoft.Health.InvertedIndex.SearchIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.StructList`1
    name: StructList
    nameWithType: StructList
    fullName: Microsoft.Health.StructList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.InvertedIndex.RecordIDEnumerator
    name: RecordIDEnumerator
    nameWithType: RecordIDEnumerator
    fullName: Microsoft.Health.InvertedIndex.RecordIDEnumerator
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.SearchIndex`2.Resolve(System.Collections.Generic.IList{`0},System.Int32,System.Int32,Microsoft.Health.StructList{Microsoft.Health.InvertedIndex.RecordIDEnumerator}@)
    name: Resolve
    nameWithType: SearchIndex(Of String, IRecordIDList).Resolve
    fullName: Microsoft.Health.InvertedIndex.SearchIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.StructList`1
    name: StructList
    nameWithType: StructList
    fullName: Microsoft.Health.StructList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.InvertedIndex.RecordIDEnumerator
    name: RecordIDEnumerator
    nameWithType: RecordIDEnumerator
    fullName: Microsoft.Health.InvertedIndex.RecordIDEnumerator
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Count
  commentId: P:Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Count
  parent: Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}
  definition: Microsoft.Health.SortedIndex`2.Count
  name: Count
  nameWithType: SortedIndex<String, IRecordIDList>.Count
  fullName: Microsoft.Health.SortedIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.Count
  nameWithType.vb: SortedIndex(Of String, IRecordIDList).Count
  fullName.vb: Microsoft.Health.SortedIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).Count
- uid: Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Item(System.Int32)
  commentId: P:Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Item(System.Int32)
  parent: Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}
  definition: Microsoft.Health.SortedIndex`2.Item(System.Int32)
  name: Item[Int32]
  nameWithType: SortedIndex<String, IRecordIDList>.Item[Int32]
  fullName: Microsoft.Health.SortedIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.Item[System.Int32]
  nameWithType.vb: SortedIndex(Of String, IRecordIDList).Item(Int32)
  fullName.vb: Microsoft.Health.SortedIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: Microsoft.Health.SortedIndex`2.Item(System.Int32)
    name: Item
    nameWithType: SortedIndex<String, IRecordIDList>.Item
    fullName: Microsoft.Health.SortedIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: Microsoft.Health.SortedIndex`2.Item(System.Int32)
    name: Item
    nameWithType: SortedIndex(Of String, IRecordIDList).Item
    fullName: Microsoft.Health.SortedIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.IsReady
  commentId: P:Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.IsReady
  parent: Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}
  definition: Microsoft.Health.SortedIndex`2.IsReady
  name: IsReady
  nameWithType: SortedIndex<String, IRecordIDList>.IsReady
  fullName: Microsoft.Health.SortedIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.IsReady
  nameWithType.vb: SortedIndex(Of String, IRecordIDList).IsReady
  fullName.vb: Microsoft.Health.SortedIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).IsReady
- uid: Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Keys
  commentId: P:Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Keys
  parent: Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}
  definition: Microsoft.Health.SortedIndex`2.Keys
  name: Keys
  nameWithType: SortedIndex<String, IRecordIDList>.Keys
  fullName: Microsoft.Health.SortedIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.Keys
  nameWithType.vb: SortedIndex(Of String, IRecordIDList).Keys
  fullName.vb: Microsoft.Health.SortedIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).Keys
- uid: Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Values
  commentId: P:Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Values
  parent: Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}
  definition: Microsoft.Health.SortedIndex`2.Values
  name: Values
  nameWithType: SortedIndex<String, IRecordIDList>.Values
  fullName: Microsoft.Health.SortedIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.Values
  nameWithType.vb: SortedIndex(Of String, IRecordIDList).Values
  fullName.vb: Microsoft.Health.SortedIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).Values
- uid: Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.ContainsKey(System.String)
  commentId: M:Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.ContainsKey(System.String)
  parent: Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}
  definition: Microsoft.Health.SortedIndex`2.ContainsKey(`0)
  name: ContainsKey(String)
  nameWithType: SortedIndex<String, IRecordIDList>.ContainsKey(String)
  fullName: Microsoft.Health.SortedIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.ContainsKey(System.String)
  nameWithType.vb: SortedIndex(Of String, IRecordIDList).ContainsKey(String)
  fullName.vb: Microsoft.Health.SortedIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).ContainsKey(System.String)
  spec.csharp:
  - uid: Microsoft.Health.SortedIndex`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: SortedIndex<String, IRecordIDList>.ContainsKey
    fullName: Microsoft.Health.SortedIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.ContainsKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.SortedIndex`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: SortedIndex(Of String, IRecordIDList).ContainsKey
    fullName: Microsoft.Health.SortedIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).ContainsKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Get(System.String,Microsoft.Health.InvertedIndex.IRecordIDList@)
  commentId: M:Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Get(System.String,Microsoft.Health.InvertedIndex.IRecordIDList@)
  parent: Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}
  definition: Microsoft.Health.SortedIndex`2.Get(`0,`1@)
  name: Get(String, IRecordIDList)
  nameWithType: SortedIndex<String, IRecordIDList>.Get(String, IRecordIDList)
  fullName: Microsoft.Health.SortedIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.Get(System.String, Microsoft.Health.InvertedIndex.IRecordIDList)
  nameWithType.vb: SortedIndex(Of String, IRecordIDList).Get(String, IRecordIDList)
  fullName.vb: Microsoft.Health.SortedIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).Get(System.String, Microsoft.Health.InvertedIndex.IRecordIDList)
  spec.csharp:
  - uid: Microsoft.Health.SortedIndex`2.Get(`0,`1@)
    name: Get
    nameWithType: SortedIndex<String, IRecordIDList>.Get
    fullName: Microsoft.Health.SortedIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.InvertedIndex.IRecordIDList
    name: IRecordIDList
    nameWithType: IRecordIDList
    fullName: Microsoft.Health.InvertedIndex.IRecordIDList
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.SortedIndex`2.Get(`0,`1@)
    name: Get
    nameWithType: SortedIndex(Of String, IRecordIDList).Get
    fullName: Microsoft.Health.SortedIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.InvertedIndex.IRecordIDList
    name: IRecordIDList
    nameWithType: IRecordIDList
    fullName: Microsoft.Health.InvertedIndex.IRecordIDList
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Get(System.String,System.Collections.Generic.IComparer{System.String},Microsoft.Health.InvertedIndex.IRecordIDList@)
  commentId: M:Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Get(System.String,System.Collections.Generic.IComparer{System.String},Microsoft.Health.InvertedIndex.IRecordIDList@)
  parent: Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}
  definition: Microsoft.Health.SortedIndex`2.Get(`0,System.Collections.Generic.IComparer{`0},`1@)
  name: Get(String, IComparer<String>, IRecordIDList)
  nameWithType: SortedIndex<String, IRecordIDList>.Get(String, IComparer<String>, IRecordIDList)
  fullName: Microsoft.Health.SortedIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.Get(System.String, System.Collections.Generic.IComparer<System.String>, Microsoft.Health.InvertedIndex.IRecordIDList)
  nameWithType.vb: SortedIndex(Of String, IRecordIDList).Get(String, IComparer(Of String), IRecordIDList)
  fullName.vb: Microsoft.Health.SortedIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).Get(System.String, System.Collections.Generic.IComparer(Of System.String), Microsoft.Health.InvertedIndex.IRecordIDList)
  name.vb: Get(String, IComparer(Of String), IRecordIDList)
  spec.csharp:
  - uid: Microsoft.Health.SortedIndex`2.Get(`0,System.Collections.Generic.IComparer{`0},`1@)
    name: Get
    nameWithType: SortedIndex<String, IRecordIDList>.Get
    fullName: Microsoft.Health.SortedIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.InvertedIndex.IRecordIDList
    name: IRecordIDList
    nameWithType: IRecordIDList
    fullName: Microsoft.Health.InvertedIndex.IRecordIDList
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.SortedIndex`2.Get(`0,System.Collections.Generic.IComparer{`0},`1@)
    name: Get
    nameWithType: SortedIndex(Of String, IRecordIDList).Get
    fullName: Microsoft.Health.SortedIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.InvertedIndex.IRecordIDList
    name: IRecordIDList
    nameWithType: IRecordIDList
    fullName: Microsoft.Health.InvertedIndex.IRecordIDList
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.GetMultiple(System.String)
  commentId: M:Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.GetMultiple(System.String)
  parent: Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}
  definition: Microsoft.Health.SortedIndex`2.GetMultiple(`0)
  name: GetMultiple(String)
  nameWithType: SortedIndex<String, IRecordIDList>.GetMultiple(String)
  fullName: Microsoft.Health.SortedIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.GetMultiple(System.String)
  nameWithType.vb: SortedIndex(Of String, IRecordIDList).GetMultiple(String)
  fullName.vb: Microsoft.Health.SortedIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).GetMultiple(System.String)
  spec.csharp:
  - uid: Microsoft.Health.SortedIndex`2.GetMultiple(`0)
    name: GetMultiple
    nameWithType: SortedIndex<String, IRecordIDList>.GetMultiple
    fullName: Microsoft.Health.SortedIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.GetMultiple
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.SortedIndex`2.GetMultiple(`0)
    name: GetMultiple
    nameWithType: SortedIndex(Of String, IRecordIDList).GetMultiple
    fullName: Microsoft.Health.SortedIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).GetMultiple
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.GetKeys(System.String,System.Collections.Generic.IComparer{System.String})
  commentId: M:Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.GetKeys(System.String,System.Collections.Generic.IComparer{System.String})
  parent: Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}
  definition: Microsoft.Health.SortedIndex`2.GetKeys(`0,System.Collections.Generic.IComparer{`0})
  name: GetKeys(String, IComparer<String>)
  nameWithType: SortedIndex<String, IRecordIDList>.GetKeys(String, IComparer<String>)
  fullName: Microsoft.Health.SortedIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.GetKeys(System.String, System.Collections.Generic.IComparer<System.String>)
  nameWithType.vb: SortedIndex(Of String, IRecordIDList).GetKeys(String, IComparer(Of String))
  fullName.vb: Microsoft.Health.SortedIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).GetKeys(System.String, System.Collections.Generic.IComparer(Of System.String))
  name.vb: GetKeys(String, IComparer(Of String))
  spec.csharp:
  - uid: Microsoft.Health.SortedIndex`2.GetKeys(`0,System.Collections.Generic.IComparer{`0})
    name: GetKeys
    nameWithType: SortedIndex<String, IRecordIDList>.GetKeys
    fullName: Microsoft.Health.SortedIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.GetKeys
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.SortedIndex`2.GetKeys(`0,System.Collections.Generic.IComparer{`0})
    name: GetKeys
    nameWithType: SortedIndex(Of String, IRecordIDList).GetKeys
    fullName: Microsoft.Health.SortedIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).GetKeys
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Add(System.String,Microsoft.Health.InvertedIndex.IRecordIDList)
  commentId: M:Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Add(System.String,Microsoft.Health.InvertedIndex.IRecordIDList)
  parent: Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}
  definition: Microsoft.Health.SortedIndex`2.Add(`0,`1)
  name: Add(String, IRecordIDList)
  nameWithType: SortedIndex<String, IRecordIDList>.Add(String, IRecordIDList)
  fullName: Microsoft.Health.SortedIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.Add(System.String, Microsoft.Health.InvertedIndex.IRecordIDList)
  nameWithType.vb: SortedIndex(Of String, IRecordIDList).Add(String, IRecordIDList)
  fullName.vb: Microsoft.Health.SortedIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).Add(System.String, Microsoft.Health.InvertedIndex.IRecordIDList)
  spec.csharp:
  - uid: Microsoft.Health.SortedIndex`2.Add(`0,`1)
    name: Add
    nameWithType: SortedIndex<String, IRecordIDList>.Add
    fullName: Microsoft.Health.SortedIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.InvertedIndex.IRecordIDList
    name: IRecordIDList
    nameWithType: IRecordIDList
    fullName: Microsoft.Health.InvertedIndex.IRecordIDList
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.SortedIndex`2.Add(`0,`1)
    name: Add
    nameWithType: SortedIndex(Of String, IRecordIDList).Add
    fullName: Microsoft.Health.SortedIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.InvertedIndex.IRecordIDList
    name: IRecordIDList
    nameWithType: IRecordIDList
    fullName: Microsoft.Health.InvertedIndex.IRecordIDList
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Add(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Health.InvertedIndex.IRecordIDList})
  commentId: M:Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Add(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Health.InvertedIndex.IRecordIDList})
  parent: Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}
  definition: Microsoft.Health.SortedIndex`2.Add(System.Collections.Generic.KeyValuePair{`0,`1})
  name: Add(KeyValuePair<String, IRecordIDList>)
  nameWithType: SortedIndex<String, IRecordIDList>.Add(KeyValuePair<String, IRecordIDList>)
  fullName: Microsoft.Health.SortedIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.Add(System.Collections.Generic.KeyValuePair<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>)
  nameWithType.vb: SortedIndex(Of String, IRecordIDList).Add(KeyValuePair(Of String, IRecordIDList))
  fullName.vb: Microsoft.Health.SortedIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).Add(System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList))
  name.vb: Add(KeyValuePair(Of String, IRecordIDList))
  spec.csharp:
  - uid: Microsoft.Health.SortedIndex`2.Add(System.Collections.Generic.KeyValuePair{`0,`1})
    name: Add
    nameWithType: SortedIndex<String, IRecordIDList>.Add
    fullName: Microsoft.Health.SortedIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.InvertedIndex.IRecordIDList
    name: IRecordIDList
    nameWithType: IRecordIDList
    fullName: Microsoft.Health.InvertedIndex.IRecordIDList
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.SortedIndex`2.Add(System.Collections.Generic.KeyValuePair{`0,`1})
    name: Add
    nameWithType: SortedIndex(Of String, IRecordIDList).Add
    fullName: Microsoft.Health.SortedIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.InvertedIndex.IRecordIDList
    name: IRecordIDList
    nameWithType: IRecordIDList
    fullName: Microsoft.Health.InvertedIndex.IRecordIDList
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Add(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}})
  commentId: M:Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Add(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}})
  parent: Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}
  definition: Microsoft.Health.SortedIndex`2.Add(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  name: Add(IEnumerable<KeyValuePair<String, IRecordIDList>>)
  nameWithType: SortedIndex<String, IRecordIDList>.Add(IEnumerable<KeyValuePair<String, IRecordIDList>>)
  fullName: Microsoft.Health.SortedIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.Add(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>>)
  nameWithType.vb: SortedIndex(Of String, IRecordIDList).Add(IEnumerable(Of KeyValuePair(Of String, IRecordIDList)))
  fullName.vb: Microsoft.Health.SortedIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).Add(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList)))
  name.vb: Add(IEnumerable(Of KeyValuePair(Of String, IRecordIDList)))
  spec.csharp:
  - uid: Microsoft.Health.SortedIndex`2.Add(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
    name: Add
    nameWithType: SortedIndex<String, IRecordIDList>.Add
    fullName: Microsoft.Health.SortedIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.InvertedIndex.IRecordIDList
    name: IRecordIDList
    nameWithType: IRecordIDList
    fullName: Microsoft.Health.InvertedIndex.IRecordIDList
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.SortedIndex`2.Add(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
    name: Add
    nameWithType: SortedIndex(Of String, IRecordIDList).Add
    fullName: Microsoft.Health.SortedIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.InvertedIndex.IRecordIDList
    name: IRecordIDList
    nameWithType: IRecordIDList
    fullName: Microsoft.Health.InvertedIndex.IRecordIDList
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.SetValue(System.String,Microsoft.Health.InvertedIndex.IRecordIDList)
  commentId: M:Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.SetValue(System.String,Microsoft.Health.InvertedIndex.IRecordIDList)
  parent: Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}
  definition: Microsoft.Health.SortedIndex`2.SetValue(`0,`1)
  name: SetValue(String, IRecordIDList)
  nameWithType: SortedIndex<String, IRecordIDList>.SetValue(String, IRecordIDList)
  fullName: Microsoft.Health.SortedIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.SetValue(System.String, Microsoft.Health.InvertedIndex.IRecordIDList)
  nameWithType.vb: SortedIndex(Of String, IRecordIDList).SetValue(String, IRecordIDList)
  fullName.vb: Microsoft.Health.SortedIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).SetValue(System.String, Microsoft.Health.InvertedIndex.IRecordIDList)
  spec.csharp:
  - uid: Microsoft.Health.SortedIndex`2.SetValue(`0,`1)
    name: SetValue
    nameWithType: SortedIndex<String, IRecordIDList>.SetValue
    fullName: Microsoft.Health.SortedIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.InvertedIndex.IRecordIDList
    name: IRecordIDList
    nameWithType: IRecordIDList
    fullName: Microsoft.Health.InvertedIndex.IRecordIDList
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.SortedIndex`2.SetValue(`0,`1)
    name: SetValue
    nameWithType: SortedIndex(Of String, IRecordIDList).SetValue
    fullName: Microsoft.Health.SortedIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.InvertedIndex.IRecordIDList
    name: IRecordIDList
    nameWithType: IRecordIDList
    fullName: Microsoft.Health.InvertedIndex.IRecordIDList
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.SetValueAt(System.Int32,Microsoft.Health.InvertedIndex.IRecordIDList)
  commentId: M:Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.SetValueAt(System.Int32,Microsoft.Health.InvertedIndex.IRecordIDList)
  parent: Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}
  definition: Microsoft.Health.SortedIndex`2.SetValueAt(System.Int32,`1)
  name: SetValueAt(Int32, IRecordIDList)
  nameWithType: SortedIndex<String, IRecordIDList>.SetValueAt(Int32, IRecordIDList)
  fullName: Microsoft.Health.SortedIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.SetValueAt(System.Int32, Microsoft.Health.InvertedIndex.IRecordIDList)
  nameWithType.vb: SortedIndex(Of String, IRecordIDList).SetValueAt(Int32, IRecordIDList)
  fullName.vb: Microsoft.Health.SortedIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).SetValueAt(System.Int32, Microsoft.Health.InvertedIndex.IRecordIDList)
  spec.csharp:
  - uid: Microsoft.Health.SortedIndex`2.SetValueAt(System.Int32,`1)
    name: SetValueAt
    nameWithType: SortedIndex<String, IRecordIDList>.SetValueAt
    fullName: Microsoft.Health.SortedIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.SetValueAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.InvertedIndex.IRecordIDList
    name: IRecordIDList
    nameWithType: IRecordIDList
    fullName: Microsoft.Health.InvertedIndex.IRecordIDList
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.SortedIndex`2.SetValueAt(System.Int32,`1)
    name: SetValueAt
    nameWithType: SortedIndex(Of String, IRecordIDList).SetValueAt
    fullName: Microsoft.Health.SortedIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).SetValueAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.InvertedIndex.IRecordIDList
    name: IRecordIDList
    nameWithType: IRecordIDList
    fullName: Microsoft.Health.InvertedIndex.IRecordIDList
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.BuildIndex
  commentId: M:Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.BuildIndex
  parent: Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}
  definition: Microsoft.Health.SortedIndex`2.BuildIndex
  name: BuildIndex()
  nameWithType: SortedIndex<String, IRecordIDList>.BuildIndex()
  fullName: Microsoft.Health.SortedIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.BuildIndex()
  nameWithType.vb: SortedIndex(Of String, IRecordIDList).BuildIndex()
  fullName.vb: Microsoft.Health.SortedIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).BuildIndex()
  spec.csharp:
  - uid: Microsoft.Health.SortedIndex`2.BuildIndex
    name: BuildIndex
    nameWithType: SortedIndex<String, IRecordIDList>.BuildIndex
    fullName: Microsoft.Health.SortedIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.BuildIndex
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.SortedIndex`2.BuildIndex
    name: BuildIndex
    nameWithType: SortedIndex(Of String, IRecordIDList).BuildIndex
    fullName: Microsoft.Health.SortedIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).BuildIndex
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.BuildIndex(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}})
  commentId: M:Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.BuildIndex(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}})
  parent: Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}
  definition: Microsoft.Health.SortedIndex`2.BuildIndex(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  name: BuildIndex(IEnumerable<KeyValuePair<String, IRecordIDList>>)
  nameWithType: SortedIndex<String, IRecordIDList>.BuildIndex(IEnumerable<KeyValuePair<String, IRecordIDList>>)
  fullName: Microsoft.Health.SortedIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.BuildIndex(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>>)
  nameWithType.vb: SortedIndex(Of String, IRecordIDList).BuildIndex(IEnumerable(Of KeyValuePair(Of String, IRecordIDList)))
  fullName.vb: Microsoft.Health.SortedIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).BuildIndex(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList)))
  name.vb: BuildIndex(IEnumerable(Of KeyValuePair(Of String, IRecordIDList)))
  spec.csharp:
  - uid: Microsoft.Health.SortedIndex`2.BuildIndex(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
    name: BuildIndex
    nameWithType: SortedIndex<String, IRecordIDList>.BuildIndex
    fullName: Microsoft.Health.SortedIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.BuildIndex
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.InvertedIndex.IRecordIDList
    name: IRecordIDList
    nameWithType: IRecordIDList
    fullName: Microsoft.Health.InvertedIndex.IRecordIDList
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.SortedIndex`2.BuildIndex(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
    name: BuildIndex
    nameWithType: SortedIndex(Of String, IRecordIDList).BuildIndex
    fullName: Microsoft.Health.SortedIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).BuildIndex
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.InvertedIndex.IRecordIDList
    name: IRecordIDList
    nameWithType: IRecordIDList
    fullName: Microsoft.Health.InvertedIndex.IRecordIDList
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.EnsureCapacity(System.Int32)
  commentId: M:Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.EnsureCapacity(System.Int32)
  parent: Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}
  definition: Microsoft.Health.SortedIndex`2.EnsureCapacity(System.Int32)
  name: EnsureCapacity(Int32)
  nameWithType: SortedIndex<String, IRecordIDList>.EnsureCapacity(Int32)
  fullName: Microsoft.Health.SortedIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.EnsureCapacity(System.Int32)
  nameWithType.vb: SortedIndex(Of String, IRecordIDList).EnsureCapacity(Int32)
  fullName.vb: Microsoft.Health.SortedIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).EnsureCapacity(System.Int32)
  spec.csharp:
  - uid: Microsoft.Health.SortedIndex`2.EnsureCapacity(System.Int32)
    name: EnsureCapacity
    nameWithType: SortedIndex<String, IRecordIDList>.EnsureCapacity
    fullName: Microsoft.Health.SortedIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.EnsureCapacity
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.SortedIndex`2.EnsureCapacity(System.Int32)
    name: EnsureCapacity
    nameWithType: SortedIndex(Of String, IRecordIDList).EnsureCapacity
    fullName: Microsoft.Health.SortedIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).EnsureCapacity
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.IndexOf(System.String)
  commentId: M:Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.IndexOf(System.String)
  parent: Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}
  definition: Microsoft.Health.SortedIndex`2.IndexOf(`0)
  name: IndexOf(String)
  nameWithType: SortedIndex<String, IRecordIDList>.IndexOf(String)
  fullName: Microsoft.Health.SortedIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.IndexOf(System.String)
  nameWithType.vb: SortedIndex(Of String, IRecordIDList).IndexOf(String)
  fullName.vb: Microsoft.Health.SortedIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).IndexOf(System.String)
  spec.csharp:
  - uid: Microsoft.Health.SortedIndex`2.IndexOf(`0)
    name: IndexOf
    nameWithType: SortedIndex<String, IRecordIDList>.IndexOf
    fullName: Microsoft.Health.SortedIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.IndexOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.SortedIndex`2.IndexOf(`0)
    name: IndexOf
    nameWithType: SortedIndex(Of String, IRecordIDList).IndexOf
    fullName: Microsoft.Health.SortedIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).IndexOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.IndexOf(System.String,System.Collections.Generic.IComparer{System.String})
  commentId: M:Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.IndexOf(System.String,System.Collections.Generic.IComparer{System.String})
  parent: Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}
  definition: Microsoft.Health.SortedIndex`2.IndexOf(`0,System.Collections.Generic.IComparer{`0})
  name: IndexOf(String, IComparer<String>)
  nameWithType: SortedIndex<String, IRecordIDList>.IndexOf(String, IComparer<String>)
  fullName: Microsoft.Health.SortedIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.IndexOf(System.String, System.Collections.Generic.IComparer<System.String>)
  nameWithType.vb: SortedIndex(Of String, IRecordIDList).IndexOf(String, IComparer(Of String))
  fullName.vb: Microsoft.Health.SortedIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).IndexOf(System.String, System.Collections.Generic.IComparer(Of System.String))
  name.vb: IndexOf(String, IComparer(Of String))
  spec.csharp:
  - uid: Microsoft.Health.SortedIndex`2.IndexOf(`0,System.Collections.Generic.IComparer{`0})
    name: IndexOf
    nameWithType: SortedIndex<String, IRecordIDList>.IndexOf
    fullName: Microsoft.Health.SortedIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.IndexOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.SortedIndex`2.IndexOf(`0,System.Collections.Generic.IComparer{`0})
    name: IndexOf
    nameWithType: SortedIndex(Of String, IRecordIDList).IndexOf
    fullName: Microsoft.Health.SortedIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).IndexOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.EnsureReady
  commentId: M:Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.EnsureReady
  parent: Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}
  definition: Microsoft.Health.SortedIndex`2.EnsureReady
  name: EnsureReady()
  nameWithType: SortedIndex<String, IRecordIDList>.EnsureReady()
  fullName: Microsoft.Health.SortedIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.EnsureReady()
  nameWithType.vb: SortedIndex(Of String, IRecordIDList).EnsureReady()
  fullName.vb: Microsoft.Health.SortedIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).EnsureReady()
  spec.csharp:
  - uid: Microsoft.Health.SortedIndex`2.EnsureReady
    name: EnsureReady
    nameWithType: SortedIndex<String, IRecordIDList>.EnsureReady
    fullName: Microsoft.Health.SortedIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.EnsureReady
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.SortedIndex`2.EnsureReady
    name: EnsureReady
    nameWithType: SortedIndex(Of String, IRecordIDList).EnsureReady
    fullName: Microsoft.Health.SortedIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).EnsureReady
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.GetEnumerator
  commentId: M:Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.GetEnumerator
  parent: Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}
  definition: Microsoft.Health.SortedIndex`2.GetEnumerator
  name: GetEnumerator()
  nameWithType: SortedIndex<String, IRecordIDList>.GetEnumerator()
  fullName: Microsoft.Health.SortedIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.GetEnumerator()
  nameWithType.vb: SortedIndex(Of String, IRecordIDList).GetEnumerator()
  fullName.vb: Microsoft.Health.SortedIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).GetEnumerator()
  spec.csharp:
  - uid: Microsoft.Health.SortedIndex`2.GetEnumerator
    name: GetEnumerator
    nameWithType: SortedIndex<String, IRecordIDList>.GetEnumerator
    fullName: Microsoft.Health.SortedIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.SortedIndex`2.GetEnumerator
    name: GetEnumerator
    nameWithType: SortedIndex(Of String, IRecordIDList).GetEnumerator
    fullName: Microsoft.Health.SortedIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.System#Collections#IEnumerable#GetEnumerator
  parent: Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}
  definition: Microsoft.Health.SortedIndex`2.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  nameWithType: SortedIndex<String, IRecordIDList>.IEnumerable.GetEnumerator()
  fullName: Microsoft.Health.SortedIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: SortedIndex(Of String, IRecordIDList).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: Microsoft.Health.SortedIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: Microsoft.Health.SortedIndex`2.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: SortedIndex<String, IRecordIDList>.IEnumerable.GetEnumerator
    fullName: Microsoft.Health.SortedIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.SortedIndex`2.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: SortedIndex(Of String, IRecordIDList).System.Collections.IEnumerable.GetEnumerator
    fullName: Microsoft.Health.SortedIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Compare(System.String,System.String)
  commentId: M:Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}.Compare(System.String,System.String)
  parent: Microsoft.Health.SortedIndex{System.String,Microsoft.Health.InvertedIndex.IRecordIDList}
  definition: Microsoft.Health.SortedIndex`2.Compare(`0,`0)
  name: Compare(String, String)
  nameWithType: SortedIndex<String, IRecordIDList>.Compare(String, String)
  fullName: Microsoft.Health.SortedIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.Compare(System.String, System.String)
  nameWithType.vb: SortedIndex(Of String, IRecordIDList).Compare(String, String)
  fullName.vb: Microsoft.Health.SortedIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).Compare(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.Health.SortedIndex`2.Compare(`0,`0)
    name: Compare
    nameWithType: SortedIndex<String, IRecordIDList>.Compare
    fullName: Microsoft.Health.SortedIndex<System.String, Microsoft.Health.InvertedIndex.IRecordIDList>.Compare
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.SortedIndex`2.Compare(`0,`0)
    name: Compare
    nameWithType: SortedIndex(Of String, IRecordIDList).Compare
    fullName: Microsoft.Health.SortedIndex(Of System.String, Microsoft.Health.InvertedIndex.IRecordIDList).Compare
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.AutoCompleteIndex.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<AutoCompleteIndex>()
  nameWithType: TypeHelper.ValueOrDbNull<AutoCompleteIndex>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.InvertedIndex.AutoCompleteIndex>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of AutoCompleteIndex)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.InvertedIndex.AutoCompleteIndex)()
  name.vb: ValueOrDbNull(Of AutoCompleteIndex)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<AutoCompleteIndex>
    nameWithType: TypeHelper.ValueOrDbNull<AutoCompleteIndex>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.InvertedIndex.AutoCompleteIndex>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of AutoCompleteIndex)
    nameWithType: TypeHelper.ValueOrDbNull(Of AutoCompleteIndex)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.InvertedIndex.AutoCompleteIndex)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.SortedIndex`2
  commentId: T:Microsoft.Health.SortedIndex`2
  isExternal: false
  name: SortedIndex<K, V>
  nameWithType: SortedIndex<K, V>
  fullName: Microsoft.Health.SortedIndex<K, V>
  nameWithType.vb: SortedIndex(Of K, V)
  fullName.vb: Microsoft.Health.SortedIndex(Of K, V)
  name.vb: SortedIndex(Of K, V)
  spec.csharp:
  - uid: Microsoft.Health.SortedIndex`2
    name: SortedIndex
    nameWithType: SortedIndex
    fullName: Microsoft.Health.SortedIndex
  - name: <
    nameWithType: <
    fullName: <
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.SortedIndex`2
    name: SortedIndex
    nameWithType: SortedIndex
    fullName: Microsoft.Health.SortedIndex
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: Microsoft.Health.InvertedIndex.SearchIndex`2
  commentId: T:Microsoft.Health.InvertedIndex.SearchIndex`2
  isExternal: false
  name: SearchIndex<T, TRecordIDList>
  nameWithType: SearchIndex<T, TRecordIDList>
  fullName: Microsoft.Health.InvertedIndex.SearchIndex<T, TRecordIDList>
  nameWithType.vb: SearchIndex(Of T, TRecordIDList)
  fullName.vb: Microsoft.Health.InvertedIndex.SearchIndex(Of T, TRecordIDList)
  name.vb: SearchIndex(Of T, TRecordIDList)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.SearchIndex`2
    name: SearchIndex
    nameWithType: SearchIndex
    fullName: Microsoft.Health.InvertedIndex.SearchIndex
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRecordIDList
    nameWithType: TRecordIDList
    fullName: TRecordIDList
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.SearchIndex`2
    name: SearchIndex
    nameWithType: SearchIndex
    fullName: Microsoft.Health.InvertedIndex.SearchIndex
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRecordIDList
    nameWithType: TRecordIDList
    fullName: TRecordIDList
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.IIndex`2
  commentId: T:Microsoft.Health.IIndex`2
  isExternal: false
  name: IIndex<K, V>
  nameWithType: IIndex<K, V>
  fullName: Microsoft.Health.IIndex<K, V>
  nameWithType.vb: IIndex(Of K, V)
  fullName.vb: Microsoft.Health.IIndex(Of K, V)
  name.vb: IIndex(Of K, V)
  spec.csharp:
  - uid: Microsoft.Health.IIndex`2
    name: IIndex
    nameWithType: IIndex
    fullName: Microsoft.Health.IIndex
  - name: <
    nameWithType: <
    fullName: <
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.IIndex`2
    name: IIndex
    nameWithType: IIndex
    fullName: Microsoft.Health.IIndex
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Collections.Generic.IComparer`1
  commentId: T:System.Collections.Generic.IComparer`1
  isExternal: true
  name: IComparer<T>
  nameWithType: IComparer<T>
  fullName: System.Collections.Generic.IComparer<T>
  nameWithType.vb: IComparer(Of T)
  fullName.vb: System.Collections.Generic.IComparer(Of T)
  name.vb: IComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.ISearchIndex`2
  commentId: T:Microsoft.Health.InvertedIndex.ISearchIndex`2
  isExternal: false
  name: ISearchIndex<T, TRecordIDList>
  nameWithType: ISearchIndex<T, TRecordIDList>
  fullName: Microsoft.Health.InvertedIndex.ISearchIndex<T, TRecordIDList>
  nameWithType.vb: ISearchIndex(Of T, TRecordIDList)
  fullName.vb: Microsoft.Health.InvertedIndex.ISearchIndex(Of T, TRecordIDList)
  name.vb: ISearchIndex(Of T, TRecordIDList)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndex`2
    name: ISearchIndex
    nameWithType: ISearchIndex
    fullName: Microsoft.Health.InvertedIndex.ISearchIndex
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRecordIDList
    nameWithType: TRecordIDList
    fullName: TRecordIDList
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.ISearchIndex`2
    name: ISearchIndex
    nameWithType: ISearchIndex
    fullName: Microsoft.Health.InvertedIndex.ISearchIndex
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRecordIDList
    nameWithType: TRecordIDList
    fullName: TRecordIDList
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.SearchIndex`2.Item(`0)
  commentId: P:Microsoft.Health.InvertedIndex.SearchIndex`2.Item(`0)
  isExternal: false
  name: Item[T]
  nameWithType: SearchIndex<T, TRecordIDList>.Item[T]
  fullName: Microsoft.Health.InvertedIndex.SearchIndex<T, TRecordIDList>.Item[T]
  nameWithType.vb: SearchIndex(Of T, TRecordIDList).Item(T)
  fullName.vb: Microsoft.Health.InvertedIndex.SearchIndex(Of T, TRecordIDList).Item(T)
  name.vb: Item(T)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.SearchIndex`2.Item(`0)
    name: Item
    nameWithType: SearchIndex<T, TRecordIDList>.Item
    fullName: Microsoft.Health.InvertedIndex.SearchIndex<T, TRecordIDList>.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - name: T
    nameWithType: T
    fullName: T
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.SearchIndex`2.Item(`0)
    name: Item
    nameWithType: SearchIndex(Of T, TRecordIDList).Item
    fullName: Microsoft.Health.InvertedIndex.SearchIndex(Of T, TRecordIDList).Item
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.SearchIndex`2.GetTermFrequency(`0)
  commentId: M:Microsoft.Health.InvertedIndex.SearchIndex`2.GetTermFrequency(`0)
  isExternal: false
  name: GetTermFrequency(T)
  nameWithType: SearchIndex<T, TRecordIDList>.GetTermFrequency(T)
  fullName: Microsoft.Health.InvertedIndex.SearchIndex<T, TRecordIDList>.GetTermFrequency(T)
  nameWithType.vb: SearchIndex(Of T, TRecordIDList).GetTermFrequency(T)
  fullName.vb: Microsoft.Health.InvertedIndex.SearchIndex(Of T, TRecordIDList).GetTermFrequency(T)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.SearchIndex`2.GetTermFrequency(`0)
    name: GetTermFrequency
    nameWithType: SearchIndex<T, TRecordIDList>.GetTermFrequency
    fullName: Microsoft.Health.InvertedIndex.SearchIndex<T, TRecordIDList>.GetTermFrequency
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.SearchIndex`2.GetTermFrequency(`0)
    name: GetTermFrequency
    nameWithType: SearchIndex(Of T, TRecordIDList).GetTermFrequency
    fullName: Microsoft.Health.InvertedIndex.SearchIndex(Of T, TRecordIDList).GetTermFrequency
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.SearchIndex`2.Resolve(`0)
  commentId: M:Microsoft.Health.InvertedIndex.SearchIndex`2.Resolve(`0)
  isExternal: false
  name: Resolve(T)
  nameWithType: SearchIndex<T, TRecordIDList>.Resolve(T)
  fullName: Microsoft.Health.InvertedIndex.SearchIndex<T, TRecordIDList>.Resolve(T)
  nameWithType.vb: SearchIndex(Of T, TRecordIDList).Resolve(T)
  fullName.vb: Microsoft.Health.InvertedIndex.SearchIndex(Of T, TRecordIDList).Resolve(T)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.SearchIndex`2.Resolve(`0)
    name: Resolve
    nameWithType: SearchIndex<T, TRecordIDList>.Resolve
    fullName: Microsoft.Health.InvertedIndex.SearchIndex<T, TRecordIDList>.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.SearchIndex`2.Resolve(`0)
    name: Resolve
    nameWithType: SearchIndex(Of T, TRecordIDList).Resolve
    fullName: Microsoft.Health.InvertedIndex.SearchIndex(Of T, TRecordIDList).Resolve
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.SearchIndex`2.Resolve(System.Collections.Generic.IList{`0})
  commentId: M:Microsoft.Health.InvertedIndex.SearchIndex`2.Resolve(System.Collections.Generic.IList{`0})
  isExternal: true
  name: Resolve(IList<T>)
  nameWithType: SearchIndex<T, TRecordIDList>.Resolve(IList<T>)
  fullName: Microsoft.Health.InvertedIndex.SearchIndex<T, TRecordIDList>.Resolve(System.Collections.Generic.IList<T>)
  nameWithType.vb: SearchIndex(Of T, TRecordIDList).Resolve(IList(Of T))
  fullName.vb: Microsoft.Health.InvertedIndex.SearchIndex(Of T, TRecordIDList).Resolve(System.Collections.Generic.IList(Of T))
  name.vb: Resolve(IList(Of T))
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.SearchIndex`2.Resolve(System.Collections.Generic.IList{`0})
    name: Resolve
    nameWithType: SearchIndex<T, TRecordIDList>.Resolve
    fullName: Microsoft.Health.InvertedIndex.SearchIndex<T, TRecordIDList>.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.SearchIndex`2.Resolve(System.Collections.Generic.IList{`0})
    name: Resolve
    nameWithType: SearchIndex(Of T, TRecordIDList).Resolve
    fullName: Microsoft.Health.InvertedIndex.SearchIndex(Of T, TRecordIDList).Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.SearchIndex`2.Resolve(System.Collections.Generic.IList{`0},System.Int32,System.Int32)
  commentId: M:Microsoft.Health.InvertedIndex.SearchIndex`2.Resolve(System.Collections.Generic.IList{`0},System.Int32,System.Int32)
  isExternal: true
  name: Resolve(IList<T>, Int32, Int32)
  nameWithType: SearchIndex<T, TRecordIDList>.Resolve(IList<T>, Int32, Int32)
  fullName: Microsoft.Health.InvertedIndex.SearchIndex<T, TRecordIDList>.Resolve(System.Collections.Generic.IList<T>, System.Int32, System.Int32)
  nameWithType.vb: SearchIndex(Of T, TRecordIDList).Resolve(IList(Of T), Int32, Int32)
  fullName.vb: Microsoft.Health.InvertedIndex.SearchIndex(Of T, TRecordIDList).Resolve(System.Collections.Generic.IList(Of T), System.Int32, System.Int32)
  name.vb: Resolve(IList(Of T), Int32, Int32)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.SearchIndex`2.Resolve(System.Collections.Generic.IList{`0},System.Int32,System.Int32)
    name: Resolve
    nameWithType: SearchIndex<T, TRecordIDList>.Resolve
    fullName: Microsoft.Health.InvertedIndex.SearchIndex<T, TRecordIDList>.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.SearchIndex`2.Resolve(System.Collections.Generic.IList{`0},System.Int32,System.Int32)
    name: Resolve
    nameWithType: SearchIndex(Of T, TRecordIDList).Resolve
    fullName: Microsoft.Health.InvertedIndex.SearchIndex(Of T, TRecordIDList).Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.SearchIndex`2.Resolve(System.Collections.Generic.IEnumerable{`0})
  commentId: M:Microsoft.Health.InvertedIndex.SearchIndex`2.Resolve(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: Resolve(IEnumerable<T>)
  nameWithType: SearchIndex<T, TRecordIDList>.Resolve(IEnumerable<T>)
  fullName: Microsoft.Health.InvertedIndex.SearchIndex<T, TRecordIDList>.Resolve(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: SearchIndex(Of T, TRecordIDList).Resolve(IEnumerable(Of T))
  fullName.vb: Microsoft.Health.InvertedIndex.SearchIndex(Of T, TRecordIDList).Resolve(System.Collections.Generic.IEnumerable(Of T))
  name.vb: Resolve(IEnumerable(Of T))
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.SearchIndex`2.Resolve(System.Collections.Generic.IEnumerable{`0})
    name: Resolve
    nameWithType: SearchIndex<T, TRecordIDList>.Resolve
    fullName: Microsoft.Health.InvertedIndex.SearchIndex<T, TRecordIDList>.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.SearchIndex`2.Resolve(System.Collections.Generic.IEnumerable{`0})
    name: Resolve
    nameWithType: SearchIndex(Of T, TRecordIDList).Resolve
    fullName: Microsoft.Health.InvertedIndex.SearchIndex(Of T, TRecordIDList).Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.SearchIndex`2.Resolve(System.Collections.Generic.IList{`0},Microsoft.Health.StructList{Microsoft.Health.InvertedIndex.RecordIDEnumerator}@)
  commentId: M:Microsoft.Health.InvertedIndex.SearchIndex`2.Resolve(System.Collections.Generic.IList{`0},Microsoft.Health.StructList{Microsoft.Health.InvertedIndex.RecordIDEnumerator}@)
  isExternal: true
  name: Resolve(IList<T>, StructList<RecordIDEnumerator>)
  nameWithType: SearchIndex<T, TRecordIDList>.Resolve(IList<T>, StructList<RecordIDEnumerator>)
  fullName: Microsoft.Health.InvertedIndex.SearchIndex<T, TRecordIDList>.Resolve(System.Collections.Generic.IList<T>, Microsoft.Health.StructList<Microsoft.Health.InvertedIndex.RecordIDEnumerator>)
  nameWithType.vb: SearchIndex(Of T, TRecordIDList).Resolve(IList(Of T), StructList(Of RecordIDEnumerator))
  fullName.vb: Microsoft.Health.InvertedIndex.SearchIndex(Of T, TRecordIDList).Resolve(System.Collections.Generic.IList(Of T), Microsoft.Health.StructList(Of Microsoft.Health.InvertedIndex.RecordIDEnumerator))
  name.vb: Resolve(IList(Of T), StructList(Of RecordIDEnumerator))
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.SearchIndex`2.Resolve(System.Collections.Generic.IList{`0},Microsoft.Health.StructList{Microsoft.Health.InvertedIndex.RecordIDEnumerator}@)
    name: Resolve
    nameWithType: SearchIndex<T, TRecordIDList>.Resolve
    fullName: Microsoft.Health.InvertedIndex.SearchIndex<T, TRecordIDList>.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.StructList`1
    name: StructList
    nameWithType: StructList
    fullName: Microsoft.Health.StructList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.InvertedIndex.RecordIDEnumerator
    name: RecordIDEnumerator
    nameWithType: RecordIDEnumerator
    fullName: Microsoft.Health.InvertedIndex.RecordIDEnumerator
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.SearchIndex`2.Resolve(System.Collections.Generic.IList{`0},Microsoft.Health.StructList{Microsoft.Health.InvertedIndex.RecordIDEnumerator}@)
    name: Resolve
    nameWithType: SearchIndex(Of T, TRecordIDList).Resolve
    fullName: Microsoft.Health.InvertedIndex.SearchIndex(Of T, TRecordIDList).Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.StructList`1
    name: StructList
    nameWithType: StructList
    fullName: Microsoft.Health.StructList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.InvertedIndex.RecordIDEnumerator
    name: RecordIDEnumerator
    nameWithType: RecordIDEnumerator
    fullName: Microsoft.Health.InvertedIndex.RecordIDEnumerator
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.SearchIndex`2.Resolve(System.Collections.Generic.IList{`0},System.Int32,System.Int32,Microsoft.Health.StructList{Microsoft.Health.InvertedIndex.RecordIDEnumerator}@)
  commentId: M:Microsoft.Health.InvertedIndex.SearchIndex`2.Resolve(System.Collections.Generic.IList{`0},System.Int32,System.Int32,Microsoft.Health.StructList{Microsoft.Health.InvertedIndex.RecordIDEnumerator}@)
  isExternal: true
  name: Resolve(IList<T>, Int32, Int32, StructList<RecordIDEnumerator>)
  nameWithType: SearchIndex<T, TRecordIDList>.Resolve(IList<T>, Int32, Int32, StructList<RecordIDEnumerator>)
  fullName: Microsoft.Health.InvertedIndex.SearchIndex<T, TRecordIDList>.Resolve(System.Collections.Generic.IList<T>, System.Int32, System.Int32, Microsoft.Health.StructList<Microsoft.Health.InvertedIndex.RecordIDEnumerator>)
  nameWithType.vb: SearchIndex(Of T, TRecordIDList).Resolve(IList(Of T), Int32, Int32, StructList(Of RecordIDEnumerator))
  fullName.vb: Microsoft.Health.InvertedIndex.SearchIndex(Of T, TRecordIDList).Resolve(System.Collections.Generic.IList(Of T), System.Int32, System.Int32, Microsoft.Health.StructList(Of Microsoft.Health.InvertedIndex.RecordIDEnumerator))
  name.vb: Resolve(IList(Of T), Int32, Int32, StructList(Of RecordIDEnumerator))
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.SearchIndex`2.Resolve(System.Collections.Generic.IList{`0},System.Int32,System.Int32,Microsoft.Health.StructList{Microsoft.Health.InvertedIndex.RecordIDEnumerator}@)
    name: Resolve
    nameWithType: SearchIndex<T, TRecordIDList>.Resolve
    fullName: Microsoft.Health.InvertedIndex.SearchIndex<T, TRecordIDList>.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.StructList`1
    name: StructList
    nameWithType: StructList
    fullName: Microsoft.Health.StructList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.InvertedIndex.RecordIDEnumerator
    name: RecordIDEnumerator
    nameWithType: RecordIDEnumerator
    fullName: Microsoft.Health.InvertedIndex.RecordIDEnumerator
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.SearchIndex`2.Resolve(System.Collections.Generic.IList{`0},System.Int32,System.Int32,Microsoft.Health.StructList{Microsoft.Health.InvertedIndex.RecordIDEnumerator}@)
    name: Resolve
    nameWithType: SearchIndex(Of T, TRecordIDList).Resolve
    fullName: Microsoft.Health.InvertedIndex.SearchIndex(Of T, TRecordIDList).Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.StructList`1
    name: StructList
    nameWithType: StructList
    fullName: Microsoft.Health.StructList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.InvertedIndex.RecordIDEnumerator
    name: RecordIDEnumerator
    nameWithType: RecordIDEnumerator
    fullName: Microsoft.Health.InvertedIndex.RecordIDEnumerator
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.SortedIndex`2.Count
  commentId: P:Microsoft.Health.SortedIndex`2.Count
  isExternal: false
  name: Count
  nameWithType: SortedIndex<K, V>.Count
  fullName: Microsoft.Health.SortedIndex<K, V>.Count
  nameWithType.vb: SortedIndex(Of K, V).Count
  fullName.vb: Microsoft.Health.SortedIndex(Of K, V).Count
- uid: Microsoft.Health.SortedIndex`2.Item(System.Int32)
  commentId: P:Microsoft.Health.SortedIndex`2.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: SortedIndex<K, V>.Item[Int32]
  fullName: Microsoft.Health.SortedIndex<K, V>.Item[System.Int32]
  nameWithType.vb: SortedIndex(Of K, V).Item(Int32)
  fullName.vb: Microsoft.Health.SortedIndex(Of K, V).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: Microsoft.Health.SortedIndex`2.Item(System.Int32)
    name: Item
    nameWithType: SortedIndex<K, V>.Item
    fullName: Microsoft.Health.SortedIndex<K, V>.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: Microsoft.Health.SortedIndex`2.Item(System.Int32)
    name: Item
    nameWithType: SortedIndex(Of K, V).Item
    fullName: Microsoft.Health.SortedIndex(Of K, V).Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.SortedIndex`2.IsReady
  commentId: P:Microsoft.Health.SortedIndex`2.IsReady
  isExternal: false
  name: IsReady
  nameWithType: SortedIndex<K, V>.IsReady
  fullName: Microsoft.Health.SortedIndex<K, V>.IsReady
  nameWithType.vb: SortedIndex(Of K, V).IsReady
  fullName.vb: Microsoft.Health.SortedIndex(Of K, V).IsReady
- uid: Microsoft.Health.SortedIndex`2.Keys
  commentId: P:Microsoft.Health.SortedIndex`2.Keys
  isExternal: false
  name: Keys
  nameWithType: SortedIndex<K, V>.Keys
  fullName: Microsoft.Health.SortedIndex<K, V>.Keys
  nameWithType.vb: SortedIndex(Of K, V).Keys
  fullName.vb: Microsoft.Health.SortedIndex(Of K, V).Keys
- uid: Microsoft.Health.SortedIndex`2.Values
  commentId: P:Microsoft.Health.SortedIndex`2.Values
  isExternal: false
  name: Values
  nameWithType: SortedIndex<K, V>.Values
  fullName: Microsoft.Health.SortedIndex<K, V>.Values
  nameWithType.vb: SortedIndex(Of K, V).Values
  fullName.vb: Microsoft.Health.SortedIndex(Of K, V).Values
- uid: Microsoft.Health.SortedIndex`2.ContainsKey(`0)
  commentId: M:Microsoft.Health.SortedIndex`2.ContainsKey(`0)
  isExternal: false
  name: ContainsKey(K)
  nameWithType: SortedIndex<K, V>.ContainsKey(K)
  fullName: Microsoft.Health.SortedIndex<K, V>.ContainsKey(K)
  nameWithType.vb: SortedIndex(Of K, V).ContainsKey(K)
  fullName.vb: Microsoft.Health.SortedIndex(Of K, V).ContainsKey(K)
  spec.csharp:
  - uid: Microsoft.Health.SortedIndex`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: SortedIndex<K, V>.ContainsKey
    fullName: Microsoft.Health.SortedIndex<K, V>.ContainsKey
  - name: (
    nameWithType: (
    fullName: (
  - name: K
    nameWithType: K
    fullName: K
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.SortedIndex`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: SortedIndex(Of K, V).ContainsKey
    fullName: Microsoft.Health.SortedIndex(Of K, V).ContainsKey
  - name: (
    nameWithType: (
    fullName: (
  - name: K
    nameWithType: K
    fullName: K
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.SortedIndex`2.Get(`0,`1@)
  commentId: M:Microsoft.Health.SortedIndex`2.Get(`0,`1@)
  isExternal: false
  name: Get(K, V)
  nameWithType: SortedIndex<K, V>.Get(K, V)
  fullName: Microsoft.Health.SortedIndex<K, V>.Get(K, V)
  nameWithType.vb: SortedIndex(Of K, V).Get(K, V)
  fullName.vb: Microsoft.Health.SortedIndex(Of K, V).Get(K, V)
  spec.csharp:
  - uid: Microsoft.Health.SortedIndex`2.Get(`0,`1@)
    name: Get
    nameWithType: SortedIndex<K, V>.Get
    fullName: Microsoft.Health.SortedIndex<K, V>.Get
  - name: (
    nameWithType: (
    fullName: (
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.SortedIndex`2.Get(`0,`1@)
    name: Get
    nameWithType: SortedIndex(Of K, V).Get
    fullName: Microsoft.Health.SortedIndex(Of K, V).Get
  - name: (
    nameWithType: (
    fullName: (
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.SortedIndex`2.Get(`0,System.Collections.Generic.IComparer{`0},`1@)
  commentId: M:Microsoft.Health.SortedIndex`2.Get(`0,System.Collections.Generic.IComparer{`0},`1@)
  isExternal: true
  name: Get(K, IComparer<K>, V)
  nameWithType: SortedIndex<K, V>.Get(K, IComparer<K>, V)
  fullName: Microsoft.Health.SortedIndex<K, V>.Get(K, System.Collections.Generic.IComparer<K>, V)
  nameWithType.vb: SortedIndex(Of K, V).Get(K, IComparer(Of K), V)
  fullName.vb: Microsoft.Health.SortedIndex(Of K, V).Get(K, System.Collections.Generic.IComparer(Of K), V)
  name.vb: Get(K, IComparer(Of K), V)
  spec.csharp:
  - uid: Microsoft.Health.SortedIndex`2.Get(`0,System.Collections.Generic.IComparer{`0},`1@)
    name: Get
    nameWithType: SortedIndex<K, V>.Get
    fullName: Microsoft.Health.SortedIndex<K, V>.Get
  - name: (
    nameWithType: (
    fullName: (
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: K
    nameWithType: K
    fullName: K
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.SortedIndex`2.Get(`0,System.Collections.Generic.IComparer{`0},`1@)
    name: Get
    nameWithType: SortedIndex(Of K, V).Get
    fullName: Microsoft.Health.SortedIndex(Of K, V).Get
  - name: (
    nameWithType: (
    fullName: (
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: K
    nameWithType: K
    fullName: K
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.SortedIndex`2.GetMultiple(`0)
  commentId: M:Microsoft.Health.SortedIndex`2.GetMultiple(`0)
  isExternal: false
  name: GetMultiple(K)
  nameWithType: SortedIndex<K, V>.GetMultiple(K)
  fullName: Microsoft.Health.SortedIndex<K, V>.GetMultiple(K)
  nameWithType.vb: SortedIndex(Of K, V).GetMultiple(K)
  fullName.vb: Microsoft.Health.SortedIndex(Of K, V).GetMultiple(K)
  spec.csharp:
  - uid: Microsoft.Health.SortedIndex`2.GetMultiple(`0)
    name: GetMultiple
    nameWithType: SortedIndex<K, V>.GetMultiple
    fullName: Microsoft.Health.SortedIndex<K, V>.GetMultiple
  - name: (
    nameWithType: (
    fullName: (
  - name: K
    nameWithType: K
    fullName: K
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.SortedIndex`2.GetMultiple(`0)
    name: GetMultiple
    nameWithType: SortedIndex(Of K, V).GetMultiple
    fullName: Microsoft.Health.SortedIndex(Of K, V).GetMultiple
  - name: (
    nameWithType: (
    fullName: (
  - name: K
    nameWithType: K
    fullName: K
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.SortedIndex`2.GetKeys(`0,System.Collections.Generic.IComparer{`0})
  commentId: M:Microsoft.Health.SortedIndex`2.GetKeys(`0,System.Collections.Generic.IComparer{`0})
  isExternal: true
  name: GetKeys(K, IComparer<K>)
  nameWithType: SortedIndex<K, V>.GetKeys(K, IComparer<K>)
  fullName: Microsoft.Health.SortedIndex<K, V>.GetKeys(K, System.Collections.Generic.IComparer<K>)
  nameWithType.vb: SortedIndex(Of K, V).GetKeys(K, IComparer(Of K))
  fullName.vb: Microsoft.Health.SortedIndex(Of K, V).GetKeys(K, System.Collections.Generic.IComparer(Of K))
  name.vb: GetKeys(K, IComparer(Of K))
  spec.csharp:
  - uid: Microsoft.Health.SortedIndex`2.GetKeys(`0,System.Collections.Generic.IComparer{`0})
    name: GetKeys
    nameWithType: SortedIndex<K, V>.GetKeys
    fullName: Microsoft.Health.SortedIndex<K, V>.GetKeys
  - name: (
    nameWithType: (
    fullName: (
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: K
    nameWithType: K
    fullName: K
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.SortedIndex`2.GetKeys(`0,System.Collections.Generic.IComparer{`0})
    name: GetKeys
    nameWithType: SortedIndex(Of K, V).GetKeys
    fullName: Microsoft.Health.SortedIndex(Of K, V).GetKeys
  - name: (
    nameWithType: (
    fullName: (
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: K
    nameWithType: K
    fullName: K
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.SortedIndex`2.Add(`0,`1)
  commentId: M:Microsoft.Health.SortedIndex`2.Add(`0,`1)
  isExternal: false
  name: Add(K, V)
  nameWithType: SortedIndex<K, V>.Add(K, V)
  fullName: Microsoft.Health.SortedIndex<K, V>.Add(K, V)
  nameWithType.vb: SortedIndex(Of K, V).Add(K, V)
  fullName.vb: Microsoft.Health.SortedIndex(Of K, V).Add(K, V)
  spec.csharp:
  - uid: Microsoft.Health.SortedIndex`2.Add(`0,`1)
    name: Add
    nameWithType: SortedIndex<K, V>.Add
    fullName: Microsoft.Health.SortedIndex<K, V>.Add
  - name: (
    nameWithType: (
    fullName: (
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.SortedIndex`2.Add(`0,`1)
    name: Add
    nameWithType: SortedIndex(Of K, V).Add
    fullName: Microsoft.Health.SortedIndex(Of K, V).Add
  - name: (
    nameWithType: (
    fullName: (
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.SortedIndex`2.Add(System.Collections.Generic.KeyValuePair{`0,`1})
  commentId: M:Microsoft.Health.SortedIndex`2.Add(System.Collections.Generic.KeyValuePair{`0,`1})
  isExternal: true
  name: Add(KeyValuePair<K, V>)
  nameWithType: SortedIndex<K, V>.Add(KeyValuePair<K, V>)
  fullName: Microsoft.Health.SortedIndex<K, V>.Add(System.Collections.Generic.KeyValuePair<K, V>)
  nameWithType.vb: SortedIndex(Of K, V).Add(KeyValuePair(Of K, V))
  fullName.vb: Microsoft.Health.SortedIndex(Of K, V).Add(System.Collections.Generic.KeyValuePair(Of K, V))
  name.vb: Add(KeyValuePair(Of K, V))
  spec.csharp:
  - uid: Microsoft.Health.SortedIndex`2.Add(System.Collections.Generic.KeyValuePair{`0,`1})
    name: Add
    nameWithType: SortedIndex<K, V>.Add
    fullName: Microsoft.Health.SortedIndex<K, V>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.SortedIndex`2.Add(System.Collections.Generic.KeyValuePair{`0,`1})
    name: Add
    nameWithType: SortedIndex(Of K, V).Add
    fullName: Microsoft.Health.SortedIndex(Of K, V).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.SortedIndex`2.Add(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  commentId: M:Microsoft.Health.SortedIndex`2.Add(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  isExternal: true
  name: Add(IEnumerable<KeyValuePair<K, V>>)
  nameWithType: SortedIndex<K, V>.Add(IEnumerable<KeyValuePair<K, V>>)
  fullName: Microsoft.Health.SortedIndex<K, V>.Add(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>)
  nameWithType.vb: SortedIndex(Of K, V).Add(IEnumerable(Of KeyValuePair(Of K, V)))
  fullName.vb: Microsoft.Health.SortedIndex(Of K, V).Add(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of K, V)))
  name.vb: Add(IEnumerable(Of KeyValuePair(Of K, V)))
  spec.csharp:
  - uid: Microsoft.Health.SortedIndex`2.Add(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
    name: Add
    nameWithType: SortedIndex<K, V>.Add
    fullName: Microsoft.Health.SortedIndex<K, V>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.SortedIndex`2.Add(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
    name: Add
    nameWithType: SortedIndex(Of K, V).Add
    fullName: Microsoft.Health.SortedIndex(Of K, V).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.SortedIndex`2.SetValue(`0,`1)
  commentId: M:Microsoft.Health.SortedIndex`2.SetValue(`0,`1)
  isExternal: false
  name: SetValue(K, V)
  nameWithType: SortedIndex<K, V>.SetValue(K, V)
  fullName: Microsoft.Health.SortedIndex<K, V>.SetValue(K, V)
  nameWithType.vb: SortedIndex(Of K, V).SetValue(K, V)
  fullName.vb: Microsoft.Health.SortedIndex(Of K, V).SetValue(K, V)
  spec.csharp:
  - uid: Microsoft.Health.SortedIndex`2.SetValue(`0,`1)
    name: SetValue
    nameWithType: SortedIndex<K, V>.SetValue
    fullName: Microsoft.Health.SortedIndex<K, V>.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.SortedIndex`2.SetValue(`0,`1)
    name: SetValue
    nameWithType: SortedIndex(Of K, V).SetValue
    fullName: Microsoft.Health.SortedIndex(Of K, V).SetValue
  - name: (
    nameWithType: (
    fullName: (
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.SortedIndex`2.SetValueAt(System.Int32,`1)
  commentId: M:Microsoft.Health.SortedIndex`2.SetValueAt(System.Int32,`1)
  isExternal: true
  name: SetValueAt(Int32, V)
  nameWithType: SortedIndex<K, V>.SetValueAt(Int32, V)
  fullName: Microsoft.Health.SortedIndex<K, V>.SetValueAt(System.Int32, V)
  nameWithType.vb: SortedIndex(Of K, V).SetValueAt(Int32, V)
  fullName.vb: Microsoft.Health.SortedIndex(Of K, V).SetValueAt(System.Int32, V)
  spec.csharp:
  - uid: Microsoft.Health.SortedIndex`2.SetValueAt(System.Int32,`1)
    name: SetValueAt
    nameWithType: SortedIndex<K, V>.SetValueAt
    fullName: Microsoft.Health.SortedIndex<K, V>.SetValueAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.SortedIndex`2.SetValueAt(System.Int32,`1)
    name: SetValueAt
    nameWithType: SortedIndex(Of K, V).SetValueAt
    fullName: Microsoft.Health.SortedIndex(Of K, V).SetValueAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.SortedIndex`2.BuildIndex
  commentId: M:Microsoft.Health.SortedIndex`2.BuildIndex
  isExternal: false
  name: BuildIndex()
  nameWithType: SortedIndex<K, V>.BuildIndex()
  fullName: Microsoft.Health.SortedIndex<K, V>.BuildIndex()
  nameWithType.vb: SortedIndex(Of K, V).BuildIndex()
  fullName.vb: Microsoft.Health.SortedIndex(Of K, V).BuildIndex()
  spec.csharp:
  - uid: Microsoft.Health.SortedIndex`2.BuildIndex
    name: BuildIndex
    nameWithType: SortedIndex<K, V>.BuildIndex
    fullName: Microsoft.Health.SortedIndex<K, V>.BuildIndex
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.SortedIndex`2.BuildIndex
    name: BuildIndex
    nameWithType: SortedIndex(Of K, V).BuildIndex
    fullName: Microsoft.Health.SortedIndex(Of K, V).BuildIndex
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.SortedIndex`2.BuildIndex(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  commentId: M:Microsoft.Health.SortedIndex`2.BuildIndex(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  isExternal: true
  name: BuildIndex(IEnumerable<KeyValuePair<K, V>>)
  nameWithType: SortedIndex<K, V>.BuildIndex(IEnumerable<KeyValuePair<K, V>>)
  fullName: Microsoft.Health.SortedIndex<K, V>.BuildIndex(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>)
  nameWithType.vb: SortedIndex(Of K, V).BuildIndex(IEnumerable(Of KeyValuePair(Of K, V)))
  fullName.vb: Microsoft.Health.SortedIndex(Of K, V).BuildIndex(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of K, V)))
  name.vb: BuildIndex(IEnumerable(Of KeyValuePair(Of K, V)))
  spec.csharp:
  - uid: Microsoft.Health.SortedIndex`2.BuildIndex(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
    name: BuildIndex
    nameWithType: SortedIndex<K, V>.BuildIndex
    fullName: Microsoft.Health.SortedIndex<K, V>.BuildIndex
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.SortedIndex`2.BuildIndex(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
    name: BuildIndex
    nameWithType: SortedIndex(Of K, V).BuildIndex
    fullName: Microsoft.Health.SortedIndex(Of K, V).BuildIndex
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.SortedIndex`2.EnsureCapacity(System.Int32)
  commentId: M:Microsoft.Health.SortedIndex`2.EnsureCapacity(System.Int32)
  isExternal: true
  name: EnsureCapacity(Int32)
  nameWithType: SortedIndex<K, V>.EnsureCapacity(Int32)
  fullName: Microsoft.Health.SortedIndex<K, V>.EnsureCapacity(System.Int32)
  nameWithType.vb: SortedIndex(Of K, V).EnsureCapacity(Int32)
  fullName.vb: Microsoft.Health.SortedIndex(Of K, V).EnsureCapacity(System.Int32)
  spec.csharp:
  - uid: Microsoft.Health.SortedIndex`2.EnsureCapacity(System.Int32)
    name: EnsureCapacity
    nameWithType: SortedIndex<K, V>.EnsureCapacity
    fullName: Microsoft.Health.SortedIndex<K, V>.EnsureCapacity
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.SortedIndex`2.EnsureCapacity(System.Int32)
    name: EnsureCapacity
    nameWithType: SortedIndex(Of K, V).EnsureCapacity
    fullName: Microsoft.Health.SortedIndex(Of K, V).EnsureCapacity
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.SortedIndex`2.IndexOf(`0)
  commentId: M:Microsoft.Health.SortedIndex`2.IndexOf(`0)
  isExternal: false
  name: IndexOf(K)
  nameWithType: SortedIndex<K, V>.IndexOf(K)
  fullName: Microsoft.Health.SortedIndex<K, V>.IndexOf(K)
  nameWithType.vb: SortedIndex(Of K, V).IndexOf(K)
  fullName.vb: Microsoft.Health.SortedIndex(Of K, V).IndexOf(K)
  spec.csharp:
  - uid: Microsoft.Health.SortedIndex`2.IndexOf(`0)
    name: IndexOf
    nameWithType: SortedIndex<K, V>.IndexOf
    fullName: Microsoft.Health.SortedIndex<K, V>.IndexOf
  - name: (
    nameWithType: (
    fullName: (
  - name: K
    nameWithType: K
    fullName: K
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.SortedIndex`2.IndexOf(`0)
    name: IndexOf
    nameWithType: SortedIndex(Of K, V).IndexOf
    fullName: Microsoft.Health.SortedIndex(Of K, V).IndexOf
  - name: (
    nameWithType: (
    fullName: (
  - name: K
    nameWithType: K
    fullName: K
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.SortedIndex`2.IndexOf(`0,System.Collections.Generic.IComparer{`0})
  commentId: M:Microsoft.Health.SortedIndex`2.IndexOf(`0,System.Collections.Generic.IComparer{`0})
  isExternal: true
  name: IndexOf(K, IComparer<K>)
  nameWithType: SortedIndex<K, V>.IndexOf(K, IComparer<K>)
  fullName: Microsoft.Health.SortedIndex<K, V>.IndexOf(K, System.Collections.Generic.IComparer<K>)
  nameWithType.vb: SortedIndex(Of K, V).IndexOf(K, IComparer(Of K))
  fullName.vb: Microsoft.Health.SortedIndex(Of K, V).IndexOf(K, System.Collections.Generic.IComparer(Of K))
  name.vb: IndexOf(K, IComparer(Of K))
  spec.csharp:
  - uid: Microsoft.Health.SortedIndex`2.IndexOf(`0,System.Collections.Generic.IComparer{`0})
    name: IndexOf
    nameWithType: SortedIndex<K, V>.IndexOf
    fullName: Microsoft.Health.SortedIndex<K, V>.IndexOf
  - name: (
    nameWithType: (
    fullName: (
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: K
    nameWithType: K
    fullName: K
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.SortedIndex`2.IndexOf(`0,System.Collections.Generic.IComparer{`0})
    name: IndexOf
    nameWithType: SortedIndex(Of K, V).IndexOf
    fullName: Microsoft.Health.SortedIndex(Of K, V).IndexOf
  - name: (
    nameWithType: (
    fullName: (
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: K
    nameWithType: K
    fullName: K
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.SortedIndex`2.EnsureReady
  commentId: M:Microsoft.Health.SortedIndex`2.EnsureReady
  isExternal: false
  name: EnsureReady()
  nameWithType: SortedIndex<K, V>.EnsureReady()
  fullName: Microsoft.Health.SortedIndex<K, V>.EnsureReady()
  nameWithType.vb: SortedIndex(Of K, V).EnsureReady()
  fullName.vb: Microsoft.Health.SortedIndex(Of K, V).EnsureReady()
  spec.csharp:
  - uid: Microsoft.Health.SortedIndex`2.EnsureReady
    name: EnsureReady
    nameWithType: SortedIndex<K, V>.EnsureReady
    fullName: Microsoft.Health.SortedIndex<K, V>.EnsureReady
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.SortedIndex`2.EnsureReady
    name: EnsureReady
    nameWithType: SortedIndex(Of K, V).EnsureReady
    fullName: Microsoft.Health.SortedIndex(Of K, V).EnsureReady
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.SortedIndex`2.GetEnumerator
  commentId: M:Microsoft.Health.SortedIndex`2.GetEnumerator
  isExternal: false
  name: GetEnumerator()
  nameWithType: SortedIndex<K, V>.GetEnumerator()
  fullName: Microsoft.Health.SortedIndex<K, V>.GetEnumerator()
  nameWithType.vb: SortedIndex(Of K, V).GetEnumerator()
  fullName.vb: Microsoft.Health.SortedIndex(Of K, V).GetEnumerator()
  spec.csharp:
  - uid: Microsoft.Health.SortedIndex`2.GetEnumerator
    name: GetEnumerator
    nameWithType: SortedIndex<K, V>.GetEnumerator
    fullName: Microsoft.Health.SortedIndex<K, V>.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.SortedIndex`2.GetEnumerator
    name: GetEnumerator
    nameWithType: SortedIndex(Of K, V).GetEnumerator
    fullName: Microsoft.Health.SortedIndex(Of K, V).GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.SortedIndex`2.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Microsoft.Health.SortedIndex`2.System#Collections#IEnumerable#GetEnumerator
  isExternal: false
  name: IEnumerable.GetEnumerator()
  nameWithType: SortedIndex<K, V>.IEnumerable.GetEnumerator()
  fullName: Microsoft.Health.SortedIndex<K, V>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: SortedIndex(Of K, V).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: Microsoft.Health.SortedIndex(Of K, V).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: Microsoft.Health.SortedIndex`2.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: SortedIndex<K, V>.IEnumerable.GetEnumerator
    fullName: Microsoft.Health.SortedIndex<K, V>.System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.SortedIndex`2.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: SortedIndex(Of K, V).System.Collections.IEnumerable.GetEnumerator
    fullName: Microsoft.Health.SortedIndex(Of K, V).System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.SortedIndex`2.Compare(`0,`0)
  commentId: M:Microsoft.Health.SortedIndex`2.Compare(`0,`0)
  isExternal: false
  name: Compare(K, K)
  nameWithType: SortedIndex<K, V>.Compare(K, K)
  fullName: Microsoft.Health.SortedIndex<K, V>.Compare(K, K)
  nameWithType.vb: SortedIndex(Of K, V).Compare(K, K)
  fullName.vb: Microsoft.Health.SortedIndex(Of K, V).Compare(K, K)
  spec.csharp:
  - uid: Microsoft.Health.SortedIndex`2.Compare(`0,`0)
    name: Compare
    nameWithType: SortedIndex<K, V>.Compare
    fullName: Microsoft.Health.SortedIndex<K, V>.Compare
  - name: (
    nameWithType: (
    fullName: (
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: K
    nameWithType: K
    fullName: K
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.SortedIndex`2.Compare(`0,`0)
    name: Compare
    nameWithType: SortedIndex(Of K, V).Compare
    fullName: Microsoft.Health.SortedIndex(Of K, V).Compare
  - name: (
    nameWithType: (
    fullName: (
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: K
    nameWithType: K
    fullName: K
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Health.InvertedIndex.AutoCompleteIndex.#ctor*
  commentId: Overload:Microsoft.Health.InvertedIndex.AutoCompleteIndex.#ctor
  isExternal: false
  name: AutoCompleteIndex
  nameWithType: AutoCompleteIndex.AutoCompleteIndex
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteIndex.AutoCompleteIndex
- uid: Microsoft.Health.InvertedIndex.NormalizingWordBreaker
  commentId: T:Microsoft.Health.InvertedIndex.NormalizingWordBreaker
  parent: Microsoft.Health.InvertedIndex
  isExternal: false
  name: NormalizingWordBreaker
  nameWithType: NormalizingWordBreaker
  fullName: Microsoft.Health.InvertedIndex.NormalizingWordBreaker
- uid: Microsoft.Health.InvertedIndex.PhoneticMap
  commentId: T:Microsoft.Health.InvertedIndex.PhoneticMap
  parent: Microsoft.Health.InvertedIndex
  isExternal: false
  name: PhoneticMap
  nameWithType: PhoneticMap
  fullName: Microsoft.Health.InvertedIndex.PhoneticMap
- uid: Microsoft.Health.InvertedIndex.AutoCompleteIndex.PhoneticMap*
  commentId: Overload:Microsoft.Health.InvertedIndex.AutoCompleteIndex.PhoneticMap
  isExternal: false
  name: PhoneticMap
  nameWithType: AutoCompleteIndex.PhoneticMap
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteIndex.PhoneticMap
- uid: Microsoft.Health.InvertedIndex.AutoCompleteIndex.StaticScores*
  commentId: Overload:Microsoft.Health.InvertedIndex.AutoCompleteIndex.StaticScores
  isExternal: false
  name: StaticScores
  nameWithType: AutoCompleteIndex.StaticScores
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteIndex.StaticScores
- uid: Microsoft.Health.InvertedIndex.IStaticScoreTable
  commentId: T:Microsoft.Health.InvertedIndex.IStaticScoreTable
  parent: Microsoft.Health.InvertedIndex
  isExternal: false
  name: IStaticScoreTable
  nameWithType: IStaticScoreTable
  fullName: Microsoft.Health.InvertedIndex.IStaticScoreTable
- uid: Microsoft.Health.InvertedIndex.AutoCompleteIndex.Statistics*
  commentId: Overload:Microsoft.Health.InvertedIndex.AutoCompleteIndex.Statistics
  isExternal: false
  name: Statistics
  nameWithType: AutoCompleteIndex.Statistics
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteIndex.Statistics
- uid: Microsoft.Health.InvertedIndex.ICorpusStatistics
  commentId: T:Microsoft.Health.InvertedIndex.ICorpusStatistics
  parent: Microsoft.Health.InvertedIndex
  isExternal: false
  name: ICorpusStatistics
  nameWithType: ICorpusStatistics
  fullName: Microsoft.Health.InvertedIndex.ICorpusStatistics
- uid: Microsoft.Health.InvertedIndex.AutoCompleteIndex.RecordReferences*
  commentId: Overload:Microsoft.Health.InvertedIndex.AutoCompleteIndex.RecordReferences
  isExternal: false
  name: RecordReferences
  nameWithType: AutoCompleteIndex.RecordReferences
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteIndex.RecordReferences
- uid: Microsoft.Health.InvertedIndex.IRecordPropertyList{System.UInt32}
  commentId: T:Microsoft.Health.InvertedIndex.IRecordPropertyList{System.UInt32}
  parent: Microsoft.Health.InvertedIndex
  definition: Microsoft.Health.InvertedIndex.IRecordPropertyList`1
  name: IRecordPropertyList<UInt32>
  nameWithType: IRecordPropertyList<UInt32>
  fullName: Microsoft.Health.InvertedIndex.IRecordPropertyList<System.UInt32>
  nameWithType.vb: IRecordPropertyList(Of UInt32)
  fullName.vb: Microsoft.Health.InvertedIndex.IRecordPropertyList(Of System.UInt32)
  name.vb: IRecordPropertyList(Of UInt32)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.IRecordPropertyList`1
    name: IRecordPropertyList
    nameWithType: IRecordPropertyList
    fullName: Microsoft.Health.InvertedIndex.IRecordPropertyList
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.IRecordPropertyList`1
    name: IRecordPropertyList
    nameWithType: IRecordPropertyList
    fullName: Microsoft.Health.InvertedIndex.IRecordPropertyList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.IRecordPropertyList`1
  commentId: T:Microsoft.Health.InvertedIndex.IRecordPropertyList`1
  isExternal: false
  name: IRecordPropertyList<T>
  nameWithType: IRecordPropertyList<T>
  fullName: Microsoft.Health.InvertedIndex.IRecordPropertyList<T>
  nameWithType.vb: IRecordPropertyList(Of T)
  fullName.vb: Microsoft.Health.InvertedIndex.IRecordPropertyList(Of T)
  name.vb: IRecordPropertyList(Of T)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.IRecordPropertyList`1
    name: IRecordPropertyList
    nameWithType: IRecordPropertyList
    fullName: Microsoft.Health.InvertedIndex.IRecordPropertyList
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.IRecordPropertyList`1
    name: IRecordPropertyList
    nameWithType: IRecordPropertyList
    fullName: Microsoft.Health.InvertedIndex.IRecordPropertyList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.AutoCompleteIndex.Boosts*
  commentId: Overload:Microsoft.Health.InvertedIndex.AutoCompleteIndex.Boosts
  isExternal: false
  name: Boosts
  nameWithType: AutoCompleteIndex.Boosts
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteIndex.Boosts
- uid: Microsoft.Health.InvertedIndex.TermBoosts
  commentId: T:Microsoft.Health.InvertedIndex.TermBoosts
  parent: Microsoft.Health.InvertedIndex
  isExternal: false
  name: TermBoosts
  nameWithType: TermBoosts
  fullName: Microsoft.Health.InvertedIndex.TermBoosts
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Health.InvertedIndex.AutoCompleteIndex.MaxPrefixMatches*
  commentId: Overload:Microsoft.Health.InvertedIndex.AutoCompleteIndex.MaxPrefixMatches
  isExternal: false
  name: MaxPrefixMatches
  nameWithType: AutoCompleteIndex.MaxPrefixMatches
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteIndex.MaxPrefixMatches
- uid: Microsoft.Health.InvertedIndex.AutoCompleteIndex.WordBreaker*
  commentId: Overload:Microsoft.Health.InvertedIndex.AutoCompleteIndex.WordBreaker
  isExternal: false
  name: WordBreaker
  nameWithType: AutoCompleteIndex.WordBreaker
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteIndex.WordBreaker
- uid: Microsoft.Health.InvertedIndex.AutoCompleteIndex.Search*
  commentId: Overload:Microsoft.Health.InvertedIndex.AutoCompleteIndex.Search
  isExternal: false
  name: Search
  nameWithType: AutoCompleteIndex.Search
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteIndex.Search
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.InvertedIndex.MatchCollector
  commentId: T:Microsoft.Health.InvertedIndex.MatchCollector
  parent: Microsoft.Health.InvertedIndex
  isExternal: false
  name: MatchCollector
  nameWithType: MatchCollector
  fullName: Microsoft.Health.InvertedIndex.MatchCollector
- uid: Microsoft.Health.InvertedIndex.AutoCompleteIndex.SearchFuzzy*
  commentId: Overload:Microsoft.Health.InvertedIndex.AutoCompleteIndex.SearchFuzzy
  isExternal: false
  name: SearchFuzzy
  nameWithType: AutoCompleteIndex.SearchFuzzy
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteIndex.SearchFuzzy
- uid: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder
  commentId: T:Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder
  parent: Microsoft.Health.InvertedIndex
  isExternal: false
  name: AutoCompleteQueryBuilder
  nameWithType: AutoCompleteQueryBuilder
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteQueryBuilder
- uid: Microsoft.Health.InvertedIndex.AutoCompleteIndex.SearchExact*
  commentId: Overload:Microsoft.Health.InvertedIndex.AutoCompleteIndex.SearchExact
  isExternal: false
  name: SearchExact
  nameWithType: AutoCompleteIndex.SearchExact
  fullName: Microsoft.Health.InvertedIndex.AutoCompleteIndex.SearchExact
- uid: Microsoft.Health.InvertedIndex.VectorQueryBuilder
  commentId: T:Microsoft.Health.InvertedIndex.VectorQueryBuilder
  parent: Microsoft.Health.InvertedIndex
  isExternal: false
  name: VectorQueryBuilder
  nameWithType: VectorQueryBuilder
  fullName: Microsoft.Health.InvertedIndex.VectorQueryBuilder
