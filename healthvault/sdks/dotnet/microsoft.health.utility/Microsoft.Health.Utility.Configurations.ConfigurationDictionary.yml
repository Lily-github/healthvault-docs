### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Utility.Configurations.ConfigurationDictionary
  commentId: T:Microsoft.Health.Utility.Configurations.ConfigurationDictionary
  id: ConfigurationDictionary
  parent: Microsoft.Health.Utility.Configurations
  children:
  - Microsoft.Health.Utility.Configurations.ConfigurationDictionary.#ctor
  - Microsoft.Health.Utility.Configurations.ConfigurationDictionary.#ctor(System.Collections.Generic.IDictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem})
  - Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetBoolean(System.String)
  - Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetComponentConfigurationOnly(System.String)
  - Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetGuid(System.String)
  - Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetInt32(System.String)
  - Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetString(System.String)
  - Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetString(System.String,System.String)
  - Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetUri(System.String)
  - Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetUri(System.String,System.Uri)
  - Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GlobalConfiguration
  - Microsoft.Health.Utility.Configurations.ConfigurationDictionary.Merge(Microsoft.Health.Utility.Configurations.ConfigurationDictionary)
  - Microsoft.Health.Utility.Configurations.ConfigurationDictionary.SetConfig(System.Object,System.Boolean)
  - Microsoft.Health.Utility.Configurations.ConfigurationDictionary.SetConfigSuppressParseExceptions(System.Object,System.Boolean)
  langs:
  - csharp
  - vb
  name: ConfigurationDictionary
  nameWithType: ConfigurationDictionary
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationDictionary
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/ConfigurationDictionary.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ConfigurationDictionary
    path: HVConfig/ConfigurationDictionary.cs
    startLine: 23
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nConfigurationDictionary holds a collection of HealthVault configuration data.\n"
  example: []
  syntax:
    content: 'public class ConfigurationDictionary : Dictionary<string, ConfigurationItem>, IDictionary<string, ConfigurationItem>, ICollection<KeyValuePair<string, ConfigurationItem>>, IDictionary, ICollection, IReadOnlyDictionary<string, ConfigurationItem>, IReadOnlyCollection<KeyValuePair<string, ConfigurationItem>>, IEnumerable<KeyValuePair<string, ConfigurationItem>>, IEnumerable, ISerializable, IDeserializationCallback'
    content.vb: >-
      Public Class ConfigurationDictionary
          Inherits Dictionary(Of String, ConfigurationItem)
          Implements IDictionary(Of String, ConfigurationItem), ICollection(Of KeyValuePair(Of String, ConfigurationItem)), IDictionary, ICollection, IReadOnlyDictionary(Of String, ConfigurationItem), IReadOnlyCollection(Of KeyValuePair(Of String, ConfigurationItem)), IEnumerable(Of KeyValuePair(Of String, ConfigurationItem)), IEnumerable, ISerializable, IDeserializationCallback
  inheritance:
  - System.Object
  - System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}
  implements:
  - System.Collections.Generic.IDictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}}
  - System.Collections.IDictionary
  - System.Collections.ICollection
  - System.Collections.Generic.IReadOnlyDictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}
  - System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}}
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}}
  - System.Collections.IEnumerable
  - System.Runtime.Serialization.ISerializable
  - System.Runtime.Serialization.IDeserializationCallback
  inheritedMembers:
  - System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.Add(System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem)
  - System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem})
  - System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem})
  - System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem})
  - System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.Clear
  - System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.ContainsKey(System.String)
  - System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.ContainsValue(Microsoft.Health.Utility.Configurations.ConfigurationItem)
  - System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.GetEnumerator
  - System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
  - System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.OnDeserialization(System.Object)
  - System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.Remove(System.String)
  - System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.TryGetValue(System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem@)
  - System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}[],System.Int32)
  - System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#IDictionary#get_Item(System.Object)
  - System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#IDictionary#set_Item(System.Object,System.Object)
  - System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#IDictionary#Add(System.Object,System.Object)
  - System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#IDictionary#Contains(System.Object)
  - System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#IDictionary#GetEnumerator
  - System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#IDictionary#Remove(System.Object)
  - System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.Comparer
  - System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.Count
  - System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.Keys
  - System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#Generic#IDictionary{TKey,TValue}#Keys
  - System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys
  - System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.Values
  - System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#Generic#IDictionary{TKey,TValue}#Values
  - System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values
  - System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.Item(System.String)
  - System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  - System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#ICollection#IsSynchronized
  - System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#ICollection#SyncRoot
  - System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#IDictionary#IsFixedSize
  - System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#IDictionary#IsReadOnly
  - System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#IDictionary#Keys
  - System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#IDictionary#Values
  - System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#IDictionary#Item(System.Object)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.Utility.Configurations.ConfigurationDictionary.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.#ctor
  commentId: M:Microsoft.Health.Utility.Configurations.ConfigurationDictionary.#ctor
  id: '#ctor'
  parent: Microsoft.Health.Utility.Configurations.ConfigurationDictionary
  langs:
  - csharp
  - vb
  name: ConfigurationDictionary()
  nameWithType: ConfigurationDictionary.ConfigurationDictionary()
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.ConfigurationDictionary()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/ConfigurationDictionary.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: HVConfig/ConfigurationDictionary.cs
    startLine: 32
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nConstructor which always sets the key comparison to ignore case.\n"
  example: []
  syntax:
    content: public ConfigurationDictionary()
    content.vb: Public Sub New
  overload: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.#ctor(System.Collections.Generic.IDictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem})
  commentId: M:Microsoft.Health.Utility.Configurations.ConfigurationDictionary.#ctor(System.Collections.Generic.IDictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem})
  id: '#ctor(System.Collections.Generic.IDictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem})'
  parent: Microsoft.Health.Utility.Configurations.ConfigurationDictionary
  langs:
  - csharp
  - vb
  name: ConfigurationDictionary(IDictionary<String, ConfigurationItem>)
  nameWithType: ConfigurationDictionary.ConfigurationDictionary(IDictionary<String, ConfigurationItem>)
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.ConfigurationDictionary(System.Collections.Generic.IDictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/ConfigurationDictionary.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: HVConfig/ConfigurationDictionary.cs
    startLine: 37
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  syntax:
    content: public ConfigurationDictionary(IDictionary<string, ConfigurationItem> dictionary)
    content.vb: Public Sub New(dictionary As IDictionary(Of String, ConfigurationItem))
    parameters:
    - id: dictionary
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}
  overload: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.#ctor*
  nameWithType.vb: ConfigurationDictionary.ConfigurationDictionary(IDictionary(Of String, ConfigurationItem))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.ConfigurationDictionary(System.Collections.Generic.IDictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem))
  name.vb: ConfigurationDictionary(IDictionary(Of String, ConfigurationItem))
- uid: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GlobalConfiguration
  commentId: P:Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GlobalConfiguration
  id: GlobalConfiguration
  parent: Microsoft.Health.Utility.Configurations.ConfigurationDictionary
  langs:
  - csharp
  - vb
  name: GlobalConfiguration
  nameWithType: ConfigurationDictionary.GlobalConfiguration
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GlobalConfiguration
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/ConfigurationDictionary.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GlobalConfiguration
    path: HVConfig/ConfigurationDictionary.cs
    startLine: 45
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nGets configuration for global only\n"
  example: []
  syntax:
    content: public ConfigurationDictionary GlobalConfiguration { get; }
    content.vb: Public ReadOnly Property GlobalConfiguration As ConfigurationDictionary
    parameters: []
    return:
      type: Microsoft.Health.Utility.Configurations.ConfigurationDictionary
  overload: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GlobalConfiguration*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetComponentConfigurationOnly(System.String)
  commentId: M:Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetComponentConfigurationOnly(System.String)
  id: GetComponentConfigurationOnly(System.String)
  parent: Microsoft.Health.Utility.Configurations.ConfigurationDictionary
  langs:
  - csharp
  - vb
  name: GetComponentConfigurationOnly(String)
  nameWithType: ConfigurationDictionary.GetComponentConfigurationOnly(String)
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetComponentConfigurationOnly(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/ConfigurationDictionary.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetComponentConfigurationOnly
    path: HVConfig/ConfigurationDictionary.cs
    startLine: 69
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nGets configuration for component only\n"
  example: []
  syntax:
    content: public ConfigurationDictionary GetComponentConfigurationOnly(string componentName)
    content.vb: Public Function GetComponentConfigurationOnly(componentName As String) As ConfigurationDictionary
    parameters:
    - id: componentName
      type: System.String
    return:
      type: Microsoft.Health.Utility.Configurations.ConfigurationDictionary
  overload: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetComponentConfigurationOnly*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetString(System.String)
  commentId: M:Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetString(System.String)
  id: GetString(System.String)
  parent: Microsoft.Health.Utility.Configurations.ConfigurationDictionary
  langs:
  - csharp
  - vb
  name: GetString(String)
  nameWithType: ConfigurationDictionary.GetString(String)
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetString(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/ConfigurationDictionary.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetString
    path: HVConfig/ConfigurationDictionary.cs
    startLine: 91
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nRetrieves configuration value given the key.\n"
  example: []
  syntax:
    content: public string GetString(string key)
    content.vb: Public Function GetString(key As String) As String
    parameters:
    - id: key
      type: System.String
      description: Configuration key
    return:
      type: System.String
      description: Returns the string value if key is found.  If key is not found, returns null as value.
  overload: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetString(System.String,System.String)
  commentId: M:Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetString(System.String,System.String)
  id: GetString(System.String,System.String)
  parent: Microsoft.Health.Utility.Configurations.ConfigurationDictionary
  langs:
  - csharp
  - vb
  name: GetString(String, String)
  nameWithType: ConfigurationDictionary.GetString(String, String)
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetString(System.String, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/ConfigurationDictionary.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetString
    path: HVConfig/ConfigurationDictionary.cs
    startLine: 102
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nRetrieves the configuration value and set to default value if not found given the key.\n"
  example: []
  syntax:
    content: public string GetString(string key, string defaultValue)
    content.vb: Public Function GetString(key As String, defaultValue As String) As String
    parameters:
    - id: key
      type: System.String
      description: Configuration key
    - id: defaultValue
      type: System.String
      description: Default value to return if key not found
    return:
      type: System.String
      description: Returns the string value if key is found.  If key is not found, returns defaultValue as value.
  overload: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetInt32(System.String)
  commentId: M:Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetInt32(System.String)
  id: GetInt32(System.String)
  parent: Microsoft.Health.Utility.Configurations.ConfigurationDictionary
  langs:
  - csharp
  - vb
  name: GetInt32(String)
  nameWithType: ConfigurationDictionary.GetInt32(String)
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetInt32(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/ConfigurationDictionary.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetInt32
    path: HVConfig/ConfigurationDictionary.cs
    startLine: 120
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nRetrieves the configuration value given the key.\n"
  example: []
  syntax:
    content: public int ? GetInt32(string key)
    content.vb: Public Function GetInt32(key As String) As Integer?
    parameters:
    - id: key
      type: System.String
      description: Configuration key
    return:
      type: System.Nullable{System.Int32}
      description: Returns the int value if key is found.
  overload: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetInt32*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetBoolean(System.String)
  commentId: M:Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetBoolean(System.String)
  id: GetBoolean(System.String)
  parent: Microsoft.Health.Utility.Configurations.ConfigurationDictionary
  langs:
  - csharp
  - vb
  name: GetBoolean(String)
  nameWithType: ConfigurationDictionary.GetBoolean(String)
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetBoolean(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/ConfigurationDictionary.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetBoolean
    path: HVConfig/ConfigurationDictionary.cs
    startLine: 138
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nRetrieves the configuration value given the key.\n"
  example: []
  syntax:
    content: public bool ? GetBoolean(string key)
    content.vb: Public Function GetBoolean(key As String) As Boolean?
    parameters:
    - id: key
      type: System.String
      description: Configuration key
    return:
      type: System.Nullable{System.Boolean}
      description: Returns the boolean value if key is found.
  overload: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetBoolean*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetGuid(System.String)
  commentId: M:Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetGuid(System.String)
  id: GetGuid(System.String)
  parent: Microsoft.Health.Utility.Configurations.ConfigurationDictionary
  langs:
  - csharp
  - vb
  name: GetGuid(String)
  nameWithType: ConfigurationDictionary.GetGuid(String)
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetGuid(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/ConfigurationDictionary.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetGuid
    path: HVConfig/ConfigurationDictionary.cs
    startLine: 156
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nRetrieves the configuration value given the key.\n"
  example: []
  syntax:
    content: public Guid? GetGuid(string key)
    content.vb: Public Function GetGuid(key As String) As Guid?
    parameters:
    - id: key
      type: System.String
      description: Configuration key
    return:
      type: System.Nullable{System.Guid}
      description: Returns the guid value if key is found.
  overload: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetGuid*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetUri(System.String)
  commentId: M:Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetUri(System.String)
  id: GetUri(System.String)
  parent: Microsoft.Health.Utility.Configurations.ConfigurationDictionary
  langs:
  - csharp
  - vb
  name: GetUri(String)
  nameWithType: ConfigurationDictionary.GetUri(String)
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetUri(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/ConfigurationDictionary.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetUri
    path: HVConfig/ConfigurationDictionary.cs
    startLine: 174
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nRetrieves configuration value as URL given the key.\n"
  example: []
  syntax:
    content: public Uri GetUri(string key)
    content.vb: Public Function GetUri(key As String) As Uri
    parameters:
    - id: key
      type: System.String
      description: Configuration key
    return:
      type: System.Uri
      description: Returns the value if key is found.  If key is not found, returns null as value.
  overload: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetUri*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetUri(System.String,System.Uri)
  commentId: M:Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetUri(System.String,System.Uri)
  id: GetUri(System.String,System.Uri)
  parent: Microsoft.Health.Utility.Configurations.ConfigurationDictionary
  langs:
  - csharp
  - vb
  name: GetUri(String, Uri)
  nameWithType: ConfigurationDictionary.GetUri(String, Uri)
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetUri(System.String, System.Uri)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/ConfigurationDictionary.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetUri
    path: HVConfig/ConfigurationDictionary.cs
    startLine: 185
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nRetrieves configuration value as URL given the key.\n"
  example: []
  syntax:
    content: public Uri GetUri(string key, Uri defaultValue)
    content.vb: Public Function GetUri(key As String, defaultValue As Uri) As Uri
    parameters:
    - id: key
      type: System.String
      description: Configuration key
    - id: defaultValue
      type: System.Uri
      description: Default value to return if key not found
    return:
      type: System.Uri
      description: Returns the value if key is found.  If key is not found, returns defaultValue as value.
  overload: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetUri*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.Merge(Microsoft.Health.Utility.Configurations.ConfigurationDictionary)
  commentId: M:Microsoft.Health.Utility.Configurations.ConfigurationDictionary.Merge(Microsoft.Health.Utility.Configurations.ConfigurationDictionary)
  id: Merge(Microsoft.Health.Utility.Configurations.ConfigurationDictionary)
  parent: Microsoft.Health.Utility.Configurations.ConfigurationDictionary
  langs:
  - csharp
  - vb
  name: Merge(ConfigurationDictionary)
  nameWithType: ConfigurationDictionary.Merge(ConfigurationDictionary)
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.Merge(Microsoft.Health.Utility.Configurations.ConfigurationDictionary)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/ConfigurationDictionary.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Merge
    path: HVConfig/ConfigurationDictionary.cs
    startLine: 202
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nGiven an override ConfigurationDictionary, merge creates a new result set that combines current with override.\nNote that the override takes priority.\n"
  example: []
  syntax:
    content: public ConfigurationDictionary Merge(ConfigurationDictionary overrideDictionary)
    content.vb: Public Function Merge(overrideDictionary As ConfigurationDictionary) As ConfigurationDictionary
    parameters:
    - id: overrideDictionary
      type: Microsoft.Health.Utility.Configurations.ConfigurationDictionary
    return:
      type: Microsoft.Health.Utility.Configurations.ConfigurationDictionary
  overload: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.Merge*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.SetConfigSuppressParseExceptions(System.Object,System.Boolean)
  commentId: M:Microsoft.Health.Utility.Configurations.ConfigurationDictionary.SetConfigSuppressParseExceptions(System.Object,System.Boolean)
  id: SetConfigSuppressParseExceptions(System.Object,System.Boolean)
  parent: Microsoft.Health.Utility.Configurations.ConfigurationDictionary
  langs:
  - csharp
  - vb
  name: SetConfigSuppressParseExceptions(Object, Boolean)
  nameWithType: ConfigurationDictionary.SetConfigSuppressParseExceptions(Object, Boolean)
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.SetConfigSuppressParseExceptions(System.Object, System.Boolean)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/ConfigurationDictionary.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SetConfigSuppressParseExceptions
    path: HVConfig/ConfigurationDictionary.cs
    startLine: 223
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  syntax:
    content: public SetConfigResult SetConfigSuppressParseExceptions(object configurationValue, bool errorIfMatchNotFound)
    content.vb: Public Function SetConfigSuppressParseExceptions(configurationValue As Object, errorIfMatchNotFound As Boolean) As SetConfigResult
    parameters:
    - id: configurationValue
      type: System.Object
    - id: errorIfMatchNotFound
      type: System.Boolean
    return:
      type: Microsoft.Health.Utility.Configurations.SetConfigResult
  overload: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.SetConfigSuppressParseExceptions*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.SetConfig(System.Object,System.Boolean)
  commentId: M:Microsoft.Health.Utility.Configurations.ConfigurationDictionary.SetConfig(System.Object,System.Boolean)
  id: SetConfig(System.Object,System.Boolean)
  parent: Microsoft.Health.Utility.Configurations.ConfigurationDictionary
  langs:
  - csharp
  - vb
  name: SetConfig(Object, Boolean)
  nameWithType: ConfigurationDictionary.SetConfig(Object, Boolean)
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.SetConfig(System.Object, System.Boolean)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/ConfigurationDictionary.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SetConfig
    path: HVConfig/ConfigurationDictionary.cs
    startLine: 271
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nReturns the given object with properties filled with values found in configuration dictionary given.\n"
  example: []
  syntax:
    content: public object SetConfig(object configurationValue, bool throwIfMatchNotFound)
    content.vb: Public Function SetConfig(configurationValue As Object, throwIfMatchNotFound As Boolean) As Object
    parameters:
    - id: configurationValue
      type: System.Object
    - id: throwIfMatchNotFound
      type: System.Boolean
    return:
      type: System.Object
  overload: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.SetConfig*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Health.Utility.Configurations
  commentId: N:Microsoft.Health.Utility.Configurations
  isExternal: false
  name: Microsoft.Health.Utility.Configurations
  nameWithType: Microsoft.Health.Utility.Configurations
  fullName: Microsoft.Health.Utility.Configurations
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}
  commentId: T:System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, ConfigurationItem>
  nameWithType: Dictionary<String, ConfigurationItem>
  fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>
  nameWithType.vb: Dictionary(Of String, ConfigurationItem)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem)
  name.vb: Dictionary(Of String, ConfigurationItem)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.Utility.Configurations.ConfigurationItem
    name: ConfigurationItem
    nameWithType: ConfigurationItem
    fullName: Microsoft.Health.Utility.Configurations.ConfigurationItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.Utility.Configurations.ConfigurationItem
    name: ConfigurationItem
    nameWithType: ConfigurationItem
    fullName: Microsoft.Health.Utility.Configurations.ConfigurationItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}
  commentId: T:System.Collections.Generic.IDictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, ConfigurationItem>
  nameWithType: IDictionary<String, ConfigurationItem>
  fullName: System.Collections.Generic.IDictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>
  nameWithType.vb: IDictionary(Of String, ConfigurationItem)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem)
  name.vb: IDictionary(Of String, ConfigurationItem)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.Utility.Configurations.ConfigurationItem
    name: ConfigurationItem
    nameWithType: ConfigurationItem
    fullName: Microsoft.Health.Utility.Configurations.ConfigurationItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.Utility.Configurations.ConfigurationItem
    name: ConfigurationItem
    nameWithType: ConfigurationItem
    fullName: Microsoft.Health.Utility.Configurations.ConfigurationItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}}
  commentId: T:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<KeyValuePair<String, ConfigurationItem>>
  nameWithType: ICollection<KeyValuePair<String, ConfigurationItem>>
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>>
  nameWithType.vb: ICollection(Of KeyValuePair(Of String, ConfigurationItem))
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem))
  name.vb: ICollection(Of KeyValuePair(Of String, ConfigurationItem))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.Utility.Configurations.ConfigurationItem
    name: ConfigurationItem
    nameWithType: ConfigurationItem
    fullName: Microsoft.Health.Utility.Configurations.ConfigurationItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.Utility.Configurations.ConfigurationItem
    name: ConfigurationItem
    nameWithType: ConfigurationItem
    fullName: Microsoft.Health.Utility.Configurations.ConfigurationItem
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IDictionary
  commentId: T:System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Collections.ICollection
  commentId: T:System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.Generic.IReadOnlyDictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}
  commentId: T:System.Collections.Generic.IReadOnlyDictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyDictionary`2
  name: IReadOnlyDictionary<String, ConfigurationItem>
  nameWithType: IReadOnlyDictionary<String, ConfigurationItem>
  fullName: System.Collections.Generic.IReadOnlyDictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>
  nameWithType.vb: IReadOnlyDictionary(Of String, ConfigurationItem)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem)
  name.vb: IReadOnlyDictionary(Of String, ConfigurationItem)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.Utility.Configurations.ConfigurationItem
    name: ConfigurationItem
    nameWithType: ConfigurationItem
    fullName: Microsoft.Health.Utility.Configurations.ConfigurationItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.Utility.Configurations.ConfigurationItem
    name: ConfigurationItem
    nameWithType: ConfigurationItem
    fullName: Microsoft.Health.Utility.Configurations.ConfigurationItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<KeyValuePair<String, ConfigurationItem>>
  nameWithType: IReadOnlyCollection<KeyValuePair<String, ConfigurationItem>>
  fullName: System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>>
  nameWithType.vb: IReadOnlyCollection(Of KeyValuePair(Of String, ConfigurationItem))
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem))
  name.vb: IReadOnlyCollection(Of KeyValuePair(Of String, ConfigurationItem))
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.Utility.Configurations.ConfigurationItem
    name: ConfigurationItem
    nameWithType: ConfigurationItem
    fullName: Microsoft.Health.Utility.Configurations.ConfigurationItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.Utility.Configurations.ConfigurationItem
    name: ConfigurationItem
    nameWithType: ConfigurationItem
    fullName: Microsoft.Health.Utility.Configurations.ConfigurationItem
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<String, ConfigurationItem>>
  nameWithType: IEnumerable<KeyValuePair<String, ConfigurationItem>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, ConfigurationItem))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem))
  name.vb: IEnumerable(Of KeyValuePair(Of String, ConfigurationItem))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.Utility.Configurations.ConfigurationItem
    name: ConfigurationItem
    nameWithType: ConfigurationItem
    fullName: Microsoft.Health.Utility.Configurations.ConfigurationItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.Utility.Configurations.ConfigurationItem
    name: ConfigurationItem
    nameWithType: ConfigurationItem
    fullName: Microsoft.Health.Utility.Configurations.ConfigurationItem
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: System.Runtime.Serialization.IDeserializationCallback
  commentId: T:System.Runtime.Serialization.IDeserializationCallback
  parent: System.Runtime.Serialization
  isExternal: true
  name: IDeserializationCallback
  nameWithType: IDeserializationCallback
  fullName: System.Runtime.Serialization.IDeserializationCallback
- uid: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.Add(System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem)
  commentId: M:System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.Add(System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem)
  parent: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}
  definition: System.Collections.Generic.Dictionary`2.Add(`0,`1)
  name: Add(String, ConfigurationItem)
  nameWithType: Dictionary<String, ConfigurationItem>.Add(String, ConfigurationItem)
  fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.Add(System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem)
  nameWithType.vb: Dictionary(Of String, ConfigurationItem).Add(String, ConfigurationItem)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).Add(System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.Add(`0,`1)
    name: Add
    nameWithType: Dictionary<String, ConfigurationItem>.Add
    fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.Utility.Configurations.ConfigurationItem
    name: ConfigurationItem
    nameWithType: ConfigurationItem
    fullName: Microsoft.Health.Utility.Configurations.ConfigurationItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.Add(`0,`1)
    name: Add
    nameWithType: Dictionary(Of String, ConfigurationItem).Add
    fullName: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.Utility.Configurations.ConfigurationItem
    name: ConfigurationItem
    nameWithType: ConfigurationItem
    fullName: Microsoft.Health.Utility.Configurations.ConfigurationItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem})
  commentId: M:System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem})
  parent: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
  name: ICollection<KeyValuePair<String, ConfigurationItem>>.Add(KeyValuePair<String, ConfigurationItem>)
  nameWithType: Dictionary<String, ConfigurationItem>.ICollection<KeyValuePair<String, ConfigurationItem>>.Add(KeyValuePair<String, ConfigurationItem>)
  fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>>.Add(System.Collections.Generic.KeyValuePair<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>)
  nameWithType.vb: Dictionary(Of String, ConfigurationItem).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(KeyValuePair(Of String, ConfigurationItem))
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem))
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(KeyValuePair(Of String, ConfigurationItem))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
    name: ICollection<KeyValuePair<String, ConfigurationItem>>.Add
    nameWithType: Dictionary<String, ConfigurationItem>.ICollection<KeyValuePair<String, ConfigurationItem>>.Add
    fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.Utility.Configurations.ConfigurationItem
    name: ConfigurationItem
    nameWithType: ConfigurationItem
    fullName: Microsoft.Health.Utility.Configurations.ConfigurationItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
    name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add
    nameWithType: Dictionary(Of String, ConfigurationItem).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add
    fullName: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.Utility.Configurations.ConfigurationItem
    name: ConfigurationItem
    nameWithType: ConfigurationItem
    fullName: Microsoft.Health.Utility.Configurations.ConfigurationItem
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem})
  commentId: M:System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem})
  parent: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  name: ICollection<KeyValuePair<String, ConfigurationItem>>.Contains(KeyValuePair<String, ConfigurationItem>)
  nameWithType: Dictionary<String, ConfigurationItem>.ICollection<KeyValuePair<String, ConfigurationItem>>.Contains(KeyValuePair<String, ConfigurationItem>)
  fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>>.Contains(System.Collections.Generic.KeyValuePair<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>)
  nameWithType.vb: Dictionary(Of String, ConfigurationItem).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(KeyValuePair(Of String, ConfigurationItem))
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem))
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(KeyValuePair(Of String, ConfigurationItem))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})
    name: ICollection<KeyValuePair<String, ConfigurationItem>>.Contains
    nameWithType: Dictionary<String, ConfigurationItem>.ICollection<KeyValuePair<String, ConfigurationItem>>.Contains
    fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.Utility.Configurations.ConfigurationItem
    name: ConfigurationItem
    nameWithType: ConfigurationItem
    fullName: Microsoft.Health.Utility.Configurations.ConfigurationItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})
    name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains
    nameWithType: Dictionary(Of String, ConfigurationItem).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains
    fullName: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.Utility.Configurations.ConfigurationItem
    name: ConfigurationItem
    nameWithType: ConfigurationItem
    fullName: Microsoft.Health.Utility.Configurations.ConfigurationItem
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem})
  commentId: M:System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem})
  parent: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  name: ICollection<KeyValuePair<String, ConfigurationItem>>.Remove(KeyValuePair<String, ConfigurationItem>)
  nameWithType: Dictionary<String, ConfigurationItem>.ICollection<KeyValuePair<String, ConfigurationItem>>.Remove(KeyValuePair<String, ConfigurationItem>)
  fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>>.Remove(System.Collections.Generic.KeyValuePair<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>)
  nameWithType.vb: Dictionary(Of String, ConfigurationItem).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(KeyValuePair(Of String, ConfigurationItem))
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem))
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(KeyValuePair(Of String, ConfigurationItem))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
    name: ICollection<KeyValuePair<String, ConfigurationItem>>.Remove
    nameWithType: Dictionary<String, ConfigurationItem>.ICollection<KeyValuePair<String, ConfigurationItem>>.Remove
    fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.Utility.Configurations.ConfigurationItem
    name: ConfigurationItem
    nameWithType: ConfigurationItem
    fullName: Microsoft.Health.Utility.Configurations.ConfigurationItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
    name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove
    nameWithType: Dictionary(Of String, ConfigurationItem).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove
    fullName: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.Utility.Configurations.ConfigurationItem
    name: ConfigurationItem
    nameWithType: ConfigurationItem
    fullName: Microsoft.Health.Utility.Configurations.ConfigurationItem
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.Clear
  commentId: M:System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.Clear
  parent: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}
  definition: System.Collections.Generic.Dictionary`2.Clear
  name: Clear()
  nameWithType: Dictionary<String, ConfigurationItem>.Clear()
  fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.Clear()
  nameWithType.vb: Dictionary(Of String, ConfigurationItem).Clear()
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.Clear
    name: Clear
    nameWithType: Dictionary<String, ConfigurationItem>.Clear
    fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.Clear
    name: Clear
    nameWithType: Dictionary(Of String, ConfigurationItem).Clear
    fullName: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.ContainsKey(System.String)
  commentId: M:System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.ContainsKey(System.String)
  parent: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}
  definition: System.Collections.Generic.Dictionary`2.ContainsKey(`0)
  name: ContainsKey(String)
  nameWithType: Dictionary<String, ConfigurationItem>.ContainsKey(String)
  fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.ContainsKey(System.String)
  nameWithType.vb: Dictionary(Of String, ConfigurationItem).ContainsKey(String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).ContainsKey(System.String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: Dictionary<String, ConfigurationItem>.ContainsKey
    fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.ContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: Dictionary(Of String, ConfigurationItem).ContainsKey
    fullName: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).ContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.ContainsValue(Microsoft.Health.Utility.Configurations.ConfigurationItem)
  commentId: M:System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.ContainsValue(Microsoft.Health.Utility.Configurations.ConfigurationItem)
  parent: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}
  definition: System.Collections.Generic.Dictionary`2.ContainsValue(`1)
  name: ContainsValue(ConfigurationItem)
  nameWithType: Dictionary<String, ConfigurationItem>.ContainsValue(ConfigurationItem)
  fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.ContainsValue(Microsoft.Health.Utility.Configurations.ConfigurationItem)
  nameWithType.vb: Dictionary(Of String, ConfigurationItem).ContainsValue(ConfigurationItem)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).ContainsValue(Microsoft.Health.Utility.Configurations.ConfigurationItem)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.ContainsValue(`1)
    name: ContainsValue
    nameWithType: Dictionary<String, ConfigurationItem>.ContainsValue
    fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.ContainsValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.Utility.Configurations.ConfigurationItem
    name: ConfigurationItem
    nameWithType: ConfigurationItem
    fullName: Microsoft.Health.Utility.Configurations.ConfigurationItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.ContainsValue(`1)
    name: ContainsValue
    nameWithType: Dictionary(Of String, ConfigurationItem).ContainsValue
    fullName: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).ContainsValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.Utility.Configurations.ConfigurationItem
    name: ConfigurationItem
    nameWithType: ConfigurationItem
    fullName: Microsoft.Health.Utility.Configurations.ConfigurationItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.GetEnumerator
  commentId: M:System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.GetEnumerator
  parent: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}
  definition: System.Collections.Generic.Dictionary`2.GetEnumerator
  name: GetEnumerator()
  nameWithType: Dictionary<String, ConfigurationItem>.GetEnumerator()
  fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.GetEnumerator()
  nameWithType.vb: Dictionary(Of String, ConfigurationItem).GetEnumerator()
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.GetEnumerator
    name: GetEnumerator
    nameWithType: Dictionary<String, ConfigurationItem>.GetEnumerator
    fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.GetEnumerator
    name: GetEnumerator
    nameWithType: Dictionary(Of String, ConfigurationItem).GetEnumerator
    fullName: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
  commentId: M:System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
  parent: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
  name: IEnumerable<KeyValuePair<String, ConfigurationItem>>.GetEnumerator()
  nameWithType: Dictionary<String, ConfigurationItem>.IEnumerable<KeyValuePair<String, ConfigurationItem>>.GetEnumerator()
  fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>>.GetEnumerator()
  nameWithType.vb: Dictionary(Of String, ConfigurationItem).System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator()
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
    name: IEnumerable<KeyValuePair<String, ConfigurationItem>>.GetEnumerator
    nameWithType: Dictionary<String, ConfigurationItem>.IEnumerable<KeyValuePair<String, ConfigurationItem>>.GetEnumerator
    fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
    name: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator
    nameWithType: Dictionary(Of String, ConfigurationItem).System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator
    fullName: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}
  definition: System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: Dictionary<String, ConfigurationItem>.GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType.vb: Dictionary(Of String, ConfigurationItem).GetObjectData(SerializationInfo, StreamingContext)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: Dictionary<String, ConfigurationItem>.GetObjectData
    fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: Dictionary(Of String, ConfigurationItem).GetObjectData
    fullName: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.OnDeserialization(System.Object)
  commentId: M:System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.OnDeserialization(System.Object)
  parent: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}
  definition: System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)
  name: OnDeserialization(Object)
  nameWithType: Dictionary<String, ConfigurationItem>.OnDeserialization(Object)
  fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.OnDeserialization(System.Object)
  nameWithType.vb: Dictionary(Of String, ConfigurationItem).OnDeserialization(Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).OnDeserialization(System.Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)
    name: OnDeserialization
    nameWithType: Dictionary<String, ConfigurationItem>.OnDeserialization
    fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.OnDeserialization
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)
    name: OnDeserialization
    nameWithType: Dictionary(Of String, ConfigurationItem).OnDeserialization
    fullName: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).OnDeserialization
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.Remove(System.String)
  commentId: M:System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.Remove(System.String)
  parent: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}
  definition: System.Collections.Generic.Dictionary`2.Remove(`0)
  name: Remove(String)
  nameWithType: Dictionary<String, ConfigurationItem>.Remove(String)
  fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.Remove(System.String)
  nameWithType.vb: Dictionary(Of String, ConfigurationItem).Remove(String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).Remove(System.String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.Remove(`0)
    name: Remove
    nameWithType: Dictionary<String, ConfigurationItem>.Remove
    fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.Remove(`0)
    name: Remove
    nameWithType: Dictionary(Of String, ConfigurationItem).Remove
    fullName: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.TryGetValue(System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem@)
  commentId: M:System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.TryGetValue(System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem@)
  parent: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}
  definition: System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)
  name: TryGetValue(String, ConfigurationItem)
  nameWithType: Dictionary<String, ConfigurationItem>.TryGetValue(String, ConfigurationItem)
  fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.TryGetValue(System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem)
  nameWithType.vb: Dictionary(Of String, ConfigurationItem).TryGetValue(String, ConfigurationItem)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).TryGetValue(System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: Dictionary<String, ConfigurationItem>.TryGetValue
    fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.Utility.Configurations.ConfigurationItem
    name: ConfigurationItem
    nameWithType: ConfigurationItem
    fullName: Microsoft.Health.Utility.Configurations.ConfigurationItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: Dictionary(Of String, ConfigurationItem).TryGetValue
    fullName: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.Utility.Configurations.ConfigurationItem
    name: ConfigurationItem
    nameWithType: ConfigurationItem
    fullName: Microsoft.Health.Utility.Configurations.ConfigurationItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}[],System.Int32)
  commentId: M:System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}[],System.Int32)
  parent: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  name: ICollection<KeyValuePair<String, ConfigurationItem>>.CopyTo(KeyValuePair<String, ConfigurationItem>[], Int32)
  nameWithType: Dictionary<String, ConfigurationItem>.ICollection<KeyValuePair<String, ConfigurationItem>>.CopyTo(KeyValuePair<String, ConfigurationItem>[], Int32)
  fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>>.CopyTo(System.Collections.Generic.KeyValuePair<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>[], System.Int32)
  nameWithType.vb: Dictionary(Of String, ConfigurationItem).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair(Of String, ConfigurationItem)(), Int32)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem)(), System.Int32)
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair(Of String, ConfigurationItem)(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
    name: ICollection<KeyValuePair<String, ConfigurationItem>>.CopyTo
    nameWithType: Dictionary<String, ConfigurationItem>.ICollection<KeyValuePair<String, ConfigurationItem>>.CopyTo
    fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.Utility.Configurations.ConfigurationItem
    name: ConfigurationItem
    nameWithType: ConfigurationItem
    fullName: Microsoft.Health.Utility.Configurations.ConfigurationItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
    name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo
    nameWithType: Dictionary(Of String, ConfigurationItem).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo
    fullName: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.Utility.Configurations.ConfigurationItem
    name: ConfigurationItem
    nameWithType: ConfigurationItem
    fullName: Microsoft.Health.Utility.Configurations.ConfigurationItem
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: Dictionary<String, ConfigurationItem>.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: Dictionary(Of String, ConfigurationItem).System.Collections.ICollection.CopyTo(Array, Int32)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: Dictionary<String, ConfigurationItem>.ICollection.CopyTo
    fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: Dictionary(Of String, ConfigurationItem).System.Collections.ICollection.CopyTo
    fullName: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  nameWithType: Dictionary<String, ConfigurationItem>.IEnumerable.GetEnumerator()
  fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: Dictionary(Of String, ConfigurationItem).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: Dictionary<String, ConfigurationItem>.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: Dictionary(Of String, ConfigurationItem).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#IDictionary#get_Item(System.Object)
  commentId: M:System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#IDictionary#get_Item(System.Object)
  parent: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#get_Item(System.Object)
  name: IDictionary.get_Item(Object)
  nameWithType: Dictionary<String, ConfigurationItem>.IDictionary.get_Item(Object)
  fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.System.Collections.IDictionary.get_Item(System.Object)
  nameWithType.vb: Dictionary(Of String, ConfigurationItem).System.Collections.IDictionary.get_Item(Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).System.Collections.IDictionary.get_Item(System.Object)
  name.vb: System.Collections.IDictionary.get_Item(Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#get_Item(System.Object)
    name: IDictionary.get_Item
    nameWithType: Dictionary<String, ConfigurationItem>.IDictionary.get_Item
    fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.System.Collections.IDictionary.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#get_Item(System.Object)
    name: System.Collections.IDictionary.get_Item
    nameWithType: Dictionary(Of String, ConfigurationItem).System.Collections.IDictionary.get_Item
    fullName: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).System.Collections.IDictionary.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#IDictionary#set_Item(System.Object,System.Object)
  commentId: M:System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#IDictionary#set_Item(System.Object,System.Object)
  parent: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#set_Item(System.Object,System.Object)
  name: IDictionary.set_Item(Object, Object)
  nameWithType: Dictionary<String, ConfigurationItem>.IDictionary.set_Item(Object, Object)
  fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.System.Collections.IDictionary.set_Item(System.Object, System.Object)
  nameWithType.vb: Dictionary(Of String, ConfigurationItem).System.Collections.IDictionary.set_Item(Object, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).System.Collections.IDictionary.set_Item(System.Object, System.Object)
  name.vb: System.Collections.IDictionary.set_Item(Object, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#set_Item(System.Object,System.Object)
    name: IDictionary.set_Item
    nameWithType: Dictionary<String, ConfigurationItem>.IDictionary.set_Item
    fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.System.Collections.IDictionary.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#set_Item(System.Object,System.Object)
    name: System.Collections.IDictionary.set_Item
    nameWithType: Dictionary(Of String, ConfigurationItem).System.Collections.IDictionary.set_Item
    fullName: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).System.Collections.IDictionary.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#IDictionary#Add(System.Object,System.Object)
  commentId: M:System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#IDictionary#Add(System.Object,System.Object)
  parent: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
  name: IDictionary.Add(Object, Object)
  nameWithType: Dictionary<String, ConfigurationItem>.IDictionary.Add(Object, Object)
  fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.System.Collections.IDictionary.Add(System.Object, System.Object)
  nameWithType.vb: Dictionary(Of String, ConfigurationItem).System.Collections.IDictionary.Add(Object, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).System.Collections.IDictionary.Add(System.Object, System.Object)
  name.vb: System.Collections.IDictionary.Add(Object, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
    name: IDictionary.Add
    nameWithType: Dictionary<String, ConfigurationItem>.IDictionary.Add
    fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.System.Collections.IDictionary.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
    name: System.Collections.IDictionary.Add
    nameWithType: Dictionary(Of String, ConfigurationItem).System.Collections.IDictionary.Add
    fullName: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).System.Collections.IDictionary.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#IDictionary#Contains(System.Object)
  commentId: M:System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#IDictionary#Contains(System.Object)
  parent: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)
  name: IDictionary.Contains(Object)
  nameWithType: Dictionary<String, ConfigurationItem>.IDictionary.Contains(Object)
  fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.System.Collections.IDictionary.Contains(System.Object)
  nameWithType.vb: Dictionary(Of String, ConfigurationItem).System.Collections.IDictionary.Contains(Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).System.Collections.IDictionary.Contains(System.Object)
  name.vb: System.Collections.IDictionary.Contains(Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)
    name: IDictionary.Contains
    nameWithType: Dictionary<String, ConfigurationItem>.IDictionary.Contains
    fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.System.Collections.IDictionary.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)
    name: System.Collections.IDictionary.Contains
    nameWithType: Dictionary(Of String, ConfigurationItem).System.Collections.IDictionary.Contains
    fullName: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).System.Collections.IDictionary.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#IDictionary#GetEnumerator
  commentId: M:System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#IDictionary#GetEnumerator
  parent: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator
  name: IDictionary.GetEnumerator()
  nameWithType: Dictionary<String, ConfigurationItem>.IDictionary.GetEnumerator()
  fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.System.Collections.IDictionary.GetEnumerator()
  nameWithType.vb: Dictionary(Of String, ConfigurationItem).System.Collections.IDictionary.GetEnumerator()
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).System.Collections.IDictionary.GetEnumerator()
  name.vb: System.Collections.IDictionary.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator
    name: IDictionary.GetEnumerator
    nameWithType: Dictionary<String, ConfigurationItem>.IDictionary.GetEnumerator
    fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.System.Collections.IDictionary.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator
    name: System.Collections.IDictionary.GetEnumerator
    nameWithType: Dictionary(Of String, ConfigurationItem).System.Collections.IDictionary.GetEnumerator
    fullName: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).System.Collections.IDictionary.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#IDictionary#Remove(System.Object)
  commentId: M:System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#IDictionary#Remove(System.Object)
  parent: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)
  name: IDictionary.Remove(Object)
  nameWithType: Dictionary<String, ConfigurationItem>.IDictionary.Remove(Object)
  fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.System.Collections.IDictionary.Remove(System.Object)
  nameWithType.vb: Dictionary(Of String, ConfigurationItem).System.Collections.IDictionary.Remove(Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).System.Collections.IDictionary.Remove(System.Object)
  name.vb: System.Collections.IDictionary.Remove(Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)
    name: IDictionary.Remove
    nameWithType: Dictionary<String, ConfigurationItem>.IDictionary.Remove
    fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.System.Collections.IDictionary.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)
    name: System.Collections.IDictionary.Remove
    nameWithType: Dictionary(Of String, ConfigurationItem).System.Collections.IDictionary.Remove
    fullName: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).System.Collections.IDictionary.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.Comparer
  commentId: P:System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.Comparer
  parent: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}
  definition: System.Collections.Generic.Dictionary`2.Comparer
  name: Comparer
  nameWithType: Dictionary<String, ConfigurationItem>.Comparer
  fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.Comparer
  nameWithType.vb: Dictionary(Of String, ConfigurationItem).Comparer
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).Comparer
- uid: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.Count
  commentId: P:System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.Count
  parent: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}
  definition: System.Collections.Generic.Dictionary`2.Count
  name: Count
  nameWithType: Dictionary<String, ConfigurationItem>.Count
  fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.Count
  nameWithType.vb: Dictionary(Of String, ConfigurationItem).Count
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).Count
- uid: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.Keys
  commentId: P:System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.Keys
  parent: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}
  definition: System.Collections.Generic.Dictionary`2.Keys
  name: Keys
  nameWithType: Dictionary<String, ConfigurationItem>.Keys
  fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.Keys
  nameWithType.vb: Dictionary(Of String, ConfigurationItem).Keys
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).Keys
- uid: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#Generic#IDictionary{TKey,TValue}#Keys
  commentId: P:System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#Generic#IDictionary{TKey,TValue}#Keys
  parent: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys
  name: IDictionary<String, ConfigurationItem>.Keys
  nameWithType: Dictionary<String, ConfigurationItem>.IDictionary<String, ConfigurationItem>.Keys
  fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.System.Collections.Generic.IDictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.Keys
  nameWithType.vb: Dictionary(Of String, ConfigurationItem).System.Collections.Generic.IDictionary<TKey,TValue>.Keys
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).System.Collections.Generic.IDictionary<TKey,TValue>.Keys
  name.vb: System.Collections.Generic.IDictionary<TKey,TValue>.Keys
- uid: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys
  commentId: P:System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys
  parent: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys
  name: IReadOnlyDictionary<String, ConfigurationItem>.Keys
  nameWithType: Dictionary<String, ConfigurationItem>.IReadOnlyDictionary<String, ConfigurationItem>.Keys
  fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.System.Collections.Generic.IReadOnlyDictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.Keys
  nameWithType.vb: Dictionary(Of String, ConfigurationItem).System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys
  name.vb: System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys
- uid: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.Values
  commentId: P:System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.Values
  parent: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}
  definition: System.Collections.Generic.Dictionary`2.Values
  name: Values
  nameWithType: Dictionary<String, ConfigurationItem>.Values
  fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.Values
  nameWithType.vb: Dictionary(Of String, ConfigurationItem).Values
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).Values
- uid: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#Generic#IDictionary{TKey,TValue}#Values
  commentId: P:System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#Generic#IDictionary{TKey,TValue}#Values
  parent: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values
  name: IDictionary<String, ConfigurationItem>.Values
  nameWithType: Dictionary<String, ConfigurationItem>.IDictionary<String, ConfigurationItem>.Values
  fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.System.Collections.Generic.IDictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.Values
  nameWithType.vb: Dictionary(Of String, ConfigurationItem).System.Collections.Generic.IDictionary<TKey,TValue>.Values
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).System.Collections.Generic.IDictionary<TKey,TValue>.Values
  name.vb: System.Collections.Generic.IDictionary<TKey,TValue>.Values
- uid: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values
  commentId: P:System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values
  parent: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values
  name: IReadOnlyDictionary<String, ConfigurationItem>.Values
  nameWithType: Dictionary<String, ConfigurationItem>.IReadOnlyDictionary<String, ConfigurationItem>.Values
  fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.System.Collections.Generic.IReadOnlyDictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.Values
  nameWithType.vb: Dictionary(Of String, ConfigurationItem).System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values
  name.vb: System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values
- uid: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.Item(System.String)
  commentId: P:System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.Item(System.String)
  parent: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}
  definition: System.Collections.Generic.Dictionary`2.Item(`0)
  name: Item[String]
  nameWithType: Dictionary<String, ConfigurationItem>.Item[String]
  fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.Item[System.String]
  nameWithType.vb: Dictionary(Of String, ConfigurationItem).Item(String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.Item(`0)
    name: Item
    nameWithType: Dictionary<String, ConfigurationItem>.Item
    fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.Item(`0)
    name: Item
    nameWithType: Dictionary(Of String, ConfigurationItem).Item
    fullName: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  commentId: P:System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  parent: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  name: ICollection<KeyValuePair<String, ConfigurationItem>>.IsReadOnly
  nameWithType: Dictionary<String, ConfigurationItem>.ICollection<KeyValuePair<String, ConfigurationItem>>.IsReadOnly
  fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>>.IsReadOnly
  nameWithType.vb: Dictionary(Of String, ConfigurationItem).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
- uid: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#ICollection#IsSynchronized
  parent: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized
  name: ICollection.IsSynchronized
  nameWithType: Dictionary<String, ConfigurationItem>.ICollection.IsSynchronized
  fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: Dictionary(Of String, ConfigurationItem).System.Collections.ICollection.IsSynchronized
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#ICollection#SyncRoot
  commentId: P:System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#ICollection#SyncRoot
  parent: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot
  name: ICollection.SyncRoot
  nameWithType: Dictionary<String, ConfigurationItem>.ICollection.SyncRoot
  fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: Dictionary(Of String, ConfigurationItem).System.Collections.ICollection.SyncRoot
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#IDictionary#IsFixedSize
  commentId: P:System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#IDictionary#IsFixedSize
  parent: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsFixedSize
  name: IDictionary.IsFixedSize
  nameWithType: Dictionary<String, ConfigurationItem>.IDictionary.IsFixedSize
  fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.System.Collections.IDictionary.IsFixedSize
  nameWithType.vb: Dictionary(Of String, ConfigurationItem).System.Collections.IDictionary.IsFixedSize
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).System.Collections.IDictionary.IsFixedSize
  name.vb: System.Collections.IDictionary.IsFixedSize
- uid: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#IDictionary#IsReadOnly
  commentId: P:System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#IDictionary#IsReadOnly
  parent: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsReadOnly
  name: IDictionary.IsReadOnly
  nameWithType: Dictionary<String, ConfigurationItem>.IDictionary.IsReadOnly
  fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.System.Collections.IDictionary.IsReadOnly
  nameWithType.vb: Dictionary(Of String, ConfigurationItem).System.Collections.IDictionary.IsReadOnly
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).System.Collections.IDictionary.IsReadOnly
  name.vb: System.Collections.IDictionary.IsReadOnly
- uid: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#IDictionary#Keys
  commentId: P:System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#IDictionary#Keys
  parent: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys
  name: IDictionary.Keys
  nameWithType: Dictionary<String, ConfigurationItem>.IDictionary.Keys
  fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.System.Collections.IDictionary.Keys
  nameWithType.vb: Dictionary(Of String, ConfigurationItem).System.Collections.IDictionary.Keys
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).System.Collections.IDictionary.Keys
  name.vb: System.Collections.IDictionary.Keys
- uid: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#IDictionary#Values
  commentId: P:System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#IDictionary#Values
  parent: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values
  name: IDictionary.Values
  nameWithType: Dictionary<String, ConfigurationItem>.IDictionary.Values
  fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.System.Collections.IDictionary.Values
  nameWithType.vb: Dictionary(Of String, ConfigurationItem).System.Collections.IDictionary.Values
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).System.Collections.IDictionary.Values
  name.vb: System.Collections.IDictionary.Values
- uid: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#IDictionary#Item(System.Object)
  commentId: P:System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}.System#Collections#IDictionary#Item(System.Object)
  parent: System.Collections.Generic.Dictionary{System.String,Microsoft.Health.Utility.Configurations.ConfigurationItem}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)
  name: IDictionary.Item[Object]
  nameWithType: Dictionary<String, ConfigurationItem>.IDictionary.Item[Object]
  fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.System.Collections.IDictionary.Item[System.Object]
  nameWithType.vb: Dictionary(Of String, ConfigurationItem).System.Collections.IDictionary.Item(Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).System.Collections.IDictionary.Item(System.Object)
  name.vb: System.Collections.IDictionary.Item(Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)
    name: IDictionary.Item
    nameWithType: Dictionary<String, ConfigurationItem>.IDictionary.Item
    fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem>.System.Collections.IDictionary.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)
    name: System.Collections.IDictionary.Item
    nameWithType: Dictionary(Of String, ConfigurationItem).System.Collections.IDictionary.Item
    fullName: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Health.Utility.Configurations.ConfigurationItem).System.Collections.IDictionary.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<ConfigurationDictionary>()
  nameWithType: TypeHelper.ValueOrDbNull<ConfigurationDictionary>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Utility.Configurations.ConfigurationDictionary>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of ConfigurationDictionary)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Utility.Configurations.ConfigurationDictionary)()
  name.vb: ValueOrDbNull(Of ConfigurationDictionary)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<ConfigurationDictionary>
    nameWithType: TypeHelper.ValueOrDbNull<ConfigurationDictionary>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Utility.Configurations.ConfigurationDictionary>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of ConfigurationDictionary)
    nameWithType: TypeHelper.ValueOrDbNull(Of ConfigurationDictionary)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Utility.Configurations.ConfigurationDictionary)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Collections.Generic.IReadOnlyDictionary`2
  commentId: T:System.Collections.Generic.IReadOnlyDictionary`2
  isExternal: true
  name: IReadOnlyDictionary<TKey, TValue>
  nameWithType: IReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue)
  name.vb: IReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: false
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: System.Collections.Generic.Dictionary`2.Add(`0,`1)
  commentId: M:System.Collections.Generic.Dictionary`2.Add(`0,`1)
  isExternal: true
  name: Add(TKey, TValue)
  nameWithType: Dictionary<TKey, TValue>.Add(TKey, TValue)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)
  nameWithType.vb: Dictionary(Of TKey, TValue).Add(TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).Add(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.Add(`0,`1)
    name: Add
    nameWithType: Dictionary<TKey, TValue>.Add
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.Add(`0,`1)
    name: Add
    nameWithType: Dictionary(Of TKey, TValue).Add
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
  commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
  isExternal: true
  name: ICollection<KeyValuePair<TKey, TValue>>.Add(KeyValuePair<TKey, TValue>)
  nameWithType: Dictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.Add(KeyValuePair<TKey, TValue>)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Add(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(KeyValuePair(Of TKey, TValue))
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
    name: ICollection<KeyValuePair<TKey, TValue>>.Add
    nameWithType: Dictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.Add
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
    name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add
    nameWithType: Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  isExternal: true
  name: ICollection<KeyValuePair<TKey, TValue>>.Contains(KeyValuePair<TKey, TValue>)
  nameWithType: Dictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.Contains(KeyValuePair<TKey, TValue>)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Contains(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(KeyValuePair(Of TKey, TValue))
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})
    name: ICollection<KeyValuePair<TKey, TValue>>.Contains
    nameWithType: Dictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.Contains
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})
    name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains
    nameWithType: Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  isExternal: true
  name: ICollection<KeyValuePair<TKey, TValue>>.Remove(KeyValuePair<TKey, TValue>)
  nameWithType: Dictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.Remove(KeyValuePair<TKey, TValue>)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Remove(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(KeyValuePair(Of TKey, TValue))
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
    name: ICollection<KeyValuePair<TKey, TValue>>.Remove
    nameWithType: Dictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.Remove
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
    name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove
    nameWithType: Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.Clear
  commentId: M:System.Collections.Generic.Dictionary`2.Clear
  isExternal: true
  name: Clear()
  nameWithType: Dictionary<TKey, TValue>.Clear()
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Clear()
  nameWithType.vb: Dictionary(Of TKey, TValue).Clear()
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.Clear
    name: Clear
    nameWithType: Dictionary<TKey, TValue>.Clear
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.Clear
    name: Clear
    nameWithType: Dictionary(Of TKey, TValue).Clear
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.ContainsKey(`0)
  commentId: M:System.Collections.Generic.Dictionary`2.ContainsKey(`0)
  isExternal: true
  name: ContainsKey(TKey)
  nameWithType: Dictionary<TKey, TValue>.ContainsKey(TKey)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)
  nameWithType.vb: Dictionary(Of TKey, TValue).ContainsKey(TKey)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).ContainsKey(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: Dictionary<TKey, TValue>.ContainsKey
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: Dictionary(Of TKey, TValue).ContainsKey
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).ContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.ContainsValue(`1)
  commentId: M:System.Collections.Generic.Dictionary`2.ContainsValue(`1)
  isExternal: true
  name: ContainsValue(TValue)
  nameWithType: Dictionary<TKey, TValue>.ContainsValue(TValue)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.ContainsValue(TValue)
  nameWithType.vb: Dictionary(Of TKey, TValue).ContainsValue(TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).ContainsValue(TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.ContainsValue(`1)
    name: ContainsValue
    nameWithType: Dictionary<TKey, TValue>.ContainsValue
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.ContainsValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.ContainsValue(`1)
    name: ContainsValue
    nameWithType: Dictionary(Of TKey, TValue).ContainsValue
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).ContainsValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.GetEnumerator
  commentId: M:System.Collections.Generic.Dictionary`2.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: Dictionary<TKey, TValue>.GetEnumerator()
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()
  nameWithType.vb: Dictionary(Of TKey, TValue).GetEnumerator()
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.GetEnumerator
    name: GetEnumerator
    nameWithType: Dictionary<TKey, TValue>.GetEnumerator
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.GetEnumerator
    name: GetEnumerator
    nameWithType: Dictionary(Of TKey, TValue).GetEnumerator
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
  commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
  isExternal: true
  name: IEnumerable<KeyValuePair<TKey, TValue>>.GetEnumerator()
  nameWithType: Dictionary<TKey, TValue>.IEnumerable<KeyValuePair<TKey, TValue>>.GetEnumerator()
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>.GetEnumerator()
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator()
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
    name: IEnumerable<KeyValuePair<TKey, TValue>>.GetEnumerator
    nameWithType: Dictionary<TKey, TValue>.IEnumerable<KeyValuePair<TKey, TValue>>.GetEnumerator
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
    name: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator
    nameWithType: Dictionary(Of TKey, TValue).System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isExternal: true
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: Dictionary<TKey, TValue>.GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType.vb: Dictionary(Of TKey, TValue).GetObjectData(SerializationInfo, StreamingContext)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: Dictionary<TKey, TValue>.GetObjectData
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: Dictionary(Of TKey, TValue).GetObjectData
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)
  commentId: M:System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)
  isExternal: true
  name: OnDeserialization(Object)
  nameWithType: Dictionary<TKey, TValue>.OnDeserialization(Object)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.OnDeserialization(System.Object)
  nameWithType.vb: Dictionary(Of TKey, TValue).OnDeserialization(Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).OnDeserialization(System.Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)
    name: OnDeserialization
    nameWithType: Dictionary<TKey, TValue>.OnDeserialization
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.OnDeserialization
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)
    name: OnDeserialization
    nameWithType: Dictionary(Of TKey, TValue).OnDeserialization
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).OnDeserialization
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.Remove(`0)
  commentId: M:System.Collections.Generic.Dictionary`2.Remove(`0)
  isExternal: true
  name: Remove(TKey)
  nameWithType: Dictionary<TKey, TValue>.Remove(TKey)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)
  nameWithType.vb: Dictionary(Of TKey, TValue).Remove(TKey)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).Remove(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.Remove(`0)
    name: Remove
    nameWithType: Dictionary<TKey, TValue>.Remove
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.Remove(`0)
    name: Remove
    nameWithType: Dictionary(Of TKey, TValue).Remove
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)
  commentId: M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)
  isExternal: true
  name: TryGetValue(TKey, TValue)
  nameWithType: Dictionary<TKey, TValue>.TryGetValue(TKey, TValue)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, TValue)
  nameWithType.vb: Dictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: Dictionary<TKey, TValue>.TryGetValue
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: Dictionary(Of TKey, TValue).TryGetValue
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  isExternal: true
  name: ICollection<KeyValuePair<TKey, TValue>>.CopyTo(KeyValuePair<TKey, TValue>[], Int32)
  nameWithType: Dictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.CopyTo(KeyValuePair<TKey, TValue>[], Int32)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.CopyTo(System.Collections.Generic.KeyValuePair<TKey, TValue>[], System.Int32)
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair(Of TKey, TValue)(), Int32)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(System.Collections.Generic.KeyValuePair(Of TKey, TValue)(), System.Int32)
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair(Of TKey, TValue)(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
    name: ICollection<KeyValuePair<TKey, TValue>>.CopyTo
    nameWithType: Dictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.CopyTo
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
    name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo
    nameWithType: Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isExternal: true
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: Dictionary<TKey, TValue>.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.ICollection.CopyTo(Array, Int32)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: Dictionary<TKey, TValue>.ICollection.CopyTo
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: Dictionary(Of TKey, TValue).System.Collections.ICollection.CopyTo
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator
  isExternal: true
  name: IEnumerable.GetEnumerator()
  nameWithType: Dictionary<TKey, TValue>.IEnumerable.GetEnumerator()
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: Dictionary<TKey, TValue>.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: Dictionary(Of TKey, TValue).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#get_Item(System.Object)
  commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#get_Item(System.Object)
  isExternal: true
  name: IDictionary.get_Item(Object)
  nameWithType: Dictionary<TKey, TValue>.IDictionary.get_Item(Object)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.get_Item(System.Object)
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.IDictionary.get_Item(Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.get_Item(System.Object)
  name.vb: System.Collections.IDictionary.get_Item(Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#get_Item(System.Object)
    name: IDictionary.get_Item
    nameWithType: Dictionary<TKey, TValue>.IDictionary.get_Item
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#get_Item(System.Object)
    name: System.Collections.IDictionary.get_Item
    nameWithType: Dictionary(Of TKey, TValue).System.Collections.IDictionary.get_Item
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#set_Item(System.Object,System.Object)
  commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#set_Item(System.Object,System.Object)
  isExternal: true
  name: IDictionary.set_Item(Object, Object)
  nameWithType: Dictionary<TKey, TValue>.IDictionary.set_Item(Object, Object)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.set_Item(System.Object, System.Object)
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.IDictionary.set_Item(Object, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.set_Item(System.Object, System.Object)
  name.vb: System.Collections.IDictionary.set_Item(Object, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#set_Item(System.Object,System.Object)
    name: IDictionary.set_Item
    nameWithType: Dictionary<TKey, TValue>.IDictionary.set_Item
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#set_Item(System.Object,System.Object)
    name: System.Collections.IDictionary.set_Item
    nameWithType: Dictionary(Of TKey, TValue).System.Collections.IDictionary.set_Item
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
  commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
  isExternal: true
  name: IDictionary.Add(Object, Object)
  nameWithType: Dictionary<TKey, TValue>.IDictionary.Add(Object, Object)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.Add(System.Object, System.Object)
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.IDictionary.Add(Object, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.Add(System.Object, System.Object)
  name.vb: System.Collections.IDictionary.Add(Object, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
    name: IDictionary.Add
    nameWithType: Dictionary<TKey, TValue>.IDictionary.Add
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
    name: System.Collections.IDictionary.Add
    nameWithType: Dictionary(Of TKey, TValue).System.Collections.IDictionary.Add
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)
  commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)
  isExternal: true
  name: IDictionary.Contains(Object)
  nameWithType: Dictionary<TKey, TValue>.IDictionary.Contains(Object)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.Contains(System.Object)
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.IDictionary.Contains(Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.Contains(System.Object)
  name.vb: System.Collections.IDictionary.Contains(Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)
    name: IDictionary.Contains
    nameWithType: Dictionary<TKey, TValue>.IDictionary.Contains
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)
    name: System.Collections.IDictionary.Contains
    nameWithType: Dictionary(Of TKey, TValue).System.Collections.IDictionary.Contains
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator
  commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator
  isExternal: true
  name: IDictionary.GetEnumerator()
  nameWithType: Dictionary<TKey, TValue>.IDictionary.GetEnumerator()
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.GetEnumerator()
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.IDictionary.GetEnumerator()
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.GetEnumerator()
  name.vb: System.Collections.IDictionary.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator
    name: IDictionary.GetEnumerator
    nameWithType: Dictionary<TKey, TValue>.IDictionary.GetEnumerator
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator
    name: System.Collections.IDictionary.GetEnumerator
    nameWithType: Dictionary(Of TKey, TValue).System.Collections.IDictionary.GetEnumerator
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)
  commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)
  isExternal: true
  name: IDictionary.Remove(Object)
  nameWithType: Dictionary<TKey, TValue>.IDictionary.Remove(Object)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.Remove(System.Object)
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.IDictionary.Remove(Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.Remove(System.Object)
  name.vb: System.Collections.IDictionary.Remove(Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)
    name: IDictionary.Remove
    nameWithType: Dictionary<TKey, TValue>.IDictionary.Remove
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)
    name: System.Collections.IDictionary.Remove
    nameWithType: Dictionary(Of TKey, TValue).System.Collections.IDictionary.Remove
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.Comparer
  commentId: P:System.Collections.Generic.Dictionary`2.Comparer
  isExternal: true
  name: Comparer
  nameWithType: Dictionary<TKey, TValue>.Comparer
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Comparer
  nameWithType.vb: Dictionary(Of TKey, TValue).Comparer
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).Comparer
- uid: System.Collections.Generic.Dictionary`2.Count
  commentId: P:System.Collections.Generic.Dictionary`2.Count
  isExternal: true
  name: Count
  nameWithType: Dictionary<TKey, TValue>.Count
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Count
  nameWithType.vb: Dictionary(Of TKey, TValue).Count
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).Count
- uid: System.Collections.Generic.Dictionary`2.Keys
  commentId: P:System.Collections.Generic.Dictionary`2.Keys
  isExternal: true
  name: Keys
  nameWithType: Dictionary<TKey, TValue>.Keys
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Keys
  nameWithType.vb: Dictionary(Of TKey, TValue).Keys
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).Keys
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys
  commentId: P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys
  isExternal: true
  name: IDictionary<TKey, TValue>.Keys
  nameWithType: Dictionary<TKey, TValue>.IDictionary<TKey, TValue>.Keys
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Keys
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Keys
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Keys
  name.vb: System.Collections.Generic.IDictionary<TKey,TValue>.Keys
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys
  commentId: P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys
  isExternal: true
  name: IReadOnlyDictionary<TKey, TValue>.Keys
  nameWithType: Dictionary<TKey, TValue>.IReadOnlyDictionary<TKey, TValue>.Keys
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Keys
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys
  name.vb: System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys
- uid: System.Collections.Generic.Dictionary`2.Values
  commentId: P:System.Collections.Generic.Dictionary`2.Values
  isExternal: true
  name: Values
  nameWithType: Dictionary<TKey, TValue>.Values
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Values
  nameWithType.vb: Dictionary(Of TKey, TValue).Values
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).Values
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values
  commentId: P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values
  isExternal: true
  name: IDictionary<TKey, TValue>.Values
  nameWithType: Dictionary<TKey, TValue>.IDictionary<TKey, TValue>.Values
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Values
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Values
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Values
  name.vb: System.Collections.Generic.IDictionary<TKey,TValue>.Values
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values
  commentId: P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values
  isExternal: true
  name: IReadOnlyDictionary<TKey, TValue>.Values
  nameWithType: Dictionary<TKey, TValue>.IReadOnlyDictionary<TKey, TValue>.Values
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Values
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values
  name.vb: System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values
- uid: System.Collections.Generic.Dictionary`2.Item(`0)
  commentId: P:System.Collections.Generic.Dictionary`2.Item(`0)
  isExternal: true
  name: Item[TKey]
  nameWithType: Dictionary<TKey, TValue>.Item[TKey]
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Item[TKey]
  nameWithType.vb: Dictionary(Of TKey, TValue).Item(TKey)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).Item(TKey)
  name.vb: Item(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.Item(`0)
    name: Item
    nameWithType: Dictionary<TKey, TValue>.Item
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.Item(`0)
    name: Item
    nameWithType: Dictionary(Of TKey, TValue).Item
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  commentId: P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  isExternal: true
  name: ICollection<KeyValuePair<TKey, TValue>>.IsReadOnly
  nameWithType: Dictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.IsReadOnly
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.IsReadOnly
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
- uid: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized
  isExternal: true
  name: ICollection.IsSynchronized
  nameWithType: Dictionary<TKey, TValue>.ICollection.IsSynchronized
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.ICollection.IsSynchronized
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot
  commentId: P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot
  isExternal: true
  name: ICollection.SyncRoot
  nameWithType: Dictionary<TKey, TValue>.ICollection.SyncRoot
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.ICollection.SyncRoot
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsFixedSize
  commentId: P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsFixedSize
  isExternal: true
  name: IDictionary.IsFixedSize
  nameWithType: Dictionary<TKey, TValue>.IDictionary.IsFixedSize
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.IsFixedSize
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.IDictionary.IsFixedSize
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.IsFixedSize
  name.vb: System.Collections.IDictionary.IsFixedSize
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsReadOnly
  commentId: P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsReadOnly
  isExternal: true
  name: IDictionary.IsReadOnly
  nameWithType: Dictionary<TKey, TValue>.IDictionary.IsReadOnly
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.IsReadOnly
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.IDictionary.IsReadOnly
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.IsReadOnly
  name.vb: System.Collections.IDictionary.IsReadOnly
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys
  commentId: P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys
  isExternal: true
  name: IDictionary.Keys
  nameWithType: Dictionary<TKey, TValue>.IDictionary.Keys
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.Keys
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.IDictionary.Keys
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.Keys
  name.vb: System.Collections.IDictionary.Keys
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values
  commentId: P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values
  isExternal: true
  name: IDictionary.Values
  nameWithType: Dictionary<TKey, TValue>.IDictionary.Values
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.Values
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.IDictionary.Values
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.Values
  name.vb: System.Collections.IDictionary.Values
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)
  commentId: P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)
  isExternal: true
  name: IDictionary.Item[Object]
  nameWithType: Dictionary<TKey, TValue>.IDictionary.Item[Object]
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.Item[System.Object]
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.IDictionary.Item(Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.Item(System.Object)
  name.vb: System.Collections.IDictionary.Item(Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)
    name: IDictionary.Item
    nameWithType: Dictionary<TKey, TValue>.IDictionary.Item
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)
    name: System.Collections.IDictionary.Item
    nameWithType: Dictionary(Of TKey, TValue).System.Collections.IDictionary.Item
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.#ctor*
  commentId: Overload:Microsoft.Health.Utility.Configurations.ConfigurationDictionary.#ctor
  isExternal: false
  name: ConfigurationDictionary
  nameWithType: ConfigurationDictionary.ConfigurationDictionary
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.ConfigurationDictionary
- uid: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GlobalConfiguration*
  commentId: Overload:Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GlobalConfiguration
  isExternal: false
  name: GlobalConfiguration
  nameWithType: ConfigurationDictionary.GlobalConfiguration
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GlobalConfiguration
- uid: Microsoft.Health.Utility.Configurations.ConfigurationDictionary
  commentId: T:Microsoft.Health.Utility.Configurations.ConfigurationDictionary
  parent: Microsoft.Health.Utility.Configurations
  isExternal: false
  name: ConfigurationDictionary
  nameWithType: ConfigurationDictionary
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationDictionary
- uid: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetComponentConfigurationOnly*
  commentId: Overload:Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetComponentConfigurationOnly
  isExternal: false
  name: GetComponentConfigurationOnly
  nameWithType: ConfigurationDictionary.GetComponentConfigurationOnly
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetComponentConfigurationOnly
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetString*
  commentId: Overload:Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetString
  isExternal: false
  name: GetString
  nameWithType: ConfigurationDictionary.GetString
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetString
- uid: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetInt32*
  commentId: Overload:Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetInt32
  isExternal: false
  name: GetInt32
  nameWithType: ConfigurationDictionary.GetInt32
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetInt32
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetBoolean*
  commentId: Overload:Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetBoolean
  isExternal: false
  name: GetBoolean
  nameWithType: ConfigurationDictionary.GetBoolean
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetBoolean
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetGuid*
  commentId: Overload:Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetGuid
  isExternal: false
  name: GetGuid
  nameWithType: ConfigurationDictionary.GetGuid
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetGuid
- uid: System.Nullable{System.Guid}
  commentId: T:System.Nullable{System.Guid}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Guid>
  nameWithType: Nullable<Guid>
  fullName: System.Nullable<System.Guid>
  nameWithType.vb: Nullable(Of Guid)
  fullName.vb: System.Nullable(Of System.Guid)
  name.vb: Nullable(Of Guid)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetUri*
  commentId: Overload:Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetUri
  isExternal: false
  name: GetUri
  nameWithType: ConfigurationDictionary.GetUri
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.GetUri
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.Merge*
  commentId: Overload:Microsoft.Health.Utility.Configurations.ConfigurationDictionary.Merge
  isExternal: false
  name: Merge
  nameWithType: ConfigurationDictionary.Merge
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.Merge
- uid: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.SetConfigSuppressParseExceptions*
  commentId: Overload:Microsoft.Health.Utility.Configurations.ConfigurationDictionary.SetConfigSuppressParseExceptions
  isExternal: false
  name: SetConfigSuppressParseExceptions
  nameWithType: ConfigurationDictionary.SetConfigSuppressParseExceptions
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.SetConfigSuppressParseExceptions
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Health.Utility.Configurations.SetConfigResult
  commentId: T:Microsoft.Health.Utility.Configurations.SetConfigResult
  parent: Microsoft.Health.Utility.Configurations
  isExternal: false
  name: SetConfigResult
  nameWithType: SetConfigResult
  fullName: Microsoft.Health.Utility.Configurations.SetConfigResult
- uid: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.SetConfig*
  commentId: Overload:Microsoft.Health.Utility.Configurations.ConfigurationDictionary.SetConfig
  isExternal: false
  name: SetConfig
  nameWithType: ConfigurationDictionary.SetConfig
  fullName: Microsoft.Health.Utility.Configurations.ConfigurationDictionary.SetConfig
