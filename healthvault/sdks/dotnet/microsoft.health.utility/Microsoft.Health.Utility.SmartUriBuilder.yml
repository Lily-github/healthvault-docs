### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Utility.SmartUriBuilder
  commentId: T:Microsoft.Health.Utility.SmartUriBuilder
  id: SmartUriBuilder
  parent: Microsoft.Health.Utility
  children:
  - Microsoft.Health.Utility.SmartUriBuilder.#ctor(System.String)
  - Microsoft.Health.Utility.SmartUriBuilder.#ctor(System.Uri)
  - Microsoft.Health.Utility.SmartUriBuilder.AbsoluteUri
  - Microsoft.Health.Utility.SmartUriBuilder.AddFragment(System.String)
  - Microsoft.Health.Utility.SmartUriBuilder.AddFullQuery(System.String)
  - Microsoft.Health.Utility.SmartUriBuilder.AddQueryParam(System.String,System.String)
  - Microsoft.Health.Utility.SmartUriBuilder.AddQueryParam(System.String,System.String,System.Boolean)
  - Microsoft.Health.Utility.SmartUriBuilder.Equals(System.Uri)
  - Microsoft.Health.Utility.SmartUriBuilder.GetQueryParam(System.String)
  - Microsoft.Health.Utility.SmartUriBuilder.op_Implicit(Microsoft.Health.Utility.SmartUriBuilder)~System.Uri
  - Microsoft.Health.Utility.SmartUriBuilder.OriginalString
  - Microsoft.Health.Utility.SmartUriBuilder.Query
  - Microsoft.Health.Utility.SmartUriBuilder.RemoveFragment
  - Microsoft.Health.Utility.SmartUriBuilder.RemoveQueryParam(System.String)
  - Microsoft.Health.Utility.SmartUriBuilder.ToString
  - Microsoft.Health.Utility.SmartUriBuilder.Uri
  langs:
  - csharp
  - vb
  name: SmartUriBuilder
  nameWithType: SmartUriBuilder
  fullName: Microsoft.Health.Utility.SmartUriBuilder
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/SmartUriBuilder.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SmartUriBuilder
    path: utilities/SmartUriBuilder.cs
    startLine: 13
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  syntax:
    content: public class SmartUriBuilder
    content.vb: Public Class SmartUriBuilder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.Utility.SmartUriBuilder.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.Utility.SmartUriBuilder.#ctor(System.String)
  commentId: M:Microsoft.Health.Utility.SmartUriBuilder.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Health.Utility.SmartUriBuilder
  langs:
  - csharp
  - vb
  name: SmartUriBuilder(String)
  nameWithType: SmartUriBuilder.SmartUriBuilder(String)
  fullName: Microsoft.Health.Utility.SmartUriBuilder.SmartUriBuilder(System.String)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/SmartUriBuilder.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: utilities/SmartUriBuilder.cs
    startLine: 21
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  syntax:
    content: public SmartUriBuilder(string uri)
    content.vb: Public Sub New(uri As String)
    parameters:
    - id: uri
      type: System.String
  overload: Microsoft.Health.Utility.SmartUriBuilder.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.SmartUriBuilder.#ctor(System.Uri)
  commentId: M:Microsoft.Health.Utility.SmartUriBuilder.#ctor(System.Uri)
  id: '#ctor(System.Uri)'
  parent: Microsoft.Health.Utility.SmartUriBuilder
  langs:
  - csharp
  - vb
  name: SmartUriBuilder(Uri)
  nameWithType: SmartUriBuilder.SmartUriBuilder(Uri)
  fullName: Microsoft.Health.Utility.SmartUriBuilder.SmartUriBuilder(System.Uri)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/SmartUriBuilder.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: utilities/SmartUriBuilder.cs
    startLine: 26
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  syntax:
    content: public SmartUriBuilder(Uri uri)
    content.vb: Public Sub New(uri As Uri)
    parameters:
    - id: uri
      type: System.Uri
  overload: Microsoft.Health.Utility.SmartUriBuilder.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.SmartUriBuilder.Query
  commentId: P:Microsoft.Health.Utility.SmartUriBuilder.Query
  id: Query
  parent: Microsoft.Health.Utility.SmartUriBuilder
  langs:
  - csharp
  - vb
  name: Query
  nameWithType: SmartUriBuilder.Query
  fullName: Microsoft.Health.Utility.SmartUriBuilder.Query
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/SmartUriBuilder.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Query
    path: utilities/SmartUriBuilder.cs
    startLine: 38
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  syntax:
    content: public string Query { get; set; }
    content.vb: Public Property Query As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.Utility.SmartUriBuilder.Query*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.SmartUriBuilder.Uri
  commentId: P:Microsoft.Health.Utility.SmartUriBuilder.Uri
  id: Uri
  parent: Microsoft.Health.Utility.SmartUriBuilder
  langs:
  - csharp
  - vb
  name: Uri
  nameWithType: SmartUriBuilder.Uri
  fullName: Microsoft.Health.Utility.SmartUriBuilder.Uri
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/SmartUriBuilder.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Uri
    path: utilities/SmartUriBuilder.cs
    startLine: 44
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  syntax:
    content: public Uri Uri { get; }
    content.vb: Public ReadOnly Property Uri As Uri
    parameters: []
    return:
      type: System.Uri
  overload: Microsoft.Health.Utility.SmartUriBuilder.Uri*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.SmartUriBuilder.OriginalString
  commentId: P:Microsoft.Health.Utility.SmartUriBuilder.OriginalString
  id: OriginalString
  parent: Microsoft.Health.Utility.SmartUriBuilder
  langs:
  - csharp
  - vb
  name: OriginalString
  nameWithType: SmartUriBuilder.OriginalString
  fullName: Microsoft.Health.Utility.SmartUriBuilder.OriginalString
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/SmartUriBuilder.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: OriginalString
    path: utilities/SmartUriBuilder.cs
    startLine: 55
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  syntax:
    content: public string OriginalString { get; }
    content.vb: Public ReadOnly Property OriginalString As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.Utility.SmartUriBuilder.OriginalString*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.SmartUriBuilder.AbsoluteUri
  commentId: P:Microsoft.Health.Utility.SmartUriBuilder.AbsoluteUri
  id: AbsoluteUri
  parent: Microsoft.Health.Utility.SmartUriBuilder
  langs:
  - csharp
  - vb
  name: AbsoluteUri
  nameWithType: SmartUriBuilder.AbsoluteUri
  fullName: Microsoft.Health.Utility.SmartUriBuilder.AbsoluteUri
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/SmartUriBuilder.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AbsoluteUri
    path: utilities/SmartUriBuilder.cs
    startLine: 60
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  syntax:
    content: public string AbsoluteUri { get; }
    content.vb: Public ReadOnly Property AbsoluteUri As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.Utility.SmartUriBuilder.AbsoluteUri*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.SmartUriBuilder.op_Implicit(Microsoft.Health.Utility.SmartUriBuilder)~System.Uri
  commentId: M:Microsoft.Health.Utility.SmartUriBuilder.op_Implicit(Microsoft.Health.Utility.SmartUriBuilder)~System.Uri
  id: op_Implicit(Microsoft.Health.Utility.SmartUriBuilder)~System.Uri
  parent: Microsoft.Health.Utility.SmartUriBuilder
  langs:
  - csharp
  - vb
  name: Implicit(SmartUriBuilder to Uri)
  nameWithType: SmartUriBuilder.Implicit(SmartUriBuilder to Uri)
  fullName: Microsoft.Health.Utility.SmartUriBuilder.Implicit(Microsoft.Health.Utility.SmartUriBuilder to System.Uri)
  type: Operator
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/SmartUriBuilder.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: op_Implicit
    path: utilities/SmartUriBuilder.cs
    startLine: 65
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  syntax:
    content: public static implicit operator Uri(SmartUriBuilder sub)
    content.vb: Public Shared Widening Operator CType(sub As SmartUriBuilder) As Uri
    parameters:
    - id: sub
      type: Microsoft.Health.Utility.SmartUriBuilder
    return:
      type: System.Uri
  overload: Microsoft.Health.Utility.SmartUriBuilder.op_Implicit*
  nameWithType.vb: SmartUriBuilder.Widening(SmartUriBuilder to Uri)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Health.Utility.SmartUriBuilder.Widening(Microsoft.Health.Utility.SmartUriBuilder to System.Uri)
  name.vb: Widening(SmartUriBuilder to Uri)
- uid: Microsoft.Health.Utility.SmartUriBuilder.Equals(System.Uri)
  commentId: M:Microsoft.Health.Utility.SmartUriBuilder.Equals(System.Uri)
  id: Equals(System.Uri)
  parent: Microsoft.Health.Utility.SmartUriBuilder
  langs:
  - csharp
  - vb
  name: Equals(Uri)
  nameWithType: SmartUriBuilder.Equals(Uri)
  fullName: Microsoft.Health.Utility.SmartUriBuilder.Equals(System.Uri)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/SmartUriBuilder.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Equals
    path: utilities/SmartUriBuilder.cs
    startLine: 70
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  syntax:
    content: public bool Equals(Uri url)
    content.vb: Public Function Equals(url As Uri) As Boolean
    parameters:
    - id: url
      type: System.Uri
    return:
      type: System.Boolean
  overload: Microsoft.Health.Utility.SmartUriBuilder.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.SmartUriBuilder.ToString
  commentId: M:Microsoft.Health.Utility.SmartUriBuilder.ToString
  id: ToString
  parent: Microsoft.Health.Utility.SmartUriBuilder
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SmartUriBuilder.ToString()
  fullName: Microsoft.Health.Utility.SmartUriBuilder.ToString()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/SmartUriBuilder.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ToString
    path: utilities/SmartUriBuilder.cs
    startLine: 75
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  overridden: System.Object.ToString
  overload: Microsoft.Health.Utility.SmartUriBuilder.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.Utility.SmartUriBuilder.GetQueryParam(System.String)
  commentId: M:Microsoft.Health.Utility.SmartUriBuilder.GetQueryParam(System.String)
  id: GetQueryParam(System.String)
  parent: Microsoft.Health.Utility.SmartUriBuilder
  langs:
  - csharp
  - vb
  name: GetQueryParam(String)
  nameWithType: SmartUriBuilder.GetQueryParam(String)
  fullName: Microsoft.Health.Utility.SmartUriBuilder.GetQueryParam(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/SmartUriBuilder.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetQueryParam
    path: utilities/SmartUriBuilder.cs
    startLine: 80
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  syntax:
    content: public string GetQueryParam(string name)
    content.vb: Public Function GetQueryParam(name As String) As String
    parameters:
    - id: name
      type: System.String
    return:
      type: System.String
  overload: Microsoft.Health.Utility.SmartUriBuilder.GetQueryParam*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.SmartUriBuilder.AddQueryParam(System.String,System.String,System.Boolean)
  commentId: M:Microsoft.Health.Utility.SmartUriBuilder.AddQueryParam(System.String,System.String,System.Boolean)
  id: AddQueryParam(System.String,System.String,System.Boolean)
  parent: Microsoft.Health.Utility.SmartUriBuilder
  langs:
  - csharp
  - vb
  name: AddQueryParam(String, String, Boolean)
  nameWithType: SmartUriBuilder.AddQueryParam(String, String, Boolean)
  fullName: Microsoft.Health.Utility.SmartUriBuilder.AddQueryParam(System.String, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/SmartUriBuilder.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AddQueryParam
    path: utilities/SmartUriBuilder.cs
    startLine: 90
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  syntax:
    content: public SmartUriBuilder AddQueryParam(string key, string value, bool overwrite)
    content.vb: Public Function AddQueryParam(key As String, value As String, overwrite As Boolean) As SmartUriBuilder
    parameters:
    - id: key
      type: System.String
    - id: value
      type: System.String
    - id: overwrite
      type: System.Boolean
    return:
      type: Microsoft.Health.Utility.SmartUriBuilder
  overload: Microsoft.Health.Utility.SmartUriBuilder.AddQueryParam*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.SmartUriBuilder.AddQueryParam(System.String,System.String)
  commentId: M:Microsoft.Health.Utility.SmartUriBuilder.AddQueryParam(System.String,System.String)
  id: AddQueryParam(System.String,System.String)
  parent: Microsoft.Health.Utility.SmartUriBuilder
  langs:
  - csharp
  - vb
  name: AddQueryParam(String, String)
  nameWithType: SmartUriBuilder.AddQueryParam(String, String)
  fullName: Microsoft.Health.Utility.SmartUriBuilder.AddQueryParam(System.String, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/SmartUriBuilder.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AddQueryParam
    path: utilities/SmartUriBuilder.cs
    startLine: 112
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  syntax:
    content: public SmartUriBuilder AddQueryParam(string key, string value)
    content.vb: Public Function AddQueryParam(key As String, value As String) As SmartUriBuilder
    parameters:
    - id: key
      type: System.String
    - id: value
      type: System.String
    return:
      type: Microsoft.Health.Utility.SmartUriBuilder
  overload: Microsoft.Health.Utility.SmartUriBuilder.AddQueryParam*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.SmartUriBuilder.AddFullQuery(System.String)
  commentId: M:Microsoft.Health.Utility.SmartUriBuilder.AddFullQuery(System.String)
  id: AddFullQuery(System.String)
  parent: Microsoft.Health.Utility.SmartUriBuilder
  langs:
  - csharp
  - vb
  name: AddFullQuery(String)
  nameWithType: SmartUriBuilder.AddFullQuery(String)
  fullName: Microsoft.Health.Utility.SmartUriBuilder.AddFullQuery(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/SmartUriBuilder.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AddFullQuery
    path: utilities/SmartUriBuilder.cs
    startLine: 117
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  syntax:
    content: public SmartUriBuilder AddFullQuery(string query)
    content.vb: Public Function AddFullQuery(query As String) As SmartUriBuilder
    parameters:
    - id: query
      type: System.String
    return:
      type: Microsoft.Health.Utility.SmartUriBuilder
  overload: Microsoft.Health.Utility.SmartUriBuilder.AddFullQuery*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.SmartUriBuilder.RemoveQueryParam(System.String)
  commentId: M:Microsoft.Health.Utility.SmartUriBuilder.RemoveQueryParam(System.String)
  id: RemoveQueryParam(System.String)
  parent: Microsoft.Health.Utility.SmartUriBuilder
  langs:
  - csharp
  - vb
  name: RemoveQueryParam(String)
  nameWithType: SmartUriBuilder.RemoveQueryParam(String)
  fullName: Microsoft.Health.Utility.SmartUriBuilder.RemoveQueryParam(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/SmartUriBuilder.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: RemoveQueryParam
    path: utilities/SmartUriBuilder.cs
    startLine: 134
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  syntax:
    content: public SmartUriBuilder RemoveQueryParam(string key)
    content.vb: Public Function RemoveQueryParam(key As String) As SmartUriBuilder
    parameters:
    - id: key
      type: System.String
    return:
      type: Microsoft.Health.Utility.SmartUriBuilder
  overload: Microsoft.Health.Utility.SmartUriBuilder.RemoveQueryParam*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.SmartUriBuilder.AddFragment(System.String)
  commentId: M:Microsoft.Health.Utility.SmartUriBuilder.AddFragment(System.String)
  id: AddFragment(System.String)
  parent: Microsoft.Health.Utility.SmartUriBuilder
  langs:
  - csharp
  - vb
  name: AddFragment(String)
  nameWithType: SmartUriBuilder.AddFragment(String)
  fullName: Microsoft.Health.Utility.SmartUriBuilder.AddFragment(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/SmartUriBuilder.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AddFragment
    path: utilities/SmartUriBuilder.cs
    startLine: 140
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  syntax:
    content: public SmartUriBuilder AddFragment(string fragment)
    content.vb: Public Function AddFragment(fragment As String) As SmartUriBuilder
    parameters:
    - id: fragment
      type: System.String
    return:
      type: Microsoft.Health.Utility.SmartUriBuilder
  overload: Microsoft.Health.Utility.SmartUriBuilder.AddFragment*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.SmartUriBuilder.RemoveFragment
  commentId: M:Microsoft.Health.Utility.SmartUriBuilder.RemoveFragment
  id: RemoveFragment
  parent: Microsoft.Health.Utility.SmartUriBuilder
  langs:
  - csharp
  - vb
  name: RemoveFragment()
  nameWithType: SmartUriBuilder.RemoveFragment()
  fullName: Microsoft.Health.Utility.SmartUriBuilder.RemoveFragment()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/SmartUriBuilder.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: RemoveFragment
    path: utilities/SmartUriBuilder.cs
    startLine: 146
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  syntax:
    content: public SmartUriBuilder RemoveFragment()
    content.vb: Public Function RemoveFragment As SmartUriBuilder
    return:
      type: Microsoft.Health.Utility.SmartUriBuilder
  overload: Microsoft.Health.Utility.SmartUriBuilder.RemoveFragment*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.SmartUriBuilder.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<SmartUriBuilder>()
  nameWithType: TypeHelper.ValueOrDbNull<SmartUriBuilder>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Utility.SmartUriBuilder>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of SmartUriBuilder)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Utility.SmartUriBuilder)()
  name.vb: ValueOrDbNull(Of SmartUriBuilder)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<SmartUriBuilder>
    nameWithType: TypeHelper.ValueOrDbNull<SmartUriBuilder>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Utility.SmartUriBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of SmartUriBuilder)
    nameWithType: TypeHelper.ValueOrDbNull(Of SmartUriBuilder)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Utility.SmartUriBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility.SmartUriBuilder.#ctor*
  commentId: Overload:Microsoft.Health.Utility.SmartUriBuilder.#ctor
  isExternal: false
  name: SmartUriBuilder
  nameWithType: SmartUriBuilder.SmartUriBuilder
  fullName: Microsoft.Health.Utility.SmartUriBuilder.SmartUriBuilder
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Microsoft.Health.Utility.SmartUriBuilder.Query*
  commentId: Overload:Microsoft.Health.Utility.SmartUriBuilder.Query
  isExternal: false
  name: Query
  nameWithType: SmartUriBuilder.Query
  fullName: Microsoft.Health.Utility.SmartUriBuilder.Query
- uid: Microsoft.Health.Utility.SmartUriBuilder.Uri*
  commentId: Overload:Microsoft.Health.Utility.SmartUriBuilder.Uri
  isExternal: false
  name: Uri
  nameWithType: SmartUriBuilder.Uri
  fullName: Microsoft.Health.Utility.SmartUriBuilder.Uri
- uid: Microsoft.Health.Utility.SmartUriBuilder.OriginalString*
  commentId: Overload:Microsoft.Health.Utility.SmartUriBuilder.OriginalString
  isExternal: false
  name: OriginalString
  nameWithType: SmartUriBuilder.OriginalString
  fullName: Microsoft.Health.Utility.SmartUriBuilder.OriginalString
- uid: Microsoft.Health.Utility.SmartUriBuilder.AbsoluteUri*
  commentId: Overload:Microsoft.Health.Utility.SmartUriBuilder.AbsoluteUri
  isExternal: false
  name: AbsoluteUri
  nameWithType: SmartUriBuilder.AbsoluteUri
  fullName: Microsoft.Health.Utility.SmartUriBuilder.AbsoluteUri
- uid: Microsoft.Health.Utility.SmartUriBuilder.op_Implicit*
  commentId: Overload:Microsoft.Health.Utility.SmartUriBuilder.op_Implicit
  isExternal: false
  name: Implicit
  nameWithType: SmartUriBuilder.Implicit
  fullName: Microsoft.Health.Utility.SmartUriBuilder.Implicit
  nameWithType.vb: SmartUriBuilder.Widening
  fullName.vb: Microsoft.Health.Utility.SmartUriBuilder.Widening
  name.vb: Widening
- uid: Microsoft.Health.Utility.SmartUriBuilder
  commentId: T:Microsoft.Health.Utility.SmartUriBuilder
  parent: Microsoft.Health.Utility
  isExternal: false
  name: SmartUriBuilder
  nameWithType: SmartUriBuilder
  fullName: Microsoft.Health.Utility.SmartUriBuilder
- uid: Microsoft.Health.Utility.SmartUriBuilder.Equals*
  commentId: Overload:Microsoft.Health.Utility.SmartUriBuilder.Equals
  isExternal: false
  name: Equals
  nameWithType: SmartUriBuilder.Equals
  fullName: Microsoft.Health.Utility.SmartUriBuilder.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.SmartUriBuilder.ToString*
  commentId: Overload:Microsoft.Health.Utility.SmartUriBuilder.ToString
  isExternal: false
  name: ToString
  nameWithType: SmartUriBuilder.ToString
  fullName: Microsoft.Health.Utility.SmartUriBuilder.ToString
- uid: Microsoft.Health.Utility.SmartUriBuilder.GetQueryParam*
  commentId: Overload:Microsoft.Health.Utility.SmartUriBuilder.GetQueryParam
  isExternal: false
  name: GetQueryParam
  nameWithType: SmartUriBuilder.GetQueryParam
  fullName: Microsoft.Health.Utility.SmartUriBuilder.GetQueryParam
- uid: Microsoft.Health.Utility.SmartUriBuilder.AddQueryParam*
  commentId: Overload:Microsoft.Health.Utility.SmartUriBuilder.AddQueryParam
  isExternal: false
  name: AddQueryParam
  nameWithType: SmartUriBuilder.AddQueryParam
  fullName: Microsoft.Health.Utility.SmartUriBuilder.AddQueryParam
- uid: Microsoft.Health.Utility.SmartUriBuilder.AddFullQuery*
  commentId: Overload:Microsoft.Health.Utility.SmartUriBuilder.AddFullQuery
  isExternal: false
  name: AddFullQuery
  nameWithType: SmartUriBuilder.AddFullQuery
  fullName: Microsoft.Health.Utility.SmartUriBuilder.AddFullQuery
- uid: Microsoft.Health.Utility.SmartUriBuilder.RemoveQueryParam*
  commentId: Overload:Microsoft.Health.Utility.SmartUriBuilder.RemoveQueryParam
  isExternal: false
  name: RemoveQueryParam
  nameWithType: SmartUriBuilder.RemoveQueryParam
  fullName: Microsoft.Health.Utility.SmartUriBuilder.RemoveQueryParam
- uid: Microsoft.Health.Utility.SmartUriBuilder.AddFragment*
  commentId: Overload:Microsoft.Health.Utility.SmartUriBuilder.AddFragment
  isExternal: false
  name: AddFragment
  nameWithType: SmartUriBuilder.AddFragment
  fullName: Microsoft.Health.Utility.SmartUriBuilder.AddFragment
- uid: Microsoft.Health.Utility.SmartUriBuilder.RemoveFragment*
  commentId: Overload:Microsoft.Health.Utility.SmartUriBuilder.RemoveFragment
  isExternal: false
  name: RemoveFragment
  nameWithType: SmartUriBuilder.RemoveFragment
  fullName: Microsoft.Health.Utility.SmartUriBuilder.RemoveFragment
