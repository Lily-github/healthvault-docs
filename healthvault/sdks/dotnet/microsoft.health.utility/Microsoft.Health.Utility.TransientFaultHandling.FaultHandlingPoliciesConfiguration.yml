### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration
  commentId: T:Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration
  id: FaultHandlingPoliciesConfiguration
  parent: Microsoft.Health.Utility.TransientFaultHandling
  children:
  - Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration.#ctor
  - Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration.#ctor(System.Collections.Generic.IDictionary{System.String,Microsoft.Health.Utility.TransientFaultHandling.TransientFaultHandlingPolicy},Microsoft.Health.Utility.TransientFaultHandling.TransientFaultHandlingPolicy)
  - Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration.GetFaultHandlingPolicyForDatabase(System.String)
  - Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration.GetSchema
  - Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration.ReadXml(System.Xml.XmlReader)
  - Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration.WriteXml(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: FaultHandlingPoliciesConfiguration
  nameWithType: FaultHandlingPoliciesConfiguration
  fullName: Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/TransientFaultHandling/FaultHandlingPoliciesConfiguration.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: FaultHandlingPoliciesConfiguration
    path: utilities/TransientFaultHandling/FaultHandlingPoliciesConfiguration.cs
    startLine: 19
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.TransientFaultHandling
  summary: "\nRepresent a configuration that defines a collection of fault-handling policies.\n"
  example: []
  syntax:
    content: 'public class FaultHandlingPoliciesConfiguration : IXmlSerializable'
    content.vb: >-
      Public Class FaultHandlingPoliciesConfiguration
          Implements IXmlSerializable
  inheritance:
  - System.Object
  implements:
  - System.Xml.Serialization.IXmlSerializable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration.#ctor
  commentId: M:Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration.#ctor
  id: '#ctor'
  parent: Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration
  langs:
  - csharp
  - vb
  name: FaultHandlingPoliciesConfiguration()
  nameWithType: FaultHandlingPoliciesConfiguration.FaultHandlingPoliciesConfiguration()
  fullName: Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration.FaultHandlingPoliciesConfiguration()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/TransientFaultHandling/FaultHandlingPoliciesConfiguration.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: utilities/TransientFaultHandling/FaultHandlingPoliciesConfiguration.cs
    startLine: 28
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.TransientFaultHandling
  summary: "\nDefault constructor for deserialization.\n"
  example: []
  syntax:
    content: public FaultHandlingPoliciesConfiguration()
    content.vb: Public Sub New
  overload: Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration.#ctor(System.Collections.Generic.IDictionary{System.String,Microsoft.Health.Utility.TransientFaultHandling.TransientFaultHandlingPolicy},Microsoft.Health.Utility.TransientFaultHandling.TransientFaultHandlingPolicy)
  commentId: M:Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration.#ctor(System.Collections.Generic.IDictionary{System.String,Microsoft.Health.Utility.TransientFaultHandling.TransientFaultHandlingPolicy},Microsoft.Health.Utility.TransientFaultHandling.TransientFaultHandlingPolicy)
  id: '#ctor(System.Collections.Generic.IDictionary{System.String,Microsoft.Health.Utility.TransientFaultHandling.TransientFaultHandlingPolicy},Microsoft.Health.Utility.TransientFaultHandling.TransientFaultHandlingPolicy)'
  parent: Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration
  langs:
  - csharp
  - vb
  name: FaultHandlingPoliciesConfiguration(IDictionary<String, TransientFaultHandlingPolicy>, TransientFaultHandlingPolicy)
  nameWithType: FaultHandlingPoliciesConfiguration.FaultHandlingPoliciesConfiguration(IDictionary<String, TransientFaultHandlingPolicy>, TransientFaultHandlingPolicy)
  fullName: Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration.FaultHandlingPoliciesConfiguration(System.Collections.Generic.IDictionary<System.String, Microsoft.Health.Utility.TransientFaultHandling.TransientFaultHandlingPolicy>, Microsoft.Health.Utility.TransientFaultHandling.TransientFaultHandlingPolicy)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/TransientFaultHandling/FaultHandlingPoliciesConfiguration.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: utilities/TransientFaultHandling/FaultHandlingPoliciesConfiguration.cs
    startLine: 33
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.TransientFaultHandling
  syntax:
    content: public FaultHandlingPoliciesConfiguration(IDictionary<string, TransientFaultHandlingPolicy> databasePolicies, TransientFaultHandlingPolicy databaseDefaultPolicy)
    content.vb: Public Sub New(databasePolicies As IDictionary(Of String, TransientFaultHandlingPolicy), databaseDefaultPolicy As TransientFaultHandlingPolicy)
    parameters:
    - id: databasePolicies
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Health.Utility.TransientFaultHandling.TransientFaultHandlingPolicy}
    - id: databaseDefaultPolicy
      type: Microsoft.Health.Utility.TransientFaultHandling.TransientFaultHandlingPolicy
  overload: Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration.#ctor*
  nameWithType.vb: FaultHandlingPoliciesConfiguration.FaultHandlingPoliciesConfiguration(IDictionary(Of String, TransientFaultHandlingPolicy), TransientFaultHandlingPolicy)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration.FaultHandlingPoliciesConfiguration(System.Collections.Generic.IDictionary(Of System.String, Microsoft.Health.Utility.TransientFaultHandling.TransientFaultHandlingPolicy), Microsoft.Health.Utility.TransientFaultHandling.TransientFaultHandlingPolicy)
  name.vb: FaultHandlingPoliciesConfiguration(IDictionary(Of String, TransientFaultHandlingPolicy), TransientFaultHandlingPolicy)
- uid: Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration.GetFaultHandlingPolicyForDatabase(System.String)
  commentId: M:Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration.GetFaultHandlingPolicyForDatabase(System.String)
  id: GetFaultHandlingPolicyForDatabase(System.String)
  parent: Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration
  langs:
  - csharp
  - vb
  name: GetFaultHandlingPolicyForDatabase(String)
  nameWithType: FaultHandlingPoliciesConfiguration.GetFaultHandlingPolicyForDatabase(String)
  fullName: Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration.GetFaultHandlingPolicyForDatabase(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/TransientFaultHandling/FaultHandlingPoliciesConfiguration.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetFaultHandlingPolicyForDatabase
    path: utilities/TransientFaultHandling/FaultHandlingPoliciesConfiguration.cs
    startLine: 49
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.TransientFaultHandling
  summary: "\nGets the policy for the given database key.\n"
  remarks: "\nIf a default policy is specified and no matching policy\nfor the given key is found, the default policy is returned.\n\nIf a default policy is not specified and no matching\npolicy for the given key is found, a KeyNotFoundException is thrown.\n"
  example: []
  syntax:
    content: public TransientFaultHandlingPolicy GetFaultHandlingPolicyForDatabase(string key)
    content.vb: Public Function GetFaultHandlingPolicyForDatabase(key As String) As TransientFaultHandlingPolicy
    parameters:
    - id: key
      type: System.String
    return:
      type: Microsoft.Health.Utility.TransientFaultHandling.TransientFaultHandlingPolicy
  overload: Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration.GetFaultHandlingPolicyForDatabase*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration.GetSchema
  commentId: M:Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration.GetSchema
  id: GetSchema
  parent: Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration
  langs:
  - csharp
  - vb
  name: GetSchema()
  nameWithType: FaultHandlingPoliciesConfiguration.GetSchema()
  fullName: Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration.GetSchema()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/TransientFaultHandling/FaultHandlingPoliciesConfiguration.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetSchema
    path: utilities/TransientFaultHandling/FaultHandlingPoliciesConfiguration.cs
    startLine: 68
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.TransientFaultHandling
  syntax:
    content: public XmlSchema GetSchema()
    content.vb: Public Function GetSchema As XmlSchema
    return:
      type: System.Xml.Schema.XmlSchema
  overload: Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration.GetSchema*
  implements:
  - System.Xml.Serialization.IXmlSerializable.GetSchema
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration.ReadXml(System.Xml.XmlReader)
  commentId: M:Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration.ReadXml(System.Xml.XmlReader)
  id: ReadXml(System.Xml.XmlReader)
  parent: Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration
  langs:
  - csharp
  - vb
  name: ReadXml(XmlReader)
  nameWithType: FaultHandlingPoliciesConfiguration.ReadXml(XmlReader)
  fullName: Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration.ReadXml(System.Xml.XmlReader)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/TransientFaultHandling/FaultHandlingPoliciesConfiguration.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ReadXml
    path: utilities/TransientFaultHandling/FaultHandlingPoliciesConfiguration.cs
    startLine: 76
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.TransientFaultHandling
  summary: "\nDeserializes the policies into this object from the given XML.\n"
  example: []
  syntax:
    content: public void ReadXml(XmlReader reader)
    content.vb: Public Sub ReadXml(reader As XmlReader)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
  overload: Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration.ReadXml*
  implements:
  - System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration.WriteXml(System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration.WriteXml(System.Xml.XmlWriter)
  id: WriteXml(System.Xml.XmlWriter)
  parent: Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration
  langs:
  - csharp
  - vb
  name: WriteXml(XmlWriter)
  nameWithType: FaultHandlingPoliciesConfiguration.WriteXml(XmlWriter)
  fullName: Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration.WriteXml(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/TransientFaultHandling/FaultHandlingPoliciesConfiguration.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteXml
    path: utilities/TransientFaultHandling/FaultHandlingPoliciesConfiguration.cs
    startLine: 110
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.TransientFaultHandling
  summary: "\nSerializes the policies to XML.\n"
  example: []
  syntax:
    content: public void WriteXml(XmlWriter writer)
    content.vb: Public Sub WriteXml(writer As XmlWriter)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
  overload: Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration.WriteXml*
  implements:
  - System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Health.Utility.TransientFaultHandling
  commentId: N:Microsoft.Health.Utility.TransientFaultHandling
  isExternal: false
  name: Microsoft.Health.Utility.TransientFaultHandling
  nameWithType: Microsoft.Health.Utility.TransientFaultHandling
  fullName: Microsoft.Health.Utility.TransientFaultHandling
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Xml.Serialization.IXmlSerializable
  commentId: T:System.Xml.Serialization.IXmlSerializable
  parent: System.Xml.Serialization
  isExternal: true
  name: IXmlSerializable
  nameWithType: IXmlSerializable
  fullName: System.Xml.Serialization.IXmlSerializable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<FaultHandlingPoliciesConfiguration>()
  nameWithType: TypeHelper.ValueOrDbNull<FaultHandlingPoliciesConfiguration>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of FaultHandlingPoliciesConfiguration)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration)()
  name.vb: ValueOrDbNull(Of FaultHandlingPoliciesConfiguration)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<FaultHandlingPoliciesConfiguration>
    nameWithType: TypeHelper.ValueOrDbNull<FaultHandlingPoliciesConfiguration>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of FaultHandlingPoliciesConfiguration)
    nameWithType: TypeHelper.ValueOrDbNull(Of FaultHandlingPoliciesConfiguration)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Xml.Serialization
  commentId: N:System.Xml.Serialization
  isExternal: false
  name: System.Xml.Serialization
  nameWithType: System.Xml.Serialization
  fullName: System.Xml.Serialization
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration.#ctor*
  commentId: Overload:Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration.#ctor
  isExternal: false
  name: FaultHandlingPoliciesConfiguration
  nameWithType: FaultHandlingPoliciesConfiguration.FaultHandlingPoliciesConfiguration
  fullName: Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration.FaultHandlingPoliciesConfiguration
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Health.Utility.TransientFaultHandling.TransientFaultHandlingPolicy}
  commentId: T:System.Collections.Generic.IDictionary{System.String,Microsoft.Health.Utility.TransientFaultHandling.TransientFaultHandlingPolicy}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, TransientFaultHandlingPolicy>
  nameWithType: IDictionary<String, TransientFaultHandlingPolicy>
  fullName: System.Collections.Generic.IDictionary<System.String, Microsoft.Health.Utility.TransientFaultHandling.TransientFaultHandlingPolicy>
  nameWithType.vb: IDictionary(Of String, TransientFaultHandlingPolicy)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, Microsoft.Health.Utility.TransientFaultHandling.TransientFaultHandlingPolicy)
  name.vb: IDictionary(Of String, TransientFaultHandlingPolicy)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.Utility.TransientFaultHandling.TransientFaultHandlingPolicy
    name: TransientFaultHandlingPolicy
    nameWithType: TransientFaultHandlingPolicy
    fullName: Microsoft.Health.Utility.TransientFaultHandling.TransientFaultHandlingPolicy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Health.Utility.TransientFaultHandling.TransientFaultHandlingPolicy
    name: TransientFaultHandlingPolicy
    nameWithType: TransientFaultHandlingPolicy
    fullName: Microsoft.Health.Utility.TransientFaultHandling.TransientFaultHandlingPolicy
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TransientFaultHandling.TransientFaultHandlingPolicy
  commentId: T:Microsoft.Health.Utility.TransientFaultHandling.TransientFaultHandlingPolicy
  parent: Microsoft.Health.Utility.TransientFaultHandling
  isExternal: false
  name: TransientFaultHandlingPolicy
  nameWithType: TransientFaultHandlingPolicy
  fullName: Microsoft.Health.Utility.TransientFaultHandling.TransientFaultHandlingPolicy
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration.GetFaultHandlingPolicyForDatabase*
  commentId: Overload:Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration.GetFaultHandlingPolicyForDatabase
  isExternal: false
  name: GetFaultHandlingPolicyForDatabase
  nameWithType: FaultHandlingPoliciesConfiguration.GetFaultHandlingPolicyForDatabase
  fullName: Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration.GetFaultHandlingPolicyForDatabase
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration.GetSchema*
  commentId: Overload:Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration.GetSchema
  isExternal: false
  name: GetSchema
  nameWithType: FaultHandlingPoliciesConfiguration.GetSchema
  fullName: Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration.GetSchema
- uid: System.Xml.Serialization.IXmlSerializable.GetSchema
  commentId: M:System.Xml.Serialization.IXmlSerializable.GetSchema
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  name: GetSchema()
  nameWithType: IXmlSerializable.GetSchema()
  fullName: System.Xml.Serialization.IXmlSerializable.GetSchema()
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.GetSchema
    name: GetSchema
    nameWithType: IXmlSerializable.GetSchema
    fullName: System.Xml.Serialization.IXmlSerializable.GetSchema
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.GetSchema
    name: GetSchema
    nameWithType: IXmlSerializable.GetSchema
    fullName: System.Xml.Serialization.IXmlSerializable.GetSchema
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.Schema.XmlSchema
  commentId: T:System.Xml.Schema.XmlSchema
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema
- uid: System.Xml.Schema
  commentId: N:System.Xml.Schema
  isExternal: false
  name: System.Xml.Schema
  nameWithType: System.Xml.Schema
  fullName: System.Xml.Schema
- uid: Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration.ReadXml*
  commentId: Overload:Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration.ReadXml
  isExternal: false
  name: ReadXml
  nameWithType: FaultHandlingPoliciesConfiguration.ReadXml
  fullName: Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration.ReadXml
- uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  commentId: M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  name: ReadXml(XmlReader)
  nameWithType: IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
    name: ReadXml
    nameWithType: IXmlSerializable.ReadXml
    fullName: System.Xml.Serialization.IXmlSerializable.ReadXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
    name: ReadXml
    nameWithType: IXmlSerializable.ReadXml
    fullName: System.Xml.Serialization.IXmlSerializable.ReadXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlReader
  commentId: T:System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration.WriteXml*
  commentId: Overload:Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration.WriteXml
  isExternal: false
  name: WriteXml
  nameWithType: FaultHandlingPoliciesConfiguration.WriteXml
  fullName: Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration.WriteXml
- uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  commentId: M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  name: WriteXml(XmlWriter)
  nameWithType: IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: IXmlSerializable.WriteXml
    fullName: System.Xml.Serialization.IXmlSerializable.WriteXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: IXmlSerializable.WriteXml
    fullName: System.Xml.Serialization.IXmlSerializable.WriteXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
