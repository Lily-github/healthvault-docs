### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.ItemTypes.AerobicData
  commentId: T:Microsoft.Health.ItemTypes.AerobicData
  id: AerobicData
  parent: Microsoft.Health.ItemTypes
  children:
  - Microsoft.Health.ItemTypes.AerobicData.#ctor
  - Microsoft.Health.ItemTypes.AerobicData.AerobicStepMinutes
  - Microsoft.Health.ItemTypes.AerobicData.AverageAltitude
  - Microsoft.Health.ItemTypes.AerobicData.AverageCadence
  - Microsoft.Health.ItemTypes.AerobicData.AverageHeartRate
  - Microsoft.Health.ItemTypes.AerobicData.AveragePace
  - Microsoft.Health.ItemTypes.AerobicData.AveragePower
  - Microsoft.Health.ItemTypes.AerobicData.AverageSpeed
  - Microsoft.Health.ItemTypes.AerobicData.AverageTemperature
  - Microsoft.Health.ItemTypes.AerobicData.AverageTorque
  - Microsoft.Health.ItemTypes.AerobicData.Distance
  - Microsoft.Health.ItemTypes.AerobicData.Duration
  - Microsoft.Health.ItemTypes.AerobicData.DurationAsTimeSpan
  - Microsoft.Health.ItemTypes.AerobicData.ElevationGain
  - Microsoft.Health.ItemTypes.AerobicData.ElevationLoss
  - Microsoft.Health.ItemTypes.AerobicData.Energy
  - Microsoft.Health.ItemTypes.AerobicData.EnergyFromFat
  - Microsoft.Health.ItemTypes.AerobicData.Intensity
  - Microsoft.Health.ItemTypes.AerobicData.LeftRightBalance
  - Microsoft.Health.ItemTypes.AerobicData.MinAltitude
  - Microsoft.Health.ItemTypes.AerobicData.MinCadence
  - Microsoft.Health.ItemTypes.AerobicData.MinHeartRate
  - Microsoft.Health.ItemTypes.AerobicData.MinPace
  - Microsoft.Health.ItemTypes.AerobicData.MinPower
  - Microsoft.Health.ItemTypes.AerobicData.MinSpeed
  - Microsoft.Health.ItemTypes.AerobicData.MinTemperature
  - Microsoft.Health.ItemTypes.AerobicData.MinTorque
  - Microsoft.Health.ItemTypes.AerobicData.Mode
  - Microsoft.Health.ItemTypes.AerobicData.NumberOfAerobicSteps
  - Microsoft.Health.ItemTypes.AerobicData.NumberOfSteps
  - Microsoft.Health.ItemTypes.AerobicData.ParseXml(System.Xml.XPath.XPathNavigator)
  - Microsoft.Health.ItemTypes.AerobicData.PeakAltitude
  - Microsoft.Health.ItemTypes.AerobicData.PeakCadence
  - Microsoft.Health.ItemTypes.AerobicData.PeakHeartRate
  - Microsoft.Health.ItemTypes.AerobicData.PeakPace
  - Microsoft.Health.ItemTypes.AerobicData.PeakPower
  - Microsoft.Health.ItemTypes.AerobicData.PeakSpeed
  - Microsoft.Health.ItemTypes.AerobicData.PeakTemperature
  - Microsoft.Health.ItemTypes.AerobicData.PeakTorque
  - Microsoft.Health.ItemTypes.AerobicData.ToString
  - Microsoft.Health.ItemTypes.AerobicData.WriteXml(System.String,System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: AerobicData
  nameWithType: AerobicData
  fullName: Microsoft.Health.ItemTypes.AerobicData
  type: Class
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AerobicData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AerobicData
    path: ../Microsoft.Health.ItemTypes/AerobicData.cs
    startLine: 25
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nRepresents data about an aerobic session.\n"
  remarks: "\nAerobic data can represent the data for an entire session, the data\nfor a single lap, or the desired aerobic session for an aerobic goal.\n"
  example: []
  syntax:
    content: 'public class AerobicData : HealthRecordItemData'
    content.vb: >-
      Public Class AerobicData
          Inherits HealthRecordItemData
  inheritance:
  - System.Object
  - Microsoft.Health.ItemTypes.HealthRecordItemData
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.ItemTypes.AerobicData.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.ItemTypes.AerobicData.#ctor
  commentId: M:Microsoft.Health.ItemTypes.AerobicData.#ctor
  id: '#ctor'
  parent: Microsoft.Health.ItemTypes.AerobicData
  langs:
  - csharp
  - vb
  name: AerobicData()
  nameWithType: AerobicData.AerobicData()
  fullName: Microsoft.Health.ItemTypes.AerobicData.AerobicData()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AerobicData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.ItemTypes/AerobicData.cs
    startLine: 32
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.AerobicData\" data-throw-if-not-resolved=\"false\"></xref> class with \ndefault values.\n"
  example: []
  syntax:
    content: public AerobicData()
    content.vb: Public Sub New
  overload: Microsoft.Health.ItemTypes.AerobicData.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.AerobicData.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.AerobicData.ParseXml(System.Xml.XPath.XPathNavigator)
  id: ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.AerobicData
  langs:
  - csharp
  - vb
  name: ParseXml(XPathNavigator)
  nameWithType: AerobicData.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.AerobicData.ParseXml(System.Xml.XPath.XPathNavigator)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AerobicData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ParseXml
    path: ../Microsoft.Health.ItemTypes/AerobicData.cs
    startLine: 48
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nPopulates the data for the length from the XML.\n"
  example: []
  syntax:
    content: public override void ParseXml(XPathNavigator navigator)
    content.vb: Public Overrides Sub ParseXml(navigator As XPathNavigator)
    parameters:
    - id: navigator
      type: System.Xml.XPath.XPathNavigator
      description: "\nThe XML node representing the length.\n"
  overridden: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  overload: Microsoft.Health.ItemTypes.AerobicData.ParseXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">navigator</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.AerobicData.WriteXml(System.String,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.AerobicData.WriteXml(System.String,System.Xml.XmlWriter)
  id: WriteXml(System.String,System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.AerobicData
  langs:
  - csharp
  - vb
  name: WriteXml(String, XmlWriter)
  nameWithType: AerobicData.WriteXml(String, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.AerobicData.WriteXml(System.String, System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AerobicData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteXml
    path: ../Microsoft.Health.ItemTypes/AerobicData.cs
    startLine: 247
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nWrites the aerobic data to the specified XML writer.\n"
  example: []
  syntax:
    content: public override void WriteXml(string nodeName, XmlWriter writer)
    content.vb: Public Overrides Sub WriteXml(nodeName As String, writer As XmlWriter)
    parameters:
    - id: nodeName
      type: System.String
      description: "\nThe name of the outer element for the aerobic data.\n"
    - id: writer
      type: System.Xml.XmlWriter
      description: "\nThe XmlWriter to write the aerobic data to.\n"
  overridden: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  overload: Microsoft.Health.ItemTypes.AerobicData.WriteXml*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">nodeName</span> parameter is <strong>null</strong> or empty.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">writer</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.AerobicData.Mode
  commentId: P:Microsoft.Health.ItemTypes.AerobicData.Mode
  id: Mode
  parent: Microsoft.Health.ItemTypes.AerobicData
  langs:
  - csharp
  - vb
  name: Mode
  nameWithType: AerobicData.Mode
  fullName: Microsoft.Health.ItemTypes.AerobicData.Mode
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AerobicData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Mode
    path: ../Microsoft.Health.ItemTypes/AerobicData.cs
    startLine: 446
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the mode by which the aerobic session occurred.\n"
  remarks: "\nThe mode of the aerobic session include actions such as bike, run, or\nswim and are defined by the HealthVault dictionary.\n"
  example: []
  syntax:
    content: public CodableValue Mode { get; set; }
    content.vb: Public Property Mode As CodableValue
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.CodableValue
  overload: Microsoft.Health.ItemTypes.AerobicData.Mode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.AerobicData.Distance
  commentId: P:Microsoft.Health.ItemTypes.AerobicData.Distance
  id: Distance
  parent: Microsoft.Health.ItemTypes.AerobicData
  langs:
  - csharp
  - vb
  name: Distance
  nameWithType: AerobicData.Distance
  fullName: Microsoft.Health.ItemTypes.AerobicData.Distance
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AerobicData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Distance
    path: ../Microsoft.Health.ItemTypes/AerobicData.cs
    startLine: 465
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the length traversed by this aerobic session.\n"
  remarks: "\nSet the value to <strong>null</strong> if there is no distance.\n"
  example: []
  syntax:
    content: public Length Distance { get; set; }
    content.vb: Public Property Distance As Length
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.Length
      description: "\nA <xref href=\"Microsoft.Health.ItemTypes.Length\" data-throw-if-not-resolved=\"false\"></xref> value representing the distance.\n"
  overload: Microsoft.Health.ItemTypes.AerobicData.Distance*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.AerobicData.Duration
  commentId: P:Microsoft.Health.ItemTypes.AerobicData.Duration
  id: Duration
  parent: Microsoft.Health.ItemTypes.AerobicData
  langs:
  - csharp
  - vb
  name: Duration
  nameWithType: AerobicData.Duration
  fullName: Microsoft.Health.ItemTypes.AerobicData.Duration
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AerobicData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Duration
    path: ../Microsoft.Health.ItemTypes/AerobicData.cs
    startLine: 500
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the duration of the session in minutes.\n"
  remarks: "\nSet the value to <strong>null</strong> if there is no duration.\n"
  example: []
  syntax:
    content: public double ? Duration { get; set; }
    content.vb: Public Property Duration As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  overload: Microsoft.Health.ItemTypes.AerobicData.Duration*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nThe <span class=\"paramref\">value</span> parameter is negative or zero when set.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.AerobicData.DurationAsTimeSpan
  commentId: P:Microsoft.Health.ItemTypes.AerobicData.DurationAsTimeSpan
  id: DurationAsTimeSpan
  parent: Microsoft.Health.ItemTypes.AerobicData
  langs:
  - csharp
  - vb
  name: DurationAsTimeSpan
  nameWithType: AerobicData.DurationAsTimeSpan
  fullName: Microsoft.Health.ItemTypes.AerobicData.DurationAsTimeSpan
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AerobicData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DurationAsTimeSpan
    path: ../Microsoft.Health.ItemTypes/AerobicData.cs
    startLine: 516
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets the duration of the aerobic session as a \n<xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public TimeSpan DurationAsTimeSpan { get; }
    content.vb: Public ReadOnly Property DurationAsTimeSpan As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
  overload: Microsoft.Health.ItemTypes.AerobicData.DurationAsTimeSpan*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.ItemTypes.AerobicData.Intensity
  commentId: P:Microsoft.Health.ItemTypes.AerobicData.Intensity
  id: Intensity
  parent: Microsoft.Health.ItemTypes.AerobicData
  langs:
  - csharp
  - vb
  name: Intensity
  nameWithType: AerobicData.Intensity
  fullName: Microsoft.Health.ItemTypes.AerobicData.Intensity
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AerobicData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Intensity
    path: ../Microsoft.Health.ItemTypes/AerobicData.cs
    startLine: 546
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the relative intensity of the session.\n"
  remarks: "\nSet the value to <xref href=\"Microsoft.Health.ItemTypes.RelativeRating.None\" data-throw-if-not-resolved=\"false\"></xref> if there is \nno intensity.\n"
  example: []
  syntax:
    content: public RelativeRating Intensity { get; set; }
    content.vb: Public Property Intensity As RelativeRating
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.RelativeRating
  overload: Microsoft.Health.ItemTypes.AerobicData.Intensity*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.AerobicData.PeakHeartRate
  commentId: P:Microsoft.Health.ItemTypes.AerobicData.PeakHeartRate
  id: PeakHeartRate
  parent: Microsoft.Health.ItemTypes.AerobicData
  langs:
  - csharp
  - vb
  name: PeakHeartRate
  nameWithType: AerobicData.PeakHeartRate
  fullName: Microsoft.Health.ItemTypes.AerobicData.PeakHeartRate
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AerobicData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: PeakHeartRate
    path: ../Microsoft.Health.ItemTypes/AerobicData.cs
    startLine: 566
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the peak heart rate for the session.\n"
  remarks: "\nIf there is no heart rate data for the session, the value should\nbe set to <strong>null</strong>.\n"
  example: []
  syntax:
    content: public int ? PeakHeartRate { get; set; }
    content.vb: Public Property PeakHeartRate As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Health.ItemTypes.AerobicData.PeakHeartRate*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nThe <span class=\"paramref\">value</span> parameter is less than or equal to zero on set.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.AerobicData.AverageHeartRate
  commentId: P:Microsoft.Health.ItemTypes.AerobicData.AverageHeartRate
  id: AverageHeartRate
  parent: Microsoft.Health.ItemTypes.AerobicData
  langs:
  - csharp
  - vb
  name: AverageHeartRate
  nameWithType: AerobicData.AverageHeartRate
  fullName: Microsoft.Health.ItemTypes.AerobicData.AverageHeartRate
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AerobicData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AverageHeartRate
    path: ../Microsoft.Health.ItemTypes/AerobicData.cs
    startLine: 590
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the average heart rate for the session.\n"
  remarks: "\nIf there is no heart rate data for the session, the value should\nbe set to <strong>null</strong>.\n"
  example: []
  syntax:
    content: public int ? AverageHeartRate { get; set; }
    content.vb: Public Property AverageHeartRate As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Health.ItemTypes.AerobicData.AverageHeartRate*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nThe <span class=\"paramref\">value</span> parameter is less than or equal to zero on set.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.AerobicData.MinHeartRate
  commentId: P:Microsoft.Health.ItemTypes.AerobicData.MinHeartRate
  id: MinHeartRate
  parent: Microsoft.Health.ItemTypes.AerobicData
  langs:
  - csharp
  - vb
  name: MinHeartRate
  nameWithType: AerobicData.MinHeartRate
  fullName: Microsoft.Health.ItemTypes.AerobicData.MinHeartRate
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AerobicData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: MinHeartRate
    path: ../Microsoft.Health.ItemTypes/AerobicData.cs
    startLine: 616
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the minimum heart rate for the session.\n"
  remarks: "\nIf there is no heart rate data for the session, the value should\nbe set to <strong>null</strong>.\n"
  example: []
  syntax:
    content: public int ? MinHeartRate { get; set; }
    content.vb: Public Property MinHeartRate As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Health.ItemTypes.AerobicData.MinHeartRate*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nThe <span class=\"paramref\">value</span> parameter is less than or equal to \nzero when set.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.AerobicData.Energy
  commentId: P:Microsoft.Health.ItemTypes.AerobicData.Energy
  id: Energy
  parent: Microsoft.Health.ItemTypes.AerobicData
  langs:
  - csharp
  - vb
  name: Energy
  nameWithType: AerobicData.Energy
  fullName: Microsoft.Health.ItemTypes.AerobicData.Energy
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AerobicData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Energy
    path: ../Microsoft.Health.ItemTypes/AerobicData.cs
    startLine: 641
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the food energy consumed during the session.\n"
  remarks: "\nThe energy consumed is measured in kilojoules.\nSet the value to <strong>null</strong> if there is no energy reading.\n"
  example: []
  syntax:
    content: public double ? Energy { get; set; }
    content.vb: Public Property Energy As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  overload: Microsoft.Health.ItemTypes.AerobicData.Energy*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nThe <span class=\"paramref\">value</span> parameter is negative or zero when set.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.AerobicData.EnergyFromFat
  commentId: P:Microsoft.Health.ItemTypes.AerobicData.EnergyFromFat
  id: EnergyFromFat
  parent: Microsoft.Health.ItemTypes.AerobicData
  langs:
  - csharp
  - vb
  name: EnergyFromFat
  nameWithType: AerobicData.EnergyFromFat
  fullName: Microsoft.Health.ItemTypes.AerobicData.EnergyFromFat
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AerobicData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: EnergyFromFat
    path: ../Microsoft.Health.ItemTypes/AerobicData.cs
    startLine: 665
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the energy from fat consumed during the session.\n"
  remarks: "\nThe energy consumed is measured in kilojoules.\nSet the value to <strong>null</strong> if there is no energy from fat reading.\n"
  example: []
  syntax:
    content: public double ? EnergyFromFat { get; set; }
    content.vb: Public Property EnergyFromFat As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  overload: Microsoft.Health.ItemTypes.AerobicData.EnergyFromFat*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nThe <span class=\"paramref\">value</span> parameter is negative or zero when set.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.AerobicData.PeakSpeed
  commentId: P:Microsoft.Health.ItemTypes.AerobicData.PeakSpeed
  id: PeakSpeed
  parent: Microsoft.Health.ItemTypes.AerobicData
  langs:
  - csharp
  - vb
  name: PeakSpeed
  nameWithType: AerobicData.PeakSpeed
  fullName: Microsoft.Health.ItemTypes.AerobicData.PeakSpeed
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AerobicData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: PeakSpeed
    path: ../Microsoft.Health.ItemTypes/AerobicData.cs
    startLine: 685
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the peak speed, in meters per second, during the \nsession.\n"
  remarks: "\nSet the value to <strong>null</strong> if there is no speed reading.\n"
  example: []
  syntax:
    content: public SpeedMeasurement PeakSpeed { get; set; }
    content.vb: Public Property PeakSpeed As SpeedMeasurement
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.SpeedMeasurement
  overload: Microsoft.Health.ItemTypes.AerobicData.PeakSpeed*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.AerobicData.AverageSpeed
  commentId: P:Microsoft.Health.ItemTypes.AerobicData.AverageSpeed
  id: AverageSpeed
  parent: Microsoft.Health.ItemTypes.AerobicData
  langs:
  - csharp
  - vb
  name: AverageSpeed
  nameWithType: AerobicData.AverageSpeed
  fullName: Microsoft.Health.ItemTypes.AerobicData.AverageSpeed
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AerobicData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AverageSpeed
    path: ../Microsoft.Health.ItemTypes/AerobicData.cs
    startLine: 701
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the average speed, in meters per second, during the \nsession.\n"
  remarks: "\nSet the value to <strong>null</strong> if there is no speed reading.\n"
  example: []
  syntax:
    content: public SpeedMeasurement AverageSpeed { get; set; }
    content.vb: Public Property AverageSpeed As SpeedMeasurement
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.SpeedMeasurement
  overload: Microsoft.Health.ItemTypes.AerobicData.AverageSpeed*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.AerobicData.MinSpeed
  commentId: P:Microsoft.Health.ItemTypes.AerobicData.MinSpeed
  id: MinSpeed
  parent: Microsoft.Health.ItemTypes.AerobicData
  langs:
  - csharp
  - vb
  name: MinSpeed
  nameWithType: AerobicData.MinSpeed
  fullName: Microsoft.Health.ItemTypes.AerobicData.MinSpeed
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AerobicData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: MinSpeed
    path: ../Microsoft.Health.ItemTypes/AerobicData.cs
    startLine: 717
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the minimum speed, in meters per second, during the \nsession.\n"
  remarks: "\nSet the value to <strong>null</strong> if there is no speed reading.\n"
  example: []
  syntax:
    content: public SpeedMeasurement MinSpeed { get; set; }
    content.vb: Public Property MinSpeed As SpeedMeasurement
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.SpeedMeasurement
  overload: Microsoft.Health.ItemTypes.AerobicData.MinSpeed*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.AerobicData.PeakPace
  commentId: P:Microsoft.Health.ItemTypes.AerobicData.PeakPace
  id: PeakPace
  parent: Microsoft.Health.ItemTypes.AerobicData
  langs:
  - csharp
  - vb
  name: PeakPace
  nameWithType: AerobicData.PeakPace
  fullName: Microsoft.Health.ItemTypes.AerobicData.PeakPace
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AerobicData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: PeakPace
    path: ../Microsoft.Health.ItemTypes/AerobicData.cs
    startLine: 732
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the peak pace, in seconds per 100 meters, during the session.\n"
  remarks: "\nSet the value to <strong>null</strong> if there is no pace reading.\n"
  example: []
  syntax:
    content: public PaceMeasurement PeakPace { get; set; }
    content.vb: Public Property PeakPace As PaceMeasurement
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.PaceMeasurement
  overload: Microsoft.Health.ItemTypes.AerobicData.PeakPace*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.AerobicData.AveragePace
  commentId: P:Microsoft.Health.ItemTypes.AerobicData.AveragePace
  id: AveragePace
  parent: Microsoft.Health.ItemTypes.AerobicData
  langs:
  - csharp
  - vb
  name: AveragePace
  nameWithType: AerobicData.AveragePace
  fullName: Microsoft.Health.ItemTypes.AerobicData.AveragePace
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AerobicData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AveragePace
    path: ../Microsoft.Health.ItemTypes/AerobicData.cs
    startLine: 747
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the average pace, in seconds per 100 meters, during the session.\n"
  remarks: "\nSet the value to <strong>null</strong> if there is no pace reading.\n"
  example: []
  syntax:
    content: public PaceMeasurement AveragePace { get; set; }
    content.vb: Public Property AveragePace As PaceMeasurement
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.PaceMeasurement
  overload: Microsoft.Health.ItemTypes.AerobicData.AveragePace*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.AerobicData.MinPace
  commentId: P:Microsoft.Health.ItemTypes.AerobicData.MinPace
  id: MinPace
  parent: Microsoft.Health.ItemTypes.AerobicData
  langs:
  - csharp
  - vb
  name: MinPace
  nameWithType: AerobicData.MinPace
  fullName: Microsoft.Health.ItemTypes.AerobicData.MinPace
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AerobicData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: MinPace
    path: ../Microsoft.Health.ItemTypes/AerobicData.cs
    startLine: 765
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the minimum pace, in seconds per 100 meters, during the session.\n"
  remarks: "\nSet the value to <strong>null</strong> if there is no pace reading.\n"
  example: []
  syntax:
    content: public PaceMeasurement MinPace { get; set; }
    content.vb: Public Property MinPace As PaceMeasurement
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.PaceMeasurement
  overload: Microsoft.Health.ItemTypes.AerobicData.MinPace*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.AerobicData.PeakPower
  commentId: P:Microsoft.Health.ItemTypes.AerobicData.PeakPower
  id: PeakPower
  parent: Microsoft.Health.ItemTypes.AerobicData
  langs:
  - csharp
  - vb
  name: PeakPower
  nameWithType: AerobicData.PeakPower
  fullName: Microsoft.Health.ItemTypes.AerobicData.PeakPower
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AerobicData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: PeakPower
    path: ../Microsoft.Health.ItemTypes/AerobicData.cs
    startLine: 783
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the peak power, in watts, during the session.\n"
  remarks: "\nSet the value to <strong>null</strong> if there is no power reading.\n"
  example: []
  syntax:
    content: public PowerMeasurement PeakPower { get; set; }
    content.vb: Public Property PeakPower As PowerMeasurement
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.PowerMeasurement
  overload: Microsoft.Health.ItemTypes.AerobicData.PeakPower*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.AerobicData.AveragePower
  commentId: P:Microsoft.Health.ItemTypes.AerobicData.AveragePower
  id: AveragePower
  parent: Microsoft.Health.ItemTypes.AerobicData
  langs:
  - csharp
  - vb
  name: AveragePower
  nameWithType: AerobicData.AveragePower
  fullName: Microsoft.Health.ItemTypes.AerobicData.AveragePower
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AerobicData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AveragePower
    path: ../Microsoft.Health.ItemTypes/AerobicData.cs
    startLine: 801
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the average power, in watts, during the session.\n"
  remarks: "\nSet the value to <strong>null</strong> if there is no power reading.\n"
  example: []
  syntax:
    content: public PowerMeasurement AveragePower { get; set; }
    content.vb: Public Property AveragePower As PowerMeasurement
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.PowerMeasurement
  overload: Microsoft.Health.ItemTypes.AerobicData.AveragePower*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.AerobicData.MinPower
  commentId: P:Microsoft.Health.ItemTypes.AerobicData.MinPower
  id: MinPower
  parent: Microsoft.Health.ItemTypes.AerobicData
  langs:
  - csharp
  - vb
  name: MinPower
  nameWithType: AerobicData.MinPower
  fullName: Microsoft.Health.ItemTypes.AerobicData.MinPower
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AerobicData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: MinPower
    path: ../Microsoft.Health.ItemTypes/AerobicData.cs
    startLine: 819
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the minimum power, in watts, during the session.\n"
  remarks: "\nSet the value to <strong>null</strong> if there is no power reading.\n"
  example: []
  syntax:
    content: public PowerMeasurement MinPower { get; set; }
    content.vb: Public Property MinPower As PowerMeasurement
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.PowerMeasurement
  overload: Microsoft.Health.ItemTypes.AerobicData.MinPower*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.AerobicData.PeakTorque
  commentId: P:Microsoft.Health.ItemTypes.AerobicData.PeakTorque
  id: PeakTorque
  parent: Microsoft.Health.ItemTypes.AerobicData
  langs:
  - csharp
  - vb
  name: PeakTorque
  nameWithType: AerobicData.PeakTorque
  fullName: Microsoft.Health.ItemTypes.AerobicData.PeakTorque
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AerobicData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: PeakTorque
    path: ../Microsoft.Health.ItemTypes/AerobicData.cs
    startLine: 837
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the peak torque, in newton meters, during the session.\n"
  remarks: "\nSet the value to <strong>null</strong> if there is no torque reading.\n"
  example: []
  syntax:
    content: public TorqueMeasurement PeakTorque { get; set; }
    content.vb: Public Property PeakTorque As TorqueMeasurement
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.TorqueMeasurement
  overload: Microsoft.Health.ItemTypes.AerobicData.PeakTorque*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.AerobicData.AverageTorque
  commentId: P:Microsoft.Health.ItemTypes.AerobicData.AverageTorque
  id: AverageTorque
  parent: Microsoft.Health.ItemTypes.AerobicData
  langs:
  - csharp
  - vb
  name: AverageTorque
  nameWithType: AerobicData.AverageTorque
  fullName: Microsoft.Health.ItemTypes.AerobicData.AverageTorque
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AerobicData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AverageTorque
    path: ../Microsoft.Health.ItemTypes/AerobicData.cs
    startLine: 855
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the average torque, in newton meters, during the session.\n"
  remarks: "\nSet the value to <strong>null</strong> if there is no torque reading.\n"
  example: []
  syntax:
    content: public TorqueMeasurement AverageTorque { get; set; }
    content.vb: Public Property AverageTorque As TorqueMeasurement
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.TorqueMeasurement
  overload: Microsoft.Health.ItemTypes.AerobicData.AverageTorque*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.AerobicData.MinTorque
  commentId: P:Microsoft.Health.ItemTypes.AerobicData.MinTorque
  id: MinTorque
  parent: Microsoft.Health.ItemTypes.AerobicData
  langs:
  - csharp
  - vb
  name: MinTorque
  nameWithType: AerobicData.MinTorque
  fullName: Microsoft.Health.ItemTypes.AerobicData.MinTorque
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AerobicData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: MinTorque
    path: ../Microsoft.Health.ItemTypes/AerobicData.cs
    startLine: 873
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the minimum torque, in newton meters, during the session.\n"
  remarks: "\nSet the value to <strong>null</strong> if there is no torque reading.\n"
  example: []
  syntax:
    content: public TorqueMeasurement MinTorque { get; set; }
    content.vb: Public Property MinTorque As TorqueMeasurement
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.TorqueMeasurement
  overload: Microsoft.Health.ItemTypes.AerobicData.MinTorque*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.AerobicData.LeftRightBalance
  commentId: P:Microsoft.Health.ItemTypes.AerobicData.LeftRightBalance
  id: LeftRightBalance
  parent: Microsoft.Health.ItemTypes.AerobicData
  langs:
  - csharp
  - vb
  name: LeftRightBalance
  nameWithType: AerobicData.LeftRightBalance
  fullName: Microsoft.Health.ItemTypes.AerobicData.LeftRightBalance
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AerobicData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: LeftRightBalance
    path: ../Microsoft.Health.ItemTypes/AerobicData.cs
    startLine: 899
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the balance between left and right strokes.\n"
  remarks: "\nThe value is a percentage where the indicated value is the \npercentage of the left stroke. The remaining percentage is\nthe right stroke.\nSet the value to <strong>null</strong> if there is no balance reading.\n"
  example: []
  syntax:
    content: public double ? LeftRightBalance { get; set; }
    content.vb: Public Property LeftRightBalance As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  overload: Microsoft.Health.ItemTypes.AerobicData.LeftRightBalance*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nThe <span class=\"paramref\">value</span> parameter is negative or greater than one when set.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.AerobicData.PeakCadence
  commentId: P:Microsoft.Health.ItemTypes.AerobicData.PeakCadence
  id: PeakCadence
  parent: Microsoft.Health.ItemTypes.AerobicData
  langs:
  - csharp
  - vb
  name: PeakCadence
  nameWithType: AerobicData.PeakCadence
  fullName: Microsoft.Health.ItemTypes.AerobicData.PeakCadence
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AerobicData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: PeakCadence
    path: ../Microsoft.Health.ItemTypes/AerobicData.cs
    startLine: 926
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the peak cadence, in revolutions per minute (rpm), \nduring the session.\n"
  remarks: "\nSet the value to <strong>null</strong> if there is no cadence reading.\n"
  example: []
  syntax:
    content: public double ? PeakCadence { get; set; }
    content.vb: Public Property PeakCadence As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  overload: Microsoft.Health.ItemTypes.AerobicData.PeakCadence*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nThe <span class=\"paramref\">value</span> parameter is negative or zero when set.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.AerobicData.AverageCadence
  commentId: P:Microsoft.Health.ItemTypes.AerobicData.AverageCadence
  id: AverageCadence
  parent: Microsoft.Health.ItemTypes.AerobicData
  langs:
  - csharp
  - vb
  name: AverageCadence
  nameWithType: AerobicData.AverageCadence
  fullName: Microsoft.Health.ItemTypes.AerobicData.AverageCadence
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AerobicData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AverageCadence
    path: ../Microsoft.Health.ItemTypes/AerobicData.cs
    startLine: 950
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the average cadence, in revolutions per minute (rpm), \nduring the session.\n"
  remarks: "\nSet the value to <strong>null</strong> if there is no cadence reading.\n"
  example: []
  syntax:
    content: public double ? AverageCadence { get; set; }
    content.vb: Public Property AverageCadence As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  overload: Microsoft.Health.ItemTypes.AerobicData.AverageCadence*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nThe <span class=\"paramref\">value</span> parameter is negative or zero when set.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.AerobicData.MinCadence
  commentId: P:Microsoft.Health.ItemTypes.AerobicData.MinCadence
  id: MinCadence
  parent: Microsoft.Health.ItemTypes.AerobicData
  langs:
  - csharp
  - vb
  name: MinCadence
  nameWithType: AerobicData.MinCadence
  fullName: Microsoft.Health.ItemTypes.AerobicData.MinCadence
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AerobicData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: MinCadence
    path: ../Microsoft.Health.ItemTypes/AerobicData.cs
    startLine: 974
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the minimum cadence, in revolutions per minute (rpm), \nduring the session.\n"
  remarks: "\nSet the value to <strong>null</strong> if there is no cadence reading.\n"
  example: []
  syntax:
    content: public double ? MinCadence { get; set; }
    content.vb: Public Property MinCadence As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  overload: Microsoft.Health.ItemTypes.AerobicData.MinCadence*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nThe <span class=\"paramref\">value</span> parameter is negative or zero when set.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.AerobicData.PeakTemperature
  commentId: P:Microsoft.Health.ItemTypes.AerobicData.PeakTemperature
  id: PeakTemperature
  parent: Microsoft.Health.ItemTypes.AerobicData
  langs:
  - csharp
  - vb
  name: PeakTemperature
  nameWithType: AerobicData.PeakTemperature
  fullName: Microsoft.Health.ItemTypes.AerobicData.PeakTemperature
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AerobicData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: PeakTemperature
    path: ../Microsoft.Health.ItemTypes/AerobicData.cs
    startLine: 995
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the peak temperature, in degrees Celsius (C), during \nthe session.\n"
  remarks: "\nSet the value to <strong>null</strong> if there is no temperature reading.\n"
  example: []
  syntax:
    content: public TemperatureMeasurement PeakTemperature { get; set; }
    content.vb: Public Property PeakTemperature As TemperatureMeasurement
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.TemperatureMeasurement
  overload: Microsoft.Health.ItemTypes.AerobicData.PeakTemperature*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.AerobicData.AverageTemperature
  commentId: P:Microsoft.Health.ItemTypes.AerobicData.AverageTemperature
  id: AverageTemperature
  parent: Microsoft.Health.ItemTypes.AerobicData
  langs:
  - csharp
  - vb
  name: AverageTemperature
  nameWithType: AerobicData.AverageTemperature
  fullName: Microsoft.Health.ItemTypes.AerobicData.AverageTemperature
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AerobicData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AverageTemperature
    path: ../Microsoft.Health.ItemTypes/AerobicData.cs
    startLine: 1014
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the average temperature, in degrees Celsius (C), \nduring the session.\n"
  remarks: "\nSet the value to <strong>null</strong> if there is no temperature reading.\n"
  example: []
  syntax:
    content: public TemperatureMeasurement AverageTemperature { get; set; }
    content.vb: Public Property AverageTemperature As TemperatureMeasurement
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.TemperatureMeasurement
  overload: Microsoft.Health.ItemTypes.AerobicData.AverageTemperature*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.AerobicData.MinTemperature
  commentId: P:Microsoft.Health.ItemTypes.AerobicData.MinTemperature
  id: MinTemperature
  parent: Microsoft.Health.ItemTypes.AerobicData
  langs:
  - csharp
  - vb
  name: MinTemperature
  nameWithType: AerobicData.MinTemperature
  fullName: Microsoft.Health.ItemTypes.AerobicData.MinTemperature
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AerobicData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: MinTemperature
    path: ../Microsoft.Health.ItemTypes/AerobicData.cs
    startLine: 1033
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the minimum temperature, in degrees Celsius (C), \nduring the session.\n"
  remarks: "\nSet the value to <strong>null</strong> if there is no temperature reading.\n"
  example: []
  syntax:
    content: public TemperatureMeasurement MinTemperature { get; set; }
    content.vb: Public Property MinTemperature As TemperatureMeasurement
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.TemperatureMeasurement
  overload: Microsoft.Health.ItemTypes.AerobicData.MinTemperature*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.AerobicData.PeakAltitude
  commentId: P:Microsoft.Health.ItemTypes.AerobicData.PeakAltitude
  id: PeakAltitude
  parent: Microsoft.Health.ItemTypes.AerobicData
  langs:
  - csharp
  - vb
  name: PeakAltitude
  nameWithType: AerobicData.PeakAltitude
  fullName: Microsoft.Health.ItemTypes.AerobicData.PeakAltitude
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AerobicData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: PeakAltitude
    path: ../Microsoft.Health.ItemTypes/AerobicData.cs
    startLine: 1050
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the peak altitude, in meters above sea level, during \nthe session.\n"
  remarks: "\nNegative values indicate the meters below sea level.\nSet the value to <strong>null</strong> if there is no altitude reading.\n"
  example: []
  syntax:
    content: public AltitudeMeasurement PeakAltitude { get; set; }
    content.vb: Public Property PeakAltitude As AltitudeMeasurement
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.AltitudeMeasurement
  overload: Microsoft.Health.ItemTypes.AerobicData.PeakAltitude*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.AerobicData.AverageAltitude
  commentId: P:Microsoft.Health.ItemTypes.AerobicData.AverageAltitude
  id: AverageAltitude
  parent: Microsoft.Health.ItemTypes.AerobicData
  langs:
  - csharp
  - vb
  name: AverageAltitude
  nameWithType: AerobicData.AverageAltitude
  fullName: Microsoft.Health.ItemTypes.AerobicData.AverageAltitude
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AerobicData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AverageAltitude
    path: ../Microsoft.Health.ItemTypes/AerobicData.cs
    startLine: 1067
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the average altitude, in meters above sea level, \nduring the session.\n"
  remarks: "\nNegative values indicate the meters below sea level.\nSet the value to <strong>null</strong> if there is no altitude reading.\n"
  example: []
  syntax:
    content: public AltitudeMeasurement AverageAltitude { get; set; }
    content.vb: Public Property AverageAltitude As AltitudeMeasurement
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.AltitudeMeasurement
  overload: Microsoft.Health.ItemTypes.AerobicData.AverageAltitude*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.AerobicData.MinAltitude
  commentId: P:Microsoft.Health.ItemTypes.AerobicData.MinAltitude
  id: MinAltitude
  parent: Microsoft.Health.ItemTypes.AerobicData
  langs:
  - csharp
  - vb
  name: MinAltitude
  nameWithType: AerobicData.MinAltitude
  fullName: Microsoft.Health.ItemTypes.AerobicData.MinAltitude
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AerobicData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: MinAltitude
    path: ../Microsoft.Health.ItemTypes/AerobicData.cs
    startLine: 1084
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the minimum altitude, in meters above sea level, \nduring the session.\n"
  remarks: "\nNegative values indicate the meters below sea level.\nSet the value to <strong>null</strong> if there is no altitude reading.\n"
  example: []
  syntax:
    content: public AltitudeMeasurement MinAltitude { get; set; }
    content.vb: Public Property MinAltitude As AltitudeMeasurement
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.AltitudeMeasurement
  overload: Microsoft.Health.ItemTypes.AerobicData.MinAltitude*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.AerobicData.ElevationGain
  commentId: P:Microsoft.Health.ItemTypes.AerobicData.ElevationGain
  id: ElevationGain
  parent: Microsoft.Health.ItemTypes.AerobicData
  langs:
  - csharp
  - vb
  name: ElevationGain
  nameWithType: AerobicData.ElevationGain
  fullName: Microsoft.Health.ItemTypes.AerobicData.ElevationGain
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AerobicData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ElevationGain
    path: ../Microsoft.Health.ItemTypes/AerobicData.cs
    startLine: 1099
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the elevation gained, in meters, during the session.\n"
  remarks: "\nSet the value to <strong>null</strong> if there is no elevation gain reading.\n"
  example: []
  syntax:
    content: public Length ElevationGain { get; set; }
    content.vb: Public Property ElevationGain As Length
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.Length
  overload: Microsoft.Health.ItemTypes.AerobicData.ElevationGain*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.AerobicData.ElevationLoss
  commentId: P:Microsoft.Health.ItemTypes.AerobicData.ElevationLoss
  id: ElevationLoss
  parent: Microsoft.Health.ItemTypes.AerobicData
  langs:
  - csharp
  - vb
  name: ElevationLoss
  nameWithType: AerobicData.ElevationLoss
  fullName: Microsoft.Health.ItemTypes.AerobicData.ElevationLoss
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AerobicData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ElevationLoss
    path: ../Microsoft.Health.ItemTypes/AerobicData.cs
    startLine: 1114
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the elevation lossed, in meters, during the session.\n"
  remarks: "\nSet the value to <strong>null</strong> if there is no elevation loss reading.\n"
  example: []
  syntax:
    content: public Length ElevationLoss { get; set; }
    content.vb: Public Property ElevationLoss As Length
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.Length
  overload: Microsoft.Health.ItemTypes.AerobicData.ElevationLoss*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.AerobicData.NumberOfSteps
  commentId: P:Microsoft.Health.ItemTypes.AerobicData.NumberOfSteps
  id: NumberOfSteps
  parent: Microsoft.Health.ItemTypes.AerobicData
  langs:
  - csharp
  - vb
  name: NumberOfSteps
  nameWithType: AerobicData.NumberOfSteps
  fullName: Microsoft.Health.ItemTypes.AerobicData.NumberOfSteps
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AerobicData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: NumberOfSteps
    path: ../Microsoft.Health.ItemTypes/AerobicData.cs
    startLine: 1129
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the number of steps taken during the session.\n"
  remarks: "\nSet the value to <strong>null</strong> if there is no step readings.\n"
  example: []
  syntax:
    content: public int ? NumberOfSteps { get; set; }
    content.vb: Public Property NumberOfSteps As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Health.ItemTypes.AerobicData.NumberOfSteps*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.AerobicData.NumberOfAerobicSteps
  commentId: P:Microsoft.Health.ItemTypes.AerobicData.NumberOfAerobicSteps
  id: NumberOfAerobicSteps
  parent: Microsoft.Health.ItemTypes.AerobicData
  langs:
  - csharp
  - vb
  name: NumberOfAerobicSteps
  nameWithType: AerobicData.NumberOfAerobicSteps
  fullName: Microsoft.Health.ItemTypes.AerobicData.NumberOfAerobicSteps
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AerobicData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: NumberOfAerobicSteps
    path: ../Microsoft.Health.ItemTypes/AerobicData.cs
    startLine: 1144
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the number of aerobic steps taken during the session.\n"
  remarks: "\nSet the value to <strong>null</strong> if there is no aerobic step readings.\n"
  example: []
  syntax:
    content: public int ? NumberOfAerobicSteps { get; set; }
    content.vb: Public Property NumberOfAerobicSteps As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Health.ItemTypes.AerobicData.NumberOfAerobicSteps*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.AerobicData.AerobicStepMinutes
  commentId: P:Microsoft.Health.ItemTypes.AerobicData.AerobicStepMinutes
  id: AerobicStepMinutes
  parent: Microsoft.Health.ItemTypes.AerobicData
  langs:
  - csharp
  - vb
  name: AerobicStepMinutes
  nameWithType: AerobicData.AerobicStepMinutes
  fullName: Microsoft.Health.ItemTypes.AerobicData.AerobicStepMinutes
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AerobicData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AerobicStepMinutes
    path: ../Microsoft.Health.ItemTypes/AerobicData.cs
    startLine: 1160
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the number of aerobic minutes during the session.\n"
  remarks: "\nSet the value to <strong>null</strong> if there are no readings indicating the number of \naerobic minutes.\n"
  example: []
  syntax:
    content: public double ? AerobicStepMinutes { get; set; }
    content.vb: Public Property AerobicStepMinutes As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  overload: Microsoft.Health.ItemTypes.AerobicData.AerobicStepMinutes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.AerobicData.ToString
  commentId: M:Microsoft.Health.ItemTypes.AerobicData.ToString
  id: ToString
  parent: Microsoft.Health.ItemTypes.AerobicData
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: AerobicData.ToString()
  fullName: Microsoft.Health.ItemTypes.AerobicData.ToString()
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/AerobicData.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ToString
    path: ../Microsoft.Health.ItemTypes/AerobicData.cs
    startLine: 1176
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets a summary of the aerobic data.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\nA string summary of the aerobic data.\n"
  overridden: System.Object.ToString
  overload: Microsoft.Health.ItemTypes.AerobicData.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Health.ItemTypes
  commentId: N:Microsoft.Health.ItemTypes
  isExternal: false
  name: Microsoft.Health.ItemTypes
  nameWithType: Microsoft.Health.ItemTypes
  fullName: Microsoft.Health.ItemTypes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData
  commentId: T:Microsoft.Health.ItemTypes.HealthRecordItemData
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: HealthRecordItemData
  nameWithType: HealthRecordItemData
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.AerobicData.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<AerobicData>()
  nameWithType: TypeHelper.ValueOrDbNull<AerobicData>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.ItemTypes.AerobicData>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of AerobicData)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.ItemTypes.AerobicData)()
  name.vb: ValueOrDbNull(Of AerobicData)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<AerobicData>
    nameWithType: TypeHelper.ValueOrDbNull<AerobicData>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.ItemTypes.AerobicData>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of AerobicData)
    nameWithType: TypeHelper.ValueOrDbNull(Of AerobicData)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.ItemTypes.AerobicData)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.ItemTypes.AerobicData
  commentId: T:Microsoft.Health.ItemTypes.AerobicData
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: AerobicData
  nameWithType: AerobicData
  fullName: Microsoft.Health.ItemTypes.AerobicData
- uid: Microsoft.Health.ItemTypes.AerobicData.#ctor*
  commentId: Overload:Microsoft.Health.ItemTypes.AerobicData.#ctor
  isExternal: false
  name: AerobicData
  nameWithType: AerobicData.AerobicData
  fullName: Microsoft.Health.ItemTypes.AerobicData.AerobicData
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.ItemTypes.HealthRecordItemData
  isExternal: true
  name: ParseXml(XPathNavigator)
  nameWithType: HealthRecordItemData.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: HealthRecordItemData.ParseXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml(System.Xml.XPath.XPathNavigator)
    name: ParseXml
    nameWithType: HealthRecordItemData.ParseXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.AerobicData.ParseXml*
  commentId: Overload:Microsoft.Health.ItemTypes.AerobicData.ParseXml
  isExternal: false
  name: ParseXml
  nameWithType: AerobicData.ParseXml
  fullName: Microsoft.Health.ItemTypes.AerobicData.ParseXml
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.Xml.XPath.XPathNavigator
  commentId: T:System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: true
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: false
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.HealthRecordItemData
  isExternal: true
  name: WriteXml(String, XmlWriter)
  nameWithType: HealthRecordItemData.WriteXml(String, XmlWriter)
  fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String, System.Xml.XmlWriter)
  spec.csharp:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItemData.WriteXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml(System.String,System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItemData.WriteXml
    fullName: Microsoft.Health.ItemTypes.HealthRecordItemData.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.AerobicData.WriteXml*
  commentId: Overload:Microsoft.Health.ItemTypes.AerobicData.WriteXml
  isExternal: false
  name: WriteXml
  nameWithType: AerobicData.WriteXml
  fullName: Microsoft.Health.ItemTypes.AerobicData.WriteXml
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: Microsoft.Health.ItemTypes.AerobicData.Mode*
  commentId: Overload:Microsoft.Health.ItemTypes.AerobicData.Mode
  isExternal: false
  name: Mode
  nameWithType: AerobicData.Mode
  fullName: Microsoft.Health.ItemTypes.AerobicData.Mode
- uid: Microsoft.Health.ItemTypes.CodableValue
  commentId: T:Microsoft.Health.ItemTypes.CodableValue
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: CodableValue
  nameWithType: CodableValue
  fullName: Microsoft.Health.ItemTypes.CodableValue
- uid: Microsoft.Health.ItemTypes.Length
  commentId: T:Microsoft.Health.ItemTypes.Length
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: Length
  nameWithType: Length
  fullName: Microsoft.Health.ItemTypes.Length
- uid: Microsoft.Health.ItemTypes.AerobicData.Distance*
  commentId: Overload:Microsoft.Health.ItemTypes.AerobicData.Distance
  isExternal: false
  name: Distance
  nameWithType: AerobicData.Distance
  fullName: Microsoft.Health.ItemTypes.AerobicData.Distance
- uid: Microsoft.Health.ItemTypes.AerobicData.Duration*
  commentId: Overload:Microsoft.Health.ItemTypes.AerobicData.Duration
  isExternal: false
  name: Duration
  nameWithType: AerobicData.Duration
  fullName: Microsoft.Health.ItemTypes.AerobicData.Duration
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
- uid: System.Nullable{System.Double}
  commentId: T:System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  nameWithType.vb: Nullable(Of Double)
  fullName.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Microsoft.Health.ItemTypes.AerobicData.DurationAsTimeSpan*
  commentId: Overload:Microsoft.Health.ItemTypes.AerobicData.DurationAsTimeSpan
  isExternal: false
  name: DurationAsTimeSpan
  nameWithType: AerobicData.DurationAsTimeSpan
  fullName: Microsoft.Health.ItemTypes.AerobicData.DurationAsTimeSpan
- uid: Microsoft.Health.ItemTypes.RelativeRating.None
  commentId: F:Microsoft.Health.ItemTypes.RelativeRating.None
- uid: Microsoft.Health.ItemTypes.AerobicData.Intensity*
  commentId: Overload:Microsoft.Health.ItemTypes.AerobicData.Intensity
  isExternal: false
  name: Intensity
  nameWithType: AerobicData.Intensity
  fullName: Microsoft.Health.ItemTypes.AerobicData.Intensity
- uid: Microsoft.Health.ItemTypes.RelativeRating
  commentId: T:Microsoft.Health.ItemTypes.RelativeRating
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: RelativeRating
  nameWithType: RelativeRating
  fullName: Microsoft.Health.ItemTypes.RelativeRating
- uid: Microsoft.Health.ItemTypes.AerobicData.PeakHeartRate*
  commentId: Overload:Microsoft.Health.ItemTypes.AerobicData.PeakHeartRate
  isExternal: false
  name: PeakHeartRate
  nameWithType: AerobicData.PeakHeartRate
  fullName: Microsoft.Health.ItemTypes.AerobicData.PeakHeartRate
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.AerobicData.AverageHeartRate*
  commentId: Overload:Microsoft.Health.ItemTypes.AerobicData.AverageHeartRate
  isExternal: false
  name: AverageHeartRate
  nameWithType: AerobicData.AverageHeartRate
  fullName: Microsoft.Health.ItemTypes.AerobicData.AverageHeartRate
- uid: Microsoft.Health.ItemTypes.AerobicData.MinHeartRate*
  commentId: Overload:Microsoft.Health.ItemTypes.AerobicData.MinHeartRate
  isExternal: false
  name: MinHeartRate
  nameWithType: AerobicData.MinHeartRate
  fullName: Microsoft.Health.ItemTypes.AerobicData.MinHeartRate
- uid: Microsoft.Health.ItemTypes.AerobicData.Energy*
  commentId: Overload:Microsoft.Health.ItemTypes.AerobicData.Energy
  isExternal: false
  name: Energy
  nameWithType: AerobicData.Energy
  fullName: Microsoft.Health.ItemTypes.AerobicData.Energy
- uid: Microsoft.Health.ItemTypes.AerobicData.EnergyFromFat*
  commentId: Overload:Microsoft.Health.ItemTypes.AerobicData.EnergyFromFat
  isExternal: false
  name: EnergyFromFat
  nameWithType: AerobicData.EnergyFromFat
  fullName: Microsoft.Health.ItemTypes.AerobicData.EnergyFromFat
- uid: Microsoft.Health.ItemTypes.AerobicData.PeakSpeed*
  commentId: Overload:Microsoft.Health.ItemTypes.AerobicData.PeakSpeed
  isExternal: false
  name: PeakSpeed
  nameWithType: AerobicData.PeakSpeed
  fullName: Microsoft.Health.ItemTypes.AerobicData.PeakSpeed
- uid: Microsoft.Health.ItemTypes.SpeedMeasurement
  commentId: T:Microsoft.Health.ItemTypes.SpeedMeasurement
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: SpeedMeasurement
  nameWithType: SpeedMeasurement
  fullName: Microsoft.Health.ItemTypes.SpeedMeasurement
- uid: Microsoft.Health.ItemTypes.AerobicData.AverageSpeed*
  commentId: Overload:Microsoft.Health.ItemTypes.AerobicData.AverageSpeed
  isExternal: false
  name: AverageSpeed
  nameWithType: AerobicData.AverageSpeed
  fullName: Microsoft.Health.ItemTypes.AerobicData.AverageSpeed
- uid: Microsoft.Health.ItemTypes.AerobicData.MinSpeed*
  commentId: Overload:Microsoft.Health.ItemTypes.AerobicData.MinSpeed
  isExternal: false
  name: MinSpeed
  nameWithType: AerobicData.MinSpeed
  fullName: Microsoft.Health.ItemTypes.AerobicData.MinSpeed
- uid: Microsoft.Health.ItemTypes.AerobicData.PeakPace*
  commentId: Overload:Microsoft.Health.ItemTypes.AerobicData.PeakPace
  isExternal: false
  name: PeakPace
  nameWithType: AerobicData.PeakPace
  fullName: Microsoft.Health.ItemTypes.AerobicData.PeakPace
- uid: Microsoft.Health.ItemTypes.PaceMeasurement
  commentId: T:Microsoft.Health.ItemTypes.PaceMeasurement
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: PaceMeasurement
  nameWithType: PaceMeasurement
  fullName: Microsoft.Health.ItemTypes.PaceMeasurement
- uid: Microsoft.Health.ItemTypes.AerobicData.AveragePace*
  commentId: Overload:Microsoft.Health.ItemTypes.AerobicData.AveragePace
  isExternal: false
  name: AveragePace
  nameWithType: AerobicData.AveragePace
  fullName: Microsoft.Health.ItemTypes.AerobicData.AveragePace
- uid: Microsoft.Health.ItemTypes.AerobicData.MinPace*
  commentId: Overload:Microsoft.Health.ItemTypes.AerobicData.MinPace
  isExternal: false
  name: MinPace
  nameWithType: AerobicData.MinPace
  fullName: Microsoft.Health.ItemTypes.AerobicData.MinPace
- uid: Microsoft.Health.ItemTypes.AerobicData.PeakPower*
  commentId: Overload:Microsoft.Health.ItemTypes.AerobicData.PeakPower
  isExternal: false
  name: PeakPower
  nameWithType: AerobicData.PeakPower
  fullName: Microsoft.Health.ItemTypes.AerobicData.PeakPower
- uid: Microsoft.Health.ItemTypes.PowerMeasurement
  commentId: T:Microsoft.Health.ItemTypes.PowerMeasurement
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: PowerMeasurement
  nameWithType: PowerMeasurement
  fullName: Microsoft.Health.ItemTypes.PowerMeasurement
- uid: Microsoft.Health.ItemTypes.AerobicData.AveragePower*
  commentId: Overload:Microsoft.Health.ItemTypes.AerobicData.AveragePower
  isExternal: false
  name: AveragePower
  nameWithType: AerobicData.AveragePower
  fullName: Microsoft.Health.ItemTypes.AerobicData.AveragePower
- uid: Microsoft.Health.ItemTypes.AerobicData.MinPower*
  commentId: Overload:Microsoft.Health.ItemTypes.AerobicData.MinPower
  isExternal: false
  name: MinPower
  nameWithType: AerobicData.MinPower
  fullName: Microsoft.Health.ItemTypes.AerobicData.MinPower
- uid: Microsoft.Health.ItemTypes.AerobicData.PeakTorque*
  commentId: Overload:Microsoft.Health.ItemTypes.AerobicData.PeakTorque
  isExternal: false
  name: PeakTorque
  nameWithType: AerobicData.PeakTorque
  fullName: Microsoft.Health.ItemTypes.AerobicData.PeakTorque
- uid: Microsoft.Health.ItemTypes.TorqueMeasurement
  commentId: T:Microsoft.Health.ItemTypes.TorqueMeasurement
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: TorqueMeasurement
  nameWithType: TorqueMeasurement
  fullName: Microsoft.Health.ItemTypes.TorqueMeasurement
- uid: Microsoft.Health.ItemTypes.AerobicData.AverageTorque*
  commentId: Overload:Microsoft.Health.ItemTypes.AerobicData.AverageTorque
  isExternal: false
  name: AverageTorque
  nameWithType: AerobicData.AverageTorque
  fullName: Microsoft.Health.ItemTypes.AerobicData.AverageTorque
- uid: Microsoft.Health.ItemTypes.AerobicData.MinTorque*
  commentId: Overload:Microsoft.Health.ItemTypes.AerobicData.MinTorque
  isExternal: false
  name: MinTorque
  nameWithType: AerobicData.MinTorque
  fullName: Microsoft.Health.ItemTypes.AerobicData.MinTorque
- uid: Microsoft.Health.ItemTypes.AerobicData.LeftRightBalance*
  commentId: Overload:Microsoft.Health.ItemTypes.AerobicData.LeftRightBalance
  isExternal: false
  name: LeftRightBalance
  nameWithType: AerobicData.LeftRightBalance
  fullName: Microsoft.Health.ItemTypes.AerobicData.LeftRightBalance
- uid: Microsoft.Health.ItemTypes.AerobicData.PeakCadence*
  commentId: Overload:Microsoft.Health.ItemTypes.AerobicData.PeakCadence
  isExternal: false
  name: PeakCadence
  nameWithType: AerobicData.PeakCadence
  fullName: Microsoft.Health.ItemTypes.AerobicData.PeakCadence
- uid: Microsoft.Health.ItemTypes.AerobicData.AverageCadence*
  commentId: Overload:Microsoft.Health.ItemTypes.AerobicData.AverageCadence
  isExternal: false
  name: AverageCadence
  nameWithType: AerobicData.AverageCadence
  fullName: Microsoft.Health.ItemTypes.AerobicData.AverageCadence
- uid: Microsoft.Health.ItemTypes.AerobicData.MinCadence*
  commentId: Overload:Microsoft.Health.ItemTypes.AerobicData.MinCadence
  isExternal: false
  name: MinCadence
  nameWithType: AerobicData.MinCadence
  fullName: Microsoft.Health.ItemTypes.AerobicData.MinCadence
- uid: Microsoft.Health.ItemTypes.AerobicData.PeakTemperature*
  commentId: Overload:Microsoft.Health.ItemTypes.AerobicData.PeakTemperature
  isExternal: false
  name: PeakTemperature
  nameWithType: AerobicData.PeakTemperature
  fullName: Microsoft.Health.ItemTypes.AerobicData.PeakTemperature
- uid: Microsoft.Health.ItemTypes.TemperatureMeasurement
  commentId: T:Microsoft.Health.ItemTypes.TemperatureMeasurement
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: TemperatureMeasurement
  nameWithType: TemperatureMeasurement
  fullName: Microsoft.Health.ItemTypes.TemperatureMeasurement
- uid: Microsoft.Health.ItemTypes.AerobicData.AverageTemperature*
  commentId: Overload:Microsoft.Health.ItemTypes.AerobicData.AverageTemperature
  isExternal: false
  name: AverageTemperature
  nameWithType: AerobicData.AverageTemperature
  fullName: Microsoft.Health.ItemTypes.AerobicData.AverageTemperature
- uid: Microsoft.Health.ItemTypes.AerobicData.MinTemperature*
  commentId: Overload:Microsoft.Health.ItemTypes.AerobicData.MinTemperature
  isExternal: false
  name: MinTemperature
  nameWithType: AerobicData.MinTemperature
  fullName: Microsoft.Health.ItemTypes.AerobicData.MinTemperature
- uid: Microsoft.Health.ItemTypes.AerobicData.PeakAltitude*
  commentId: Overload:Microsoft.Health.ItemTypes.AerobicData.PeakAltitude
  isExternal: false
  name: PeakAltitude
  nameWithType: AerobicData.PeakAltitude
  fullName: Microsoft.Health.ItemTypes.AerobicData.PeakAltitude
- uid: Microsoft.Health.ItemTypes.AltitudeMeasurement
  commentId: T:Microsoft.Health.ItemTypes.AltitudeMeasurement
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: AltitudeMeasurement
  nameWithType: AltitudeMeasurement
  fullName: Microsoft.Health.ItemTypes.AltitudeMeasurement
- uid: Microsoft.Health.ItemTypes.AerobicData.AverageAltitude*
  commentId: Overload:Microsoft.Health.ItemTypes.AerobicData.AverageAltitude
  isExternal: false
  name: AverageAltitude
  nameWithType: AerobicData.AverageAltitude
  fullName: Microsoft.Health.ItemTypes.AerobicData.AverageAltitude
- uid: Microsoft.Health.ItemTypes.AerobicData.MinAltitude*
  commentId: Overload:Microsoft.Health.ItemTypes.AerobicData.MinAltitude
  isExternal: false
  name: MinAltitude
  nameWithType: AerobicData.MinAltitude
  fullName: Microsoft.Health.ItemTypes.AerobicData.MinAltitude
- uid: Microsoft.Health.ItemTypes.AerobicData.ElevationGain*
  commentId: Overload:Microsoft.Health.ItemTypes.AerobicData.ElevationGain
  isExternal: false
  name: ElevationGain
  nameWithType: AerobicData.ElevationGain
  fullName: Microsoft.Health.ItemTypes.AerobicData.ElevationGain
- uid: Microsoft.Health.ItemTypes.AerobicData.ElevationLoss*
  commentId: Overload:Microsoft.Health.ItemTypes.AerobicData.ElevationLoss
  isExternal: false
  name: ElevationLoss
  nameWithType: AerobicData.ElevationLoss
  fullName: Microsoft.Health.ItemTypes.AerobicData.ElevationLoss
- uid: Microsoft.Health.ItemTypes.AerobicData.NumberOfSteps*
  commentId: Overload:Microsoft.Health.ItemTypes.AerobicData.NumberOfSteps
  isExternal: false
  name: NumberOfSteps
  nameWithType: AerobicData.NumberOfSteps
  fullName: Microsoft.Health.ItemTypes.AerobicData.NumberOfSteps
- uid: Microsoft.Health.ItemTypes.AerobicData.NumberOfAerobicSteps*
  commentId: Overload:Microsoft.Health.ItemTypes.AerobicData.NumberOfAerobicSteps
  isExternal: false
  name: NumberOfAerobicSteps
  nameWithType: AerobicData.NumberOfAerobicSteps
  fullName: Microsoft.Health.ItemTypes.AerobicData.NumberOfAerobicSteps
- uid: Microsoft.Health.ItemTypes.AerobicData.AerobicStepMinutes*
  commentId: Overload:Microsoft.Health.ItemTypes.AerobicData.AerobicStepMinutes
  isExternal: false
  name: AerobicStepMinutes
  nameWithType: AerobicData.AerobicStepMinutes
  fullName: Microsoft.Health.ItemTypes.AerobicData.AerobicStepMinutes
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.AerobicData.ToString*
  commentId: Overload:Microsoft.Health.ItemTypes.AerobicData.ToString
  isExternal: false
  name: ToString
  nameWithType: AerobicData.ToString
  fullName: Microsoft.Health.ItemTypes.AerobicData.ToString
