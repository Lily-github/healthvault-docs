### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Utility.DataRowExtensions
  commentId: T:Microsoft.Health.Utility.DataRowExtensions
  id: DataRowExtensions
  parent: Microsoft.Health.Utility
  children:
  - Microsoft.Health.Utility.DataRowExtensions.Get``1(System.Data.DataRow,System.Int32,``0)
  - Microsoft.Health.Utility.DataRowExtensions.GetBoolean(System.Data.DataRow,System.Int32)
  - Microsoft.Health.Utility.DataRowExtensions.GetByte(System.Data.DataRow,System.Int32)
  - Microsoft.Health.Utility.DataRowExtensions.GetDateTime(System.Data.DataRow,System.Int32)
  - Microsoft.Health.Utility.DataRowExtensions.GetGuid(System.Data.DataRow,System.Int32)
  - Microsoft.Health.Utility.DataRowExtensions.GetInt32(System.Data.DataRow,System.Int32)
  - Microsoft.Health.Utility.DataRowExtensions.GetInt64(System.Data.DataRow,System.Int32)
  - Microsoft.Health.Utility.DataRowExtensions.GetString(System.Data.DataRow,System.Int32)
  - Microsoft.Health.Utility.DataRowExtensions.IsDBNull(System.Data.DataRow,System.Int32)
  langs:
  - csharp
  - vb
  name: DataRowExtensions
  nameWithType: DataRowExtensions
  fullName: Microsoft.Health.Utility.DataRowExtensions
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/DataRowExtensions.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DataRowExtensions
    path: ../Microsoft.Health.Utility/utilities/DataRowExtensions.cs
    startLine: 14
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\nExtension methods for data row.\n"
  example: []
  syntax:
    content: public static class DataRowExtensions
    content.vb: Public Module DataRowExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Health.Utility.DataRowExtensions.Get``1(System.Data.DataRow,System.Int32,``0)
  commentId: M:Microsoft.Health.Utility.DataRowExtensions.Get``1(System.Data.DataRow,System.Int32,``0)
  id: Get``1(System.Data.DataRow,System.Int32,``0)
  isExtensionMethod: true
  parent: Microsoft.Health.Utility.DataRowExtensions
  langs:
  - csharp
  - vb
  name: Get<T>(DataRow, Int32, T)
  nameWithType: DataRowExtensions.Get<T>(DataRow, Int32, T)
  fullName: Microsoft.Health.Utility.DataRowExtensions.Get<T>(System.Data.DataRow, System.Int32, T)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/DataRowExtensions.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Get
    path: ../Microsoft.Health.Utility/utilities/DataRowExtensions.cs
    startLine: 24
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\nGets the row value as a specific type.\n"
  example: []
  syntax:
    content: public static T Get<T>(this DataRow dr, int index, T def)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Get(Of T)(dr As DataRow, index As Integer, def As T) As T
    parameters:
    - id: dr
      type: System.Data.DataRow
      description: The data row.
    - id: index
      type: System.Int32
      description: The index of the column, zero based.
    - id: def
      type: '{T}'
      description: The default value.
    typeParameters:
    - id: T
      description: The data type.
    return:
      type: '{T}'
      description: The value of the column.
  overload: Microsoft.Health.Utility.DataRowExtensions.Get*
  nameWithType.vb: DataRowExtensions.Get(Of T)(DataRow, Int32, T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Health.Utility.DataRowExtensions.Get(Of T)(System.Data.DataRow, System.Int32, T)
  name.vb: Get(Of T)(DataRow, Int32, T)
- uid: Microsoft.Health.Utility.DataRowExtensions.IsDBNull(System.Data.DataRow,System.Int32)
  commentId: M:Microsoft.Health.Utility.DataRowExtensions.IsDBNull(System.Data.DataRow,System.Int32)
  id: IsDBNull(System.Data.DataRow,System.Int32)
  isExtensionMethod: true
  parent: Microsoft.Health.Utility.DataRowExtensions
  langs:
  - csharp
  - vb
  name: IsDBNull(DataRow, Int32)
  nameWithType: DataRowExtensions.IsDBNull(DataRow, Int32)
  fullName: Microsoft.Health.Utility.DataRowExtensions.IsDBNull(System.Data.DataRow, System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/DataRowExtensions.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: IsDBNull
    path: ../Microsoft.Health.Utility/utilities/DataRowExtensions.cs
    startLine: 29
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  syntax:
    content: public static bool IsDBNull(this DataRow dr, int index)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsDBNull(dr As DataRow, index As Integer) As Boolean
    parameters:
    - id: dr
      type: System.Data.DataRow
    - id: index
      type: System.Int32
    return:
      type: System.Boolean
  overload: Microsoft.Health.Utility.DataRowExtensions.IsDBNull*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Utility.DataRowExtensions.GetGuid(System.Data.DataRow,System.Int32)
  commentId: M:Microsoft.Health.Utility.DataRowExtensions.GetGuid(System.Data.DataRow,System.Int32)
  id: GetGuid(System.Data.DataRow,System.Int32)
  isExtensionMethod: true
  parent: Microsoft.Health.Utility.DataRowExtensions
  langs:
  - csharp
  - vb
  name: GetGuid(DataRow, Int32)
  nameWithType: DataRowExtensions.GetGuid(DataRow, Int32)
  fullName: Microsoft.Health.Utility.DataRowExtensions.GetGuid(System.Data.DataRow, System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/DataRowExtensions.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetGuid
    path: ../Microsoft.Health.Utility/utilities/DataRowExtensions.cs
    startLine: 34
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  syntax:
    content: public static Guid GetGuid(this DataRow dr, int index)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetGuid(dr As DataRow, index As Integer) As Guid
    parameters:
    - id: dr
      type: System.Data.DataRow
    - id: index
      type: System.Int32
    return:
      type: System.Guid
  overload: Microsoft.Health.Utility.DataRowExtensions.GetGuid*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Utility.DataRowExtensions.GetInt32(System.Data.DataRow,System.Int32)
  commentId: M:Microsoft.Health.Utility.DataRowExtensions.GetInt32(System.Data.DataRow,System.Int32)
  id: GetInt32(System.Data.DataRow,System.Int32)
  isExtensionMethod: true
  parent: Microsoft.Health.Utility.DataRowExtensions
  langs:
  - csharp
  - vb
  name: GetInt32(DataRow, Int32)
  nameWithType: DataRowExtensions.GetInt32(DataRow, Int32)
  fullName: Microsoft.Health.Utility.DataRowExtensions.GetInt32(System.Data.DataRow, System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/DataRowExtensions.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetInt32
    path: ../Microsoft.Health.Utility/utilities/DataRowExtensions.cs
    startLine: 39
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  syntax:
    content: public static int GetInt32(this DataRow dr, int index)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetInt32(dr As DataRow, index As Integer) As Integer
    parameters:
    - id: dr
      type: System.Data.DataRow
    - id: index
      type: System.Int32
    return:
      type: System.Int32
  overload: Microsoft.Health.Utility.DataRowExtensions.GetInt32*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Utility.DataRowExtensions.GetInt64(System.Data.DataRow,System.Int32)
  commentId: M:Microsoft.Health.Utility.DataRowExtensions.GetInt64(System.Data.DataRow,System.Int32)
  id: GetInt64(System.Data.DataRow,System.Int32)
  isExtensionMethod: true
  parent: Microsoft.Health.Utility.DataRowExtensions
  langs:
  - csharp
  - vb
  name: GetInt64(DataRow, Int32)
  nameWithType: DataRowExtensions.GetInt64(DataRow, Int32)
  fullName: Microsoft.Health.Utility.DataRowExtensions.GetInt64(System.Data.DataRow, System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/DataRowExtensions.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetInt64
    path: ../Microsoft.Health.Utility/utilities/DataRowExtensions.cs
    startLine: 44
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  syntax:
    content: public static long GetInt64(this DataRow dr, int index)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetInt64(dr As DataRow, index As Integer) As Long
    parameters:
    - id: dr
      type: System.Data.DataRow
    - id: index
      type: System.Int32
    return:
      type: System.Int64
  overload: Microsoft.Health.Utility.DataRowExtensions.GetInt64*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Utility.DataRowExtensions.GetDateTime(System.Data.DataRow,System.Int32)
  commentId: M:Microsoft.Health.Utility.DataRowExtensions.GetDateTime(System.Data.DataRow,System.Int32)
  id: GetDateTime(System.Data.DataRow,System.Int32)
  isExtensionMethod: true
  parent: Microsoft.Health.Utility.DataRowExtensions
  langs:
  - csharp
  - vb
  name: GetDateTime(DataRow, Int32)
  nameWithType: DataRowExtensions.GetDateTime(DataRow, Int32)
  fullName: Microsoft.Health.Utility.DataRowExtensions.GetDateTime(System.Data.DataRow, System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/DataRowExtensions.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetDateTime
    path: ../Microsoft.Health.Utility/utilities/DataRowExtensions.cs
    startLine: 49
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  syntax:
    content: public static DateTime GetDateTime(this DataRow dr, int index)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetDateTime(dr As DataRow, index As Integer) As Date
    parameters:
    - id: dr
      type: System.Data.DataRow
    - id: index
      type: System.Int32
    return:
      type: System.DateTime
  overload: Microsoft.Health.Utility.DataRowExtensions.GetDateTime*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Utility.DataRowExtensions.GetString(System.Data.DataRow,System.Int32)
  commentId: M:Microsoft.Health.Utility.DataRowExtensions.GetString(System.Data.DataRow,System.Int32)
  id: GetString(System.Data.DataRow,System.Int32)
  isExtensionMethod: true
  parent: Microsoft.Health.Utility.DataRowExtensions
  langs:
  - csharp
  - vb
  name: GetString(DataRow, Int32)
  nameWithType: DataRowExtensions.GetString(DataRow, Int32)
  fullName: Microsoft.Health.Utility.DataRowExtensions.GetString(System.Data.DataRow, System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/DataRowExtensions.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetString
    path: ../Microsoft.Health.Utility/utilities/DataRowExtensions.cs
    startLine: 54
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  syntax:
    content: public static string GetString(this DataRow dr, int index)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetString(dr As DataRow, index As Integer) As String
    parameters:
    - id: dr
      type: System.Data.DataRow
    - id: index
      type: System.Int32
    return:
      type: System.String
  overload: Microsoft.Health.Utility.DataRowExtensions.GetString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Utility.DataRowExtensions.GetByte(System.Data.DataRow,System.Int32)
  commentId: M:Microsoft.Health.Utility.DataRowExtensions.GetByte(System.Data.DataRow,System.Int32)
  id: GetByte(System.Data.DataRow,System.Int32)
  isExtensionMethod: true
  parent: Microsoft.Health.Utility.DataRowExtensions
  langs:
  - csharp
  - vb
  name: GetByte(DataRow, Int32)
  nameWithType: DataRowExtensions.GetByte(DataRow, Int32)
  fullName: Microsoft.Health.Utility.DataRowExtensions.GetByte(System.Data.DataRow, System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/DataRowExtensions.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetByte
    path: ../Microsoft.Health.Utility/utilities/DataRowExtensions.cs
    startLine: 59
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  syntax:
    content: public static byte GetByte(this DataRow dr, int index)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetByte(dr As DataRow, index As Integer) As Byte
    parameters:
    - id: dr
      type: System.Data.DataRow
    - id: index
      type: System.Int32
    return:
      type: System.Byte
  overload: Microsoft.Health.Utility.DataRowExtensions.GetByte*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Utility.DataRowExtensions.GetBoolean(System.Data.DataRow,System.Int32)
  commentId: M:Microsoft.Health.Utility.DataRowExtensions.GetBoolean(System.Data.DataRow,System.Int32)
  id: GetBoolean(System.Data.DataRow,System.Int32)
  isExtensionMethod: true
  parent: Microsoft.Health.Utility.DataRowExtensions
  langs:
  - csharp
  - vb
  name: GetBoolean(DataRow, Int32)
  nameWithType: DataRowExtensions.GetBoolean(DataRow, Int32)
  fullName: Microsoft.Health.Utility.DataRowExtensions.GetBoolean(System.Data.DataRow, System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/DataRowExtensions.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetBoolean
    path: ../Microsoft.Health.Utility/utilities/DataRowExtensions.cs
    startLine: 64
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  syntax:
    content: public static bool GetBoolean(this DataRow dr, int index)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetBoolean(dr As DataRow, index As Integer) As Boolean
    parameters:
    - id: dr
      type: System.Data.DataRow
    - id: index
      type: System.Int32
    return:
      type: System.Boolean
  overload: Microsoft.Health.Utility.DataRowExtensions.GetBoolean*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Utility.DataRowExtensions.Get*
  commentId: Overload:Microsoft.Health.Utility.DataRowExtensions.Get
  isExternal: false
  name: Get
  nameWithType: DataRowExtensions.Get
  fullName: Microsoft.Health.Utility.DataRowExtensions.Get
- uid: System.Data.DataRow
  commentId: T:System.Data.DataRow
  parent: System.Data
  isExternal: true
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Data
  commentId: N:System.Data
  isExternal: false
  name: System.Data
  nameWithType: System.Data
  fullName: System.Data
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: Microsoft.Health.Utility.DataRowExtensions.IsDBNull*
  commentId: Overload:Microsoft.Health.Utility.DataRowExtensions.IsDBNull
  isExternal: false
  name: IsDBNull
  nameWithType: DataRowExtensions.IsDBNull
  fullName: Microsoft.Health.Utility.DataRowExtensions.IsDBNull
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Health.Utility.DataRowExtensions.GetGuid*
  commentId: Overload:Microsoft.Health.Utility.DataRowExtensions.GetGuid
  isExternal: false
  name: GetGuid
  nameWithType: DataRowExtensions.GetGuid
  fullName: Microsoft.Health.Utility.DataRowExtensions.GetGuid
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Microsoft.Health.Utility.DataRowExtensions.GetInt32*
  commentId: Overload:Microsoft.Health.Utility.DataRowExtensions.GetInt32
  isExternal: false
  name: GetInt32
  nameWithType: DataRowExtensions.GetInt32
  fullName: Microsoft.Health.Utility.DataRowExtensions.GetInt32
- uid: Microsoft.Health.Utility.DataRowExtensions.GetInt64*
  commentId: Overload:Microsoft.Health.Utility.DataRowExtensions.GetInt64
  isExternal: false
  name: GetInt64
  nameWithType: DataRowExtensions.GetInt64
  fullName: Microsoft.Health.Utility.DataRowExtensions.GetInt64
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.Health.Utility.DataRowExtensions.GetDateTime*
  commentId: Overload:Microsoft.Health.Utility.DataRowExtensions.GetDateTime
  isExternal: false
  name: GetDateTime
  nameWithType: DataRowExtensions.GetDateTime
  fullName: Microsoft.Health.Utility.DataRowExtensions.GetDateTime
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Microsoft.Health.Utility.DataRowExtensions.GetString*
  commentId: Overload:Microsoft.Health.Utility.DataRowExtensions.GetString
  isExternal: false
  name: GetString
  nameWithType: DataRowExtensions.GetString
  fullName: Microsoft.Health.Utility.DataRowExtensions.GetString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.Utility.DataRowExtensions.GetByte*
  commentId: Overload:Microsoft.Health.Utility.DataRowExtensions.GetByte
  isExternal: false
  name: GetByte
  nameWithType: DataRowExtensions.GetByte
  fullName: Microsoft.Health.Utility.DataRowExtensions.GetByte
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: Microsoft.Health.Utility.DataRowExtensions.GetBoolean*
  commentId: Overload:Microsoft.Health.Utility.DataRowExtensions.GetBoolean
  isExternal: false
  name: GetBoolean
  nameWithType: DataRowExtensions.GetBoolean
  fullName: Microsoft.Health.Utility.DataRowExtensions.GetBoolean
