### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.ItemTypes.ExplanationOfBenefits
  commentId: T:Microsoft.Health.ItemTypes.ExplanationOfBenefits
  id: ExplanationOfBenefits
  parent: Microsoft.Health.ItemTypes
  children:
  - Microsoft.Health.ItemTypes.ExplanationOfBenefits.#ctor
  - Microsoft.Health.ItemTypes.ExplanationOfBenefits.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime,Microsoft.Health.ItemTypes.PersonItem,Microsoft.Health.ItemTypes.Organization,System.String,Microsoft.Health.ItemTypes.CodableValue,System.String,Microsoft.Health.ItemTypes.Organization,Microsoft.Health.ItemTypes.Organization,Microsoft.Health.ItemTypes.CodableValue,Microsoft.Health.ItemTypes.ClaimAmounts,System.Collections.Generic.IEnumerable{Microsoft.Health.ItemTypes.Service})
  - Microsoft.Health.ItemTypes.ExplanationOfBenefits.ClaimId
  - Microsoft.Health.ItemTypes.ExplanationOfBenefits.ClaimTotals
  - Microsoft.Health.ItemTypes.ExplanationOfBenefits.ClaimType
  - Microsoft.Health.ItemTypes.ExplanationOfBenefits.Currency
  - Microsoft.Health.ItemTypes.ExplanationOfBenefits.DateSubmitted
  - Microsoft.Health.ItemTypes.ExplanationOfBenefits.GroupId
  - Microsoft.Health.ItemTypes.ExplanationOfBenefits.MemberId
  - Microsoft.Health.ItemTypes.ExplanationOfBenefits.ParseXml(System.Xml.XPath.IXPathNavigable)
  - Microsoft.Health.ItemTypes.ExplanationOfBenefits.Patient
  - Microsoft.Health.ItemTypes.ExplanationOfBenefits.Plan
  - Microsoft.Health.ItemTypes.ExplanationOfBenefits.Provider
  - Microsoft.Health.ItemTypes.ExplanationOfBenefits.RelationshipToMember
  - Microsoft.Health.ItemTypes.ExplanationOfBenefits.Services
  - Microsoft.Health.ItemTypes.ExplanationOfBenefits.SubmittedBy
  - Microsoft.Health.ItemTypes.ExplanationOfBenefits.ToString
  - Microsoft.Health.ItemTypes.ExplanationOfBenefits.TypeId
  - Microsoft.Health.ItemTypes.ExplanationOfBenefits.WriteXml(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: ExplanationOfBenefits
  nameWithType: ExplanationOfBenefits
  fullName: Microsoft.Health.ItemTypes.ExplanationOfBenefits
  type: Class
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ExplanationOfBenefits.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ExplanationOfBenefits
    path: ../Microsoft.Health.ItemTypes/ExplanationOfBenefits.cs
    startLine: 20
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nDescribes the benefits received from an insurance plan.\n"
  example: []
  syntax:
    content: 'public class ExplanationOfBenefits : HealthRecordItem'
    content.vb: >-
      Public Class ExplanationOfBenefits
          Inherits HealthRecordItem
  inheritance:
  - System.Object
  - Microsoft.Health.HealthRecordItem
  inheritedMembers:
  - Microsoft.Health.HealthRecordItem.Sign(System.Security.Cryptography.X509Certificates.X509Certificate2)
  - Microsoft.Health.HealthRecordItem.IsSignatureValid
  - Microsoft.Health.HealthRecordItem.ValidateCertificate
  - Microsoft.Health.HealthRecordItem.Key
  - Microsoft.Health.HealthRecordItem.TypeName
  - Microsoft.Health.HealthRecordItem.EffectiveDate
  - Microsoft.Health.HealthRecordItem.State
  - Microsoft.Health.HealthRecordItem.Flags
  - Microsoft.Health.HealthRecordItem.IsPersonal
  - Microsoft.Health.HealthRecordItem.IsDownVersioned
  - Microsoft.Health.HealthRecordItem.IsUpVersioned
  - Microsoft.Health.HealthRecordItem.UpdatedEndDate
  - Microsoft.Health.HealthRecordItem.LastUpdated
  - Microsoft.Health.HealthRecordItem.Created
  - Microsoft.Health.HealthRecordItem.EffectivePermissions
  - Microsoft.Health.HealthRecordItem.IsImmutable
  - Microsoft.Health.HealthRecordItem.IsReadOnly
  - Microsoft.Health.HealthRecordItem.TypeSpecificData
  - Microsoft.Health.HealthRecordItem.TransformedXmlData
  - Microsoft.Health.HealthRecordItem.CommonData
  - Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.HealthRecordAccessor)
  - Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.Package.ConnectPackageCreationParameters)
  - Microsoft.Health.HealthRecordItem.Tags
  - Microsoft.Health.HealthRecordItem.HealthRecordItemSignatures
  - Microsoft.Health.HealthRecordItem.Sections
  - Microsoft.Health.HealthRecordItem.GetSizeInBytes
  - Microsoft.Health.HealthRecordItem.GetItemXml
  - Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections)
  - Microsoft.Health.HealthRecordItem.GetItemXml(System.String)
  - Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections,System.String)
  - Microsoft.Health.HealthRecordItem.Serialize
  - Microsoft.Health.HealthRecordItem.Deserialize(System.String)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.ItemTypes.ExplanationOfBenefits.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.ItemTypes.ExplanationOfBenefits.#ctor
  commentId: M:Microsoft.Health.ItemTypes.ExplanationOfBenefits.#ctor
  id: '#ctor'
  parent: Microsoft.Health.ItemTypes.ExplanationOfBenefits
  langs:
  - csharp
  - vb
  name: ExplanationOfBenefits()
  nameWithType: ExplanationOfBenefits.ExplanationOfBenefits()
  fullName: Microsoft.Health.ItemTypes.ExplanationOfBenefits.ExplanationOfBenefits()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ExplanationOfBenefits.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.ItemTypes/ExplanationOfBenefits.cs
    startLine: 32
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.ExplanationOfBenefits\" data-throw-if-not-resolved=\"false\"></xref> class with default values.\n"
  remarks: "\nThis item is not added to the health record until the\n<xref href=\"Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)\" data-throw-if-not-resolved=\"false\"></xref> method\nis called\n"
  example: []
  syntax:
    content: public ExplanationOfBenefits()
    content.vb: Public Sub New
  overload: Microsoft.Health.ItemTypes.ExplanationOfBenefits.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.ExplanationOfBenefits.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime,Microsoft.Health.ItemTypes.PersonItem,Microsoft.Health.ItemTypes.Organization,System.String,Microsoft.Health.ItemTypes.CodableValue,System.String,Microsoft.Health.ItemTypes.Organization,Microsoft.Health.ItemTypes.Organization,Microsoft.Health.ItemTypes.CodableValue,Microsoft.Health.ItemTypes.ClaimAmounts,System.Collections.Generic.IEnumerable{Microsoft.Health.ItemTypes.Service})
  commentId: M:Microsoft.Health.ItemTypes.ExplanationOfBenefits.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime,Microsoft.Health.ItemTypes.PersonItem,Microsoft.Health.ItemTypes.Organization,System.String,Microsoft.Health.ItemTypes.CodableValue,System.String,Microsoft.Health.ItemTypes.Organization,Microsoft.Health.ItemTypes.Organization,Microsoft.Health.ItemTypes.CodableValue,Microsoft.Health.ItemTypes.ClaimAmounts,System.Collections.Generic.IEnumerable{Microsoft.Health.ItemTypes.Service})
  id: '#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime,Microsoft.Health.ItemTypes.PersonItem,Microsoft.Health.ItemTypes.Organization,System.String,Microsoft.Health.ItemTypes.CodableValue,System.String,Microsoft.Health.ItemTypes.Organization,Microsoft.Health.ItemTypes.Organization,Microsoft.Health.ItemTypes.CodableValue,Microsoft.Health.ItemTypes.ClaimAmounts,System.Collections.Generic.IEnumerable{Microsoft.Health.ItemTypes.Service})'
  parent: Microsoft.Health.ItemTypes.ExplanationOfBenefits
  langs:
  - csharp
  - vb
  name: ExplanationOfBenefits(HealthServiceDateTime, PersonItem, Organization, String, CodableValue, String, Organization, Organization, CodableValue, ClaimAmounts, IEnumerable<Service>)
  nameWithType: ExplanationOfBenefits.ExplanationOfBenefits(HealthServiceDateTime, PersonItem, Organization, String, CodableValue, String, Organization, Organization, CodableValue, ClaimAmounts, IEnumerable<Service>)
  fullName: Microsoft.Health.ItemTypes.ExplanationOfBenefits.ExplanationOfBenefits(Microsoft.Health.ItemTypes.HealthServiceDateTime, Microsoft.Health.ItemTypes.PersonItem, Microsoft.Health.ItemTypes.Organization, System.String, Microsoft.Health.ItemTypes.CodableValue, System.String, Microsoft.Health.ItemTypes.Organization, Microsoft.Health.ItemTypes.Organization, Microsoft.Health.ItemTypes.CodableValue, Microsoft.Health.ItemTypes.ClaimAmounts, System.Collections.Generic.IEnumerable<Microsoft.Health.ItemTypes.Service>)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ExplanationOfBenefits.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.ItemTypes/ExplanationOfBenefits.cs
    startLine: 100
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.ItemTypes.ExplanationOfBenefits\" data-throw-if-not-resolved=\"false\"></xref> class specifying mandatory values.\n"
  remarks: "\nThis item is not added to the health record until the\n<xref href=\"Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)\" data-throw-if-not-resolved=\"false\"></xref> method\nis called.\n"
  example: []
  syntax:
    content: public ExplanationOfBenefits(HealthServiceDateTime dateSubmitted, PersonItem patient, Organization plan, string memberId, CodableValue claimType, string claimId, Organization submittedBy, Organization provider, CodableValue currency, ClaimAmounts claimTotals, IEnumerable<Service> services)
    content.vb: Public Sub New(dateSubmitted As HealthServiceDateTime, patient As PersonItem, plan As Organization, memberId As String, claimType As CodableValue, claimId As String, submittedBy As Organization, provider As Organization, currency As CodableValue, claimTotals As ClaimAmounts, services As IEnumerable(Of Service))
    parameters:
    - id: dateSubmitted
      type: Microsoft.Health.ItemTypes.HealthServiceDateTime
      description: "\nThe date when the claim was submitted.\n"
    - id: patient
      type: Microsoft.Health.ItemTypes.PersonItem
      description: "\nThe name of the patient.\n"
    - id: plan
      type: Microsoft.Health.ItemTypes.Organization
      description: "\nThe plan covering this claim.\n"
    - id: memberId
      type: System.String
      description: "\nThe member id of the plan member.\n"
    - id: claimType
      type: Microsoft.Health.ItemTypes.CodableValue
      description: "\nThe type of the claim (medical, dental, etc.)\n"
    - id: claimId
      type: System.String
      description: "\nThe claim id.\n"
    - id: submittedBy
      type: Microsoft.Health.ItemTypes.Organization
      description: "\nThe organization that submitted this claim.\n"
    - id: provider
      type: Microsoft.Health.ItemTypes.Organization
      description: "\nThe provider that performed the services.\n"
    - id: currency
      type: Microsoft.Health.ItemTypes.CodableValue
      description: "\nThe currency used.\n"
    - id: claimTotals
      type: Microsoft.Health.ItemTypes.ClaimAmounts
      description: "\nA summary of the financial information about this claim.\n"
    - id: services
      type: System.Collections.Generic.IEnumerable{Microsoft.Health.ItemTypes.Service}
      description: "\nThe service included in this claim.\n"
  overload: Microsoft.Health.ItemTypes.ExplanationOfBenefits.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nIf <span class=\"paramref\">memberId</span> is empty or contains only whitespace.\nIf <span class=\"paramref\">claimId</span> is empty or contains only whitespace.\nIf <span class=\"paramref\">services</span> is <strong>null</strong> or doesn't contain any values.            \n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nIf <span class=\"paramref\">memberId</span> is <strong>null</strong>.\nIf <span class=\"paramref\">claimId</span> is <strong>null</strong>.\nIf <span class=\"paramref\">dateSubmitted</span> is <strong>null</strong>.            \nIf <span class=\"paramref\">patient</span> is <strong>null</strong>.            \nIf <span class=\"paramref\">plan</span> is <strong>null</strong>.            \nIf <span class=\"paramref\">claimType</span> is <strong>null</strong>.            \nIf <span class=\"paramref\">submittedBy</span> is <strong>null</strong>.            \nIf <span class=\"paramref\">provider</span> is <strong>null</strong>.            \nIf <span class=\"paramref\">currency</span> is <strong>null</strong>.            \nIf <span class=\"paramref\">claimTotals</span> is <strong>null</strong>.            \n"
  nameWithType.vb: ExplanationOfBenefits.ExplanationOfBenefits(HealthServiceDateTime, PersonItem, Organization, String, CodableValue, String, Organization, Organization, CodableValue, ClaimAmounts, IEnumerable(Of Service))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.ItemTypes.ExplanationOfBenefits.ExplanationOfBenefits(Microsoft.Health.ItemTypes.HealthServiceDateTime, Microsoft.Health.ItemTypes.PersonItem, Microsoft.Health.ItemTypes.Organization, System.String, Microsoft.Health.ItemTypes.CodableValue, System.String, Microsoft.Health.ItemTypes.Organization, Microsoft.Health.ItemTypes.Organization, Microsoft.Health.ItemTypes.CodableValue, Microsoft.Health.ItemTypes.ClaimAmounts, System.Collections.Generic.IEnumerable(Of Microsoft.Health.ItemTypes.Service))
  name.vb: ExplanationOfBenefits(HealthServiceDateTime, PersonItem, Organization, String, CodableValue, String, Organization, Organization, CodableValue, ClaimAmounts, IEnumerable(Of Service))
- uid: Microsoft.Health.ItemTypes.ExplanationOfBenefits.TypeId
  commentId: F:Microsoft.Health.ItemTypes.ExplanationOfBenefits.TypeId
  id: TypeId
  parent: Microsoft.Health.ItemTypes.ExplanationOfBenefits
  langs:
  - csharp
  - vb
  name: TypeId
  nameWithType: ExplanationOfBenefits.TypeId
  fullName: Microsoft.Health.ItemTypes.ExplanationOfBenefits.TypeId
  type: Field
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ExplanationOfBenefits.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: TypeId
    path: ../Microsoft.Health.ItemTypes/ExplanationOfBenefits.cs
    startLine: 145
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nRetrieves the unique identifier for the item type.\n"
  example: []
  syntax:
    content: public static readonly Guid TypeId
    content.vb: Public Shared ReadOnly TypeId As Guid
    return:
      type: System.Guid
      description: "\nA GUID.\n"
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Health.ItemTypes.ExplanationOfBenefits.ParseXml(System.Xml.XPath.IXPathNavigable)
  commentId: M:Microsoft.Health.ItemTypes.ExplanationOfBenefits.ParseXml(System.Xml.XPath.IXPathNavigable)
  id: ParseXml(System.Xml.XPath.IXPathNavigable)
  parent: Microsoft.Health.ItemTypes.ExplanationOfBenefits
  langs:
  - csharp
  - vb
  name: ParseXml(IXPathNavigable)
  nameWithType: ExplanationOfBenefits.ParseXml(IXPathNavigable)
  fullName: Microsoft.Health.ItemTypes.ExplanationOfBenefits.ParseXml(System.Xml.XPath.IXPathNavigable)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ExplanationOfBenefits.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ParseXml
    path: ../Microsoft.Health.ItemTypes/ExplanationOfBenefits.cs
    startLine: 164
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nPopulates this <xref href=\"Microsoft.Health.ItemTypes.ExplanationOfBenefits\" data-throw-if-not-resolved=\"false\"></xref> instance from the data in the specified XML.\n"
  example: []
  syntax:
    content: protected override void ParseXml(IXPathNavigable typeSpecificXml)
    content.vb: Protected Overrides Sub ParseXml(typeSpecificXml As IXPathNavigable)
    parameters:
    - id: typeSpecificXml
      type: System.Xml.XPath.IXPathNavigable
      description: "\nThe XML to get the ExplanationOfBenefits data from.\n"
  overridden: Microsoft.Health.HealthRecordItem.ParseXml(System.Xml.XPath.IXPathNavigable)
  overload: Microsoft.Health.ItemTypes.ExplanationOfBenefits.ParseXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nIf <span class=\"paramref\">typeSpecificXml</span> parameter is <strong>null</strong>.\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nIf the first node in <span class=\"paramref\">typeSpecificXml</span> is not\na ExplanationOfBenefits node.\n"
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Health.ItemTypes.ExplanationOfBenefits.WriteXml(System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.ItemTypes.ExplanationOfBenefits.WriteXml(System.Xml.XmlWriter)
  id: WriteXml(System.Xml.XmlWriter)
  parent: Microsoft.Health.ItemTypes.ExplanationOfBenefits
  langs:
  - csharp
  - vb
  name: WriteXml(XmlWriter)
  nameWithType: ExplanationOfBenefits.WriteXml(XmlWriter)
  fullName: Microsoft.Health.ItemTypes.ExplanationOfBenefits.WriteXml(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ExplanationOfBenefits.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteXml
    path: ../Microsoft.Health.ItemTypes/ExplanationOfBenefits.cs
    startLine: 224
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nWrites the XML representation of the ExplanationOfBenefits into\nthe specified XML writer.\n"
  example: []
  syntax:
    content: public override void WriteXml(XmlWriter writer)
    content.vb: Public Overrides Sub WriteXml(writer As XmlWriter)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "\nThe XML writer into which the ExplanationOfBenefits should be\nwritten.\n"
  overridden: Microsoft.Health.HealthRecordItem.WriteXml(System.Xml.XmlWriter)
  overload: Microsoft.Health.ItemTypes.ExplanationOfBenefits.WriteXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nIf <span class=\"paramref\">writer</span> parameter is <strong>null</strong>.\n"
  - type: Microsoft.Health.HealthRecordItemSerializationException
    commentId: T:Microsoft.Health.HealthRecordItemSerializationException
    description: "\nIf <xref href=\"Microsoft.Health.ItemTypes.ExplanationOfBenefits.DateSubmitted\" data-throw-if-not-resolved=\"false\"></xref> is <strong>null</strong>.\nIf <xref href=\"Microsoft.Health.ItemTypes.ExplanationOfBenefits.Patient\" data-throw-if-not-resolved=\"false\"></xref> is <strong>null</strong>.\nIf <xref href=\"Microsoft.Health.ItemTypes.ExplanationOfBenefits.Plan\" data-throw-if-not-resolved=\"false\"></xref> is <strong>null</strong>.\nIf <xref href=\"Microsoft.Health.ItemTypes.ExplanationOfBenefits.MemberId\" data-throw-if-not-resolved=\"false\"></xref> is <strong>null</strong>.\nIf <xref href=\"Microsoft.Health.ItemTypes.ExplanationOfBenefits.ClaimType\" data-throw-if-not-resolved=\"false\"></xref> is <strong>null</strong>.\nIf <xref href=\"Microsoft.Health.ItemTypes.ExplanationOfBenefits.ClaimId\" data-throw-if-not-resolved=\"false\"></xref> is <strong>null</strong>.\nIf <xref href=\"Microsoft.Health.ItemTypes.ExplanationOfBenefits.SubmittedBy\" data-throw-if-not-resolved=\"false\"></xref> is <strong>null</strong>.\nIf <xref href=\"Microsoft.Health.ItemTypes.ExplanationOfBenefits.Provider\" data-throw-if-not-resolved=\"false\"></xref> is <strong>null</strong>.\nIf <xref href=\"Microsoft.Health.ItemTypes.ExplanationOfBenefits.Currency\" data-throw-if-not-resolved=\"false\"></xref> is <strong>null</strong>.\nIf <xref href=\"Microsoft.Health.ItemTypes.ExplanationOfBenefits.ClaimTotals\" data-throw-if-not-resolved=\"false\"></xref> is <strong>null</strong>.\nIf <xref href=\"Microsoft.Health.ItemTypes.ExplanationOfBenefits.Services\" data-throw-if-not-resolved=\"false\"></xref> collection is <strong>null</strong> or empty.                \n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.ItemTypes.ExplanationOfBenefits.DateSubmitted
  commentId: P:Microsoft.Health.ItemTypes.ExplanationOfBenefits.DateSubmitted
  id: DateSubmitted
  parent: Microsoft.Health.ItemTypes.ExplanationOfBenefits
  langs:
  - csharp
  - vb
  name: DateSubmitted
  nameWithType: ExplanationOfBenefits.DateSubmitted
  fullName: Microsoft.Health.ItemTypes.ExplanationOfBenefits.DateSubmitted
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ExplanationOfBenefits.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DateSubmitted
    path: ../Microsoft.Health.ItemTypes/ExplanationOfBenefits.cs
    startLine: 273
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the date when the claim was submitted.\n"
  example: []
  syntax:
    content: public HealthServiceDateTime DateSubmitted { get; set; }
    content.vb: Public Property DateSubmitted As HealthServiceDateTime
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.HealthServiceDateTime
  overload: Microsoft.Health.ItemTypes.ExplanationOfBenefits.DateSubmitted*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">value</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.ExplanationOfBenefits.Patient
  commentId: P:Microsoft.Health.ItemTypes.ExplanationOfBenefits.Patient
  id: Patient
  parent: Microsoft.Health.ItemTypes.ExplanationOfBenefits
  langs:
  - csharp
  - vb
  name: Patient
  nameWithType: ExplanationOfBenefits.Patient
  fullName: Microsoft.Health.ItemTypes.ExplanationOfBenefits.Patient
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ExplanationOfBenefits.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Patient
    path: ../Microsoft.Health.ItemTypes/ExplanationOfBenefits.cs
    startLine: 293
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the name of the patient.\n"
  example: []
  syntax:
    content: public PersonItem Patient { get; set; }
    content.vb: Public Property Patient As PersonItem
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.PersonItem
  overload: Microsoft.Health.ItemTypes.ExplanationOfBenefits.Patient*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">value</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.ExplanationOfBenefits.RelationshipToMember
  commentId: P:Microsoft.Health.ItemTypes.ExplanationOfBenefits.RelationshipToMember
  id: RelationshipToMember
  parent: Microsoft.Health.ItemTypes.ExplanationOfBenefits
  langs:
  - csharp
  - vb
  name: RelationshipToMember
  nameWithType: ExplanationOfBenefits.RelationshipToMember
  fullName: Microsoft.Health.ItemTypes.ExplanationOfBenefits.RelationshipToMember
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ExplanationOfBenefits.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: RelationshipToMember
    path: ../Microsoft.Health.ItemTypes/ExplanationOfBenefits.cs
    startLine: 312
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the relationship of the patient to the primary plan member.\n"
  remarks: "\nIf there is no information about the relationshipToMember the value should be set to <strong>null</strong>.\n"
  example: []
  syntax:
    content: public CodableValue RelationshipToMember { get; set; }
    content.vb: Public Property RelationshipToMember As CodableValue
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.CodableValue
  overload: Microsoft.Health.ItemTypes.ExplanationOfBenefits.RelationshipToMember*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.ExplanationOfBenefits.Plan
  commentId: P:Microsoft.Health.ItemTypes.ExplanationOfBenefits.Plan
  id: Plan
  parent: Microsoft.Health.ItemTypes.ExplanationOfBenefits
  langs:
  - csharp
  - vb
  name: Plan
  nameWithType: ExplanationOfBenefits.Plan
  fullName: Microsoft.Health.ItemTypes.ExplanationOfBenefits.Plan
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ExplanationOfBenefits.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Plan
    path: ../Microsoft.Health.ItemTypes/ExplanationOfBenefits.cs
    startLine: 329
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the plan covering this claim.\n"
  example: []
  syntax:
    content: public Organization Plan { get; set; }
    content.vb: Public Property Plan As Organization
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.Organization
  overload: Microsoft.Health.ItemTypes.ExplanationOfBenefits.Plan*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">value</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.ExplanationOfBenefits.GroupId
  commentId: P:Microsoft.Health.ItemTypes.ExplanationOfBenefits.GroupId
  id: GroupId
  parent: Microsoft.Health.ItemTypes.ExplanationOfBenefits
  langs:
  - csharp
  - vb
  name: GroupId
  nameWithType: ExplanationOfBenefits.GroupId
  fullName: Microsoft.Health.ItemTypes.ExplanationOfBenefits.GroupId
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ExplanationOfBenefits.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GroupId
    path: ../Microsoft.Health.ItemTypes/ExplanationOfBenefits.cs
    startLine: 352
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the group id for the member's plan.\n"
  remarks: "\nIf there is no information about the groupId the value should be set to <strong>null</strong> \n"
  example: []
  syntax:
    content: public string GroupId { get; set; }
    content.vb: Public Property GroupId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.ItemTypes.ExplanationOfBenefits.GroupId*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">value</span> contains only whitespace.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.ExplanationOfBenefits.MemberId
  commentId: P:Microsoft.Health.ItemTypes.ExplanationOfBenefits.MemberId
  id: MemberId
  parent: Microsoft.Health.ItemTypes.ExplanationOfBenefits
  langs:
  - csharp
  - vb
  name: MemberId
  nameWithType: ExplanationOfBenefits.MemberId
  fullName: Microsoft.Health.ItemTypes.ExplanationOfBenefits.MemberId
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ExplanationOfBenefits.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: MemberId
    path: ../Microsoft.Health.ItemTypes/ExplanationOfBenefits.cs
    startLine: 376
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the member id of the plan member.\n"
  example: []
  syntax:
    content: public string MemberId { get; set; }
    content.vb: Public Property MemberId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.ItemTypes.ExplanationOfBenefits.MemberId*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">value</span> parameter is <strong>null</strong>.\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">value</span> is empty or contains only whitespace.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.ExplanationOfBenefits.ClaimType
  commentId: P:Microsoft.Health.ItemTypes.ExplanationOfBenefits.ClaimType
  id: ClaimType
  parent: Microsoft.Health.ItemTypes.ExplanationOfBenefits
  langs:
  - csharp
  - vb
  name: ClaimType
  nameWithType: ExplanationOfBenefits.ClaimType
  fullName: Microsoft.Health.ItemTypes.ExplanationOfBenefits.ClaimType
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ExplanationOfBenefits.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ClaimType
    path: ../Microsoft.Health.ItemTypes/ExplanationOfBenefits.cs
    startLine: 397
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the type of the claim (medical, dental, etc.)\n"
  example: []
  syntax:
    content: public CodableValue ClaimType { get; set; }
    content.vb: Public Property ClaimType As CodableValue
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.CodableValue
  overload: Microsoft.Health.ItemTypes.ExplanationOfBenefits.ClaimType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">value</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.ExplanationOfBenefits.ClaimId
  commentId: P:Microsoft.Health.ItemTypes.ExplanationOfBenefits.ClaimId
  id: ClaimId
  parent: Microsoft.Health.ItemTypes.ExplanationOfBenefits
  langs:
  - csharp
  - vb
  name: ClaimId
  nameWithType: ExplanationOfBenefits.ClaimId
  fullName: Microsoft.Health.ItemTypes.ExplanationOfBenefits.ClaimId
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ExplanationOfBenefits.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ClaimId
    path: ../Microsoft.Health.ItemTypes/ExplanationOfBenefits.cs
    startLine: 422
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the claim id.\n"
  example: []
  syntax:
    content: public string ClaimId { get; set; }
    content.vb: Public Property ClaimId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.ItemTypes.ExplanationOfBenefits.ClaimId*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">value</span> parameter is <strong>null</strong>.\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">value</span> is empty or contains only whitespace.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.ExplanationOfBenefits.SubmittedBy
  commentId: P:Microsoft.Health.ItemTypes.ExplanationOfBenefits.SubmittedBy
  id: SubmittedBy
  parent: Microsoft.Health.ItemTypes.ExplanationOfBenefits
  langs:
  - csharp
  - vb
  name: SubmittedBy
  nameWithType: ExplanationOfBenefits.SubmittedBy
  fullName: Microsoft.Health.ItemTypes.ExplanationOfBenefits.SubmittedBy
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ExplanationOfBenefits.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SubmittedBy
    path: ../Microsoft.Health.ItemTypes/ExplanationOfBenefits.cs
    startLine: 443
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the organization that submitted this claim.\n"
  example: []
  syntax:
    content: public Organization SubmittedBy { get; set; }
    content.vb: Public Property SubmittedBy As Organization
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.Organization
  overload: Microsoft.Health.ItemTypes.ExplanationOfBenefits.SubmittedBy*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">value</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.ExplanationOfBenefits.Provider
  commentId: P:Microsoft.Health.ItemTypes.ExplanationOfBenefits.Provider
  id: Provider
  parent: Microsoft.Health.ItemTypes.ExplanationOfBenefits
  langs:
  - csharp
  - vb
  name: Provider
  nameWithType: ExplanationOfBenefits.Provider
  fullName: Microsoft.Health.ItemTypes.ExplanationOfBenefits.Provider
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ExplanationOfBenefits.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Provider
    path: ../Microsoft.Health.ItemTypes/ExplanationOfBenefits.cs
    startLine: 463
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the provider that performed the services.\n"
  example: []
  syntax:
    content: public Organization Provider { get; set; }
    content.vb: Public Property Provider As Organization
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.Organization
  overload: Microsoft.Health.ItemTypes.ExplanationOfBenefits.Provider*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">value</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.ExplanationOfBenefits.Currency
  commentId: P:Microsoft.Health.ItemTypes.ExplanationOfBenefits.Currency
  id: Currency
  parent: Microsoft.Health.ItemTypes.ExplanationOfBenefits
  langs:
  - csharp
  - vb
  name: Currency
  nameWithType: ExplanationOfBenefits.Currency
  fullName: Microsoft.Health.ItemTypes.ExplanationOfBenefits.Currency
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ExplanationOfBenefits.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Currency
    path: ../Microsoft.Health.ItemTypes/ExplanationOfBenefits.cs
    startLine: 483
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets the currency used.\n"
  example: []
  syntax:
    content: public CodableValue Currency { get; set; }
    content.vb: Public Property Currency As CodableValue
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.CodableValue
  overload: Microsoft.Health.ItemTypes.ExplanationOfBenefits.Currency*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">value</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.ExplanationOfBenefits.ClaimTotals
  commentId: P:Microsoft.Health.ItemTypes.ExplanationOfBenefits.ClaimTotals
  id: ClaimTotals
  parent: Microsoft.Health.ItemTypes.ExplanationOfBenefits
  langs:
  - csharp
  - vb
  name: ClaimTotals
  nameWithType: ExplanationOfBenefits.ClaimTotals
  fullName: Microsoft.Health.ItemTypes.ExplanationOfBenefits.ClaimTotals
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ExplanationOfBenefits.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ClaimTotals
    path: ../Microsoft.Health.ItemTypes/ExplanationOfBenefits.cs
    startLine: 504
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets or sets a summary of the financial information about this claim.\n"
  example: []
  syntax:
    content: public ClaimAmounts ClaimTotals { get; set; }
    content.vb: Public Property ClaimTotals As ClaimAmounts
    parameters: []
    return:
      type: Microsoft.Health.ItemTypes.ClaimAmounts
  overload: Microsoft.Health.ItemTypes.ExplanationOfBenefits.ClaimTotals*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">value</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.ItemTypes.ExplanationOfBenefits.Services
  commentId: P:Microsoft.Health.ItemTypes.ExplanationOfBenefits.Services
  id: Services
  parent: Microsoft.Health.ItemTypes.ExplanationOfBenefits
  langs:
  - csharp
  - vb
  name: Services
  nameWithType: ExplanationOfBenefits.Services
  fullName: Microsoft.Health.ItemTypes.ExplanationOfBenefits.Services
  type: Property
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ExplanationOfBenefits.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Services
    path: ../Microsoft.Health.ItemTypes/ExplanationOfBenefits.cs
    startLine: 524
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets a collection of the services included in this claim.\n"
  example: []
  syntax:
    content: public Collection<Service> Services { get; }
    content.vb: Public ReadOnly Property Services As Collection(Of Service)
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{Microsoft.Health.ItemTypes.Service}
  overload: Microsoft.Health.ItemTypes.ExplanationOfBenefits.Services*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">value</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.ItemTypes.ExplanationOfBenefits.ToString
  commentId: M:Microsoft.Health.ItemTypes.ExplanationOfBenefits.ToString
  id: ToString
  parent: Microsoft.Health.ItemTypes.ExplanationOfBenefits
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ExplanationOfBenefits.ToString()
  fullName: Microsoft.Health.ItemTypes.ExplanationOfBenefits.ToString()
  type: Method
  source:
    remote:
      path: Microsoft.Health.ItemTypes/ExplanationOfBenefits.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ToString
    path: ../Microsoft.Health.ItemTypes/ExplanationOfBenefits.cs
    startLine: 539
  assemblies:
  - Microsoft.Health.ItemTypes
  namespace: Microsoft.Health.ItemTypes
  summary: "\nGets a string representation of the ExplanationOfBenefits.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\nA string representation of the ExplanationOfBenefits.\n"
  overridden: System.Object.ToString
  overload: Microsoft.Health.ItemTypes.ExplanationOfBenefits.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Health.ItemTypes
  commentId: N:Microsoft.Health.ItemTypes
  isExternal: false
  name: Microsoft.Health.ItemTypes
  nameWithType: Microsoft.Health.ItemTypes
  fullName: Microsoft.Health.ItemTypes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.HealthRecordItem
  commentId: T:Microsoft.Health.HealthRecordItem
  parent: Microsoft.Health
  isExternal: false
  name: HealthRecordItem
  nameWithType: HealthRecordItem
  fullName: Microsoft.Health.HealthRecordItem
- uid: Microsoft.Health.HealthRecordItem.Sign(System.Security.Cryptography.X509Certificates.X509Certificate2)
  commentId: M:Microsoft.Health.HealthRecordItem.Sign(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: true
  name: Sign(X509Certificate2)
  nameWithType: HealthRecordItem.Sign(X509Certificate2)
  fullName: Microsoft.Health.HealthRecordItem.Sign(System.Security.Cryptography.X509Certificates.X509Certificate2)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.Sign(System.Security.Cryptography.X509Certificates.X509Certificate2)
    name: Sign
    nameWithType: HealthRecordItem.Sign
    fullName: Microsoft.Health.HealthRecordItem.Sign
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2
    name: X509Certificate2
    nameWithType: X509Certificate2
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.Sign(System.Security.Cryptography.X509Certificates.X509Certificate2)
    name: Sign
    nameWithType: HealthRecordItem.Sign
    fullName: Microsoft.Health.HealthRecordItem.Sign
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2
    name: X509Certificate2
    nameWithType: X509Certificate2
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.IsSignatureValid
  commentId: M:Microsoft.Health.HealthRecordItem.IsSignatureValid
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: IsSignatureValid()
  nameWithType: HealthRecordItem.IsSignatureValid()
  fullName: Microsoft.Health.HealthRecordItem.IsSignatureValid()
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.IsSignatureValid
    name: IsSignatureValid
    nameWithType: HealthRecordItem.IsSignatureValid
    fullName: Microsoft.Health.HealthRecordItem.IsSignatureValid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.IsSignatureValid
    name: IsSignatureValid
    nameWithType: HealthRecordItem.IsSignatureValid
    fullName: Microsoft.Health.HealthRecordItem.IsSignatureValid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.ValidateCertificate
  commentId: M:Microsoft.Health.HealthRecordItem.ValidateCertificate
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: ValidateCertificate()
  nameWithType: HealthRecordItem.ValidateCertificate()
  fullName: Microsoft.Health.HealthRecordItem.ValidateCertificate()
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.ValidateCertificate
    name: ValidateCertificate
    nameWithType: HealthRecordItem.ValidateCertificate
    fullName: Microsoft.Health.HealthRecordItem.ValidateCertificate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.ValidateCertificate
    name: ValidateCertificate
    nameWithType: HealthRecordItem.ValidateCertificate
    fullName: Microsoft.Health.HealthRecordItem.ValidateCertificate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.Key
  commentId: P:Microsoft.Health.HealthRecordItem.Key
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: Key
  nameWithType: HealthRecordItem.Key
  fullName: Microsoft.Health.HealthRecordItem.Key
- uid: Microsoft.Health.HealthRecordItem.TypeName
  commentId: P:Microsoft.Health.HealthRecordItem.TypeName
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: TypeName
  nameWithType: HealthRecordItem.TypeName
  fullName: Microsoft.Health.HealthRecordItem.TypeName
- uid: Microsoft.Health.HealthRecordItem.EffectiveDate
  commentId: P:Microsoft.Health.HealthRecordItem.EffectiveDate
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: EffectiveDate
  nameWithType: HealthRecordItem.EffectiveDate
  fullName: Microsoft.Health.HealthRecordItem.EffectiveDate
- uid: Microsoft.Health.HealthRecordItem.State
  commentId: P:Microsoft.Health.HealthRecordItem.State
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: State
  nameWithType: HealthRecordItem.State
  fullName: Microsoft.Health.HealthRecordItem.State
- uid: Microsoft.Health.HealthRecordItem.Flags
  commentId: P:Microsoft.Health.HealthRecordItem.Flags
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: Flags
  nameWithType: HealthRecordItem.Flags
  fullName: Microsoft.Health.HealthRecordItem.Flags
- uid: Microsoft.Health.HealthRecordItem.IsPersonal
  commentId: P:Microsoft.Health.HealthRecordItem.IsPersonal
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: IsPersonal
  nameWithType: HealthRecordItem.IsPersonal
  fullName: Microsoft.Health.HealthRecordItem.IsPersonal
- uid: Microsoft.Health.HealthRecordItem.IsDownVersioned
  commentId: P:Microsoft.Health.HealthRecordItem.IsDownVersioned
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: IsDownVersioned
  nameWithType: HealthRecordItem.IsDownVersioned
  fullName: Microsoft.Health.HealthRecordItem.IsDownVersioned
- uid: Microsoft.Health.HealthRecordItem.IsUpVersioned
  commentId: P:Microsoft.Health.HealthRecordItem.IsUpVersioned
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: IsUpVersioned
  nameWithType: HealthRecordItem.IsUpVersioned
  fullName: Microsoft.Health.HealthRecordItem.IsUpVersioned
- uid: Microsoft.Health.HealthRecordItem.UpdatedEndDate
  commentId: P:Microsoft.Health.HealthRecordItem.UpdatedEndDate
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: UpdatedEndDate
  nameWithType: HealthRecordItem.UpdatedEndDate
  fullName: Microsoft.Health.HealthRecordItem.UpdatedEndDate
- uid: Microsoft.Health.HealthRecordItem.LastUpdated
  commentId: P:Microsoft.Health.HealthRecordItem.LastUpdated
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: LastUpdated
  nameWithType: HealthRecordItem.LastUpdated
  fullName: Microsoft.Health.HealthRecordItem.LastUpdated
- uid: Microsoft.Health.HealthRecordItem.Created
  commentId: P:Microsoft.Health.HealthRecordItem.Created
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: Created
  nameWithType: HealthRecordItem.Created
  fullName: Microsoft.Health.HealthRecordItem.Created
- uid: Microsoft.Health.HealthRecordItem.EffectivePermissions
  commentId: P:Microsoft.Health.HealthRecordItem.EffectivePermissions
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: EffectivePermissions
  nameWithType: HealthRecordItem.EffectivePermissions
  fullName: Microsoft.Health.HealthRecordItem.EffectivePermissions
- uid: Microsoft.Health.HealthRecordItem.IsImmutable
  commentId: P:Microsoft.Health.HealthRecordItem.IsImmutable
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: IsImmutable
  nameWithType: HealthRecordItem.IsImmutable
  fullName: Microsoft.Health.HealthRecordItem.IsImmutable
- uid: Microsoft.Health.HealthRecordItem.IsReadOnly
  commentId: P:Microsoft.Health.HealthRecordItem.IsReadOnly
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: IsReadOnly
  nameWithType: HealthRecordItem.IsReadOnly
  fullName: Microsoft.Health.HealthRecordItem.IsReadOnly
- uid: Microsoft.Health.HealthRecordItem.TypeSpecificData
  commentId: P:Microsoft.Health.HealthRecordItem.TypeSpecificData
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: TypeSpecificData
  nameWithType: HealthRecordItem.TypeSpecificData
  fullName: Microsoft.Health.HealthRecordItem.TypeSpecificData
- uid: Microsoft.Health.HealthRecordItem.TransformedXmlData
  commentId: P:Microsoft.Health.HealthRecordItem.TransformedXmlData
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: TransformedXmlData
  nameWithType: HealthRecordItem.TransformedXmlData
  fullName: Microsoft.Health.HealthRecordItem.TransformedXmlData
- uid: Microsoft.Health.HealthRecordItem.CommonData
  commentId: P:Microsoft.Health.HealthRecordItem.CommonData
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: CommonData
  nameWithType: HealthRecordItem.CommonData
  fullName: Microsoft.Health.HealthRecordItem.CommonData
- uid: Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.HealthRecordAccessor)
  commentId: M:Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.HealthRecordAccessor)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: GetBlobStore(HealthRecordAccessor)
  nameWithType: HealthRecordItem.GetBlobStore(HealthRecordAccessor)
  fullName: Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.HealthRecordAccessor)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.HealthRecordAccessor)
    name: GetBlobStore
    nameWithType: HealthRecordItem.GetBlobStore
    fullName: Microsoft.Health.HealthRecordItem.GetBlobStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.HealthRecordAccessor
    name: HealthRecordAccessor
    nameWithType: HealthRecordAccessor
    fullName: Microsoft.Health.HealthRecordAccessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.HealthRecordAccessor)
    name: GetBlobStore
    nameWithType: HealthRecordItem.GetBlobStore
    fullName: Microsoft.Health.HealthRecordItem.GetBlobStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.HealthRecordAccessor
    name: HealthRecordAccessor
    nameWithType: HealthRecordAccessor
    fullName: Microsoft.Health.HealthRecordAccessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.Package.ConnectPackageCreationParameters)
  commentId: M:Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.Package.ConnectPackageCreationParameters)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: GetBlobStore(ConnectPackageCreationParameters)
  nameWithType: HealthRecordItem.GetBlobStore(ConnectPackageCreationParameters)
  fullName: Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.Package.ConnectPackageCreationParameters)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.Package.ConnectPackageCreationParameters)
    name: GetBlobStore
    nameWithType: HealthRecordItem.GetBlobStore
    fullName: Microsoft.Health.HealthRecordItem.GetBlobStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.Package.ConnectPackageCreationParameters
    name: ConnectPackageCreationParameters
    nameWithType: ConnectPackageCreationParameters
    fullName: Microsoft.Health.Package.ConnectPackageCreationParameters
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.GetBlobStore(Microsoft.Health.Package.ConnectPackageCreationParameters)
    name: GetBlobStore
    nameWithType: HealthRecordItem.GetBlobStore
    fullName: Microsoft.Health.HealthRecordItem.GetBlobStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.Package.ConnectPackageCreationParameters
    name: ConnectPackageCreationParameters
    nameWithType: ConnectPackageCreationParameters
    fullName: Microsoft.Health.Package.ConnectPackageCreationParameters
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.Tags
  commentId: P:Microsoft.Health.HealthRecordItem.Tags
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: Tags
  nameWithType: HealthRecordItem.Tags
  fullName: Microsoft.Health.HealthRecordItem.Tags
- uid: Microsoft.Health.HealthRecordItem.HealthRecordItemSignatures
  commentId: P:Microsoft.Health.HealthRecordItem.HealthRecordItemSignatures
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: HealthRecordItemSignatures
  nameWithType: HealthRecordItem.HealthRecordItemSignatures
  fullName: Microsoft.Health.HealthRecordItem.HealthRecordItemSignatures
- uid: Microsoft.Health.HealthRecordItem.Sections
  commentId: P:Microsoft.Health.HealthRecordItem.Sections
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: Sections
  nameWithType: HealthRecordItem.Sections
  fullName: Microsoft.Health.HealthRecordItem.Sections
- uid: Microsoft.Health.HealthRecordItem.GetSizeInBytes
  commentId: M:Microsoft.Health.HealthRecordItem.GetSizeInBytes
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: GetSizeInBytes()
  nameWithType: HealthRecordItem.GetSizeInBytes()
  fullName: Microsoft.Health.HealthRecordItem.GetSizeInBytes()
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.GetSizeInBytes
    name: GetSizeInBytes
    nameWithType: HealthRecordItem.GetSizeInBytes
    fullName: Microsoft.Health.HealthRecordItem.GetSizeInBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.GetSizeInBytes
    name: GetSizeInBytes
    nameWithType: HealthRecordItem.GetSizeInBytes
    fullName: Microsoft.Health.HealthRecordItem.GetSizeInBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.GetItemXml
  commentId: M:Microsoft.Health.HealthRecordItem.GetItemXml
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: GetItemXml()
  nameWithType: HealthRecordItem.GetItemXml()
  fullName: Microsoft.Health.HealthRecordItem.GetItemXml()
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.GetItemXml
    name: GetItemXml
    nameWithType: HealthRecordItem.GetItemXml
    fullName: Microsoft.Health.HealthRecordItem.GetItemXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.GetItemXml
    name: GetItemXml
    nameWithType: HealthRecordItem.GetItemXml
    fullName: Microsoft.Health.HealthRecordItem.GetItemXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections)
  commentId: M:Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: GetItemXml(HealthRecordItemSections)
  nameWithType: HealthRecordItem.GetItemXml(HealthRecordItemSections)
  fullName: Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections)
    name: GetItemXml
    nameWithType: HealthRecordItem.GetItemXml
    fullName: Microsoft.Health.HealthRecordItem.GetItemXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.HealthRecordItemSections
    name: HealthRecordItemSections
    nameWithType: HealthRecordItemSections
    fullName: Microsoft.Health.HealthRecordItemSections
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections)
    name: GetItemXml
    nameWithType: HealthRecordItem.GetItemXml
    fullName: Microsoft.Health.HealthRecordItem.GetItemXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.HealthRecordItemSections
    name: HealthRecordItemSections
    nameWithType: HealthRecordItemSections
    fullName: Microsoft.Health.HealthRecordItemSections
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.GetItemXml(System.String)
  commentId: M:Microsoft.Health.HealthRecordItem.GetItemXml(System.String)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: true
  name: GetItemXml(String)
  nameWithType: HealthRecordItem.GetItemXml(String)
  fullName: Microsoft.Health.HealthRecordItem.GetItemXml(System.String)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.GetItemXml(System.String)
    name: GetItemXml
    nameWithType: HealthRecordItem.GetItemXml
    fullName: Microsoft.Health.HealthRecordItem.GetItemXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.GetItemXml(System.String)
    name: GetItemXml
    nameWithType: HealthRecordItem.GetItemXml
    fullName: Microsoft.Health.HealthRecordItem.GetItemXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections,System.String)
  commentId: M:Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections,System.String)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: true
  name: GetItemXml(HealthRecordItemSections, String)
  nameWithType: HealthRecordItem.GetItemXml(HealthRecordItemSections, String)
  fullName: Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections, System.String)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections,System.String)
    name: GetItemXml
    nameWithType: HealthRecordItem.GetItemXml
    fullName: Microsoft.Health.HealthRecordItem.GetItemXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.HealthRecordItemSections
    name: HealthRecordItemSections
    nameWithType: HealthRecordItemSections
    fullName: Microsoft.Health.HealthRecordItemSections
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.GetItemXml(Microsoft.Health.HealthRecordItemSections,System.String)
    name: GetItemXml
    nameWithType: HealthRecordItem.GetItemXml
    fullName: Microsoft.Health.HealthRecordItem.GetItemXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.HealthRecordItemSections
    name: HealthRecordItemSections
    nameWithType: HealthRecordItemSections
    fullName: Microsoft.Health.HealthRecordItemSections
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.Serialize
  commentId: M:Microsoft.Health.HealthRecordItem.Serialize
  parent: Microsoft.Health.HealthRecordItem
  isExternal: false
  name: Serialize()
  nameWithType: HealthRecordItem.Serialize()
  fullName: Microsoft.Health.HealthRecordItem.Serialize()
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.Serialize
    name: Serialize
    nameWithType: HealthRecordItem.Serialize
    fullName: Microsoft.Health.HealthRecordItem.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.Serialize
    name: Serialize
    nameWithType: HealthRecordItem.Serialize
    fullName: Microsoft.Health.HealthRecordItem.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordItem.Deserialize(System.String)
  commentId: M:Microsoft.Health.HealthRecordItem.Deserialize(System.String)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: true
  name: Deserialize(String)
  nameWithType: HealthRecordItem.Deserialize(String)
  fullName: Microsoft.Health.HealthRecordItem.Deserialize(System.String)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.Deserialize(System.String)
    name: Deserialize
    nameWithType: HealthRecordItem.Deserialize
    fullName: Microsoft.Health.HealthRecordItem.Deserialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.Deserialize(System.String)
    name: Deserialize
    nameWithType: HealthRecordItem.Deserialize
    fullName: Microsoft.Health.HealthRecordItem.Deserialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.ExplanationOfBenefits.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<ExplanationOfBenefits>()
  nameWithType: TypeHelper.ValueOrDbNull<ExplanationOfBenefits>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.ItemTypes.ExplanationOfBenefits>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of ExplanationOfBenefits)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.ItemTypes.ExplanationOfBenefits)()
  name.vb: ValueOrDbNull(Of ExplanationOfBenefits)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<ExplanationOfBenefits>
    nameWithType: TypeHelper.ValueOrDbNull<ExplanationOfBenefits>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.ItemTypes.ExplanationOfBenefits>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of ExplanationOfBenefits)
    nameWithType: TypeHelper.ValueOrDbNull(Of ExplanationOfBenefits)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.ItemTypes.ExplanationOfBenefits)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.ItemTypes.ExplanationOfBenefits
  commentId: T:Microsoft.Health.ItemTypes.ExplanationOfBenefits
  isExternal: false
  name: ExplanationOfBenefits
  nameWithType: ExplanationOfBenefits
  fullName: Microsoft.Health.ItemTypes.ExplanationOfBenefits
- uid: Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)
  commentId: M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)
  parent: Microsoft.Health.HealthRecordAccessor
  isExternal: false
  name: NewItem(HealthRecordItem)
  nameWithType: HealthRecordAccessor.NewItem(HealthRecordItem)
  fullName: Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)
    name: NewItem
    nameWithType: HealthRecordAccessor.NewItem
    fullName: Microsoft.Health.HealthRecordAccessor.NewItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.HealthRecordItem
    name: HealthRecordItem
    nameWithType: HealthRecordItem
    fullName: Microsoft.Health.HealthRecordItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)
    name: NewItem
    nameWithType: HealthRecordAccessor.NewItem
    fullName: Microsoft.Health.HealthRecordAccessor.NewItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.HealthRecordItem
    name: HealthRecordItem
    nameWithType: HealthRecordItem
    fullName: Microsoft.Health.HealthRecordItem
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.ExplanationOfBenefits.#ctor*
  commentId: Overload:Microsoft.Health.ItemTypes.ExplanationOfBenefits.#ctor
  isExternal: false
  name: ExplanationOfBenefits
  nameWithType: ExplanationOfBenefits.ExplanationOfBenefits
  fullName: Microsoft.Health.ItemTypes.ExplanationOfBenefits.ExplanationOfBenefits
- uid: Microsoft.Health.HealthRecordAccessor
  commentId: T:Microsoft.Health.HealthRecordAccessor
  parent: Microsoft.Health
  isExternal: false
  name: HealthRecordAccessor
  nameWithType: HealthRecordAccessor
  fullName: Microsoft.Health.HealthRecordAccessor
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: Microsoft.Health.ItemTypes.HealthServiceDateTime
  commentId: T:Microsoft.Health.ItemTypes.HealthServiceDateTime
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: HealthServiceDateTime
  nameWithType: HealthServiceDateTime
  fullName: Microsoft.Health.ItemTypes.HealthServiceDateTime
- uid: Microsoft.Health.ItemTypes.PersonItem
  commentId: T:Microsoft.Health.ItemTypes.PersonItem
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: PersonItem
  nameWithType: PersonItem
  fullName: Microsoft.Health.ItemTypes.PersonItem
- uid: Microsoft.Health.ItemTypes.Organization
  commentId: T:Microsoft.Health.ItemTypes.Organization
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: Organization
  nameWithType: Organization
  fullName: Microsoft.Health.ItemTypes.Organization
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.ItemTypes.CodableValue
  commentId: T:Microsoft.Health.ItemTypes.CodableValue
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: CodableValue
  nameWithType: CodableValue
  fullName: Microsoft.Health.ItemTypes.CodableValue
- uid: Microsoft.Health.ItemTypes.ClaimAmounts
  commentId: T:Microsoft.Health.ItemTypes.ClaimAmounts
  parent: Microsoft.Health.ItemTypes
  isExternal: false
  name: ClaimAmounts
  nameWithType: ClaimAmounts
  fullName: Microsoft.Health.ItemTypes.ClaimAmounts
- uid: System.Collections.Generic.IEnumerable{Microsoft.Health.ItemTypes.Service}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.Health.ItemTypes.Service}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Service>
  nameWithType: IEnumerable<Service>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Health.ItemTypes.Service>
  nameWithType.vb: IEnumerable(Of Service)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Health.ItemTypes.Service)
  name.vb: IEnumerable(Of Service)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.ItemTypes.Service
    name: Service
    nameWithType: Service
    fullName: Microsoft.Health.ItemTypes.Service
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.ItemTypes.Service
    name: Service
    nameWithType: Service
    fullName: Microsoft.Health.ItemTypes.Service
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Microsoft.Health.HealthRecordItem.ParseXml(System.Xml.XPath.IXPathNavigable)
  commentId: M:Microsoft.Health.HealthRecordItem.ParseXml(System.Xml.XPath.IXPathNavigable)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: true
  name: ParseXml(IXPathNavigable)
  nameWithType: HealthRecordItem.ParseXml(IXPathNavigable)
  fullName: Microsoft.Health.HealthRecordItem.ParseXml(System.Xml.XPath.IXPathNavigable)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.ParseXml(System.Xml.XPath.IXPathNavigable)
    name: ParseXml
    nameWithType: HealthRecordItem.ParseXml
    fullName: Microsoft.Health.HealthRecordItem.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.IXPathNavigable
    name: IXPathNavigable
    nameWithType: IXPathNavigable
    fullName: System.Xml.XPath.IXPathNavigable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.ParseXml(System.Xml.XPath.IXPathNavigable)
    name: ParseXml
    nameWithType: HealthRecordItem.ParseXml
    fullName: Microsoft.Health.HealthRecordItem.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.IXPathNavigable
    name: IXPathNavigable
    nameWithType: IXPathNavigable
    fullName: System.Xml.XPath.IXPathNavigable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.ExplanationOfBenefits.ParseXml*
  commentId: Overload:Microsoft.Health.ItemTypes.ExplanationOfBenefits.ParseXml
  isExternal: false
  name: ParseXml
  nameWithType: ExplanationOfBenefits.ParseXml
  fullName: Microsoft.Health.ItemTypes.ExplanationOfBenefits.ParseXml
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
- uid: System.Xml.XPath.IXPathNavigable
  commentId: T:System.Xml.XPath.IXPathNavigable
  parent: System.Xml.XPath
  isExternal: true
  name: IXPathNavigable
  nameWithType: IXPathNavigable
  fullName: System.Xml.XPath.IXPathNavigable
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: false
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: Microsoft.Health.ItemTypes.ExplanationOfBenefits.DateSubmitted
  commentId: P:Microsoft.Health.ItemTypes.ExplanationOfBenefits.DateSubmitted
- uid: Microsoft.Health.ItemTypes.ExplanationOfBenefits.Patient
  commentId: P:Microsoft.Health.ItemTypes.ExplanationOfBenefits.Patient
- uid: Microsoft.Health.ItemTypes.ExplanationOfBenefits.Plan
  commentId: P:Microsoft.Health.ItemTypes.ExplanationOfBenefits.Plan
- uid: Microsoft.Health.ItemTypes.ExplanationOfBenefits.MemberId
  commentId: P:Microsoft.Health.ItemTypes.ExplanationOfBenefits.MemberId
- uid: Microsoft.Health.ItemTypes.ExplanationOfBenefits.ClaimType
  commentId: P:Microsoft.Health.ItemTypes.ExplanationOfBenefits.ClaimType
- uid: Microsoft.Health.ItemTypes.ExplanationOfBenefits.ClaimId
  commentId: P:Microsoft.Health.ItemTypes.ExplanationOfBenefits.ClaimId
- uid: Microsoft.Health.ItemTypes.ExplanationOfBenefits.SubmittedBy
  commentId: P:Microsoft.Health.ItemTypes.ExplanationOfBenefits.SubmittedBy
- uid: Microsoft.Health.ItemTypes.ExplanationOfBenefits.Provider
  commentId: P:Microsoft.Health.ItemTypes.ExplanationOfBenefits.Provider
- uid: Microsoft.Health.ItemTypes.ExplanationOfBenefits.Currency
  commentId: P:Microsoft.Health.ItemTypes.ExplanationOfBenefits.Currency
- uid: Microsoft.Health.ItemTypes.ExplanationOfBenefits.ClaimTotals
  commentId: P:Microsoft.Health.ItemTypes.ExplanationOfBenefits.ClaimTotals
- uid: Microsoft.Health.ItemTypes.ExplanationOfBenefits.Services
  commentId: P:Microsoft.Health.ItemTypes.ExplanationOfBenefits.Services
- uid: Microsoft.Health.HealthRecordItem.WriteXml(System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.HealthRecordItem.WriteXml(System.Xml.XmlWriter)
  parent: Microsoft.Health.HealthRecordItem
  isExternal: true
  name: WriteXml(XmlWriter)
  nameWithType: HealthRecordItem.WriteXml(XmlWriter)
  fullName: Microsoft.Health.HealthRecordItem.WriteXml(System.Xml.XmlWriter)
  spec.csharp:
  - uid: Microsoft.Health.HealthRecordItem.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItem.WriteXml
    fullName: Microsoft.Health.HealthRecordItem.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.HealthRecordItem.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: HealthRecordItem.WriteXml
    fullName: Microsoft.Health.HealthRecordItem.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.ExplanationOfBenefits.WriteXml*
  commentId: Overload:Microsoft.Health.ItemTypes.ExplanationOfBenefits.WriteXml
  isExternal: false
  name: WriteXml
  nameWithType: ExplanationOfBenefits.WriteXml
  fullName: Microsoft.Health.ItemTypes.ExplanationOfBenefits.WriteXml
- uid: Microsoft.Health.HealthRecordItemSerializationException
  commentId: T:Microsoft.Health.HealthRecordItemSerializationException
  isExternal: false
  name: HealthRecordItemSerializationException
  nameWithType: HealthRecordItemSerializationException
  fullName: Microsoft.Health.HealthRecordItemSerializationException
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: Microsoft.Health.ItemTypes.ExplanationOfBenefits.DateSubmitted*
  commentId: Overload:Microsoft.Health.ItemTypes.ExplanationOfBenefits.DateSubmitted
  isExternal: false
  name: DateSubmitted
  nameWithType: ExplanationOfBenefits.DateSubmitted
  fullName: Microsoft.Health.ItemTypes.ExplanationOfBenefits.DateSubmitted
- uid: Microsoft.Health.ItemTypes.ExplanationOfBenefits.Patient*
  commentId: Overload:Microsoft.Health.ItemTypes.ExplanationOfBenefits.Patient
  isExternal: false
  name: Patient
  nameWithType: ExplanationOfBenefits.Patient
  fullName: Microsoft.Health.ItemTypes.ExplanationOfBenefits.Patient
- uid: Microsoft.Health.ItemTypes.ExplanationOfBenefits.RelationshipToMember*
  commentId: Overload:Microsoft.Health.ItemTypes.ExplanationOfBenefits.RelationshipToMember
  isExternal: false
  name: RelationshipToMember
  nameWithType: ExplanationOfBenefits.RelationshipToMember
  fullName: Microsoft.Health.ItemTypes.ExplanationOfBenefits.RelationshipToMember
- uid: Microsoft.Health.ItemTypes.ExplanationOfBenefits.Plan*
  commentId: Overload:Microsoft.Health.ItemTypes.ExplanationOfBenefits.Plan
  isExternal: false
  name: Plan
  nameWithType: ExplanationOfBenefits.Plan
  fullName: Microsoft.Health.ItemTypes.ExplanationOfBenefits.Plan
- uid: Microsoft.Health.ItemTypes.ExplanationOfBenefits.GroupId*
  commentId: Overload:Microsoft.Health.ItemTypes.ExplanationOfBenefits.GroupId
  isExternal: false
  name: GroupId
  nameWithType: ExplanationOfBenefits.GroupId
  fullName: Microsoft.Health.ItemTypes.ExplanationOfBenefits.GroupId
- uid: Microsoft.Health.ItemTypes.ExplanationOfBenefits.MemberId*
  commentId: Overload:Microsoft.Health.ItemTypes.ExplanationOfBenefits.MemberId
  isExternal: false
  name: MemberId
  nameWithType: ExplanationOfBenefits.MemberId
  fullName: Microsoft.Health.ItemTypes.ExplanationOfBenefits.MemberId
- uid: Microsoft.Health.ItemTypes.ExplanationOfBenefits.ClaimType*
  commentId: Overload:Microsoft.Health.ItemTypes.ExplanationOfBenefits.ClaimType
  isExternal: false
  name: ClaimType
  nameWithType: ExplanationOfBenefits.ClaimType
  fullName: Microsoft.Health.ItemTypes.ExplanationOfBenefits.ClaimType
- uid: Microsoft.Health.ItemTypes.ExplanationOfBenefits.ClaimId*
  commentId: Overload:Microsoft.Health.ItemTypes.ExplanationOfBenefits.ClaimId
  isExternal: false
  name: ClaimId
  nameWithType: ExplanationOfBenefits.ClaimId
  fullName: Microsoft.Health.ItemTypes.ExplanationOfBenefits.ClaimId
- uid: Microsoft.Health.ItemTypes.ExplanationOfBenefits.SubmittedBy*
  commentId: Overload:Microsoft.Health.ItemTypes.ExplanationOfBenefits.SubmittedBy
  isExternal: false
  name: SubmittedBy
  nameWithType: ExplanationOfBenefits.SubmittedBy
  fullName: Microsoft.Health.ItemTypes.ExplanationOfBenefits.SubmittedBy
- uid: Microsoft.Health.ItemTypes.ExplanationOfBenefits.Provider*
  commentId: Overload:Microsoft.Health.ItemTypes.ExplanationOfBenefits.Provider
  isExternal: false
  name: Provider
  nameWithType: ExplanationOfBenefits.Provider
  fullName: Microsoft.Health.ItemTypes.ExplanationOfBenefits.Provider
- uid: Microsoft.Health.ItemTypes.ExplanationOfBenefits.Currency*
  commentId: Overload:Microsoft.Health.ItemTypes.ExplanationOfBenefits.Currency
  isExternal: false
  name: Currency
  nameWithType: ExplanationOfBenefits.Currency
  fullName: Microsoft.Health.ItemTypes.ExplanationOfBenefits.Currency
- uid: Microsoft.Health.ItemTypes.ExplanationOfBenefits.ClaimTotals*
  commentId: Overload:Microsoft.Health.ItemTypes.ExplanationOfBenefits.ClaimTotals
  isExternal: false
  name: ClaimTotals
  nameWithType: ExplanationOfBenefits.ClaimTotals
  fullName: Microsoft.Health.ItemTypes.ExplanationOfBenefits.ClaimTotals
- uid: Microsoft.Health.ItemTypes.ExplanationOfBenefits.Services*
  commentId: Overload:Microsoft.Health.ItemTypes.ExplanationOfBenefits.Services
  isExternal: false
  name: Services
  nameWithType: ExplanationOfBenefits.Services
  fullName: Microsoft.Health.ItemTypes.ExplanationOfBenefits.Services
- uid: System.Collections.ObjectModel.Collection{Microsoft.Health.ItemTypes.Service}
  commentId: T:System.Collections.ObjectModel.Collection{Microsoft.Health.ItemTypes.Service}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<Service>
  nameWithType: Collection<Service>
  fullName: System.Collections.ObjectModel.Collection<Microsoft.Health.ItemTypes.Service>
  nameWithType.vb: Collection(Of Service)
  fullName.vb: System.Collections.ObjectModel.Collection(Of Microsoft.Health.ItemTypes.Service)
  name.vb: Collection(Of Service)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.ItemTypes.Service
    name: Service
    nameWithType: Service
    fullName: Microsoft.Health.ItemTypes.Service
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.ItemTypes.Service
    name: Service
    nameWithType: Service
    fullName: Microsoft.Health.ItemTypes.Service
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1
  commentId: T:System.Collections.ObjectModel.Collection`1
  isExternal: true
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  nameWithType.vb: Collection(Of T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T)
  name.vb: Collection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.ItemTypes.ExplanationOfBenefits.ToString*
  commentId: Overload:Microsoft.Health.ItemTypes.ExplanationOfBenefits.ToString
  isExternal: false
  name: ToString
  nameWithType: ExplanationOfBenefits.ToString
  fullName: Microsoft.Health.ItemTypes.ExplanationOfBenefits.ToString
