### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.PhraseAnalyzer.SentenceBuilder
  commentId: T:Microsoft.Health.PhraseAnalyzer.SentenceBuilder
  id: SentenceBuilder
  parent: Microsoft.Health.PhraseAnalyzer
  children:
  - Microsoft.Health.PhraseAnalyzer.SentenceBuilder.#ctor
  - Microsoft.Health.PhraseAnalyzer.SentenceBuilder.#ctor(System.Char)
  - Microsoft.Health.PhraseAnalyzer.SentenceBuilder.#ctor(System.Char,System.Text.StringBuilder)
  - Microsoft.Health.PhraseAnalyzer.SentenceBuilder.#ctor(System.Text.StringBuilder)
  - Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Add(Microsoft.Health.PhraseAnalyzer.SentenceBuilder,System.String)
  - Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Append(Microsoft.Health.PhraseAnalyzer.AnalyzerMatchList)
  - Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Append(System.Collections.Generic.IEnumerable{System.String})
  - Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Append(System.Collections.Generic.IList{System.String})
  - Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Append(System.Collections.Generic.IList{System.String},System.Int32,System.Int32)
  - Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Append(System.Object[])
  - Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Append(System.String)
  - Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Append(System.String,System.Object[])
  - Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Append(System.String[])
  - Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Buffer
  - Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Clear
  - Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Length
  - Microsoft.Health.PhraseAnalyzer.SentenceBuilder.op_Addition(Microsoft.Health.PhraseAnalyzer.SentenceBuilder,System.String)
  - Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Separator
  - Microsoft.Health.PhraseAnalyzer.SentenceBuilder.ToString
  langs:
  - csharp
  - vb
  name: SentenceBuilder
  nameWithType: SentenceBuilder
  fullName: Microsoft.Health.PhraseAnalyzer.SentenceBuilder
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/SentenceBuilder.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SentenceBuilder
    path: ../Microsoft.Health.Utility/search/PhraseAnalyzer/SentenceBuilder.cs
    startLine: 15
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: public class SentenceBuilder
    content.vb: Public Class SentenceBuilder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.#ctor
  commentId: M:Microsoft.Health.PhraseAnalyzer.SentenceBuilder.#ctor
  id: '#ctor'
  parent: Microsoft.Health.PhraseAnalyzer.SentenceBuilder
  langs:
  - csharp
  - vb
  name: SentenceBuilder()
  nameWithType: SentenceBuilder.SentenceBuilder()
  fullName: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.SentenceBuilder()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/SentenceBuilder.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.Utility/search/PhraseAnalyzer/SentenceBuilder.cs
    startLine: 23
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: public SentenceBuilder()
    content.vb: Public Sub New
  overload: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.#ctor(System.Char)
  commentId: M:Microsoft.Health.PhraseAnalyzer.SentenceBuilder.#ctor(System.Char)
  id: '#ctor(System.Char)'
  parent: Microsoft.Health.PhraseAnalyzer.SentenceBuilder
  langs:
  - csharp
  - vb
  name: SentenceBuilder(Char)
  nameWithType: SentenceBuilder.SentenceBuilder(Char)
  fullName: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.SentenceBuilder(System.Char)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/SentenceBuilder.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.Utility/search/PhraseAnalyzer/SentenceBuilder.cs
    startLine: 32
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: public SentenceBuilder(char separator)
    content.vb: Public Sub New(separator As Char)
    parameters:
    - id: separator
      type: System.Char
      description: ''
  overload: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.#ctor(System.Text.StringBuilder)
  commentId: M:Microsoft.Health.PhraseAnalyzer.SentenceBuilder.#ctor(System.Text.StringBuilder)
  id: '#ctor(System.Text.StringBuilder)'
  parent: Microsoft.Health.PhraseAnalyzer.SentenceBuilder
  langs:
  - csharp
  - vb
  name: SentenceBuilder(StringBuilder)
  nameWithType: SentenceBuilder.SentenceBuilder(StringBuilder)
  fullName: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.SentenceBuilder(System.Text.StringBuilder)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/SentenceBuilder.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.Utility/search/PhraseAnalyzer/SentenceBuilder.cs
    startLine: 41
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: public SentenceBuilder(StringBuilder buffer)
    content.vb: Public Sub New(buffer As StringBuilder)
    parameters:
    - id: buffer
      type: System.Text.StringBuilder
      description: ''
  overload: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.#ctor(System.Char,System.Text.StringBuilder)
  commentId: M:Microsoft.Health.PhraseAnalyzer.SentenceBuilder.#ctor(System.Char,System.Text.StringBuilder)
  id: '#ctor(System.Char,System.Text.StringBuilder)'
  parent: Microsoft.Health.PhraseAnalyzer.SentenceBuilder
  langs:
  - csharp
  - vb
  name: SentenceBuilder(Char, StringBuilder)
  nameWithType: SentenceBuilder.SentenceBuilder(Char, StringBuilder)
  fullName: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.SentenceBuilder(System.Char, System.Text.StringBuilder)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/SentenceBuilder.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.Utility/search/PhraseAnalyzer/SentenceBuilder.cs
    startLine: 51
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: public SentenceBuilder(char separator, StringBuilder buffer)
    content.vb: Public Sub New(separator As Char, buffer As StringBuilder)
    parameters:
    - id: separator
      type: System.Char
      description: ''
    - id: buffer
      type: System.Text.StringBuilder
      description: ''
  overload: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Separator
  commentId: P:Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Separator
  id: Separator
  parent: Microsoft.Health.PhraseAnalyzer.SentenceBuilder
  langs:
  - csharp
  - vb
  name: Separator
  nameWithType: SentenceBuilder.Separator
  fullName: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Separator
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/SentenceBuilder.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Separator
    path: ../Microsoft.Health.Utility/search/PhraseAnalyzer/SentenceBuilder.cs
    startLine: 66
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: public char Separator { get; set; }
    content.vb: Public Property Separator As Char
    parameters: []
    return:
      type: System.Char
  overload: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Separator*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Length
  commentId: P:Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Length
  id: Length
  parent: Microsoft.Health.PhraseAnalyzer.SentenceBuilder
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: SentenceBuilder.Length
  fullName: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Length
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/SentenceBuilder.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Length
    path: ../Microsoft.Health.Utility/search/PhraseAnalyzer/SentenceBuilder.cs
    startLine: 81
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: public int Length { get; }
    content.vb: Public ReadOnly Property Length As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Length*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Buffer
  commentId: P:Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Buffer
  id: Buffer
  parent: Microsoft.Health.PhraseAnalyzer.SentenceBuilder
  langs:
  - csharp
  - vb
  name: Buffer
  nameWithType: SentenceBuilder.Buffer
  fullName: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Buffer
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/SentenceBuilder.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Buffer
    path: ../Microsoft.Health.Utility/search/PhraseAnalyzer/SentenceBuilder.cs
    startLine: 92
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: public StringBuilder Buffer { get; }
    content.vb: Public ReadOnly Property Buffer As StringBuilder
    parameters: []
    return:
      type: System.Text.StringBuilder
  overload: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Buffer*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Append(System.String)
  commentId: M:Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Append(System.String)
  id: Append(System.String)
  parent: Microsoft.Health.PhraseAnalyzer.SentenceBuilder
  langs:
  - csharp
  - vb
  name: Append(String)
  nameWithType: SentenceBuilder.Append(String)
  fullName: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Append(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/SentenceBuilder.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Append
    path: ../Microsoft.Health.Utility/search/PhraseAnalyzer/SentenceBuilder.cs
    startLine: 104
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: public void Append(string phrase)
    content.vb: Public Sub Append(phrase As String)
    parameters:
    - id: phrase
      type: System.String
      description: ''
  overload: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Append*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Append(System.Collections.Generic.IList{System.String})
  commentId: M:Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Append(System.Collections.Generic.IList{System.String})
  id: Append(System.Collections.Generic.IList{System.String})
  parent: Microsoft.Health.PhraseAnalyzer.SentenceBuilder
  langs:
  - csharp
  - vb
  name: Append(IList<String>)
  nameWithType: SentenceBuilder.Append(IList<String>)
  fullName: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Append(System.Collections.Generic.IList<System.String>)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/SentenceBuilder.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Append
    path: ../Microsoft.Health.Utility/search/PhraseAnalyzer/SentenceBuilder.cs
    startLine: 120
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: public void Append(IList<string> phrase)
    content.vb: Public Sub Append(phrase As IList(Of String))
    parameters:
    - id: phrase
      type: System.Collections.Generic.IList{System.String}
      description: ''
  overload: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Append*
  nameWithType.vb: SentenceBuilder.Append(IList(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Append(System.Collections.Generic.IList(Of System.String))
  name.vb: Append(IList(Of String))
- uid: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Append(System.Collections.Generic.IList{System.String},System.Int32,System.Int32)
  commentId: M:Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Append(System.Collections.Generic.IList{System.String},System.Int32,System.Int32)
  id: Append(System.Collections.Generic.IList{System.String},System.Int32,System.Int32)
  parent: Microsoft.Health.PhraseAnalyzer.SentenceBuilder
  langs:
  - csharp
  - vb
  name: Append(IList<String>, Int32, Int32)
  nameWithType: SentenceBuilder.Append(IList<String>, Int32, Int32)
  fullName: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Append(System.Collections.Generic.IList<System.String>, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/SentenceBuilder.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Append
    path: ../Microsoft.Health.Utility/search/PhraseAnalyzer/SentenceBuilder.cs
    startLine: 131
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: public void Append(IList<string> phrase, int startAt, int count)
    content.vb: Public Sub Append(phrase As IList(Of String), startAt As Integer, count As Integer)
    parameters:
    - id: phrase
      type: System.Collections.Generic.IList{System.String}
      description: ''
    - id: startAt
      type: System.Int32
      description: ''
    - id: count
      type: System.Int32
      description: ''
  overload: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Append*
  nameWithType.vb: SentenceBuilder.Append(IList(Of String), Int32, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Append(System.Collections.Generic.IList(Of System.String), System.Int32, System.Int32)
  name.vb: Append(IList(Of String), Int32, Int32)
- uid: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Append(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Append(System.Collections.Generic.IEnumerable{System.String})
  id: Append(System.Collections.Generic.IEnumerable{System.String})
  parent: Microsoft.Health.PhraseAnalyzer.SentenceBuilder
  langs:
  - csharp
  - vb
  name: Append(IEnumerable<String>)
  nameWithType: SentenceBuilder.Append(IEnumerable<String>)
  fullName: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Append(System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/SentenceBuilder.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Append
    path: ../Microsoft.Health.Utility/search/PhraseAnalyzer/SentenceBuilder.cs
    startLine: 153
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: public void Append(IEnumerable<string> phrase)
    content.vb: Public Sub Append(phrase As IEnumerable(Of String))
    parameters:
    - id: phrase
      type: System.Collections.Generic.IEnumerable{System.String}
      description: ''
  overload: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Append*
  nameWithType.vb: SentenceBuilder.Append(IEnumerable(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Append(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: Append(IEnumerable(Of String))
- uid: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Append(System.String[])
  commentId: M:Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Append(System.String[])
  id: Append(System.String[])
  parent: Microsoft.Health.PhraseAnalyzer.SentenceBuilder
  langs:
  - csharp
  - vb
  name: Append(String[])
  nameWithType: SentenceBuilder.Append(String[])
  fullName: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Append(System.String[])
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/SentenceBuilder.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Append
    path: ../Microsoft.Health.Utility/search/PhraseAnalyzer/SentenceBuilder.cs
    startLine: 175
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: public void Append(string[] phrase)
    content.vb: Public Sub Append(phrase As String())
    parameters:
    - id: phrase
      type: System.String[]
      description: ''
  overload: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Append*
  nameWithType.vb: SentenceBuilder.Append(String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Append(System.String())
  name.vb: Append(String())
- uid: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Append(System.Object[])
  commentId: M:Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Append(System.Object[])
  id: Append(System.Object[])
  parent: Microsoft.Health.PhraseAnalyzer.SentenceBuilder
  langs:
  - csharp
  - vb
  name: Append(Object[])
  nameWithType: SentenceBuilder.Append(Object[])
  fullName: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Append(System.Object[])
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/SentenceBuilder.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Append
    path: ../Microsoft.Health.Utility/search/PhraseAnalyzer/SentenceBuilder.cs
    startLine: 197
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: public void Append(params object[] words)
    content.vb: Public Sub Append(ParamArray words As Object())
    parameters:
    - id: words
      type: System.Object[]
      description: ''
  overload: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Append*
  nameWithType.vb: SentenceBuilder.Append(Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Append(System.Object())
  name.vb: Append(Object())
- uid: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Append(System.String,System.Object[])
  commentId: M:Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Append(System.String,System.Object[])
  id: Append(System.String,System.Object[])
  parent: Microsoft.Health.PhraseAnalyzer.SentenceBuilder
  langs:
  - csharp
  - vb
  name: Append(String, Object[])
  nameWithType: SentenceBuilder.Append(String, Object[])
  fullName: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Append(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/SentenceBuilder.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Append
    path: ../Microsoft.Health.Utility/search/PhraseAnalyzer/SentenceBuilder.cs
    startLine: 220
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: public void Append(string format, params object[] words)
    content.vb: Public Sub Append(format As String, ParamArray words As Object())
    parameters:
    - id: format
      type: System.String
      description: ''
    - id: words
      type: System.Object[]
      description: ''
  overload: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Append*
  nameWithType.vb: SentenceBuilder.Append(String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Append(System.String, System.Object())
  name.vb: Append(String, Object())
- uid: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Append(Microsoft.Health.PhraseAnalyzer.AnalyzerMatchList)
  commentId: M:Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Append(Microsoft.Health.PhraseAnalyzer.AnalyzerMatchList)
  id: Append(Microsoft.Health.PhraseAnalyzer.AnalyzerMatchList)
  parent: Microsoft.Health.PhraseAnalyzer.SentenceBuilder
  langs:
  - csharp
  - vb
  name: Append(AnalyzerMatchList)
  nameWithType: SentenceBuilder.Append(AnalyzerMatchList)
  fullName: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Append(Microsoft.Health.PhraseAnalyzer.AnalyzerMatchList)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/SentenceBuilder.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Append
    path: ../Microsoft.Health.Utility/search/PhraseAnalyzer/SentenceBuilder.cs
    startLine: 234
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: public void Append(AnalyzerMatchList segments)
    content.vb: Public Sub Append(segments As AnalyzerMatchList)
    parameters:
    - id: segments
      type: Microsoft.Health.PhraseAnalyzer.AnalyzerMatchList
      description: ''
  overload: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Append*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Clear
  commentId: M:Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Clear
  id: Clear
  parent: Microsoft.Health.PhraseAnalyzer.SentenceBuilder
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: SentenceBuilder.Clear()
  fullName: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Clear()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/SentenceBuilder.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Clear
    path: ../Microsoft.Health.Utility/search/PhraseAnalyzer/SentenceBuilder.cs
    startLine: 250
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Clear*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.ToString
  commentId: M:Microsoft.Health.PhraseAnalyzer.SentenceBuilder.ToString
  id: ToString
  parent: Microsoft.Health.PhraseAnalyzer.SentenceBuilder
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SentenceBuilder.ToString()
  fullName: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.ToString()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/SentenceBuilder.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ToString
    path: ../Microsoft.Health.Utility/search/PhraseAnalyzer/SentenceBuilder.cs
    startLine: 259
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  summary: "\n\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: ''
  overridden: System.Object.ToString
  overload: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.op_Addition(Microsoft.Health.PhraseAnalyzer.SentenceBuilder,System.String)
  commentId: M:Microsoft.Health.PhraseAnalyzer.SentenceBuilder.op_Addition(Microsoft.Health.PhraseAnalyzer.SentenceBuilder,System.String)
  id: op_Addition(Microsoft.Health.PhraseAnalyzer.SentenceBuilder,System.String)
  parent: Microsoft.Health.PhraseAnalyzer.SentenceBuilder
  langs:
  - csharp
  - vb
  name: Addition(SentenceBuilder, String)
  nameWithType: SentenceBuilder.Addition(SentenceBuilder, String)
  fullName: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Addition(Microsoft.Health.PhraseAnalyzer.SentenceBuilder, System.String)
  type: Operator
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/SentenceBuilder.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: op_Addition
    path: ../Microsoft.Health.Utility/search/PhraseAnalyzer/SentenceBuilder.cs
    startLine: 264
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  syntax:
    content: public static SentenceBuilder operator +(SentenceBuilder builder, string phrase)
    content.vb: Public Shared Operator +(builder As SentenceBuilder, phrase As String) As SentenceBuilder
    parameters:
    - id: builder
      type: Microsoft.Health.PhraseAnalyzer.SentenceBuilder
    - id: phrase
      type: System.String
    return:
      type: Microsoft.Health.PhraseAnalyzer.SentenceBuilder
  overload: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Add(Microsoft.Health.PhraseAnalyzer.SentenceBuilder,System.String)
  commentId: M:Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Add(Microsoft.Health.PhraseAnalyzer.SentenceBuilder,System.String)
  id: Add(Microsoft.Health.PhraseAnalyzer.SentenceBuilder,System.String)
  parent: Microsoft.Health.PhraseAnalyzer.SentenceBuilder
  langs:
  - csharp
  - vb
  name: Add(SentenceBuilder, String)
  nameWithType: SentenceBuilder.Add(SentenceBuilder, String)
  fullName: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Add(Microsoft.Health.PhraseAnalyzer.SentenceBuilder, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/PhraseAnalyzer/SentenceBuilder.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Add
    path: ../Microsoft.Health.Utility/search/PhraseAnalyzer/SentenceBuilder.cs
    startLine: 269
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.PhraseAnalyzer
  syntax:
    content: public static SentenceBuilder Add(SentenceBuilder builder, string phrase)
    content.vb: Public Shared Function Add(builder As SentenceBuilder, phrase As String) As SentenceBuilder
    parameters:
    - id: builder
      type: Microsoft.Health.PhraseAnalyzer.SentenceBuilder
    - id: phrase
      type: System.String
    return:
      type: Microsoft.Health.PhraseAnalyzer.SentenceBuilder
  overload: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Add*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Health.PhraseAnalyzer
  commentId: N:Microsoft.Health.PhraseAnalyzer
  isExternal: false
  name: Microsoft.Health.PhraseAnalyzer
  nameWithType: Microsoft.Health.PhraseAnalyzer
  fullName: Microsoft.Health.PhraseAnalyzer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<SentenceBuilder>()
  nameWithType: TypeHelper.ValueOrDbNull<SentenceBuilder>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.PhraseAnalyzer.SentenceBuilder>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of SentenceBuilder)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.PhraseAnalyzer.SentenceBuilder)()
  name.vb: ValueOrDbNull(Of SentenceBuilder)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<SentenceBuilder>
    nameWithType: TypeHelper.ValueOrDbNull<SentenceBuilder>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.PhraseAnalyzer.SentenceBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of SentenceBuilder)
    nameWithType: TypeHelper.ValueOrDbNull(Of SentenceBuilder)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.PhraseAnalyzer.SentenceBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.#ctor*
  commentId: Overload:Microsoft.Health.PhraseAnalyzer.SentenceBuilder.#ctor
  isExternal: false
  name: SentenceBuilder
  nameWithType: SentenceBuilder.SentenceBuilder
  fullName: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.SentenceBuilder
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Text.StringBuilder
  commentId: T:System.Text.StringBuilder
  parent: System.Text
  isExternal: true
  name: StringBuilder
  nameWithType: StringBuilder
  fullName: System.Text.StringBuilder
- uid: System.Text
  commentId: N:System.Text
  isExternal: false
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
- uid: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Separator*
  commentId: Overload:Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Separator
  isExternal: false
  name: Separator
  nameWithType: SentenceBuilder.Separator
  fullName: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Separator
- uid: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Length*
  commentId: Overload:Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Length
  isExternal: false
  name: Length
  nameWithType: SentenceBuilder.Length
  fullName: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Length
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Buffer*
  commentId: Overload:Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Buffer
  isExternal: false
  name: Buffer
  nameWithType: SentenceBuilder.Buffer
  fullName: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Buffer
- uid: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Append*
  commentId: Overload:Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Append
  isExternal: false
  name: Append
  nameWithType: SentenceBuilder.Append
  fullName: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Append
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Object[]
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.Health.PhraseAnalyzer.AnalyzerMatchList
  commentId: T:Microsoft.Health.PhraseAnalyzer.AnalyzerMatchList
  parent: Microsoft.Health.PhraseAnalyzer
  isExternal: false
  name: AnalyzerMatchList
  nameWithType: AnalyzerMatchList
  fullName: Microsoft.Health.PhraseAnalyzer.AnalyzerMatchList
- uid: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Clear*
  commentId: Overload:Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Clear
  isExternal: false
  name: Clear
  nameWithType: SentenceBuilder.Clear
  fullName: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Clear
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.ToString*
  commentId: Overload:Microsoft.Health.PhraseAnalyzer.SentenceBuilder.ToString
  isExternal: false
  name: ToString
  nameWithType: SentenceBuilder.ToString
  fullName: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.ToString
- uid: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.op_Addition*
  commentId: Overload:Microsoft.Health.PhraseAnalyzer.SentenceBuilder.op_Addition
  isExternal: false
  name: Addition
  nameWithType: SentenceBuilder.Addition
  fullName: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Addition
- uid: Microsoft.Health.PhraseAnalyzer.SentenceBuilder
  commentId: T:Microsoft.Health.PhraseAnalyzer.SentenceBuilder
  parent: Microsoft.Health.PhraseAnalyzer
  isExternal: false
  name: SentenceBuilder
  nameWithType: SentenceBuilder
  fullName: Microsoft.Health.PhraseAnalyzer.SentenceBuilder
- uid: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Add*
  commentId: Overload:Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Add
  isExternal: false
  name: Add
  nameWithType: SentenceBuilder.Add
  fullName: Microsoft.Health.PhraseAnalyzer.SentenceBuilder.Add
