### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo
  commentId: T:Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo
  id: NotificationAuthenticationSharedKeyInfo
  parent: Microsoft.Health.Events
  children:
  - Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.#ctor
  - Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.#ctor(System.String)
  - Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.#ctor(System.String,System.Byte[])
  - Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.#ctor(System.String,System.String)
  - Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.GenerateKey
  - Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.Key
  - Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.ParseXml(System.Xml.XPath.XPathNavigator)
  - Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.Version
  - Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.WriteXml(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: NotificationAuthenticationSharedKeyInfo
  nameWithType: NotificationAuthenticationSharedKeyInfo
  fullName: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo
  type: Class
  source:
    remote:
      path: Microsoft.Health/Eventing/NotificationAuthenticationSharedKeyInfo.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: NotificationAuthenticationSharedKeyInfo
    path: ../Microsoft.Health/Eventing/NotificationAuthenticationSharedKeyInfo.cs
    startLine: 17
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Events
  summary: "\nContains the information required to implement shared key authentication for HealthVault eventing.\n"
  example: []
  syntax:
    content: public class NotificationAuthenticationSharedKeyInfo
    content.vb: Public Class NotificationAuthenticationSharedKeyInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.#ctor
  commentId: M:Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.#ctor
  id: '#ctor'
  parent: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo
  langs:
  - csharp
  - vb
  name: NotificationAuthenticationSharedKeyInfo()
  nameWithType: NotificationAuthenticationSharedKeyInfo.NotificationAuthenticationSharedKeyInfo()
  fullName: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.NotificationAuthenticationSharedKeyInfo()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/Eventing/NotificationAuthenticationSharedKeyInfo.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health/Eventing/NotificationAuthenticationSharedKeyInfo.cs
    startLine: 22
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Events
  summary: "\nCreate an empty instance of the <xref href=\"Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo\" data-throw-if-not-resolved=\"false\"></xref> type.\n"
  example: []
  syntax:
    content: public NotificationAuthenticationSharedKeyInfo()
    content.vb: Public Sub New
  overload: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.#ctor(System.String)
  commentId: M:Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo
  langs:
  - csharp
  - vb
  name: NotificationAuthenticationSharedKeyInfo(String)
  nameWithType: NotificationAuthenticationSharedKeyInfo.NotificationAuthenticationSharedKeyInfo(String)
  fullName: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.NotificationAuthenticationSharedKeyInfo(System.String)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/Eventing/NotificationAuthenticationSharedKeyInfo.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health/Eventing/NotificationAuthenticationSharedKeyInfo.cs
    startLine: 39
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Events
  summary: "\nCreate an instance of the <xref href=\"Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo\" data-throw-if-not-resolved=\"false\"></xref> type, specifying the\nversion to use.\n"
  remarks: "\nA random 64-byte key will be generated by the constructor. An application should store this key to \nbe used to validate the notification source. \n"
  example: []
  syntax:
    content: public NotificationAuthenticationSharedKeyInfo(string version)
    content.vb: Public Sub New(version As String)
    parameters:
    - id: version
      type: System.String
      description: The version associated with the key.
  overload: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">version</span> is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.#ctor(System.String,System.Byte[])
  commentId: M:Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.#ctor(System.String,System.Byte[])
  id: '#ctor(System.String,System.Byte[])'
  parent: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo
  langs:
  - csharp
  - vb
  name: NotificationAuthenticationSharedKeyInfo(String, Byte[])
  nameWithType: NotificationAuthenticationSharedKeyInfo.NotificationAuthenticationSharedKeyInfo(String, Byte[])
  fullName: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.NotificationAuthenticationSharedKeyInfo(System.String, System.Byte[])
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/Eventing/NotificationAuthenticationSharedKeyInfo.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health/Eventing/NotificationAuthenticationSharedKeyInfo.cs
    startLine: 61
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Events
  summary: "\nCreate an instance of the <xref href=\"Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo\" data-throw-if-not-resolved=\"false\"></xref> type, specifying the\nkey and version to use.\n"
  example: []
  syntax:
    content: public NotificationAuthenticationSharedKeyInfo(string version, byte[] key)
    content.vb: Public Sub New(version As String, key As Byte())
    parameters:
    - id: version
      type: System.String
      description: The version associated with the key.
    - id: key
      type: System.Byte[]
      description: The key.
  overload: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">version</span> or <span class=\"paramref\">key</span> is <strong>null</strong>.\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">key</span> is not 64 bytes in length.\n"
  nameWithType.vb: NotificationAuthenticationSharedKeyInfo.NotificationAuthenticationSharedKeyInfo(String, Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.NotificationAuthenticationSharedKeyInfo(System.String, System.Byte())
  name.vb: NotificationAuthenticationSharedKeyInfo(String, Byte())
- uid: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.#ctor(System.String,System.String)
  commentId: M:Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo
  langs:
  - csharp
  - vb
  name: NotificationAuthenticationSharedKeyInfo(String, String)
  nameWithType: NotificationAuthenticationSharedKeyInfo.NotificationAuthenticationSharedKeyInfo(String, String)
  fullName: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.NotificationAuthenticationSharedKeyInfo(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/Eventing/NotificationAuthenticationSharedKeyInfo.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health/Eventing/NotificationAuthenticationSharedKeyInfo.cs
    startLine: 84
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Events
  summary: "\nCreate an instance of the <xref href=\"Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo\" data-throw-if-not-resolved=\"false\"></xref> type, specifying the\nkey and version to use.\n"
  example: []
  syntax:
    content: public NotificationAuthenticationSharedKeyInfo(string version, string keyBase64)
    content.vb: Public Sub New(version As String, keyBase64 As String)
    parameters:
    - id: version
      type: System.String
      description: The version associated with the key.
    - id: keyBase64
      type: System.String
      description: The base64-encoded key.
  overload: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">version</span> or <span class=\"paramref\">keyBase64</span> is <strong>null</strong>.\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">keyBase64</span> is not 64 bytes in length.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.Version
  commentId: P:Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.Version
  id: Version
  parent: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: NotificationAuthenticationSharedKeyInfo.Version
  fullName: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.Version
  type: Property
  source:
    remote:
      path: Microsoft.Health/Eventing/NotificationAuthenticationSharedKeyInfo.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Version
    path: ../Microsoft.Health/Eventing/NotificationAuthenticationSharedKeyInfo.cs
    startLine: 115
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Events
  summary: "\nA string representing the version of the key.\n"
  remarks: "\nThe version can only consist of the characters \"A-Z\", \"a-z\", \"0-9\", and \"-\".\n\nThe version of the key is passed with the notification in the request headers. The application\nthat processes this notification can use it to determine which key it should use to authenticate\nthe notification (the key is not passed as part of the notification).\n\nWhen an update is made to a\nsubscription notification deliveries may use either\nthe old key or the updated key to calculate the notification\npayload HMAC for a short period of time. The key version id is sent with the notification,\nallowing the app to determine which key was used to calculate\nthe notification payload HMAC.\n"
  example: []
  syntax:
    content: public string Version { get; set; }
    content.vb: Public Property Version As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.Version*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">value</span> is empty or contains illegal characters.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.Key
  commentId: P:Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.Key
  id: Key
  parent: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo
  langs:
  - csharp
  - vb
  name: Key
  nameWithType: NotificationAuthenticationSharedKeyInfo.Key
  fullName: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.Key
  type: Property
  source:
    remote:
      path: Microsoft.Health/Eventing/NotificationAuthenticationSharedKeyInfo.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Key
    path: ../Microsoft.Health/Eventing/NotificationAuthenticationSharedKeyInfo.cs
    startLine: 134
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Events
  summary: "\nThe key that is used for the operation. \n"
  example: []
  syntax:
    content: public byte[] Key { get; set; }
    content.vb: Public Property Key As Byte()
    parameters: []
    return:
      type: System.Byte[]
  overload: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.Key*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.GenerateKey
  commentId: M:Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.GenerateKey
  id: GenerateKey
  parent: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo
  langs:
  - csharp
  - vb
  name: GenerateKey()
  nameWithType: NotificationAuthenticationSharedKeyInfo.GenerateKey()
  fullName: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.GenerateKey()
  type: Method
  source:
    remote:
      path: Microsoft.Health/Eventing/NotificationAuthenticationSharedKeyInfo.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GenerateKey
    path: ../Microsoft.Health/Eventing/NotificationAuthenticationSharedKeyInfo.cs
    startLine: 145
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Events
  summary: "\nGenerate a 64 byte key and store it in the Key property.\n"
  example: []
  syntax:
    content: public void GenerateKey()
    content.vb: Public Sub GenerateKey
  overload: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.GenerateKey*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.WriteXml(System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.WriteXml(System.Xml.XmlWriter)
  id: WriteXml(System.Xml.XmlWriter)
  parent: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo
  langs:
  - csharp
  - vb
  name: WriteXml(XmlWriter)
  nameWithType: NotificationAuthenticationSharedKeyInfo.WriteXml(XmlWriter)
  fullName: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.WriteXml(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health/Eventing/NotificationAuthenticationSharedKeyInfo.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteXml
    path: ../Microsoft.Health/Eventing/NotificationAuthenticationSharedKeyInfo.cs
    startLine: 162
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Events
  summary: "\nWrite a representation of the NotificationAuthenticationSharedKeyInfo instance to XML.\n"
  example: []
  syntax:
    content: public void WriteXml(XmlWriter xmlWriter)
    content.vb: Public Sub WriteXml(xmlWriter As XmlWriter)
    parameters:
    - id: xmlWriter
      type: System.Xml.XmlWriter
      description: The XmlWriter.
  overload: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.WriteXml*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nThe <span class=\"paramref\">xmlWriter</span> is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.ParseXml(System.Xml.XPath.XPathNavigator)
  commentId: M:Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.ParseXml(System.Xml.XPath.XPathNavigator)
  id: ParseXml(System.Xml.XPath.XPathNavigator)
  parent: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo
  langs:
  - csharp
  - vb
  name: ParseXml(XPathNavigator)
  nameWithType: NotificationAuthenticationSharedKeyInfo.ParseXml(XPathNavigator)
  fullName: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.ParseXml(System.Xml.XPath.XPathNavigator)
  type: Method
  source:
    remote:
      path: Microsoft.Health/Eventing/NotificationAuthenticationSharedKeyInfo.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ParseXml
    path: ../Microsoft.Health/Eventing/NotificationAuthenticationSharedKeyInfo.cs
    startLine: 186
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health.Events
  summary: "\nPopulate the NotificationAuthenticationSharedKeyInfo instance from XML.\n"
  example: []
  syntax:
    content: public void ParseXml(XPathNavigator navigator)
    content.vb: Public Sub ParseXml(navigator As XPathNavigator)
    parameters:
    - id: navigator
      type: System.Xml.XPath.XPathNavigator
      description: The XPathNavigator.
  overload: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.ParseXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">navigator</span> parameter is <strong>null</strong>.\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">navigator</span> parameter does not contain a \"hv-eventing-shared-key\" node.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Health.Events
  commentId: N:Microsoft.Health.Events
  isExternal: false
  name: Microsoft.Health.Events
  nameWithType: Microsoft.Health.Events
  fullName: Microsoft.Health.Events
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<NotificationAuthenticationSharedKeyInfo>()
  nameWithType: TypeHelper.ValueOrDbNull<NotificationAuthenticationSharedKeyInfo>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of NotificationAuthenticationSharedKeyInfo)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo)()
  name.vb: ValueOrDbNull(Of NotificationAuthenticationSharedKeyInfo)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<NotificationAuthenticationSharedKeyInfo>
    nameWithType: TypeHelper.ValueOrDbNull<NotificationAuthenticationSharedKeyInfo>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of NotificationAuthenticationSharedKeyInfo)
    nameWithType: TypeHelper.ValueOrDbNull(Of NotificationAuthenticationSharedKeyInfo)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo
  commentId: T:Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo
  parent: Microsoft.Health.Events
  isExternal: false
  name: NotificationAuthenticationSharedKeyInfo
  nameWithType: NotificationAuthenticationSharedKeyInfo
  fullName: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo
- uid: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.#ctor*
  commentId: Overload:Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.#ctor
  isExternal: false
  name: NotificationAuthenticationSharedKeyInfo
  nameWithType: NotificationAuthenticationSharedKeyInfo.NotificationAuthenticationSharedKeyInfo
  fullName: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.NotificationAuthenticationSharedKeyInfo
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.Version*
  commentId: Overload:Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.Version
  isExternal: false
  name: Version
  nameWithType: NotificationAuthenticationSharedKeyInfo.Version
  fullName: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.Version
- uid: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.Key*
  commentId: Overload:Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.Key
  isExternal: false
  name: Key
  nameWithType: NotificationAuthenticationSharedKeyInfo.Key
  fullName: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.Key
- uid: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.GenerateKey*
  commentId: Overload:Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.GenerateKey
  isExternal: false
  name: GenerateKey
  nameWithType: NotificationAuthenticationSharedKeyInfo.GenerateKey
  fullName: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.GenerateKey
- uid: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.WriteXml*
  commentId: Overload:Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.WriteXml
  isExternal: false
  name: WriteXml
  nameWithType: NotificationAuthenticationSharedKeyInfo.WriteXml
  fullName: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.WriteXml
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.ParseXml*
  commentId: Overload:Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.ParseXml
  isExternal: false
  name: ParseXml
  nameWithType: NotificationAuthenticationSharedKeyInfo.ParseXml
  fullName: Microsoft.Health.Events.NotificationAuthenticationSharedKeyInfo.ParseXml
- uid: System.Xml.XPath.XPathNavigator
  commentId: T:System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: true
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: false
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
