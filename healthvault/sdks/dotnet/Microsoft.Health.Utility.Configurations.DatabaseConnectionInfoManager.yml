### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager
  commentId: T:Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager
  id: DatabaseConnectionInfoManager
  parent: Microsoft.Health.Utility.Configurations
  children:
  - Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.#ctor(Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings,Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration)
  - Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Configuration
  - Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Dictionary
  - Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Directory
  - Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.GetConnectionInfo(System.String)
  - Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Log
  - Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Queue
  - Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Record
  - Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.SharedDirectory
  - Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Telemetry
  langs:
  - csharp
  - vb
  name: DatabaseConnectionInfoManager
  nameWithType: DatabaseConnectionInfoManager
  fullName: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/DatabaseConnectionInfoManager.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DatabaseConnectionInfoManager
    path: ../Microsoft.Health.Utility/HVConfig/DatabaseConnectionInfoManager.cs
    startLine: 18
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  summary: "\nManages access to the collection of HealthVault database connection infos.\n"
  example: []
  syntax:
    content: public sealed class DatabaseConnectionInfoManager
    content.vb: Public NotInheritable Class DatabaseConnectionInfoManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.#ctor(Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings,Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration)
  commentId: M:Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.#ctor(Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings,Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration)
  id: '#ctor(Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings,Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration)'
  parent: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager
  langs:
  - csharp
  - vb
  name: DatabaseConnectionInfoManager(GlobalDatabaseConnectionStrings, FaultHandlingPoliciesConfiguration)
  nameWithType: DatabaseConnectionInfoManager.DatabaseConnectionInfoManager(GlobalDatabaseConnectionStrings, FaultHandlingPoliciesConfiguration)
  fullName: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.DatabaseConnectionInfoManager(Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings, Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/DatabaseConnectionInfoManager.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.Utility/HVConfig/DatabaseConnectionInfoManager.cs
    startLine: 22
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  syntax:
    content: public DatabaseConnectionInfoManager(GlobalDatabaseConnectionStrings connectionStrings, FaultHandlingPoliciesConfiguration faultHandlingConfig)
    content.vb: Public Sub New(connectionStrings As GlobalDatabaseConnectionStrings, faultHandlingConfig As FaultHandlingPoliciesConfiguration)
    parameters:
    - id: connectionStrings
      type: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings
    - id: faultHandlingConfig
      type: Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration
  overload: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Configuration
  commentId: P:Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Configuration
  id: Configuration
  parent: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager
  langs:
  - csharp
  - vb
  name: Configuration
  nameWithType: DatabaseConnectionInfoManager.Configuration
  fullName: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Configuration
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/DatabaseConnectionInfoManager.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Configuration
    path: ../Microsoft.Health.Utility/HVConfig/DatabaseConnectionInfoManager.cs
    startLine: 60
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  syntax:
    content: public DatabaseConnectionInfo Configuration { get; }
    content.vb: Public ReadOnly Property Configuration As DatabaseConnectionInfo
    parameters: []
    return:
      type: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfo
  overload: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Configuration*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Dictionary
  commentId: P:Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Dictionary
  id: Dictionary
  parent: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager
  langs:
  - csharp
  - vb
  name: Dictionary
  nameWithType: DatabaseConnectionInfoManager.Dictionary
  fullName: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Dictionary
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/DatabaseConnectionInfoManager.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Dictionary
    path: ../Microsoft.Health.Utility/HVConfig/DatabaseConnectionInfoManager.cs
    startLine: 62
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  syntax:
    content: public DatabaseConnectionInfo Dictionary { get; }
    content.vb: Public ReadOnly Property Dictionary As DatabaseConnectionInfo
    parameters: []
    return:
      type: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfo
  overload: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Dictionary*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Directory
  commentId: P:Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Directory
  id: Directory
  parent: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager
  langs:
  - csharp
  - vb
  name: Directory
  nameWithType: DatabaseConnectionInfoManager.Directory
  fullName: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Directory
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/DatabaseConnectionInfoManager.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Directory
    path: ../Microsoft.Health.Utility/HVConfig/DatabaseConnectionInfoManager.cs
    startLine: 64
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  syntax:
    content: public DatabaseConnectionInfo Directory { get; }
    content.vb: Public ReadOnly Property Directory As DatabaseConnectionInfo
    parameters: []
    return:
      type: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfo
  overload: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Directory*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Log
  commentId: P:Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Log
  id: Log
  parent: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager
  langs:
  - csharp
  - vb
  name: Log
  nameWithType: DatabaseConnectionInfoManager.Log
  fullName: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Log
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/DatabaseConnectionInfoManager.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Log
    path: ../Microsoft.Health.Utility/HVConfig/DatabaseConnectionInfoManager.cs
    startLine: 66
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  syntax:
    content: public DatabaseConnectionInfo Log { get; }
    content.vb: Public ReadOnly Property Log As DatabaseConnectionInfo
    parameters: []
    return:
      type: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfo
  overload: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Log*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Queue
  commentId: P:Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Queue
  id: Queue
  parent: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager
  langs:
  - csharp
  - vb
  name: Queue
  nameWithType: DatabaseConnectionInfoManager.Queue
  fullName: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Queue
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/DatabaseConnectionInfoManager.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Queue
    path: ../Microsoft.Health.Utility/HVConfig/DatabaseConnectionInfoManager.cs
    startLine: 68
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  syntax:
    content: public DatabaseConnectionInfo Queue { get; }
    content.vb: Public ReadOnly Property Queue As DatabaseConnectionInfo
    parameters: []
    return:
      type: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfo
  overload: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Queue*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.SharedDirectory
  commentId: P:Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.SharedDirectory
  id: SharedDirectory
  parent: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager
  langs:
  - csharp
  - vb
  name: SharedDirectory
  nameWithType: DatabaseConnectionInfoManager.SharedDirectory
  fullName: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.SharedDirectory
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/DatabaseConnectionInfoManager.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SharedDirectory
    path: ../Microsoft.Health.Utility/HVConfig/DatabaseConnectionInfoManager.cs
    startLine: 70
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  syntax:
    content: public DatabaseConnectionInfo SharedDirectory { get; }
    content.vb: Public ReadOnly Property SharedDirectory As DatabaseConnectionInfo
    parameters: []
    return:
      type: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfo
  overload: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.SharedDirectory*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Telemetry
  commentId: P:Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Telemetry
  id: Telemetry
  parent: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager
  langs:
  - csharp
  - vb
  name: Telemetry
  nameWithType: DatabaseConnectionInfoManager.Telemetry
  fullName: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Telemetry
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/DatabaseConnectionInfoManager.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Telemetry
    path: ../Microsoft.Health.Utility/HVConfig/DatabaseConnectionInfoManager.cs
    startLine: 72
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  syntax:
    content: public DatabaseConnectionInfo Telemetry { get; }
    content.vb: Public ReadOnly Property Telemetry As DatabaseConnectionInfo
    parameters: []
    return:
      type: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfo
  overload: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Telemetry*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Record
  commentId: P:Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Record
  id: Record
  parent: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager
  langs:
  - csharp
  - vb
  name: Record
  nameWithType: DatabaseConnectionInfoManager.Record
  fullName: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Record
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/DatabaseConnectionInfoManager.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Record
    path: ../Microsoft.Health.Utility/HVConfig/DatabaseConnectionInfoManager.cs
    startLine: 74
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  syntax:
    content: public DatabaseConnectionInfo Record { get; }
    content.vb: Public ReadOnly Property Record As DatabaseConnectionInfo
    parameters: []
    return:
      type: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfo
  overload: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Record*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.GetConnectionInfo(System.String)
  commentId: M:Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.GetConnectionInfo(System.String)
  id: GetConnectionInfo(System.String)
  parent: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager
  langs:
  - csharp
  - vb
  name: GetConnectionInfo(String)
  nameWithType: DatabaseConnectionInfoManager.GetConnectionInfo(String)
  fullName: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.GetConnectionInfo(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/HVConfig/DatabaseConnectionInfoManager.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetConnectionInfo
    path: ../Microsoft.Health.Utility/HVConfig/DatabaseConnectionInfoManager.cs
    startLine: 76
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Configurations
  syntax:
    content: public DatabaseConnectionInfo GetConnectionInfo(string key)
    content.vb: Public Function GetConnectionInfo(key As String) As DatabaseConnectionInfo
    parameters:
    - id: key
      type: System.String
    return:
      type: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfo
  overload: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.GetConnectionInfo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Health.Utility.Configurations
  commentId: N:Microsoft.Health.Utility.Configurations
  isExternal: false
  name: Microsoft.Health.Utility.Configurations
  nameWithType: Microsoft.Health.Utility.Configurations
  fullName: Microsoft.Health.Utility.Configurations
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<DatabaseConnectionInfoManager>()
  nameWithType: TypeHelper.ValueOrDbNull<DatabaseConnectionInfoManager>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of DatabaseConnectionInfoManager)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager)()
  name.vb: ValueOrDbNull(Of DatabaseConnectionInfoManager)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<DatabaseConnectionInfoManager>
    nameWithType: TypeHelper.ValueOrDbNull<DatabaseConnectionInfoManager>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of DatabaseConnectionInfoManager)
    nameWithType: TypeHelper.ValueOrDbNull(Of DatabaseConnectionInfoManager)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.#ctor*
  commentId: Overload:Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.#ctor
  isExternal: false
  name: DatabaseConnectionInfoManager
  nameWithType: DatabaseConnectionInfoManager.DatabaseConnectionInfoManager
  fullName: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.DatabaseConnectionInfoManager
- uid: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings
  commentId: T:Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings
  parent: Microsoft.Health.Utility.Configurations
  isExternal: false
  name: GlobalDatabaseConnectionStrings
  nameWithType: GlobalDatabaseConnectionStrings
  fullName: Microsoft.Health.Utility.Configurations.GlobalDatabaseConnectionStrings
- uid: Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration
  commentId: T:Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration
  parent: Microsoft.Health.Utility.TransientFaultHandling
  isExternal: false
  name: FaultHandlingPoliciesConfiguration
  nameWithType: FaultHandlingPoliciesConfiguration
  fullName: Microsoft.Health.Utility.TransientFaultHandling.FaultHandlingPoliciesConfiguration
- uid: Microsoft.Health.Utility.TransientFaultHandling
  commentId: N:Microsoft.Health.Utility.TransientFaultHandling
  isExternal: false
  name: Microsoft.Health.Utility.TransientFaultHandling
  nameWithType: Microsoft.Health.Utility.TransientFaultHandling
  fullName: Microsoft.Health.Utility.TransientFaultHandling
- uid: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Configuration*
  commentId: Overload:Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Configuration
  isExternal: false
  name: Configuration
  nameWithType: DatabaseConnectionInfoManager.Configuration
  fullName: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Configuration
- uid: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfo
  commentId: T:Microsoft.Health.Utility.Configurations.DatabaseConnectionInfo
  parent: Microsoft.Health.Utility.Configurations
  isExternal: false
  name: DatabaseConnectionInfo
  nameWithType: DatabaseConnectionInfo
  fullName: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfo
- uid: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Dictionary*
  commentId: Overload:Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Dictionary
  isExternal: false
  name: Dictionary
  nameWithType: DatabaseConnectionInfoManager.Dictionary
  fullName: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Dictionary
- uid: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Directory*
  commentId: Overload:Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Directory
  isExternal: false
  name: Directory
  nameWithType: DatabaseConnectionInfoManager.Directory
  fullName: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Directory
- uid: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Log*
  commentId: Overload:Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Log
  isExternal: false
  name: Log
  nameWithType: DatabaseConnectionInfoManager.Log
  fullName: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Log
- uid: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Queue*
  commentId: Overload:Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Queue
  isExternal: false
  name: Queue
  nameWithType: DatabaseConnectionInfoManager.Queue
  fullName: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Queue
- uid: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.SharedDirectory*
  commentId: Overload:Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.SharedDirectory
  isExternal: false
  name: SharedDirectory
  nameWithType: DatabaseConnectionInfoManager.SharedDirectory
  fullName: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.SharedDirectory
- uid: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Telemetry*
  commentId: Overload:Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Telemetry
  isExternal: false
  name: Telemetry
  nameWithType: DatabaseConnectionInfoManager.Telemetry
  fullName: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Telemetry
- uid: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Record*
  commentId: Overload:Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Record
  isExternal: false
  name: Record
  nameWithType: DatabaseConnectionInfoManager.Record
  fullName: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.Record
- uid: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.GetConnectionInfo*
  commentId: Overload:Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.GetConnectionInfo
  isExternal: false
  name: GetConnectionInfo
  nameWithType: DatabaseConnectionInfoManager.GetConnectionInfo
  fullName: Microsoft.Health.Utility.Configurations.DatabaseConnectionInfoManager.GetConnectionInfo
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
