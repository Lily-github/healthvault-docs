### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.InvertedIndex.IndexWriter
  commentId: T:Microsoft.Health.InvertedIndex.IndexWriter
  id: IndexWriter
  parent: Microsoft.Health.InvertedIndex
  children:
  - Microsoft.Health.InvertedIndex.IndexWriter.#ctor(System.IO.BinaryWriter)
  - Microsoft.Health.InvertedIndex.IndexWriter.OnWriteCustomType(Microsoft.Health.InvertedIndex.ISerializableIndexType)
  - Microsoft.Health.InvertedIndex.IndexWriter.Token_ArrayFloat
  - Microsoft.Health.InvertedIndex.IndexWriter.Token_ArrayInt
  - Microsoft.Health.InvertedIndex.IndexWriter.Token_ArrayPostingByte
  - Microsoft.Health.InvertedIndex.IndexWriter.Token_ArrayPostingFloat
  - Microsoft.Health.InvertedIndex.IndexWriter.Token_ArrayPostingInt
  - Microsoft.Health.InvertedIndex.IndexWriter.Token_ArrayString
  - Microsoft.Health.InvertedIndex.IndexWriter.Token_ArrayUint
  - Microsoft.Health.InvertedIndex.IndexWriter.Token_Type_BytePostingArray
  - Microsoft.Health.InvertedIndex.IndexWriter.Token_Type_BytePostingList
  - Microsoft.Health.InvertedIndex.IndexWriter.Token_Type_FloatPostingArray
  - Microsoft.Health.InvertedIndex.IndexWriter.Token_Type_FloatPostingList
  - Microsoft.Health.InvertedIndex.IndexWriter.Token_Type_IntPostingArray
  - Microsoft.Health.InvertedIndex.IndexWriter.Token_Type_IntPostingList
  - Microsoft.Health.InvertedIndex.IndexWriter.Token_Type_RecordIDArray
  - Microsoft.Health.InvertedIndex.IndexWriter.Token_Type_SequentialPostingArray
  - Microsoft.Health.InvertedIndex.IndexWriter.Token_Version
  - Microsoft.Health.InvertedIndex.IndexWriter.Write(Microsoft.Health.InvertedIndex.BytePostingArray)
  - Microsoft.Health.InvertedIndex.IndexWriter.Write(Microsoft.Health.InvertedIndex.BytePostingList)
  - Microsoft.Health.InvertedIndex.IndexWriter.Write(Microsoft.Health.InvertedIndex.FloatPostingArray)
  - Microsoft.Health.InvertedIndex.IndexWriter.Write(Microsoft.Health.InvertedIndex.FloatPostingList)
  - Microsoft.Health.InvertedIndex.IndexWriter.Write(Microsoft.Health.InvertedIndex.IntPostingArray)
  - Microsoft.Health.InvertedIndex.IndexWriter.Write(Microsoft.Health.InvertedIndex.IntPostingList)
  - Microsoft.Health.InvertedIndex.IndexWriter.Write(Microsoft.Health.InvertedIndex.IRecordIDList)
  - Microsoft.Health.InvertedIndex.IndexWriter.Write(Microsoft.Health.InvertedIndex.ISerializableIndexType)
  - Microsoft.Health.InvertedIndex.IndexWriter.Write(Microsoft.Health.InvertedIndex.RecordIDArray)
  - Microsoft.Health.InvertedIndex.IndexWriter.Write(Microsoft.Health.InvertedIndex.SequentialFloatPostingArray)
  - Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Byte)
  - Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Byte[])
  - Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Collections.Generic.IEnumerable{System.Byte})
  - Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Collections.Generic.IEnumerable{System.Int32})
  - Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Collections.Generic.IEnumerable{System.Single})
  - Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Collections.Generic.IEnumerable{System.String})
  - Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Collections.Generic.IEnumerable{System.UInt32})
  - Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Int32)
  - Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Int32[])
  - Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Single)
  - Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Single[])
  - Microsoft.Health.InvertedIndex.IndexWriter.Write(System.String)
  - Microsoft.Health.InvertedIndex.IndexWriter.Write(System.String[])
  - Microsoft.Health.InvertedIndex.IndexWriter.Write(System.UInt32)
  - Microsoft.Health.InvertedIndex.IndexWriter.Write(System.UInt32[])
  - Microsoft.Health.InvertedIndex.IndexWriter.WriteArray(System.Collections.Generic.IEnumerable{System.Single},System.Int32)
  - Microsoft.Health.InvertedIndex.IndexWriter.WriteArray(System.Collections.Generic.IEnumerable{System.String},System.Int32)
  - Microsoft.Health.InvertedIndex.IndexWriter.WriteArray(System.Collections.Generic.IEnumerable{System.UInt32},System.Int32)
  - Microsoft.Health.InvertedIndex.IndexWriter.WriteArray(System.Int32[])
  - Microsoft.Health.InvertedIndex.IndexWriter.WriteArray(System.Single[])
  - Microsoft.Health.InvertedIndex.IndexWriter.WriteArray(System.String[])
  - Microsoft.Health.InvertedIndex.IndexWriter.WriteArray(System.UInt32[])
  - Microsoft.Health.InvertedIndex.IndexWriter.WriteCollectionHeader(System.String,System.Int32)
  - Microsoft.Health.InvertedIndex.IndexWriter.WriteCollectionLength(System.Int32)
  - Microsoft.Health.InvertedIndex.IndexWriter.WritePosting(Microsoft.Health.InvertedIndex.Posting{System.Byte})
  - Microsoft.Health.InvertedIndex.IndexWriter.WritePosting(Microsoft.Health.InvertedIndex.Posting{System.Int32})
  - Microsoft.Health.InvertedIndex.IndexWriter.WritePosting(Microsoft.Health.InvertedIndex.Posting{System.Single})
  - Microsoft.Health.InvertedIndex.IndexWriter.WritePosting(Microsoft.Health.InvertedIndex.Posting{System.UInt32})
  - Microsoft.Health.InvertedIndex.IndexWriter.WritePostings(Microsoft.Health.InvertedIndex.Posting{System.Byte}[])
  - Microsoft.Health.InvertedIndex.IndexWriter.WritePostings(Microsoft.Health.InvertedIndex.Posting{System.Int32}[])
  - Microsoft.Health.InvertedIndex.IndexWriter.WritePostings(Microsoft.Health.InvertedIndex.Posting{System.Single}[])
  - Microsoft.Health.InvertedIndex.IndexWriter.WritePostings(System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.Posting{System.Byte}},System.Int32)
  - Microsoft.Health.InvertedIndex.IndexWriter.WritePostings(System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.Posting{System.Int32}},System.Int32)
  - Microsoft.Health.InvertedIndex.IndexWriter.WritePostings(System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.Posting{System.Single}},System.Int32)
  - Microsoft.Health.InvertedIndex.IndexWriter.Writer
  - Microsoft.Health.InvertedIndex.IndexWriter.WriteRecordID(System.UInt32)
  - Microsoft.Health.InvertedIndex.IndexWriter.WriteRecordIDs(System.Collections.Generic.IEnumerable{System.UInt32})
  - Microsoft.Health.InvertedIndex.IndexWriter.WriteRecordIDs(System.UInt32[])
  - Microsoft.Health.InvertedIndex.IndexWriter.WriteToken(System.String)
  - Microsoft.Health.InvertedIndex.IndexWriter.WriteVersion(System.String)
  langs:
  - csharp
  - vb
  name: IndexWriter
  nameWithType: IndexWriter
  fullName: Microsoft.Health.InvertedIndex.IndexWriter
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: IndexWriter
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 26
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public class IndexWriter
    content.vb: Public Class IndexWriter
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.InvertedIndex.IndexWriter.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.InvertedIndex.IndexWriter.Token_Version
  commentId: F:Microsoft.Health.InvertedIndex.IndexWriter.Token_Version
  id: Token_Version
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: Token_Version
  nameWithType: IndexWriter.Token_Version
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.Token_Version
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Token_Version
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 31
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public const string Token_Version = "VERSION"
    content.vb: Public Const Token_Version As String = "VERSION"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.InvertedIndex.IndexWriter.Token_ArrayFloat
  commentId: F:Microsoft.Health.InvertedIndex.IndexWriter.Token_ArrayFloat
  id: Token_ArrayFloat
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: Token_ArrayFloat
  nameWithType: IndexWriter.Token_ArrayFloat
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.Token_ArrayFloat
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Token_ArrayFloat
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 36
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public const string Token_ArrayFloat = "AF"
    content.vb: Public Const Token_ArrayFloat As String = "AF"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.InvertedIndex.IndexWriter.Token_ArrayInt
  commentId: F:Microsoft.Health.InvertedIndex.IndexWriter.Token_ArrayInt
  id: Token_ArrayInt
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: Token_ArrayInt
  nameWithType: IndexWriter.Token_ArrayInt
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.Token_ArrayInt
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Token_ArrayInt
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 40
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public const string Token_ArrayInt = "AI"
    content.vb: Public Const Token_ArrayInt As String = "AI"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.InvertedIndex.IndexWriter.Token_ArrayString
  commentId: F:Microsoft.Health.InvertedIndex.IndexWriter.Token_ArrayString
  id: Token_ArrayString
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: Token_ArrayString
  nameWithType: IndexWriter.Token_ArrayString
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.Token_ArrayString
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Token_ArrayString
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 44
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public const string Token_ArrayString = "AS"
    content.vb: Public Const Token_ArrayString As String = "AS"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.InvertedIndex.IndexWriter.Token_ArrayUint
  commentId: F:Microsoft.Health.InvertedIndex.IndexWriter.Token_ArrayUint
  id: Token_ArrayUint
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: Token_ArrayUint
  nameWithType: IndexWriter.Token_ArrayUint
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.Token_ArrayUint
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Token_ArrayUint
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 48
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public const string Token_ArrayUint = "AU"
    content.vb: Public Const Token_ArrayUint As String = "AU"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.InvertedIndex.IndexWriter.Token_ArrayPostingFloat
  commentId: F:Microsoft.Health.InvertedIndex.IndexWriter.Token_ArrayPostingFloat
  id: Token_ArrayPostingFloat
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: Token_ArrayPostingFloat
  nameWithType: IndexWriter.Token_ArrayPostingFloat
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.Token_ArrayPostingFloat
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Token_ArrayPostingFloat
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 53
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public const string Token_ArrayPostingFloat = "APF"
    content.vb: Public Const Token_ArrayPostingFloat As String = "APF"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.InvertedIndex.IndexWriter.Token_ArrayPostingInt
  commentId: F:Microsoft.Health.InvertedIndex.IndexWriter.Token_ArrayPostingInt
  id: Token_ArrayPostingInt
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: Token_ArrayPostingInt
  nameWithType: IndexWriter.Token_ArrayPostingInt
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.Token_ArrayPostingInt
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Token_ArrayPostingInt
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 57
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public const string Token_ArrayPostingInt = "API"
    content.vb: Public Const Token_ArrayPostingInt As String = "API"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.InvertedIndex.IndexWriter.Token_ArrayPostingByte
  commentId: F:Microsoft.Health.InvertedIndex.IndexWriter.Token_ArrayPostingByte
  id: Token_ArrayPostingByte
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: Token_ArrayPostingByte
  nameWithType: IndexWriter.Token_ArrayPostingByte
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.Token_ArrayPostingByte
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Token_ArrayPostingByte
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 61
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public const string Token_ArrayPostingByte = "APB"
    content.vb: Public Const Token_ArrayPostingByte As String = "APB"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.InvertedIndex.IndexWriter.Token_Type_RecordIDArray
  commentId: F:Microsoft.Health.InvertedIndex.IndexWriter.Token_Type_RecordIDArray
  id: Token_Type_RecordIDArray
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: Token_Type_RecordIDArray
  nameWithType: IndexWriter.Token_Type_RecordIDArray
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.Token_Type_RecordIDArray
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Token_Type_RecordIDArray
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 66
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public const string Token_Type_RecordIDArray = "T_RA"
    content.vb: Public Const Token_Type_RecordIDArray As String = "T_RA"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.InvertedIndex.IndexWriter.Token_Type_FloatPostingArray
  commentId: F:Microsoft.Health.InvertedIndex.IndexWriter.Token_Type_FloatPostingArray
  id: Token_Type_FloatPostingArray
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: Token_Type_FloatPostingArray
  nameWithType: IndexWriter.Token_Type_FloatPostingArray
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.Token_Type_FloatPostingArray
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Token_Type_FloatPostingArray
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 71
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public const string Token_Type_FloatPostingArray = "T_APF"
    content.vb: Public Const Token_Type_FloatPostingArray As String = "T_APF"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.InvertedIndex.IndexWriter.Token_Type_IntPostingArray
  commentId: F:Microsoft.Health.InvertedIndex.IndexWriter.Token_Type_IntPostingArray
  id: Token_Type_IntPostingArray
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: Token_Type_IntPostingArray
  nameWithType: IndexWriter.Token_Type_IntPostingArray
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.Token_Type_IntPostingArray
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Token_Type_IntPostingArray
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 75
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public const string Token_Type_IntPostingArray = "T_API"
    content.vb: Public Const Token_Type_IntPostingArray As String = "T_API"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.InvertedIndex.IndexWriter.Token_Type_BytePostingArray
  commentId: F:Microsoft.Health.InvertedIndex.IndexWriter.Token_Type_BytePostingArray
  id: Token_Type_BytePostingArray
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: Token_Type_BytePostingArray
  nameWithType: IndexWriter.Token_Type_BytePostingArray
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.Token_Type_BytePostingArray
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Token_Type_BytePostingArray
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 79
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public const string Token_Type_BytePostingArray = "T_APB"
    content.vb: Public Const Token_Type_BytePostingArray As String = "T_APB"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.InvertedIndex.IndexWriter.Token_Type_FloatPostingList
  commentId: F:Microsoft.Health.InvertedIndex.IndexWriter.Token_Type_FloatPostingList
  id: Token_Type_FloatPostingList
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: Token_Type_FloatPostingList
  nameWithType: IndexWriter.Token_Type_FloatPostingList
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.Token_Type_FloatPostingList
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Token_Type_FloatPostingList
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 84
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public const string Token_Type_FloatPostingList = "T_LPF"
    content.vb: Public Const Token_Type_FloatPostingList As String = "T_LPF"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.InvertedIndex.IndexWriter.Token_Type_IntPostingList
  commentId: F:Microsoft.Health.InvertedIndex.IndexWriter.Token_Type_IntPostingList
  id: Token_Type_IntPostingList
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: Token_Type_IntPostingList
  nameWithType: IndexWriter.Token_Type_IntPostingList
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.Token_Type_IntPostingList
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Token_Type_IntPostingList
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 88
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public const string Token_Type_IntPostingList = "T_LPI"
    content.vb: Public Const Token_Type_IntPostingList As String = "T_LPI"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.InvertedIndex.IndexWriter.Token_Type_BytePostingList
  commentId: F:Microsoft.Health.InvertedIndex.IndexWriter.Token_Type_BytePostingList
  id: Token_Type_BytePostingList
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: Token_Type_BytePostingList
  nameWithType: IndexWriter.Token_Type_BytePostingList
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.Token_Type_BytePostingList
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Token_Type_BytePostingList
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 92
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public const string Token_Type_BytePostingList = "T_LPB"
    content.vb: Public Const Token_Type_BytePostingList As String = "T_LPB"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.InvertedIndex.IndexWriter.Token_Type_SequentialPostingArray
  commentId: F:Microsoft.Health.InvertedIndex.IndexWriter.Token_Type_SequentialPostingArray
  id: Token_Type_SequentialPostingArray
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: Token_Type_SequentialPostingArray
  nameWithType: IndexWriter.Token_Type_SequentialPostingArray
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.Token_Type_SequentialPostingArray
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Token_Type_SequentialPostingArray
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 97
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public const string Token_Type_SequentialPostingArray = "T_SPA"
    content.vb: Public Const Token_Type_SequentialPostingArray As String = "T_SPA"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Health.InvertedIndex.IndexWriter.#ctor(System.IO.BinaryWriter)
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.#ctor(System.IO.BinaryWriter)
  id: '#ctor(System.IO.BinaryWriter)'
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: IndexWriter(BinaryWriter)
  nameWithType: IndexWriter.IndexWriter(BinaryWriter)
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.IndexWriter(System.IO.BinaryWriter)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 105
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public IndexWriter(BinaryWriter writer)
    content.vb: Public Sub New(writer As BinaryWriter)
    parameters:
    - id: writer
      type: System.IO.BinaryWriter
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexWriter.Writer
  commentId: P:Microsoft.Health.InvertedIndex.IndexWriter.Writer
  id: Writer
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: Writer
  nameWithType: IndexWriter.Writer
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.Writer
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Writer
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 118
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public BinaryWriter Writer { get; }
    content.vb: Public ReadOnly Property Writer As BinaryWriter
    parameters: []
    return:
      type: System.IO.BinaryWriter
  overload: Microsoft.Health.InvertedIndex.IndexWriter.Writer*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.InvertedIndex.IndexWriter.WriteToken(System.String)
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.WriteToken(System.String)
  id: WriteToken(System.String)
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: WriteToken(String)
  nameWithType: IndexWriter.WriteToken(String)
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.WriteToken(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteToken
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 130
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void WriteToken(string token)
    content.vb: Public Sub WriteToken(token As String)
    parameters:
    - id: token
      type: System.String
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.WriteToken*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexWriter.WriteVersion(System.String)
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.WriteVersion(System.String)
  id: WriteVersion(System.String)
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: WriteVersion(String)
  nameWithType: IndexWriter.WriteVersion(String)
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.WriteVersion(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteVersion
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 139
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void WriteVersion(string version)
    content.vb: Public Sub WriteVersion(version As String)
    parameters:
    - id: version
      type: System.String
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.WriteVersion*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexWriter.WriteCollectionLength(System.Int32)
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.WriteCollectionLength(System.Int32)
  id: WriteCollectionLength(System.Int32)
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: WriteCollectionLength(Int32)
  nameWithType: IndexWriter.WriteCollectionLength(Int32)
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.WriteCollectionLength(System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteCollectionLength
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 149
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void WriteCollectionLength(int length)
    content.vb: Public Sub WriteCollectionLength(length As Integer)
    parameters:
    - id: length
      type: System.Int32
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.WriteCollectionLength*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexWriter.WriteCollectionHeader(System.String,System.Int32)
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.WriteCollectionHeader(System.String,System.Int32)
  id: WriteCollectionHeader(System.String,System.Int32)
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: WriteCollectionHeader(String, Int32)
  nameWithType: IndexWriter.WriteCollectionHeader(String, Int32)
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.WriteCollectionHeader(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteCollectionHeader
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 159
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void WriteCollectionHeader(string token, int length)
    content.vb: Public Sub WriteCollectionHeader(token As String, length As Integer)
    parameters:
    - id: token
      type: System.String
      description: ''
    - id: length
      type: System.Int32
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.WriteCollectionHeader*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexWriter.Write(System.String)
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.Write(System.String)
  id: Write(System.String)
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: Write(String)
  nameWithType: IndexWriter.Write(String)
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.Write(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Write
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 169
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Write(string text)
    content.vb: Public Sub Write(text As String)
    parameters:
    - id: text
      type: System.String
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.Write*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexWriter.Write(System.String[])
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.Write(System.String[])
  id: Write(System.String[])
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: Write(String[])
  nameWithType: IndexWriter.Write(String[])
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.Write(System.String[])
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Write
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 178
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Write(string[] array)
    content.vb: Public Sub Write(array As String())
    parameters:
    - id: array
      type: System.String[]
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.Write*
  nameWithType.vb: IndexWriter.Write(String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.IndexWriter.Write(System.String())
  name.vb: Write(String())
- uid: Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Collections.Generic.IEnumerable{System.String})
  id: Write(System.Collections.Generic.IEnumerable{System.String})
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: Write(IEnumerable<String>)
  nameWithType: IndexWriter.Write(IEnumerable<String>)
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Write
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 195
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Write(IEnumerable<string> array)
    content.vb: Public Sub Write(array As IEnumerable(Of String))
    parameters:
    - id: array
      type: System.Collections.Generic.IEnumerable{System.String}
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.Write*
  nameWithType.vb: IndexWriter.Write(IEnumerable(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: Write(IEnumerable(Of String))
- uid: Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Byte)
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Byte)
  id: Write(System.Byte)
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: Write(Byte)
  nameWithType: IndexWriter.Write(Byte)
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Byte)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Write
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 212
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Write(byte value)
    content.vb: Public Sub Write(value As Byte)
    parameters:
    - id: value
      type: System.Byte
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.Write*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Byte[])
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Byte[])
  id: Write(System.Byte[])
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: Write(Byte[])
  nameWithType: IndexWriter.Write(Byte[])
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Byte[])
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Write
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 221
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Write(byte[] array)
    content.vb: Public Sub Write(array As Byte())
    parameters:
    - id: array
      type: System.Byte[]
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.Write*
  nameWithType.vb: IndexWriter.Write(Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Byte())
  name.vb: Write(Byte())
- uid: Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Collections.Generic.IEnumerable{System.Byte})
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Collections.Generic.IEnumerable{System.Byte})
  id: Write(System.Collections.Generic.IEnumerable{System.Byte})
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: Write(IEnumerable<Byte>)
  nameWithType: IndexWriter.Write(IEnumerable<Byte>)
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Collections.Generic.IEnumerable<System.Byte>)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Write
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 230
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Write(IEnumerable<byte> array)
    content.vb: Public Sub Write(array As IEnumerable(Of Byte))
    parameters:
    - id: array
      type: System.Collections.Generic.IEnumerable{System.Byte}
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.Write*
  nameWithType.vb: IndexWriter.Write(IEnumerable(Of Byte))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Collections.Generic.IEnumerable(Of System.Byte))
  name.vb: Write(IEnumerable(Of Byte))
- uid: Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Int32)
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Int32)
  id: Write(System.Int32)
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: Write(Int32)
  nameWithType: IndexWriter.Write(Int32)
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Write
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 246
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Write(int value)
    content.vb: Public Sub Write(value As Integer)
    parameters:
    - id: value
      type: System.Int32
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.Write*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Int32[])
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Int32[])
  id: Write(System.Int32[])
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: Write(Int32[])
  nameWithType: IndexWriter.Write(Int32[])
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Int32[])
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Write
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 255
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Write(int[] array)
    content.vb: Public Sub Write(array As Integer())
    parameters:
    - id: array
      type: System.Int32[]
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.Write*
  nameWithType.vb: IndexWriter.Write(Int32())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Int32())
  name.vb: Write(Int32())
- uid: Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Collections.Generic.IEnumerable{System.Int32})
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Collections.Generic.IEnumerable{System.Int32})
  id: Write(System.Collections.Generic.IEnumerable{System.Int32})
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: Write(IEnumerable<Int32>)
  nameWithType: IndexWriter.Write(IEnumerable<Int32>)
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Collections.Generic.IEnumerable<System.Int32>)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Write
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 272
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Write(IEnumerable<int> array)
    content.vb: Public Sub Write(array As IEnumerable(Of Integer))
    parameters:
    - id: array
      type: System.Collections.Generic.IEnumerable{System.Int32}
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.Write*
  nameWithType.vb: IndexWriter.Write(IEnumerable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Collections.Generic.IEnumerable(Of System.Int32))
  name.vb: Write(IEnumerable(Of Int32))
- uid: Microsoft.Health.InvertedIndex.IndexWriter.Write(System.UInt32)
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.Write(System.UInt32)
  id: Write(System.UInt32)
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: Write(UInt32)
  nameWithType: IndexWriter.Write(UInt32)
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.Write(System.UInt32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Write
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 289
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Write(uint value)
    content.vb: Public Sub Write(value As UInteger)
    parameters:
    - id: value
      type: System.UInt32
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.Write*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexWriter.Write(System.UInt32[])
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.Write(System.UInt32[])
  id: Write(System.UInt32[])
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: Write(UInt32[])
  nameWithType: IndexWriter.Write(UInt32[])
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.Write(System.UInt32[])
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Write
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 298
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Write(uint[] array)
    content.vb: Public Sub Write(array As UInteger())
    parameters:
    - id: array
      type: System.UInt32[]
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.Write*
  nameWithType.vb: IndexWriter.Write(UInt32())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.IndexWriter.Write(System.UInt32())
  name.vb: Write(UInt32())
- uid: Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Collections.Generic.IEnumerable{System.UInt32})
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Collections.Generic.IEnumerable{System.UInt32})
  id: Write(System.Collections.Generic.IEnumerable{System.UInt32})
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: Write(IEnumerable<UInt32>)
  nameWithType: IndexWriter.Write(IEnumerable<UInt32>)
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Collections.Generic.IEnumerable<System.UInt32>)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Write
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 315
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Write(IEnumerable<uint> array)
    content.vb: Public Sub Write(array As IEnumerable(Of UInteger))
    parameters:
    - id: array
      type: System.Collections.Generic.IEnumerable{System.UInt32}
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.Write*
  nameWithType.vb: IndexWriter.Write(IEnumerable(Of UInt32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Collections.Generic.IEnumerable(Of System.UInt32))
  name.vb: Write(IEnumerable(Of UInt32))
- uid: Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Single)
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Single)
  id: Write(System.Single)
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: Write(Single)
  nameWithType: IndexWriter.Write(Single)
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Single)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Write
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 332
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Write(float value)
    content.vb: Public Sub Write(value As Single)
    parameters:
    - id: value
      type: System.Single
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.Write*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Single[])
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Single[])
  id: Write(System.Single[])
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: Write(Single[])
  nameWithType: IndexWriter.Write(Single[])
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Single[])
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Write
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 341
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Write(float[] array)
    content.vb: Public Sub Write(array As Single())
    parameters:
    - id: array
      type: System.Single[]
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.Write*
  nameWithType.vb: IndexWriter.Write(Single())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Single())
  name.vb: Write(Single())
- uid: Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Collections.Generic.IEnumerable{System.Single})
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Collections.Generic.IEnumerable{System.Single})
  id: Write(System.Collections.Generic.IEnumerable{System.Single})
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: Write(IEnumerable<Single>)
  nameWithType: IndexWriter.Write(IEnumerable<Single>)
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Collections.Generic.IEnumerable<System.Single>)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Write
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 358
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Write(IEnumerable<float> array)
    content.vb: Public Sub Write(array As IEnumerable(Of Single))
    parameters:
    - id: array
      type: System.Collections.Generic.IEnumerable{System.Single}
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.Write*
  nameWithType.vb: IndexWriter.Write(IEnumerable(Of Single))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.IndexWriter.Write(System.Collections.Generic.IEnumerable(Of System.Single))
  name.vb: Write(IEnumerable(Of Single))
- uid: Microsoft.Health.InvertedIndex.IndexWriter.WriteArray(System.String[])
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.WriteArray(System.String[])
  id: WriteArray(System.String[])
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: WriteArray(String[])
  nameWithType: IndexWriter.WriteArray(String[])
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.WriteArray(System.String[])
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteArray
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 375
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void WriteArray(string[] array)
    content.vb: Public Sub WriteArray(array As String())
    parameters:
    - id: array
      type: System.String[]
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.WriteArray*
  nameWithType.vb: IndexWriter.WriteArray(String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.IndexWriter.WriteArray(System.String())
  name.vb: WriteArray(String())
- uid: Microsoft.Health.InvertedIndex.IndexWriter.WriteArray(System.Collections.Generic.IEnumerable{System.String},System.Int32)
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.WriteArray(System.Collections.Generic.IEnumerable{System.String},System.Int32)
  id: WriteArray(System.Collections.Generic.IEnumerable{System.String},System.Int32)
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: WriteArray(IEnumerable<String>, Int32)
  nameWithType: IndexWriter.WriteArray(IEnumerable<String>, Int32)
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.WriteArray(System.Collections.Generic.IEnumerable<System.String>, System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteArray
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 393
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void WriteArray(IEnumerable<string> array, int length)
    content.vb: Public Sub WriteArray(array As IEnumerable(Of String), length As Integer)
    parameters:
    - id: array
      type: System.Collections.Generic.IEnumerable{System.String}
      description: ''
    - id: length
      type: System.Int32
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.WriteArray*
  nameWithType.vb: IndexWriter.WriteArray(IEnumerable(Of String), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.IndexWriter.WriteArray(System.Collections.Generic.IEnumerable(Of System.String), System.Int32)
  name.vb: WriteArray(IEnumerable(Of String), Int32)
- uid: Microsoft.Health.InvertedIndex.IndexWriter.WriteArray(System.Int32[])
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.WriteArray(System.Int32[])
  id: WriteArray(System.Int32[])
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: WriteArray(Int32[])
  nameWithType: IndexWriter.WriteArray(Int32[])
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.WriteArray(System.Int32[])
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteArray
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 410
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void WriteArray(int[] array)
    content.vb: Public Sub WriteArray(array As Integer())
    parameters:
    - id: array
      type: System.Int32[]
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.WriteArray*
  nameWithType.vb: IndexWriter.WriteArray(Int32())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.IndexWriter.WriteArray(System.Int32())
  name.vb: WriteArray(Int32())
- uid: Microsoft.Health.InvertedIndex.IndexWriter.WriteArray(System.UInt32[])
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.WriteArray(System.UInt32[])
  id: WriteArray(System.UInt32[])
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: WriteArray(UInt32[])
  nameWithType: IndexWriter.WriteArray(UInt32[])
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.WriteArray(System.UInt32[])
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteArray
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 427
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void WriteArray(uint[] array)
    content.vb: Public Sub WriteArray(array As UInteger())
    parameters:
    - id: array
      type: System.UInt32[]
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.WriteArray*
  nameWithType.vb: IndexWriter.WriteArray(UInt32())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.IndexWriter.WriteArray(System.UInt32())
  name.vb: WriteArray(UInt32())
- uid: Microsoft.Health.InvertedIndex.IndexWriter.WriteArray(System.Collections.Generic.IEnumerable{System.UInt32},System.Int32)
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.WriteArray(System.Collections.Generic.IEnumerable{System.UInt32},System.Int32)
  id: WriteArray(System.Collections.Generic.IEnumerable{System.UInt32},System.Int32)
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: WriteArray(IEnumerable<UInt32>, Int32)
  nameWithType: IndexWriter.WriteArray(IEnumerable<UInt32>, Int32)
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.WriteArray(System.Collections.Generic.IEnumerable<System.UInt32>, System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteArray
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 445
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void WriteArray(IEnumerable<uint> array, int length)
    content.vb: Public Sub WriteArray(array As IEnumerable(Of UInteger), length As Integer)
    parameters:
    - id: array
      type: System.Collections.Generic.IEnumerable{System.UInt32}
      description: ''
    - id: length
      type: System.Int32
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.WriteArray*
  nameWithType.vb: IndexWriter.WriteArray(IEnumerable(Of UInt32), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.IndexWriter.WriteArray(System.Collections.Generic.IEnumerable(Of System.UInt32), System.Int32)
  name.vb: WriteArray(IEnumerable(Of UInt32), Int32)
- uid: Microsoft.Health.InvertedIndex.IndexWriter.WriteArray(System.Single[])
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.WriteArray(System.Single[])
  id: WriteArray(System.Single[])
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: WriteArray(Single[])
  nameWithType: IndexWriter.WriteArray(Single[])
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.WriteArray(System.Single[])
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteArray
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 462
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void WriteArray(float[] array)
    content.vb: Public Sub WriteArray(array As Single())
    parameters:
    - id: array
      type: System.Single[]
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.WriteArray*
  nameWithType.vb: IndexWriter.WriteArray(Single())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.IndexWriter.WriteArray(System.Single())
  name.vb: WriteArray(Single())
- uid: Microsoft.Health.InvertedIndex.IndexWriter.WriteArray(System.Collections.Generic.IEnumerable{System.Single},System.Int32)
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.WriteArray(System.Collections.Generic.IEnumerable{System.Single},System.Int32)
  id: WriteArray(System.Collections.Generic.IEnumerable{System.Single},System.Int32)
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: WriteArray(IEnumerable<Single>, Int32)
  nameWithType: IndexWriter.WriteArray(IEnumerable<Single>, Int32)
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.WriteArray(System.Collections.Generic.IEnumerable<System.Single>, System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteArray
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 480
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void WriteArray(IEnumerable<float> array, int length)
    content.vb: Public Sub WriteArray(array As IEnumerable(Of Single), length As Integer)
    parameters:
    - id: array
      type: System.Collections.Generic.IEnumerable{System.Single}
      description: ''
    - id: length
      type: System.Int32
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.WriteArray*
  nameWithType.vb: IndexWriter.WriteArray(IEnumerable(Of Single), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.IndexWriter.WriteArray(System.Collections.Generic.IEnumerable(Of System.Single), System.Int32)
  name.vb: WriteArray(IEnumerable(Of Single), Int32)
- uid: Microsoft.Health.InvertedIndex.IndexWriter.WriteRecordID(System.UInt32)
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.WriteRecordID(System.UInt32)
  id: WriteRecordID(System.UInt32)
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: WriteRecordID(UInt32)
  nameWithType: IndexWriter.WriteRecordID(UInt32)
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.WriteRecordID(System.UInt32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteRecordID
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 497
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void WriteRecordID(uint recordID)
    content.vb: Public Sub WriteRecordID(recordID As UInteger)
    parameters:
    - id: recordID
      type: System.UInt32
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.WriteRecordID*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexWriter.WriteRecordIDs(System.UInt32[])
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.WriteRecordIDs(System.UInt32[])
  id: WriteRecordIDs(System.UInt32[])
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: WriteRecordIDs(UInt32[])
  nameWithType: IndexWriter.WriteRecordIDs(UInt32[])
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.WriteRecordIDs(System.UInt32[])
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteRecordIDs
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 506
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void WriteRecordIDs(uint[] recordIDs)
    content.vb: Public Sub WriteRecordIDs(recordIDs As UInteger())
    parameters:
    - id: recordIDs
      type: System.UInt32[]
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.WriteRecordIDs*
  nameWithType.vb: IndexWriter.WriteRecordIDs(UInt32())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.IndexWriter.WriteRecordIDs(System.UInt32())
  name.vb: WriteRecordIDs(UInt32())
- uid: Microsoft.Health.InvertedIndex.IndexWriter.WriteRecordIDs(System.Collections.Generic.IEnumerable{System.UInt32})
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.WriteRecordIDs(System.Collections.Generic.IEnumerable{System.UInt32})
  id: WriteRecordIDs(System.Collections.Generic.IEnumerable{System.UInt32})
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: WriteRecordIDs(IEnumerable<UInt32>)
  nameWithType: IndexWriter.WriteRecordIDs(IEnumerable<UInt32>)
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.WriteRecordIDs(System.Collections.Generic.IEnumerable<System.UInt32>)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WriteRecordIDs
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 515
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void WriteRecordIDs(IEnumerable<uint> recordIDs)
    content.vb: Public Sub WriteRecordIDs(recordIDs As IEnumerable(Of UInteger))
    parameters:
    - id: recordIDs
      type: System.Collections.Generic.IEnumerable{System.UInt32}
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.WriteRecordIDs*
  nameWithType.vb: IndexWriter.WriteRecordIDs(IEnumerable(Of UInt32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.IndexWriter.WriteRecordIDs(System.Collections.Generic.IEnumerable(Of System.UInt32))
  name.vb: WriteRecordIDs(IEnumerable(Of UInt32))
- uid: Microsoft.Health.InvertedIndex.IndexWriter.WritePosting(Microsoft.Health.InvertedIndex.Posting{System.Single})
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.WritePosting(Microsoft.Health.InvertedIndex.Posting{System.Single})
  id: WritePosting(Microsoft.Health.InvertedIndex.Posting{System.Single})
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: WritePosting(Posting<Single>)
  nameWithType: IndexWriter.WritePosting(Posting<Single>)
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.WritePosting(Microsoft.Health.InvertedIndex.Posting<System.Single>)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WritePosting
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 524
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void WritePosting(Posting<float> posting)
    content.vb: Public Sub WritePosting(posting As Posting(Of Single))
    parameters:
    - id: posting
      type: Microsoft.Health.InvertedIndex.Posting{System.Single}
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.WritePosting*
  nameWithType.vb: IndexWriter.WritePosting(Posting(Of Single))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.IndexWriter.WritePosting(Microsoft.Health.InvertedIndex.Posting(Of System.Single))
  name.vb: WritePosting(Posting(Of Single))
- uid: Microsoft.Health.InvertedIndex.IndexWriter.WritePosting(Microsoft.Health.InvertedIndex.Posting{System.Int32})
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.WritePosting(Microsoft.Health.InvertedIndex.Posting{System.Int32})
  id: WritePosting(Microsoft.Health.InvertedIndex.Posting{System.Int32})
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: WritePosting(Posting<Int32>)
  nameWithType: IndexWriter.WritePosting(Posting<Int32>)
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.WritePosting(Microsoft.Health.InvertedIndex.Posting<System.Int32>)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WritePosting
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 534
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void WritePosting(Posting<int> posting)
    content.vb: Public Sub WritePosting(posting As Posting(Of Integer))
    parameters:
    - id: posting
      type: Microsoft.Health.InvertedIndex.Posting{System.Int32}
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.WritePosting*
  nameWithType.vb: IndexWriter.WritePosting(Posting(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.IndexWriter.WritePosting(Microsoft.Health.InvertedIndex.Posting(Of System.Int32))
  name.vb: WritePosting(Posting(Of Int32))
- uid: Microsoft.Health.InvertedIndex.IndexWriter.WritePosting(Microsoft.Health.InvertedIndex.Posting{System.Byte})
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.WritePosting(Microsoft.Health.InvertedIndex.Posting{System.Byte})
  id: WritePosting(Microsoft.Health.InvertedIndex.Posting{System.Byte})
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: WritePosting(Posting<Byte>)
  nameWithType: IndexWriter.WritePosting(Posting<Byte>)
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.WritePosting(Microsoft.Health.InvertedIndex.Posting<System.Byte>)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WritePosting
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 544
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void WritePosting(Posting<byte> posting)
    content.vb: Public Sub WritePosting(posting As Posting(Of Byte))
    parameters:
    - id: posting
      type: Microsoft.Health.InvertedIndex.Posting{System.Byte}
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.WritePosting*
  nameWithType.vb: IndexWriter.WritePosting(Posting(Of Byte))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.IndexWriter.WritePosting(Microsoft.Health.InvertedIndex.Posting(Of System.Byte))
  name.vb: WritePosting(Posting(Of Byte))
- uid: Microsoft.Health.InvertedIndex.IndexWriter.WritePosting(Microsoft.Health.InvertedIndex.Posting{System.UInt32})
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.WritePosting(Microsoft.Health.InvertedIndex.Posting{System.UInt32})
  id: WritePosting(Microsoft.Health.InvertedIndex.Posting{System.UInt32})
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: WritePosting(Posting<UInt32>)
  nameWithType: IndexWriter.WritePosting(Posting<UInt32>)
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.WritePosting(Microsoft.Health.InvertedIndex.Posting<System.UInt32>)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WritePosting
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 554
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void WritePosting(Posting<uint> posting)
    content.vb: Public Sub WritePosting(posting As Posting(Of UInteger))
    parameters:
    - id: posting
      type: Microsoft.Health.InvertedIndex.Posting{System.UInt32}
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.WritePosting*
  nameWithType.vb: IndexWriter.WritePosting(Posting(Of UInt32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.IndexWriter.WritePosting(Microsoft.Health.InvertedIndex.Posting(Of System.UInt32))
  name.vb: WritePosting(Posting(Of UInt32))
- uid: Microsoft.Health.InvertedIndex.IndexWriter.WritePostings(Microsoft.Health.InvertedIndex.Posting{System.Single}[])
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.WritePostings(Microsoft.Health.InvertedIndex.Posting{System.Single}[])
  id: WritePostings(Microsoft.Health.InvertedIndex.Posting{System.Single}[])
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: WritePostings(Posting<Single>[])
  nameWithType: IndexWriter.WritePostings(Posting<Single>[])
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.WritePostings(Microsoft.Health.InvertedIndex.Posting<System.Single>[])
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WritePostings
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 564
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void WritePostings(Posting<float>[] postings)
    content.vb: Public Sub WritePostings(postings As Posting(Of Single)())
    parameters:
    - id: postings
      type: Microsoft.Health.InvertedIndex.Posting{System.Single}[]
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.WritePostings*
  nameWithType.vb: IndexWriter.WritePostings(Posting(Of Single)())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.IndexWriter.WritePostings(Microsoft.Health.InvertedIndex.Posting(Of System.Single)())
  name.vb: WritePostings(Posting(Of Single)())
- uid: Microsoft.Health.InvertedIndex.IndexWriter.WritePostings(System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.Posting{System.Single}},System.Int32)
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.WritePostings(System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.Posting{System.Single}},System.Int32)
  id: WritePostings(System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.Posting{System.Single}},System.Int32)
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: WritePostings(IEnumerable<Posting<Single>>, Int32)
  nameWithType: IndexWriter.WritePostings(IEnumerable<Posting<Single>>, Int32)
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.WritePostings(System.Collections.Generic.IEnumerable<Microsoft.Health.InvertedIndex.Posting<System.Single>>, System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WritePostings
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 582
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void WritePostings(IEnumerable<Posting<float>> postings, int length)
    content.vb: Public Sub WritePostings(postings As IEnumerable(Of Posting(Of Single)), length As Integer)
    parameters:
    - id: postings
      type: System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.Posting{System.Single}}
      description: ''
    - id: length
      type: System.Int32
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.WritePostings*
  nameWithType.vb: IndexWriter.WritePostings(IEnumerable(Of Posting(Of Single)), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.IndexWriter.WritePostings(System.Collections.Generic.IEnumerable(Of Microsoft.Health.InvertedIndex.Posting(Of System.Single)), System.Int32)
  name.vb: WritePostings(IEnumerable(Of Posting(Of Single)), Int32)
- uid: Microsoft.Health.InvertedIndex.IndexWriter.WritePostings(Microsoft.Health.InvertedIndex.Posting{System.Int32}[])
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.WritePostings(Microsoft.Health.InvertedIndex.Posting{System.Int32}[])
  id: WritePostings(Microsoft.Health.InvertedIndex.Posting{System.Int32}[])
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: WritePostings(Posting<Int32>[])
  nameWithType: IndexWriter.WritePostings(Posting<Int32>[])
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.WritePostings(Microsoft.Health.InvertedIndex.Posting<System.Int32>[])
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WritePostings
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 599
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void WritePostings(Posting<int>[] postings)
    content.vb: Public Sub WritePostings(postings As Posting(Of Integer)())
    parameters:
    - id: postings
      type: Microsoft.Health.InvertedIndex.Posting{System.Int32}[]
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.WritePostings*
  nameWithType.vb: IndexWriter.WritePostings(Posting(Of Int32)())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.IndexWriter.WritePostings(Microsoft.Health.InvertedIndex.Posting(Of System.Int32)())
  name.vb: WritePostings(Posting(Of Int32)())
- uid: Microsoft.Health.InvertedIndex.IndexWriter.WritePostings(System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.Posting{System.Int32}},System.Int32)
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.WritePostings(System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.Posting{System.Int32}},System.Int32)
  id: WritePostings(System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.Posting{System.Int32}},System.Int32)
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: WritePostings(IEnumerable<Posting<Int32>>, Int32)
  nameWithType: IndexWriter.WritePostings(IEnumerable<Posting<Int32>>, Int32)
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.WritePostings(System.Collections.Generic.IEnumerable<Microsoft.Health.InvertedIndex.Posting<System.Int32>>, System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WritePostings
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 617
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void WritePostings(IEnumerable<Posting<int>> postings, int length)
    content.vb: Public Sub WritePostings(postings As IEnumerable(Of Posting(Of Integer)), length As Integer)
    parameters:
    - id: postings
      type: System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.Posting{System.Int32}}
      description: ''
    - id: length
      type: System.Int32
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.WritePostings*
  nameWithType.vb: IndexWriter.WritePostings(IEnumerable(Of Posting(Of Int32)), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.IndexWriter.WritePostings(System.Collections.Generic.IEnumerable(Of Microsoft.Health.InvertedIndex.Posting(Of System.Int32)), System.Int32)
  name.vb: WritePostings(IEnumerable(Of Posting(Of Int32)), Int32)
- uid: Microsoft.Health.InvertedIndex.IndexWriter.WritePostings(Microsoft.Health.InvertedIndex.Posting{System.Byte}[])
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.WritePostings(Microsoft.Health.InvertedIndex.Posting{System.Byte}[])
  id: WritePostings(Microsoft.Health.InvertedIndex.Posting{System.Byte}[])
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: WritePostings(Posting<Byte>[])
  nameWithType: IndexWriter.WritePostings(Posting<Byte>[])
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.WritePostings(Microsoft.Health.InvertedIndex.Posting<System.Byte>[])
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WritePostings
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 634
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void WritePostings(Posting<byte>[] postings)
    content.vb: Public Sub WritePostings(postings As Posting(Of Byte)())
    parameters:
    - id: postings
      type: Microsoft.Health.InvertedIndex.Posting{System.Byte}[]
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.WritePostings*
  nameWithType.vb: IndexWriter.WritePostings(Posting(Of Byte)())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.IndexWriter.WritePostings(Microsoft.Health.InvertedIndex.Posting(Of System.Byte)())
  name.vb: WritePostings(Posting(Of Byte)())
- uid: Microsoft.Health.InvertedIndex.IndexWriter.WritePostings(System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.Posting{System.Byte}},System.Int32)
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.WritePostings(System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.Posting{System.Byte}},System.Int32)
  id: WritePostings(System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.Posting{System.Byte}},System.Int32)
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: WritePostings(IEnumerable<Posting<Byte>>, Int32)
  nameWithType: IndexWriter.WritePostings(IEnumerable<Posting<Byte>>, Int32)
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.WritePostings(System.Collections.Generic.IEnumerable<Microsoft.Health.InvertedIndex.Posting<System.Byte>>, System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: WritePostings
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 652
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void WritePostings(IEnumerable<Posting<byte>> postings, int length)
    content.vb: Public Sub WritePostings(postings As IEnumerable(Of Posting(Of Byte)), length As Integer)
    parameters:
    - id: postings
      type: System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.Posting{System.Byte}}
      description: ''
    - id: length
      type: System.Int32
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.WritePostings*
  nameWithType.vb: IndexWriter.WritePostings(IEnumerable(Of Posting(Of Byte)), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.IndexWriter.WritePostings(System.Collections.Generic.IEnumerable(Of Microsoft.Health.InvertedIndex.Posting(Of System.Byte)), System.Int32)
  name.vb: WritePostings(IEnumerable(Of Posting(Of Byte)), Int32)
- uid: Microsoft.Health.InvertedIndex.IndexWriter.Write(Microsoft.Health.InvertedIndex.IRecordIDList)
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.Write(Microsoft.Health.InvertedIndex.IRecordIDList)
  id: Write(Microsoft.Health.InvertedIndex.IRecordIDList)
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: Write(IRecordIDList)
  nameWithType: IndexWriter.Write(IRecordIDList)
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.Write(Microsoft.Health.InvertedIndex.IRecordIDList)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Write
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 670
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public bool Write(IRecordIDList postings)
    content.vb: Public Function Write(postings As IRecordIDList) As Boolean
    parameters:
    - id: postings
      type: Microsoft.Health.InvertedIndex.IRecordIDList
      description: ''
    return:
      type: System.Boolean
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.Write*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexWriter.Write(Microsoft.Health.InvertedIndex.RecordIDArray)
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.Write(Microsoft.Health.InvertedIndex.RecordIDArray)
  id: Write(Microsoft.Health.InvertedIndex.RecordIDArray)
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: Write(RecordIDArray)
  nameWithType: IndexWriter.Write(RecordIDArray)
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.Write(Microsoft.Health.InvertedIndex.RecordIDArray)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Write
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 705
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Write(RecordIDArray postingArray)
    content.vb: Public Sub Write(postingArray As RecordIDArray)
    parameters:
    - id: postingArray
      type: Microsoft.Health.InvertedIndex.RecordIDArray
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.Write*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexWriter.Write(Microsoft.Health.InvertedIndex.ISerializableIndexType)
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.Write(Microsoft.Health.InvertedIndex.ISerializableIndexType)
  id: Write(Microsoft.Health.InvertedIndex.ISerializableIndexType)
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: Write(ISerializableIndexType)
  nameWithType: IndexWriter.Write(ISerializableIndexType)
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.Write(Microsoft.Health.InvertedIndex.ISerializableIndexType)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Write
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 721
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Write(ISerializableIndexType type)
    content.vb: Public Sub Write(type As ISerializableIndexType)
    parameters:
    - id: type
      type: Microsoft.Health.InvertedIndex.ISerializableIndexType
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.Write*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexWriter.Write(Microsoft.Health.InvertedIndex.BytePostingArray)
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.Write(Microsoft.Health.InvertedIndex.BytePostingArray)
  id: Write(Microsoft.Health.InvertedIndex.BytePostingArray)
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: Write(BytePostingArray)
  nameWithType: IndexWriter.Write(BytePostingArray)
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.Write(Microsoft.Health.InvertedIndex.BytePostingArray)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Write
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 765
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Write(BytePostingArray postingArray)
    content.vb: Public Sub Write(postingArray As BytePostingArray)
    parameters:
    - id: postingArray
      type: Microsoft.Health.InvertedIndex.BytePostingArray
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.Write*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexWriter.Write(Microsoft.Health.InvertedIndex.IntPostingArray)
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.Write(Microsoft.Health.InvertedIndex.IntPostingArray)
  id: Write(Microsoft.Health.InvertedIndex.IntPostingArray)
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: Write(IntPostingArray)
  nameWithType: IndexWriter.Write(IntPostingArray)
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.Write(Microsoft.Health.InvertedIndex.IntPostingArray)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Write
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 775
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Write(IntPostingArray postingArray)
    content.vb: Public Sub Write(postingArray As IntPostingArray)
    parameters:
    - id: postingArray
      type: Microsoft.Health.InvertedIndex.IntPostingArray
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.Write*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexWriter.Write(Microsoft.Health.InvertedIndex.FloatPostingArray)
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.Write(Microsoft.Health.InvertedIndex.FloatPostingArray)
  id: Write(Microsoft.Health.InvertedIndex.FloatPostingArray)
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: Write(FloatPostingArray)
  nameWithType: IndexWriter.Write(FloatPostingArray)
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.Write(Microsoft.Health.InvertedIndex.FloatPostingArray)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Write
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 785
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Write(FloatPostingArray postingArray)
    content.vb: Public Sub Write(postingArray As FloatPostingArray)
    parameters:
    - id: postingArray
      type: Microsoft.Health.InvertedIndex.FloatPostingArray
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.Write*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexWriter.Write(Microsoft.Health.InvertedIndex.BytePostingList)
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.Write(Microsoft.Health.InvertedIndex.BytePostingList)
  id: Write(Microsoft.Health.InvertedIndex.BytePostingList)
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: Write(BytePostingList)
  nameWithType: IndexWriter.Write(BytePostingList)
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.Write(Microsoft.Health.InvertedIndex.BytePostingList)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Write
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 795
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Write(BytePostingList postingArray)
    content.vb: Public Sub Write(postingArray As BytePostingList)
    parameters:
    - id: postingArray
      type: Microsoft.Health.InvertedIndex.BytePostingList
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.Write*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexWriter.Write(Microsoft.Health.InvertedIndex.IntPostingList)
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.Write(Microsoft.Health.InvertedIndex.IntPostingList)
  id: Write(Microsoft.Health.InvertedIndex.IntPostingList)
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: Write(IntPostingList)
  nameWithType: IndexWriter.Write(IntPostingList)
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.Write(Microsoft.Health.InvertedIndex.IntPostingList)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Write
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 806
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Write(IntPostingList postingArray)
    content.vb: Public Sub Write(postingArray As IntPostingList)
    parameters:
    - id: postingArray
      type: Microsoft.Health.InvertedIndex.IntPostingList
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.Write*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexWriter.Write(Microsoft.Health.InvertedIndex.FloatPostingList)
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.Write(Microsoft.Health.InvertedIndex.FloatPostingList)
  id: Write(Microsoft.Health.InvertedIndex.FloatPostingList)
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: Write(FloatPostingList)
  nameWithType: IndexWriter.Write(FloatPostingList)
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.Write(Microsoft.Health.InvertedIndex.FloatPostingList)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Write
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 817
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Write(FloatPostingList postingArray)
    content.vb: Public Sub Write(postingArray As FloatPostingList)
    parameters:
    - id: postingArray
      type: Microsoft.Health.InvertedIndex.FloatPostingList
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.Write*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexWriter.Write(Microsoft.Health.InvertedIndex.SequentialFloatPostingArray)
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.Write(Microsoft.Health.InvertedIndex.SequentialFloatPostingArray)
  id: Write(Microsoft.Health.InvertedIndex.SequentialFloatPostingArray)
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: Write(SequentialFloatPostingArray)
  nameWithType: IndexWriter.Write(SequentialFloatPostingArray)
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.Write(Microsoft.Health.InvertedIndex.SequentialFloatPostingArray)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Write
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 828
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Write(SequentialFloatPostingArray postingArray)
    content.vb: Public Sub Write(postingArray As SequentialFloatPostingArray)
    parameters:
    - id: postingArray
      type: Microsoft.Health.InvertedIndex.SequentialFloatPostingArray
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.Write*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.IndexWriter.OnWriteCustomType(Microsoft.Health.InvertedIndex.ISerializableIndexType)
  commentId: M:Microsoft.Health.InvertedIndex.IndexWriter.OnWriteCustomType(Microsoft.Health.InvertedIndex.ISerializableIndexType)
  id: OnWriteCustomType(Microsoft.Health.InvertedIndex.ISerializableIndexType)
  parent: Microsoft.Health.InvertedIndex.IndexWriter
  langs:
  - csharp
  - vb
  name: OnWriteCustomType(ISerializableIndexType)
  nameWithType: IndexWriter.OnWriteCustomType(ISerializableIndexType)
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.OnWriteCustomType(Microsoft.Health.InvertedIndex.ISerializableIndexType)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: OnWriteCustomType
    path: ../Microsoft.Health.Utility/search/InvertedIndex/IndexWriter.cs
    startLine: 839
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: protected virtual void OnWriteCustomType(ISerializableIndexType type)
    content.vb: Protected Overridable Sub OnWriteCustomType(type As ISerializableIndexType)
    parameters:
    - id: type
      type: Microsoft.Health.InvertedIndex.ISerializableIndexType
      description: ''
  overload: Microsoft.Health.InvertedIndex.IndexWriter.OnWriteCustomType*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Microsoft.Health.InvertedIndex
  commentId: N:Microsoft.Health.InvertedIndex
  isExternal: false
  name: Microsoft.Health.InvertedIndex
  nameWithType: Microsoft.Health.InvertedIndex
  fullName: Microsoft.Health.InvertedIndex
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.IndexWriter.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<IndexWriter>()
  nameWithType: TypeHelper.ValueOrDbNull<IndexWriter>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.InvertedIndex.IndexWriter>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of IndexWriter)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.InvertedIndex.IndexWriter)()
  name.vb: ValueOrDbNull(Of IndexWriter)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<IndexWriter>
    nameWithType: TypeHelper.ValueOrDbNull<IndexWriter>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.InvertedIndex.IndexWriter>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of IndexWriter)
    nameWithType: TypeHelper.ValueOrDbNull(Of IndexWriter)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.InvertedIndex.IndexWriter)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.InvertedIndex.IndexWriter.#ctor*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexWriter.#ctor
  isExternal: false
  name: IndexWriter
  nameWithType: IndexWriter.IndexWriter
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.IndexWriter
- uid: System.IO.BinaryWriter
  commentId: T:System.IO.BinaryWriter
  parent: System.IO
  isExternal: true
  name: BinaryWriter
  nameWithType: BinaryWriter
  fullName: System.IO.BinaryWriter
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Microsoft.Health.InvertedIndex.IndexWriter.Writer*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexWriter.Writer
  isExternal: false
  name: Writer
  nameWithType: IndexWriter.Writer
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.Writer
- uid: Microsoft.Health.InvertedIndex.IndexWriter.WriteToken*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexWriter.WriteToken
  isExternal: false
  name: WriteToken
  nameWithType: IndexWriter.WriteToken
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.WriteToken
- uid: Microsoft.Health.InvertedIndex.IndexWriter.WriteVersion*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexWriter.WriteVersion
  isExternal: false
  name: WriteVersion
  nameWithType: IndexWriter.WriteVersion
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.WriteVersion
- uid: Microsoft.Health.InvertedIndex.IndexWriter.WriteCollectionLength*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexWriter.WriteCollectionLength
  isExternal: false
  name: WriteCollectionLength
  nameWithType: IndexWriter.WriteCollectionLength
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.WriteCollectionLength
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Health.InvertedIndex.IndexWriter.WriteCollectionHeader*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexWriter.WriteCollectionHeader
  isExternal: false
  name: WriteCollectionHeader
  nameWithType: IndexWriter.WriteCollectionHeader
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.WriteCollectionHeader
- uid: Microsoft.Health.InvertedIndex.IndexWriter.Write*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexWriter.Write
  isExternal: false
  name: Write
  nameWithType: IndexWriter.Write
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.Write
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.IEnumerable{System.Byte}
  commentId: T:System.Collections.Generic.IEnumerable{System.Byte}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Byte>
  nameWithType: IEnumerable<Byte>
  fullName: System.Collections.Generic.IEnumerable<System.Byte>
  nameWithType.vb: IEnumerable(Of Byte)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Byte)
  name.vb: IEnumerable(Of Byte)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32[]
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.IEnumerable{System.Int32}
  commentId: T:System.Collections.Generic.IEnumerable{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Int32>
  nameWithType: IEnumerable<Int32>
  fullName: System.Collections.Generic.IEnumerable<System.Int32>
  nameWithType.vb: IEnumerable(Of Int32)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Int32)
  name.vb: IEnumerable(Of Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.UInt32[]
  name: UInt32[]
  nameWithType: UInt32[]
  fullName: System.UInt32[]
  nameWithType.vb: UInt32()
  fullName.vb: System.UInt32()
  name.vb: UInt32()
  spec.csharp:
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.IEnumerable{System.UInt32}
  commentId: T:System.Collections.Generic.IEnumerable{System.UInt32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<UInt32>
  nameWithType: IEnumerable<UInt32>
  fullName: System.Collections.Generic.IEnumerable<System.UInt32>
  nameWithType.vb: IEnumerable(Of UInt32)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.UInt32)
  name.vb: IEnumerable(Of UInt32)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Single[]
  name: Single[]
  nameWithType: Single[]
  fullName: System.Single[]
  nameWithType.vb: Single()
  fullName.vb: System.Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.IEnumerable{System.Single}
  commentId: T:System.Collections.Generic.IEnumerable{System.Single}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Single>
  nameWithType: IEnumerable<Single>
  fullName: System.Collections.Generic.IEnumerable<System.Single>
  nameWithType.vb: IEnumerable(Of Single)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Single)
  name.vb: IEnumerable(Of Single)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.IndexWriter.WriteArray*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexWriter.WriteArray
  isExternal: false
  name: WriteArray
  nameWithType: IndexWriter.WriteArray
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.WriteArray
- uid: Microsoft.Health.InvertedIndex.IndexWriter.WriteRecordID*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexWriter.WriteRecordID
  isExternal: false
  name: WriteRecordID
  nameWithType: IndexWriter.WriteRecordID
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.WriteRecordID
- uid: Microsoft.Health.InvertedIndex.IndexWriter.WriteRecordIDs*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexWriter.WriteRecordIDs
  isExternal: false
  name: WriteRecordIDs
  nameWithType: IndexWriter.WriteRecordIDs
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.WriteRecordIDs
- uid: Microsoft.Health.InvertedIndex.IndexWriter.WritePosting*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexWriter.WritePosting
  isExternal: false
  name: WritePosting
  nameWithType: IndexWriter.WritePosting
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.WritePosting
- uid: Microsoft.Health.InvertedIndex.Posting{System.Single}
  commentId: T:Microsoft.Health.InvertedIndex.Posting{System.Single}
  parent: Microsoft.Health.InvertedIndex
  definition: Microsoft.Health.InvertedIndex.Posting`1
  name: Posting<Single>
  nameWithType: Posting<Single>
  fullName: Microsoft.Health.InvertedIndex.Posting<System.Single>
  nameWithType.vb: Posting(Of Single)
  fullName.vb: Microsoft.Health.InvertedIndex.Posting(Of System.Single)
  name.vb: Posting(Of Single)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.Posting`1
  commentId: T:Microsoft.Health.InvertedIndex.Posting`1
  parent: Microsoft.Health.InvertedIndex
  isExternal: false
  name: Posting<T>
  nameWithType: Posting<T>
  fullName: Microsoft.Health.InvertedIndex.Posting<T>
  nameWithType.vb: Posting(Of T)
  fullName.vb: Microsoft.Health.InvertedIndex.Posting(Of T)
  name.vb: Posting(Of T)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.Posting{System.Int32}
  commentId: T:Microsoft.Health.InvertedIndex.Posting{System.Int32}
  parent: Microsoft.Health.InvertedIndex
  definition: Microsoft.Health.InvertedIndex.Posting`1
  name: Posting<Int32>
  nameWithType: Posting<Int32>
  fullName: Microsoft.Health.InvertedIndex.Posting<System.Int32>
  nameWithType.vb: Posting(Of Int32)
  fullName.vb: Microsoft.Health.InvertedIndex.Posting(Of System.Int32)
  name.vb: Posting(Of Int32)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.Posting{System.Byte}
  commentId: T:Microsoft.Health.InvertedIndex.Posting{System.Byte}
  parent: Microsoft.Health.InvertedIndex
  definition: Microsoft.Health.InvertedIndex.Posting`1
  name: Posting<Byte>
  nameWithType: Posting<Byte>
  fullName: Microsoft.Health.InvertedIndex.Posting<System.Byte>
  nameWithType.vb: Posting(Of Byte)
  fullName.vb: Microsoft.Health.InvertedIndex.Posting(Of System.Byte)
  name.vb: Posting(Of Byte)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.Posting{System.UInt32}
  commentId: T:Microsoft.Health.InvertedIndex.Posting{System.UInt32}
  parent: Microsoft.Health.InvertedIndex
  definition: Microsoft.Health.InvertedIndex.Posting`1
  name: Posting<UInt32>
  nameWithType: Posting<UInt32>
  fullName: Microsoft.Health.InvertedIndex.Posting<System.UInt32>
  nameWithType.vb: Posting(Of UInt32)
  fullName.vb: Microsoft.Health.InvertedIndex.Posting(Of System.UInt32)
  name.vb: Posting(Of UInt32)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.IndexWriter.WritePostings*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexWriter.WritePostings
  isExternal: false
  name: WritePostings
  nameWithType: IndexWriter.WritePostings
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.WritePostings
- uid: Microsoft.Health.InvertedIndex.Posting{System.Single}[]
  name: Posting<Single>[]
  nameWithType: Posting<Single>[]
  fullName: Microsoft.Health.InvertedIndex.Posting<System.Single>[]
  nameWithType.vb: Posting(Of Single)()
  fullName.vb: Microsoft.Health.InvertedIndex.Posting(Of System.Single)()
  name.vb: Posting(Of Single)()
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.Posting{System.Single}}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.Posting{System.Single}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Posting<Single>>
  nameWithType: IEnumerable<Posting<Single>>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Health.InvertedIndex.Posting<System.Single>>
  nameWithType.vb: IEnumerable(Of Posting(Of Single))
  fullName.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Health.InvertedIndex.Posting(Of System.Single))
  name.vb: IEnumerable(Of Posting(Of Single))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.Posting{System.Int32}[]
  name: Posting<Int32>[]
  nameWithType: Posting<Int32>[]
  fullName: Microsoft.Health.InvertedIndex.Posting<System.Int32>[]
  nameWithType.vb: Posting(Of Int32)()
  fullName.vb: Microsoft.Health.InvertedIndex.Posting(Of System.Int32)()
  name.vb: Posting(Of Int32)()
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.Posting{System.Int32}}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.Posting{System.Int32}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Posting<Int32>>
  nameWithType: IEnumerable<Posting<Int32>>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Health.InvertedIndex.Posting<System.Int32>>
  nameWithType.vb: IEnumerable(Of Posting(Of Int32))
  fullName.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Health.InvertedIndex.Posting(Of System.Int32))
  name.vb: IEnumerable(Of Posting(Of Int32))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.Posting{System.Byte}[]
  name: Posting<Byte>[]
  nameWithType: Posting<Byte>[]
  fullName: Microsoft.Health.InvertedIndex.Posting<System.Byte>[]
  nameWithType.vb: Posting(Of Byte)()
  fullName.vb: Microsoft.Health.InvertedIndex.Posting(Of System.Byte)()
  name.vb: Posting(Of Byte)()
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.Posting{System.Byte}}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.Posting{System.Byte}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Posting<Byte>>
  nameWithType: IEnumerable<Posting<Byte>>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Health.InvertedIndex.Posting<System.Byte>>
  nameWithType.vb: IEnumerable(Of Posting(Of Byte))
  fullName.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Health.InvertedIndex.Posting(Of System.Byte))
  name.vb: IEnumerable(Of Posting(Of Byte))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.InvertedIndex.Posting`1
    name: Posting
    nameWithType: Posting
    fullName: Microsoft.Health.InvertedIndex.Posting
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.IRecordIDList
  commentId: T:Microsoft.Health.InvertedIndex.IRecordIDList
  parent: Microsoft.Health.InvertedIndex
  isExternal: false
  name: IRecordIDList
  nameWithType: IRecordIDList
  fullName: Microsoft.Health.InvertedIndex.IRecordIDList
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Health.InvertedIndex.RecordIDArray
  commentId: T:Microsoft.Health.InvertedIndex.RecordIDArray
  parent: Microsoft.Health.InvertedIndex
  isExternal: false
  name: RecordIDArray
  nameWithType: RecordIDArray
  fullName: Microsoft.Health.InvertedIndex.RecordIDArray
- uid: Microsoft.Health.InvertedIndex.ISerializableIndexType
  commentId: T:Microsoft.Health.InvertedIndex.ISerializableIndexType
  parent: Microsoft.Health.InvertedIndex
  isExternal: false
  name: ISerializableIndexType
  nameWithType: ISerializableIndexType
  fullName: Microsoft.Health.InvertedIndex.ISerializableIndexType
- uid: Microsoft.Health.InvertedIndex.BytePostingArray
  commentId: T:Microsoft.Health.InvertedIndex.BytePostingArray
  parent: Microsoft.Health.InvertedIndex
  isExternal: false
  name: BytePostingArray
  nameWithType: BytePostingArray
  fullName: Microsoft.Health.InvertedIndex.BytePostingArray
- uid: Microsoft.Health.InvertedIndex.IntPostingArray
  commentId: T:Microsoft.Health.InvertedIndex.IntPostingArray
  parent: Microsoft.Health.InvertedIndex
  isExternal: false
  name: IntPostingArray
  nameWithType: IntPostingArray
  fullName: Microsoft.Health.InvertedIndex.IntPostingArray
- uid: Microsoft.Health.InvertedIndex.FloatPostingArray
  commentId: T:Microsoft.Health.InvertedIndex.FloatPostingArray
  parent: Microsoft.Health.InvertedIndex
  isExternal: false
  name: FloatPostingArray
  nameWithType: FloatPostingArray
  fullName: Microsoft.Health.InvertedIndex.FloatPostingArray
- uid: Microsoft.Health.InvertedIndex.BytePostingList
  commentId: T:Microsoft.Health.InvertedIndex.BytePostingList
  parent: Microsoft.Health.InvertedIndex
  isExternal: false
  name: BytePostingList
  nameWithType: BytePostingList
  fullName: Microsoft.Health.InvertedIndex.BytePostingList
- uid: Microsoft.Health.InvertedIndex.IntPostingList
  commentId: T:Microsoft.Health.InvertedIndex.IntPostingList
  parent: Microsoft.Health.InvertedIndex
  isExternal: false
  name: IntPostingList
  nameWithType: IntPostingList
  fullName: Microsoft.Health.InvertedIndex.IntPostingList
- uid: Microsoft.Health.InvertedIndex.FloatPostingList
  commentId: T:Microsoft.Health.InvertedIndex.FloatPostingList
  parent: Microsoft.Health.InvertedIndex
  isExternal: false
  name: FloatPostingList
  nameWithType: FloatPostingList
  fullName: Microsoft.Health.InvertedIndex.FloatPostingList
- uid: Microsoft.Health.InvertedIndex.SequentialFloatPostingArray
  commentId: T:Microsoft.Health.InvertedIndex.SequentialFloatPostingArray
  parent: Microsoft.Health.InvertedIndex
  isExternal: false
  name: SequentialFloatPostingArray
  nameWithType: SequentialFloatPostingArray
  fullName: Microsoft.Health.InvertedIndex.SequentialFloatPostingArray
- uid: Microsoft.Health.InvertedIndex.IndexWriter.OnWriteCustomType*
  commentId: Overload:Microsoft.Health.InvertedIndex.IndexWriter.OnWriteCustomType
  isExternal: false
  name: OnWriteCustomType
  nameWithType: IndexWriter.OnWriteCustomType
  fullName: Microsoft.Health.InvertedIndex.IndexWriter.OnWriteCustomType
