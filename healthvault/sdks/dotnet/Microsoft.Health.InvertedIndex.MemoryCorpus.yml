### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.InvertedIndex.MemoryCorpus
  commentId: T:Microsoft.Health.InvertedIndex.MemoryCorpus
  id: MemoryCorpus
  parent: Microsoft.Health.InvertedIndex
  children:
  - Microsoft.Health.InvertedIndex.MemoryCorpus.#ctor
  - Microsoft.Health.InvertedIndex.MemoryCorpus.#ctor(System.Int32)
  - Microsoft.Health.InvertedIndex.MemoryCorpus.AcronymDetection
  - Microsoft.Health.InvertedIndex.MemoryCorpus.Add(Microsoft.Health.InvertedIndex.CorpusReader)
  - Microsoft.Health.InvertedIndex.MemoryCorpus.Add(System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.CorpusEntry})
  - Microsoft.Health.InvertedIndex.MemoryCorpus.Add(System.Collections.Generic.IEnumerable{System.String})
  - Microsoft.Health.InvertedIndex.MemoryCorpus.Add(System.String)
  - Microsoft.Health.InvertedIndex.MemoryCorpus.AddToIndex(Microsoft.Health.InvertedIndex.ITextIndexer)
  - Microsoft.Health.InvertedIndex.MemoryCorpus.Build
  - Microsoft.Health.InvertedIndex.MemoryCorpus.Clear
  - Microsoft.Health.InvertedIndex.MemoryCorpus.Count
  - Microsoft.Health.InvertedIndex.MemoryCorpus.DefaultStaticScore
  - Microsoft.Health.InvertedIndex.MemoryCorpus.GetAllText(System.UInt32)
  - Microsoft.Health.InvertedIndex.MemoryCorpus.GetEnumerator
  - Microsoft.Health.InvertedIndex.MemoryCorpus.GetStaticScores
  - Microsoft.Health.InvertedIndex.MemoryCorpus.GetText(System.UInt32)
  - Microsoft.Health.InvertedIndex.MemoryCorpus.Item(System.UInt32)
  - Microsoft.Health.InvertedIndex.MemoryCorpus.Phrases
  - Microsoft.Health.InvertedIndex.MemoryCorpus.ResolvePhrases(Microsoft.Health.InvertedIndex.MatchCollector)
  - Microsoft.Health.InvertedIndex.MemoryCorpus.SetStaticScores(System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.CorpusEntry})
  - Microsoft.Health.InvertedIndex.MemoryCorpus.Sort
  - Microsoft.Health.InvertedIndex.MemoryCorpus.System#Collections#IEnumerable#GetEnumerator
  - Microsoft.Health.InvertedIndex.MemoryCorpus.Trim
  langs:
  - csharp
  - vb
  name: MemoryCorpus
  nameWithType: MemoryCorpus
  fullName: Microsoft.Health.InvertedIndex.MemoryCorpus
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/MemoryCorpus.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: MemoryCorpus
    path: ../Microsoft.Health.Utility/search/InvertedIndex/MemoryCorpus.cs
    startLine: 30
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: 'public class MemoryCorpus : ICorpus, IEnumerable<uint>, IEnumerable, IStaticScoreTable'
    content.vb: >-
      Public Class MemoryCorpus
          Implements ICorpus, IEnumerable(Of UInteger), IEnumerable, IStaticScoreTable
  inheritance:
  - System.Object
  implements:
  - Microsoft.Health.InvertedIndex.ICorpus
  - System.Collections.Generic.IEnumerable{System.UInt32}
  - System.Collections.IEnumerable
  - Microsoft.Health.InvertedIndex.IStaticScoreTable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.InvertedIndex.MemoryCorpus.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.InvertedIndex.MemoryCorpus.#ctor
  commentId: M:Microsoft.Health.InvertedIndex.MemoryCorpus.#ctor
  id: '#ctor'
  parent: Microsoft.Health.InvertedIndex.MemoryCorpus
  langs:
  - csharp
  - vb
  name: MemoryCorpus()
  nameWithType: MemoryCorpus.MemoryCorpus()
  fullName: Microsoft.Health.InvertedIndex.MemoryCorpus.MemoryCorpus()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/MemoryCorpus.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.Utility/search/InvertedIndex/MemoryCorpus.cs
    startLine: 39
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public MemoryCorpus()
    content.vb: Public Sub New
  overload: Microsoft.Health.InvertedIndex.MemoryCorpus.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.MemoryCorpus.#ctor(System.Int32)
  commentId: M:Microsoft.Health.InvertedIndex.MemoryCorpus.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: Microsoft.Health.InvertedIndex.MemoryCorpus
  langs:
  - csharp
  - vb
  name: MemoryCorpus(Int32)
  nameWithType: MemoryCorpus.MemoryCorpus(Int32)
  fullName: Microsoft.Health.InvertedIndex.MemoryCorpus.MemoryCorpus(System.Int32)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/MemoryCorpus.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.Utility/search/InvertedIndex/MemoryCorpus.cs
    startLine: 48
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public MemoryCorpus(int capacity)
    content.vb: Public Sub New(capacity As Integer)
    parameters:
    - id: capacity
      type: System.Int32
      description: ''
  overload: Microsoft.Health.InvertedIndex.MemoryCorpus.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.MemoryCorpus.Count
  commentId: P:Microsoft.Health.InvertedIndex.MemoryCorpus.Count
  id: Count
  parent: Microsoft.Health.InvertedIndex.MemoryCorpus
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: MemoryCorpus.Count
  fullName: Microsoft.Health.InvertedIndex.MemoryCorpus.Count
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/MemoryCorpus.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Count
    path: ../Microsoft.Health.Utility/search/InvertedIndex/MemoryCorpus.cs
    startLine: 57
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Health.InvertedIndex.MemoryCorpus.Count*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.InvertedIndex.MemoryCorpus.Item(System.UInt32)
  commentId: P:Microsoft.Health.InvertedIndex.MemoryCorpus.Item(System.UInt32)
  id: Item(System.UInt32)
  parent: Microsoft.Health.InvertedIndex.MemoryCorpus
  langs:
  - csharp
  - vb
  name: Item[UInt32]
  nameWithType: MemoryCorpus.Item[UInt32]
  fullName: Microsoft.Health.InvertedIndex.MemoryCorpus.Item[System.UInt32]
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/MemoryCorpus.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: this[]
    path: ../Microsoft.Health.Utility/search/InvertedIndex/MemoryCorpus.cs
    startLine: 70
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public string this[uint recordID] { get; set; }
    content.vb: Public Property Item(recordID As UInteger) As String
    parameters:
    - id: recordID
      type: System.UInt32
      description: ''
    return:
      type: System.String
      description: ''
  overload: Microsoft.Health.InvertedIndex.MemoryCorpus.Item*
  nameWithType.vb: MemoryCorpus.Item(UInt32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.MemoryCorpus.Item(System.UInt32)
  name.vb: Item(UInt32)
- uid: Microsoft.Health.InvertedIndex.MemoryCorpus.DefaultStaticScore
  commentId: P:Microsoft.Health.InvertedIndex.MemoryCorpus.DefaultStaticScore
  id: DefaultStaticScore
  parent: Microsoft.Health.InvertedIndex.MemoryCorpus
  langs:
  - csharp
  - vb
  name: DefaultStaticScore
  nameWithType: MemoryCorpus.DefaultStaticScore
  fullName: Microsoft.Health.InvertedIndex.MemoryCorpus.DefaultStaticScore
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/MemoryCorpus.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DefaultStaticScore
    path: ../Microsoft.Health.Utility/search/InvertedIndex/MemoryCorpus.cs
    startLine: 91
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public float DefaultStaticScore { get; set; }
    content.vb: Public Property DefaultStaticScore As Single
    parameters: []
    return:
      type: System.Single
  overload: Microsoft.Health.InvertedIndex.MemoryCorpus.DefaultStaticScore*
  implements:
  - Microsoft.Health.InvertedIndex.IStaticScoreTable.DefaultStaticScore
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.MemoryCorpus.Phrases
  commentId: P:Microsoft.Health.InvertedIndex.MemoryCorpus.Phrases
  id: Phrases
  parent: Microsoft.Health.InvertedIndex.MemoryCorpus
  langs:
  - csharp
  - vb
  name: Phrases
  nameWithType: MemoryCorpus.Phrases
  fullName: Microsoft.Health.InvertedIndex.MemoryCorpus.Phrases
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/MemoryCorpus.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Phrases
    path: ../Microsoft.Health.Utility/search/InvertedIndex/MemoryCorpus.cs
    startLine: 111
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public IEnumerable<string> Phrases { get; }
    content.vb: Public ReadOnly Property Phrases As IEnumerable(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
  overload: Microsoft.Health.InvertedIndex.MemoryCorpus.Phrases*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.InvertedIndex.MemoryCorpus.AcronymDetection
  commentId: F:Microsoft.Health.InvertedIndex.MemoryCorpus.AcronymDetection
  id: AcronymDetection
  parent: Microsoft.Health.InvertedIndex.MemoryCorpus
  langs:
  - csharp
  - vb
  name: AcronymDetection
  nameWithType: MemoryCorpus.AcronymDetection
  fullName: Microsoft.Health.InvertedIndex.MemoryCorpus.AcronymDetection
  type: Field
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/MemoryCorpus.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AcronymDetection
    path: ../Microsoft.Health.Utility/search/InvertedIndex/MemoryCorpus.cs
    startLine: 122
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public bool AcronymDetection
    content.vb: Public AcronymDetection As Boolean
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.MemoryCorpus.GetStaticScores
  commentId: M:Microsoft.Health.InvertedIndex.MemoryCorpus.GetStaticScores
  id: GetStaticScores
  parent: Microsoft.Health.InvertedIndex.MemoryCorpus
  langs:
  - csharp
  - vb
  name: GetStaticScores()
  nameWithType: MemoryCorpus.GetStaticScores()
  fullName: Microsoft.Health.InvertedIndex.MemoryCorpus.GetStaticScores()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/MemoryCorpus.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetStaticScores
    path: ../Microsoft.Health.Utility/search/InvertedIndex/MemoryCorpus.cs
    startLine: 128
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public RecordPropertyEnumerator<float> GetStaticScores()
    content.vb: Public Function GetStaticScores As RecordPropertyEnumerator(Of Single)
    return:
      type: Microsoft.Health.InvertedIndex.RecordPropertyEnumerator{System.Single}
      description: ''
  overload: Microsoft.Health.InvertedIndex.MemoryCorpus.GetStaticScores*
  implements:
  - Microsoft.Health.InvertedIndex.IStaticScoreTable.GetStaticScores
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.MemoryCorpus.GetAllText(System.UInt32)
  commentId: M:Microsoft.Health.InvertedIndex.MemoryCorpus.GetAllText(System.UInt32)
  id: GetAllText(System.UInt32)
  parent: Microsoft.Health.InvertedIndex.MemoryCorpus
  langs:
  - csharp
  - vb
  name: GetAllText(UInt32)
  nameWithType: MemoryCorpus.GetAllText(UInt32)
  fullName: Microsoft.Health.InvertedIndex.MemoryCorpus.GetAllText(System.UInt32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/MemoryCorpus.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetAllText
    path: ../Microsoft.Health.Utility/search/InvertedIndex/MemoryCorpus.cs
    startLine: 138
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public string GetAllText(uint recordID)
    content.vb: Public Function GetAllText(recordID As UInteger) As String
    parameters:
    - id: recordID
      type: System.UInt32
      description: ''
    return:
      type: System.String
      description: ''
  overload: Microsoft.Health.InvertedIndex.MemoryCorpus.GetAllText*
  implements:
  - Microsoft.Health.InvertedIndex.ICorpus.GetAllText(System.UInt32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.MemoryCorpus.GetText(System.UInt32)
  commentId: M:Microsoft.Health.InvertedIndex.MemoryCorpus.GetText(System.UInt32)
  id: GetText(System.UInt32)
  parent: Microsoft.Health.InvertedIndex.MemoryCorpus
  langs:
  - csharp
  - vb
  name: GetText(UInt32)
  nameWithType: MemoryCorpus.GetText(UInt32)
  fullName: Microsoft.Health.InvertedIndex.MemoryCorpus.GetText(System.UInt32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/MemoryCorpus.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetText
    path: ../Microsoft.Health.Utility/search/InvertedIndex/MemoryCorpus.cs
    startLine: 148
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public TextReader GetText(uint recordID)
    content.vb: Public Function GetText(recordID As UInteger) As TextReader
    parameters:
    - id: recordID
      type: System.UInt32
      description: ''
    return:
      type: System.IO.TextReader
      description: ''
  overload: Microsoft.Health.InvertedIndex.MemoryCorpus.GetText*
  implements:
  - Microsoft.Health.InvertedIndex.ICorpus.GetText(System.UInt32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.MemoryCorpus.Add(System.String)
  commentId: M:Microsoft.Health.InvertedIndex.MemoryCorpus.Add(System.String)
  id: Add(System.String)
  parent: Microsoft.Health.InvertedIndex.MemoryCorpus
  langs:
  - csharp
  - vb
  name: Add(String)
  nameWithType: MemoryCorpus.Add(String)
  fullName: Microsoft.Health.InvertedIndex.MemoryCorpus.Add(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/MemoryCorpus.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Add
    path: ../Microsoft.Health.Utility/search/InvertedIndex/MemoryCorpus.cs
    startLine: 157
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Add(string phrase)
    content.vb: Public Sub Add(phrase As String)
    parameters:
    - id: phrase
      type: System.String
      description: ''
  overload: Microsoft.Health.InvertedIndex.MemoryCorpus.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.MemoryCorpus.Clear
  commentId: M:Microsoft.Health.InvertedIndex.MemoryCorpus.Clear
  id: Clear
  parent: Microsoft.Health.InvertedIndex.MemoryCorpus
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: MemoryCorpus.Clear()
  fullName: Microsoft.Health.InvertedIndex.MemoryCorpus.Clear()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/MemoryCorpus.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Clear
    path: ../Microsoft.Health.Utility/search/InvertedIndex/MemoryCorpus.cs
    startLine: 170
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: Microsoft.Health.InvertedIndex.MemoryCorpus.Clear*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.MemoryCorpus.Sort
  commentId: M:Microsoft.Health.InvertedIndex.MemoryCorpus.Sort
  id: Sort
  parent: Microsoft.Health.InvertedIndex.MemoryCorpus
  langs:
  - csharp
  - vb
  name: Sort()
  nameWithType: MemoryCorpus.Sort()
  fullName: Microsoft.Health.InvertedIndex.MemoryCorpus.Sort()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/MemoryCorpus.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Sort
    path: ../Microsoft.Health.Utility/search/InvertedIndex/MemoryCorpus.cs
    startLine: 179
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Sort()
    content.vb: Public Sub Sort
  overload: Microsoft.Health.InvertedIndex.MemoryCorpus.Sort*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.MemoryCorpus.Trim
  commentId: M:Microsoft.Health.InvertedIndex.MemoryCorpus.Trim
  id: Trim
  parent: Microsoft.Health.InvertedIndex.MemoryCorpus
  langs:
  - csharp
  - vb
  name: Trim()
  nameWithType: MemoryCorpus.Trim()
  fullName: Microsoft.Health.InvertedIndex.MemoryCorpus.Trim()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/MemoryCorpus.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Trim
    path: ../Microsoft.Health.Utility/search/InvertedIndex/MemoryCorpus.cs
    startLine: 187
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Trim()
    content.vb: Public Sub Trim
  overload: Microsoft.Health.InvertedIndex.MemoryCorpus.Trim*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.MemoryCorpus.Build
  commentId: M:Microsoft.Health.InvertedIndex.MemoryCorpus.Build
  id: Build
  parent: Microsoft.Health.InvertedIndex.MemoryCorpus
  langs:
  - csharp
  - vb
  name: Build()
  nameWithType: MemoryCorpus.Build()
  fullName: Microsoft.Health.InvertedIndex.MemoryCorpus.Build()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/MemoryCorpus.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Build
    path: ../Microsoft.Health.Utility/search/InvertedIndex/MemoryCorpus.cs
    startLine: 196
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Build()
    content.vb: Public Sub Build
  overload: Microsoft.Health.InvertedIndex.MemoryCorpus.Build*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.MemoryCorpus.Add(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Microsoft.Health.InvertedIndex.MemoryCorpus.Add(System.Collections.Generic.IEnumerable{System.String})
  id: Add(System.Collections.Generic.IEnumerable{System.String})
  parent: Microsoft.Health.InvertedIndex.MemoryCorpus
  langs:
  - csharp
  - vb
  name: Add(IEnumerable<String>)
  nameWithType: MemoryCorpus.Add(IEnumerable<String>)
  fullName: Microsoft.Health.InvertedIndex.MemoryCorpus.Add(System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/MemoryCorpus.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Add
    path: ../Microsoft.Health.Utility/search/InvertedIndex/MemoryCorpus.cs
    startLine: 206
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Add(IEnumerable<string> phrases)
    content.vb: Public Sub Add(phrases As IEnumerable(Of String))
    parameters:
    - id: phrases
      type: System.Collections.Generic.IEnumerable{System.String}
      description: ''
  overload: Microsoft.Health.InvertedIndex.MemoryCorpus.Add*
  nameWithType.vb: MemoryCorpus.Add(IEnumerable(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.MemoryCorpus.Add(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: Add(IEnumerable(Of String))
- uid: Microsoft.Health.InvertedIndex.MemoryCorpus.Add(System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.CorpusEntry})
  commentId: M:Microsoft.Health.InvertedIndex.MemoryCorpus.Add(System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.CorpusEntry})
  id: Add(System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.CorpusEntry})
  parent: Microsoft.Health.InvertedIndex.MemoryCorpus
  langs:
  - csharp
  - vb
  name: Add(IEnumerable<CorpusEntry>)
  nameWithType: MemoryCorpus.Add(IEnumerable<CorpusEntry>)
  fullName: Microsoft.Health.InvertedIndex.MemoryCorpus.Add(System.Collections.Generic.IEnumerable<Microsoft.Health.InvertedIndex.CorpusEntry>)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/MemoryCorpus.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Add
    path: ../Microsoft.Health.Utility/search/InvertedIndex/MemoryCorpus.cs
    startLine: 223
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Add(IEnumerable<CorpusEntry> entries)
    content.vb: Public Sub Add(entries As IEnumerable(Of CorpusEntry))
    parameters:
    - id: entries
      type: System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.CorpusEntry}
      description: ''
  overload: Microsoft.Health.InvertedIndex.MemoryCorpus.Add*
  nameWithType.vb: MemoryCorpus.Add(IEnumerable(Of CorpusEntry))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.MemoryCorpus.Add(System.Collections.Generic.IEnumerable(Of Microsoft.Health.InvertedIndex.CorpusEntry))
  name.vb: Add(IEnumerable(Of CorpusEntry))
- uid: Microsoft.Health.InvertedIndex.MemoryCorpus.Add(Microsoft.Health.InvertedIndex.CorpusReader)
  commentId: M:Microsoft.Health.InvertedIndex.MemoryCorpus.Add(Microsoft.Health.InvertedIndex.CorpusReader)
  id: Add(Microsoft.Health.InvertedIndex.CorpusReader)
  parent: Microsoft.Health.InvertedIndex.MemoryCorpus
  langs:
  - csharp
  - vb
  name: Add(CorpusReader)
  nameWithType: MemoryCorpus.Add(CorpusReader)
  fullName: Microsoft.Health.InvertedIndex.MemoryCorpus.Add(Microsoft.Health.InvertedIndex.CorpusReader)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/MemoryCorpus.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Add
    path: ../Microsoft.Health.Utility/search/InvertedIndex/MemoryCorpus.cs
    startLine: 243
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void Add(CorpusReader reader)
    content.vb: Public Sub Add(reader As CorpusReader)
    parameters:
    - id: reader
      type: Microsoft.Health.InvertedIndex.CorpusReader
      description: ''
  overload: Microsoft.Health.InvertedIndex.MemoryCorpus.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.MemoryCorpus.AddToIndex(Microsoft.Health.InvertedIndex.ITextIndexer)
  commentId: M:Microsoft.Health.InvertedIndex.MemoryCorpus.AddToIndex(Microsoft.Health.InvertedIndex.ITextIndexer)
  id: AddToIndex(Microsoft.Health.InvertedIndex.ITextIndexer)
  parent: Microsoft.Health.InvertedIndex.MemoryCorpus
  langs:
  - csharp
  - vb
  name: AddToIndex(ITextIndexer)
  nameWithType: MemoryCorpus.AddToIndex(ITextIndexer)
  fullName: Microsoft.Health.InvertedIndex.MemoryCorpus.AddToIndex(Microsoft.Health.InvertedIndex.ITextIndexer)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/MemoryCorpus.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: AddToIndex
    path: ../Microsoft.Health.Utility/search/InvertedIndex/MemoryCorpus.cs
    startLine: 257
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void AddToIndex(ITextIndexer indexer)
    content.vb: Public Sub AddToIndex(indexer As ITextIndexer)
    parameters:
    - id: indexer
      type: Microsoft.Health.InvertedIndex.ITextIndexer
      description: ''
  overload: Microsoft.Health.InvertedIndex.MemoryCorpus.AddToIndex*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.MemoryCorpus.SetStaticScores(System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.CorpusEntry})
  commentId: M:Microsoft.Health.InvertedIndex.MemoryCorpus.SetStaticScores(System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.CorpusEntry})
  id: SetStaticScores(System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.CorpusEntry})
  parent: Microsoft.Health.InvertedIndex.MemoryCorpus
  langs:
  - csharp
  - vb
  name: SetStaticScores(IEnumerable<CorpusEntry>)
  nameWithType: MemoryCorpus.SetStaticScores(IEnumerable<CorpusEntry>)
  fullName: Microsoft.Health.InvertedIndex.MemoryCorpus.SetStaticScores(System.Collections.Generic.IEnumerable<Microsoft.Health.InvertedIndex.CorpusEntry>)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/MemoryCorpus.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: SetStaticScores
    path: ../Microsoft.Health.Utility/search/InvertedIndex/MemoryCorpus.cs
    startLine: 269
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public void SetStaticScores(IEnumerable<CorpusEntry> entries)
    content.vb: Public Sub SetStaticScores(entries As IEnumerable(Of CorpusEntry))
    parameters:
    - id: entries
      type: System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.CorpusEntry}
      description: ''
  overload: Microsoft.Health.InvertedIndex.MemoryCorpus.SetStaticScores*
  nameWithType.vb: MemoryCorpus.SetStaticScores(IEnumerable(Of CorpusEntry))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.InvertedIndex.MemoryCorpus.SetStaticScores(System.Collections.Generic.IEnumerable(Of Microsoft.Health.InvertedIndex.CorpusEntry))
  name.vb: SetStaticScores(IEnumerable(Of CorpusEntry))
- uid: Microsoft.Health.InvertedIndex.MemoryCorpus.ResolvePhrases(Microsoft.Health.InvertedIndex.MatchCollector)
  commentId: M:Microsoft.Health.InvertedIndex.MemoryCorpus.ResolvePhrases(Microsoft.Health.InvertedIndex.MatchCollector)
  id: ResolvePhrases(Microsoft.Health.InvertedIndex.MatchCollector)
  parent: Microsoft.Health.InvertedIndex.MemoryCorpus
  langs:
  - csharp
  - vb
  name: ResolvePhrases(MatchCollector)
  nameWithType: MemoryCorpus.ResolvePhrases(MatchCollector)
  fullName: Microsoft.Health.InvertedIndex.MemoryCorpus.ResolvePhrases(Microsoft.Health.InvertedIndex.MatchCollector)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/MemoryCorpus.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ResolvePhrases
    path: ../Microsoft.Health.Utility/search/InvertedIndex/MemoryCorpus.cs
    startLine: 309
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\nThe MatchCollector contains phrase IDs. Turn those into actual phrases for returning\n"
  example: []
  syntax:
    content: public string[] ResolvePhrases(MatchCollector matches)
    content.vb: Public Function ResolvePhrases(matches As MatchCollector) As String()
    parameters:
    - id: matches
      type: Microsoft.Health.InvertedIndex.MatchCollector
    return:
      type: System.String[]
  overload: Microsoft.Health.InvertedIndex.MemoryCorpus.ResolvePhrases*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.MemoryCorpus.GetEnumerator
  commentId: M:Microsoft.Health.InvertedIndex.MemoryCorpus.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.Health.InvertedIndex.MemoryCorpus
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: MemoryCorpus.GetEnumerator()
  fullName: Microsoft.Health.InvertedIndex.MemoryCorpus.GetEnumerator()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/MemoryCorpus.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetEnumerator
    path: ../Microsoft.Health.Utility/search/InvertedIndex/MemoryCorpus.cs
    startLine: 329
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  summary: "\n\n"
  example: []
  syntax:
    content: public IEnumerator<uint> GetEnumerator()
    content.vb: Public Function GetEnumerator As IEnumerator(Of UInteger)
    return:
      type: System.Collections.Generic.IEnumerator{System.UInt32}
      description: ''
  overload: Microsoft.Health.InvertedIndex.MemoryCorpus.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{System.UInt32}.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.InvertedIndex.MemoryCorpus.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Microsoft.Health.InvertedIndex.MemoryCorpus.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: Microsoft.Health.InvertedIndex.MemoryCorpus
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: MemoryCorpus.IEnumerable.GetEnumerator()
  fullName: Microsoft.Health.InvertedIndex.MemoryCorpus.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/InvertedIndex/MemoryCorpus.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: System.Collections.IEnumerable.GetEnumerator
    path: ../Microsoft.Health.Utility/search/InvertedIndex/MemoryCorpus.cs
    startLine: 339
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.InvertedIndex
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
    return:
      type: System.Collections.IEnumerator
  overload: Microsoft.Health.InvertedIndex.MemoryCorpus.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: MemoryCorpus.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
references:
- uid: Microsoft.Health.InvertedIndex
  commentId: N:Microsoft.Health.InvertedIndex
  isExternal: false
  name: Microsoft.Health.InvertedIndex
  nameWithType: Microsoft.Health.InvertedIndex
  fullName: Microsoft.Health.InvertedIndex
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.InvertedIndex.ICorpus
  commentId: T:Microsoft.Health.InvertedIndex.ICorpus
  parent: Microsoft.Health.InvertedIndex
  isExternal: false
  name: ICorpus
  nameWithType: ICorpus
  fullName: Microsoft.Health.InvertedIndex.ICorpus
- uid: System.Collections.Generic.IEnumerable{System.UInt32}
  commentId: T:System.Collections.Generic.IEnumerable{System.UInt32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<UInt32>
  nameWithType: IEnumerable<UInt32>
  fullName: System.Collections.Generic.IEnumerable<System.UInt32>
  nameWithType.vb: IEnumerable(Of UInt32)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.UInt32)
  name.vb: IEnumerable(Of UInt32)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: Microsoft.Health.InvertedIndex.IStaticScoreTable
  commentId: T:Microsoft.Health.InvertedIndex.IStaticScoreTable
  parent: Microsoft.Health.InvertedIndex
  isExternal: false
  name: IStaticScoreTable
  nameWithType: IStaticScoreTable
  fullName: Microsoft.Health.InvertedIndex.IStaticScoreTable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.MemoryCorpus.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<MemoryCorpus>()
  nameWithType: TypeHelper.ValueOrDbNull<MemoryCorpus>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.InvertedIndex.MemoryCorpus>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of MemoryCorpus)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.InvertedIndex.MemoryCorpus)()
  name.vb: ValueOrDbNull(Of MemoryCorpus)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<MemoryCorpus>
    nameWithType: TypeHelper.ValueOrDbNull<MemoryCorpus>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.InvertedIndex.MemoryCorpus>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of MemoryCorpus)
    nameWithType: TypeHelper.ValueOrDbNull(Of MemoryCorpus)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.InvertedIndex.MemoryCorpus)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.InvertedIndex.MemoryCorpus.#ctor*
  commentId: Overload:Microsoft.Health.InvertedIndex.MemoryCorpus.#ctor
  isExternal: false
  name: MemoryCorpus
  nameWithType: MemoryCorpus.MemoryCorpus
  fullName: Microsoft.Health.InvertedIndex.MemoryCorpus.MemoryCorpus
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Health.InvertedIndex.MemoryCorpus.Count*
  commentId: Overload:Microsoft.Health.InvertedIndex.MemoryCorpus.Count
  isExternal: false
  name: Count
  nameWithType: MemoryCorpus.Count
  fullName: Microsoft.Health.InvertedIndex.MemoryCorpus.Count
- uid: Microsoft.Health.InvertedIndex.MemoryCorpus.Item*
  commentId: Overload:Microsoft.Health.InvertedIndex.MemoryCorpus.Item
  isExternal: false
  name: Item
  nameWithType: MemoryCorpus.Item
  fullName: Microsoft.Health.InvertedIndex.MemoryCorpus.Item
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.InvertedIndex.MemoryCorpus.DefaultStaticScore*
  commentId: Overload:Microsoft.Health.InvertedIndex.MemoryCorpus.DefaultStaticScore
  isExternal: false
  name: DefaultStaticScore
  nameWithType: MemoryCorpus.DefaultStaticScore
  fullName: Microsoft.Health.InvertedIndex.MemoryCorpus.DefaultStaticScore
- uid: Microsoft.Health.InvertedIndex.IStaticScoreTable.DefaultStaticScore
  commentId: P:Microsoft.Health.InvertedIndex.IStaticScoreTable.DefaultStaticScore
  parent: Microsoft.Health.InvertedIndex.IStaticScoreTable
  isExternal: false
  name: DefaultStaticScore
  nameWithType: IStaticScoreTable.DefaultStaticScore
  fullName: Microsoft.Health.InvertedIndex.IStaticScoreTable.DefaultStaticScore
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Microsoft.Health.InvertedIndex.MemoryCorpus.Phrases*
  commentId: Overload:Microsoft.Health.InvertedIndex.MemoryCorpus.Phrases
  isExternal: false
  name: Phrases
  nameWithType: MemoryCorpus.Phrases
  fullName: Microsoft.Health.InvertedIndex.MemoryCorpus.Phrases
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Health.InvertedIndex.MemoryCorpus.GetStaticScores*
  commentId: Overload:Microsoft.Health.InvertedIndex.MemoryCorpus.GetStaticScores
  isExternal: false
  name: GetStaticScores
  nameWithType: MemoryCorpus.GetStaticScores
  fullName: Microsoft.Health.InvertedIndex.MemoryCorpus.GetStaticScores
- uid: Microsoft.Health.InvertedIndex.IStaticScoreTable.GetStaticScores
  commentId: M:Microsoft.Health.InvertedIndex.IStaticScoreTable.GetStaticScores
  parent: Microsoft.Health.InvertedIndex.IStaticScoreTable
  isExternal: false
  name: GetStaticScores()
  nameWithType: IStaticScoreTable.GetStaticScores()
  fullName: Microsoft.Health.InvertedIndex.IStaticScoreTable.GetStaticScores()
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.IStaticScoreTable.GetStaticScores
    name: GetStaticScores
    nameWithType: IStaticScoreTable.GetStaticScores
    fullName: Microsoft.Health.InvertedIndex.IStaticScoreTable.GetStaticScores
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.IStaticScoreTable.GetStaticScores
    name: GetStaticScores
    nameWithType: IStaticScoreTable.GetStaticScores
    fullName: Microsoft.Health.InvertedIndex.IStaticScoreTable.GetStaticScores
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.RecordPropertyEnumerator{System.Single}
  commentId: T:Microsoft.Health.InvertedIndex.RecordPropertyEnumerator{System.Single}
  parent: Microsoft.Health.InvertedIndex
  definition: Microsoft.Health.InvertedIndex.RecordPropertyEnumerator`1
  name: RecordPropertyEnumerator<Single>
  nameWithType: RecordPropertyEnumerator<Single>
  fullName: Microsoft.Health.InvertedIndex.RecordPropertyEnumerator<System.Single>
  nameWithType.vb: RecordPropertyEnumerator(Of Single)
  fullName.vb: Microsoft.Health.InvertedIndex.RecordPropertyEnumerator(Of System.Single)
  name.vb: RecordPropertyEnumerator(Of Single)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.RecordPropertyEnumerator`1
    name: RecordPropertyEnumerator
    nameWithType: RecordPropertyEnumerator
    fullName: Microsoft.Health.InvertedIndex.RecordPropertyEnumerator
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.RecordPropertyEnumerator`1
    name: RecordPropertyEnumerator
    nameWithType: RecordPropertyEnumerator
    fullName: Microsoft.Health.InvertedIndex.RecordPropertyEnumerator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.RecordPropertyEnumerator`1
  commentId: T:Microsoft.Health.InvertedIndex.RecordPropertyEnumerator`1
  isExternal: false
  name: RecordPropertyEnumerator<T>
  nameWithType: RecordPropertyEnumerator<T>
  fullName: Microsoft.Health.InvertedIndex.RecordPropertyEnumerator<T>
  nameWithType.vb: RecordPropertyEnumerator(Of T)
  fullName.vb: Microsoft.Health.InvertedIndex.RecordPropertyEnumerator(Of T)
  name.vb: RecordPropertyEnumerator(Of T)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.RecordPropertyEnumerator`1
    name: RecordPropertyEnumerator
    nameWithType: RecordPropertyEnumerator
    fullName: Microsoft.Health.InvertedIndex.RecordPropertyEnumerator
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.RecordPropertyEnumerator`1
    name: RecordPropertyEnumerator
    nameWithType: RecordPropertyEnumerator
    fullName: Microsoft.Health.InvertedIndex.RecordPropertyEnumerator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.MemoryCorpus.GetAllText*
  commentId: Overload:Microsoft.Health.InvertedIndex.MemoryCorpus.GetAllText
  isExternal: false
  name: GetAllText
  nameWithType: MemoryCorpus.GetAllText
  fullName: Microsoft.Health.InvertedIndex.MemoryCorpus.GetAllText
- uid: Microsoft.Health.InvertedIndex.ICorpus.GetAllText(System.UInt32)
  commentId: M:Microsoft.Health.InvertedIndex.ICorpus.GetAllText(System.UInt32)
  parent: Microsoft.Health.InvertedIndex.ICorpus
  isExternal: true
  name: GetAllText(UInt32)
  nameWithType: ICorpus.GetAllText(UInt32)
  fullName: Microsoft.Health.InvertedIndex.ICorpus.GetAllText(System.UInt32)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.ICorpus.GetAllText(System.UInt32)
    name: GetAllText
    nameWithType: ICorpus.GetAllText
    fullName: Microsoft.Health.InvertedIndex.ICorpus.GetAllText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.ICorpus.GetAllText(System.UInt32)
    name: GetAllText
    nameWithType: ICorpus.GetAllText
    fullName: Microsoft.Health.InvertedIndex.ICorpus.GetAllText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.MemoryCorpus.GetText*
  commentId: Overload:Microsoft.Health.InvertedIndex.MemoryCorpus.GetText
  isExternal: false
  name: GetText
  nameWithType: MemoryCorpus.GetText
  fullName: Microsoft.Health.InvertedIndex.MemoryCorpus.GetText
- uid: Microsoft.Health.InvertedIndex.ICorpus.GetText(System.UInt32)
  commentId: M:Microsoft.Health.InvertedIndex.ICorpus.GetText(System.UInt32)
  parent: Microsoft.Health.InvertedIndex.ICorpus
  isExternal: true
  name: GetText(UInt32)
  nameWithType: ICorpus.GetText(UInt32)
  fullName: Microsoft.Health.InvertedIndex.ICorpus.GetText(System.UInt32)
  spec.csharp:
  - uid: Microsoft.Health.InvertedIndex.ICorpus.GetText(System.UInt32)
    name: GetText
    nameWithType: ICorpus.GetText
    fullName: Microsoft.Health.InvertedIndex.ICorpus.GetText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.InvertedIndex.ICorpus.GetText(System.UInt32)
    name: GetText
    nameWithType: ICorpus.GetText
    fullName: Microsoft.Health.InvertedIndex.ICorpus.GetText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.TextReader
  commentId: T:System.IO.TextReader
  parent: System.IO
  isExternal: true
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Microsoft.Health.InvertedIndex.MemoryCorpus.Add*
  commentId: Overload:Microsoft.Health.InvertedIndex.MemoryCorpus.Add
  isExternal: false
  name: Add
  nameWithType: MemoryCorpus.Add
  fullName: Microsoft.Health.InvertedIndex.MemoryCorpus.Add
- uid: Microsoft.Health.InvertedIndex.MemoryCorpus.Clear*
  commentId: Overload:Microsoft.Health.InvertedIndex.MemoryCorpus.Clear
  isExternal: false
  name: Clear
  nameWithType: MemoryCorpus.Clear
  fullName: Microsoft.Health.InvertedIndex.MemoryCorpus.Clear
- uid: Microsoft.Health.InvertedIndex.MemoryCorpus.Sort*
  commentId: Overload:Microsoft.Health.InvertedIndex.MemoryCorpus.Sort
  isExternal: false
  name: Sort
  nameWithType: MemoryCorpus.Sort
  fullName: Microsoft.Health.InvertedIndex.MemoryCorpus.Sort
- uid: Microsoft.Health.InvertedIndex.MemoryCorpus.Trim*
  commentId: Overload:Microsoft.Health.InvertedIndex.MemoryCorpus.Trim
  isExternal: false
  name: Trim
  nameWithType: MemoryCorpus.Trim
  fullName: Microsoft.Health.InvertedIndex.MemoryCorpus.Trim
- uid: Microsoft.Health.InvertedIndex.MemoryCorpus.Build*
  commentId: Overload:Microsoft.Health.InvertedIndex.MemoryCorpus.Build
  isExternal: false
  name: Build
  nameWithType: MemoryCorpus.Build
  fullName: Microsoft.Health.InvertedIndex.MemoryCorpus.Build
- uid: System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.CorpusEntry}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.Health.InvertedIndex.CorpusEntry}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<CorpusEntry>
  nameWithType: IEnumerable<CorpusEntry>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Health.InvertedIndex.CorpusEntry>
  nameWithType.vb: IEnumerable(Of CorpusEntry)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Health.InvertedIndex.CorpusEntry)
  name.vb: IEnumerable(Of CorpusEntry)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.InvertedIndex.CorpusEntry
    name: CorpusEntry
    nameWithType: CorpusEntry
    fullName: Microsoft.Health.InvertedIndex.CorpusEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.InvertedIndex.CorpusEntry
    name: CorpusEntry
    nameWithType: CorpusEntry
    fullName: Microsoft.Health.InvertedIndex.CorpusEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.CorpusReader
  commentId: T:Microsoft.Health.InvertedIndex.CorpusReader
  parent: Microsoft.Health.InvertedIndex
  isExternal: false
  name: CorpusReader
  nameWithType: CorpusReader
  fullName: Microsoft.Health.InvertedIndex.CorpusReader
- uid: Microsoft.Health.InvertedIndex.MemoryCorpus.AddToIndex*
  commentId: Overload:Microsoft.Health.InvertedIndex.MemoryCorpus.AddToIndex
  isExternal: false
  name: AddToIndex
  nameWithType: MemoryCorpus.AddToIndex
  fullName: Microsoft.Health.InvertedIndex.MemoryCorpus.AddToIndex
- uid: Microsoft.Health.InvertedIndex.ITextIndexer
  commentId: T:Microsoft.Health.InvertedIndex.ITextIndexer
  parent: Microsoft.Health.InvertedIndex
  isExternal: false
  name: ITextIndexer
  nameWithType: ITextIndexer
  fullName: Microsoft.Health.InvertedIndex.ITextIndexer
- uid: Microsoft.Health.InvertedIndex.MemoryCorpus.SetStaticScores*
  commentId: Overload:Microsoft.Health.InvertedIndex.MemoryCorpus.SetStaticScores
  isExternal: false
  name: SetStaticScores
  nameWithType: MemoryCorpus.SetStaticScores
  fullName: Microsoft.Health.InvertedIndex.MemoryCorpus.SetStaticScores
- uid: Microsoft.Health.InvertedIndex.MemoryCorpus.ResolvePhrases*
  commentId: Overload:Microsoft.Health.InvertedIndex.MemoryCorpus.ResolvePhrases
  isExternal: false
  name: ResolvePhrases
  nameWithType: MemoryCorpus.ResolvePhrases
  fullName: Microsoft.Health.InvertedIndex.MemoryCorpus.ResolvePhrases
- uid: Microsoft.Health.InvertedIndex.MatchCollector
  commentId: T:Microsoft.Health.InvertedIndex.MatchCollector
  parent: Microsoft.Health.InvertedIndex
  isExternal: false
  name: MatchCollector
  nameWithType: MatchCollector
  fullName: Microsoft.Health.InvertedIndex.MatchCollector
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.Health.InvertedIndex.MemoryCorpus.GetEnumerator*
  commentId: Overload:Microsoft.Health.InvertedIndex.MemoryCorpus.GetEnumerator
  isExternal: false
  name: GetEnumerator
  nameWithType: MemoryCorpus.GetEnumerator
  fullName: Microsoft.Health.InvertedIndex.MemoryCorpus.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{System.UInt32}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{System.UInt32}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{System.UInt32}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<UInt32>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<System.UInt32>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of UInt32).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.UInt32).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<UInt32>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<System.UInt32>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of UInt32).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of System.UInt32).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{System.UInt32}
  commentId: T:System.Collections.Generic.IEnumerator{System.UInt32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<UInt32>
  nameWithType: IEnumerator<UInt32>
  fullName: System.Collections.Generic.IEnumerator<System.UInt32>
  nameWithType.vb: IEnumerator(Of UInt32)
  fullName.vb: System.Collections.Generic.IEnumerator(Of System.UInt32)
  name.vb: IEnumerator(Of UInt32)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.InvertedIndex.MemoryCorpus.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:Microsoft.Health.InvertedIndex.MemoryCorpus.System#Collections#IEnumerable#GetEnumerator
  isExternal: false
  name: IEnumerable.GetEnumerator
  nameWithType: MemoryCorpus.IEnumerable.GetEnumerator
  fullName: Microsoft.Health.InvertedIndex.MemoryCorpus.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: MemoryCorpus.System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
