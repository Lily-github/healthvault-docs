### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Utility.BclMarshaller
  commentId: T:Microsoft.Health.Utility.BclMarshaller
  id: BclMarshaller
  parent: Microsoft.Health.Utility
  children:
  - Microsoft.Health.Utility.BclMarshaller.Marshal(System.Xml.XmlWriter,System.String,System.Boolean)
  - Microsoft.Health.Utility.BclMarshaller.Marshal(System.Xml.XmlWriter,System.String,System.Collections.Generic.IDictionary{System.Guid,System.Guid})
  - Microsoft.Health.Utility.BclMarshaller.Marshal(System.Xml.XmlWriter,System.String,System.Collections.Generic.IDictionary{System.Guid,System.String})
  - Microsoft.Health.Utility.BclMarshaller.Marshal(System.Xml.XmlWriter,System.String,System.Collections.Generic.IDictionary{System.String,System.String})
  - Microsoft.Health.Utility.BclMarshaller.Marshal(System.Xml.XmlWriter,System.String,System.DateTime)
  - Microsoft.Health.Utility.BclMarshaller.Marshal(System.Xml.XmlWriter,System.String,System.Guid)
  - Microsoft.Health.Utility.BclMarshaller.Marshal(System.Xml.XmlWriter,System.String,System.Int32)
  - Microsoft.Health.Utility.BclMarshaller.Marshal(System.Xml.XmlWriter,System.String,System.String)
  - Microsoft.Health.Utility.BclMarshaller.Unmarshal(System.Xml.XmlReader,System.Boolean@)
  - Microsoft.Health.Utility.BclMarshaller.Unmarshal(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.Guid,System.Guid})
  - Microsoft.Health.Utility.BclMarshaller.Unmarshal(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.Guid,System.String})
  - Microsoft.Health.Utility.BclMarshaller.Unmarshal(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String})
  - Microsoft.Health.Utility.BclMarshaller.Unmarshal(System.Xml.XmlReader,System.DateTime@)
  - Microsoft.Health.Utility.BclMarshaller.Unmarshal(System.Xml.XmlReader,System.Guid@)
  - Microsoft.Health.Utility.BclMarshaller.Unmarshal(System.Xml.XmlReader,System.Int32@)
  - Microsoft.Health.Utility.BclMarshaller.Unmarshal(System.Xml.XmlReader,System.String@)
  - Microsoft.Health.Utility.BclMarshaller.UnmarshalBoolean(System.Xml.XmlReader)
  - Microsoft.Health.Utility.BclMarshaller.UnmarshalDateTime(System.Xml.XmlReader)
  - Microsoft.Health.Utility.BclMarshaller.UnmarshalGuid(System.Xml.XmlReader)
  - Microsoft.Health.Utility.BclMarshaller.UnmarshalInt32(System.Xml.XmlReader)
  - Microsoft.Health.Utility.BclMarshaller.UnmarshalString(System.Xml.XmlReader)
  langs:
  - csharp
  - vb
  name: BclMarshaller
  nameWithType: BclMarshaller
  fullName: Microsoft.Health.Utility.BclMarshaller
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/BclMarshaller.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: BclMarshaller
    path: ../Microsoft.Health.Utility/utilities/BclMarshaller.cs
    startLine: 24
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\nHelper class that marshals and unmarshals .NET base class objects\nthat do not implement the IMarshallable interface.\n"
  remarks: "\nThe Marshal methods DO NOT emit type information. For marshalling \nwith type information a seperate set of MarshalEx methods needs to be\nimplemented.\n"
  example: []
  syntax:
    content: public static class BclMarshaller
    content.vb: Public Module BclMarshaller
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Health.Utility.BclMarshaller.Marshal(System.Xml.XmlWriter,System.String,System.Int32)
  commentId: M:Microsoft.Health.Utility.BclMarshaller.Marshal(System.Xml.XmlWriter,System.String,System.Int32)
  id: Marshal(System.Xml.XmlWriter,System.String,System.Int32)
  parent: Microsoft.Health.Utility.BclMarshaller
  langs:
  - csharp
  - vb
  name: Marshal(XmlWriter, String, Int32)
  nameWithType: BclMarshaller.Marshal(XmlWriter, String, Int32)
  fullName: Microsoft.Health.Utility.BclMarshaller.Marshal(System.Xml.XmlWriter, System.String, System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/BclMarshaller.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Marshal
    path: ../Microsoft.Health.Utility/utilities/BclMarshaller.cs
    startLine: 32
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\n\n"
  example: []
  syntax:
    content: public static void Marshal(XmlWriter writer, string localName, int value)
    content.vb: Public Shared Sub Marshal(writer As XmlWriter, localName As String, value As Integer)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: ''
    - id: localName
      type: System.String
      description: ''
    - id: value
      type: System.Int32
      description: ''
  overload: Microsoft.Health.Utility.BclMarshaller.Marshal*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Utility.BclMarshaller.Marshal(System.Xml.XmlWriter,System.String,System.Boolean)
  commentId: M:Microsoft.Health.Utility.BclMarshaller.Marshal(System.Xml.XmlWriter,System.String,System.Boolean)
  id: Marshal(System.Xml.XmlWriter,System.String,System.Boolean)
  parent: Microsoft.Health.Utility.BclMarshaller
  langs:
  - csharp
  - vb
  name: Marshal(XmlWriter, String, Boolean)
  nameWithType: BclMarshaller.Marshal(XmlWriter, String, Boolean)
  fullName: Microsoft.Health.Utility.BclMarshaller.Marshal(System.Xml.XmlWriter, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/BclMarshaller.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Marshal
    path: ../Microsoft.Health.Utility/utilities/BclMarshaller.cs
    startLine: 44
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\n\n"
  example: []
  syntax:
    content: public static void Marshal(XmlWriter writer, string localName, bool value)
    content.vb: Public Shared Sub Marshal(writer As XmlWriter, localName As String, value As Boolean)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: ''
    - id: localName
      type: System.String
      description: ''
    - id: value
      type: System.Boolean
      description: ''
  overload: Microsoft.Health.Utility.BclMarshaller.Marshal*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Utility.BclMarshaller.Marshal(System.Xml.XmlWriter,System.String,System.String)
  commentId: M:Microsoft.Health.Utility.BclMarshaller.Marshal(System.Xml.XmlWriter,System.String,System.String)
  id: Marshal(System.Xml.XmlWriter,System.String,System.String)
  parent: Microsoft.Health.Utility.BclMarshaller
  langs:
  - csharp
  - vb
  name: Marshal(XmlWriter, String, String)
  nameWithType: BclMarshaller.Marshal(XmlWriter, String, String)
  fullName: Microsoft.Health.Utility.BclMarshaller.Marshal(System.Xml.XmlWriter, System.String, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/BclMarshaller.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Marshal
    path: ../Microsoft.Health.Utility/utilities/BclMarshaller.cs
    startLine: 57
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\n\n"
  example: []
  syntax:
    content: public static void Marshal(XmlWriter writer, string localName, string value)
    content.vb: Public Shared Sub Marshal(writer As XmlWriter, localName As String, value As String)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: ''
    - id: localName
      type: System.String
      description: ''
    - id: value
      type: System.String
      description: ''
  overload: Microsoft.Health.Utility.BclMarshaller.Marshal*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Utility.BclMarshaller.Marshal(System.Xml.XmlWriter,System.String,System.DateTime)
  commentId: M:Microsoft.Health.Utility.BclMarshaller.Marshal(System.Xml.XmlWriter,System.String,System.DateTime)
  id: Marshal(System.Xml.XmlWriter,System.String,System.DateTime)
  parent: Microsoft.Health.Utility.BclMarshaller
  langs:
  - csharp
  - vb
  name: Marshal(XmlWriter, String, DateTime)
  nameWithType: BclMarshaller.Marshal(XmlWriter, String, DateTime)
  fullName: Microsoft.Health.Utility.BclMarshaller.Marshal(System.Xml.XmlWriter, System.String, System.DateTime)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/BclMarshaller.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Marshal
    path: ../Microsoft.Health.Utility/utilities/BclMarshaller.cs
    startLine: 69
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\n\n"
  example: []
  syntax:
    content: public static void Marshal(XmlWriter writer, string localName, DateTime value)
    content.vb: Public Shared Sub Marshal(writer As XmlWriter, localName As String, value As Date)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: ''
    - id: localName
      type: System.String
      description: ''
    - id: value
      type: System.DateTime
      description: ''
  overload: Microsoft.Health.Utility.BclMarshaller.Marshal*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Utility.BclMarshaller.Marshal(System.Xml.XmlWriter,System.String,System.Guid)
  commentId: M:Microsoft.Health.Utility.BclMarshaller.Marshal(System.Xml.XmlWriter,System.String,System.Guid)
  id: Marshal(System.Xml.XmlWriter,System.String,System.Guid)
  parent: Microsoft.Health.Utility.BclMarshaller
  langs:
  - csharp
  - vb
  name: Marshal(XmlWriter, String, Guid)
  nameWithType: BclMarshaller.Marshal(XmlWriter, String, Guid)
  fullName: Microsoft.Health.Utility.BclMarshaller.Marshal(System.Xml.XmlWriter, System.String, System.Guid)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/BclMarshaller.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Marshal
    path: ../Microsoft.Health.Utility/utilities/BclMarshaller.cs
    startLine: 82
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\n\n"
  example: []
  syntax:
    content: public static void Marshal(XmlWriter writer, string localName, Guid value)
    content.vb: Public Shared Sub Marshal(writer As XmlWriter, localName As String, value As Guid)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: ''
    - id: localName
      type: System.String
      description: ''
    - id: value
      type: System.Guid
      description: ''
  overload: Microsoft.Health.Utility.BclMarshaller.Marshal*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Utility.BclMarshaller.Marshal(System.Xml.XmlWriter,System.String,System.Collections.Generic.IDictionary{System.Guid,System.String})
  commentId: M:Microsoft.Health.Utility.BclMarshaller.Marshal(System.Xml.XmlWriter,System.String,System.Collections.Generic.IDictionary{System.Guid,System.String})
  id: Marshal(System.Xml.XmlWriter,System.String,System.Collections.Generic.IDictionary{System.Guid,System.String})
  parent: Microsoft.Health.Utility.BclMarshaller
  langs:
  - csharp
  - vb
  name: Marshal(XmlWriter, String, IDictionary<Guid, String>)
  nameWithType: BclMarshaller.Marshal(XmlWriter, String, IDictionary<Guid, String>)
  fullName: Microsoft.Health.Utility.BclMarshaller.Marshal(System.Xml.XmlWriter, System.String, System.Collections.Generic.IDictionary<System.Guid, System.String>)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/BclMarshaller.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Marshal
    path: ../Microsoft.Health.Utility/utilities/BclMarshaller.cs
    startLine: 94
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\n\n"
  example: []
  syntax:
    content: public static void Marshal(XmlWriter writer, string localName, IDictionary<Guid, string> dictionary)
    content.vb: Public Shared Sub Marshal(writer As XmlWriter, localName As String, dictionary As IDictionary(Of Guid, String))
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: ''
    - id: localName
      type: System.String
      description: ''
    - id: dictionary
      type: System.Collections.Generic.IDictionary{System.Guid,System.String}
      description: ''
  overload: Microsoft.Health.Utility.BclMarshaller.Marshal*
  nameWithType.vb: BclMarshaller.Marshal(XmlWriter, String, IDictionary(Of Guid, String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Health.Utility.BclMarshaller.Marshal(System.Xml.XmlWriter, System.String, System.Collections.Generic.IDictionary(Of System.Guid, System.String))
  name.vb: Marshal(XmlWriter, String, IDictionary(Of Guid, String))
- uid: Microsoft.Health.Utility.BclMarshaller.Marshal(System.Xml.XmlWriter,System.String,System.Collections.Generic.IDictionary{System.Guid,System.Guid})
  commentId: M:Microsoft.Health.Utility.BclMarshaller.Marshal(System.Xml.XmlWriter,System.String,System.Collections.Generic.IDictionary{System.Guid,System.Guid})
  id: Marshal(System.Xml.XmlWriter,System.String,System.Collections.Generic.IDictionary{System.Guid,System.Guid})
  parent: Microsoft.Health.Utility.BclMarshaller
  langs:
  - csharp
  - vb
  name: Marshal(XmlWriter, String, IDictionary<Guid, Guid>)
  nameWithType: BclMarshaller.Marshal(XmlWriter, String, IDictionary<Guid, Guid>)
  fullName: Microsoft.Health.Utility.BclMarshaller.Marshal(System.Xml.XmlWriter, System.String, System.Collections.Generic.IDictionary<System.Guid, System.Guid>)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/BclMarshaller.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Marshal
    path: ../Microsoft.Health.Utility/utilities/BclMarshaller.cs
    startLine: 113
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\n\n"
  example: []
  syntax:
    content: public static void Marshal(XmlWriter writer, string localName, IDictionary<Guid, Guid> dictionary)
    content.vb: Public Shared Sub Marshal(writer As XmlWriter, localName As String, dictionary As IDictionary(Of Guid, Guid))
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: ''
    - id: localName
      type: System.String
      description: ''
    - id: dictionary
      type: System.Collections.Generic.IDictionary{System.Guid,System.Guid}
      description: ''
  overload: Microsoft.Health.Utility.BclMarshaller.Marshal*
  nameWithType.vb: BclMarshaller.Marshal(XmlWriter, String, IDictionary(Of Guid, Guid))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Health.Utility.BclMarshaller.Marshal(System.Xml.XmlWriter, System.String, System.Collections.Generic.IDictionary(Of System.Guid, System.Guid))
  name.vb: Marshal(XmlWriter, String, IDictionary(Of Guid, Guid))
- uid: Microsoft.Health.Utility.BclMarshaller.Marshal(System.Xml.XmlWriter,System.String,System.Collections.Generic.IDictionary{System.String,System.String})
  commentId: M:Microsoft.Health.Utility.BclMarshaller.Marshal(System.Xml.XmlWriter,System.String,System.Collections.Generic.IDictionary{System.String,System.String})
  id: Marshal(System.Xml.XmlWriter,System.String,System.Collections.Generic.IDictionary{System.String,System.String})
  parent: Microsoft.Health.Utility.BclMarshaller
  langs:
  - csharp
  - vb
  name: Marshal(XmlWriter, String, IDictionary<String, String>)
  nameWithType: BclMarshaller.Marshal(XmlWriter, String, IDictionary<String, String>)
  fullName: Microsoft.Health.Utility.BclMarshaller.Marshal(System.Xml.XmlWriter, System.String, System.Collections.Generic.IDictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/BclMarshaller.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Marshal
    path: ../Microsoft.Health.Utility/utilities/BclMarshaller.cs
    startLine: 132
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\n\n"
  example: []
  syntax:
    content: public static void Marshal(XmlWriter writer, string localName, IDictionary<string, string> dictionary)
    content.vb: Public Shared Sub Marshal(writer As XmlWriter, localName As String, dictionary As IDictionary(Of String, String))
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: ''
    - id: localName
      type: System.String
      description: ''
    - id: dictionary
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: ''
  overload: Microsoft.Health.Utility.BclMarshaller.Marshal*
  nameWithType.vb: BclMarshaller.Marshal(XmlWriter, String, IDictionary(Of String, String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Health.Utility.BclMarshaller.Marshal(System.Xml.XmlWriter, System.String, System.Collections.Generic.IDictionary(Of System.String, System.String))
  name.vb: Marshal(XmlWriter, String, IDictionary(Of String, String))
- uid: Microsoft.Health.Utility.BclMarshaller.Unmarshal(System.Xml.XmlReader,System.Int32@)
  commentId: M:Microsoft.Health.Utility.BclMarshaller.Unmarshal(System.Xml.XmlReader,System.Int32@)
  id: Unmarshal(System.Xml.XmlReader,System.Int32@)
  parent: Microsoft.Health.Utility.BclMarshaller
  langs:
  - csharp
  - vb
  name: Unmarshal(XmlReader, out Int32)
  nameWithType: BclMarshaller.Unmarshal(XmlReader, out Int32)
  fullName: Microsoft.Health.Utility.BclMarshaller.Unmarshal(System.Xml.XmlReader, out System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/BclMarshaller.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Unmarshal
    path: ../Microsoft.Health.Utility/utilities/BclMarshaller.cs
    startLine: 150
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\n\n"
  example: []
  syntax:
    content: public static void Unmarshal(XmlReader reader, out int value)
    content.vb: Public Shared Sub Unmarshal(reader As XmlReader, ByRef value As Integer)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: ''
    - id: value
      type: System.Int32
      description: ''
  overload: Microsoft.Health.Utility.BclMarshaller.Unmarshal*
  nameWithType.vb: BclMarshaller.Unmarshal(XmlReader, ByRef Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Health.Utility.BclMarshaller.Unmarshal(System.Xml.XmlReader, ByRef System.Int32)
  name.vb: Unmarshal(XmlReader, ByRef Int32)
- uid: Microsoft.Health.Utility.BclMarshaller.UnmarshalInt32(System.Xml.XmlReader)
  commentId: M:Microsoft.Health.Utility.BclMarshaller.UnmarshalInt32(System.Xml.XmlReader)
  id: UnmarshalInt32(System.Xml.XmlReader)
  parent: Microsoft.Health.Utility.BclMarshaller
  langs:
  - csharp
  - vb
  name: UnmarshalInt32(XmlReader)
  nameWithType: BclMarshaller.UnmarshalInt32(XmlReader)
  fullName: Microsoft.Health.Utility.BclMarshaller.UnmarshalInt32(System.Xml.XmlReader)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/BclMarshaller.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: UnmarshalInt32
    path: ../Microsoft.Health.Utility/utilities/BclMarshaller.cs
    startLine: 160
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\n\n"
  example: []
  syntax:
    content: public static int UnmarshalInt32(XmlReader reader)
    content.vb: Public Shared Function UnmarshalInt32(reader As XmlReader) As Integer
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: ''
    return:
      type: System.Int32
  overload: Microsoft.Health.Utility.BclMarshaller.UnmarshalInt32*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Utility.BclMarshaller.Unmarshal(System.Xml.XmlReader,System.Boolean@)
  commentId: M:Microsoft.Health.Utility.BclMarshaller.Unmarshal(System.Xml.XmlReader,System.Boolean@)
  id: Unmarshal(System.Xml.XmlReader,System.Boolean@)
  parent: Microsoft.Health.Utility.BclMarshaller
  langs:
  - csharp
  - vb
  name: Unmarshal(XmlReader, out Boolean)
  nameWithType: BclMarshaller.Unmarshal(XmlReader, out Boolean)
  fullName: Microsoft.Health.Utility.BclMarshaller.Unmarshal(System.Xml.XmlReader, out System.Boolean)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/BclMarshaller.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Unmarshal
    path: ../Microsoft.Health.Utility/utilities/BclMarshaller.cs
    startLine: 170
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\n\n"
  example: []
  syntax:
    content: public static void Unmarshal(XmlReader reader, out bool value)
    content.vb: Public Shared Sub Unmarshal(reader As XmlReader, ByRef value As Boolean)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: ''
    - id: value
      type: System.Boolean
      description: ''
  overload: Microsoft.Health.Utility.BclMarshaller.Unmarshal*
  nameWithType.vb: BclMarshaller.Unmarshal(XmlReader, ByRef Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Health.Utility.BclMarshaller.Unmarshal(System.Xml.XmlReader, ByRef System.Boolean)
  name.vb: Unmarshal(XmlReader, ByRef Boolean)
- uid: Microsoft.Health.Utility.BclMarshaller.UnmarshalBoolean(System.Xml.XmlReader)
  commentId: M:Microsoft.Health.Utility.BclMarshaller.UnmarshalBoolean(System.Xml.XmlReader)
  id: UnmarshalBoolean(System.Xml.XmlReader)
  parent: Microsoft.Health.Utility.BclMarshaller
  langs:
  - csharp
  - vb
  name: UnmarshalBoolean(XmlReader)
  nameWithType: BclMarshaller.UnmarshalBoolean(XmlReader)
  fullName: Microsoft.Health.Utility.BclMarshaller.UnmarshalBoolean(System.Xml.XmlReader)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/BclMarshaller.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: UnmarshalBoolean
    path: ../Microsoft.Health.Utility/utilities/BclMarshaller.cs
    startLine: 180
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\n\n"
  example: []
  syntax:
    content: public static bool UnmarshalBoolean(XmlReader reader)
    content.vb: Public Shared Function UnmarshalBoolean(reader As XmlReader) As Boolean
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: ''
    return:
      type: System.Boolean
  overload: Microsoft.Health.Utility.BclMarshaller.UnmarshalBoolean*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Utility.BclMarshaller.Unmarshal(System.Xml.XmlReader,System.String@)
  commentId: M:Microsoft.Health.Utility.BclMarshaller.Unmarshal(System.Xml.XmlReader,System.String@)
  id: Unmarshal(System.Xml.XmlReader,System.String@)
  parent: Microsoft.Health.Utility.BclMarshaller
  langs:
  - csharp
  - vb
  name: Unmarshal(XmlReader, out String)
  nameWithType: BclMarshaller.Unmarshal(XmlReader, out String)
  fullName: Microsoft.Health.Utility.BclMarshaller.Unmarshal(System.Xml.XmlReader, out System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/BclMarshaller.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Unmarshal
    path: ../Microsoft.Health.Utility/utilities/BclMarshaller.cs
    startLine: 190
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\n\n"
  example: []
  syntax:
    content: public static void Unmarshal(XmlReader reader, out string value)
    content.vb: Public Shared Sub Unmarshal(reader As XmlReader, ByRef value As String)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: ''
    - id: value
      type: System.String
      description: ''
  overload: Microsoft.Health.Utility.BclMarshaller.Unmarshal*
  nameWithType.vb: BclMarshaller.Unmarshal(XmlReader, ByRef String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Health.Utility.BclMarshaller.Unmarshal(System.Xml.XmlReader, ByRef System.String)
  name.vb: Unmarshal(XmlReader, ByRef String)
- uid: Microsoft.Health.Utility.BclMarshaller.UnmarshalString(System.Xml.XmlReader)
  commentId: M:Microsoft.Health.Utility.BclMarshaller.UnmarshalString(System.Xml.XmlReader)
  id: UnmarshalString(System.Xml.XmlReader)
  parent: Microsoft.Health.Utility.BclMarshaller
  langs:
  - csharp
  - vb
  name: UnmarshalString(XmlReader)
  nameWithType: BclMarshaller.UnmarshalString(XmlReader)
  fullName: Microsoft.Health.Utility.BclMarshaller.UnmarshalString(System.Xml.XmlReader)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/BclMarshaller.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: UnmarshalString
    path: ../Microsoft.Health.Utility/utilities/BclMarshaller.cs
    startLine: 200
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\n\n"
  example: []
  syntax:
    content: public static string UnmarshalString(XmlReader reader)
    content.vb: Public Shared Function UnmarshalString(reader As XmlReader) As String
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: ''
    return:
      type: System.String
  overload: Microsoft.Health.Utility.BclMarshaller.UnmarshalString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Utility.BclMarshaller.Unmarshal(System.Xml.XmlReader,System.DateTime@)
  commentId: M:Microsoft.Health.Utility.BclMarshaller.Unmarshal(System.Xml.XmlReader,System.DateTime@)
  id: Unmarshal(System.Xml.XmlReader,System.DateTime@)
  parent: Microsoft.Health.Utility.BclMarshaller
  langs:
  - csharp
  - vb
  name: Unmarshal(XmlReader, out DateTime)
  nameWithType: BclMarshaller.Unmarshal(XmlReader, out DateTime)
  fullName: Microsoft.Health.Utility.BclMarshaller.Unmarshal(System.Xml.XmlReader, out System.DateTime)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/BclMarshaller.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Unmarshal
    path: ../Microsoft.Health.Utility/utilities/BclMarshaller.cs
    startLine: 210
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\n\n"
  example: []
  syntax:
    content: public static void Unmarshal(XmlReader reader, out DateTime value)
    content.vb: Public Shared Sub Unmarshal(reader As XmlReader, ByRef value As Date)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: ''
    - id: value
      type: System.DateTime
      description: ''
  overload: Microsoft.Health.Utility.BclMarshaller.Unmarshal*
  nameWithType.vb: BclMarshaller.Unmarshal(XmlReader, ByRef DateTime)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Health.Utility.BclMarshaller.Unmarshal(System.Xml.XmlReader, ByRef System.DateTime)
  name.vb: Unmarshal(XmlReader, ByRef DateTime)
- uid: Microsoft.Health.Utility.BclMarshaller.UnmarshalDateTime(System.Xml.XmlReader)
  commentId: M:Microsoft.Health.Utility.BclMarshaller.UnmarshalDateTime(System.Xml.XmlReader)
  id: UnmarshalDateTime(System.Xml.XmlReader)
  parent: Microsoft.Health.Utility.BclMarshaller
  langs:
  - csharp
  - vb
  name: UnmarshalDateTime(XmlReader)
  nameWithType: BclMarshaller.UnmarshalDateTime(XmlReader)
  fullName: Microsoft.Health.Utility.BclMarshaller.UnmarshalDateTime(System.Xml.XmlReader)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/BclMarshaller.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: UnmarshalDateTime
    path: ../Microsoft.Health.Utility/utilities/BclMarshaller.cs
    startLine: 221
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\n\n"
  example: []
  syntax:
    content: public static DateTime UnmarshalDateTime(XmlReader reader)
    content.vb: Public Shared Function UnmarshalDateTime(reader As XmlReader) As Date
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: ''
    return:
      type: System.DateTime
  overload: Microsoft.Health.Utility.BclMarshaller.UnmarshalDateTime*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Utility.BclMarshaller.Unmarshal(System.Xml.XmlReader,System.Guid@)
  commentId: M:Microsoft.Health.Utility.BclMarshaller.Unmarshal(System.Xml.XmlReader,System.Guid@)
  id: Unmarshal(System.Xml.XmlReader,System.Guid@)
  parent: Microsoft.Health.Utility.BclMarshaller
  langs:
  - csharp
  - vb
  name: Unmarshal(XmlReader, out Guid)
  nameWithType: BclMarshaller.Unmarshal(XmlReader, out Guid)
  fullName: Microsoft.Health.Utility.BclMarshaller.Unmarshal(System.Xml.XmlReader, out System.Guid)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/BclMarshaller.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Unmarshal
    path: ../Microsoft.Health.Utility/utilities/BclMarshaller.cs
    startLine: 232
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\n\n"
  example: []
  syntax:
    content: public static void Unmarshal(XmlReader reader, out Guid value)
    content.vb: Public Shared Sub Unmarshal(reader As XmlReader, ByRef value As Guid)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: ''
    - id: value
      type: System.Guid
      description: ''
  overload: Microsoft.Health.Utility.BclMarshaller.Unmarshal*
  nameWithType.vb: BclMarshaller.Unmarshal(XmlReader, ByRef Guid)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Health.Utility.BclMarshaller.Unmarshal(System.Xml.XmlReader, ByRef System.Guid)
  name.vb: Unmarshal(XmlReader, ByRef Guid)
- uid: Microsoft.Health.Utility.BclMarshaller.UnmarshalGuid(System.Xml.XmlReader)
  commentId: M:Microsoft.Health.Utility.BclMarshaller.UnmarshalGuid(System.Xml.XmlReader)
  id: UnmarshalGuid(System.Xml.XmlReader)
  parent: Microsoft.Health.Utility.BclMarshaller
  langs:
  - csharp
  - vb
  name: UnmarshalGuid(XmlReader)
  nameWithType: BclMarshaller.UnmarshalGuid(XmlReader)
  fullName: Microsoft.Health.Utility.BclMarshaller.UnmarshalGuid(System.Xml.XmlReader)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/BclMarshaller.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: UnmarshalGuid
    path: ../Microsoft.Health.Utility/utilities/BclMarshaller.cs
    startLine: 242
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\n\n"
  example: []
  syntax:
    content: public static Guid UnmarshalGuid(XmlReader reader)
    content.vb: Public Shared Function UnmarshalGuid(reader As XmlReader) As Guid
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: ''
    return:
      type: System.Guid
  overload: Microsoft.Health.Utility.BclMarshaller.UnmarshalGuid*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Utility.BclMarshaller.Unmarshal(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.Guid,System.String})
  commentId: M:Microsoft.Health.Utility.BclMarshaller.Unmarshal(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.Guid,System.String})
  id: Unmarshal(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.Guid,System.String})
  parent: Microsoft.Health.Utility.BclMarshaller
  langs:
  - csharp
  - vb
  name: Unmarshal(XmlReader, IDictionary<Guid, String>)
  nameWithType: BclMarshaller.Unmarshal(XmlReader, IDictionary<Guid, String>)
  fullName: Microsoft.Health.Utility.BclMarshaller.Unmarshal(System.Xml.XmlReader, System.Collections.Generic.IDictionary<System.Guid, System.String>)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/BclMarshaller.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Unmarshal
    path: ../Microsoft.Health.Utility/utilities/BclMarshaller.cs
    startLine: 252
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\n\n"
  example: []
  syntax:
    content: public static void Unmarshal(XmlReader reader, IDictionary<Guid, string> dictionary)
    content.vb: Public Shared Sub Unmarshal(reader As XmlReader, dictionary As IDictionary(Of Guid, String))
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: ''
    - id: dictionary
      type: System.Collections.Generic.IDictionary{System.Guid,System.String}
      description: ''
  overload: Microsoft.Health.Utility.BclMarshaller.Unmarshal*
  nameWithType.vb: BclMarshaller.Unmarshal(XmlReader, IDictionary(Of Guid, String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Health.Utility.BclMarshaller.Unmarshal(System.Xml.XmlReader, System.Collections.Generic.IDictionary(Of System.Guid, System.String))
  name.vb: Unmarshal(XmlReader, IDictionary(Of Guid, String))
- uid: Microsoft.Health.Utility.BclMarshaller.Unmarshal(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.Guid,System.Guid})
  commentId: M:Microsoft.Health.Utility.BclMarshaller.Unmarshal(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.Guid,System.Guid})
  id: Unmarshal(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.Guid,System.Guid})
  parent: Microsoft.Health.Utility.BclMarshaller
  langs:
  - csharp
  - vb
  name: Unmarshal(XmlReader, IDictionary<Guid, Guid>)
  nameWithType: BclMarshaller.Unmarshal(XmlReader, IDictionary<Guid, Guid>)
  fullName: Microsoft.Health.Utility.BclMarshaller.Unmarshal(System.Xml.XmlReader, System.Collections.Generic.IDictionary<System.Guid, System.Guid>)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/BclMarshaller.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Unmarshal
    path: ../Microsoft.Health.Utility/utilities/BclMarshaller.cs
    startLine: 274
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\n\n"
  example: []
  syntax:
    content: public static void Unmarshal(XmlReader reader, IDictionary<Guid, Guid> dictionary)
    content.vb: Public Shared Sub Unmarshal(reader As XmlReader, dictionary As IDictionary(Of Guid, Guid))
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: ''
    - id: dictionary
      type: System.Collections.Generic.IDictionary{System.Guid,System.Guid}
      description: ''
  overload: Microsoft.Health.Utility.BclMarshaller.Unmarshal*
  nameWithType.vb: BclMarshaller.Unmarshal(XmlReader, IDictionary(Of Guid, Guid))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Health.Utility.BclMarshaller.Unmarshal(System.Xml.XmlReader, System.Collections.Generic.IDictionary(Of System.Guid, System.Guid))
  name.vb: Unmarshal(XmlReader, IDictionary(Of Guid, Guid))
- uid: Microsoft.Health.Utility.BclMarshaller.Unmarshal(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String})
  commentId: M:Microsoft.Health.Utility.BclMarshaller.Unmarshal(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String})
  id: Unmarshal(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String})
  parent: Microsoft.Health.Utility.BclMarshaller
  langs:
  - csharp
  - vb
  name: Unmarshal(XmlReader, IDictionary<String, String>)
  nameWithType: BclMarshaller.Unmarshal(XmlReader, IDictionary<String, String>)
  fullName: Microsoft.Health.Utility.BclMarshaller.Unmarshal(System.Xml.XmlReader, System.Collections.Generic.IDictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/BclMarshaller.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Unmarshal
    path: ../Microsoft.Health.Utility/utilities/BclMarshaller.cs
    startLine: 296
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\n\n"
  example: []
  syntax:
    content: public static void Unmarshal(XmlReader reader, IDictionary<string, string> dictionary)
    content.vb: Public Shared Sub Unmarshal(reader As XmlReader, dictionary As IDictionary(Of String, String))
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: ''
    - id: dictionary
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: ''
  overload: Microsoft.Health.Utility.BclMarshaller.Unmarshal*
  nameWithType.vb: BclMarshaller.Unmarshal(XmlReader, IDictionary(Of String, String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Health.Utility.BclMarshaller.Unmarshal(System.Xml.XmlReader, System.Collections.Generic.IDictionary(Of System.String, System.String))
  name.vb: Unmarshal(XmlReader, IDictionary(Of String, String))
references:
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Utility.BclMarshaller.Marshal*
  commentId: Overload:Microsoft.Health.Utility.BclMarshaller.Marshal
  isExternal: false
  name: Marshal
  nameWithType: BclMarshaller.Marshal
  fullName: Microsoft.Health.Utility.BclMarshaller.Marshal
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Collections.Generic.IDictionary{System.Guid,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.Guid,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<Guid, String>
  nameWithType: IDictionary<Guid, String>
  fullName: System.Collections.Generic.IDictionary<System.Guid, System.String>
  nameWithType.vb: IDictionary(Of Guid, String)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.Guid, System.String)
  name.vb: IDictionary(Of Guid, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IDictionary{System.Guid,System.Guid}
  commentId: T:System.Collections.Generic.IDictionary{System.Guid,System.Guid}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<Guid, Guid>
  nameWithType: IDictionary<Guid, Guid>
  fullName: System.Collections.Generic.IDictionary<System.Guid, System.Guid>
  nameWithType.vb: IDictionary(Of Guid, Guid)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.Guid, System.Guid)
  name.vb: IDictionary(Of Guid, Guid)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.BclMarshaller.Unmarshal*
  commentId: Overload:Microsoft.Health.Utility.BclMarshaller.Unmarshal
  isExternal: false
  name: Unmarshal
  nameWithType: BclMarshaller.Unmarshal
  fullName: Microsoft.Health.Utility.BclMarshaller.Unmarshal
- uid: System.Xml.XmlReader
  commentId: T:System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: Microsoft.Health.Utility.BclMarshaller.UnmarshalInt32*
  commentId: Overload:Microsoft.Health.Utility.BclMarshaller.UnmarshalInt32
  isExternal: false
  name: UnmarshalInt32
  nameWithType: BclMarshaller.UnmarshalInt32
  fullName: Microsoft.Health.Utility.BclMarshaller.UnmarshalInt32
- uid: Microsoft.Health.Utility.BclMarshaller.UnmarshalBoolean*
  commentId: Overload:Microsoft.Health.Utility.BclMarshaller.UnmarshalBoolean
  isExternal: false
  name: UnmarshalBoolean
  nameWithType: BclMarshaller.UnmarshalBoolean
  fullName: Microsoft.Health.Utility.BclMarshaller.UnmarshalBoolean
- uid: Microsoft.Health.Utility.BclMarshaller.UnmarshalString*
  commentId: Overload:Microsoft.Health.Utility.BclMarshaller.UnmarshalString
  isExternal: false
  name: UnmarshalString
  nameWithType: BclMarshaller.UnmarshalString
  fullName: Microsoft.Health.Utility.BclMarshaller.UnmarshalString
- uid: Microsoft.Health.Utility.BclMarshaller.UnmarshalDateTime*
  commentId: Overload:Microsoft.Health.Utility.BclMarshaller.UnmarshalDateTime
  isExternal: false
  name: UnmarshalDateTime
  nameWithType: BclMarshaller.UnmarshalDateTime
  fullName: Microsoft.Health.Utility.BclMarshaller.UnmarshalDateTime
- uid: Microsoft.Health.Utility.BclMarshaller.UnmarshalGuid*
  commentId: Overload:Microsoft.Health.Utility.BclMarshaller.UnmarshalGuid
  isExternal: false
  name: UnmarshalGuid
  nameWithType: BclMarshaller.UnmarshalGuid
  fullName: Microsoft.Health.Utility.BclMarshaller.UnmarshalGuid
