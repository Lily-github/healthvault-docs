### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Utility.Diagnostics.MetricLogEntry
  commentId: T:Microsoft.Health.Utility.Diagnostics.MetricLogEntry
  id: MetricLogEntry
  parent: Microsoft.Health.Utility.Diagnostics
  children:
  - Microsoft.Health.Utility.Diagnostics.MetricLogEntry.#ctor
  - Microsoft.Health.Utility.Diagnostics.MetricLogEntry.#ctor(System.Nullable{System.Int32},System.String,System.String,System.Int64,System.Nullable{System.Guid},System.DateTime,System.Nullable{System.Int16})
  - Microsoft.Health.Utility.Diagnostics.MetricLogEntry.ContextId
  - Microsoft.Health.Utility.Diagnostics.MetricLogEntry.CorrelationId
  - Microsoft.Health.Utility.Diagnostics.MetricLogEntry.CreateDataTable(System.String)
  - Microsoft.Health.Utility.Diagnostics.MetricLogEntry.EventTime
  - Microsoft.Health.Utility.Diagnostics.MetricLogEntry.Feature
  - Microsoft.Health.Utility.Diagnostics.MetricLogEntry.Key
  - Microsoft.Health.Utility.Diagnostics.MetricLogEntry.MetricId
  - Microsoft.Health.Utility.Diagnostics.MetricLogEntry.Read(System.Xml.XmlReader)
  - Microsoft.Health.Utility.Diagnostics.MetricLogEntry.StatName
  - Microsoft.Health.Utility.Diagnostics.MetricLogEntry.Value
  - Microsoft.Health.Utility.Diagnostics.MetricLogEntry.Write(System.Data.DataRow)
  - Microsoft.Health.Utility.Diagnostics.MetricLogEntry.Write(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: MetricLogEntry
  nameWithType: MetricLogEntry
  fullName: Microsoft.Health.Utility.Diagnostics.MetricLogEntry
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/MetricLogEntry.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: MetricLogEntry
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/MetricLogEntry.cs
    startLine: 13
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  syntax:
    content: 'public class MetricLogEntry : ILogEntry'
    content.vb: >-
      Public Class MetricLogEntry
          Implements ILogEntry
  inheritance:
  - System.Object
  implements:
  - Microsoft.Health.Utility.Diagnostics.ILogEntry
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.Utility.Diagnostics.MetricLogEntry.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.#ctor
  commentId: M:Microsoft.Health.Utility.Diagnostics.MetricLogEntry.#ctor
  id: '#ctor'
  parent: Microsoft.Health.Utility.Diagnostics.MetricLogEntry
  langs:
  - csharp
  - vb
  name: MetricLogEntry()
  nameWithType: MetricLogEntry.MetricLogEntry()
  fullName: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.MetricLogEntry()
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/MetricLogEntry.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/MetricLogEntry.cs
    startLine: 27
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  syntax:
    content: public MetricLogEntry()
    content.vb: Public Sub New
  overload: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.#ctor(System.Nullable{System.Int32},System.String,System.String,System.Int64,System.Nullable{System.Guid},System.DateTime,System.Nullable{System.Int16})
  commentId: M:Microsoft.Health.Utility.Diagnostics.MetricLogEntry.#ctor(System.Nullable{System.Int32},System.String,System.String,System.Int64,System.Nullable{System.Guid},System.DateTime,System.Nullable{System.Int16})
  id: '#ctor(System.Nullable{System.Int32},System.String,System.String,System.Int64,System.Nullable{System.Guid},System.DateTime,System.Nullable{System.Int16})'
  parent: Microsoft.Health.Utility.Diagnostics.MetricLogEntry
  langs:
  - csharp
  - vb
  name: MetricLogEntry(Nullable<Int32>, String, String, Int64, Nullable<Guid>, DateTime, Nullable<Int16>)
  nameWithType: MetricLogEntry.MetricLogEntry(Nullable<Int32>, String, String, Int64, Nullable<Guid>, DateTime, Nullable<Int16>)
  fullName: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.MetricLogEntry(System.Nullable<System.Int32>, System.String, System.String, System.Int64, System.Nullable<System.Guid>, System.DateTime, System.Nullable<System.Int16>)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/MetricLogEntry.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/MetricLogEntry.cs
    startLine: 31
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  syntax:
    content: public MetricLogEntry(int ? metricId, string feature, string statName, long value, Guid? contextId, DateTime eventTime, short ? correlationId)
    content.vb: Public Sub New(metricId As Integer?, feature As String, statName As String, value As Long, contextId As Guid?, eventTime As Date, correlationId As Short?)
    parameters:
    - id: metricId
      type: System.Nullable{System.Int32}
    - id: feature
      type: System.String
    - id: statName
      type: System.String
    - id: value
      type: System.Int64
    - id: contextId
      type: System.Nullable{System.Guid}
    - id: eventTime
      type: System.DateTime
    - id: correlationId
      type: System.Nullable{System.Int16}
  overload: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.#ctor*
  nameWithType.vb: MetricLogEntry.MetricLogEntry(Nullable(Of Int32), String, String, Int64, Nullable(Of Guid), DateTime, Nullable(Of Int16))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.MetricLogEntry(System.Nullable(Of System.Int32), System.String, System.String, System.Int64, System.Nullable(Of System.Guid), System.DateTime, System.Nullable(Of System.Int16))
  name.vb: MetricLogEntry(Nullable(Of Int32), String, String, Int64, Nullable(Of Guid), DateTime, Nullable(Of Int16))
- uid: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.MetricId
  commentId: P:Microsoft.Health.Utility.Diagnostics.MetricLogEntry.MetricId
  id: MetricId
  parent: Microsoft.Health.Utility.Diagnostics.MetricLogEntry
  langs:
  - csharp
  - vb
  name: MetricId
  nameWithType: MetricLogEntry.MetricId
  fullName: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.MetricId
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/MetricLogEntry.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: MetricId
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/MetricLogEntry.cs
    startLine: 49
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  syntax:
    content: public int ? MetricId { get; set; }
    content.vb: Public Property MetricId As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.MetricId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.Feature
  commentId: P:Microsoft.Health.Utility.Diagnostics.MetricLogEntry.Feature
  id: Feature
  parent: Microsoft.Health.Utility.Diagnostics.MetricLogEntry
  langs:
  - csharp
  - vb
  name: Feature
  nameWithType: MetricLogEntry.Feature
  fullName: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.Feature
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/MetricLogEntry.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Feature
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/MetricLogEntry.cs
    startLine: 51
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  syntax:
    content: public string Feature { get; set; }
    content.vb: Public Property Feature As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.Feature*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.StatName
  commentId: P:Microsoft.Health.Utility.Diagnostics.MetricLogEntry.StatName
  id: StatName
  parent: Microsoft.Health.Utility.Diagnostics.MetricLogEntry
  langs:
  - csharp
  - vb
  name: StatName
  nameWithType: MetricLogEntry.StatName
  fullName: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.StatName
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/MetricLogEntry.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: StatName
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/MetricLogEntry.cs
    startLine: 69
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  syntax:
    content: public string StatName { get; set; }
    content.vb: Public Property StatName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.StatName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.Value
  commentId: P:Microsoft.Health.Utility.Diagnostics.MetricLogEntry.Value
  id: Value
  parent: Microsoft.Health.Utility.Diagnostics.MetricLogEntry
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: MetricLogEntry.Value
  fullName: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.Value
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/MetricLogEntry.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Value
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/MetricLogEntry.cs
    startLine: 87
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  syntax:
    content: public long Value { get; set; }
    content.vb: Public Property Value As Long
    parameters: []
    return:
      type: System.Int64
  overload: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.Value*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.ContextId
  commentId: P:Microsoft.Health.Utility.Diagnostics.MetricLogEntry.ContextId
  id: ContextId
  parent: Microsoft.Health.Utility.Diagnostics.MetricLogEntry
  langs:
  - csharp
  - vb
  name: ContextId
  nameWithType: MetricLogEntry.ContextId
  fullName: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.ContextId
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/MetricLogEntry.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: ContextId
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/MetricLogEntry.cs
    startLine: 89
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  syntax:
    content: public Guid? ContextId { get; set; }
    content.vb: Public Property ContextId As Guid?
    parameters: []
    return:
      type: System.Nullable{System.Guid}
  overload: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.ContextId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.EventTime
  commentId: P:Microsoft.Health.Utility.Diagnostics.MetricLogEntry.EventTime
  id: EventTime
  parent: Microsoft.Health.Utility.Diagnostics.MetricLogEntry
  langs:
  - csharp
  - vb
  name: EventTime
  nameWithType: MetricLogEntry.EventTime
  fullName: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.EventTime
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/MetricLogEntry.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: EventTime
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/MetricLogEntry.cs
    startLine: 91
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  syntax:
    content: public DateTime EventTime { get; set; }
    content.vb: Public Property EventTime As Date
    parameters: []
    return:
      type: System.DateTime
  overload: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.EventTime*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.CorrelationId
  commentId: P:Microsoft.Health.Utility.Diagnostics.MetricLogEntry.CorrelationId
  id: CorrelationId
  parent: Microsoft.Health.Utility.Diagnostics.MetricLogEntry
  langs:
  - csharp
  - vb
  name: CorrelationId
  nameWithType: MetricLogEntry.CorrelationId
  fullName: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.CorrelationId
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/MetricLogEntry.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CorrelationId
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/MetricLogEntry.cs
    startLine: 93
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  syntax:
    content: public short ? CorrelationId { get; set; }
    content.vb: Public Property CorrelationId As Short?
    parameters: []
    return:
      type: System.Nullable{System.Int16}
  overload: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.CorrelationId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.Key
  commentId: P:Microsoft.Health.Utility.Diagnostics.MetricLogEntry.Key
  id: Key
  parent: Microsoft.Health.Utility.Diagnostics.MetricLogEntry
  langs:
  - csharp
  - vb
  name: Key
  nameWithType: MetricLogEntry.Key
  fullName: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.Key
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/MetricLogEntry.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Key
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/MetricLogEntry.cs
    startLine: 98
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  summary: "\nFeature and StatName combination\n"
  example: []
  syntax:
    content: public string Key { get; }
    content.vb: Public ReadOnly Property Key As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.Key*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.Read(System.Xml.XmlReader)
  commentId: M:Microsoft.Health.Utility.Diagnostics.MetricLogEntry.Read(System.Xml.XmlReader)
  id: Read(System.Xml.XmlReader)
  parent: Microsoft.Health.Utility.Diagnostics.MetricLogEntry
  langs:
  - csharp
  - vb
  name: Read(XmlReader)
  nameWithType: MetricLogEntry.Read(XmlReader)
  fullName: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.Read(System.Xml.XmlReader)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/MetricLogEntry.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Read
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/MetricLogEntry.cs
    startLine: 106
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  syntax:
    content: public void Read(XmlReader reader)
    content.vb: Public Sub Read(reader As XmlReader)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
  overload: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.Read*
  implements:
  - Microsoft.Health.Utility.Diagnostics.ILogEntry.Read(System.Xml.XmlReader)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.Write(System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.Utility.Diagnostics.MetricLogEntry.Write(System.Xml.XmlWriter)
  id: Write(System.Xml.XmlWriter)
  parent: Microsoft.Health.Utility.Diagnostics.MetricLogEntry
  langs:
  - csharp
  - vb
  name: Write(XmlWriter)
  nameWithType: MetricLogEntry.Write(XmlWriter)
  fullName: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.Write(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/MetricLogEntry.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Write
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/MetricLogEntry.cs
    startLine: 127
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  syntax:
    content: public void Write(XmlWriter writer)
    content.vb: Public Sub Write(writer As XmlWriter)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
  overload: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.Write*
  implements:
  - Microsoft.Health.Utility.Diagnostics.ILogEntry.Write(System.Xml.XmlWriter)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.Write(System.Data.DataRow)
  commentId: M:Microsoft.Health.Utility.Diagnostics.MetricLogEntry.Write(System.Data.DataRow)
  id: Write(System.Data.DataRow)
  parent: Microsoft.Health.Utility.Diagnostics.MetricLogEntry
  langs:
  - csharp
  - vb
  name: Write(DataRow)
  nameWithType: MetricLogEntry.Write(DataRow)
  fullName: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.Write(System.Data.DataRow)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/MetricLogEntry.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Write
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/MetricLogEntry.cs
    startLine: 187
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  syntax:
    content: public void Write(DataRow row)
    content.vb: Public Sub Write(row As DataRow)
    parameters:
    - id: row
      type: System.Data.DataRow
  overload: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.Write*
  implements:
  - Microsoft.Health.Utility.Diagnostics.ILogEntry.Write(System.Data.DataRow)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.CreateDataTable(System.String)
  commentId: M:Microsoft.Health.Utility.Diagnostics.MetricLogEntry.CreateDataTable(System.String)
  id: CreateDataTable(System.String)
  parent: Microsoft.Health.Utility.Diagnostics.MetricLogEntry
  langs:
  - csharp
  - vb
  name: CreateDataTable(String)
  nameWithType: MetricLogEntry.CreateDataTable(String)
  fullName: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.CreateDataTable(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/Diagnostics/Trace/MetricLogEntry.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: CreateDataTable
    path: ../Microsoft.Health.Utility/Diagnostics/Trace/MetricLogEntry.cs
    startLine: 197
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility.Diagnostics
  syntax:
    content: public DataTable CreateDataTable(string tableName)
    content.vb: Public Function CreateDataTable(tableName As String) As DataTable
    parameters:
    - id: tableName
      type: System.String
    return:
      type: System.Data.DataTable
  overload: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.CreateDataTable*
  implements:
  - Microsoft.Health.Utility.Diagnostics.ILogEntry.CreateDataTable(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Health.Utility.Diagnostics
  commentId: N:Microsoft.Health.Utility.Diagnostics
  isExternal: false
  name: Microsoft.Health.Utility.Diagnostics
  nameWithType: Microsoft.Health.Utility.Diagnostics
  fullName: Microsoft.Health.Utility.Diagnostics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.Utility.Diagnostics.ILogEntry
  commentId: T:Microsoft.Health.Utility.Diagnostics.ILogEntry
  parent: Microsoft.Health.Utility.Diagnostics
  isExternal: false
  name: ILogEntry
  nameWithType: ILogEntry
  fullName: Microsoft.Health.Utility.Diagnostics.ILogEntry
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<MetricLogEntry>()
  nameWithType: TypeHelper.ValueOrDbNull<MetricLogEntry>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Utility.Diagnostics.MetricLogEntry>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of MetricLogEntry)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Utility.Diagnostics.MetricLogEntry)()
  name.vb: ValueOrDbNull(Of MetricLogEntry)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<MetricLogEntry>
    nameWithType: TypeHelper.ValueOrDbNull<MetricLogEntry>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Utility.Diagnostics.MetricLogEntry>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of MetricLogEntry)
    nameWithType: TypeHelper.ValueOrDbNull(Of MetricLogEntry)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Utility.Diagnostics.MetricLogEntry)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.#ctor*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.MetricLogEntry.#ctor
  isExternal: false
  name: MetricLogEntry
  nameWithType: MetricLogEntry.MetricLogEntry
  fullName: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.MetricLogEntry
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Nullable{System.Guid}
  commentId: T:System.Nullable{System.Guid}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Guid>
  nameWithType: Nullable<Guid>
  fullName: System.Nullable<System.Guid>
  nameWithType.vb: Nullable(Of Guid)
  fullName.vb: System.Nullable(Of System.Guid)
  name.vb: Nullable(Of Guid)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Nullable{System.Int16}
  commentId: T:System.Nullable{System.Int16}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int16>
  nameWithType: Nullable<Int16>
  fullName: System.Nullable<System.Int16>
  nameWithType.vb: Nullable(Of Int16)
  fullName.vb: System.Nullable(Of System.Int16)
  name.vb: Nullable(Of Int16)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int16
    name: Int16
    nameWithType: Int16
    fullName: System.Int16
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int16
    name: Int16
    nameWithType: Int16
    fullName: System.Int16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.MetricId*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.MetricLogEntry.MetricId
  isExternal: false
  name: MetricId
  nameWithType: MetricLogEntry.MetricId
  fullName: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.MetricId
- uid: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.Feature*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.MetricLogEntry.Feature
  isExternal: false
  name: Feature
  nameWithType: MetricLogEntry.Feature
  fullName: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.Feature
- uid: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.StatName*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.MetricLogEntry.StatName
  isExternal: false
  name: StatName
  nameWithType: MetricLogEntry.StatName
  fullName: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.StatName
- uid: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.Value*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.MetricLogEntry.Value
  isExternal: false
  name: Value
  nameWithType: MetricLogEntry.Value
  fullName: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.Value
- uid: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.ContextId*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.MetricLogEntry.ContextId
  isExternal: false
  name: ContextId
  nameWithType: MetricLogEntry.ContextId
  fullName: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.ContextId
- uid: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.EventTime*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.MetricLogEntry.EventTime
  isExternal: false
  name: EventTime
  nameWithType: MetricLogEntry.EventTime
  fullName: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.EventTime
- uid: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.CorrelationId*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.MetricLogEntry.CorrelationId
  isExternal: false
  name: CorrelationId
  nameWithType: MetricLogEntry.CorrelationId
  fullName: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.CorrelationId
- uid: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.Key*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.MetricLogEntry.Key
  isExternal: false
  name: Key
  nameWithType: MetricLogEntry.Key
  fullName: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.Key
- uid: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.Read*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.MetricLogEntry.Read
  isExternal: false
  name: Read
  nameWithType: MetricLogEntry.Read
  fullName: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.Read
- uid: Microsoft.Health.Utility.Diagnostics.ILogEntry.Read(System.Xml.XmlReader)
  commentId: M:Microsoft.Health.Utility.Diagnostics.ILogEntry.Read(System.Xml.XmlReader)
  parent: Microsoft.Health.Utility.Diagnostics.ILogEntry
  isExternal: true
  name: Read(XmlReader)
  nameWithType: ILogEntry.Read(XmlReader)
  fullName: Microsoft.Health.Utility.Diagnostics.ILogEntry.Read(System.Xml.XmlReader)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.ILogEntry.Read(System.Xml.XmlReader)
    name: Read
    nameWithType: ILogEntry.Read
    fullName: Microsoft.Health.Utility.Diagnostics.ILogEntry.Read
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.ILogEntry.Read(System.Xml.XmlReader)
    name: Read
    nameWithType: ILogEntry.Read
    fullName: Microsoft.Health.Utility.Diagnostics.ILogEntry.Read
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlReader
  commentId: T:System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.Write*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.MetricLogEntry.Write
  isExternal: false
  name: Write
  nameWithType: MetricLogEntry.Write
  fullName: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.Write
- uid: Microsoft.Health.Utility.Diagnostics.ILogEntry.Write(System.Xml.XmlWriter)
  commentId: M:Microsoft.Health.Utility.Diagnostics.ILogEntry.Write(System.Xml.XmlWriter)
  parent: Microsoft.Health.Utility.Diagnostics.ILogEntry
  isExternal: true
  name: Write(XmlWriter)
  nameWithType: ILogEntry.Write(XmlWriter)
  fullName: Microsoft.Health.Utility.Diagnostics.ILogEntry.Write(System.Xml.XmlWriter)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.ILogEntry.Write(System.Xml.XmlWriter)
    name: Write
    nameWithType: ILogEntry.Write
    fullName: Microsoft.Health.Utility.Diagnostics.ILogEntry.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.ILogEntry.Write(System.Xml.XmlWriter)
    name: Write
    nameWithType: ILogEntry.Write
    fullName: Microsoft.Health.Utility.Diagnostics.ILogEntry.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: Microsoft.Health.Utility.Diagnostics.ILogEntry.Write(System.Data.DataRow)
  commentId: M:Microsoft.Health.Utility.Diagnostics.ILogEntry.Write(System.Data.DataRow)
  parent: Microsoft.Health.Utility.Diagnostics.ILogEntry
  isExternal: true
  name: Write(DataRow)
  nameWithType: ILogEntry.Write(DataRow)
  fullName: Microsoft.Health.Utility.Diagnostics.ILogEntry.Write(System.Data.DataRow)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.ILogEntry.Write(System.Data.DataRow)
    name: Write
    nameWithType: ILogEntry.Write
    fullName: Microsoft.Health.Utility.Diagnostics.ILogEntry.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.DataRow
    name: DataRow
    nameWithType: DataRow
    fullName: System.Data.DataRow
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.ILogEntry.Write(System.Data.DataRow)
    name: Write
    nameWithType: ILogEntry.Write
    fullName: Microsoft.Health.Utility.Diagnostics.ILogEntry.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.DataRow
    name: DataRow
    nameWithType: DataRow
    fullName: System.Data.DataRow
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.DataRow
  commentId: T:System.Data.DataRow
  parent: System.Data
  isExternal: true
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Data
  commentId: N:System.Data
  isExternal: false
  name: System.Data
  nameWithType: System.Data
  fullName: System.Data
- uid: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.CreateDataTable*
  commentId: Overload:Microsoft.Health.Utility.Diagnostics.MetricLogEntry.CreateDataTable
  isExternal: false
  name: CreateDataTable
  nameWithType: MetricLogEntry.CreateDataTable
  fullName: Microsoft.Health.Utility.Diagnostics.MetricLogEntry.CreateDataTable
- uid: Microsoft.Health.Utility.Diagnostics.ILogEntry.CreateDataTable(System.String)
  commentId: M:Microsoft.Health.Utility.Diagnostics.ILogEntry.CreateDataTable(System.String)
  parent: Microsoft.Health.Utility.Diagnostics.ILogEntry
  isExternal: true
  name: CreateDataTable(String)
  nameWithType: ILogEntry.CreateDataTable(String)
  fullName: Microsoft.Health.Utility.Diagnostics.ILogEntry.CreateDataTable(System.String)
  spec.csharp:
  - uid: Microsoft.Health.Utility.Diagnostics.ILogEntry.CreateDataTable(System.String)
    name: CreateDataTable
    nameWithType: ILogEntry.CreateDataTable
    fullName: Microsoft.Health.Utility.Diagnostics.ILogEntry.CreateDataTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.Diagnostics.ILogEntry.CreateDataTable(System.String)
    name: CreateDataTable
    nameWithType: ILogEntry.CreateDataTable
    fullName: Microsoft.Health.Utility.Diagnostics.ILogEntry.CreateDataTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.DataTable
  commentId: T:System.Data.DataTable
  parent: System.Data
  isExternal: true
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
