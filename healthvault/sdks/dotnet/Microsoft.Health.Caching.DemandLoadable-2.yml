### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Caching.DemandLoadable`2
  commentId: T:Microsoft.Health.Caching.DemandLoadable`2
  id: DemandLoadable`2
  parent: Microsoft.Health.Caching
  children:
  - Microsoft.Health.Caching.DemandLoadable`2.#ctor(System.Func{`0,`1},`0)
  - Microsoft.Health.Caching.DemandLoadable`2.HasValue
  - Microsoft.Health.Caching.DemandLoadable`2.Key
  - Microsoft.Health.Caching.DemandLoadable`2.Load(System.Boolean)
  - Microsoft.Health.Caching.DemandLoadable`2.Loaded
  - Microsoft.Health.Caching.DemandLoadable`2.OnLoaded(`1)
  - Microsoft.Health.Caching.DemandLoadable`2.OnLoading
  - Microsoft.Health.Caching.DemandLoadable`2.OnUnload(`1)
  - Microsoft.Health.Caching.DemandLoadable`2.op_Implicit(Microsoft.Health.Caching.DemandLoadable{`0,`1})~`1
  - Microsoft.Health.Caching.DemandLoadable`2.TryExpire(System.TimeSpan,System.DateTime@)
  - Microsoft.Health.Caching.DemandLoadable`2.Unload
  - Microsoft.Health.Caching.DemandLoadable`2.Value
  langs:
  - csharp
  - vb
  name: DemandLoadable<K, V>
  nameWithType: DemandLoadable<K, V>
  fullName: Microsoft.Health.Caching.DemandLoadable<K, V>
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/search/Cache/DemandLoadable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: DemandLoadable
    path: ../Microsoft.Health.Utility/search/Cache/DemandLoadable.cs
    startLine: 38
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Caching
  summary: "\n\n"
  example: []
  syntax:
    content: 'public class DemandLoadable<K, V> : IDemandLoadable where V : class'
    content.vb: >-
      Public Class DemandLoadable(Of K, V As Class)
          Implements IDemandLoadable
    typeParameters:
    - id: K
      description: ''
    - id: V
      description: ''
  inheritance:
  - System.Object
  derivedClasses:
  - Microsoft.Health.Caching.DemandCacheable`1
  - Microsoft.Health.Caching.DemandLoadable`1
  implements:
  - Microsoft.Health.Caching.IDemandLoadable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.Caching.DemandLoadable`2.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  nameWithType.vb: DemandLoadable(Of K, V)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of K, V)
  name.vb: DemandLoadable(Of K, V)
- uid: Microsoft.Health.Caching.DemandLoadable`2.Loaded
  commentId: E:Microsoft.Health.Caching.DemandLoadable`2.Loaded
  id: Loaded
  parent: Microsoft.Health.Caching.DemandLoadable`2
  langs:
  - csharp
  - vb
  name: Loaded
  nameWithType: DemandLoadable<K, V>.Loaded
  fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.Loaded
  type: Event
  source:
    remote:
      path: Microsoft.Health.Utility/search/Cache/DemandLoadable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Loaded
    path: ../Microsoft.Health.Utility/search/Cache/DemandLoadable.cs
    startLine: 48
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Caching
  summary: "\nThe event handler for the load event.\n"
  example: []
  syntax:
    content: public event EventHandler Loaded
    content.vb: Public Event Loaded As EventHandler
    return:
      type: System.EventHandler
  nameWithType.vb: DemandLoadable(Of K, V).Loaded
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of K, V).Loaded
- uid: Microsoft.Health.Caching.DemandLoadable`2.#ctor(System.Func{`0,`1},`0)
  commentId: M:Microsoft.Health.Caching.DemandLoadable`2.#ctor(System.Func{`0,`1},`0)
  id: '#ctor(System.Func{`0,`1},`0)'
  parent: Microsoft.Health.Caching.DemandLoadable`2
  langs:
  - csharp
  - vb
  name: DemandLoadable(Func<K, V>, K)
  nameWithType: DemandLoadable<K, V>.DemandLoadable(Func<K, V>, K)
  fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.DemandLoadable(System.Func<K, V>, K)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/search/Cache/DemandLoadable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.Utility/search/Cache/DemandLoadable.cs
    startLine: 55
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Caching
  summary: "\n\n"
  example: []
  syntax:
    content: public DemandLoadable(Func<K, V> loader, K key)
    content.vb: Public Sub New(loader As Func(Of K, V), key As K)
    parameters:
    - id: loader
      type: System.Func{{K},{V}}
      description: ''
    - id: key
      type: '{K}'
      description: ''
  overload: Microsoft.Health.Caching.DemandLoadable`2.#ctor*
  nameWithType.vb: DemandLoadable(Of K, V).DemandLoadable(Func(Of K, V), K)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of K, V).DemandLoadable(System.Func(Of K, V), K)
  name.vb: DemandLoadable(Func(Of K, V), K)
- uid: Microsoft.Health.Caching.DemandLoadable`2.Key
  commentId: P:Microsoft.Health.Caching.DemandLoadable`2.Key
  id: Key
  parent: Microsoft.Health.Caching.DemandLoadable`2
  langs:
  - csharp
  - vb
  name: Key
  nameWithType: DemandLoadable<K, V>.Key
  fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.Key
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/Cache/DemandLoadable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Key
    path: ../Microsoft.Health.Utility/search/Cache/DemandLoadable.cs
    startLine: 69
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Caching
  summary: "\n\n"
  example: []
  syntax:
    content: public K Key { get; }
    content.vb: Public ReadOnly Property Key As K
    parameters: []
    return:
      type: '{K}'
  overload: Microsoft.Health.Caching.DemandLoadable`2.Key*
  nameWithType.vb: DemandLoadable(Of K, V).Key
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of K, V).Key
- uid: Microsoft.Health.Caching.DemandLoadable`2.Value
  commentId: P:Microsoft.Health.Caching.DemandLoadable`2.Value
  id: Value
  parent: Microsoft.Health.Caching.DemandLoadable`2
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: DemandLoadable<K, V>.Value
  fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.Value
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/Cache/DemandLoadable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Value
    path: ../Microsoft.Health.Utility/search/Cache/DemandLoadable.cs
    startLine: 80
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Caching
  summary: "\n\n"
  example: []
  syntax:
    content: public virtual V Value { get; set; }
    content.vb: Public Overridable Property Value As V
    parameters: []
    return:
      type: '{V}'
  overload: Microsoft.Health.Caching.DemandLoadable`2.Value*
  nameWithType.vb: DemandLoadable(Of K, V).Value
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of K, V).Value
- uid: Microsoft.Health.Caching.DemandLoadable`2.HasValue
  commentId: P:Microsoft.Health.Caching.DemandLoadable`2.HasValue
  id: HasValue
  parent: Microsoft.Health.Caching.DemandLoadable`2
  langs:
  - csharp
  - vb
  name: HasValue
  nameWithType: DemandLoadable<K, V>.HasValue
  fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.HasValue
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/search/Cache/DemandLoadable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: HasValue
    path: ../Microsoft.Health.Utility/search/Cache/DemandLoadable.cs
    startLine: 110
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Caching
  summary: "\n\n"
  example: []
  syntax:
    content: public bool HasValue { get; }
    content.vb: Public ReadOnly Property HasValue As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.Health.Caching.DemandLoadable`2.HasValue*
  nameWithType.vb: DemandLoadable(Of K, V).HasValue
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of K, V).HasValue
- uid: Microsoft.Health.Caching.DemandLoadable`2.Load(System.Boolean)
  commentId: M:Microsoft.Health.Caching.DemandLoadable`2.Load(System.Boolean)
  id: Load(System.Boolean)
  parent: Microsoft.Health.Caching.DemandLoadable`2
  langs:
  - csharp
  - vb
  name: Load(Boolean)
  nameWithType: DemandLoadable<K, V>.Load(Boolean)
  fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.Load(System.Boolean)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/Cache/DemandLoadable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Load
    path: ../Microsoft.Health.Utility/search/Cache/DemandLoadable.cs
    startLine: 122
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Caching
  summary: "\n\n"
  example: []
  syntax:
    content: public void Load(bool force)
    content.vb: Public Sub Load(force As Boolean)
    parameters:
    - id: force
      type: System.Boolean
      description: ''
  overload: Microsoft.Health.Caching.DemandLoadable`2.Load*
  implements:
  - Microsoft.Health.Caching.IDemandLoadable.Load(System.Boolean)
  nameWithType.vb: DemandLoadable(Of K, V).Load(Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of K, V).Load(System.Boolean)
- uid: Microsoft.Health.Caching.DemandLoadable`2.Unload
  commentId: M:Microsoft.Health.Caching.DemandLoadable`2.Unload
  id: Unload
  parent: Microsoft.Health.Caching.DemandLoadable`2
  langs:
  - csharp
  - vb
  name: Unload()
  nameWithType: DemandLoadable<K, V>.Unload()
  fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.Unload()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/Cache/DemandLoadable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Unload
    path: ../Microsoft.Health.Utility/search/Cache/DemandLoadable.cs
    startLine: 131
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Caching
  summary: "\n\n"
  example: []
  syntax:
    content: public void Unload()
    content.vb: Public Sub Unload
  overload: Microsoft.Health.Caching.DemandLoadable`2.Unload*
  implements:
  - Microsoft.Health.Caching.IDemandLoadable.Unload
  nameWithType.vb: DemandLoadable(Of K, V).Unload()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of K, V).Unload()
- uid: Microsoft.Health.Caching.DemandLoadable`2.TryExpire(System.TimeSpan,System.DateTime@)
  commentId: M:Microsoft.Health.Caching.DemandLoadable`2.TryExpire(System.TimeSpan,System.DateTime@)
  id: TryExpire(System.TimeSpan,System.DateTime@)
  parent: Microsoft.Health.Caching.DemandLoadable`2
  langs:
  - csharp
  - vb
  name: TryExpire(TimeSpan, ref DateTime)
  nameWithType: DemandLoadable<K, V>.TryExpire(TimeSpan, ref DateTime)
  fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.TryExpire(System.TimeSpan, ref System.DateTime)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/Cache/DemandLoadable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: TryExpire
    path: ../Microsoft.Health.Utility/search/Cache/DemandLoadable.cs
    startLine: 170
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Caching
  summary: "\nIf the given item has reached its ttd, wipe it, and update the ttd with the new TTL\n"
  example: []
  syntax:
    content: public bool TryExpire(TimeSpan ttl, ref DateTime ttd)
    content.vb: Public Function TryExpire(ttl As TimeSpan, ByRef ttd As Date) As Boolean
    parameters:
    - id: ttl
      type: System.TimeSpan
    - id: ttd
      type: System.DateTime
    return:
      type: System.Boolean
  overload: Microsoft.Health.Caching.DemandLoadable`2.TryExpire*
  nameWithType.vb: DemandLoadable(Of K, V).TryExpire(TimeSpan, ByRef DateTime)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of K, V).TryExpire(System.TimeSpan, ByRef System.DateTime)
  name.vb: TryExpire(TimeSpan, ByRef DateTime)
- uid: Microsoft.Health.Caching.DemandLoadable`2.op_Implicit(Microsoft.Health.Caching.DemandLoadable{`0,`1})~`1
  commentId: M:Microsoft.Health.Caching.DemandLoadable`2.op_Implicit(Microsoft.Health.Caching.DemandLoadable{`0,`1})~`1
  id: op_Implicit(Microsoft.Health.Caching.DemandLoadable{`0,`1})~`1
  parent: Microsoft.Health.Caching.DemandLoadable`2
  langs:
  - csharp
  - vb
  name: Implicit(DemandLoadable<K, V> to V)
  nameWithType: DemandLoadable<K, V>.Implicit(DemandLoadable<K, V> to V)
  fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.Implicit(Microsoft.Health.Caching.DemandLoadable<K, V> to V)
  type: Operator
  source:
    remote:
      path: Microsoft.Health.Utility/search/Cache/DemandLoadable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: op_Implicit
    path: ../Microsoft.Health.Utility/search/Cache/DemandLoadable.cs
    startLine: 195
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Caching
  summary: "\nImplicit type casting, for syntatic sugar\n"
  example: []
  syntax:
    content: public static implicit operator V(DemandLoadable<K, V> value)
    content.vb: Public Shared Widening Operator CType(value As DemandLoadable(Of K, V)) As V
    parameters:
    - id: value
      type: Microsoft.Health.Caching.DemandLoadable`2
    return:
      type: '{V}'
  overload: Microsoft.Health.Caching.DemandLoadable`2.op_Implicit*
  nameWithType.vb: DemandLoadable(Of K, V).Widening(DemandLoadable(Of K, V) to V)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of K, V).Widening(Microsoft.Health.Caching.DemandLoadable(Of K, V) to V)
  name.vb: Widening(DemandLoadable(Of K, V) to V)
- uid: Microsoft.Health.Caching.DemandLoadable`2.OnLoading
  commentId: M:Microsoft.Health.Caching.DemandLoadable`2.OnLoading
  id: OnLoading
  parent: Microsoft.Health.Caching.DemandLoadable`2
  langs:
  - csharp
  - vb
  name: OnLoading()
  nameWithType: DemandLoadable<K, V>.OnLoading()
  fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.OnLoading()
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/Cache/DemandLoadable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: OnLoading
    path: ../Microsoft.Health.Utility/search/Cache/DemandLoadable.cs
    startLine: 205
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Caching
  summary: "\n\n"
  example: []
  syntax:
    content: protected virtual void OnLoading()
    content.vb: Protected Overridable Sub OnLoading
  overload: Microsoft.Health.Caching.DemandLoadable`2.OnLoading*
  nameWithType.vb: DemandLoadable(Of K, V).OnLoading()
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of K, V).OnLoading()
- uid: Microsoft.Health.Caching.DemandLoadable`2.OnLoaded(`1)
  commentId: M:Microsoft.Health.Caching.DemandLoadable`2.OnLoaded(`1)
  id: OnLoaded(`1)
  parent: Microsoft.Health.Caching.DemandLoadable`2
  langs:
  - csharp
  - vb
  name: OnLoaded(V)
  nameWithType: DemandLoadable<K, V>.OnLoaded(V)
  fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.OnLoaded(V)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/Cache/DemandLoadable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: OnLoaded
    path: ../Microsoft.Health.Utility/search/Cache/DemandLoadable.cs
    startLine: 211
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Caching
  summary: "\nOverride to post-process any loaded values\n"
  example: []
  syntax:
    content: protected virtual V OnLoaded(V value)
    content.vb: Protected Overridable Function OnLoaded(value As V) As V
    parameters:
    - id: value
      type: '{V}'
    return:
      type: '{V}'
  overload: Microsoft.Health.Caching.DemandLoadable`2.OnLoaded*
  nameWithType.vb: DemandLoadable(Of K, V).OnLoaded(V)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of K, V).OnLoaded(V)
- uid: Microsoft.Health.Caching.DemandLoadable`2.OnUnload(`1)
  commentId: M:Microsoft.Health.Caching.DemandLoadable`2.OnUnload(`1)
  id: OnUnload(`1)
  parent: Microsoft.Health.Caching.DemandLoadable`2
  langs:
  - csharp
  - vb
  name: OnUnload(V)
  nameWithType: DemandLoadable<K, V>.OnUnload(V)
  fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.OnUnload(V)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/search/Cache/DemandLoadable.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: OnUnload
    path: ../Microsoft.Health.Utility/search/Cache/DemandLoadable.cs
    startLine: 220
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Caching
  summary: "\n\n"
  example: []
  syntax:
    content: protected virtual void OnUnload(V value)
    content.vb: Protected Overridable Sub OnUnload(value As V)
    parameters:
    - id: value
      type: '{V}'
      description: ''
  overload: Microsoft.Health.Caching.DemandLoadable`2.OnUnload*
  nameWithType.vb: DemandLoadable(Of K, V).OnUnload(V)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of K, V).OnUnload(V)
references:
- uid: Microsoft.Health.Caching
  commentId: N:Microsoft.Health.Caching
  isExternal: false
  name: Microsoft.Health.Caching
  nameWithType: Microsoft.Health.Caching
  fullName: Microsoft.Health.Caching
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.Caching.IDemandLoadable
  commentId: T:Microsoft.Health.Caching.IDemandLoadable
  parent: Microsoft.Health.Caching
  isExternal: false
  name: IDemandLoadable
  nameWithType: IDemandLoadable
  fullName: Microsoft.Health.Caching.IDemandLoadable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Caching.DemandLoadable`2.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<DemandLoadable<K, V>>()
  nameWithType: TypeHelper.ValueOrDbNull<DemandLoadable<K, V>>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Caching.DemandLoadable<K, V>>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of DemandLoadable(Of K, V))()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Caching.DemandLoadable(Of K, V))()
  name.vb: ValueOrDbNull(Of DemandLoadable(Of K, V))()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<DemandLoadable<K, V>>
    nameWithType: TypeHelper.ValueOrDbNull<DemandLoadable<K, V>>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Caching.DemandLoadable<K, V>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of DemandLoadable(Of K, V))
    nameWithType: TypeHelper.ValueOrDbNull(Of DemandLoadable(Of K, V))
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Caching.DemandLoadable(Of K, V))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: System.EventHandler
  commentId: T:System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: Microsoft.Health.Caching.DemandLoadable`2.#ctor*
  commentId: Overload:Microsoft.Health.Caching.DemandLoadable`2.#ctor
  isExternal: false
  name: DemandLoadable
  nameWithType: DemandLoadable<K, V>.DemandLoadable
  fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.DemandLoadable
  nameWithType.vb: DemandLoadable(Of K, V).DemandLoadable
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of K, V).DemandLoadable
- uid: System.Func{{K},{V}}
  commentId: T:System.Func{`0,`1}
  parent: System
  definition: System.Func`2
  name: Func<K, V>
  nameWithType: Func<K, V>
  fullName: System.Func<K, V>
  nameWithType.vb: Func(Of K, V)
  fullName.vb: System.Func(Of K, V)
  name.vb: Func(Of K, V)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: )
    nameWithType: )
    fullName: )
- uid: '{K}'
  commentId: '!:K'
  definition: K
  name: K
  nameWithType: K
  fullName: K
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: K
  isExternal: false
  name: K
  nameWithType: K
  fullName: K
- uid: Microsoft.Health.Caching.DemandLoadable`2.Key*
  commentId: Overload:Microsoft.Health.Caching.DemandLoadable`2.Key
  isExternal: false
  name: Key
  nameWithType: DemandLoadable<K, V>.Key
  fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.Key
  nameWithType.vb: DemandLoadable(Of K, V).Key
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of K, V).Key
- uid: Microsoft.Health.Caching.DemandLoadable`2.Value*
  commentId: Overload:Microsoft.Health.Caching.DemandLoadable`2.Value
  isExternal: false
  name: Value
  nameWithType: DemandLoadable<K, V>.Value
  fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.Value
  nameWithType.vb: DemandLoadable(Of K, V).Value
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of K, V).Value
- uid: '{V}'
  commentId: '!:V'
  definition: V
  name: V
  nameWithType: V
  fullName: V
- uid: V
  isExternal: false
  name: V
  nameWithType: V
  fullName: V
- uid: Microsoft.Health.Caching.DemandLoadable`2.HasValue*
  commentId: Overload:Microsoft.Health.Caching.DemandLoadable`2.HasValue
  isExternal: false
  name: HasValue
  nameWithType: DemandLoadable<K, V>.HasValue
  fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.HasValue
  nameWithType.vb: DemandLoadable(Of K, V).HasValue
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of K, V).HasValue
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Health.Caching.DemandLoadable`2.Load*
  commentId: Overload:Microsoft.Health.Caching.DemandLoadable`2.Load
  isExternal: false
  name: Load
  nameWithType: DemandLoadable<K, V>.Load
  fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.Load
  nameWithType.vb: DemandLoadable(Of K, V).Load
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of K, V).Load
- uid: Microsoft.Health.Caching.IDemandLoadable.Load(System.Boolean)
  commentId: M:Microsoft.Health.Caching.IDemandLoadable.Load(System.Boolean)
  parent: Microsoft.Health.Caching.IDemandLoadable
  isExternal: true
  name: Load(Boolean)
  nameWithType: IDemandLoadable.Load(Boolean)
  fullName: Microsoft.Health.Caching.IDemandLoadable.Load(System.Boolean)
  spec.csharp:
  - uid: Microsoft.Health.Caching.IDemandLoadable.Load(System.Boolean)
    name: Load
    nameWithType: IDemandLoadable.Load
    fullName: Microsoft.Health.Caching.IDemandLoadable.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Caching.IDemandLoadable.Load(System.Boolean)
    name: Load
    nameWithType: IDemandLoadable.Load
    fullName: Microsoft.Health.Caching.IDemandLoadable.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Caching.DemandLoadable`2.Unload*
  commentId: Overload:Microsoft.Health.Caching.DemandLoadable`2.Unload
  isExternal: false
  name: Unload
  nameWithType: DemandLoadable<K, V>.Unload
  fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.Unload
  nameWithType.vb: DemandLoadable(Of K, V).Unload
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of K, V).Unload
- uid: Microsoft.Health.Caching.IDemandLoadable.Unload
  commentId: M:Microsoft.Health.Caching.IDemandLoadable.Unload
  parent: Microsoft.Health.Caching.IDemandLoadable
  isExternal: false
  name: Unload()
  nameWithType: IDemandLoadable.Unload()
  fullName: Microsoft.Health.Caching.IDemandLoadable.Unload()
  spec.csharp:
  - uid: Microsoft.Health.Caching.IDemandLoadable.Unload
    name: Unload
    nameWithType: IDemandLoadable.Unload
    fullName: Microsoft.Health.Caching.IDemandLoadable.Unload
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Caching.IDemandLoadable.Unload
    name: Unload
    nameWithType: IDemandLoadable.Unload
    fullName: Microsoft.Health.Caching.IDemandLoadable.Unload
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Caching.DemandLoadable`2.TryExpire*
  commentId: Overload:Microsoft.Health.Caching.DemandLoadable`2.TryExpire
  isExternal: false
  name: TryExpire
  nameWithType: DemandLoadable<K, V>.TryExpire
  fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.TryExpire
  nameWithType.vb: DemandLoadable(Of K, V).TryExpire
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of K, V).TryExpire
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Microsoft.Health.Caching.DemandLoadable`2.op_Implicit*
  commentId: Overload:Microsoft.Health.Caching.DemandLoadable`2.op_Implicit
  isExternal: false
  name: Implicit
  nameWithType: DemandLoadable<K, V>.Implicit
  fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.Implicit
  nameWithType.vb: DemandLoadable(Of K, V).Widening
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of K, V).Widening
  name.vb: Widening
- uid: Microsoft.Health.Caching.DemandLoadable`2
  commentId: T:Microsoft.Health.Caching.DemandLoadable`2
  parent: Microsoft.Health.Caching
  isExternal: false
  name: DemandLoadable<K, V>
  nameWithType: DemandLoadable<K, V>
  fullName: Microsoft.Health.Caching.DemandLoadable<K, V>
  nameWithType.vb: DemandLoadable(Of K, V)
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of K, V)
  name.vb: DemandLoadable(Of K, V)
  spec.csharp:
  - uid: Microsoft.Health.Caching.DemandLoadable`2
    name: DemandLoadable
    nameWithType: DemandLoadable
    fullName: Microsoft.Health.Caching.DemandLoadable
  - name: <
    nameWithType: <
    fullName: <
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Health.Caching.DemandLoadable`2
    name: DemandLoadable
    nameWithType: DemandLoadable
    fullName: Microsoft.Health.Caching.DemandLoadable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Caching.DemandLoadable`2.OnLoading*
  commentId: Overload:Microsoft.Health.Caching.DemandLoadable`2.OnLoading
  isExternal: false
  name: OnLoading
  nameWithType: DemandLoadable<K, V>.OnLoading
  fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.OnLoading
  nameWithType.vb: DemandLoadable(Of K, V).OnLoading
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of K, V).OnLoading
- uid: Microsoft.Health.Caching.DemandLoadable`2.OnLoaded*
  commentId: Overload:Microsoft.Health.Caching.DemandLoadable`2.OnLoaded
  isExternal: false
  name: OnLoaded
  nameWithType: DemandLoadable<K, V>.OnLoaded
  fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.OnLoaded
  nameWithType.vb: DemandLoadable(Of K, V).OnLoaded
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of K, V).OnLoaded
- uid: Microsoft.Health.Caching.DemandLoadable`2.OnUnload*
  commentId: Overload:Microsoft.Health.Caching.DemandLoadable`2.OnUnload
  isExternal: false
  name: OnUnload
  nameWithType: DemandLoadable<K, V>.OnUnload
  fullName: Microsoft.Health.Caching.DemandLoadable<K, V>.OnUnload
  nameWithType.vb: DemandLoadable(Of K, V).OnUnload
  fullName.vb: Microsoft.Health.Caching.DemandLoadable(Of K, V).OnUnload
