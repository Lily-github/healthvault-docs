### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.HealthRecordSearcher
  commentId: T:Microsoft.Health.HealthRecordSearcher
  id: HealthRecordSearcher
  parent: Microsoft.Health
  children:
  - Microsoft.Health.HealthRecordSearcher.#ctor(Microsoft.Health.HealthRecordAccessor)
  - Microsoft.Health.HealthRecordSearcher.Filters
  - Microsoft.Health.HealthRecordSearcher.GetMatchingItems
  - Microsoft.Health.HealthRecordSearcher.GetMatchingItemsRaw
  - Microsoft.Health.HealthRecordSearcher.GetMatchingItemsReader
  - Microsoft.Health.HealthRecordSearcher.GetSingleItem(System.Guid,Microsoft.Health.HealthRecordItemSections)
  - Microsoft.Health.HealthRecordSearcher.GetTransformedItems(System.String)
  - Microsoft.Health.HealthRecordSearcher.Record
  langs:
  - csharp
  - vb
  name: HealthRecordSearcher
  nameWithType: HealthRecordSearcher
  fullName: Microsoft.Health.HealthRecordSearcher
  type: Class
  source:
    remote:
      path: Microsoft.Health/HealthRecordSearcher.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: HealthRecordSearcher
    path: ../Microsoft.Health/HealthRecordSearcher.cs
    startLine: 24
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nSearches for health record items in HealthVault records.\n"
  remarks: "\nThis class wraps up the logic for constructing a \"GetThings\" query\nagainst the HealthVault service.  It generates the necessary XML to \ncall the \"GetThings\" and retrieve health record items that match the specified\ncriteria.\n"
  example: []
  syntax:
    content: public class HealthRecordSearcher
    content.vb: Public Class HealthRecordSearcher
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.HealthRecordSearcher.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.HealthRecordSearcher.#ctor(Microsoft.Health.HealthRecordAccessor)
  commentId: M:Microsoft.Health.HealthRecordSearcher.#ctor(Microsoft.Health.HealthRecordAccessor)
  id: '#ctor(Microsoft.Health.HealthRecordAccessor)'
  parent: Microsoft.Health.HealthRecordSearcher
  langs:
  - csharp
  - vb
  name: HealthRecordSearcher(HealthRecordAccessor)
  nameWithType: HealthRecordSearcher.HealthRecordSearcher(HealthRecordAccessor)
  fullName: Microsoft.Health.HealthRecordSearcher.HealthRecordSearcher(Microsoft.Health.HealthRecordAccessor)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health/HealthRecordSearcher.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health/HealthRecordSearcher.cs
    startLine: 35
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Health.HealthRecordSearcher\" data-throw-if-not-resolved=\"false\"></xref> \nclass with the default parameters.\n"
  example: []
  syntax:
    content: public HealthRecordSearcher(HealthRecordAccessor record)
    content.vb: Public Sub New(record As HealthRecordAccessor)
    parameters:
    - id: record
      type: Microsoft.Health.HealthRecordAccessor
  overload: Microsoft.Health.HealthRecordSearcher.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe <span class=\"paramref\">record</span> parameter is <strong>null</strong>.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthRecordSearcher.Record
  commentId: P:Microsoft.Health.HealthRecordSearcher.Record
  id: Record
  parent: Microsoft.Health.HealthRecordSearcher
  langs:
  - csharp
  - vb
  name: Record
  nameWithType: HealthRecordSearcher.Record
  fullName: Microsoft.Health.HealthRecordSearcher.Record
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthRecordSearcher.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Record
    path: ../Microsoft.Health/HealthRecordSearcher.cs
    startLine: 55
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets the health record that is being searched for health record items.\n"
  remarks: "\nThe authenticated person must have \n<xref href=\"Microsoft.Health.HealthRecordItemPermissions.Read\" data-throw-if-not-resolved=\"false\"></xref> access rights to the\nhealth record to get results from the query.\n"
  example: []
  syntax:
    content: public HealthRecordAccessor Record { get; }
    content.vb: Public ReadOnly Property Record As HealthRecordAccessor
    parameters: []
    return:
      type: Microsoft.Health.HealthRecordAccessor
      description: "\nA <xref href=\"Microsoft.Health.HealthRecordAccessor\" data-throw-if-not-resolved=\"false\"></xref> representing the record.\n"
  overload: Microsoft.Health.HealthRecordSearcher.Record*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.HealthRecordSearcher.Filters
  commentId: P:Microsoft.Health.HealthRecordSearcher.Filters
  id: Filters
  parent: Microsoft.Health.HealthRecordSearcher
  langs:
  - csharp
  - vb
  name: Filters
  nameWithType: HealthRecordSearcher.Filters
  fullName: Microsoft.Health.HealthRecordSearcher.Filters
  type: Property
  source:
    remote:
      path: Microsoft.Health/HealthRecordSearcher.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Filters
    path: ../Microsoft.Health/HealthRecordSearcher.cs
    startLine: 70
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets the filters associated with the search.\n"
  remarks: "\nTo add a search filter, call the Add method of the\nreturned collection.\n"
  example: []
  syntax:
    content: public Collection<HealthRecordFilter> Filters { get; }
    content.vb: Public ReadOnly Property Filters As Collection(Of HealthRecordFilter)
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{Microsoft.Health.HealthRecordFilter}
  overload: Microsoft.Health.HealthRecordSearcher.Filters*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.HealthRecordSearcher.GetMatchingItems
  commentId: M:Microsoft.Health.HealthRecordSearcher.GetMatchingItems
  id: GetMatchingItems
  parent: Microsoft.Health.HealthRecordSearcher
  langs:
  - csharp
  - vb
  name: GetMatchingItems()
  nameWithType: HealthRecordSearcher.GetMatchingItems()
  fullName: Microsoft.Health.HealthRecordSearcher.GetMatchingItems()
  type: Method
  source:
    remote:
      path: Microsoft.Health/HealthRecordSearcher.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetMatchingItems
    path: ../Microsoft.Health/HealthRecordSearcher.cs
    startLine: 98
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets the health record items that match the filters as specified by \nthe properties of this class.\n"
  remarks: "\nThis method accesses the HealthVault service across the network.\n"
  example: []
  syntax:
    content: public ReadOnlyCollection<HealthRecordItemCollection> GetMatchingItems()
    content.vb: Public Function GetMatchingItems As ReadOnlyCollection(Of HealthRecordItemCollection)
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.Health.HealthRecordItemCollection}
      description: "\nA collection of health record items that match the applied filters.\n"
  overload: Microsoft.Health.HealthRecordSearcher.GetMatchingItems*
  exceptions:
  - type: Microsoft.Health.HealthServiceException
    commentId: T:Microsoft.Health.HealthServiceException
    description: "\nThe response from the server was anything but \n<xref href=\"Microsoft.Health.HealthServiceStatusCode.Ok\" data-throw-if-not-resolved=\"false\"></xref>.\n-or-\n<xref href=\"Microsoft.Health.HealthRecordSearcher.Filters\" data-throw-if-not-resolved=\"false\"></xref> is empty\nor contains invalid filters.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthRecordSearcher.GetMatchingItemsReader
  commentId: M:Microsoft.Health.HealthRecordSearcher.GetMatchingItemsReader
  id: GetMatchingItemsReader
  parent: Microsoft.Health.HealthRecordSearcher
  langs:
  - csharp
  - vb
  name: GetMatchingItemsReader()
  nameWithType: HealthRecordSearcher.GetMatchingItemsReader()
  fullName: Microsoft.Health.HealthRecordSearcher.GetMatchingItemsReader()
  type: Method
  source:
    remote:
      path: Microsoft.Health/HealthRecordSearcher.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetMatchingItemsReader
    path: ../Microsoft.Health/HealthRecordSearcher.cs
    startLine: 120
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets the health record items that match the filters as specified by \nthe properties of this class.\n"
  remarks: "\nThis method accesses the HealthVault service across the network.\n<br /><br />\nThis method is typically used when the calling application wants to\nhandle the raw health record item XML directly instead of using the \nobject model.\n"
  example: []
  syntax:
    content: public XmlReader GetMatchingItemsReader()
    content.vb: Public Function GetMatchingItemsReader As XmlReader
    return:
      type: System.Xml.XmlReader
      description: "\nAn XmlReader representing the raw results of the search.\n"
  overload: Microsoft.Health.HealthRecordSearcher.GetMatchingItemsReader*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthRecordSearcher.GetMatchingItemsRaw
  commentId: M:Microsoft.Health.HealthRecordSearcher.GetMatchingItemsRaw
  id: GetMatchingItemsRaw
  parent: Microsoft.Health.HealthRecordSearcher
  langs:
  - csharp
  - vb
  name: GetMatchingItemsRaw()
  nameWithType: HealthRecordSearcher.GetMatchingItemsRaw()
  fullName: Microsoft.Health.HealthRecordSearcher.GetMatchingItemsRaw()
  type: Method
  source:
    remote:
      path: Microsoft.Health/HealthRecordSearcher.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetMatchingItemsRaw
    path: ../Microsoft.Health/HealthRecordSearcher.cs
    startLine: 142
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets the health record items that match the filters as specified by \nthe properties of this class.\n"
  remarks: "\nThis method accesses the HealthVault service across the network.\n<br /><br />\nThis method is typically used when the calling application wants to\nhandle the raw health record item XML directly instead of using the \nobject model.\n"
  example: []
  syntax:
    content: public XPathNavigator GetMatchingItemsRaw()
    content.vb: Public Function GetMatchingItemsRaw As XPathNavigator
    return:
      type: System.Xml.XPath.XPathNavigator
      description: "\nAn XPathNavigator representing the raw results of the search.\n"
  overload: Microsoft.Health.HealthRecordSearcher.GetMatchingItemsRaw*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthRecordSearcher.GetSingleItem(System.Guid,Microsoft.Health.HealthRecordItemSections)
  commentId: M:Microsoft.Health.HealthRecordSearcher.GetSingleItem(System.Guid,Microsoft.Health.HealthRecordItemSections)
  id: GetSingleItem(System.Guid,Microsoft.Health.HealthRecordItemSections)
  parent: Microsoft.Health.HealthRecordSearcher
  langs:
  - csharp
  - vb
  name: GetSingleItem(Guid, HealthRecordItemSections)
  nameWithType: HealthRecordSearcher.GetSingleItem(Guid, HealthRecordItemSections)
  fullName: Microsoft.Health.HealthRecordSearcher.GetSingleItem(System.Guid, Microsoft.Health.HealthRecordItemSections)
  type: Method
  source:
    remote:
      path: Microsoft.Health/HealthRecordSearcher.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetSingleItem
    path: ../Microsoft.Health/HealthRecordSearcher.cs
    startLine: 180
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets a single health record item from the associated record by \nusing the item identifier.\n"
  remarks: "\nThis method accesses the HealthVault service across the network.\n<br /><br />\nAll filters are cleared and replaced with a single filter\nfor the specified item.\n"
  example: []
  syntax:
    content: public HealthRecordItem GetSingleItem(Guid itemId, HealthRecordItemSections sections)
    content.vb: Public Function GetSingleItem(itemId As Guid, sections As HealthRecordItemSections) As HealthRecordItem
    parameters:
    - id: itemId
      type: System.Guid
      description: "\nThe unique identifier for the health record item.\n"
    - id: sections
      type: Microsoft.Health.HealthRecordItemSections
      description: "\nThe data sections of the health record item that should be retrieved.\n"
    return:
      type: Microsoft.Health.HealthRecordItem
      description: "\nAn instance of a <xref href=\"Microsoft.Health.HealthRecordItem\" data-throw-if-not-resolved=\"false\"></xref> \nrepresenting the health record item with the specified identifier.\n"
  overload: Microsoft.Health.HealthRecordSearcher.GetSingleItem*
  exceptions:
  - type: Microsoft.Health.HealthServiceException
    commentId: T:Microsoft.Health.HealthServiceException
    description: "\nThe server returned something other than a code of \nHealthServiceStatusCode.OK, or the result count did not equal one (1).\n-or-\n<xref href=\"Microsoft.Health.HealthRecordSearcher.Filters\" data-throw-if-not-resolved=\"false\"></xref> is empty\nor contains invalid filters.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.HealthRecordSearcher.GetTransformedItems(System.String)
  commentId: M:Microsoft.Health.HealthRecordSearcher.GetTransformedItems(System.String)
  id: GetTransformedItems(System.String)
  parent: Microsoft.Health.HealthRecordSearcher
  langs:
  - csharp
  - vb
  name: GetTransformedItems(String)
  nameWithType: HealthRecordSearcher.GetTransformedItems(String)
  fullName: Microsoft.Health.HealthRecordSearcher.GetTransformedItems(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Health/HealthRecordSearcher.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: GetTransformedItems
    path: ../Microsoft.Health/HealthRecordSearcher.cs
    startLine: 301
  assemblies:
  - Microsoft.Health
  namespace: Microsoft.Health
  summary: "\nGets the health record items specified by the \n<xref href=\"Microsoft.Health.HealthRecordSearcher.Filters\" data-throw-if-not-resolved=\"false\"></xref> and runs them through the specified \ntransform.\n"
  remarks: "\nThis method accesses the HealthVault service across the network.\n<br /><br />\nAny call to HealthVault may specify a transform to be run on the\nresponse XML. The transform can be specified as a XSL fragment or\na well-known transform tag provided by the HealthVault service. If a\nXSL fragment is specified, it gets compiled and cached on the server.\n<br />\n<br />\nA final-xsl is useful when you want to convert the result from XML to\nHTML so that you can display the result directly in a web page.\nYou may also use it to generate other data formats like CCR, CCD, CSV,\nRSS, etc.\n<br />\n<br />\nTransform fragments cannot contain embedded script. The following set\nof parameters are passed to all final-xsl transforms:<br />\n<ul>\n<li>currentDateTimeUtc - the date and time just before the transform \nstarted executing</li>\n<li>requestingApplicationName - the name of the application that\nmade the request to HealthVault.</li>\n<li>countryCode - the ISO 3166 country code from the request.</li>\n<li>languageCode - the ISO 639-1 language code from the request.</li>\n<li>personName - the name of the person making the request.</li>\n<li>recordName - if the request identified a HealthVault record to \nbe used, this parameter contains the name of that record.</li>\n</ul>\n"
  example: []
  syntax:
    content: public string GetTransformedItems(string transform)
    content.vb: Public Function GetTransformedItems(transform As String) As String
    parameters:
    - id: transform
      type: System.String
      description: "\nA URL to a transform to run on the resulting XML. This can be\na fully-qualified URL or the name of one of the standard XSLs\nprovided by the HealthVault system.\n"
    return:
      type: System.String
      description: "\nThe string resulting from performing the specified transform on\nthe XML representation of the items.\n"
  overload: Microsoft.Health.HealthRecordSearcher.GetTransformedItems*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe <span class=\"paramref\">transform</span> parameter is <strong>null</strong> or empty.\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<xref href=\"Microsoft.Health.HealthRecordView.Sections\" data-throw-if-not-resolved=\"false\"></xref> does not\ncontain the XML section in the view.\n"
  - type: Microsoft.Health.HealthServiceException
    commentId: T:Microsoft.Health.HealthServiceException
    description: "\nThere is a failure retrieving the items.\n-or-\nNo filters have been specified.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Health
  commentId: N:Microsoft.Health
  isExternal: false
  name: Microsoft.Health
  nameWithType: Microsoft.Health
  fullName: Microsoft.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordSearcher.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<HealthRecordSearcher>()
  nameWithType: TypeHelper.ValueOrDbNull<HealthRecordSearcher>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.HealthRecordSearcher>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of HealthRecordSearcher)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.HealthRecordSearcher)()
  name.vb: ValueOrDbNull(Of HealthRecordSearcher)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<HealthRecordSearcher>
    nameWithType: TypeHelper.ValueOrDbNull<HealthRecordSearcher>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.HealthRecordSearcher>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of HealthRecordSearcher)
    nameWithType: TypeHelper.ValueOrDbNull(Of HealthRecordSearcher)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.HealthRecordSearcher)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: Microsoft.Health.HealthRecordSearcher
  commentId: T:Microsoft.Health.HealthRecordSearcher
  parent: Microsoft.Health
  isExternal: false
  name: HealthRecordSearcher
  nameWithType: HealthRecordSearcher
  fullName: Microsoft.Health.HealthRecordSearcher
- uid: Microsoft.Health.HealthRecordSearcher.#ctor*
  commentId: Overload:Microsoft.Health.HealthRecordSearcher.#ctor
  isExternal: false
  name: HealthRecordSearcher
  nameWithType: HealthRecordSearcher.HealthRecordSearcher
  fullName: Microsoft.Health.HealthRecordSearcher.HealthRecordSearcher
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: Microsoft.Health.HealthRecordAccessor
  commentId: T:Microsoft.Health.HealthRecordAccessor
  parent: Microsoft.Health
  isExternal: false
  name: HealthRecordAccessor
  nameWithType: HealthRecordAccessor
  fullName: Microsoft.Health.HealthRecordAccessor
- uid: Microsoft.Health.HealthRecordItemPermissions.Read
  commentId: F:Microsoft.Health.HealthRecordItemPermissions.Read
- uid: Microsoft.Health.HealthRecordSearcher.Record*
  commentId: Overload:Microsoft.Health.HealthRecordSearcher.Record
  isExternal: false
  name: Record
  nameWithType: HealthRecordSearcher.Record
  fullName: Microsoft.Health.HealthRecordSearcher.Record
- uid: Microsoft.Health.HealthRecordSearcher.Filters*
  commentId: Overload:Microsoft.Health.HealthRecordSearcher.Filters
  isExternal: false
  name: Filters
  nameWithType: HealthRecordSearcher.Filters
  fullName: Microsoft.Health.HealthRecordSearcher.Filters
- uid: System.Collections.ObjectModel.Collection{Microsoft.Health.HealthRecordFilter}
  commentId: T:System.Collections.ObjectModel.Collection{Microsoft.Health.HealthRecordFilter}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<HealthRecordFilter>
  nameWithType: Collection<HealthRecordFilter>
  fullName: System.Collections.ObjectModel.Collection<Microsoft.Health.HealthRecordFilter>
  nameWithType.vb: Collection(Of HealthRecordFilter)
  fullName.vb: System.Collections.ObjectModel.Collection(Of Microsoft.Health.HealthRecordFilter)
  name.vb: Collection(Of HealthRecordFilter)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.HealthRecordFilter
    name: HealthRecordFilter
    nameWithType: HealthRecordFilter
    fullName: Microsoft.Health.HealthRecordFilter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.HealthRecordFilter
    name: HealthRecordFilter
    nameWithType: HealthRecordFilter
    fullName: Microsoft.Health.HealthRecordFilter
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1
  commentId: T:System.Collections.ObjectModel.Collection`1
  isExternal: true
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  nameWithType.vb: Collection(Of T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T)
  name.vb: Collection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: Microsoft.Health.HealthServiceStatusCode.Ok
  commentId: F:Microsoft.Health.HealthServiceStatusCode.Ok
- uid: Microsoft.Health.HealthRecordSearcher.Filters
  commentId: P:Microsoft.Health.HealthRecordSearcher.Filters
- uid: Microsoft.Health.HealthRecordSearcher.GetMatchingItems*
  commentId: Overload:Microsoft.Health.HealthRecordSearcher.GetMatchingItems
  isExternal: false
  name: GetMatchingItems
  nameWithType: HealthRecordSearcher.GetMatchingItems
  fullName: Microsoft.Health.HealthRecordSearcher.GetMatchingItems
- uid: Microsoft.Health.HealthServiceException
  commentId: T:Microsoft.Health.HealthServiceException
  parent: Microsoft.Health
  isExternal: false
  name: HealthServiceException
  nameWithType: HealthServiceException
  fullName: Microsoft.Health.HealthServiceException
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.Health.HealthRecordItemCollection}
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.Health.HealthRecordItemCollection}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<HealthRecordItemCollection>
  nameWithType: ReadOnlyCollection<HealthRecordItemCollection>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.Health.HealthRecordItemCollection>
  nameWithType.vb: ReadOnlyCollection(Of HealthRecordItemCollection)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.Health.HealthRecordItemCollection)
  name.vb: ReadOnlyCollection(Of HealthRecordItemCollection)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.HealthRecordItemCollection
    name: HealthRecordItemCollection
    nameWithType: HealthRecordItemCollection
    fullName: Microsoft.Health.HealthRecordItemCollection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.HealthRecordItemCollection
    name: HealthRecordItemCollection
    nameWithType: HealthRecordItemCollection
    fullName: Microsoft.Health.HealthRecordItemCollection
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  nameWithType.vb: ReadOnlyCollection(Of T)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)
  name.vb: ReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.HealthRecordSearcher.GetMatchingItemsReader*
  commentId: Overload:Microsoft.Health.HealthRecordSearcher.GetMatchingItemsReader
  isExternal: false
  name: GetMatchingItemsReader
  nameWithType: HealthRecordSearcher.GetMatchingItemsReader
  fullName: Microsoft.Health.HealthRecordSearcher.GetMatchingItemsReader
- uid: System.Xml.XmlReader
  commentId: T:System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: Microsoft.Health.HealthRecordSearcher.GetMatchingItemsRaw*
  commentId: Overload:Microsoft.Health.HealthRecordSearcher.GetMatchingItemsRaw
  isExternal: false
  name: GetMatchingItemsRaw
  nameWithType: HealthRecordSearcher.GetMatchingItemsRaw
  fullName: Microsoft.Health.HealthRecordSearcher.GetMatchingItemsRaw
- uid: System.Xml.XPath.XPathNavigator
  commentId: T:System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: true
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: false
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: Microsoft.Health.HealthRecordItem
  commentId: T:Microsoft.Health.HealthRecordItem
  parent: Microsoft.Health
  isExternal: false
  name: HealthRecordItem
  nameWithType: HealthRecordItem
  fullName: Microsoft.Health.HealthRecordItem
- uid: Microsoft.Health.HealthRecordSearcher.GetSingleItem*
  commentId: Overload:Microsoft.Health.HealthRecordSearcher.GetSingleItem
  isExternal: false
  name: GetSingleItem
  nameWithType: HealthRecordSearcher.GetSingleItem
  fullName: Microsoft.Health.HealthRecordSearcher.GetSingleItem
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Microsoft.Health.HealthRecordItemSections
  commentId: T:Microsoft.Health.HealthRecordItemSections
  parent: Microsoft.Health
  isExternal: false
  name: HealthRecordItemSections
  nameWithType: HealthRecordItemSections
  fullName: Microsoft.Health.HealthRecordItemSections
- uid: Microsoft.Health.HealthRecordView.Sections
  commentId: P:Microsoft.Health.HealthRecordView.Sections
- uid: Microsoft.Health.HealthRecordSearcher.GetTransformedItems*
  commentId: Overload:Microsoft.Health.HealthRecordSearcher.GetTransformedItems
  isExternal: false
  name: GetTransformedItems
  nameWithType: HealthRecordSearcher.GetTransformedItems
  fullName: Microsoft.Health.HealthRecordSearcher.GetTransformedItems
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
