### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Utility.HttpContentRange
  commentId: T:Microsoft.Health.Utility.HttpContentRange
  id: HttpContentRange
  parent: Microsoft.Health.Utility
  children:
  - Microsoft.Health.Utility.HttpContentRange.#ctor(System.Int64,System.Int64)
  - Microsoft.Health.Utility.HttpContentRange.End
  - Microsoft.Health.Utility.HttpContentRange.Length
  - Microsoft.Health.Utility.HttpContentRange.MergeOverlappingRanges(System.Collections.Generic.IEnumerable{Microsoft.Health.Utility.HttpContentRange})
  - Microsoft.Health.Utility.HttpContentRange.RemoveUnsatisfiableRanges(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{Microsoft.Health.Utility.HttpContentRange,System.Boolean}},System.Int64)
  - Microsoft.Health.Utility.HttpContentRange.Start
  - Microsoft.Health.Utility.HttpContentRange.TryParseContentRanges(System.String,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{Microsoft.Health.Utility.HttpContentRange,System.Boolean}}@)
  langs:
  - csharp
  - vb
  name: HttpContentRange
  nameWithType: HttpContentRange
  fullName: Microsoft.Health.Utility.HttpContentRange
  type: Class
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/HttpContentRange.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: HttpContentRange
    path: ../Microsoft.Health.Utility/utilities/HttpContentRange.cs
    startLine: 16
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\nClass that represents a range within a targeted set of content.\n"
  example: []
  syntax:
    content: public class HttpContentRange
    content.vb: Public Class HttpContentRange
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  - System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - Microsoft.Health.Utility.HttpContentRange.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  - System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.Utility.HttpContentRange.#ctor(System.Int64,System.Int64)
  commentId: M:Microsoft.Health.Utility.HttpContentRange.#ctor(System.Int64,System.Int64)
  id: '#ctor(System.Int64,System.Int64)'
  parent: Microsoft.Health.Utility.HttpContentRange
  langs:
  - csharp
  - vb
  name: HttpContentRange(Int64, Int64)
  nameWithType: HttpContentRange.HttpContentRange(Int64, Int64)
  fullName: Microsoft.Health.Utility.HttpContentRange.HttpContentRange(System.Int64, System.Int64)
  type: Constructor
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/HttpContentRange.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: .ctor
    path: ../Microsoft.Health.Utility/utilities/HttpContentRange.cs
    startLine: 43
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\n\n"
  example: []
  syntax:
    content: public HttpContentRange(long start, long end)
    content.vb: Public Sub New(start As Long, end As Long)
    parameters:
    - id: start
      type: System.Int64
      description: ''
    - id: end
      type: System.Int64
      description: ''
  overload: Microsoft.Health.Utility.HttpContentRange.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.HttpContentRange.Start
  commentId: P:Microsoft.Health.Utility.HttpContentRange.Start
  id: Start
  parent: Microsoft.Health.Utility.HttpContentRange
  langs:
  - csharp
  - vb
  name: Start
  nameWithType: HttpContentRange.Start
  fullName: Microsoft.Health.Utility.HttpContentRange.Start
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/HttpContentRange.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Start
    path: ../Microsoft.Health.Utility/utilities/HttpContentRange.cs
    startLine: 52
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\nInt64 that represents the start index of the range.\n"
  example: []
  syntax:
    content: public long Start { get; set; }
    content.vb: Public Property Start As Long
    parameters: []
    return:
      type: System.Int64
  overload: Microsoft.Health.Utility.HttpContentRange.Start*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.HttpContentRange.End
  commentId: P:Microsoft.Health.Utility.HttpContentRange.End
  id: End
  parent: Microsoft.Health.Utility.HttpContentRange
  langs:
  - csharp
  - vb
  name: End
  nameWithType: HttpContentRange.End
  fullName: Microsoft.Health.Utility.HttpContentRange.End
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/HttpContentRange.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: End
    path: ../Microsoft.Health.Utility/utilities/HttpContentRange.cs
    startLine: 57
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\nInt64 that represents the end index of the range.\n"
  example: []
  syntax:
    content: public long End { get; set; }
    content.vb: Public Property End As Long
    parameters: []
    return:
      type: System.Int64
  overload: Microsoft.Health.Utility.HttpContentRange.End*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Utility.HttpContentRange.Length
  commentId: P:Microsoft.Health.Utility.HttpContentRange.Length
  id: Length
  parent: Microsoft.Health.Utility.HttpContentRange
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: HttpContentRange.Length
  fullName: Microsoft.Health.Utility.HttpContentRange.Length
  type: Property
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/HttpContentRange.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: Length
    path: ../Microsoft.Health.Utility/utilities/HttpContentRange.cs
    startLine: 62
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  summary: "\n\n"
  example: []
  syntax:
    content: public long Length { get; }
    content.vb: Public ReadOnly Property Length As Long
    parameters: []
    return:
      type: System.Int64
  overload: Microsoft.Health.Utility.HttpContentRange.Length*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Utility.HttpContentRange.TryParseContentRanges(System.String,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{Microsoft.Health.Utility.HttpContentRange,System.Boolean}}@)
  commentId: M:Microsoft.Health.Utility.HttpContentRange.TryParseContentRanges(System.String,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{Microsoft.Health.Utility.HttpContentRange,System.Boolean}}@)
  id: TryParseContentRanges(System.String,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{Microsoft.Health.Utility.HttpContentRange,System.Boolean}}@)
  parent: Microsoft.Health.Utility.HttpContentRange
  langs:
  - csharp
  - vb
  name: TryParseContentRanges(String, out List<KeyValuePair<HttpContentRange, Boolean>>)
  nameWithType: HttpContentRange.TryParseContentRanges(String, out List<KeyValuePair<HttpContentRange, Boolean>>)
  fullName: Microsoft.Health.Utility.HttpContentRange.TryParseContentRanges(System.String, out System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<Microsoft.Health.Utility.HttpContentRange, System.Boolean>>)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/HttpContentRange.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: TryParseContentRanges
    path: ../Microsoft.Health.Utility/utilities/HttpContentRange.cs
    startLine: 67
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  syntax:
    content: public static bool TryParseContentRanges(string rangeSpecifier, out List<KeyValuePair<HttpContentRange, bool>> ranges)
    content.vb: Public Shared Function TryParseContentRanges(rangeSpecifier As String, ByRef ranges As List(Of KeyValuePair(Of HttpContentRange, Boolean))) As Boolean
    parameters:
    - id: rangeSpecifier
      type: System.String
    - id: ranges
      type: System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{Microsoft.Health.Utility.HttpContentRange,System.Boolean}}
    return:
      type: System.Boolean
  overload: Microsoft.Health.Utility.HttpContentRange.TryParseContentRanges*
  nameWithType.vb: HttpContentRange.TryParseContentRanges(String, ByRef List(Of KeyValuePair(Of HttpContentRange, Boolean)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Health.Utility.HttpContentRange.TryParseContentRanges(System.String, ByRef System.Collections.Generic.List(Of System.Collections.Generic.KeyValuePair(Of Microsoft.Health.Utility.HttpContentRange, System.Boolean)))
  name.vb: TryParseContentRanges(String, ByRef List(Of KeyValuePair(Of HttpContentRange, Boolean)))
- uid: Microsoft.Health.Utility.HttpContentRange.RemoveUnsatisfiableRanges(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{Microsoft.Health.Utility.HttpContentRange,System.Boolean}},System.Int64)
  commentId: M:Microsoft.Health.Utility.HttpContentRange.RemoveUnsatisfiableRanges(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{Microsoft.Health.Utility.HttpContentRange,System.Boolean}},System.Int64)
  id: RemoveUnsatisfiableRanges(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{Microsoft.Health.Utility.HttpContentRange,System.Boolean}},System.Int64)
  parent: Microsoft.Health.Utility.HttpContentRange
  langs:
  - csharp
  - vb
  name: RemoveUnsatisfiableRanges(List<KeyValuePair<HttpContentRange, Boolean>>, Int64)
  nameWithType: HttpContentRange.RemoveUnsatisfiableRanges(List<KeyValuePair<HttpContentRange, Boolean>>, Int64)
  fullName: Microsoft.Health.Utility.HttpContentRange.RemoveUnsatisfiableRanges(System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<Microsoft.Health.Utility.HttpContentRange, System.Boolean>>, System.Int64)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/HttpContentRange.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: RemoveUnsatisfiableRanges
    path: ../Microsoft.Health.Utility/utilities/HttpContentRange.cs
    startLine: 133
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  syntax:
    content: public static List<HttpContentRange> RemoveUnsatisfiableRanges(List<KeyValuePair<HttpContentRange, bool>> ranges, long contentLength)
    content.vb: Public Shared Function RemoveUnsatisfiableRanges(ranges As List(Of KeyValuePair(Of HttpContentRange, Boolean)), contentLength As Long) As List(Of HttpContentRange)
    parameters:
    - id: ranges
      type: System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{Microsoft.Health.Utility.HttpContentRange,System.Boolean}}
    - id: contentLength
      type: System.Int64
    return:
      type: System.Collections.Generic.List{Microsoft.Health.Utility.HttpContentRange}
  overload: Microsoft.Health.Utility.HttpContentRange.RemoveUnsatisfiableRanges*
  nameWithType.vb: HttpContentRange.RemoveUnsatisfiableRanges(List(Of KeyValuePair(Of HttpContentRange, Boolean)), Int64)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Health.Utility.HttpContentRange.RemoveUnsatisfiableRanges(System.Collections.Generic.List(Of System.Collections.Generic.KeyValuePair(Of Microsoft.Health.Utility.HttpContentRange, System.Boolean)), System.Int64)
  name.vb: RemoveUnsatisfiableRanges(List(Of KeyValuePair(Of HttpContentRange, Boolean)), Int64)
- uid: Microsoft.Health.Utility.HttpContentRange.MergeOverlappingRanges(System.Collections.Generic.IEnumerable{Microsoft.Health.Utility.HttpContentRange})
  commentId: M:Microsoft.Health.Utility.HttpContentRange.MergeOverlappingRanges(System.Collections.Generic.IEnumerable{Microsoft.Health.Utility.HttpContentRange})
  id: MergeOverlappingRanges(System.Collections.Generic.IEnumerable{Microsoft.Health.Utility.HttpContentRange})
  parent: Microsoft.Health.Utility.HttpContentRange
  langs:
  - csharp
  - vb
  name: MergeOverlappingRanges(IEnumerable<HttpContentRange>)
  nameWithType: HttpContentRange.MergeOverlappingRanges(IEnumerable<HttpContentRange>)
  fullName: Microsoft.Health.Utility.HttpContentRange.MergeOverlappingRanges(System.Collections.Generic.IEnumerable<Microsoft.Health.Utility.HttpContentRange>)
  type: Method
  source:
    remote:
      path: Microsoft.Health.Utility/utilities/HttpContentRange.cs
      branch: personal/justhu/docfx
      repo: https://microsofthealth.visualstudio.com/DefaultCollection/Health/_git/healthvault-sdk
    id: MergeOverlappingRanges
    path: ../Microsoft.Health.Utility/utilities/HttpContentRange.cs
    startLine: 166
  assemblies:
  - Microsoft.Health.Utility
  namespace: Microsoft.Health.Utility
  syntax:
    content: public static List<HttpContentRange> MergeOverlappingRanges(IEnumerable<HttpContentRange> ranges)
    content.vb: Public Shared Function MergeOverlappingRanges(ranges As IEnumerable(Of HttpContentRange)) As List(Of HttpContentRange)
    parameters:
    - id: ranges
      type: System.Collections.Generic.IEnumerable{Microsoft.Health.Utility.HttpContentRange}
    return:
      type: System.Collections.Generic.List{Microsoft.Health.Utility.HttpContentRange}
  overload: Microsoft.Health.Utility.HttpContentRange.MergeOverlappingRanges*
  nameWithType.vb: HttpContentRange.MergeOverlappingRanges(IEnumerable(Of HttpContentRange))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Health.Utility.HttpContentRange.MergeOverlappingRanges(System.Collections.Generic.IEnumerable(Of Microsoft.Health.Utility.HttpContentRange))
  name.vb: MergeOverlappingRanges(IEnumerable(Of HttpContentRange))
references:
- uid: Microsoft.Health.Utility
  commentId: N:Microsoft.Health.Utility
  isExternal: false
  name: Microsoft.Health.Utility
  nameWithType: Microsoft.Health.Utility
  fullName: Microsoft.Health.Utility
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  name: SetProperty(String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String, System.Object())
  name.vb: SetProperty(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  parent: Microsoft.Health.Utility.IDispatchExtensions
  definition: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  name: InvokeMethod(String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String, System.Object())
  name.vb: InvokeMethod(String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.InvariantString.ToStringInvariant
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  parent: Microsoft.Health.Utility.InvariantString
  definition: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  name: ToStringInvariant()
  nameWithType: InvariantString.ToStringInvariant()
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant()
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.HttpContentRange.Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  parent: Microsoft.Health.Utility.TypeHelper
  definition: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  name: ValueOrDbNull<HttpContentRange>()
  nameWithType: TypeHelper.ValueOrDbNull<HttpContentRange>()
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Utility.HttpContentRange>()
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of HttpContentRange)()
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Utility.HttpContentRange)()
  name.vb: ValueOrDbNull(Of HttpContentRange)()
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull<HttpContentRange>
    nameWithType: TypeHelper.ValueOrDbNull<HttpContentRange>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<Microsoft.Health.Utility.HttpContentRange>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1
    name: ValueOrDbNull(Of HttpContentRange)
    nameWithType: TypeHelper.ValueOrDbNull(Of HttpContentRange)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of Microsoft.Health.Utility.HttpContentRange)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Health.Utility.WCXmlHelper.ToXml
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  parent: Microsoft.Health.Utility.WCXmlHelper
  definition: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  name: ToXml()
  nameWithType: WCXmlHelper.ToXml()
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml()
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
  isExternal: true
  name: SetProperty(Object, String, Object[])
  nameWithType: IDispatchExtensions.SetProperty(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.SetProperty(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object, System.String, System.Object())
  name.vb: SetProperty(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.SetProperty(System.Object,System.String,System.Object[])
    name: SetProperty
    nameWithType: IDispatchExtensions.SetProperty
    fullName: Microsoft.Health.Utility.IDispatchExtensions.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.IDispatchExtensions
  commentId: T:Microsoft.Health.Utility.IDispatchExtensions
  parent: Microsoft.Health.Utility
  isExternal: false
  name: IDispatchExtensions
  nameWithType: IDispatchExtensions
  fullName: Microsoft.Health.Utility.IDispatchExtensions
- uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeMethod(Object, String, Object[])
  nameWithType: IDispatchExtensions.InvokeMethod(Object, String, Object[])
  fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object[])
  nameWithType.vb: IDispatchExtensions.InvokeMethod(Object, String, Object())
  fullName.vb: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object, System.String, System.Object())
  name.vb: InvokeMethod(Object, String, Object())
  spec.csharp:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod(System.Object,System.String,System.Object[])
    name: InvokeMethod
    nameWithType: IDispatchExtensions.InvokeMethod
    fullName: Microsoft.Health.Utility.IDispatchExtensions.InvokeMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  commentId: M:Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  isExternal: true
  name: ToStringInvariant(Object)
  nameWithType: InvariantString.ToStringInvariant(Object)
  fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.InvariantString.ToStringInvariant(System.Object)
    name: ToStringInvariant
    nameWithType: InvariantString.ToStringInvariant
    fullName: Microsoft.Health.Utility.InvariantString.ToStringInvariant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.InvariantString
  commentId: T:Microsoft.Health.Utility.InvariantString
  parent: Microsoft.Health.Utility
  isExternal: false
  name: InvariantString
  nameWithType: InvariantString
  fullName: Microsoft.Health.Utility.InvariantString
- uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  commentId: M:Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
  isExternal: false
  name: ValueOrDbNull<T>(T)
  nameWithType: TypeHelper.ValueOrDbNull<T>(T)
  fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>(T)
  nameWithType.vb: TypeHelper.ValueOrDbNull(Of T)(T)
  fullName.vb: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)(T)
  name.vb: ValueOrDbNull(Of T)(T)
  spec.csharp:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull<T>
    nameWithType: TypeHelper.ValueOrDbNull<T>
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull``1(``0)
    name: ValueOrDbNull(Of T)
    nameWithType: TypeHelper.ValueOrDbNull(Of T)
    fullName: Microsoft.Health.Utility.TypeHelper.ValueOrDbNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.TypeHelper
  commentId: T:Microsoft.Health.Utility.TypeHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Microsoft.Health.Utility.TypeHelper
- uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  commentId: M:Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  isExternal: true
  name: ToXml(Object)
  nameWithType: WCXmlHelper.ToXml(Object)
  fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
  spec.csharp:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Utility.WCXmlHelper.ToXml(System.Object)
    name: ToXml
    nameWithType: WCXmlHelper.ToXml
    fullName: Microsoft.Health.Utility.WCXmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.WCXmlHelper
  commentId: T:Microsoft.Health.Utility.WCXmlHelper
  parent: Microsoft.Health.Utility
  isExternal: false
  name: WCXmlHelper
  nameWithType: WCXmlHelper
  fullName: Microsoft.Health.Utility.WCXmlHelper
- uid: Microsoft.Health.Utility.HttpContentRange.#ctor*
  commentId: Overload:Microsoft.Health.Utility.HttpContentRange.#ctor
  isExternal: false
  name: HttpContentRange
  nameWithType: HttpContentRange.HttpContentRange
  fullName: Microsoft.Health.Utility.HttpContentRange.HttpContentRange
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.Health.Utility.HttpContentRange.Start*
  commentId: Overload:Microsoft.Health.Utility.HttpContentRange.Start
  isExternal: false
  name: Start
  nameWithType: HttpContentRange.Start
  fullName: Microsoft.Health.Utility.HttpContentRange.Start
- uid: Microsoft.Health.Utility.HttpContentRange.End*
  commentId: Overload:Microsoft.Health.Utility.HttpContentRange.End
  isExternal: false
  name: End
  nameWithType: HttpContentRange.End
  fullName: Microsoft.Health.Utility.HttpContentRange.End
- uid: Microsoft.Health.Utility.HttpContentRange.Length*
  commentId: Overload:Microsoft.Health.Utility.HttpContentRange.Length
  isExternal: false
  name: Length
  nameWithType: HttpContentRange.Length
  fullName: Microsoft.Health.Utility.HttpContentRange.Length
- uid: Microsoft.Health.Utility.HttpContentRange.TryParseContentRanges*
  commentId: Overload:Microsoft.Health.Utility.HttpContentRange.TryParseContentRanges
  isExternal: false
  name: TryParseContentRanges
  nameWithType: HttpContentRange.TryParseContentRanges
  fullName: Microsoft.Health.Utility.HttpContentRange.TryParseContentRanges
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{Microsoft.Health.Utility.HttpContentRange,System.Boolean}}
  commentId: T:System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{Microsoft.Health.Utility.HttpContentRange,System.Boolean}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<KeyValuePair<HttpContentRange, Boolean>>
  nameWithType: List<KeyValuePair<HttpContentRange, Boolean>>
  fullName: System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<Microsoft.Health.Utility.HttpContentRange, System.Boolean>>
  nameWithType.vb: List(Of KeyValuePair(Of HttpContentRange, Boolean))
  fullName.vb: System.Collections.Generic.List(Of System.Collections.Generic.KeyValuePair(Of Microsoft.Health.Utility.HttpContentRange, System.Boolean))
  name.vb: List(Of KeyValuePair(Of HttpContentRange, Boolean))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.Utility.HttpContentRange
    name: HttpContentRange
    nameWithType: HttpContentRange
    fullName: Microsoft.Health.Utility.HttpContentRange
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.Utility.HttpContentRange
    name: HttpContentRange
    nameWithType: HttpContentRange
    fullName: Microsoft.Health.Utility.HttpContentRange
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Health.Utility.HttpContentRange.RemoveUnsatisfiableRanges*
  commentId: Overload:Microsoft.Health.Utility.HttpContentRange.RemoveUnsatisfiableRanges
  isExternal: false
  name: RemoveUnsatisfiableRanges
  nameWithType: HttpContentRange.RemoveUnsatisfiableRanges
  fullName: Microsoft.Health.Utility.HttpContentRange.RemoveUnsatisfiableRanges
- uid: System.Collections.Generic.List{Microsoft.Health.Utility.HttpContentRange}
  commentId: T:System.Collections.Generic.List{Microsoft.Health.Utility.HttpContentRange}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<HttpContentRange>
  nameWithType: List<HttpContentRange>
  fullName: System.Collections.Generic.List<Microsoft.Health.Utility.HttpContentRange>
  nameWithType.vb: List(Of HttpContentRange)
  fullName.vb: System.Collections.Generic.List(Of Microsoft.Health.Utility.HttpContentRange)
  name.vb: List(Of HttpContentRange)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.Utility.HttpContentRange
    name: HttpContentRange
    nameWithType: HttpContentRange
    fullName: Microsoft.Health.Utility.HttpContentRange
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.Utility.HttpContentRange
    name: HttpContentRange
    nameWithType: HttpContentRange
    fullName: Microsoft.Health.Utility.HttpContentRange
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Utility.HttpContentRange.MergeOverlappingRanges*
  commentId: Overload:Microsoft.Health.Utility.HttpContentRange.MergeOverlappingRanges
  isExternal: false
  name: MergeOverlappingRanges
  nameWithType: HttpContentRange.MergeOverlappingRanges
  fullName: Microsoft.Health.Utility.HttpContentRange.MergeOverlappingRanges
- uid: System.Collections.Generic.IEnumerable{Microsoft.Health.Utility.HttpContentRange}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.Health.Utility.HttpContentRange}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<HttpContentRange>
  nameWithType: IEnumerable<HttpContentRange>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Health.Utility.HttpContentRange>
  nameWithType.vb: IEnumerable(Of HttpContentRange)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Health.Utility.HttpContentRange)
  name.vb: IEnumerable(Of HttpContentRange)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.Utility.HttpContentRange
    name: HttpContentRange
    nameWithType: HttpContentRange
    fullName: Microsoft.Health.Utility.HttpContentRange
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.Utility.HttpContentRange
    name: HttpContentRange
    nameWithType: HttpContentRange
    fullName: Microsoft.Health.Utility.HttpContentRange
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
